[(unique, 0x100000fc, 8) COPY (ram, 0x47e6e8, 8)]
[(stack, 0xfffffffffffffff8, 8) COPY (ram, 0x47da38, 8)]
[(register, 0x40b0, 8) INT_AND (ram, 0x47e6e8, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x4143a8, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_SLESS (ram, 0x47efb8, 4) , (const, 0x0, 4)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x198, 4)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x198, 4)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x198, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x198, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x198, 4)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x198, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x198, 4)]
[ ---  CALL (ram, 0x40ee30, 8) , (unique, 0x100000d4, 8) , (ram, 0x47efb8, 4) , (const, 0x0, 8), (unique, 0x100000d4, 8) PTRSUB (const, 0x0, 8) , (const, 0x47e6b0, 8)]
[ ---  BRANCH (ram, 0x4141e8, 1)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(unique, 0x11f80, 8) PTRSUB (const, 0x0, 8) , (const, 0x47e720, 8)]
[(register, 0x4010, 8) COPY (const, 0x450000, 8)]
[(register, 0x40a0, 4) COPY (const, 0x0, 4)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x7b, 4), (ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x7b, 4), (ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x7b, 4), (ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x7b, 4), (ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x7b, 4), (ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x7b, 4), (ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010c, 8) , (unique, 0x30600, 4), (unique, 0x1000010c, 8) CAST (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (ram, 0x47e698, 8) , (const, 0x74, 8) , (const, 0x1, 8), (unique, 0x30600, 4) INT_OR (unique, 0x28500, 4) , (const, 0x2, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000104, 8), (unique, 0x10000104, 8) CAST (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (ram, 0x47e698, 8) , (const, 0x74, 8) , (const, 0x1, 8), (ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[ ---  BRANCH (ram, 0x414238, 1)]
[(ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[(ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(register, 0x40e0, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x40e0, 8)]
[(register, 0x40b0, 8) MULTIEQUAL (register, 0x40b0, 8) , (register, 0x40b0, 8)]
[(register, 0x40a8, 8) MULTIEQUAL (unique, 0x100000fc, 8) , (register, 0x40a8, 8)]
[(register, 0x40a0, 4) MULTIEQUAL (register, 0x40a0, 4) , (unique, 0x11b80, 4)]
[(register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8)]
[(register, 0x4008, 4) MULTIEQUAL (unique, 0x30600, 4) , (register, 0x4008, 4)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe8, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffff0, 8) COPY (const, 0x0, 8)]
[(ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[(ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(register, 0x4008, 4) MULTIEQUAL (register, 0x4008, 4) , (register, 0x4008, 4)]
[ ---  CBRANCH (ram, 0x414254, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x27480, 4) , (const, 0x0, 4), (unique, 0x27480, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000114, 8), (unique, 0x10000114, 8) CAST (register, 0x40e0, 8)]
[(unique, 0x3ec80, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x3ee00, 1), (unique, 0x3ee00, 1) CAST (unique, 0x1000011c, 1), (unique, 0x1000011c, 1) CALLOTHER (const, 0x3f, 4) , (register, 0x40e0, 8) , (const, 0x10, 1)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x98, 4)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x98, 4)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x98, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x98, 4)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x98, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x98, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000011d, 8) , (const, 0x1, 4), (unique, 0x1000011d, 8) CAST (register, 0x40e0, 8)]
[(unique, 0x3ec80, 1) CALLOTHER (const, 0x40, 4)]
[(ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[(ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(register, 0x4008, 4) INT_ZEXT (unique, 0x3ec80, 1), (unique, 0x3ec80, 1) MULTIEQUAL (unique, 0x3ec80, 1) , (unique, 0x3ec80, 1)]
[ ---  CBRANCH (ram, 0x414244, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x3ec80, 1) , (const, 0x0, 1), (unique, 0x3ec80, 1) MULTIEQUAL (unique, 0x3ec80, 1) , (unique, 0x3ec80, 1)]
[(ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[(ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(register, 0x4008, 4) MULTIEQUAL (register, 0x4008, 4) , (register, 0x4008, 4)]
[ ---  CBRANCH (ram, 0x41439c, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x27480, 4) , (const, 0x0, 4)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x195, 4)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x195, 4)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x195, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x195, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x195, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x195, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x195, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x195, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x195, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x195, 4)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x195, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x195, 4)]
[ ---  CALL (ram, 0x419848, 8) , (register, 0x40e0, 8) , (register, 0x4008, 4) , (register, 0x4010, 8)]
[ ---  BRANCH (ram, 0x41425c, 1)]
[ ---  CALL (ram, 0x40e458, 8) , (register, 0x40e0, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) PTRSUB (register, 0x8, 8) , (const, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x10000125, 8) , (unique, 0x10000094, 8) , (register, 0x4010, 8), (unique, 0x10000125, 8) CAST (ram, 0x47e698, 8), (unique, 0x10000094, 8) COPY (const, 0x450930, 8), (register, 0x4010, 8) INT_ZEXT (register, 0x40a0, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb2, 4), (ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x1000012d, 8) , (unique, 0x1000009c, 8) , (register, 0x4010, 8), (unique, 0x1000012d, 8) CAST (ram, 0x47e698, 8), (unique, 0x1000009c, 8) COPY (const, 0x450940, 8), (register, 0x4010, 8) INT_AND (stack, 0xffffffffffffffd0, 8) , (const, 0xffffffff, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb8, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb2, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb2, 4), (ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0xc8, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0xc0, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0xb8, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0xb2, 4), (ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xc8, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xc0, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb8, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb2, 4), (ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0xc8, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0xc0, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0xb8, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0xb2, 4), (ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0xc8, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0xc0, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0xb8, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0xb2, 4), (ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xc8, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xc0, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xb8, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xb2, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0xc8, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0xc0, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0xb8, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0xb2, 4), (stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0xc8, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0xc0, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0xb8, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0xb2, 4), (ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0xc8, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0xc0, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0xb8, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0xb2, 4), (ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x10000135, 8) , (unique, 0x100000ac, 8) , (unique, 0x10000084, 8), (unique, 0x10000135, 8) CAST (ram, 0x47e698, 8), (unique, 0x100000ac, 8) COPY (const, 0x450960, 8), (unique, 0x10000084, 8) INT_RIGHT (stack, 0xffffffffffffffe8, 8) , (const, 0x20, 8), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xc0, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xb8, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xb2, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xb2, 4), (ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8), (stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(register, 0x4008, 4) COPY (const, 0x0, 4)]
[(register, 0x40b0, 8) INT_ZEXT (unique, 0x1000013d, 4), (unique, 0x1000013d, 4) CAST (unique, 0x12280, 4), (unique, 0x12280, 4) INT_ADD (register, 0x40b0, 4) , (stack, 0xffffffffffffffd0, 4), (register, 0x40b0, 4) SUBPIECE (register, 0x40b0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffd0, 4) SUBPIECE (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x40a8, 8) INT_ZEXT (unique, 0x10000141, 4), (unique, 0x10000141, 4) CAST (unique, 0x12280, 4), (unique, 0x12280, 4) INT_ADD (register, 0x40a8, 4) , (stack, 0xffffffffffffffec, 4), (register, 0x40a8, 4) SUBPIECE (register, 0x40a8, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffec, 4) SUBPIECE (stack, 0xffffffffffffffe8, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xb8, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffe8, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (stack, 0xffffffffffffffe8, 8)]
[(ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[(ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(unique, 0x2af80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000145, 8), (unique, 0x10000145, 8) CAST (register, 0x40e0, 8)]
[(unique, 0x3c300, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x3c480, 1), (unique, 0x3c480, 1) CAST (unique, 0x1000014d, 1), (unique, 0x1000014d, 1) CALLOTHER (const, 0x3f, 4) , (register, 0x40e0, 8) , (const, 0x10, 1)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0xe4, 4)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0xe4, 4)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0xe4, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0xe4, 4)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0xe4, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0xe4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014e, 8) , (const, 0x0, 4), (unique, 0x1000014e, 8) CAST (register, 0x40e0, 8)]
[(unique, 0x3c300, 1) CALLOTHER (const, 0x40, 4)]
[(ram, 0x47e6f0, 8) MULTIEQUAL (ram, 0x47e6f0, 8) , (ram, 0x47e6f0, 8)]
[(ram, 0x47e6e0, 4) MULTIEQUAL (ram, 0x47e6e0, 4) , (ram, 0x47e6e0, 4)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(ram, 0x47e6e8, 8) MULTIEQUAL (ram, 0x47e6e8, 8) , (ram, 0x47e6e8, 8)]
[(ram, 0x47e698, 8) MULTIEQUAL (ram, 0x47e698, 8) , (ram, 0x47e698, 8)]
[(ram, 0x47da38, 8) MULTIEQUAL (ram, 0x47da38, 8) , (ram, 0x47da38, 8)]
[(register, 0x4010, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ZEXT (unique, 0x3c300, 1), (unique, 0x3c300, 1) MULTIEQUAL (unique, 0x3c300, 1) , (unique, 0x3c300, 1)]
[ ---  CBRANCH (ram, 0x4142ac, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x3c300, 1) , (const, 0x0, 1), (unique, 0x3c300, 1) MULTIEQUAL (unique, 0x3c300, 1) , (unique, 0x3c300, 1)]
[ ---  CBRANCH (ram, 0x414380, 1) , (unique, 0x1400, 1), (unique, 0x1400, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x2af80, 4)]
[(register, 0x4008, 4) COPY (const, 0x81, 4)]
[(register, 0x4010, 8) COPY (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x19, 4) , (const, 0x0, 2)]
[ ---  BRANCH (ram, 0x4142c0, 1)]
[(register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8)]
[(register, 0x4008, 4) MULTIEQUAL (register, 0x4008, 4) , (register, 0x4008, 4)]
[ ---  CBRANCH (ram, 0x414234, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x40e0, 8) , (unique, 0x100000dc, 8), (unique, 0x100000dc, 8) PTRSUB (const, 0x0, 8) , (const, 0x47e720, 8), (register, 0x40e0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) INT_ADD (unique, 0x1000015e, 8) , (const, 0x870, 8), (unique, 0x1000015e, 8) CAST (register, 0x40e0, 8)]
[(unique, 0x11b80, 4) INT_ADD (register, 0x40a0, 4) , (const, 0x1, 4)]
[ ---  CALL (ram, 0x4349f0, 8) , (unique, 0x100000bc, 8) , (const, 0x1, 8) , (const, 0x14, 8) , (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) CAST (ram, 0x47e698, 8), (unique, 0x100000bc, 8) COPY (const, 0x450980, 8)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x10000176, 8) , (unique, 0x100000a4, 8) , (register, 0x40b0, 8), (unique, 0x10000176, 8) CAST (ram, 0x47e698, 8), (unique, 0x100000a4, 8) COPY (const, 0x450940, 8), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x111, 4)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x1000017e, 8) , (unique, 0x100000b4, 8) , (register, 0x40a8, 8), (unique, 0x1000017e, 8) CAST (ram, 0x47e698, 8), (unique, 0x100000b4, 8) COPY (const, 0x450960, 8), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x11e, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x111, 4)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x10000186, 8) , (unique, 0x100000c4, 8) , (register, 0x4010, 8), (unique, 0x10000186, 8) CAST (ram, 0x47e698, 8), (unique, 0x100000c4, 8) COPY (const, 0x450998, 8), (register, 0x4010, 8) INT_ZEXT (ram, 0x47e6e0, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x12b, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x12b, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x11e, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x11e, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x111, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x14a, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x13c, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x111, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x14a, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x13c, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x12b, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x11e, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x111, 4)]
[ ---  CALL (ram, 0x42e940, 8) , (unique, 0x1000018e, 8) , (unique, 0x100000cc, 8) , (ram, 0x47e6f0, 8), (unique, 0x1000018e, 8) CAST (ram, 0x47e698, 8), (unique, 0x100000cc, 8) COPY (const, 0x4509b8, 8), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x13c, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x13c, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x12b, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x12b, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x11e, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x11e, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x111, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x111, 4)]
[(ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x163, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x14a, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x13c, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x12b, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x11e, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x111, 4)]
[(ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x163, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x14a, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x13c, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x12b, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x11e, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x111, 4)]
[(ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x163, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x14a, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x13c, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x12b, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x11e, 4), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x111, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x163, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x14a, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x13c, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x12b, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x11e, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x111, 4)]
[(ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x163, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x14a, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x13c, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x12b, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x11e, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x111, 4)]
[(ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x163, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x14a, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x13c, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x12b, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x11e, 4), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x111, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019e, 8) , (unique, 0x30900, 4), (unique, 0x1000019e, 8) CAST (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (ram, 0x47e698, 8) , (const, 0x74, 8) , (const, 0x1, 8), (unique, 0x30900, 4) INT_OR (unique, 0x28500, 4) , (unique, 0x28500, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000196, 8), (unique, 0x10000196, 8) CAST (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (ram, 0x47e698, 8) , (const, 0x74, 8) , (const, 0x1, 8), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x14a, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x13c, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x12b, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x11e, 4), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x111, 4)]
[ ---  CBRANCH (ram, 0x4143b0, 1) , (unique, 0x18e80, 1), (unique, 0x18e80, 1) INT_EQUAL (stack, 0xfffffffffffffff8, 8) , (unique, 0x100000f4, 8), (unique, 0x100000f4, 8) COPY (ram, 0x47da38, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x14a, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x14a, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x13c, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x13c, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x12b, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x12b, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x11e, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x11e, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x111, 4), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x182, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x182, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x182, 4)]
[ ---  CALL (ram, 0x4199e0, 8)]
[(ram, 0x47da38, 8) COPY (ram, 0x47da38, 8), (ram, 0x47da38, 8) INDIRECT (ram, 0x47da38, 8) , (const, 0x182, 4)]
[(ram, 0x47e698, 8) COPY (ram, 0x47e698, 8), (ram, 0x47e698, 8) INDIRECT (ram, 0x47e698, 8) , (const, 0x182, 4)]
[(ram, 0x47e6e8, 8) COPY (ram, 0x47e6e8, 8), (ram, 0x47e6e8, 8) INDIRECT (ram, 0x47e6e8, 8) , (const, 0x182, 4)]
[(ram, 0x47efb8, 4) COPY (ram, 0x47efb8, 4), (ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x182, 4)]
[(ram, 0x47e6e0, 4) COPY (ram, 0x47e6e0, 4), (ram, 0x47e6e0, 4) INDIRECT (ram, 0x47e6e0, 4) , (const, 0x182, 4)]
[(ram, 0x47e6f0, 8) COPY (ram, 0x47e6f0, 8), (ram, 0x47e6f0, 8) INDIRECT (ram, 0x47e6f0, 8) , (const, 0x182, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x47da38, 8) COPY (ram, 0x47da38, 8)]
[(ram, 0x47e698, 8) COPY (ram, 0x47e698, 8)]
[(ram, 0x47e6e8, 8) COPY (ram, 0x47e6e8, 8)]
[(ram, 0x47efb8, 4) COPY (ram, 0x47efb8, 4)]
[(ram, 0x47e6e0, 4) COPY (ram, 0x47e6e0, 4)]
[(ram, 0x47e6f0, 8) COPY (ram, 0x47e6f0, 8)]
[ ---  RETURN (const, 0x0, 8)]
