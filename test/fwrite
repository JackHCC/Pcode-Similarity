[ ---  CBRANCH (ram, 0x434b28, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_EQUAL (register, 0x40b0, 8) , (const, 0x0, 8), (register, 0x40b0, 8) INT_MULT (register, 0x4008, 8) , (register, 0x4010, 8)]
[(ram, 0x4600c0, 8) COPY (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) COPY (ram, 0x4600c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x434a78, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_EQUAL (unique, 0x18980, 4) , (const, 0x0, 4), (unique, 0x18980, 4) INT_AND (unique, 0x18900, 4) , (const, 0x1, 4), (unique, 0x18900, 4) INT_RIGHT (unique, 0x100000f6, 4) , (const, 0xf, 4), (unique, 0x100000f6, 4) CAST (unique, 0x28500, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000074, 8), (unique, 0x10000074, 8) PTRSUB (register, 0x4018, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x434a68, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4000, 8) , (register, 0x40c0, 8), (register, 0x40c0, 8) INT_ADD (unique, 0x1000001b, 8) , (const, 0xfffffffffffff910, 8), (unique, 0x1000001b, 8) CALLOTHER (const, 0x275, 4) , (register, 0x1660, 1), (register, 0x4000, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000102, 8), (unique, 0x10000102, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (register, 0x4008, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x4008, 8) CAST (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) PTRSUB (register, 0x4018, 8) , (const, 0x88, 8)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[ ---  CBRANCH (ram, 0x434a58, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x27480, 4) , (const, 0x0, 4), (unique, 0x27480, 4) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8)]
[(unique, 0x3ec80, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x3ee00, 1), (unique, 0x3ee00, 1) CAST (unique, 0x1000010a, 1), (unique, 0x1000010a, 1) CALLOTHER (const, 0x3f, 4) , (register, 0x4008, 8) , (const, 0x10, 1)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x3d, 4)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x3d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x4008, 8) , (const, 0x1, 4)]
[(unique, 0x3ec80, 1) CALLOTHER (const, 0x40, 4)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[ ---  CBRANCH (ram, 0x434a48, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x3ec80, 1) , (const, 0x0, 1), (unique, 0x3ec80, 1) MULTIEQUAL (unique, 0x3ec80, 1) , (unique, 0x3ec80, 1)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[ ---  CBRANCH (ram, 0x434bb0, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x27480, 4) , (const, 0x0, 4)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x146, 4)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x146, 4)]
[ ---  CALL (ram, 0x419848, 8) , (register, 0x4008, 8)]
[ ---  BRANCH (ram, 0x434a60, 1)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x51, 4), (ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x51, 4), (ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000113, 8) , (register, 0x40c0, 8), (unique, 0x10000113, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (register, 0x4008, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x4008, 8) CAST (unique, 0x1000010b, 8), (unique, 0x1000010b, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) PTRSUB (register, 0x4018, 8) , (const, 0x88, 8)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x5f, 4), (ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x5f, 4), (ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x6400, 8) , (unique, 0x11b80, 4), (unique, 0x6400, 8) PTRADD (register, 0x4008, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x11b80, 4) INT_ADD (unique, 0x28500, 4) , (const, 0x1, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (register, 0x4008, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (register, 0x4008, 8)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[ ---  CBRANCH (ram, 0x434ae0, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_EQUAL (unique, 0x28500, 4) , (const, 0x0, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x6400, 8), (unique, 0x6400, 8) PTRSUB (register, 0x4018, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x434bbc, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x28500, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x434b38, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_NOTEQUAL (unique, 0x18980, 4) , (const, 0x0, 4), (unique, 0x18980, 4) INT_AND (unique, 0x18900, 4) , (const, 0x1, 4), (unique, 0x18900, 4) INT_RIGHT (unique, 0x1000011b, 4) , (const, 0xf, 4), (unique, 0x1000011b, 4) CAST (unique, 0x28500, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000cc, 8), (unique, 0x100000cc, 8) PTRSUB (register, 0x4018, 8) , (const, 0x0, 8)]
[(ram, 0x4600c0, 8) COPY (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) COPY (ram, 0x4600c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000005e, 1) COPY (const, 0x0, 1)]
[(register, 0x4020, 8) COPY (const, 0x0, 8)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x69, 4)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x69, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x6400, 8) , (const, 0xffffffff, 4), (unique, 0x6400, 8) PTRSUB (register, 0x4018, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x434ba8, 1) , (unique, 0x1000, 1), (unique, 0x1000, 1) INT_LESSEQUAL (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4000, 8) PTRADD (ram, 0x4600c8, 8) , (unique, 0x1000003f, 8) , (const, 0x1, 8), (unique, 0x1000003f, 8) INT_2COMP (unique, 0x10000137, 8), (unique, 0x10000137, 8) CAST (ram, 0x4600c0, 8), (register, 0x4010, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) INT_SUB (register, 0x40c0, 8) , (unique, 0x10000127, 8), (unique, 0x10000127, 8) CAST (ram, 0x4600c0, 8), (register, 0x40c0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (register, 0x4018, 8) , (const, 0x1, 8) , (const, 0xd8, 8), (ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8), (ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x117, 4)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x117, 4)]
[ ---  CALL (ram, 0x409140, 8)]
[ ---  BRANCH (ram, 0x434ab0, 1)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0x87, 4), (ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0x87, 4), (ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(register, 0x108, 1) INT_EQUAL (register, 0x4000, 8) , (const, 0xffffffffffffffff, 8), (register, 0x4000, 8) CALLIND (register, 0x4018, 8) , (register, 0x4018, 8) , (register, 0x4000, 8) , (register, 0x40b0, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (register, 0x40c0, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x434b0c, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_NOTEQUAL (unique, 0x18980, 4) , (const, 0x0, 4), (unique, 0x18980, 4) INT_AND (unique, 0x18900, 4) , (const, 0x1, 4), (unique, 0x18900, 4) INT_RIGHT (unique, 0x10000147, 4) , (const, 0xf, 4), (unique, 0x10000147, 4) CAST (unique, 0x28500, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000c4, 8), (unique, 0x100000c4, 8) PTRSUB (register, 0x4018, 8) , (const, 0x0, 8)]
[(unique, 0x1000005d, 1) MULTIEQUAL (unique, 0x1000005e, 1) , (register, 0x108, 1)]
[(register, 0x4020, 8) MULTIEQUAL (register, 0x4020, 8) , (register, 0x4000, 8)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0xa7, 4), (ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0xa7, 4), (ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x6400, 8) , (unique, 0x3ff80, 4), (unique, 0x6400, 8) PTRADD (register, 0x4000, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3ff80, 4) INT_ADD (unique, 0x28500, 4) , (const, 0xffffffff, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (register, 0x4000, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x4000, 8) CAST (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) PTRSUB (register, 0x4018, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x434b78, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_EQUAL (unique, 0x3ff80, 4) , (const, 0x0, 4), (unique, 0x3ff80, 4) INT_ADD (unique, 0x28500, 4) , (const, 0xffffffff, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (register, 0x4000, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x4000, 8) CAST (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) PTRSUB (register, 0x4018, 8) , (const, 0x88, 8)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0xf7, 4)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0xf7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000153, 8) , (const, 0x0, 8), (unique, 0x10000153, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (register, 0x4000, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[(unique, 0x2af80, 4) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[(unique, 0x3c300, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x3c480, 1), (unique, 0x3c480, 1) CAST (unique, 0x1000015b, 1), (unique, 0x1000015b, 1) CALLOTHER (const, 0x3f, 4) , (register, 0x4000, 8) , (const, 0x10, 1)]
[(ram, 0x4600c0, 8) INDIRECT (ram, 0x4600c0, 8) , (const, 0xfe, 4)]
[(ram, 0x4600c8, 8) INDIRECT (ram, 0x4600c8, 8) , (const, 0xfe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x4000, 8) , (const, 0x0, 4)]
[(unique, 0x3c300, 1) CALLOTHER (const, 0x40, 4)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[ ---  CBRANCH (ram, 0x434b7c, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x3c300, 1) , (const, 0x0, 1), (unique, 0x3c300, 1) MULTIEQUAL (unique, 0x3c300, 1) , (unique, 0x3c300, 1)]
[ ---  CBRANCH (ram, 0x434b0c, 1) , (unique, 0x1580, 1), (unique, 0x1580, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x2af80, 4)]
[ ---  CALLOTHER (const, 0x19, 4) , (const, 0x0, 2)]
[ ---  BRANCH (ram, 0x434b0c, 1)]
[(ram, 0x4600c8, 8) MULTIEQUAL (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8) , (ram, 0x4600c8, 8)]
[(ram, 0x4600c0, 8) MULTIEQUAL (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8) , (ram, 0x4600c0, 8)]
[(register, 0x4020, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4020, 8) , (register, 0x4020, 8) , (register, 0x4020, 8)]
[(register, 0x101, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x434b14, 1) , (unique, 0x10000070, 1), (unique, 0x10000070, 1) BOOL_NEGATE (unique, 0x1000005c, 1), (unique, 0x1000005c, 1) MULTIEQUAL (register, 0x108, 1) , (unique, 0x1000005d, 1) , (unique, 0x1000005d, 1) , (unique, 0x1000005d, 1)]
[(register, 0x108, 1) INT_EQUAL (unique, 0x1a680, 8) , (const, 0x0, 8), (unique, 0x1a680, 8) INT_SUB (register, 0x40b0, 8) , (register, 0x4020, 8)]
[ ---  CBRANCH (ram, 0x434b58, 1) , (register, 0x101, 1), (register, 0x101, 1) MULTIEQUAL (register, 0x101, 1) , (register, 0x108, 1)]
[(unique, 0x45300, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (unique, 0x45380, 1), (unique, 0x45380, 1) INT_NOTEQUAL (register, 0x4008, 8) , (const, 0x0, 8)]
[(unique, 0x45300, 8) INT_DIV (register, 0x4020, 8) , (register, 0x4008, 8)]
[(ram, 0x4600c0, 8) COPY (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) COPY (ram, 0x4600c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (unique, 0x45300, 8), (unique, 0x45300, 8) MULTIEQUAL (unique, 0x45300, 8) , (unique, 0x45300, 8)]
[(ram, 0x4600c0, 8) COPY (ram, 0x4600c0, 8)]
[(ram, 0x4600c8, 8) COPY (ram, 0x4600c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (register, 0x4010, 8)]
