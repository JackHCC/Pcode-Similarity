[ ---  CBRANCH (ram, 0x40e378, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4000, 8) , (const, 0xf, 8)]
[(register, 0x4010, 8) INT_AND (register, 0x4028, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6980, 8), (unique, 0x6980, 8) CAST (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) INT_SUB (register, 0x4000, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x12580, 4) , (const, 0x1, 4), (unique, 0x12580, 4) INT_AND (unique, 0x24480, 4) , (const, 0xff, 4), (unique, 0x24480, 4) INT_XOR (register, 0x4018, 4) , (register, 0x4010, 4), (register, 0x4018, 4) SUBPIECE (register, 0x4018, 8) , (const, 0x0, 4), (register, 0x4010, 4) SUBPIECE (register, 0x4010, 8) , (const, 0x0, 4), (register, 0x4018, 8) INT_RIGHT (register, 0x4000, 8) , (const, 0x3, 8), (register, 0x4010, 8) INT_RIGHT (register, 0x4000, 8) , (const, 0xb, 8), (register, 0x4000, 8) INT_SUB (register, 0x4000, 8) , (const, 0x10, 8)]
[(unique, 0x22280, 4) COPY (const, 0x2, 4)]
[(unique, 0x22280, 4) MULTIEQUAL (unique, 0x12580, 4) , (unique, 0x22280, 4)]
[ ---  CBRANCH (ram, 0x40e380, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_EQUAL (unique, 0x18980, 4) , (const, 0x0, 4), (unique, 0x18980, 4) INT_AND (unique, 0x18900, 4) , (const, 0x1, 4), (unique, 0x18900, 4) INT_RIGHT (register, 0x4028, 4) , (const, 0x1, 4), (register, 0x4028, 4) SUBPIECE (register, 0x4028, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x40e3b4, 1) , (unique, 0x100000f4, 1), (unique, 0x100000f4, 1) BOOL_AND (unique, 0x100000f5, 1) , (unique, 0x100000f6, 1), (unique, 0x100000f6, 1) BOOL_OR (register, 0x108, 1) , (unique, 0x100000cf, 1), (unique, 0x100000f5, 1) BOOL_OR (register, 0x108, 1) , (unique, 0x100000d0, 1), (unique, 0x100000cf, 1) INT_NOTEQUAL (register, 0x4048, 8) , (const, 0x1ffe, 8), (unique, 0x100000d0, 1) INT_LESS (const, 0x1ffd, 8) , (register, 0x4048, 8), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4050, 8) , (const, 0xffffffffffffffef, 8), (register, 0x4048, 8) INT_SUB (register, 0x4038, 8) , (const, 0x1, 8), (register, 0x4050, 8) INT_SUB (register, 0x4038, 8) , (const, 0x10, 8), (register, 0x4038, 8) INT_AND (register, 0x4000, 8) , (register, 0x4030, 8), (register, 0x4030, 8) INT_SUB (ram, 0x47f008, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x40e430, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4040, 8) , (const, 0xffffffffffffffbf, 8), (register, 0x4040, 8) INT_SUB (register, 0x4038, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x40e3b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4040, 8) , (const, 0xfffffffffffffeff, 8), (register, 0x4040, 8) INT_SUB (register, 0x4038, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x40e3b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4040, 8) , (const, 0xfffffffffffffbff, 8), (register, 0x4040, 8) INT_SUB (register, 0x4038, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x40e3b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4038, 8) , (const, 0x1000, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4028, 8) , (const, 0x2, 8), (register, 0x4028, 8) INT_AND (register, 0x4028, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x43100, 8) , (const, 0x0, 8), (unique, 0x43100, 8) INT_AND (register, 0x4020, 8) , (register, 0x4030, 8), (register, 0x4020, 8) INT_OR (register, 0x4028, 8) , (unique, 0x12480, 8), (unique, 0x12480, 8) INT_ADD (register, 0x4020, 8) , (register, 0x4010, 8), (register, 0x4028, 8) INT_SUB (register, 0x4000, 8) , (register, 0x4020, 8), (register, 0x4020, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6980, 8), (unique, 0x6980, 8) CAST (unique, 0x10000107, 8), (unique, 0x10000107, 8) INT_SUB (register, 0x4000, 8) , (const, 0x10, 8)]
[(unique, 0x12480, 8) CAST (unique, 0x1000010f, 8), (unique, 0x1000010f, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (const, 0x1, 8)]
[(register, 0x4028, 8) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000117, 8), (unique, 0x10000117, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x40e32c, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x22280, 4) , (register, 0x4028, 4), (register, 0x4028, 4) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000117, 8), (unique, 0x10000117, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_NOTEQUAL (register, 0x4028, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40e410, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESSEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4028, 8) , (const, 0x10, 8)]
[(unique, 0x12480, 8) CAST (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4020, 8), (register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8), (register, 0x4020, 8) MULTIEQUAL (register, 0x4028, 8) , (register, 0x4028, 8)]
[(unique, 0x11f80, 8) INT_ADD (register, 0x4028, 8) , (const, 0x10, 8), (register, 0x4028, 8) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4020, 8), (register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8), (register, 0x4020, 8) MULTIEQUAL (register, 0x4028, 8) , (register, 0x4028, 8)]
[ ---  CBRANCH (ram, 0x40e404, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4028, 4) , (unique, 0x22280, 4), (register, 0x4028, 4) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4020, 8), (register, 0x4010, 8) MULTIEQUAL (register, 0x4010, 8) , (register, 0x4010, 8), (register, 0x4020, 8) MULTIEQUAL (register, 0x4028, 8) , (register, 0x4028, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_NOTEQUAL (unique, 0x28f00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESSEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8)]
[(unique, 0x12580, 4) INT_AND (ram, 0x47e724, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x40e2bc, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_NOTEQUAL (unique, 0x18980, 4) , (const, 0x0, 4), (unique, 0x18980, 4) INT_AND (unique, 0x18900, 4) , (const, 0x1, 4), (unique, 0x18900, 4) INT_RIGHT (ram, 0x47e724, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESSEQUAL (ram, 0x47e6f8, 8) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (unique, 0x12480, 8) , (unique, 0x12480, 8), (unique, 0x12480, 8) INT_ADD (ram, 0x47e6f8, 8) , (ram, 0x47efa8, 8), (unique, 0x12480, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x1000, 1), (unique, 0x1000, 1) INT_LESS (const, 0x1f, 8) , (register, 0x4010, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_EQUAL (unique, 0x18980, 4) , (const, 0x0, 4), (unique, 0x18980, 4) INT_AND (unique, 0x18900, 4) , (const, 0x1, 4), (unique, 0x18900, 4) INT_RIGHT (register, 0x4028, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_NOTEQUAL (unique, 0x1000001c, 8) , (const, 0x0, 8), (unique, 0x1000001c, 8) INT_AND (register, 0x4030, 8) , (const, 0x1, 8), (register, 0x4030, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) INT_ADD (unique, 0x12480, 8) , (const, 0x8, 8), (unique, 0x12480, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8)]
[ ---  CBRANCH (ram, 0x40e340, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_NOTEQUAL (unique, 0x10000024, 8) , (const, 0x0, 8), (unique, 0x10000024, 8) INT_AND (register, 0x4028, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4020, 8) , (const, 0xf, 8), (register, 0x4020, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6980, 8), (unique, 0x6980, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) INT_SUB (register, 0x4000, 8) , (const, 0x10, 8)]
[(register, 0x4028, 8) INT_SUB (register, 0x4000, 8) , (register, 0x4020, 8)]
[ ---  CBRANCH (ram, 0x40e364, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x12580, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESSEQUAL (ram, 0x47e6f8, 8) , (register, 0x4028, 8)]
[ ---  CBRANCH (ram, 0x40e2d8, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4020, 8) , (register, 0x4028, 8), (register, 0x4028, 8) INT_AND (register, 0x4028, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (register, 0x4028, 8) , (const, 0x8, 8)]
[(unique, 0x12480, 8) CAST (unique, 0x10000147, 8), (unique, 0x10000147, 8) INT_ADD (register, 0x4000, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4010, 8) , (const, 0x7, 8)]
[(register, 0x4028, 8) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) INT_ADD (register, 0x4000, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4010, 8) , (const, 0x7, 8)]
[ ---  CBRANCH (ram, 0x40e32c, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x22280, 4) , (register, 0x4028, 4), (register, 0x4028, 4) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) INT_ADD (register, 0x4000, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4010, 8) , (const, 0x7, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_NOTEQUAL (register, 0x4028, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40e310, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESSEQUAL (unique, 0x11f80, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4028, 8) , (const, 0x10, 8)]
[(unique, 0x12480, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4020, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8), (register, 0x4020, 8) MULTIEQUAL (register, 0x4028, 8) , (register, 0x4028, 8)]
[(unique, 0x11f80, 8) INT_ADD (register, 0x4028, 8) , (const, 0x10, 8), (register, 0x4028, 8) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4020, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8), (register, 0x4020, 8) MULTIEQUAL (register, 0x4028, 8) , (register, 0x4028, 8)]
[ ---  CBRANCH (ram, 0x40e304, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4028, 4) , (unique, 0x22280, 4), (register, 0x4028, 4) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) INT_ADD (register, 0x4000, 8) , (register, 0x4010, 8), (register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4020, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8), (register, 0x4020, 8) MULTIEQUAL (register, 0x4028, 8) , (register, 0x4028, 8)]
[(ram, 0x47e6f8, 8) INDIRECT (ram, 0x47e6f8, 8) , (const, 0xe4, 4)]
[(ram, 0x47e724, 4) INDIRECT (ram, 0x47e724, 4) , (const, 0xe4, 4)]
[(ram, 0x47efa8, 8) INDIRECT (ram, 0x47efa8, 8) , (const, 0xe4, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0xe4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x4030, 8) , (unique, 0x3d880, 1), (unique, 0x3d880, 1) INT_NEGATE (unique, 0x100000d1, 1), (unique, 0x100000d1, 1) SUBPIECE (unique, 0x22280, 4) , (const, 0x0, 4), (register, 0x4030, 8) MULTIEQUAL (unique, 0x12480, 8) , (unique, 0x12480, 8) , (unique, 0x12480, 8) , (unique, 0x12480, 8)]
[ ---  CBRANCH (ram, 0x40e33c, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_NOTEQUAL (register, 0x4008, 8) , (const, 0x0, 8)]
[(ram, 0x47e6f8, 8) INDIRECT (ram, 0x47e6f8, 8) , (const, 0xe8, 4)]
[(ram, 0x47e724, 4) INDIRECT (ram, 0x47e724, 4) , (const, 0xe8, 4)]
[(ram, 0x47efa8, 8) INDIRECT (ram, 0x47efa8, 8) , (const, 0xe8, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0xe8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x4008, 8) , (register, 0x4030, 8)]
[(ram, 0x47e6f8, 8) COPY (ram, 0x47e6f8, 8), (ram, 0x47e6f8, 8) MULTIEQUAL (ram, 0x47e6f8, 8) , (ram, 0x47e6f8, 8)]
[(ram, 0x47e724, 4) COPY (ram, 0x47e724, 4), (ram, 0x47e724, 4) MULTIEQUAL (ram, 0x47e724, 4) , (ram, 0x47e724, 4)]
[(ram, 0x47efa8, 8) COPY (ram, 0x47efa8, 8), (ram, 0x47efa8, 8) MULTIEQUAL (ram, 0x47efa8, 8) , (ram, 0x47efa8, 8)]
[(ram, 0x47f008, 8) COPY (ram, 0x47f008, 8), (ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_NOTEQUAL (unique, 0x28f00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x40e378, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESSEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8)]
[(ram, 0x47e6f8, 8) COPY (ram, 0x47e6f8, 8)]
[(ram, 0x47e724, 4) COPY (ram, 0x47e724, 4)]
[(ram, 0x47efa8, 8) COPY (ram, 0x47efa8, 8)]
[(ram, 0x47f008, 8) COPY (ram, 0x47f008, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
