[(register, 0x4000, 8) CALL (ram, 0x414c40, 8) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x438f84, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x28e00, 1) , (const, 0x7b, 1), (unique, 0x28e00, 1) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x438f3c, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_EQUAL (register, 0x4000, 4) , (const, 0x0, 4), (register, 0x4000, 4) CALL (ram, 0x414d9c, 8) , (unique, 0x11f80, 8) , (register, 0x4008, 8) , (register, 0x4000, 8), (unique, 0x11f80, 8) PTRADD (register, 0x4000, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x28f00, 1) , (const, 0x7d, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) PTRADD (unique, 0x11f80, 8) , (register, 0x4000, 8) , (const, 0x1, 8)]
[(unique, 0x22400, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (unique, 0x22400, 8), (unique, 0x22400, 8) MULTIEQUAL (unique, 0x11f80, 8) , (unique, 0x22400, 8)]
[ ---  CBRANCH (ram, 0x438f54, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_EQUAL (register, 0x4000, 4) , (const, 0x0, 4), (register, 0x4000, 4) CALL (ram, 0x414d9c, 8) , (register, 0x4000, 8) , (register, 0x4008, 8) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x438f3c, 1) , (unique, 0x1000, 1), (unique, 0x1000, 1) INT_LESS (const, 0x19, 1) , (unique, 0x1000004f, 1), (unique, 0x1000004f, 1) CAST (unique, 0x3ff80, 1), (unique, 0x3ff80, 1) INT_ADD (unique, 0x12580, 1) , (const, 0xbf, 1), (unique, 0x12580, 1) INT_AND (unique, 0x28f00, 1) , (const, 0xdf, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) PTRADD (register, 0x4000, 8) , (register, 0x4000, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (unique, 0x10000048, 1), (unique, 0x10000048, 1) BOOL_AND (unique, 0x10000049, 1) , (unique, 0x1000004a, 1), (unique, 0x1000004a, 1) BOOL_OR (unique, 0x1000004d, 1) , (unique, 0x10000038, 1), (unique, 0x1000004d, 1) BOOL_NEGATE (register, 0x108, 1), (unique, 0x10000049, 1) BOOL_AND (register, 0x108, 1) , (unique, 0x1000003a, 1), (unique, 0x10000038, 1) INT_NOTEQUAL (unique, 0x10000051, 1) , (const, 0x9, 1), (unique, 0x10000051, 1) CAST (unique, 0x12580, 1), (unique, 0x1000003a, 1) INT_LESS (const, 0x8, 1) , (unique, 0x10000050, 1), (unique, 0x10000050, 1) CAST (unique, 0x12580, 1), (unique, 0x12580, 1) INT_SUB (unique, 0x28f00, 1) , (const, 0x30, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x28f00, 1) , (const, 0x5f, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (register, 0x4000, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
