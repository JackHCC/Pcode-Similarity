[ ---  CBRANCH (ram, 0x415858, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4008, 8) , (const, 0x43, 8), (register, 0x4008, 8) INT_RIGHT (ram, 0x4804b0, 8) , (const, 0x18, 8)]
[(unique, 0x11f80, 8) PTRSUB (const, 0x0, 8) , (const, 0x415ec0, 8)]
[(unique, 0x10000043, 8) COPY (unique, 0x11f80, 8), (unique, 0x11f80, 8) PTRSUB (const, 0x0, 8) , (const, 0x415c80, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4008, 8) , (const, 0xa1, 8), (register, 0x4008, 8) INT_AND (unique, 0x44d80, 8) , (const, 0xfff, 8), (unique, 0x44d80, 8) INT_RIGHT (ram, 0x4804b0, 8) , (const, 0x4, 8)]
[(unique, 0x1000004b, 8) COPY (unique, 0x11f80, 8)]
[(ram, 0x4804b0, 8) COPY (ram, 0x4804b0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (unique, 0x22400, 8), (unique, 0x22400, 8) MULTIEQUAL (unique, 0x10000043, 8) , (unique, 0x1000004b, 8)]
[ ---  CBRANCH (ram, 0x415838, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4008, 8) , (const, 0x51, 8)]
[(unique, 0x11f80, 8) PTRSUB (const, 0x0, 8) , (const, 0x416300, 8)]
[(unique, 0x10000033, 8) COPY (unique, 0x11f80, 8), (unique, 0x11f80, 8) PTRSUB (const, 0x0, 8) , (const, 0x415c80, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4008, 8) , (const, 0xc00, 8), (register, 0x4008, 8) INT_AND (unique, 0x44d80, 8) , (const, 0xfff, 8), (unique, 0x44d80, 8) INT_RIGHT (ram, 0x4804b0, 8) , (const, 0x4, 8)]
[(unique, 0x1000003b, 8) COPY (unique, 0x11f80, 8)]
[(ram, 0x4804b0, 8) COPY (ram, 0x4804b0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (unique, 0x22400, 8), (unique, 0x22400, 8) MULTIEQUAL (unique, 0x10000033, 8) , (unique, 0x1000003b, 8)]
[(ram, 0x4804b0, 8) COPY (ram, 0x4804b0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) PTRSUB (const, 0x0, 8) , (const, 0x415c80, 8)]
