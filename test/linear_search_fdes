[(unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x10, 8)]
[(unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x8, 8)]
[(register, 0x40b0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x44c4d0, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4000, 4) , (const, 0xff, 4), (register, 0x4000, 4) INT_AND (unique, 0x44d80, 4) , (const, 0xff, 4), (unique, 0x44d80, 4) INT_ZEXT (unique, 0x1000005a, 2), (unique, 0x1000005a, 2) INT_RIGHT (unique, 0x29000, 2) , (const, 0x3, 8), (unique, 0x29000, 2) LOAD (const, 0x1b1, 4) , (unique, 0x6300, 8), (unique, 0x6300, 8) CAST (unique, 0x10000129, 8), (unique, 0x10000129, 8) INT_ADD (register, 0x4000, 8) , (const, 0x20, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x46, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x46, 4)]
[(register, 0x4000, 8) CALL (ram, 0x44c390, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(register, 0x40b0, 8) MULTIEQUAL (register, 0x40b0, 8) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x44c664, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_NOTEQUAL (unique, 0x28500, 4) , (const, 0x0, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8)]
[(unique, 0x11f80, 8) PTRSUB (register, 0x8, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x11f80, 8) PTRSUB (register, 0x8, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x100000f1, 8) COPY (register, 0x40a0, 8), (register, 0x40a0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x44c568, 1)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(register, 0x40e0, 4) MULTIEQUAL (register, 0x4000, 4) , (register, 0x40e0, 4) , (register, 0x4000, 4)]
[(register, 0x40b0, 8) MULTIEQUAL (register, 0x40b0, 8) , (register, 0x40b0, 8) , (register, 0x40b0, 8)]
[(unique, 0x10000119, 8) COPY (register, 0x40a0, 8), (register, 0x40a0, 8) MULTIEQUAL (unique, 0x100000f1, 8) , (unique, 0x100000f9, 8) , (unique, 0x10000101, 8)]
[ ---  CBRANCH (ram, 0x44c554, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_NOTEQUAL (unique, 0x28500, 4) , (const, 0x0, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x6400, 8), (unique, 0x6400, 8) PTRADD (register, 0x40d8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x40d8, 8) MULTIEQUAL (register, 0x4008, 8) , (unique, 0x12480, 8) , (unique, 0x12480, 8)]
[ ---  CBRANCH (ram, 0x44c4f4, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_EQUAL (unique, 0x10000099, 1) , (const, 0x0, 1), (unique, 0x10000099, 1) INT_AND (unique, 0x10000098, 1) , (const, 0x1, 1), (unique, 0x10000098, 1) INT_RIGHT (unique, 0x28e00, 1) , (const, 0x2, 4), (unique, 0x28e00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x6200, 8), (unique, 0x6200, 8) CAST (unique, 0x10000131, 8), (unique, 0x10000131, 8) INT_ADD (register, 0x4000, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x44c578, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x40d0, 8) , (register, 0x40a0, 8), (register, 0x40d0, 8) INT_ADD (unique, 0x1000013d, 8) , (unique, 0x100000b3, 8), (unique, 0x1000013d, 8) CAST (register, 0x40d8, 8), (unique, 0x100000b3, 8) INT_SUB (const, 0x4, 8) , (unique, 0x5f80, 8), (unique, 0x5f80, 8) INT_SEXT (unique, 0x10000139, 4), (unique, 0x10000139, 4) CAST (unique, 0x28500, 4)]
[(unique, 0x10000109, 8) COPY (register, 0x40a0, 8)]
[ ---  CBRANCH (ram, 0x44c538, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_EQUAL (register, 0x40e0, 4) , (const, 0x0, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x8e, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x87, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x8e, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x87, 4)]
[ ---  CALL (ram, 0x44c0e0, 8) , (unique, 0x12580, 4) , (const, 0x0, 8) , (register, 0x4000, 8) , (unique, 0x11f80, 8), (unique, 0x12580, 4) INT_AND (register, 0x40e0, 4) , (const, 0xf, 4), (register, 0x4000, 8) CALL (ram, 0x44c0e0, 8) , (unique, 0x12580, 4) , (register, 0x40b0, 8) , (unique, 0x11f80, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) PTRADD (register, 0x40d8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x12580, 4) INT_AND (register, 0x40e0, 4) , (const, 0xff, 4)]
[(unique, 0x10000121, 8) COPY (unique, 0x10000111, 8), (unique, 0x10000111, 8) COPY (register, 0x40a0, 8)]
[ ---  CBRANCH (ram, 0x44c554, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x12580, 4) , (const, 0xff, 4), (unique, 0x12580, 4) INT_AND (register, 0x40e0, 4) , (const, 0xff, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x147, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x147, 4)]
[ ---  CBRANCH (ram, 0x44c610, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x12580, 4) , (const, 0xff, 4), (unique, 0x12580, 4) INT_AND (register, 0x4000, 4) , (const, 0xff, 4), (register, 0x4000, 4) CALL (ram, 0x44c228, 8) , (register, 0x40d0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x186, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x180, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x186, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x180, 4)]
[ ---  CALL (ram, 0x44c0e0, 8) , (const, 0xf, 8) , (const, 0x0, 8) , (register, 0x4000, 8) , (unique, 0x11f80, 8), (register, 0x4000, 8) CALL (ram, 0x44c0e0, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (unique, 0x11f80, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) PTRADD (register, 0x40d8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x40b0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000101, 8) COPY (register, 0x40d0, 8)]
[ ---  CBRANCH (ram, 0x44c568, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_EQUAL (unique, 0x28500, 4) , (const, 0x0, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x12480, 8), (unique, 0x12480, 8) CAST (unique, 0x1000014d, 8), (unique, 0x1000014d, 8) INT_ADD (unique, 0x10000145, 8) , (unique, 0x11f80, 8), (unique, 0x10000145, 8) CAST (register, 0x40d8, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x4, 8), (register, 0x4000, 8) INT_ZEXT (unique, 0x28500, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (register, 0x40d8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x15d, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x15d, 4)]
[(register, 0x4000, 8) CALL (ram, 0x44c390, 8) , (unique, 0x12580, 4) , (unique, 0x11f80, 8) , (unique, 0x11f80, 8)]
[ ---  CBRANCH (ram, 0x44c67c, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_EQUAL (register, 0x4000, 4) , (const, 0x0, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x173, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x16c, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x173, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x16c, 4)]
[ ---  CALL (ram, 0x44c0e0, 8) , (unique, 0x12580, 4) , (const, 0x0, 8) , (register, 0x4000, 8) , (unique, 0x11f80, 8), (unique, 0x12580, 4) INT_AND (register, 0x4000, 4) , (const, 0xf, 4), (register, 0x4000, 8) CALL (ram, 0x44c0e0, 8) , (unique, 0x12580, 4) , (register, 0x4000, 8) , (unique, 0x11f80, 8) , (unique, 0x11f80, 8), (unique, 0x11f80, 8) PTRADD (register, 0x40d8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x44c5b0, 1)]
[(register, 0x40e0, 4) MULTIEQUAL (register, 0x40e0, 4) , (register, 0x4000, 4)]
[(register, 0x40b0, 8) MULTIEQUAL (register, 0x40b0, 8) , (register, 0x4000, 8)]
[(register, 0x40a0, 8) MULTIEQUAL (unique, 0x10000111, 8) , (register, 0x40d0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x9c, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x9c, 4), (stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(register, 0x4000, 8) INT_SUB (register, 0x4000, 8) , (const, 0x1, 8), (register, 0x4000, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x2b600, 8), (unique, 0x2b600, 8) INT_AND (register, 0x4000, 8) , (const, 0x3f, 8), (register, 0x4000, 8) INT_ZEXT (unique, 0x2ba00, 4), (unique, 0x2ba00, 4) INT_LEFT (register, 0x4000, 4) , (const, 0x3, 4), (register, 0x4000, 4) CALL (ram, 0x44c348, 8) , (register, 0x40c8, 4), (register, 0x40c8, 4) MULTIEQUAL (unique, 0x12580, 4) , (unique, 0x12580, 4)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (const, 0x7, 4) , (register, 0x4000, 4), (register, 0x4000, 4) CALL (ram, 0x44c348, 8) , (register, 0x40c8, 4), (register, 0x40c8, 4) MULTIEQUAL (unique, 0x12580, 4) , (unique, 0x12580, 4)]
[(unique, 0x23180, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x44c554, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x43100, 8) , (const, 0x0, 8), (unique, 0x43100, 8) INT_AND (stack, 0xfffffffffffffff0, 8) , (unique, 0x23180, 8), (unique, 0x23180, 8) MULTIEQUAL (register, 0x4000, 8) , (unique, 0x23180, 8)]
[ ---  CBRANCH (ram, 0x44c554, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (register, 0x4008, 8) , (stack, 0xfffffffffffffff8, 8), (register, 0x4008, 8) INT_SUB (register, 0x4010, 8) , (stack, 0xfffffffffffffff0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (register, 0x40d8, 8)]
[(register, 0x40b0, 8) MULTIEQUAL (register, 0x40b0, 8) , (register, 0x4000, 8)]
[(register, 0x40a0, 8) MULTIEQUAL (unique, 0x10000109, 8) , (register, 0x40d0, 8)]
[(register, 0x4000, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) CAST (unique, 0x28280, 8), (unique, 0x28280, 8) PTRADD (register, 0x40d8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x40e0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x44c554, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_NOTEQUAL (register, 0x4008, 8) , (const, 0x0, 8), (register, 0x4008, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000155, 8), (unique, 0x10000155, 8) CAST (unique, 0x7b80, 8), (unique, 0x7b80, 8) PTRADD (register, 0x40d8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x44c5ec, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (register, 0x4008, 8) , (register, 0x4000, 8), (register, 0x4008, 8) INT_SUB (register, 0x4010, 8) , (register, 0x4008, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (register, 0x40d8, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8) , (register, 0x4000, 8) , (register, 0x4000, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (register, 0x4008, 8) , (register, 0x4008, 8)]
[(register, 0x40e0, 4) MULTIEQUAL (register, 0x40e0, 4) , (register, 0x40e0, 4) , (register, 0x40e0, 4) , (register, 0x40e0, 4) , (register, 0x40e0, 4) , (register, 0x40e0, 4)]
[(register, 0x40b0, 8) MULTIEQUAL (register, 0x40b0, 8) , (register, 0x40b0, 8) , (register, 0x40b0, 8) , (register, 0x40b0, 8) , (register, 0x40b0, 8) , (register, 0x40b0, 8)]
[(unique, 0x100000f9, 8) COPY (register, 0x40a0, 8), (register, 0x40a0, 8) MULTIEQUAL (unique, 0x10000119, 8) , (unique, 0x10000121, 8) , (register, 0x40a0, 8) , (register, 0x40a0, 8) , (register, 0x40a0, 8) , (register, 0x40a0, 8)]
[ ---  CBRANCH (ram, 0x44c658, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_NOTEQUAL (unique, 0x28500, 4) , (const, 0x0, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (unique, 0x12480, 8), (unique, 0x12480, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_ADD (unique, 0x10000165, 8) , (unique, 0x11f80, 8), (unique, 0x10000165, 8) CAST (register, 0x40d8, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x4, 8), (register, 0x4000, 8) INT_ZEXT (unique, 0x28500, 4), (unique, 0x28500, 4) LOAD (const, 0x1b1, 4) , (register, 0x40d8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
