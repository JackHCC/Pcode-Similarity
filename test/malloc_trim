[ ---  CBRANCH (ram, 0x413f2c, 1) , (unique, 0x18a80, 1), (unique, 0x18a80, 1) INT_SLESS (ram, 0x47efb8, 4) , (const, 0x0, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x24f, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0x24f, 4)]
[ ---  CALL (ram, 0x40ee30, 8)]
[ ---  BRANCH (ram, 0x413d70, 1)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(register, 0x40b8, 4) COPY (const, 0x0, 4)]
[(unique, 0x11f80, 8) PTRSUB (const, 0x0, 8) , (const, 0x47e720, 8)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(register, 0x40b8, 4) MULTIEQUAL (register, 0x40b8, 4) , (register, 0x40b8, 4) , (unique, 0x30900, 4)]
[ ---  CBRANCH (ram, 0x413d98, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_EQUAL (unique, 0x27480, 4) , (const, 0x0, 4), (unique, 0x27480, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016c, 8), (unique, 0x1000016c, 8) CAST (register, 0x40d8, 8), (register, 0x40d8, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x40d8, 8) , (register, 0x40d8, 8)]
[(unique, 0x3ec80, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x3ee00, 1), (unique, 0x3ee00, 1) CAST (unique, 0x10000174, 1), (unique, 0x10000174, 1) CALLOTHER (const, 0x3f, 4) , (register, 0x40d8, 8) , (const, 0x10, 1)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x50, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0x50, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000175, 8) , (const, 0x1, 4), (unique, 0x10000175, 8) CAST (register, 0x40d8, 8)]
[(unique, 0x3ec80, 1) CALLOTHER (const, 0x40, 4)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[ ---  CBRANCH (ram, 0x413d88, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x3ec80, 1) , (const, 0x0, 1), (unique, 0x3ec80, 1) MULTIEQUAL (unique, 0x3ec80, 1) , (unique, 0x3ec80, 1)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[ ---  CBRANCH (ram, 0x413f3c, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x27480, 4) , (const, 0x0, 4)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x24c, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0x24c, 4)]
[ ---  CALL (ram, 0x419848, 8) , (register, 0x40d8, 8)]
[ ---  BRANCH (ram, 0x413da0, 1)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x63, 4), (ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[ ---  CALL (ram, 0x40e7b0, 8) , (register, 0x40d8, 8)]
[(register, 0x4018, 4) INT_AND (unique, 0x100000d3, 4) , (const, 0xfffffff, 4), (unique, 0x100000d3, 4) SUBPIECE (unique, 0x1000004b, 8) , (const, 0x0, 4), (unique, 0x1000004b, 8) INT_RIGHT (ram, 0x47f008, 8) , (const, 0x4, 4), (ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0x63, 4), (ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[ ---  CBRANCH (ram, 0x413dc8, 1) , (unique, 0x1000, 1), (unique, 0x1000, 1) INT_LESS (const, 0x3ff, 8) , (ram, 0x47f008, 8), (ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0x63, 4), (ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[ ---  CBRANCH (ram, 0x413ec8, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESS (register, 0x4018, 8) , (const, 0x31, 8), (register, 0x4018, 8) INT_RIGHT (ram, 0x47f008, 8) , (const, 0x6, 8)]
[ ---  CBRANCH (ram, 0x413f34, 1) , (unique, 0x1000, 1), (unique, 0x1000, 1) INT_LESS (register, 0x4018, 8) , (const, 0x15, 8), (register, 0x4018, 8) INT_RIGHT (ram, 0x47f008, 8) , (const, 0x9, 8)]
[(unique, 0x11b80, 4) INT_ADD (register, 0x4018, 4) , (const, 0x5b, 4), (register, 0x4018, 4) SUBPIECE (register, 0x4018, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x413dc8, 1)]
[ ---  CBRANCH (ram, 0x413f48, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESS (register, 0x4018, 8) , (const, 0xb, 8), (register, 0x4018, 8) INT_RIGHT (ram, 0x47f008, 8) , (const, 0xc, 8)]
[ ---  CBRANCH (ram, 0x413f5c, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESS (register, 0x4018, 8) , (const, 0x5, 8), (register, 0x4018, 8) INT_RIGHT (ram, 0x47f008, 8) , (const, 0xf, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (unique, 0x1c80, 1), (unique, 0x1c80, 1) INT_LESS (const, 0x2, 8) , (register, 0x4018, 8), (register, 0x4018, 8) INT_RIGHT (ram, 0x47f008, 8) , (const, 0x12, 8)]
[(unique, 0x22400, 8) COPY (const, 0x2, 8)]
[(unique, 0x11b80, 4) INT_ADD (register, 0x4018, 4) , (const, 0x7c, 4), (register, 0x4018, 4) SUBPIECE (unique, 0x22400, 8) , (const, 0x0, 4), (unique, 0x22400, 8) MULTIEQUAL (register, 0x4018, 8) , (unique, 0x22400, 8)]
[ ---  BRANCH (ram, 0x413dc8, 1)]
[(unique, 0x11b80, 4) INT_ADD (register, 0x4018, 4) , (const, 0x77, 4), (register, 0x4018, 4) SUBPIECE (register, 0x4018, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x413dc8, 1)]
[(unique, 0x11b80, 4) INT_ADD (register, 0x4018, 4) , (const, 0x6e, 4), (register, 0x4018, 4) SUBPIECE (register, 0x4018, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x413dc8, 1)]
[(unique, 0x11b80, 4) INT_ADD (register, 0x4018, 4) , (const, 0x30, 4), (register, 0x4018, 4) SUBPIECE (register, 0x4018, 8) , (const, 0x0, 4)]
[(register, 0x4018, 4) MULTIEQUAL (register, 0x4018, 4) , (unique, 0x11b80, 4) , (unique, 0x11b80, 4) , (unique, 0x11b80, 4) , (unique, 0x11b80, 4) , (unique, 0x11b80, 4)]
[(register, 0x4028, 8) INT_SUB (ram, 0x47f008, 8) , (const, 0x1, 8)]
[(unique, 0x11f80, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) INT_ADD (unique, 0x1000017d, 8) , (const, 0x60, 8), (unique, 0x1000017d, 8) CAST (register, 0x40d8, 8)]
[(unique, 0x11f80, 8) INT_ADD (ram, 0x47f008, 8) , (const, 0x2f, 8)]
[(register, 0x40e0, 8) INT_2COMP (ram, 0x47f008, 8)]
[(register, 0x4030, 4) COPY (const, 0x0, 4)]
[(register, 0x4098, 4) COPY (const, 0x1, 4)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(register, 0x40d0, 8) MULTIEQUAL (unique, 0x11f80, 8) , (unique, 0x11f80, 8)]
[(register, 0x4030, 4) MULTIEQUAL (register, 0x4030, 4) , (register, 0x4030, 4)]
[(register, 0x100, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x413de8, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4098, 4) , (const, 0x1, 4), (register, 0x4098, 4) MULTIEQUAL (register, 0x4098, 4) , (unique, 0x11b80, 4)]
[(register, 0x107, 1) INT_SLESS (unique, 0x1000018d, 4) , (const, 0x0, 4), (unique, 0x1000018d, 4) CAST (unique, 0x1a400, 4), (unique, 0x1a400, 4) INT_SUB (register, 0x4018, 4) , (register, 0x4098, 4)]
[ ---  CBRANCH (ram, 0x413e4c, 1) , (unique, 0x1580, 1), (unique, 0x1580, 1) BOOL_OR (register, 0x101, 1) , (unique, 0x1480, 1), (unique, 0x1480, 1) INT_NOTEQUAL (register, 0x100, 1) , (register, 0x103, 1), (register, 0x101, 1) BOOL_OR (unique, 0x100000d0, 1) , (unique, 0x100000d1, 1), (unique, 0x100000d1, 1) INT_EQUAL (register, 0x4018, 4) , (register, 0x4098, 4), (unique, 0x100000d0, 1) BOOL_NEGATE (register, 0x108, 1), (register, 0x103, 1) BOOL_AND (register, 0x108, 1) , (unique, 0x100000d2, 1), (unique, 0x100000d2, 1) INT_SBORROW (register, 0x4018, 4) , (register, 0x4098, 4), (register, 0x100, 1) MULTIEQUAL (register, 0x100, 1) , (register, 0x107, 1)]
[(register, 0x40a0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (register, 0x40d0, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(unique, 0x1000015c, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(unique, 0x10000160, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(unique, 0x10000168, 4) MULTIEQUAL (register, 0x4030, 4) , (register, 0x4030, 4)]
[ ---  CBRANCH (ram, 0x413dec, 1) , (unique, 0x1000015b, 1), (unique, 0x1000015b, 1) INT_NOTEQUAL (register, 0x40d0, 8) , (unique, 0x10000153, 8), (unique, 0x10000153, 8) MULTIEQUAL (register, 0x40a0, 8) , (register, 0x40a0, 8)]
[ ---  CBRANCH (ram, 0x413e98, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (unique, 0x11f80, 8) , (register, 0x4008, 8), (register, 0x4008, 8) INT_AND (register, 0x4008, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x4008, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000199, 8), (unique, 0x10000199, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (unique, 0x10000153, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x413ea8, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (register, 0x4000, 8) , (unique, 0x11f80, 8), (register, 0x4000, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) INT_AND (unique, 0x12480, 8) , (register, 0x40e0, 8), (unique, 0x11f80, 8) PTRADD (unique, 0x10000153, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0x12480, 8) INT_ADD (unique, 0x100001a1, 8) , (unique, 0x11f80, 8), (unique, 0x100001a1, 8) CAST (unique, 0x10000153, 8)]
[ ---  CALL (ram, 0x40e678, 8) , (unique, 0x100000eb, 8) , (unique, 0x100000db, 8) , (const, 0x12ab, 8) , (unique, 0x100000fb, 8), (unique, 0x100000fb, 8) COPY (const, 0x4509f0, 8), (unique, 0x100000eb, 8) COPY (const, 0x4508a0, 8), (unique, 0x100000db, 8) COPY (const, 0x44fb28, 8)]
[(ram, 0x47efb8, 4) COPY (ram, 0x47efb8, 4), (ram, 0x47efb8, 4) INDIRECT (unique, 0x1000015c, 4) , (const, 0x1ec, 4)]
[(ram, 0x47f008, 8) COPY (ram, 0x47f008, 8), (ram, 0x47f008, 8) INDIRECT (unique, 0x10000160, 8) , (const, 0x1ec, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x413ee8, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESSEQUAL (unique, 0x12480, 8) , (register, 0x4000, 8), (unique, 0x12480, 8) CAST (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) INT_ADD (unique, 0x100001b1, 8) , (register, 0x4008, 8), (unique, 0x100001b1, 8) CAST (unique, 0x10000153, 8)]
[ ---  CALL (ram, 0x40e678, 8) , (unique, 0x100000f3, 8) , (unique, 0x100000e3, 8) , (const, 0x12ac, 8) , (unique, 0x10000103, 8), (unique, 0x10000103, 8) COPY (const, 0x4509f0, 8), (unique, 0x100000f3, 8) COPY (const, 0x4508d8, 8), (unique, 0x100000e3, 8) COPY (const, 0x44fb28, 8)]
[(ram, 0x47efb8, 4) COPY (ram, 0x47efb8, 4), (ram, 0x47efb8, 4) INDIRECT (unique, 0x1000015c, 4) , (const, 0x1cf, 4)]
[(ram, 0x47f008, 8) COPY (ram, 0x47f008, 8), (ram, 0x47f008, 8) INDIRECT (unique, 0x10000160, 8) , (const, 0x1cf, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x413f08, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (register, 0x4028, 8) , (register, 0x4008, 8), (register, 0x4008, 8) INT_SUB (register, 0x4008, 8) , (register, 0x4010, 8), (register, 0x4010, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_SUB (unique, 0x100001c1, 8) , (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) CAST (unique, 0x10000153, 8), (unique, 0x100001c1, 8) CAST (register, 0x4000, 8)]
[(ram, 0x47efb8, 4) INDIRECT (unique, 0x1000015c, 4) , (const, 0x1a9, 4)]
[(ram, 0x47f008, 8) INDIRECT (unique, 0x10000160, 8) , (const, 0x1a9, 4)]
[ ---  CALL (ram, 0x418600, 8) , (register, 0x4000, 8) , (register, 0x4008, 8) , (const, 0x4, 4), (register, 0x4008, 8) INT_AND (register, 0x40e0, 8) , (register, 0x4008, 8)]
[(register, 0x4030, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x413e98, 1)]
[(ram, 0x47f008, 8) MULTIEQUAL (unique, 0x10000160, 8) , (unique, 0x10000160, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (unique, 0x1000015c, 4) , (unique, 0x1000015c, 4) , (ram, 0x47efb8, 4)]
[(register, 0x4030, 4) MULTIEQUAL (unique, 0x10000168, 4) , (unique, 0x10000168, 4) , (register, 0x4030, 4)]
[(register, 0x40a0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) CAST (unique, 0x6500, 8), (unique, 0x6500, 8) PTRADD (unique, 0x10000153, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (unique, 0x10000160, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (unique, 0x1000015c, 4)]
[(register, 0x4030, 4) MULTIEQUAL (register, 0x4030, 4) , (unique, 0x10000168, 4)]
[(unique, 0x11f80, 8) PTRADD (register, 0x40d0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x413de0, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x11b80, 4) , (const, 0x80, 4), (unique, 0x11b80, 4) INT_ADD (register, 0x4098, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x413f74, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x40d8, 8) , (unique, 0x1000010b, 8), (unique, 0x1000010b, 8) PTRSUB (const, 0x0, 8) , (const, 0x47e720, 8)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0x133, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0x133, 4)]
[(unique, 0x30900, 4) INT_OR (register, 0x4030, 4) , (register, 0x4000, 4), (register, 0x4000, 4) CALL (ram, 0x40fac0, 8) , (register, 0x4000, 8)]
[ ---  BRANCH (ram, 0x413e04, 1)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(unique, 0x30900, 4) INT_OR (register, 0x40b8, 4) , (register, 0x4030, 4), (register, 0x4030, 4) MULTIEQUAL (register, 0x4030, 4) , (unique, 0x30900, 4)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[(unique, 0x2af80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) CAST (register, 0x40d8, 8)]
[(unique, 0x3c300, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x3c480, 1), (unique, 0x3c480, 1) CAST (unique, 0x100001e9, 1), (unique, 0x100001e9, 1) CALLOTHER (const, 0x3f, 4) , (register, 0x40d8, 8) , (const, 0x10, 1)]
[(ram, 0x47efb8, 4) INDIRECT (ram, 0x47efb8, 4) , (const, 0xec, 4)]
[(ram, 0x47f008, 8) INDIRECT (ram, 0x47f008, 8) , (const, 0xec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ea, 8) , (const, 0x0, 4), (unique, 0x100001ea, 8) CAST (register, 0x40d8, 8)]
[(unique, 0x3c300, 1) CALLOTHER (const, 0x40, 4)]
[(ram, 0x47f008, 8) MULTIEQUAL (ram, 0x47f008, 8) , (ram, 0x47f008, 8)]
[(ram, 0x47efb8, 4) MULTIEQUAL (ram, 0x47efb8, 4) , (ram, 0x47efb8, 4)]
[ ---  CBRANCH (ram, 0x413e0c, 1) , (unique, 0x18e00, 1), (unique, 0x18e00, 1) INT_NOTEQUAL (unique, 0x3c300, 1) , (const, 0x0, 1), (unique, 0x3c300, 1) MULTIEQUAL (unique, 0x3c300, 1) , (unique, 0x3c300, 1)]
[ ---  CBRANCH (ram, 0x413f8c, 1) , (unique, 0x1400, 1), (unique, 0x1400, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x2af80, 4)]
[ ---  CALLOTHER (const, 0x19, 4) , (const, 0x0, 2)]
[ ---  BRANCH (ram, 0x413e20, 1)]
[ ---  CBRANCH (ram, 0x413d88, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x40d8, 8) , (unique, 0x10000113, 8), (unique, 0x10000113, 8) PTRSUB (const, 0x0, 8) , (const, 0x47e720, 8), (register, 0x40d8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) CAST (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) INT_ADD (unique, 0x100001f2, 8) , (const, 0x870, 8), (unique, 0x100001f2, 8) CAST (register, 0x40d8, 8)]
[(ram, 0x47efb8, 4) COPY (ram, 0x47efb8, 4)]
[(ram, 0x47f008, 8) COPY (ram, 0x47f008, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 4), (register, 0x4000, 4) COPY (unique, 0x30900, 4)]
