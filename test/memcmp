[(unique, 0x41180, 8) INT_SUB (register, 0x4010, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4157d0, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (register, 0x4010, 8) , (const, 0x8, 8)]
[(unique, 0x11f80, 8) INT_SUB (register, 0x4010, 8) , (const, 0x4, 8)]
[(unique, 0x10000119, 8) COPY (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) CAST (register, 0x4000, 8)]
[(unique, 0x10000149, 8) COPY (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) CAST (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x4157ec, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESS (const, 0xfffffffffffffffb, 8) , (unique, 0x41180, 8)]
[(register, 0x4000, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_ADD (unique, 0x100001d1, 8) , (const, 0x4, 8), (unique, 0x100001d1, 8) CAST (register, 0x4000, 8)]
[(register, 0x4018, 8) INT_ZEXT (unique, 0x28700, 4), (unique, 0x28700, 4) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[(register, 0x4008, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) INT_ADD (unique, 0x100001e1, 8) , (const, 0x4, 8), (unique, 0x100001e1, 8) CAST (register, 0x4008, 8)]
[(register, 0x4028, 8) INT_ZEXT (unique, 0x28700, 4), (unique, 0x28700, 4) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x4157b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x28700, 4) , (unique, 0x28700, 4), (unique, 0x28700, 4) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8), (unique, 0x28700, 4) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[(register, 0x4010, 8) INT_SUB (register, 0x4010, 8) , (const, 0x8, 8)]
[(register, 0x105, 1) INT_LESS (const, 0xfffffffffffffffb, 8) , (register, 0x4010, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8)]
[(unique, 0x10000109, 8) COPY (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (unique, 0x10000119, 8) , (register, 0x4000, 8)]
[(unique, 0x10000139, 8) COPY (register, 0x4008, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x10000149, 8) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x4157c0, 1) , (unique, 0x100000b7, 1), (unique, 0x100000b7, 1) BOOL_NEGATE (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x11f80, 8) , (const, 0x0, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4010, 8) , (const, 0x4, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x11f80, 8) , (register, 0x4010, 8)]
[(unique, 0x10000111, 8) COPY (register, 0x4000, 8), (register, 0x4000, 8) PTRADD (register, 0x4000, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x4000, 8) MULTIEQUAL (unique, 0x10000109, 8) , (unique, 0x10000111, 8)]
[(unique, 0x10000141, 8) COPY (register, 0x4008, 8), (register, 0x4008, 8) PTRADD (register, 0x4008, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x10000139, 8) , (unique, 0x10000141, 8)]
[ ---  CBRANCH (ram, 0x4157f4, 1) , (register, 0x101, 1), (register, 0x101, 1) BOOL_AND (register, 0x108, 1) , (unique, 0x1000009d, 1), (unique, 0x1000009d, 1) INT_EQUAL (register, 0x4018, 4) , (register, 0x4028, 4), (register, 0x4028, 4) INT_ZEXT (unique, 0x28d00, 1), (register, 0x4018, 4) INT_ZEXT (unique, 0x28d00, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x41180, 8) , (const, 0x0, 8), (unique, 0x41180, 8) INT_ADD (register, 0x4010, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x28d00, 1) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8), (unique, 0x28d00, 1) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (unique, 0x10000109, 8) , (unique, 0x10000111, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x10000139, 8) , (unique, 0x10000141, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x11f80, 8) , (unique, 0x41180, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 4), (register, 0x4000, 4) CAST (unique, 0x100001f1, 4), (unique, 0x100001f1, 4) COPY (unique, 0x40680, 4), (unique, 0x40680, 4) INT_SUB (register, 0x4018, 4) , (register, 0x4028, 4)]
[(register, 0x4000, 8) CAST (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) INT_ADD (unique, 0x100001f5, 8) , (const, 0x8, 8), (unique, 0x100001f5, 8) CAST (register, 0x4000, 8)]
[(register, 0x4008, 8) CAST (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0x8, 8), (unique, 0x10000205, 8) CAST (register, 0x4008, 8)]
[(unique, 0x10000151, 8) COPY (register, 0x4018, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[(unique, 0x10000189, 8) COPY (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x4157b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4018, 8) , (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x41572c, 1) , (unique, 0x1400, 1), (unique, 0x1400, 1) BOOL_OR (register, 0x108, 1) , (unique, 0x1300, 1), (unique, 0x1300, 1) INT_SLESS (unique, 0x10000215, 8) , (const, 0x8, 8), (unique, 0x10000215, 8) CAST (unique, 0x41180, 8), (register, 0x108, 1) INT_EQUAL (unique, 0x41180, 8) , (const, 0x0, 8), (unique, 0x41180, 8) INT_SUB (register, 0x4010, 8) , (const, 0x10, 8)]
[(register, 0x4000, 8) CAST (unique, 0x10000225, 8), (unique, 0x10000225, 8) INT_ADD (unique, 0x1000021d, 8) , (const, 0x10, 8), (unique, 0x1000021d, 8) CAST (register, 0x4000, 8)]
[(register, 0x4008, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (unique, 0x1000022d, 8) , (const, 0x10, 8), (unique, 0x1000022d, 8) CAST (register, 0x4008, 8)]
[(unique, 0x10000161, 8) COPY (register, 0x4018, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[(unique, 0x10000199, 8) COPY (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x4157b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4018, 8) , (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8)]
[ ---  CBRANCH (ram, 0x415790, 1) , (unique, 0x100000a8, 1), (unique, 0x100000a8, 1) BOOL_AND (register, 0x105, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x41180, 8) , (const, 0x0, 8), (unique, 0x41180, 8) INT_SUB (register, 0x4010, 8) , (const, 0x20, 8), (register, 0x105, 1) INT_LESS (const, 0xf, 8) , (unique, 0x41180, 8)]
[(unique, 0x100000f1, 8) COPY (register, 0x4000, 8)]
[(unique, 0x10000121, 8) COPY (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x415760, 1) , (unique, 0x1000, 1), (unique, 0x1000, 1) INT_LESS (const, 0x60, 8) , (unique, 0x41180, 8)]
[(unique, 0x12480, 8) INT_ADD (unique, 0x41180, 8) , (register, 0x4038, 8), (register, 0x4038, 8) INT_AND (unique, 0x1000023d, 8) , (const, 0xf, 8), (unique, 0x1000023d, 8) CAST (register, 0x4000, 8)]
[(unique, 0x100000f9, 8) COPY (register, 0x4000, 8), (register, 0x4000, 8) CAST (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) INT_SUB (unique, 0x10000245, 8) , (register, 0x4038, 8), (unique, 0x10000245, 8) CAST (register, 0x4000, 8), (register, 0x4038, 8) INT_AND (unique, 0x1000023d, 8) , (const, 0xf, 8), (unique, 0x1000023d, 8) CAST (register, 0x4000, 8)]
[(unique, 0x10000129, 8) COPY (register, 0x4008, 8), (register, 0x4008, 8) CAST (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) INT_SUB (unique, 0x10000255, 8) , (register, 0x4038, 8), (unique, 0x10000255, 8) CAST (register, 0x4008, 8), (register, 0x4038, 8) INT_AND (unique, 0x1000023d, 8) , (const, 0xf, 8), (unique, 0x1000023d, 8) CAST (register, 0x4000, 8)]
[(unique, 0x10000101, 8) COPY (register, 0x4000, 8), (register, 0x4000, 8) PTRADD (register, 0x4000, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x4000, 8) MULTIEQUAL (unique, 0x100000f1, 8) , (unique, 0x100000f9, 8) , (unique, 0x10000101, 8)]
[(unique, 0x10000131, 8) COPY (register, 0x4008, 8), (register, 0x4008, 8) PTRADD (register, 0x4008, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x10000121, 8) , (unique, 0x10000129, 8) , (unique, 0x10000131, 8)]
[ ---  CBRANCH (ram, 0x415760, 1) , (register, 0x101, 1), (register, 0x101, 1) BOOL_AND (unique, 0x1000009a, 1) , (unique, 0x1000009b, 1), (unique, 0x1000009b, 1) INT_EQUAL (register, 0x4020, 8) , (register, 0x4030, 8), (unique, 0x1000009a, 1) BOOL_AND (unique, 0x100000a2, 1) , (unique, 0x10000097, 1), (unique, 0x100000a2, 1) BOOL_AND (register, 0x105, 1) , (register, 0x108, 1), (unique, 0x10000097, 1) INT_EQUAL (register, 0x4018, 8) , (register, 0x4028, 8), (register, 0x108, 1) INT_NOTEQUAL (unique, 0x41180, 8) , (const, 0x0, 8), (unique, 0x41180, 8) INT_SUB (register, 0x4010, 8) , (const, 0x10, 8), (register, 0x105, 1) INT_LESS (const, 0xf, 8) , (register, 0x4010, 8), (register, 0x4030, 8) LOAD (const, 0x1b1, 4) , (unique, 0x28280, 8), (unique, 0x28280, 8) PTRADD (register, 0x4008, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (register, 0x4008, 8), (register, 0x4020, 8) LOAD (const, 0x1b1, 4) , (unique, 0x28280, 8), (unique, 0x28280, 8) PTRADD (register, 0x4000, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (unique, 0x100000f1, 8) , (unique, 0x100000f9, 8) , (unique, 0x10000101, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x10000121, 8) , (unique, 0x10000129, 8) , (unique, 0x10000131, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x41180, 8) , (unique, 0x12480, 8) , (unique, 0x41180, 8)]
[(unique, 0x10000169, 8) COPY (register, 0x4018, 8)]
[(unique, 0x100001a1, 8) COPY (register, 0x4028, 8)]
[ ---  CBRANCH (ram, 0x4157b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4018, 8) , (register, 0x4028, 8)]
[(unique, 0x10000171, 8) COPY (register, 0x4020, 8)]
[(unique, 0x100001a9, 8) COPY (register, 0x4030, 8)]
[ ---  CBRANCH (ram, 0x4157b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4020, 8) , (register, 0x4030, 8)]
[(register, 0x4020, 8) LOAD (const, 0x1b1, 4) , (unique, 0x28280, 8), (unique, 0x28280, 8) PTRADD (unique, 0x12480, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x12480, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0x10000265, 8) , (register, 0x4010, 8), (unique, 0x10000265, 8) CAST (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x41180, 8) , (unique, 0x41180, 8)]
[(register, 0x4030, 8) LOAD (const, 0x1b1, 4) , (unique, 0x28280, 8), (unique, 0x28280, 8) PTRADD (unique, 0x12480, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x12480, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) INT_ADD (unique, 0x10000275, 8) , (register, 0x4010, 8), (unique, 0x10000275, 8) CAST (register, 0x4008, 8), (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (register, 0x4008, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x41180, 8) , (unique, 0x41180, 8)]
[(unique, 0x10000179, 8) COPY (register, 0x4018, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (unique, 0x12480, 8), (unique, 0x12480, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0x10000265, 8) , (register, 0x4010, 8), (unique, 0x10000265, 8) CAST (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x41180, 8) , (unique, 0x41180, 8)]
[(unique, 0x100001b1, 8) COPY (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (unique, 0x12480, 8), (unique, 0x12480, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) INT_ADD (unique, 0x10000275, 8) , (register, 0x4010, 8), (unique, 0x10000275, 8) CAST (register, 0x4008, 8), (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (register, 0x4008, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x41180, 8) , (unique, 0x41180, 8)]
[ ---  CBRANCH (ram, 0x4157b4, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4018, 8) , (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (unique, 0x12480, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (unique, 0x12480, 8), (unique, 0x12480, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) INT_ADD (unique, 0x10000275, 8) , (register, 0x4010, 8), (unique, 0x10000275, 8) CAST (register, 0x4008, 8), (unique, 0x12480, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0x10000265, 8) , (register, 0x4010, 8), (unique, 0x10000265, 8) CAST (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8), (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (register, 0x4008, 8), (register, 0x4010, 8) MULTIEQUAL (unique, 0x41180, 8) , (unique, 0x41180, 8)]
[(unique, 0x10000181, 8) COPY (register, 0x4020, 8)]
[(unique, 0x100001b9, 8) COPY (register, 0x4030, 8)]
[(unique, 0x10000159, 8) COPY (register, 0x4018, 8), (register, 0x4018, 8) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) INT_ADD (unique, 0x10000285, 8) , (unique, 0x41180, 8), (unique, 0x10000285, 8) CAST (register, 0x4000, 8)]
[(unique, 0x10000191, 8) COPY (register, 0x4028, 8), (register, 0x4028, 8) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x1000029d, 8), (unique, 0x1000029d, 8) INT_ADD (unique, 0x10000295, 8) , (unique, 0x41180, 8), (unique, 0x10000295, 8) CAST (register, 0x4008, 8)]
[ ---  BRANCH (ram, 0x4157b4, 1)]
[(register, 0x105, 1) INT_LESSEQUAL (register, 0x4028, 8) , (register, 0x4018, 8), (register, 0x4028, 8) INT_OR (unique, 0x33b80, 8) , (unique, 0x33c00, 8), (unique, 0x33c00, 8) INT_LEFT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33b80, 8) INT_RIGHT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33600, 8) INT_OR (unique, 0x33980, 8) , (unique, 0x33a80, 8), (unique, 0x33a80, 8) INT_LEFT (unique, 0x33a00, 8) , (const, 0x10, 4), (unique, 0x33a00, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff, 8), (unique, 0x33980, 8) INT_RIGHT (unique, 0x33900, 8) , (const, 0x10, 4), (unique, 0x33900, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff0000, 8), (unique, 0x33600, 8) INT_OR (unique, 0x33700, 8) , (unique, 0x33800, 8), (unique, 0x33800, 8) INT_LEFT (unique, 0x33780, 8) , (const, 0x8, 4), (unique, 0x33780, 8) INT_AND (register, 0x4028, 8) , (const, 0xff00ff00ff00ff, 8), (unique, 0x33700, 8) INT_RIGHT (unique, 0x33680, 8) , (const, 0x8, 4), (unique, 0x33680, 8) INT_AND (register, 0x4028, 8) , (const, 0xff00ff00ff00ff00, 8), (register, 0x4018, 8) INT_OR (unique, 0x33b80, 8) , (unique, 0x33c00, 8), (unique, 0x33c00, 8) INT_LEFT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33b80, 8) INT_RIGHT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33600, 8) INT_OR (unique, 0x33980, 8) , (unique, 0x33a80, 8), (unique, 0x33a80, 8) INT_LEFT (unique, 0x33a00, 8) , (const, 0x10, 4), (unique, 0x33a00, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff, 8), (unique, 0x33980, 8) INT_RIGHT (unique, 0x33900, 8) , (const, 0x10, 4), (unique, 0x33900, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff0000, 8), (unique, 0x33600, 8) INT_OR (unique, 0x33700, 8) , (unique, 0x33800, 8), (unique, 0x33800, 8) INT_LEFT (unique, 0x33780, 8) , (const, 0x8, 4), (unique, 0x33780, 8) INT_AND (register, 0x4018, 8) , (const, 0xff00ff00ff00ff, 8), (unique, 0x33700, 8) INT_RIGHT (unique, 0x33680, 8) , (const, 0x8, 4), (unique, 0x33680, 8) INT_AND (register, 0x4018, 8) , (const, 0xff00ff00ff00ff00, 8), (register, 0x4018, 8) MULTIEQUAL (unique, 0x10000151, 8) , (unique, 0x10000159, 8) , (unique, 0x10000161, 8) , (unique, 0x10000169, 8) , (unique, 0x10000171, 8) , (unique, 0x10000179, 8) , (unique, 0x10000181, 8) , (register, 0x4018, 8), (register, 0x4028, 8) MULTIEQUAL (unique, 0x10000189, 8) , (unique, 0x10000191, 8) , (unique, 0x10000199, 8) , (unique, 0x100001a1, 8) , (unique, 0x100001a9, 8) , (unique, 0x100001b1, 8) , (unique, 0x100001b9, 8) , (register, 0x4028, 8)]
[(register, 0x108, 1) INT_EQUAL (register, 0x4018, 8) , (register, 0x4028, 8), (register, 0x4028, 8) INT_OR (unique, 0x33b80, 8) , (unique, 0x33c00, 8), (unique, 0x33c00, 8) INT_LEFT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33b80, 8) INT_RIGHT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33600, 8) INT_OR (unique, 0x33980, 8) , (unique, 0x33a80, 8), (unique, 0x33a80, 8) INT_LEFT (unique, 0x33a00, 8) , (const, 0x10, 4), (unique, 0x33a00, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff, 8), (unique, 0x33980, 8) INT_RIGHT (unique, 0x33900, 8) , (const, 0x10, 4), (unique, 0x33900, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff0000, 8), (unique, 0x33600, 8) INT_OR (unique, 0x33700, 8) , (unique, 0x33800, 8), (unique, 0x33800, 8) INT_LEFT (unique, 0x33780, 8) , (const, 0x8, 4), (unique, 0x33780, 8) INT_AND (register, 0x4028, 8) , (const, 0xff00ff00ff00ff, 8), (unique, 0x33700, 8) INT_RIGHT (unique, 0x33680, 8) , (const, 0x8, 4), (unique, 0x33680, 8) INT_AND (register, 0x4028, 8) , (const, 0xff00ff00ff00ff00, 8), (register, 0x4018, 8) INT_OR (unique, 0x33b80, 8) , (unique, 0x33c00, 8), (unique, 0x33c00, 8) INT_LEFT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33b80, 8) INT_RIGHT (unique, 0x33600, 8) , (const, 0x20, 4), (unique, 0x33600, 8) INT_OR (unique, 0x33980, 8) , (unique, 0x33a80, 8), (unique, 0x33a80, 8) INT_LEFT (unique, 0x33a00, 8) , (const, 0x10, 4), (unique, 0x33a00, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff, 8), (unique, 0x33980, 8) INT_RIGHT (unique, 0x33900, 8) , (const, 0x10, 4), (unique, 0x33900, 8) INT_AND (unique, 0x33600, 8) , (const, 0xffff0000ffff0000, 8), (unique, 0x33600, 8) INT_OR (unique, 0x33700, 8) , (unique, 0x33800, 8), (unique, 0x33800, 8) INT_LEFT (unique, 0x33780, 8) , (const, 0x8, 4), (unique, 0x33780, 8) INT_AND (register, 0x4018, 8) , (const, 0xff00ff00ff00ff, 8), (unique, 0x33700, 8) INT_RIGHT (unique, 0x33680, 8) , (const, 0x8, 4), (unique, 0x33680, 8) INT_AND (register, 0x4018, 8) , (const, 0xff00ff00ff00ff00, 8), (register, 0x4018, 8) MULTIEQUAL (unique, 0x10000151, 8) , (unique, 0x10000159, 8) , (unique, 0x10000161, 8) , (unique, 0x10000169, 8) , (unique, 0x10000171, 8) , (unique, 0x10000179, 8) , (unique, 0x10000181, 8) , (register, 0x4018, 8), (register, 0x4028, 8) MULTIEQUAL (unique, 0x10000189, 8) , (unique, 0x10000191, 8) , (unique, 0x10000199, 8) , (unique, 0x100001a1, 8) , (unique, 0x100001a9, 8) , (unique, 0x100001b1, 8) , (unique, 0x100001b9, 8) , (register, 0x4028, 8)]
[(unique, 0x100000e9, 4) COPY (unique, 0x21780, 4), (unique, 0x21780, 4) INT_2COMP (register, 0x4000, 4), (register, 0x4000, 4) INT_ZEXT (unique, 0x2300, 1), (unique, 0x2300, 1) BOOL_NEGATE (register, 0x101, 1), (register, 0x101, 1) MULTIEQUAL (register, 0x108, 1) , (register, 0x108, 1)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x102, 1), (register, 0x102, 1) MULTIEQUAL (register, 0x105, 1) , (register, 0x105, 1)]
[(unique, 0x100000ed, 4) COPY (register, 0x4000, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 4), (register, 0x4000, 4) CAST (unique, 0x100002a5, 4), (unique, 0x100002a5, 4) COPY (unique, 0x21780, 4), (unique, 0x21780, 4) MULTIEQUAL (unique, 0x100000e9, 4) , (unique, 0x100000ed, 4)]
