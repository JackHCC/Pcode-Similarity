[ ---  CBRANCH (ram, 0x413ff0, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_EQUAL (register, 0x4000, 8) , (const, 0x0, 8)]
[(ram, 0x48046c, 4) COPY (ram, 0x48046c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (const, 0x0, 8)]
[(register, 0x4010, 8) INT_SUB (register, 0x4000, 8) , (const, 0x10, 8)]
[(register, 0x4000, 8) INT_AND (register, 0x4008, 8) , (const, 0x2, 8), (register, 0x4008, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6980, 8), (unique, 0x6980, 8) CAST (unique, 0x10000060, 8), (unique, 0x10000060, 8) INT_ADD (register, 0x4000, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x4008, 8) INT_AND (register, 0x4008, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x4008, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6980, 8), (unique, 0x6980, 8) CAST (unique, 0x10000060, 8), (unique, 0x10000060, 8) INT_ADD (register, 0x4000, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x413ff8, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (ram, 0x48046c, 4) , (const, 0x1, 4)]
[(register, 0x4018, 8) INT_SUB (register, 0x4008, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x12580, 4) , (const, 0x1, 4), (unique, 0x12580, 4) INT_AND (unique, 0x24480, 4) , (const, 0xff, 4), (unique, 0x24480, 4) INT_XOR (register, 0x4020, 4) , (register, 0x4018, 4), (register, 0x4020, 4) SUBPIECE (register, 0x4020, 8) , (const, 0x0, 4), (register, 0x4018, 4) SUBPIECE (register, 0x4018, 8) , (const, 0x0, 4), (register, 0x4020, 8) INT_RIGHT (register, 0x4010, 8) , (const, 0x3, 8), (register, 0x4018, 8) INT_RIGHT (register, 0x4010, 8) , (const, 0xb, 8)]
[(unique, 0x22280, 4) COPY (const, 0x2, 4)]
[(register, 0x4000, 8) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000068, 8), (unique, 0x10000068, 8) INT_ADD (register, 0x4010, 8) , (unique, 0x12480, 8), (unique, 0x12480, 8) INT_ADD (register, 0x4018, 8) , (unique, 0x4400, 8), (unique, 0x4400, 8) INT_MULT (register, 0x4008, 8) , (const, 0x8, 8), (register, 0x4008, 8) INT_ZEXT (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4000, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x413fd0, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_NOTEQUAL (register, 0x4000, 4) , (unique, 0x22280, 4), (register, 0x4000, 4) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000068, 8), (unique, 0x10000068, 8) INT_ADD (register, 0x4010, 8) , (unique, 0x12480, 8), (unique, 0x12480, 8) INT_ADD (register, 0x4018, 8) , (unique, 0x4400, 8), (unique, 0x4400, 8) INT_MULT (register, 0x4008, 8) , (const, 0x8, 8), (register, 0x4008, 8) INT_ZEXT (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4000, 8) , (const, 0x0, 8), (unique, 0x22280, 4) MULTIEQUAL (unique, 0x12580, 4) , (unique, 0x22280, 4)]
[ ---  CBRANCH (ram, 0x414070, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_NOTEQUAL (register, 0x4000, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41405c, 1) , (register, 0x105, 1), (register, 0x105, 1) INT_LESSEQUAL (unique, 0x11f80, 8) , (unique, 0x12480, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x10, 8)]
[(register, 0x4000, 8) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000070, 8), (unique, 0x10000070, 8) INT_ADD (register, 0x4010, 8) , (register, 0x4008, 8), (register, 0x4008, 8) INT_SUB (register, 0x4008, 8) , (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x12480, 8) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x414048, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (register, 0x4000, 4) , (unique, 0x22280, 4), (register, 0x4000, 4) INT_ZEXT (unique, 0x28f00, 1), (unique, 0x28f00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x7580, 8), (unique, 0x7580, 8) CAST (unique, 0x10000070, 8), (unique, 0x10000070, 8) INT_ADD (register, 0x4010, 8) , (register, 0x4008, 8), (register, 0x4008, 8) INT_SUB (register, 0x4008, 8) , (register, 0x4000, 8), (register, 0x4000, 8) MULTIEQUAL (register, 0x4000, 8) , (register, 0x4000, 8), (register, 0x4008, 8) MULTIEQUAL (unique, 0x12480, 8) , (register, 0x4008, 8)]
[ ---  CBRANCH (ram, 0x414070, 1) , (unique, 0x18f00, 1), (unique, 0x18f00, 1) INT_NOTEQUAL (register, 0x4000, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x414070, 1) , (unique, 0xe80, 1), (unique, 0xe80, 1) INT_LESSEQUAL (unique, 0x11f80, 8) , (register, 0x4008, 8), (unique, 0x11f80, 8) INT_ADD (register, 0x4000, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x40e720, 8) , (unique, 0x10000058, 8), (unique, 0x10000058, 8) COPY (const, 0x450900, 8)]
[(ram, 0x48046c, 4) COPY (ram, 0x48046c, 4), (ram, 0x48046c, 4) INDIRECT (ram, 0x48046c, 4) , (const, 0x92, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x413fd8, 1) , (unique, 0x18f80, 1), (unique, 0x18f80, 1) INT_EQUAL (register, 0x4000, 8) , (const, 0x0, 8)]
[(register, 0x4008, 8) INT_SUB (register, 0x4008, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (const, 0x2, 1) , (register, 0x108, 1), (register, 0x108, 1) INT_EQUAL (unique, 0x42e00, 8) , (const, 0x0, 8), (unique, 0x42e00, 8) INT_AND (register, 0x4000, 8) , (const, 0x1, 8), (register, 0x4000, 8) LOAD (const, 0x1b1, 4) , (unique, 0x6500, 8), (unique, 0x6500, 8) CAST (unique, 0x10000078, 8), (unique, 0x10000078, 8) INT_ADD (unique, 0x12480, 8) , (const, 0x8, 8), (unique, 0x12480, 8) INT_ADD (register, 0x4010, 8) , (register, 0x4008, 8)]
[(unique, 0x22400, 8) COPY (const, 0x0, 8)]
[(ram, 0x48046c, 4) COPY (ram, 0x48046c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) COPY (unique, 0x22400, 8), (unique, 0x22400, 8) MULTIEQUAL (register, 0x4008, 8) , (unique, 0x22400, 8)]
[(ram, 0x48046c, 4) COPY (ram, 0x48046c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x4000, 8), (register, 0x4000, 8) INT_SUB (register, 0x4008, 8) , (const, 0x10, 8), (register, 0x4008, 8) MULTIEQUAL (register, 0x4008, 8) , (unique, 0x12480, 8) , (register, 0x4008, 8)]
