[(unique, 0x10000096, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x267241, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b74a2, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x267265, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffffe0, 8) COPY (const, 0x267251, 8)]
[ ---  CALL (ram, 0x1210b0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x10000096, 4), (unique, 0xbd80, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x3c, 4), (register, 0x30, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x3c, 4), (unique, 0x3100, 8) CAST (unique, 0x10000101, 8), (unique, 0x10000101, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31, 4)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x3c, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x39, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x3c, 4), (stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x31, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x3c, 4), (stack, 0xffffffffffffffe0, 8) COPY (const, 0x267265, 8)]
[ ---  CALL (ram, 0x13ec60, 8)]
[(register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x3f, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x3f, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffe0, 8) COPY (const, 0x26726a, 8)]
[ ---  CALL (ram, 0x267100, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000119, 8), (unique, 0x10000119, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x3f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000121, 8) , (unique, 0x3800, 8), (unique, 0x10000121, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x3800, 8) CAST (unique, 0x10000109, 8), (unique, 0x10000109, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff00, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x3f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x88, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x88, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x81, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x3f, 4), (ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x88, 4), (stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x3f, 4), (stack, 0xfffffffffffffefc, 4) MULTIEQUAL (stack, 0xfffffffffffffefc, 4) , (stack, 0xfffffffffffffefc, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (unique, 0x100000e1, 8) , (const, 0x88, 4), (unique, 0x100000e1, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x3f, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x88, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffefc, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x88, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000111, 8), (unique, 0x10000111, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x100000e9, 8) , (const, 0x88, 4), (unique, 0x100000e9, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x267320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13eb70, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xdc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000129, 8) , (unique, 0xbd80, 8), (unique, 0x10000129, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x267302, 1)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x9e, 4)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000131, 8) , (unique, 0xbd80, 8), (unique, 0x10000131, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x9e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 16)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xad, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xaa, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xa5, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x9e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000139, 8) , (const, 0x0, 8), (unique, 0x10000139, 8) CAST (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x100000dd, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffff08, 8) MULTIEQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(register, 0x0, 4) COPY (unique, 0x1000009e, 4), (unique, 0x1000009e, 4) MULTIEQUAL (unique, 0x100000dd, 4) , (stack, 0xfffffffffffffefc, 4)]
[ ---  CBRANCH (ram, 0x267335, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000141, 8), (unique, 0x10000141, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xd0, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0xd0, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xd0, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xd0, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eada8, 8) COPY (ram, 0x4eada8, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0xd0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eada8, 8) COPY (ram, 0x4eada8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
