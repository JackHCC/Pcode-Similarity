[ ---  CBRANCH (ram, 0x16d320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000007b, 4) , (const, 0x0, 4), (unique, 0x1000007b, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x287, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x287, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x287, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x287, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x287, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x287, 4)]
[ ---  CALL (ram, 0x17a900, 8)]
[ ---  CBRANCH (ram, 0x16d386, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ff, 4) , (const, 0x0, 4), (unique, 0x100000ff, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c4, 8), (unique, 0x100001c4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16d32c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x16d382, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000270, 8), (unique, 0x10000270, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000268, 8), (unique, 0x10000268, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x16d35a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x283, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x283, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x283, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x283, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x283, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x208, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x208, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x208, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x208, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x208, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x16d375, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x266, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x266, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x266, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x266, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x266, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x266, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e4, 8), (unique, 0x100001e4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x214, 4), (ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x214, 4), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x214, 4), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x214, 4), (ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x214, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000280, 8) , (register, 0x80, 8), (unique, 0x10000280, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000278, 8), (unique, 0x10000278, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x21c, 4), (ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x21c, 4), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x21c, 4), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x21c, 4), (ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x16d230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000127, 4) , (const, 0x0, 4), (unique, 0x10000127, 4) INT_AND (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x23f, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x23f, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x23f, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x23f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x23f, 4)]
[(register, 0x0, 4) CALL (ram, 0x179770, 8) , (register, 0x38, 8)]
[(register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) INT_SRIGHT (unique, 0x10000288, 4) , (const, 0x1f, 4), (unique, 0x10000288, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x1a, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(unique, 0x1000016e, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000172, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(unique, 0x1000017a, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(unique, 0x10000182, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(unique, 0x1000018a, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(unique, 0x1000018e, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16d240, 1) , (unique, 0x1000016d, 1), (unique, 0x1000016d, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(ram, 0x4c4700, 8) INDIRECT (unique, 0x10000172, 8) , (const, 0x17a, 4)]
[(ram, 0x4c4708, 8) INDIRECT (unique, 0x1000017a, 8) , (const, 0x17a, 4)]
[(ram, 0x4c4710, 8) INDIRECT (unique, 0x10000182, 8) , (const, 0x17a, 4)]
[(ram, 0x4c8378, 4) INDIRECT (unique, 0x1000018a, 4) , (const, 0x17a, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000018e, 4) , (const, 0x17a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x16d240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x188, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x188, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x188, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x188, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000294, 8) , (const, 0x0, 8), (unique, 0x10000294, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x16d3da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x188, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x1c0, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x1c0, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x1c0, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x1c0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x198, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x198, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x198, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x198, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x198, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000225, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(unique, 0x1000022d, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(unique, 0x10000235, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(unique, 0x1000023d, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(unique, 0x10000241, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16d3f4, 1) , (unique, 0x10000224, 1), (unique, 0x10000224, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c4700, 8) INDIRECT (unique, 0x10000225, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c4708, 8) INDIRECT (unique, 0x1000022d, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c4710, 8) INDIRECT (unique, 0x10000235, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c8378, 4) INDIRECT (unique, 0x1000023d, 4) , (const, 0x1b2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000241, 4) , (const, 0x1b2, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x8d, 4), (ram, 0x4c4700, 8) MULTIEQUAL (unique, 0x10000172, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (unique, 0x10000225, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x8d, 4), (ram, 0x4c4708, 8) MULTIEQUAL (unique, 0x1000017a, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (unique, 0x1000022d, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x8d, 4), (ram, 0x4c4710, 8) MULTIEQUAL (unique, 0x10000182, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (unique, 0x10000235, 8)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x8d, 4), (ram, 0x4c8378, 4) MULTIEQUAL (unique, 0x1000018a, 4) , (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4) , (unique, 0x1000023d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x8d, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x1000018e, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x10000241, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x16d400, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[(unique, 0x10000254, 4) COPY (ram, 0x4c8378, 4)]
[ ---  CBRANCH (ram, 0x16d2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x16e, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x16e, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x16e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x16e, 4)]
[ ---  CALL (ram, 0x17b110, 8) , (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000258, 4) COPY (ram, 0x4c8378, 4), (ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x16e, 4)]
[ ---  BRANCH (ram, 0x16d2f0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x98, 8)]
[ ---  CBRANCH (ram, 0x16d280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8378, 4) , (const, 0x0, 4)]
[(ram, 0x4c8378, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8378, 4) , (const, 0x0, 4)]
[(ram, 0x4c8378, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x16d2a3, 1)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x143, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x143, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x143, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x143, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x143, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8378, 8)]
[ ---  CALL (ram, 0x121a60, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INT_ADD (unique, 0x100002b4, 8) , (const, 0x48, 8), (unique, 0x100002b4, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0xd4, 4), (ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0xce, 4), (ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xd4, 4), (ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0xce, 4), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xd4, 4), (ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0xce, 4), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0xd4, 4), (ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0xce, 4), (ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[ ---  CALL (ram, 0x121a60, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) INT_ADD (unique, 0x100002c4, 8) , (const, 0x88, 8), (unique, 0x100002c4, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x16d2ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd4, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xce, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000250, 4) COPY (unique, 0x10000245, 4), (unique, 0x10000245, 4) INT_ADD (ram, 0x4c8378, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x16d2f0, 1) , (unique, 0x10000249, 1), (unique, 0x10000249, 1) INT_NOTEQUAL (unique, 0x10000245, 4) , (const, 0x0, 4), (unique, 0x10000245, 4) INT_ADD (ram, 0x4c8378, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x124, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x124, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x124, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x124, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000194, 8), (unique, 0x10000194, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8378, 8)]
[(unique, 0x1000024c, 4) COPY (ram, 0x4c8378, 4), (ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x124, 4), (ram, 0x4c8378, 4) INT_ADD (ram, 0x4c8378, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(ram, 0x4c8378, 4) COPY (unique, 0x1000025c, 4), (unique, 0x1000025c, 4) MULTIEQUAL (unique, 0x1000024c, 4) , (unique, 0x10000250, 4) , (unique, 0x10000254, 4) , (unique, 0x10000258, 4)]
[ ---  CBRANCH (ram, 0x16d313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) CAST (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[ ---  CBRANCH (ram, 0x16d313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) CAST (ram, 0x4c4708, 8)]
[ ---  CBRANCH (ram, 0x16d313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) CAST (ram, 0x4c4700, 8)]
[(ram, 0x4c4700, 8) INDIRECT (ram, 0x4c4700, 8) , (const, 0x10c, 4)]
[(ram, 0x4c4708, 8) INDIRECT (ram, 0x4c4708, 8) , (const, 0x10c, 4)]
[(ram, 0x4c4710, 8) INDIRECT (ram, 0x4c4710, 8) , (const, 0x10c, 4)]
[(ram, 0x4c8378, 4) INDIRECT (ram, 0x4c8378, 4) , (const, 0x10c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10c, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x38, 8)]
[(ram, 0x4c4700, 8) COPY (ram, 0x4c4700, 8), (ram, 0x4c4700, 8) MULTIEQUAL (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8) , (ram, 0x4c4700, 8)]
[(ram, 0x4c4708, 8) COPY (ram, 0x4c4708, 8), (ram, 0x4c4708, 8) MULTIEQUAL (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8) , (ram, 0x4c4708, 8)]
[(ram, 0x4c4710, 8) COPY (ram, 0x4c4710, 8), (ram, 0x4c4710, 8) MULTIEQUAL (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8) , (ram, 0x4c4710, 8)]
[(ram, 0x4c8378, 4) COPY (ram, 0x4c8378, 4), (ram, 0x4c8378, 4) MULTIEQUAL (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4) , (ram, 0x4c8378, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x1000016e, 4)]
