[ ---  CBRANCH (ram, 0x491d00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 1) MULTIEQUAL (register, 0xa0, 1) , (register, 0xa0, 1) , (register, 0xa0, 1)]
[ ---  CBRANCH (ram, 0x491cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000005a, 8), (unique, 0x1000005a, 8) INT_ADD (register, 0x18, 8) , (const, 0x31d, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xa0, 1) INT_OR (register, 0xa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4915d0, 8) , (register, 0x18, 8) , (register, 0x30, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x491cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000062, 8), (unique, 0x10000062, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (register, 0xa0, 1)]
[ ---  CBRANCH (ram, 0x491cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000006a, 8), (unique, 0x1000006a, 8) INT_ADD (register, 0x18, 8) , (const, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (register, 0xa0, 1)]
