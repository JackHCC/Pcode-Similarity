[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100002fd, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x188900, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0xbd80, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x30, 8) , (const, 0x64, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000335, 8), (unique, 0x10000335, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x1000032d, 8) , (const, 0x3, 4), (unique, 0x1000032d, 8) CAST (register, 0xa0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0xa0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000305, 8) COPY (unique, 0x3a00, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100002fd, 8) , (unique, 0x10000305, 8)]
[ ---  CBRANCH (ram, 0x188b18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x411, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000345, 8), (unique, 0x10000345, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x188914, 1)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x8f, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[(ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  CBRANCH (ram, 0x188b58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x408, 4)]
[ ---  CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (ram, 0x4c2f58, 8)]
[ ---  BRANCH (ram, 0x18891d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000381, 8), (unique, 0x10000381, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (unique, 0x10000379, 8), (unique, 0x10000379, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0xb0, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0xae, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0xab, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0xa8, 4), (ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (unique, 0x10000379, 8), (unique, 0x10000379, 8) CAST (register, 0x0, 8)]
[(register, 0x28, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000391, 4), (unique, 0x10000391, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000389, 8) , (unique, 0x1000021d, 8), (unique, 0x10000389, 8) CAST (register, 0x0, 8), (unique, 0x1000021d, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000375, 4), (unique, 0x10000375, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1889b0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000395, 4) , (const, 0xf, 4), (unique, 0x10000395, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x188b09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_RIGHT (register, 0xa0, 8) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x188b28, 1) , (unique, 0x100000ba, 1), (unique, 0x100000ba, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000399, 8), (unique, 0x10000399, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001b5, 8) , (unique, 0x10000265, 8) , (const, 0x1, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x100001b5, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3100, 8), (unique, 0x3880, 8) INT_ADD (register, 0x28, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x3680, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3680, 8) INT_AND (register, 0xa0, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x188b28, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0xd, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x3ec, 4), (ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) CAST (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x188b28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x8, 8)]
[(unique, 0x1000031d, 8) COPY (register, 0x88, 8), (register, 0x88, 8) INT_ZEXT (unique, 0x100000c9, 4), (unique, 0x100000c9, 4) INT_RIGHT (register, 0x88, 4) , (const, 0x2, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0xf, 4), (register, 0x88, 4) INT_ADD (unique, 0x1000015e, 4) , (unique, 0x10000162, 4), (unique, 0x10000162, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x1000015e, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0x100001bd, 8) , (unique, 0x3680, 8) , (const, 0x1, 8), (unique, 0x100001bd, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x188a2a, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_ZEXT (unique, 0x100000c9, 4), (unique, 0x100000c9, 4) INT_RIGHT (register, 0x88, 4) , (const, 0x2, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0xf, 4), (register, 0x88, 4) INT_ADD (unique, 0x1000015e, 4) , (unique, 0x10000162, 4), (unique, 0x10000162, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x1000015e, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0x100001bd, 8) , (unique, 0x3680, 8) , (const, 0x1, 8), (unique, 0x100001bd, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8)]
[(unique, 0x10000325, 8) COPY (register, 0x10, 8)]
[(unique, 0x100002e5, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x188a64, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000031d, 8) , (unique, 0x10000325, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x268, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) CAST (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003b1, 8), (unique, 0x100003b1, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x188a64, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x27f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x100003c9, 8), (unique, 0x100003c9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_SUB (register, 0x28, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003c1, 8), (unique, 0x100003c1, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x188a64, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x3, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x28e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x100003d9, 8), (unique, 0x100003d9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_SUB (register, 0x28, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003d1, 8), (unique, 0x100003d1, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x4, 8)]
[(ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100002e5, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0xb0, 8) , (const, 0x4, 8), (register, 0xb0, 8) INT_SUB (register, 0x10, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x188adb, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x88, 8)]
[(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_MULT (register, 0x88, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x90, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x28, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000030d, 8) COPY (unique, 0x100003e1, 8), (unique, 0x100003e1, 8) CAST (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100002dd, 8) , (const, 0x1, 8), (unique, 0x100002dd, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_MULT (register, 0x88, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x10000169, 4), (unique, 0x3a00, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x100003f1, 8) , (unique, 0x10000295, 8), (unique, 0x100003f1, 8) CAST (register, 0x88, 8), (unique, 0x10000295, 8) INT_ADD (register, 0x90, 8) , (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_SUB (const, 0xfffffffffffffff4, 8) , (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) CAST (register, 0x30, 8), (unique, 0x10000169, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000030d, 8) , (unique, 0x10000315, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000191, 8) , (unique, 0x1000016d, 4), (unique, 0x10000191, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x100003f1, 8) , (unique, 0x10000295, 8), (unique, 0x100003f1, 8) CAST (register, 0x88, 8), (unique, 0x10000295, 8) INT_ADD (register, 0x90, 8) , (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_SUB (const, 0xfffffffffffffff4, 8) , (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) CAST (register, 0x30, 8), (unique, 0x1000016d, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000030d, 8) , (unique, 0x10000315, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000199, 8) , (unique, 0x10000179, 4), (unique, 0x10000199, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x100003f1, 8) , (unique, 0x10000295, 8), (unique, 0x100003f1, 8) CAST (register, 0x88, 8), (unique, 0x10000295, 8) INT_ADD (register, 0x90, 8) , (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_SUB (const, 0xfffffffffffffff4, 8) , (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) CAST (register, 0x30, 8), (unique, 0x10000179, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000030d, 8) , (unique, 0x10000315, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x6d6, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x6d4, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x6d2, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x6d1, 4), (ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a1, 8) , (unique, 0x10000185, 4), (unique, 0x100001a1, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x100003f1, 8) , (unique, 0x10000295, 8), (unique, 0x100003f1, 8) CAST (register, 0x88, 8), (unique, 0x10000295, 8) INT_ADD (register, 0x90, 8) , (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_SUB (const, 0xfffffffffffffff4, 8) , (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) CAST (register, 0x30, 8), (unique, 0x10000185, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000189, 8), (unique, 0x10000189, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000030d, 8) , (unique, 0x10000315, 8)]
[(unique, 0x10000315, 8) COPY (register, 0x88, 8), (register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000030d, 8) , (unique, 0x10000315, 8)]
[ ---  CBRANCH (ram, 0x188ab0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x90, 8) , (register, 0x80, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x10000115, 8), (unique, 0x10000115, 8) INT_MULT (register, 0x80, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x188b09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (unique, 0x3680, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x39c, 4), (ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) CAST (unique, 0x10000409, 8), (unique, 0x10000409, 8) INT_ADD (register, 0x28, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x188b09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x3b1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000419, 8), (unique, 0x10000419, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_SUB (register, 0x28, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000411, 8), (unique, 0x10000411, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x188b09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x3bd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_SUB (register, 0x28, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000421, 8), (unique, 0x10000421, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[(register, 0x10, 8) INT_AND (register, 0xa0, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  BRANCH (ram, 0x18894a, 1)]
[(ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[(unique, 0x100002ed, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x188965, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x10000431, 8) , (unique, 0x10000439, 8), (unique, 0x10000439, 8) CAST (register, 0xa0, 8), (unique, 0x10000431, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0xf9, 4), (ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x10000449, 8), (unique, 0x10000449, 8) INT_ADD (register, 0x10, 8) , (register, 0x28, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000441, 8), (unique, 0x10000441, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002ed, 8) , (unique, 0x100002f5, 8)]
[(unique, 0x100002f5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002ed, 8) , (unique, 0x100002f5, 8)]
[ ---  CBRANCH (ram, 0x188950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002ed, 8) , (unique, 0x100002f5, 8)]
[(ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  CBRANCH (ram, 0x18898c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000015d, 1) , (const, 0x0, 1), (unique, 0x1000015d, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000451, 8), (unique, 0x10000451, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x188b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000465, 4), (unique, 0x10000465, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_SEXT (unique, 0x10000461, 4), (unique, 0x10000461, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000459, 8), (unique, 0x10000459, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x17b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000469, 8), (unique, 0x10000469, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x188b6e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000168, 1) , (const, 0x0, 1), (unique, 0x10000168, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x18d, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000471, 8), (unique, 0x10000471, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x18898c, 1)]
[(ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x183, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000479, 8), (unique, 0x10000479, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x18898c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000489, 8) , (unique, 0xba80, 1), (unique, 0x10000489, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfd, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000481, 8), (unique, 0x10000481, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2f58, 8) COPY (ram, 0x4c2f58, 8), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x153, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x147, 4), (ram, 0x4c2f58, 8) INDIRECT (ram, 0x4c2f58, 8) , (const, 0x138, 4), (ram, 0x4c2f58, 8) MULTIEQUAL (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8) , (ram, 0x4c2f58, 8)]
[ ---  RETURN (const, 0x0, 8)]
