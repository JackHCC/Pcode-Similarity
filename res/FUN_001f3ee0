[ ---  CBRANCH (ram, 0x1f4100, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x7fffffe, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) INT_ADD (unique, 0x100001b4, 8) , (const, 0x34, 8), (unique, 0x100001b4, 8) CAST (register, 0x38, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(unique, 0x100001a4, 4) COPY (unique, 0x100000d8, 4), (unique, 0x100000d8, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1f3f00, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x100000d8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c4, 8), (unique, 0x100001c4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x100000d8, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x100001a8, 4) COPY (unique, 0xbc80, 4)]
[(unique, 0x100001ac, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x100001a4, 4) , (unique, 0x100001a8, 4)]
[ ---  CBRANCH (ram, 0x1f3f05, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x28, 4) , (register, 0x30, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x100001a4, 4) , (unique, 0x100001a8, 4)]
[(unique, 0x100001b0, 4) COPY (register, 0x30, 4)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x100001ac, 4) , (unique, 0x100001b0, 4)]
[ ---  CBRANCH (ram, 0x1f3f60, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f4030, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3fffffffffffffff, 8) , (unique, 0x100001d4, 8), (unique, 0x100001d4, 8) CAST (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x28, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x66, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x66, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x66, 4)]
[ ---  CBRANCH (ram, 0x1f4030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001dc, 8), (unique, 0x100001dc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3680, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x76, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x76, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3f60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001e4, 8), (unique, 0x100001e4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x84, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x84, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x84, 4)]
[ ---  CBRANCH (ram, 0x1f4030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (unique, 0x3680, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x91, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x91, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1f4040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000204, 8), (unique, 0x10000204, 8) INT_ADD (unique, 0x100001fc, 8) , (const, 0x63, 8), (unique, 0x100001fc, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x284, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x284, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x284, 4)]
[ ---  CBRANCH (ram, 0x1f4030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x28, 4), (unique, 0xbd80, 8) CAST (unique, 0x1000020c, 8), (unique, 0x1000020c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x291, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x291, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000214, 8), (unique, 0x10000214, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f3f6a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xa6, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xa6, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) CAST (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) INT_ADD (unique, 0x10000224, 8) , (const, 0x34, 8), (unique, 0x10000224, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f3f98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdc, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xdc, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xdc, 4)]
[ ---  CBRANCH (ram, 0x1f4030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (const, 0x3, 4), (register, 0x30, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xe9, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0xe9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) CAST (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x8, 8)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000019c, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000244, 8), (unique, 0x10000244, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f4060, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x1ee520, 8) , (register, 0x38, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x260, 4)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x260, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f4023, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) INT_ADD (unique, 0x10000264, 8) , (const, 0x34, 8), (unique, 0x10000264, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f3fe1, 1) , (unique, 0x100000e2, 1), (unique, 0x100000e2, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (unique, 0x10000254, 8) , (const, 0x34, 8), (unique, 0x10000254, 8) CAST (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1f401b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x100000a2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (unique, 0x10000274, 8) , (const, 0x2c, 8), (unique, 0x10000274, 8) CAST (register, 0x38, 8), (unique, 0x100000a2, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1f3ff4, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x245, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x245, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000284, 8), (unique, 0x10000284, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000a2, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f4070, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x10f, 4)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x10f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1eeae0, 8) , (register, 0x38, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) INT_ADD (unique, 0x100002bc, 8) , (const, 0x34, 8), (unique, 0x100002bc, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f407d, 1) , (unique, 0x100000e7, 1), (unique, 0x100000e7, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) INT_ADD (unique, 0x100002ac, 8) , (const, 0x34, 8), (unique, 0x100002ac, 8) CAST (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1f401b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x100000cc, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) INT_ADD (unique, 0x100002cc, 8) , (const, 0x2c, 8), (unique, 0x100002cc, 8) CAST (register, 0x38, 8), (unique, 0x100000cc, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1f40b8, 1)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f40f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1f40d3, 1)]
[(register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x38, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f4098, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000019c, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1c3, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1c3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaed8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x181, 4)]
[(ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x181, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 1)]
[ ---  BRANCH (ram, 0x1f40a8, 1)]
[(ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f401b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000cc, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (unique, 0x1000031c, 8) , (const, 0x2c, 8), (unique, 0x1000031c, 8) CAST (register, 0x38, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000032c, 8) , (register, 0x0, 4), (unique, 0x1000032c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1a5, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1a2, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eaed8, 8) COPY (ram, 0x4eaed8, 8), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1a5, 4), (ram, 0x4eaed8, 8) INDIRECT (ram, 0x4eaed8, 8) , (const, 0x1a2, 4), (ram, 0x4eaed8, 8) MULTIEQUAL (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8) , (ram, 0x4eaed8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
