[(unique, 0x1000009e, 8) COPY (ram, 0x4c4e28, 8)]
[ ---  CBRANCH (ram, 0x4072c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x153, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0x153, 4)]
[ ---  CBRANCH (ram, 0x4072b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d9, 8), (unique, 0x100000d9, 8) CALL (ram, 0x426550, 8) , (const, 0x4, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e30, 8) COPY (ram, 0x4c4e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x160, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0x160, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f7369, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100000e9, 8), (unique, 0x100000e9, 8) INT_ADD (unique, 0x100000e1, 8) , (const, 0x3, 8), (unique, 0x100000e1, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x407284, 1)]
[(unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10000094, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000096, 1) COPY (const, 0x1, 1)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x100000be, 8) COPY (register, 0x38, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x100000d6, 1) COPY (unique, 0x10000095, 1), (unique, 0x10000095, 1) MULTIEQUAL (unique, 0x10000096, 1) , (unique, 0x10000093, 1)]
[ ---  CBRANCH (ram, 0x40721a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) INT_ADD (ram, 0x4c4e28, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000be, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x100000d7, 1) COPY (unique, 0x10000095, 1)]
[ ---  CBRANCH (ram, 0x40721a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0x100000d8, 1) COPY (unique, 0x10000094, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000093, 1) MULTIEQUAL (unique, 0x100000d6, 1) , (unique, 0x100000d7, 1) , (unique, 0x100000d8, 1)]
[ ---  CBRANCH (ram, 0x407200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x407290, 1) , (unique, 0x10000093, 1)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x13f, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0x13f, 4)]
[ ---  CBRANCH (ram, 0x4072b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e30, 8) COPY (ram, 0x4c4e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x14c, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0x14c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f7369, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000109, 8), (unique, 0x10000109, 8) INT_ADD (unique, 0x10000101, 8) , (const, 0x3, 8), (unique, 0x10000101, 8) CAST (register, 0x0, 8)]
[(unique, 0x100000c6, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x407238, 1)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x8b, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0x8b, 4)]
[(unique, 0x100000ce, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000111, 8), (unique, 0x10000111, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4072b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000111, 8), (unique, 0x10000111, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e30, 8) COPY (ram, 0x4c4e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100000c6, 8) , (unique, 0x100000ce, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x100000a6, 8) COPY (ram, 0x4c4e30, 8), (ram, 0x4c4e30, 8) MULTIEQUAL (ram, 0x4c4e30, 8) , (ram, 0x4c4e30, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x40725c, 1)]
[(ram, 0x4c4e30, 8) MULTIEQUAL (ram, 0x4c4e30, 8) , (ram, 0x4c4e30, 8) , (ram, 0x4c4e30, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x407248, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000119, 8), (unique, 0x10000119, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x1000009e, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100000ae, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x407253, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x30, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0xd9, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0xd9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000121, 8) , (unique, 0xbb00, 1), (unique, 0x10000121, 8) CAST (register, 0x0, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000131, 8), (unique, 0x10000131, 8) INT_ADD (unique, 0x10000129, 8) , (const, 0x1, 8), (unique, 0x10000129, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40725c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x11f, 4)]
[(ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0x11f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000151, 8) , (register, 0x8, 1), (unique, 0x10000151, 8) CAST (register, 0x0, 8), (register, 0x8, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000139, 8), (unique, 0x10000139, 8) INT_ADD (unique, 0x100000a6, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[(unique, 0x100000b6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000149, 8), (unique, 0x10000149, 8) INT_ADD (unique, 0x10000141, 8) , (const, 0x1, 8), (unique, 0x10000141, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c4e30, 8) MULTIEQUAL (ram, 0x4c4e30, 8) , (ram, 0x4c4e30, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100000ae, 8) , (unique, 0x100000b6, 8)]
[ ---  CBRANCH (ram, 0x407284, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000159, 8) , (const, 0x0, 1), (unique, 0x10000159, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0xf0, 4), (ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e30, 8) COPY (ram, 0x4c4e30, 8), (ram, 0x4c4e30, 8) INDIRECT (ram, 0x4c4e30, 8) , (const, 0xf0, 4), (ram, 0x4c4e30, 8) MULTIEQUAL (ram, 0x4c4e30, 8) , (ram, 0x4c4e30, 8) , (ram, 0x4c4e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x0, 8)]
