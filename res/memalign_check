[ ---  CBRANCH (ram, 0x425a80, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x11, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x2b4, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x2b4, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x2b4, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x2b4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x2b4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4256f0, 8) , (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425a30, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x425ab0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000198, 8), (unique, 0x10000198, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x29c, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x29c, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x29c, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x29c, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x29c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425a90, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (unique, 0x100000b1, 8) , (const, 0x21, 8), (unique, 0x100000b1, 8) INT_2COMP (register, 0x38, 8)]
[(unique, 0x10000190, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x425b44, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x10000188, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4258ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x425a70, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000c1, 8) , (register, 0x38, 8), (unique, 0x100000c1, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100000c1, 8) , (register, 0x30, 8)]
[(unique, 0x10000180, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x425a90, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x22d, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x22d, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x22d, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x22d, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x22d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000180, 8) , (unique, 0x10000188, 8) , (unique, 0x10000190, 8) , (unique, 0x100000c1, 8)]
[ ---  CBRANCH (ram, 0x425b08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21b, 4)]
[(ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x21b, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x21b, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x21b, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x21b, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x21b, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  BRANCH (ram, 0x42591b, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c57a4, 1) MULTIEQUAL (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5748, 8) MULTIEQUAL (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x425978, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5800, 8) , (const, 0x4c5800, 8), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  CBRANCH (ram, 0x425b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000058, 8) , (const, 0x0, 8), (unique, 0x10000058, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) INT_ADD (ram, 0x4c5800, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x425b38, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (const, 0x20, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x425b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000101, 8) , (const, 0x0, 8), (unique, 0x10000101, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x425978, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c57a4, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x425b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (ram, 0x4c6028, 8) , (ram, 0x4c5748, 8), (register, 0x0, 8) INT_ADD (ram, 0x4c5800, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x1000011d, 8) , (register, 0x30, 8), (unique, 0x1000011d, 8) COPY (const, 0x49b352, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x1f6, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x1f6, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x1f6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0xb8, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0xb8, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0xb8, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0xb8, 4)]
[(register, 0x0, 8) CALL (ram, 0x424fb0, 8) , (unique, 0x10000125, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x10000125, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x1000015c, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x425ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b8, 8), (unique, 0x100001b8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb8, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4259a2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000015c, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4259a2, 1)]
[(ram, 0x4c57a0, 4) INT_ADD (ram, 0x4c57a0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  CBRANCH (ram, 0x425a1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x4259cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x1, 1), (register, 0x8, 1) INT_XOR (unique, 0x10000111, 1) , (unique, 0x10000112, 1), (unique, 0x10000112, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x10000111, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8)]
[(register, 0x0, 1) COPY (const, 0x2, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x1000007d, 1), (unique, 0x1000007d, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x0, 1)]
[(unique, 0x10000170, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x4259e6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000109, 8) , (const, 0x0, 8), (unique, 0x10000109, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(unique, 0x10000178, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000170, 8) , (unique, 0x10000178, 8)]
[(unique, 0x1000013e, 8) MULTIEQUAL (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8)]
[(unique, 0x10000146, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(unique, 0x1000014a, 1) MULTIEQUAL (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1)]
[(unique, 0x1000014b, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(unique, 0x10000153, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[ ---  CBRANCH (ram, 0x425a1b, 1) , (unique, 0x1000013d, 1), (unique, 0x1000013d, 1) INT_LESS (register, 0x30, 8) , (unique, 0x10000135, 8), (unique, 0x10000135, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x425a08, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0x10000135, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) COPY (const, 0xff, 8)]
[(unique, 0x10000160, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425a0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000168, 8) COPY (unique, 0x3100, 8)]
[(ram, 0x4c5748, 8) INDIRECT (unique, 0x1000013e, 8) , (const, 0x1a2, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (unique, 0x10000146, 4) , (const, 0x1a2, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (unique, 0x1000014a, 1) , (const, 0x1a2, 4)]
[(ram, 0x4c5800, 8) INDIRECT (unique, 0x1000014b, 8) , (const, 0x1a2, 4)]
[(ram, 0x4c6028, 8) INDIRECT (unique, 0x10000153, 8) , (const, 0x1a2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000135, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000160, 8) , (unique, 0x10000168, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x10000135, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000160, 8) , (unique, 0x10000168, 8)]
[(ram, 0x4c5748, 8) INDIRECT (unique, 0x1000013e, 8) , (const, 0x1b9, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (unique, 0x10000146, 4) , (const, 0x1b9, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (unique, 0x1000014a, 1) , (const, 0x1b9, 4)]
[(ram, 0x4c5800, 8) INDIRECT (unique, 0x1000014b, 8) , (const, 0x1b9, 4)]
[(ram, 0x4c6028, 8) INDIRECT (unique, 0x10000153, 8) , (const, 0x1b9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x1000007d, 1), (unique, 0x3400, 8) CAST (unique, 0x100001d0, 8), (unique, 0x100001d0, 8) INT_ADD (register, 0x0, 8) , (register, 0x30, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) MULTIEQUAL (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) MULTIEQUAL (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
