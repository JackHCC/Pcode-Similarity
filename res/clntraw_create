[(register, 0x20, 8) CAST (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x22baa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000243, 8), (unique, 0x10000243, 8) INT_ADD (register, 0x0, 8) , (const, 0xb8, 8), (register, 0x0, 8) CALL (ram, 0x237a60, 8)]
[ ---  CBRANCH (ram, 0x22bac6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) CALL (ram, 0x11f870, 8) , (const, 0x1, 8) , (const, 0x22c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) INT_ADD (register, 0x0, 8) , (const, 0xb8, 8)]
[ ---  BRANCH (ram, 0x22b9d5, 1)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3100, 8) , (unique, 0x10000263, 8) , (const, 0x18, 4) , (const, 0x0, 4), (unique, 0x10000263, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000011b, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x1000011b, 8) PTRSUB (unique, 0x10000113, 8) , (const, 0x0, 8), (unique, 0x10000113, 8) PTRADD (register, 0x18, 8) , (const, 0x171, 8) , (const, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x4a, 4), (stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x45, 4), (stack, 0xffffffffffffff80, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x4a, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x45, 4), (stack, 0xffffffffffffff88, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x4a, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x1000022b, 8) , (const, 0x45, 4), (unique, 0x1000022b, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x4a, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000233, 8) , (const, 0x45, 4), (unique, 0x10000233, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22ba78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22d030, 8) , (unique, 0x3100, 8) , (register, 0x20, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa0, 4)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100000e3, 8) , (unique, 0x100000eb, 8) , (const, 0x5, 8), (unique, 0x100000eb, 8) COPY (const, 0x292810, 8), (unique, 0x100000e3, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  BRANCH (ram, 0x22ba19, 1)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x5d, 4), (stack, 0xffffffffffffff80, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027b, 8) , (register, 0x0, 4), (unique, 0x1000027b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100001e3, 8) , (const, 0x10, 8), (unique, 0x100001e3, 8) PTRADD (register, 0x18, 8) , (const, 0x172, 8) , (const, 0x18, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x10000273, 8), (unique, 0x10000273, 8) CAST (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100001d3, 8) , (const, 0x8, 8), (unique, 0x100001d3, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x22ba3b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000021b, 8) , (const, 0x8, 8), (unique, 0x1000021b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100001f3, 8) , (const, 0x8, 8), (unique, 0x100001f3, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x74, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x74, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x74, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x74, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3100, 8) , (unique, 0x10000283, 8) , (const, 0x2260, 4) , (const, 0x2, 4), (unique, 0x10000283, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) CAST (unique, 0x100000f3, 8), (unique, 0x100000f3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1480, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001a3, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100001a3, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x83, 4), (stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x7c, 4), (stack, 0xffffffffffffff80, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x83, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x7c, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x83, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x7c, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x83, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x7c, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b3, 8) , (register, 0x0, 8), (unique, 0x100001b3, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x22b0b0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8)]
