[(register, 0x20, 8) CAST (unique, 0x10000255, 8), (unique, 0x10000255, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24c558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x0, 8) , (const, 0xb8, 8), (register, 0x0, 8) CALL (ram, 0x259600, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xd6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd6, 4)]
[ ---  CBRANCH (ram, 0x24c580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) CALL (ram, 0x1211e0, 8) , (const, 0x1, 8) , (const, 0x22c8, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x24c509, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (register, 0x0, 8) , (const, 0xb8, 8)]
[ ---  BRANCH (ram, 0x24c477, 1)]
[ ---  CALL (ram, 0x25dcf0, 8) , (unique, 0x3100, 8) , (unique, 0x10000285, 8) , (const, 0x18, 4) , (const, 0x0, 4), (unique, 0x10000285, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000135, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x10000135, 8) PTRSUB (unique, 0x1000012d, 8) , (const, 0x0, 8), (unique, 0x1000012d, 8) PTRADD (register, 0x18, 8) , (const, 0x171, 8) , (const, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x58, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x5e, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x58, 4), (stack, 0xffffffffffffff70, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x5e, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x58, 4), (stack, 0xffffffffffffff78, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x5e, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x10000245, 8) , (const, 0x58, 4), (unique, 0x10000245, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x5e, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x1000024d, 8) , (const, 0x58, 4), (unique, 0x1000024d, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5e, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x58, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x24c530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24db10, 8) , (unique, 0x3100, 8) , (register, 0x20, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xcf, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcb, 4)]
[ ---  CALL (ram, 0x17b270, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100000fd, 8) , (unique, 0x10000105, 8) , (const, 0x5, 8), (unique, 0x10000105, 8) COPY (const, 0x2baa58, 8), (unique, 0x100000fd, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[ ---  BRANCH (ram, 0x24c4be, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x71, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x71, 4), (stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x71, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x71, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x71, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x71, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000029d, 8) , (register, 0x0, 4), (unique, 0x1000029d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100001fd, 8) , (const, 0x10, 8), (unique, 0x100001fd, 8) PTRADD (register, 0x18, 8) , (const, 0x172, 8) , (const, 0x18, 8), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x10000295, 8), (unique, 0x10000295, 8) CAST (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100001ed, 8) , (const, 0x8, 8), (unique, 0x100001ed, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24c4e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000235, 8) , (const, 0x8, 8), (unique, 0x10000235, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000020d, 8) , (const, 0x8, 8), (unique, 0x1000020d, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x88, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x88, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x25dcf0, 8) , (unique, 0x3100, 8) , (unique, 0x100002a5, 8) , (const, 0x2260, 4) , (const, 0x2, 4), (unique, 0x100002a5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) CAST (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea280, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001bd, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100001bd, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x97, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x97, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x90, 4), (stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x97, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x90, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x97, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x90, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x97, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x90, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x97, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cd, 8) , (register, 0x0, 8), (unique, 0x100001cd, 8) PTRSUB (register, 0x18, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x24bb00, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x24c585, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
