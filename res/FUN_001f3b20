[ ---  CBRANCH (ram, 0x1f3ec8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000042b, 8), (unique, 0x1000042b, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000041b, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f3ec0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000433, 4), (unique, 0x10000433, 4) CAST (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100000a8, 4), (unique, 0x100000a8, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x1000043f, 8) , (const, 0x2, 4), (unique, 0x1000043f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3ed5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0x6, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100003fb, 4) COPY (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1f3bee, 1)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(unique, 0x100003f3, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f3b91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0xa0, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x80, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f3b91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1f3b91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) COPY (const, 0x3, 4)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x100003f3, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x1200, 4) COPY (const, 0x0, 4)]
[(register, 0x1204, 4) COPY (const, 0x0, 4)]
[(register, 0x1208, 4) COPY (const, 0x0, 4)]
[(register, 0x120c, 4) COPY (const, 0x0, 4)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x2, 4), (register, 0x18, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(register, 0x1200, 4) INT_ADD (register, 0x1200, 4) , (unique, 0x100001f2, 4), (unique, 0x100001f2, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x1204, 4) INT_ADD (register, 0x1204, 4) , (unique, 0x100001f6, 4), (unique, 0x100001f6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x1204, 4) MULTIEQUAL (register, 0x1204, 4) , (register, 0x1204, 4)]
[(register, 0x1208, 4) INT_ADD (register, 0x1208, 4) , (unique, 0x10000202, 4), (unique, 0x10000202, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000206, 8), (unique, 0x10000206, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x1208, 4) MULTIEQUAL (register, 0x1208, 4) , (register, 0x1208, 4)]
[(register, 0x120c, 4) INT_ADD (register, 0x120c, 4) , (unique, 0x1000020e, 4), (unique, 0x1000020e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000212, 8), (unique, 0x10000212, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x120c, 4) MULTIEQUAL (register, 0x120c, 4) , (register, 0x120c, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3bb0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (register, 0x98, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x3400, 4) INT_ADD (register, 0x8, 4) , (register, 0x80, 4), (register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0xfffffffc, 4)]
[(unique, 0x100003f7, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x1200, 4) , (register, 0xa0, 4), (register, 0x1200, 4) INT_ADD (register, 0x1200, 4) , (register, 0x1204, 4), (register, 0x1204, 4) INT_ADD (register, 0x1204, 4) , (register, 0x120c, 4), (register, 0x1200, 4) INT_ADD (register, 0x1200, 4) , (register, 0x1208, 4)]
[(unique, 0x100003ff, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x1200, 4) , (register, 0xa0, 4), (register, 0x1200, 4) INT_ADD (register, 0x1200, 4) , (register, 0x1204, 4), (register, 0x1204, 4) INT_ADD (register, 0x1204, 4) , (register, 0x120c, 4), (register, 0x1200, 4) INT_ADD (register, 0x1200, 4) , (register, 0x1208, 4)]
[ ---  CBRANCH (ram, 0x1f3c3f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x18, 4), (register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0xfffffffc, 4)]
[(unique, 0x10000403, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0x100003f7, 4) , (unique, 0x100003fb, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x3400, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f3c3f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x8, 4) , (unique, 0x10000447, 4), (unique, 0x10000447, 4) CAST (unique, 0xbc80, 4), (register, 0x8, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x3400, 4) , (register, 0x0, 4)]
[(unique, 0x10000407, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f3c3f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x8, 4) , (unique, 0x1000044b, 4), (unique, 0x1000044b, 4) CAST (unique, 0xbc80, 4), (register, 0x8, 4) INT_ADD (register, 0x0, 4) , (const, 0x2, 4)]
[(unique, 0x1000040b, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f3c3f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x8, 4) , (unique, 0x1000044f, 4), (unique, 0x1000044f, 4) CAST (unique, 0xbc80, 4), (register, 0x8, 4) INT_ADD (register, 0x0, 4) , (const, 0x3, 4)]
[(unique, 0x1000040f, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f3c3f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x8, 4) , (unique, 0x10000453, 4), (unique, 0x10000453, 4) CAST (unique, 0xbc80, 4), (register, 0x8, 4) INT_ADD (register, 0x0, 4) , (const, 0x4, 4)]
[(unique, 0x10000413, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f3c3f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (unique, 0x10000457, 4), (unique, 0x10000457, 4) CAST (unique, 0xbc80, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x5, 4)]
[(unique, 0x10000417, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f3c99, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000046b, 8), (unique, 0x1000046b, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000463, 8), (unique, 0x10000463, 8) INT_ADD (unique, 0x1000045b, 8) , (const, 0x84, 8), (unique, 0x1000045b, 8) CAST (register, 0x30, 8), (register, 0x28, 4) MULTIEQUAL (unique, 0x100003ff, 4) , (unique, 0x10000403, 4) , (unique, 0x10000407, 4) , (unique, 0x1000040b, 4) , (unique, 0x1000040f, 4) , (unique, 0x10000413, 4) , (unique, 0x10000417, 4) , (unique, 0x1000041b, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002b5, 8) , (const, 0x8, 8), (unique, 0x100002b5, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000473, 8), (unique, 0x10000473, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000047b, 4), (unique, 0x1000047b, 4) CAST (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1f3c79, 1)]
[ ---  CBRANCH (ram, 0x1f3c70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x28, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x1000041f, 4) COPY (unique, 0xbc80, 4)]
[(unique, 0x10000423, 8) COPY (unique, 0x3480, 8)]
[ ---  CBRANCH (ram, 0x1f3e0d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x100001e8, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x100001e8, 8) MULTIEQUAL (unique, 0x10000423, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f3df0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000047f, 4) , (const, 0x0, 4), (unique, 0x1000047f, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x1000041f, 4) , (register, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1f3c70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000049b, 8), (unique, 0x1000049b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000493, 8), (unique, 0x10000493, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000048b, 8), (unique, 0x1000048b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000483, 8), (unique, 0x10000483, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f3c99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (unique, 0x3a00, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3c79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (unique, 0x3a00, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3ea7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004a3, 8), (unique, 0x100004a3, 8) CALL (ram, 0x1211e0, 8) , (const, 0x58, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f3e40, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100004ab, 4) , (const, 0x1, 4), (unique, 0x100004ab, 4) CAST (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004af, 8) , (unique, 0x3100, 8), (unique, 0x100004af, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100004b7, 8), (unique, 0x100004b7, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1f3dc0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004c3, 8) , (register, 0x0, 8), (unique, 0x100004c3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (unique, 0x100004bf, 4), (unique, 0x100004bf, 4) CAST (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f3e9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (unique, 0x100004bf, 4), (unique, 0x100004bf, 4) CAST (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004cb, 8), (unique, 0x100004cb, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d3, 8) , (unique, 0x3100, 8), (unique, 0x100004d3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004db, 8), (unique, 0x100004db, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x100003d3, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004db, 8), (unique, 0x100004db, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0x100003e3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004db, 8), (unique, 0x100004db, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f3d71, 1)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003e3, 8) , (unique, 0x100003eb, 8)]
[ ---  CBRANCH (ram, 0x1f3d28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004e3, 8), (unique, 0x100004e3, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003d3, 8) , (unique, 0x100003db, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004fc, 8) , (register, 0x10, 1), (unique, 0x100004fc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8), (register, 0x10, 1) INT_OR (unique, 0x10000231, 1) , (unique, 0x10000232, 1), (unique, 0x10000231, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_LEFT (register, 0x10, 4) , (const, 0x5, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004fb, 1), (unique, 0x100004fb, 1) CAST (unique, 0x100001e2, 1), (unique, 0x100001e2, 1) INT_OR (register, 0x10, 1) , (register, 0x90, 1), (register, 0x90, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x5, 4), (unique, 0x10000232, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xdf, 1), (register, 0x10, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f3, 8), (unique, 0x100004f3, 8) INT_ADD (register, 0x0, 8) , (const, 0xa, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004eb, 8), (unique, 0x100004eb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f3e18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000504, 8) , (register, 0x10, 1), (unique, 0x10000504, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8), (register, 0x10, 1) INT_OR (register, 0x10, 1) , (const, 0x10, 1)]
[ ---  BRANCH (ram, 0x1f3d65, 1)]
[ ---  CBRANCH (ram, 0x1f3e28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000050c, 8) , (register, 0x10, 1), (unique, 0x1000050c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8), (register, 0x10, 1) INT_OR (register, 0x10, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x1f3daf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xc, 1)]
[ ---  CBRANCH (ram, 0x1f3d65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x3ff00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000514, 8), (unique, 0x10000514, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3d65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x3ff00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000051c, 8), (unique, 0x1000051c, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000535, 8) , (register, 0x0, 1), (unique, 0x10000535, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8), (register, 0x0, 1) INT_OR (unique, 0x100001e6, 1) , (register, 0x10, 1), (unique, 0x100001e6, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000534, 1), (unique, 0x10000534, 1) CAST (unique, 0x100001e5, 1), (unique, 0x100001e5, 1) INT_OR (register, 0x0, 1) , (register, 0x8, 1), (register, 0x8, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x5, 4), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xdf, 1), (register, 0x0, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000052c, 8), (unique, 0x1000052c, 8) INT_ADD (register, 0x0, 8) , (const, 0xa, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000524, 8), (unique, 0x10000524, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000545, 8) , (unique, 0xbb00, 1), (unique, 0x10000545, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000053d, 8), (unique, 0x1000053d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f3d6d, 1) , (unique, 0x100003bd, 1), (unique, 0x100003bd, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1f3e55, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ee290, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x28, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000054d, 8), (unique, 0x1000054d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000555, 8), (unique, 0x10000555, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f3e84, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000055d, 8), (unique, 0x1000055d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000565, 8), (unique, 0x10000565, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000056d, 8), (unique, 0x1000056d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000575, 8), (unique, 0x10000575, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000057d, 8), (unique, 0x1000057d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000585, 8), (unique, 0x10000585, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x100003db, 8) COPY (register, 0x30, 8)]
[(unique, 0x100003eb, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
