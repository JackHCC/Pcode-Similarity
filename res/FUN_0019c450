[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100001a9, 4) COPY (ram, 0x4ed9a8, 4)]
[ ---  CBRANCH (ram, 0x19c571, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19c610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19c4da, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x51, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x51, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x51, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x51, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x51, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x51, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x51, 4)]
[ ---  CBRANCH (ram, 0x19c4a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x265fb0, 8) , (register, 0x30, 8) , (register, 0x20, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x19c4b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed9a8, 4) , (const, 0x0, 4)]
[(ram, 0x4ed9a8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed9a8, 4) , (const, 0x0, 4)]
[(ram, 0x4ed9a8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19c4da, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a7, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x1a7, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x1a7, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x1a7, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x1a7, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x1a7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a7, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1a7, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000169, 8), (unique, 0x10000169, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed9a8, 8)]
[ ---  CALL (ram, 0x19c0b0, 8) , (register, 0x30, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x91, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x81, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x91, 4), (ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x81, 4), (ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x91, 4), (ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x81, 4), (ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x91, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x81, 4), (ram, 0x4ed9a8, 4) MULTIEQUAL (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x91, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x81, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x91, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x81, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x81, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x164dc0, 8) , (ram, 0x4ed9b0, 8) , (unique, 0x10000151, 8) , (register, 0x38, 8), (unique, 0x10000151, 8) COPY (const, 0x2b5012, 8), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x81, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[ ---  CBRANCH (ram, 0x19c590, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) CAST (ram, 0x4eae08, 8), (ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x91, 4), (ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x81, 4), (ram, 0x4eae08, 8) MULTIEQUAL (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8)]
[ ---  CBRANCH (ram, 0x19c5a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100001bd, 4) COPY (unique, 0x10000189, 4), (unique, 0x10000189, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x19c5c6, 1) , (unique, 0x1000018d, 1), (unique, 0x1000018d, 1) INT_NOTEQUAL (unique, 0x10000189, 4) , (const, 0x0, 4), (unique, 0x10000189, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x188, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x188, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x188, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x188, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x188, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x188, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x188, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000161, 8), (unique, 0x10000161, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed9a8, 8)]
[(unique, 0x100001b9, 4) COPY (ram, 0x4ed9a8, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x188, 4), (ram, 0x4ed9a8, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8)]
[(ram, 0x4eae08, 8) MULTIEQUAL (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed9a8, 4) COPY (unique, 0x100001c1, 4), (unique, 0x100001c1, 4) MULTIEQUAL (unique, 0x100001b9, 4) , (unique, 0x100001bd, 4)]
[ ---  CBRANCH (ram, 0x19c5e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed9a8, 4) , (const, 0x0, 4)]
[(ram, 0x4ed9a8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed9a8, 4) , (const, 0x0, 4)]
[(ram, 0x4ed9a8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19c605, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x162, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x162, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x162, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x162, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x162, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x162, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x162, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x162, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed9a8, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001a1, 8) COPY (ram, 0x4ed9a0, 8), (ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(unique, 0x10000199, 8) COPY (ram, 0x4eaee8, 8), (ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0xac, 4), (ram, 0x4eae08, 8) MULTIEQUAL (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0xac, 4), (ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0xac, 4), (ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xac, 4), (ram, 0x4ed9a8, 4) MULTIEQUAL (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xac, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xac, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d5, 8) , (ram, 0x4ed9a0, 8), (unique, 0x100001d5, 8) CAST (ram, 0x4eaee8, 8), (ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8), (ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[ ---  CBRANCH (ram, 0x19c620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed9a0, 8) , (const, 0x0, 8), (ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x115, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0x115, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0x115, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0x115, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x115, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x115, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x115, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x19c530, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb2, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0xb2, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0xb2, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0xb2, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xb2, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xb2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb2, 4)]
[ ---  CALLIND (unique, 0x100001a1, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0xb5, 4), (ram, 0x4eae08, 8) MULTIEQUAL (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0xb5, 4), (ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0xb5, 4), (ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xb5, 4), (ram, 0x4ed9a8, 4) MULTIEQUAL (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xb5, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001dd, 8) , (unique, 0x10000149, 8), (unique, 0x100001dd, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000149, 8) PTRSUB (const, 0x0, 8) , (const, 0x19c450, 8)]
[ ---  CBRANCH (ram, 0x19c54f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb5, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100001b1, 4) COPY (unique, 0x1000018e, 4), (unique, 0x1000018e, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x19c571, 1) , (unique, 0x10000192, 1), (unique, 0x10000192, 1) INT_NOTEQUAL (unique, 0x1000018e, 4) , (const, 0x0, 4), (unique, 0x1000018e, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4)]
[(ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0xff, 4)]
[(ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0xff, 4)]
[(ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0xff, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xff, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000159, 8), (unique, 0x10000159, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed9a8, 8)]
[(unique, 0x100001ad, 4) COPY (ram, 0x4ed9a8, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xff, 4), (ram, 0x4ed9a8, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(ram, 0x4ed9a0, 8) MULTIEQUAL (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8) , (ram, 0x4ed9a0, 8)]
[(ram, 0x4eaee8, 8) MULTIEQUAL (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8) , (ram, 0x4eaee8, 8)]
[(ram, 0x4eae08, 8) MULTIEQUAL (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8) , (ram, 0x4eae08, 8)]
[(ram, 0x4ed9a8, 4) COPY (unique, 0x100001b5, 4), (unique, 0x100001b5, 4) MULTIEQUAL (unique, 0x100001a9, 4) , (unique, 0x100001ad, 4) , (unique, 0x100001b1, 4)]
[ ---  CBRANCH (ram, 0x19c62d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e5, 8), (unique, 0x100001e5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf0, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae08, 8) COPY (ram, 0x4eae08, 8), (ram, 0x4eae08, 8) INDIRECT (ram, 0x4eae08, 8) , (const, 0xf0, 4)]
[(ram, 0x4eaee8, 8) COPY (ram, 0x4eaee8, 8), (ram, 0x4eaee8, 8) INDIRECT (ram, 0x4eaee8, 8) , (const, 0xf0, 4)]
[(ram, 0x4ed9a0, 8) COPY (ram, 0x4ed9a0, 8), (ram, 0x4ed9a0, 8) INDIRECT (ram, 0x4ed9a0, 8) , (const, 0xf0, 4)]
[(ram, 0x4ed9a8, 4) COPY (ram, 0x4ed9a8, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xf0, 4)]
[(ram, 0x4ed9b0, 8) COPY (ram, 0x4ed9b0, 8), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xf0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae08, 8) COPY (ram, 0x4eae08, 8)]
[(ram, 0x4eaee8, 8) COPY (ram, 0x4eaee8, 8)]
[(ram, 0x4ed9a0, 8) COPY (ram, 0x4ed9a0, 8)]
[(ram, 0x4ed9a8, 4) COPY (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) COPY (ram, 0x4ed9b0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
