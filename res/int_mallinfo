[(register, 0x88, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000102, 8), (unique, 0x10000102, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000112, 8), (unique, 0x10000112, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000010a, 8), (unique, 0x1000010a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (unique, 0x10000060, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x10000058, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(unique, 0x10000058, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000060, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x4216a8, 1) , (unique, 0x10000057, 1), (unique, 0x10000057, 1) INT_NOTEQUAL (unique, 0x1000004f, 8) , (const, 0x0, 8), (unique, 0x1000004f, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x88, 4) INT_ADD (unique, 0x10000060, 4) , (const, 0x1, 4)]
[(register, 0x80, 8) INT_ADD (unique, 0x10000058, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000122, 8), (unique, 0x10000122, 8) INT_ADD (unique, 0x1000004f, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000012a, 8), (unique, 0x1000012a, 8) INT_ADD (unique, 0x1000004f, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x421688, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x10000058, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x850, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0x10000075, 4)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x1000006d, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000132, 8), (unique, 0x10000132, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8)]
[(unique, 0x1000006d, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000075, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x4216e7, 1) , (unique, 0x1000006c, 1), (unique, 0x1000006c, 1) INT_NOTEQUAL (unique, 0x10000064, 8) , (register, 0x38, 8), (unique, 0x10000064, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 4) INT_ADD (unique, 0x10000075, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) INT_ADD (unique, 0x1000006d, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000064, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000064, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4216c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000142, 8) , (register, 0x38, 8), (unique, 0x10000142, 8) CAST (unique, 0x3200, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0x10000060, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0x10000075, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 4) SUBPIECE (unique, 0x1000006d, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (unique, 0x1000006d, 8) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x888, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x888, 8) , (const, 0x1, 8)]
[(ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x140, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x12f, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x127, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x11b, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x100, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0xe5, 4)]
[(ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x140, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x12f, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x127, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x11b, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x100, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0xe5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x80, 4), (register, 0x80, 4) SUBPIECE (unique, 0x10000058, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421725, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x1000007a, 8), (unique, 0x1000007a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5728, 4) COPY (ram, 0x4c5728, 4)]
[(ram, 0x4c5738, 8) COPY (ram, 0x4c5738, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (ram, 0x4c5728, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x4, 8), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0xfffffff8, 4), (register, 0x28, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0x100000fa, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0x100000fa, 8) COPY (ram, 0x4c5738, 8), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x16b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(ram, 0x4c5728, 4) COPY (ram, 0x4c5728, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x177, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x174, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x16f, 4), (ram, 0x4c5728, 4) INDIRECT (ram, 0x4c5728, 4) , (const, 0x16b, 4)]
[(ram, 0x4c5738, 8) COPY (ram, 0x4c5738, 8), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x177, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x174, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x16f, 4), (ram, 0x4c5738, 8) INDIRECT (ram, 0x4c5738, 8) , (const, 0x16b, 4)]
[ ---  RETURN (const, 0x0, 8)]
