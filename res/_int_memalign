[ ---  CBRANCH (ram, 0x425120, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x425105, 1)]
[(register, 0xb8, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x17, 8)]
[ ---  CBRANCH (ram, 0x424fe5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x17, 8)]
[(register, 0xb8, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x425105, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001db, 8), (unique, 0x100001db, 8) CALL (ram, 0x423fd0, 8) , (register, 0x38, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0xb8, 8) , (const, 0x20, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x100001cb, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4250ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x100001e3, 8) , (register, 0x30, 8), (unique, 0x100001e3, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425138, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (unique, 0x10000113, 8), (unique, 0x10000113, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8), (register, 0x8, 8) CAST (unique, 0x1000020b, 8), (unique, 0x1000020b, 8) INT_SUB (unique, 0x100001fb, 8) , (unique, 0x10000203, 8), (unique, 0x10000203, 8) CAST (unique, 0x3100, 8), (unique, 0x100001fb, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) INT_SUB (register, 0xa8, 8) , (const, 0x10, 8), (register, 0xa8, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_2COMP (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100001eb, 8) , (unique, 0x1000014b, 8), (unique, 0x100001eb, 8) CAST (register, 0x0, 8), (unique, 0x1000014b, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) CAST (unique, 0x10000233, 8), (unique, 0x10000233, 8) INT_SUB (unique, 0x10000223, 8) , (unique, 0x1000022b, 8), (unique, 0x1000022b, 8) CAST (unique, 0x3100, 8), (unique, 0x10000223, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) INT_ADD (unique, 0x10000213, 8) , (register, 0x30, 8), (unique, 0x10000213, 8) CAST (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x42502f, 1)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) CAST (register, 0x8, 8), (register, 0xb0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x425150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f4, 8) , (const, 0x0, 8), (unique, 0x100000f4, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (unique, 0x10000243, 8) , (unique, 0xbd80, 8), (unique, 0x10000243, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) INT_OR (register, 0xb0, 8) , (const, 0x2, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x100001c3, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x42505f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x10000133, 8), (unique, 0x10000133, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(register, 0x10, 8) INT_OR (register, 0xb0, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001c3, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) INT_ADD (unique, 0x1000024b, 8) , (unique, 0x10000163, 8), (unique, 0x1000024b, 8) CAST (register, 0xa8, 8), (unique, 0x10000163, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) CAST (register, 0x8, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x422d80, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x425167, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x425167, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x10000263, 8) , (register, 0x30, 8), (unique, 0x10000263, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000123, 8) , (unique, 0x1000011b, 8) , (const, 0x1275, 8) , (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) COPY (const, 0x49c2e8, 8), (unique, 0x10000123, 8) COPY (const, 0x49bec8, 8), (unique, 0x1000011b, 8) COPY (const, 0x49b150, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x425105, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ac, 8) , (const, 0x0, 8), (unique, 0x100000ac, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100001cb, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x425105, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x1000026b, 8) , (register, 0xb8, 8), (unique, 0x1000026b, 8) CAST (register, 0x30, 8)]
[(register, 0x10, 8) INT_OR (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xb8, 8)]
[(unique, 0x100001b3, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x4250e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x1000013b, 8), (unique, 0x1000013b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(unique, 0x100001bb, 8) COPY (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001b3, 8) , (unique, 0x100001bb, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_OR (register, 0xb8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x422d80, 8) , (register, 0x38, 8) , (unique, 0x3400, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
