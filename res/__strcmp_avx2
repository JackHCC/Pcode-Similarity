[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x12e0, 32) CALLOTHER (const, 0x271, 4) , (register, 0x12e0, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x42ce40, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x0, 4) , (const, 0xf81, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) INT_OR (unique, 0x100000bc, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x100000bc, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce6e, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x0, 4) , (const, 0xfe1, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000472, 8), (unique, 0x10000472, 8) PTRADD (unique, 0x100003da, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100003da, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x1220, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000046a, 8), (unique, 0x1000046a, 8) PTRADD (unique, 0x100003ca, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100003ca, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce47, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000047a, 4) , (const, 0xfe1, 4), (unique, 0x1000047a, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x12e0, 16) SUBPIECE (register, 0x12e0, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce95, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x1000047e, 4) , (const, 0xff1, 4), (unique, 0x1000047e, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc3280, 16) , (register, 0x12e0, 16), (unique, 0xc3280, 16) CALLOTHER (const, 0x19f, 4) , (unique, 0xc0300, 16) , (unique, 0xbb300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xbb300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000048a, 8), (unique, 0x1000048a, 8) PTRADD (unique, 0x100003fa, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100003fa, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000482, 8), (unique, 0x10000482, 8) PTRADD (unique, 0x100003ea, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100003ea, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x42ceca, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000492, 4) , (const, 0xff9, 4), (unique, 0x10000492, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4), (register, 0x8, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc3280, 16) , (register, 0x12e0, 16), (unique, 0xc3280, 16) CALLOTHER (const, 0x19f, 4) , (unique, 0xc0300, 16) , (unique, 0xbc780, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xbc780, 16) , (unique, 0xbc780, 16), (unique, 0xbc780, 16) CALLOTHER (const, 0x148, 4) , (unique, 0x5b80, 16), (unique, 0x5b80, 16) INT_ZEXT (unique, 0x5280, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000049e, 8), (unique, 0x1000049e, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000041a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000041a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbc780, 16) CALLOTHER (const, 0x148, 4) , (unique, 0x5b80, 16), (unique, 0x5b80, 16) INT_ZEXT (unique, 0x5280, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000496, 8), (unique, 0x10000496, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000040a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000040a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x42cef9, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100004a6, 4) , (const, 0xffd, 4), (unique, 0x100004a6, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42ce20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc3280, 16) , (register, 0x12e0, 16), (unique, 0xc3280, 16) CALLOTHER (const, 0x19f, 4) , (unique, 0xc0300, 16) , (unique, 0xbaa00, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xbaa00, 16) , (unique, 0xbaa00, 16), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004b2, 8), (unique, 0x100004b2, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000043a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000043a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004aa, 8), (unique, 0x100004aa, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000042a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000042a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004bb, 1), (unique, 0x100004bb, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004ba, 1), (unique, 0x100004ba, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003ba, 8) , (unique, 0x100003a2, 8) , (const, 0x1, 8), (unique, 0x100003ba, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x100003a2, 8) INT_ADD (register, 0x10, 8) , (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003aa, 8) , (unique, 0x1000039a, 8) , (const, 0x1, 8), (unique, 0x100003aa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x1000039a, 8) INT_ADD (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_ZEXT (unique, 0x100004bc, 1), (unique, 0x100004bc, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000044a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000044a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0x100004bd, 1), (unique, 0x100004bd, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000045a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000045a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x42cdf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000044a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000044a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x42ce11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42cbd6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x80, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_ZEXT (unique, 0x100004be, 1), (unique, 0x100004be, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000037a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000037a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0x100004bf, 1), (unique, 0x100004bf, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000038a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000038a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42cdf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000037a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000037a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x42cb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x1220, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x42cb20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (register, 0x12e0, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1260, 32) , (register, 0x12c0, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12c0, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004c1, 1), (unique, 0x100004c1, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004c0, 1), (unique, 0x100004c0, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000132, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000132, 8) PTRSUB (unique, 0x1000012a, 8) , (const, 0x0, 8), (unique, 0x1000012a, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000112, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000112, 8) PTRSUB (unique, 0x1000010a, 8) , (const, 0x0, 8), (unique, 0x1000010a, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1280, 32), (register, 0x1200, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x42cb40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (register, 0x12e0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1240, 32) , (register, 0x12a0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12a0, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004c3, 1), (unique, 0x100004c3, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004c2, 1), (unique, 0x100004c2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000172, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000172, 8) PTRSUB (unique, 0x1000016a, 8) , (const, 0x0, 8), (unique, 0x1000016a, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000152, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000152, 8) PTRSUB (unique, 0x1000014a, 8) , (const, 0x0, 8), (unique, 0x1000014a, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x42cb60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1280, 32)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004c5, 1), (unique, 0x100004c5, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004c4, 1), (unique, 0x100004c4, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001b2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001b2, 8) PTRSUB (unique, 0x100001aa, 8) , (const, 0x0, 8), (unique, 0x100001aa, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000192, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000192, 8) PTRSUB (unique, 0x1000018a, 8) , (const, 0x0, 8), (unique, 0x1000018a, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x100004de, 8), (unique, 0x100004de, 8) INT_ADD (unique, 0x100004d6, 8) , (register, 0x10, 8), (unique, 0x100004d6, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x100004ce, 8), (unique, 0x100004ce, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_AND (unique, 0x100004c6, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100004c6, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x30, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8), (register, 0x8, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x7, 4), (register, 0x8, 8) INT_SUB (const, 0x1000, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfff, 4), (register, 0x30, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x100004ee, 8), (unique, 0x100004ee, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100004e6, 8), (unique, 0x100004e6, 8) CAST (register, 0x30, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x100004ce, 8), (unique, 0x100004ce, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_AND (unique, 0x100004c6, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100004c6, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x42cc1d, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x1f80, 4), (unique, 0x1f80, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x42cd00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000044, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42cd70, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42cd70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x1000053e, 8), (unique, 0x1000053e, 8) INT_RIGHT (register, 0x38, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (const, 0x20, 4), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x38, 8) INT_OR (unique, 0x10000050, 8) , (unique, 0x10000058, 8), (unique, 0x10000058, 8) INT_ZEXT (register, 0x38, 4), (unique, 0x10000050, 8) INT_AND (unique, 0x10000536, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000536, 8) CAST (register, 0x38, 8), (register, 0x38, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1220, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1220, 32) , (register, 0x1260, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000052e, 8), (unique, 0x1000052e, 8) INT_ADD (unique, 0x10000526, 8) , (unique, 0x10000322, 8), (unique, 0x10000526, 8) CAST (register, 0x10, 8), (unique, 0x10000322, 8) INT_ADD (unique, 0x10000044, 8) , (const, 0x20, 8), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000051e, 8), (unique, 0x1000051e, 8) INT_ADD (unique, 0x10000516, 8) , (unique, 0x10000044, 8), (unique, 0x10000516, 8) CAST (register, 0x10, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000050e, 8), (unique, 0x1000050e, 8) INT_ADD (unique, 0x10000506, 8) , (unique, 0x1000031a, 8), (unique, 0x10000506, 8) CAST (register, 0x0, 8), (unique, 0x1000031a, 8) INT_ADD (unique, 0x10000044, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004fe, 8), (unique, 0x100004fe, 8) INT_ADD (unique, 0x100004f6, 8) , (unique, 0x10000044, 8), (unique, 0x100004f6, 8) CAST (register, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x1000058e, 8), (unique, 0x1000058e, 8) INT_XOR (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (unique, 0x1000007c, 8) , (const, 0x20, 4), (unique, 0x1000007c, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12c0, 32), (register, 0x38, 8) INT_OR (unique, 0x10000064, 8) , (unique, 0x1000006c, 8), (unique, 0x1000006c, 8) INT_ZEXT (register, 0x38, 4), (unique, 0x10000064, 8) INT_AND (unique, 0x10000586, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000586, 8) CAST (register, 0x38, 8), (register, 0x38, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12a0, 32) , (register, 0x12e0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000057e, 8), (unique, 0x1000057e, 8) INT_ADD (unique, 0x10000576, 8) , (unique, 0x10000362, 8), (unique, 0x10000576, 8) CAST (register, 0x10, 8), (unique, 0x10000362, 8) INT_ADD (unique, 0x10000044, 8) , (const, 0x60, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12a0, 32) , (register, 0x1240, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000056e, 8), (unique, 0x1000056e, 8) INT_ADD (unique, 0x10000566, 8) , (unique, 0x1000035a, 8), (unique, 0x10000566, 8) CAST (register, 0x10, 8), (unique, 0x1000035a, 8) INT_ADD (unique, 0x10000044, 8) , (const, 0x40, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000055e, 8), (unique, 0x1000055e, 8) INT_ADD (unique, 0x10000556, 8) , (unique, 0x10000352, 8), (unique, 0x10000556, 8) CAST (register, 0x0, 8), (unique, 0x10000352, 8) INT_ADD (unique, 0x10000044, 8) , (const, 0x60, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000054e, 8), (unique, 0x1000054e, 8) INT_ADD (unique, 0x10000546, 8) , (unique, 0x1000034a, 8), (unique, 0x10000546, 8) CAST (register, 0x0, 8), (unique, 0x1000034a, 8) INT_ADD (unique, 0x10000044, 8) , (const, 0x40, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42cdb9, 1) , (unique, 0x100000d7, 1), (unique, 0x100000d7, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_LESS (const, 0x3f, 4) , (register, 0x8, 4), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x40, 4)]
[(register, 0x38, 8) CAST (unique, 0x1000059e, 8), (unique, 0x1000059e, 8) INT_RIGHT (unique, 0x10000596, 8) , (unique, 0x57680, 1), (unique, 0x10000596, 8) CAST (register, 0x38, 8), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) INT_ZEXT (register, 0x8, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 8) COPY (const, 0x1f, 8)]
[ ---  CBRANCH (ram, 0x42cc29, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xdcc80, 8) COPY (const, 0x0, 8)]
[(unique, 0xdcc80, 8) MULTIEQUAL (unique, 0xdcc80, 8) , (unique, 0xdcc80, 8)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdce00, 1), (unique, 0xdce00, 1) INT_EQUAL (unique, 0xdcd80, 8) , (const, 0x0, 8), (unique, 0xdcd80, 8) INT_AND (unique, 0x100005a6, 8) , (const, 0x1, 8), (unique, 0x100005a6, 8) CAST (unique, 0xdcd00, 8), (unique, 0xdcd00, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xdcd00, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005c6, 8), (unique, 0x100005c6, 8) INT_ADD (unique, 0x100005be, 8) , (unique, 0x10000372, 8), (unique, 0x100005be, 8) CAST (register, 0x10, 8), (unique, 0x10000372, 8) INT_ADD (register, 0x8, 8) , (const, 0x40, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005b6, 8), (unique, 0x100005b6, 8) INT_ADD (unique, 0x100005ae, 8) , (unique, 0x1000036a, 8), (unique, 0x100005ae, 8) CAST (register, 0x0, 8), (unique, 0x1000036a, 8) INT_ADD (register, 0x8, 8) , (const, 0x40, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x80, 8), (register, 0x8, 8) INT_ADD (unique, 0xdcc80, 8) , (unique, 0x10000044, 8)]
[(unique, 0xdcc80, 8) INT_ADD (unique, 0xdcc80, 8) , (const, 0x1, 8)]
[(unique, 0xdcd00, 8) CAST (unique, 0x100005d6, 8), (unique, 0x100005d6, 8) INT_OR (unique, 0xdcf00, 8) , (const, 0x8000000000000000, 8), (unique, 0xdcf00, 8) INT_RIGHT (unique, 0x100005ce, 8) , (const, 0x1, 4), (unique, 0x100005ce, 8) CAST (unique, 0xdcd00, 8)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdcc80, 8) COPY (const, 0x0, 8)]
[(unique, 0xdcc80, 8) MULTIEQUAL (unique, 0xdcc80, 8) , (unique, 0xdcc80, 8)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdce00, 1), (unique, 0xdce00, 1) INT_EQUAL (unique, 0xdcd80, 8) , (const, 0x0, 8), (unique, 0xdcd80, 8) INT_AND (unique, 0x100005de, 8) , (const, 0x1, 8), (unique, 0x100005de, 8) CAST (unique, 0xdcd00, 8), (unique, 0xdcd00, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xdcd00, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100005e7, 1), (unique, 0x100005e7, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100005e6, 1), (unique, 0x100005e6, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000033a, 8) , (unique, 0xdcc80, 8) , (const, 0x1, 8), (unique, 0x1000033a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000032a, 8) , (unique, 0xdcc80, 8) , (const, 0x1, 8), (unique, 0x1000032a, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xdcc80, 8) INT_ADD (unique, 0xdcc80, 8) , (const, 0x1, 8)]
[(unique, 0xdcd00, 8) CAST (unique, 0x100005f0, 8), (unique, 0x100005f0, 8) INT_OR (unique, 0xdcf00, 8) , (const, 0x8000000000000000, 8), (unique, 0xdcf00, 8) INT_RIGHT (unique, 0x100005e8, 8) , (const, 0x1, 4), (unique, 0x100005e8, 8) CAST (unique, 0xdcd00, 8)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x42cc10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x12c0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12a0, 32) , (register, 0x1240, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x1220, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1220, 32) , (register, 0x1260, 32), (register, 0x1280, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x1200, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1200, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x42cca0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x42ccc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x42cce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12a0, 32) , (register, 0x12e0, 32)]
[(register, 0x30, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12c0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100005f9, 1), (unique, 0x100005f9, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100005f8, 1), (unique, 0x100005f8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000030a, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000030a, 8) PTRSUB (unique, 0x10000302, 8) , (const, 0x0, 8), (unique, 0x10000302, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002ea, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002ea, 8) PTRSUB (unique, 0x100002e2, 8) , (const, 0x0, 8), (unique, 0x100002e2, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100005fb, 1), (unique, 0x100005fb, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100005fa, 1), (unique, 0x100005fa, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002ca, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x100002ca, 8) PTRSUB (unique, 0x100002c2, 8) , (const, 0x0, 8), (unique, 0x100002c2, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002aa, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x100002aa, 8) PTRSUB (unique, 0x100002a2, 8) , (const, 0x0, 8), (unique, 0x100002a2, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100005fd, 1), (unique, 0x100005fd, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100005fc, 1), (unique, 0x100005fc, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000028a, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000028a, 8) PTRSUB (unique, 0x10000282, 8) , (const, 0x0, 8), (unique, 0x10000282, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000026a, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) PTRSUB (unique, 0x10000262, 8) , (const, 0x0, 8), (unique, 0x10000262, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100005ff, 1), (unique, 0x100005ff, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100005fe, 1), (unique, 0x100005fe, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000024a, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000024a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000023a, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000023a, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000601, 1), (unique, 0x10000601, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10000600, 1), (unique, 0x10000600, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000f2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000f2, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000e2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000e2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
