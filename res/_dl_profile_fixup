[ ---  CBRANCH (ram, 0x48c7c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x67, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c87d8, 4) COPY (ram, 0x4c87d8, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x264, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x261, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) CALL (ram, 0x48c470, 8)]
[ ---  CBRANCH (ram, 0x48c790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) INT_ADD (unique, 0x10000166, 8) , (const, 0x1c, 8), (unique, 0x10000166, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x30, 8) , (const, 0x20, 8), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x20, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000176, 8), (unique, 0x10000176, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1f, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48c871, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x7, 4), (register, 0x30, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000176, 8), (unique, 0x10000176, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1f, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x25b, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100000e6, 8) , (unique, 0x100000de, 8) , (const, 0xe5, 4) , (unique, 0x100000ee, 8), (unique, 0x100000ee, 8) COPY (const, 0x4b5180, 8), (unique, 0x100000e6, 8) COPY (const, 0x4b5130, 8), (unique, 0x100000de, 8) COPY (const, 0x4b511c, 8)]
[(ram, 0x4c87d8, 4) COPY (ram, 0x4c87d8, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x25b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x48c7e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (unique, 0x1000019e, 8) , (const, 0x5, 8), (unique, 0x1000019e, 8) CAST (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x48c869, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) INT_ADD (unique, 0x100001ae, 8) , (const, 0x6, 8), (unique, 0x100001ae, 8) CAST (unique, 0x3400, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48c7ee, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0xa8, 8) CAST (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) INT_ADD (register, 0xa8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001be, 8), (unique, 0x100001be, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x48c6f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x3a, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48c6f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x5d, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7fff, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8) , (register, 0x80, 8)]
[(register, 0x8, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x48c818, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x211, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x1, 4), (unique, 0x4f00, 8) CAST (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) INT_ADD (register, 0x110, 8) , (const, 0x1c, 8)]
[(register, 0x8, 8) COPY (const, 0x5, 8)]
[ ---  BRANCH (ram, 0x48c706, 1)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x12d, 4), (ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x12d, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001fe, 8), (unique, 0x100001fe, 8) CALL (ram, 0x481760, 8) , (register, 0x90, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8) , (const, 0x1, 8) , (register, 0x8, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x72, 8) , (const, 0x8, 8), (register, 0x90, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48c830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000206, 8), (unique, 0x10000206, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) INT_ADD (register, 0x110, 8) , (const, 0x1c, 8)]
[ ---  CBRANCH (ram, 0x48c747, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) INT_ADD (register, 0x110, 8) , (const, 0x1c, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x48c747, 1)]
[(ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c779, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c7b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0xfff1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) INT_ADD (unique, 0x10000216, 8) , (const, 0x6, 8), (unique, 0x10000216, 8) CAST (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x48c7b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48c763, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000022e, 8), (unique, 0x1000022e, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000226, 8), (unique, 0x10000226, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000236, 8), (unique, 0x10000236, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100000c9, 8) MULTIEQUAL (unique, 0x3400, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x100000d1, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(unique, 0x100000da, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[ ---  CBRANCH (ram, 0x48c779, 1) , (unique, 0x100000d9, 1), (unique, 0x100000d9, 1) INT_EQUAL (register, 0x0, 1) , (const, 0xa, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4c87d8, 4) INDIRECT (unique, 0x100000da, 4) , (const, 0x1ca, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x100000c9, 8) , (const, 0x1ca, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) CALLIND (unique, 0x100000d1, 8)]
[ ---  BRANCH (ram, 0x48c779, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0x100000c9, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0x100000d1, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48c793, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87d8, 4) , (const, 0x0, 4), (ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (unique, 0x100000da, 4) , (ram, 0x4c87d8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0xa8, 8)]
[(ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1aa, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1a7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) INT_ADD (unique, 0x10000246, 8) , (const, 0x1c, 8), (unique, 0x10000246, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x48c793, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1b2, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x485fb0, 8) , (register, 0x10, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c87d8, 4) COPY (ram, 0x4c87d8, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1b2, 4), (ram, 0x4c87d8, 4) INDIRECT (ram, 0x4c87d8, 4) , (const, 0x1ad, 4), (ram, 0x4c87d8, 4) MULTIEQUAL (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4) , (ram, 0x4c87d8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (unique, 0xbd80, 8)]
