[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000465, 8) , (const, 0x1, 4), (unique, 0x10000465, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3a, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000045d, 8), (unique, 0x1000045d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100003dd, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[ ---  CBRANCH (ram, 0x46870a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f, 4)]
[ ---  CBRANCH (ram, 0x4687c0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455300, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(unique, 0x1000040d, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4687d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bc, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b3, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1bc, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1b3, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x1bc, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x1b3, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1bc, 4), (unique, 0xbd80, 8) CAST (unique, 0x1000046d, 8), (unique, 0x1000046d, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x1bc, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x1b3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bc, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b3, 4)]
[(register, 0x30, 8) CAST (unique, 0x1000047d, 8), (unique, 0x1000047d, 8) INT_SUB (unique, 0x10000475, 8) , (register, 0x8, 8), (unique, 0x10000475, 8) CAST (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8), (register, 0x8, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1d, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000249, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000249, 8) PTRSUB (const, 0x0, 8) , (const, 0x49fa50, 8), (register, 0x38, 8) INT_SEXT (register, 0x30, 4), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000046d, 8), (unique, 0x1000046d, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000182, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1d, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000249, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000249, 8) PTRSUB (const, 0x0, 8) , (const, 0x49fa50, 8), (register, 0x38, 8) INT_SEXT (register, 0x30, 4), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000046d, 8), (unique, 0x1000046d, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000445, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000230, 8) MULTIEQUAL (unique, 0x10000445, 8) , (unique, 0x1000044d, 8)]
[(unique, 0x10000238, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x46883b, 1) , (unique, 0x10000227, 1), (unique, 0x10000227, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x30, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x1000048d, 8), (unique, 0x1000048d, 8) INT_ADD (unique, 0x10000485, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x10000485, 8) CAST (unique, 0x10000230, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100004ad, 8), (unique, 0x100004ad, 8) INT_ADD (unique, 0x100004a5, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100004a5, 8) CAST (unique, 0x10000230, 8)]
[(register, 0x20, 8) CAST (unique, 0x100004bd, 8), (unique, 0x100004bd, 8) INT_ADD (unique, 0x100004b5, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x100004b5, 8) CAST (unique, 0x10000230, 8)]
[(unique, 0x1000044d, 8) COPY (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x1000049d, 8), (unique, 0x1000049d, 8) INT_ADD (unique, 0x10000495, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x10000495, 8) CAST (unique, 0x10000230, 8)]
[(register, 0x20, 8) CAST (unique, 0x100004cd, 8), (unique, 0x100004cd, 8) INT_ADD (unique, 0x100004c5, 8) , (unique, 0x1000018a, 8), (unique, 0x100004c5, 8) CAST (unique, 0x10000238, 8), (unique, 0x1000018a, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000182, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) CAST (unique, 0x100004dd, 8), (unique, 0x100004dd, 8) INT_ADD (unique, 0x100004d5, 8) , (unique, 0x1000018a, 8), (unique, 0x100004d5, 8) CAST (unique, 0x10000238, 8), (unique, 0x1000018a, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000182, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) CAST (unique, 0x100004ed, 8), (unique, 0x100004ed, 8) INT_ADD (unique, 0x100004e5, 8) , (unique, 0x1000018a, 8), (unique, 0x100004e5, 8) CAST (unique, 0x10000238, 8), (unique, 0x1000018a, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000182, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x46884e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000182, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3880, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3880, 8), (unique, 0x3880, 8) CAST (unique, 0x100004fd, 8), (unique, 0x100004fd, 8) INT_ADD (unique, 0x100004f5, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100004f5, 8) CAST (unique, 0x10000238, 8)]
[(register, 0xb0, 8) INT_ZEXT (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4), (register, 0xb0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x46887f, 8), (register, 0x20, 8) CAST (unique, 0x10000526, 8), (unique, 0x10000526, 8) INT_ADD (unique, 0x1000051e, 8) , (unique, 0x100002e1, 8), (unique, 0x1000051e, 8) CAST (unique, 0x10000238, 8), (unique, 0x100002e1, 8) INT_ADD (unique, 0x1000018a, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x271, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x271, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x271, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x271, 4), (stack, 0xffffffffffffff20, 8) COPY (unique, 0x10000516, 8), (unique, 0x10000516, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0x10000259, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000259, 8) COPY (const, 0x49fa80, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000515, 1), (unique, 0x10000515, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000251, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000251, 8) PTRSUB (const, 0x0, 8) , (const, 0x49fa60, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x271, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x271, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5359532f, 4), (register, 0x0, 8) CAST (unique, 0x1000052e, 8), (unique, 0x1000052e, 8) CALL (ram, 0x401160, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000050d, 8), (unique, 0x1000050d, 8) INT_ADD (unique, 0x10000505, 8) , (unique, 0x100002d9, 8), (unique, 0x10000505, 8) CAST (unique, 0x10000238, 8), (unique, 0x100002d9, 8) INT_ADD (unique, 0x1000018a, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000536, 8) , (const, 0x5f, 1), (unique, 0x10000536, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x1000052e, 8), (unique, 0x1000052e, 8) CALL (ram, 0x401160, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000050d, 8), (unique, 0x1000050d, 8) INT_ADD (unique, 0x10000505, 8) , (unique, 0x100002d9, 8), (unique, 0x10000505, 8) CAST (unique, 0x10000238, 8), (unique, 0x100002d9, 8) INT_ADD (unique, 0x1000018a, 8) , (const, 0xf, 8)]
[ ---  CBRANCH (ram, 0x468958, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 4) , (const, 0x8, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4), (register, 0xb0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000546, 8), (unique, 0x10000546, 8) INT_ADD (unique, 0x1000053e, 8) , (const, 0x5, 8), (unique, 0x1000053e, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000566, 8), (unique, 0x10000566, 8) INT_ADD (unique, 0x1000055e, 8) , (unique, 0x10000311, 8), (unique, 0x1000055e, 8) CAST (register, 0x0, 8), (unique, 0x10000311, 8) INT_SUB (register, 0x30, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000556, 8), (unique, 0x10000556, 8) INT_ADD (unique, 0x1000054e, 8) , (unique, 0x10000309, 8), (unique, 0x1000054e, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x10000309, 8) INT_SUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (register, 0xb0, 4)]
[(unique, 0x10000425, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10000596, 8), (unique, 0x10000596, 8) INT_SUB (unique, 0x1000058e, 8) , (register, 0x0, 8), (unique, 0x1000058e, 8) CAST (stack, 0xffffffffffffff20, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000586, 8) , (unique, 0x100002f9, 8), (unique, 0x10000586, 8) CAST (register, 0x0, 8), (unique, 0x100002f9, 8) INT_SUB (const, 0x5, 8) , (unique, 0x1000057e, 8), (unique, 0x1000057e, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000576, 8), (unique, 0x10000576, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x1000056e, 8) , (const, 0xd, 8), (unique, 0x1000056e, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000435, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000576, 8), (unique, 0x10000576, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x1000056e, 8) , (const, 0xd, 8), (unique, 0x1000056e, 8) CAST (register, 0x0, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0xb0, 4), (register, 0xb0, 4) INT_RIGHT (register, 0xb0, 4) , (const, 0x3, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_ADD (unique, 0x10000586, 8) , (unique, 0x100002f9, 8), (unique, 0x10000586, 8) CAST (register, 0x0, 8), (unique, 0x100002f9, 8) INT_SUB (const, 0x5, 8) , (unique, 0x1000057e, 8), (unique, 0x1000057e, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000576, 8), (unique, 0x10000576, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x1000056e, 8) , (const, 0xd, 8), (unique, 0x1000056e, 8) CAST (register, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000435, 8) , (unique, 0x1000043d, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000425, 8) , (unique, 0x1000042d, 8)]
[ ---  CBRANCH (ram, 0x46898d, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000042d, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000349, 8) , (const, 0x8, 8), (unique, 0x10000349, 8) INT_ADD (unique, 0x10000341, 8) , (const, 0x1, 8), (unique, 0x10000341, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x1000043d, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000329, 8) , (const, 0x8, 8), (unique, 0x10000329, 8) INT_ADD (unique, 0x10000321, 8) , (const, 0x1, 8), (unique, 0x10000321, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x46898a, 1)]
[ ---  CBRANCH (ram, 0x468992, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000206, 4) , (const, 0x0, 4), (unique, 0x10000206, 4) INT_AND (register, 0xb0, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) CAST (unique, 0x100005ae, 8), (unique, 0x100005ae, 8) INT_ADD (unique, 0x100005a6, 8) , (const, 0x5, 8), (unique, 0x100005a6, 8) CAST (register, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000059e, 8), (unique, 0x1000059e, 8) CAST (stack, 0xffffffffffffff20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x100005ce, 8), (unique, 0x100005ce, 8) INT_ADD (unique, 0x100005c6, 8) , (unique, 0x10000361, 8), (unique, 0x100005c6, 8) CAST (register, 0x0, 8), (unique, 0x10000361, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005be, 8), (unique, 0x100005be, 8) INT_ADD (unique, 0x100005b6, 8) , (unique, 0x10000359, 8), (unique, 0x100005b6, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x10000359, 8) INT_SUB (register, 0xb0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4688be, 1)]
[ ---  CBRANCH (ram, 0x4688be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100005e6, 8), (unique, 0x100005e6, 8) INT_ADD (unique, 0x100005de, 8) , (const, 0x5, 8), (unique, 0x100005de, 8) CAST (register, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005d6, 8), (unique, 0x100005d6, 8) CAST (stack, 0xffffffffffffff20, 8)]
[ ---  CBRANCH (ram, 0x4689a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a2, 4) , (const, 0x0, 4), (unique, 0x100001a2, 4) INT_AND (register, 0xb0, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc00, 2), (unique, 0x3a00, 8) CAST (unique, 0x10000606, 8), (unique, 0x10000606, 8) INT_ADD (unique, 0x100005fe, 8) , (unique, 0x10000371, 8), (unique, 0x100005fe, 8) CAST (register, 0x0, 8), (unique, 0x10000371, 8) INT_ADD (register, 0xb0, 8) , (const, 0x3, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005f6, 8), (unique, 0x100005f6, 8) INT_ADD (unique, 0x100005ee, 8) , (unique, 0x10000369, 8), (unique, 0x100005ee, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x10000369, 8) INT_SUB (register, 0xb0, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x4688be, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4688cd, 8), (register, 0x20, 8) CAST (unique, 0x10000616, 8), (unique, 0x10000616, 8) INT_ADD (unique, 0x1000060e, 8) , (unique, 0x100002e9, 8), (unique, 0x1000060e, 8) CAST (unique, 0x10000238, 8), (unique, 0x100002e9, 8) INT_ADD (unique, 0x1000018a, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bb, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2bb, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2bb, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2bb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bb, 4)]
[ ---  CBRANCH (ram, 0x46870a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4688e7, 8), (register, 0x20, 8) CAST (unique, 0x10000626, 8), (unique, 0x10000626, 8) INT_ADD (unique, 0x1000061e, 8) , (unique, 0x100002f1, 8), (unique, 0x1000061e, 8) CAST (unique, 0x10000238, 8), (unique, 0x100002f1, 8) INT_ADD (unique, 0x1000018a, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ce, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2ce, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2ce, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2ce, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ce, 4)]
[(unique, 0x10000415, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x468698, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455300, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4686c6, 8), (register, 0x20, 8) CAST (unique, 0x1000064e, 8), (unique, 0x1000064e, 8) INT_ADD (unique, 0x10000646, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000646, 8) CAST (register, 0x20, 8), (register, 0x20, 8) COPY (unique, 0x1000041d, 8), (unique, 0x1000041d, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (unique, 0x10000415, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x97, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x97, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x97, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff20, 8) CAST (unique, 0x1000063e, 8), (unique, 0x1000063e, 8) INT_OR (unique, 0x1000020b, 8) , (unique, 0x10000213, 8), (unique, 0x10000213, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0x1000020b, 8) INT_AND (unique, 0x10000636, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000636, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000062e, 8), (unique, 0x1000062e, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x97, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x96, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100003cd, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x97, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10000455, 8) COPY (register, 0x20, 8), (register, 0x20, 8) COPY (unique, 0x1000041d, 8), (unique, 0x1000041d, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (unique, 0x10000415, 8)]
[ ---  CBRANCH (ram, 0x468730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (unique, 0x100003c5, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (register, 0xb0, 4) , (const, 0x0, 8), (unique, 0x100003c5, 8) COPY (stack, 0xffffffffffffff58, 8), (register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4686d7, 8), (register, 0x20, 8) CAST (unique, 0x1000065e, 8), (unique, 0x1000065e, 8) INT_ADD (unique, 0x10000656, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000656, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xa6, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xa6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa6, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0xb0, 4)]
[(unique, 0x100003d5, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xa6, 4)]
[ ---  CBRANCH (ram, 0x46870a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4686ee, 8), (register, 0x20, 8) CAST (unique, 0x1000066e, 8), (unique, 0x1000066e, 8) INT_ADD (unique, 0x10000666, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000666, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xba, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xba, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb9, 4)]
[ ---  CBRANCH (ram, 0x468940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000676, 8), (unique, 0x10000676, 8) CALL (ram, 0x468420, 8) , (register, 0x30, 4) , (register, 0x0, 8) , (unique, 0x100003d5, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x46894f, 8), (register, 0x20, 8) CAST (unique, 0x10000686, 8), (unique, 0x10000686, 8) INT_ADD (unique, 0x1000067e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000067e, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfa, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xfa, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xfa, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfa, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf9, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  BRANCH (ram, 0x46870a, 1)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4687c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x26, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000068e, 8), (unique, 0x1000068e, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x468750, 8), (register, 0x20, 8) CAST (unique, 0x1000069e, 8), (unique, 0x1000069e, 8) INT_ADD (unique, 0x10000696, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000696, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x112, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x112, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x112, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x112, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff18, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (unique, 0x100003cd, 8)]
[ ---  CBRANCH (ram, 0x4687c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (unique, 0x100003cd, 8)]
[(unique, 0x1000037a, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(unique, 0x10000382, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000038a, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(unique, 0x10000392, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x100003a2, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x100003aa, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x46877f, 1) , (unique, 0x10000379, 1), (unique, 0x10000379, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100006a6, 8), (unique, 0x100006a6, 8) CAST (unique, 0x1000039a, 8), (unique, 0x1000039a, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x100003cd, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x46878d, 8), (register, 0x20, 8) CAST (unique, 0x100006b6, 8), (unique, 0x100006b6, 8) INT_ADD (unique, 0x100006ae, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100006ae, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000382, 8) , (const, 0x162, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x162, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x10000392, 8) , (const, 0x161, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x162, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x100003a2, 8) , (const, 0x161, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x162, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100003aa, 8) , (const, 0x161, 4)]
[(unique, 0x100003b5, 8) COPY (stack, 0xffffffffffffff18, 8), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x162, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x1000038a, 8) , (const, 0x161, 4)]
[ ---  CBRANCH (ram, 0x468770, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100006c6, 8) , (const, 0x1, 8), (unique, 0x100006c6, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006be, 8), (unique, 0x100006be, 8) CALL (ram, 0x456020, 8) , (register, 0xb0, 4) , (unique, 0x1000037a, 8) , (unique, 0x1000039a, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4687a5, 8), (register, 0x20, 8) CAST (unique, 0x100006d6, 8), (unique, 0x100006d6, 8) INT_ADD (unique, 0x100006ce, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100006ce, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x178, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x178, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x178, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x177, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0x100003b5, 8)]
[ ---  CBRANCH (ram, 0x4687c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff20, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x178, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x177, 4), (stack, 0xffffffffffffff20, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x100006de, 8), (unique, 0x100006de, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0xa8, 8) CAST (unique, 0x100006f6, 8), (unique, 0x100006f6, 8) INT_ADD (unique, 0x100006e6, 8) , (unique, 0x100006ee, 8), (unique, 0x100006ee, 8) CAST (register, 0x0, 8), (unique, 0x100006e6, 8) CAST (unique, 0x1000037a, 8)]
[(register, 0xb8, 8) INT_SUB (unique, 0x1000039a, 8) , (unique, 0x100006fe, 8), (unique, 0x100006fe, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (stack, 0xffffffffffffff20, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000706, 8), (unique, 0x10000706, 8) INT_ADD (unique, 0x10000382, 8) , (const, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffff20, 4) SUBPIECE (unique, 0x10000392, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x468910, 8), (register, 0x20, 8) CAST (unique, 0x10000716, 8), (unique, 0x10000716, 8) INT_ADD (unique, 0x1000070e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000070e, 8) CAST (register, 0x20, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0xb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x468926, 8), (register, 0x20, 8) CAST (unique, 0x10000726, 8), (unique, 0x10000726, 8) INT_ADD (unique, 0x1000071e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000071e, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x146, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000382, 8) , (const, 0x13b, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x146, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x13b, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x1000038a, 8) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x146, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x13b, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x10000392, 8) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x146, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100003aa, 8) , (const, 0x13a, 4)]
[ ---  CBRANCH (ram, 0x46870a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000072e, 8), (unique, 0x1000072e, 8) CALL (ram, 0x468420, 8) , (register, 0x30, 4) , (unique, 0x100003bd, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x100003bd, 8) COPY (stack, 0xffffffffffffff18, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x13b, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x13b, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x100003a2, 8) , (const, 0x13a, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x1000038a, 8) , (const, 0x13a, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x4686fc, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000736, 8) , (register, 0x10, 4), (unique, 0x10000736, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4687c8, 8), (register, 0x20, 8) CAST (unique, 0x10000746, 8), (unique, 0x10000746, 8) INT_ADD (unique, 0x1000073e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000073e, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x18f, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x18e, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x18f, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x18e, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0x0, 4)]
[(unique, 0x10000405, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x46870a, 1)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003dd, 8) , (unique, 0x10000455, 8) , (unique, 0x10000455, 8) , (unique, 0x10000455, 8) , (unique, 0x10000455, 8) , (unique, 0x10000405, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4689b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000074e, 8), (unique, 0x1000074e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x10000241, 8), (unique, 0x10000241, 8) PTRSUB (const, 0x0, 8) , (const, 0x4689bc, 8), (register, 0x20, 8) CAST (unique, 0x1000075e, 8), (unique, 0x1000075e, 8) INT_ADD (unique, 0x10000756, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000756, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xf0, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xf0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf0, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
