[(register, 0x28, 8) INT_AND (register, 0x38, 8) , (const, 0xffffffff, 8)]
[(register, 0x18, 8) INT_SEXT (unique, 0x10000287, 4), (unique, 0x10000287, 4) CAST (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x19ac00, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb264, 4) , (const, 0x0, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0xd9, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xd9, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xd9, 4)]
[(ram, 0x4eb290, 8) INDIRECT (ram, 0x4eb290, 8) , (const, 0xd9, 4)]
[(ram, 0x4eb298, 8) INDIRECT (ram, 0x4eb298, 8) , (const, 0xd9, 4)]
[(ram, 0x4eb2a0, 8) INDIRECT (ram, 0x4eb2a0, 8) , (const, 0xd9, 4)]
[(ram, 0x4eb2ac, 4) INDIRECT (ram, 0x4eb2ac, 4) , (const, 0xd9, 4)]
[(ram, 0x4eb2b4, 4) INDIRECT (ram, 0x4eb2b4, 4) , (const, 0xd9, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0xd9, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xd9, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xd9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd9, 4)]
[ ---  CALL (ram, 0x1913e0, 8)]
[ ---  BRANCH (ram, 0x19ab95, 1)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2b4, 4) MULTIEQUAL (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4)]
[(ram, 0x4eb2ac, 4) MULTIEQUAL (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4)]
[(ram, 0x4eb2a0, 8) MULTIEQUAL (ram, 0x4eb2a0, 8) , (ram, 0x4eb2a0, 8)]
[(ram, 0x4eb298, 8) MULTIEQUAL (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8)]
[(ram, 0x4eb290, 8) MULTIEQUAL (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[ ---  CBRANCH (ram, 0x19abb1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ebc40, 4) , (const, 0x0, 4)]
[(ram, 0x4ebc40, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ebc40, 4) , (const, 0x0, 4)]
[(ram, 0x4ebc40, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19abd4, 1)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0xbd, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xbd, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xbd, 4)]
[(ram, 0x4eb290, 8) INDIRECT (ram, 0x4eb290, 8) , (const, 0xbd, 4)]
[(ram, 0x4eb298, 8) INDIRECT (ram, 0x4eb298, 8) , (const, 0xbd, 4)]
[(ram, 0x4eb2a0, 8) INDIRECT (ram, 0x4eb2a0, 8) , (const, 0xbd, 4)]
[(ram, 0x4eb2ac, 4) INDIRECT (ram, 0x4eb2ac, 4) , (const, 0xbd, 4)]
[(ram, 0x4eb2b4, 4) INDIRECT (ram, 0x4eb2b4, 4) , (const, 0xbd, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0xbd, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xbd, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xbd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbd, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100000d3, 8), (unique, 0x100000d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x49, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x49, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x49, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb290, 8) INDIRECT (ram, 0x4eb290, 8) , (const, 0x49, 4), (ram, 0x4eb290, 8) MULTIEQUAL (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8)]
[(ram, 0x4eb298, 8) INDIRECT (ram, 0x4eb298, 8) , (const, 0x49, 4), (ram, 0x4eb298, 8) MULTIEQUAL (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8)]
[(ram, 0x4eb2a0, 8) INDIRECT (ram, 0x4eb2a0, 8) , (const, 0x49, 4), (ram, 0x4eb2a0, 8) MULTIEQUAL (ram, 0x4eb2a0, 8) , (ram, 0x4eb2a0, 8) , (ram, 0x4eb2a0, 8)]
[(ram, 0x4eb2ac, 4) INDIRECT (ram, 0x4eb2ac, 4) , (const, 0x49, 4), (ram, 0x4eb2ac, 4) MULTIEQUAL (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4)]
[(ram, 0x4eb2b4, 4) INDIRECT (ram, 0x4eb2b4, 4) , (const, 0x49, 4), (ram, 0x4eb2b4, 4) MULTIEQUAL (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x49, 4), (ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x49, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x49, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x49, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALL (ram, 0x190910, 8) , (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  BRANCHIND (unique, 0x10000068, 4), (unique, 0x10000068, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4)]
[(unique, 0x100000eb, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000163, 8) COPY (ram, 0x4eb280, 8)]
[(unique, 0x1000017b, 8) COPY (ram, 0x4eb288, 8)]
[(unique, 0x1000019b, 8) COPY (ram, 0x4eb290, 8)]
[(unique, 0x100001cb, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x1000021b, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  CBRANCH (ram, 0x19ac27, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 4) , (const, 0xa1, 4)]
[(register, 0x0, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000143, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x19acdb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000028b, 4), (unique, 0x1000028b, 4) CAST (register, 0x30, 4)]
[(ram, 0x4eb2b4, 4) COPY (const, 0x1, 4)]
[(unique, 0x100000f3, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000016b, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000183, 8) COPY (ram, 0x4eb288, 8)]
[(unique, 0x100001a3, 8) COPY (ram, 0x4eb290, 8)]
[(unique, 0x100001d3, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x10000223, 8) COPY (ram, 0x4eb2a0, 8)]
[(ram, 0x4eb2b4, 4) COPY (const, 0x1, 4)]
[(unique, 0x100000fb, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000018b, 8) COPY (register, 0x18, 8)]
[(unique, 0x100001ab, 8) COPY (ram, 0x4eb290, 8)]
[(unique, 0x100001db, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x1000022b, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(unique, 0x10000103, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001b3, 8) COPY (ram, 0x4eb290, 8)]
[(unique, 0x100001e3, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x10000233, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  CBRANCH (ram, 0x19ac27, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (const, 0x2000001, 8)]
[(ram, 0x4eb2b4, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000010b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x100001bb, 8) COPY (register, 0x18, 8)]
[(unique, 0x100001eb, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x1000023b, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(ram, 0x4eb2b4, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000113, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x100001f3, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x10000243, 8) COPY (ram, 0x4eb2a0, 8)]
[(unique, 0x10000273, 4) COPY (register, 0x30, 4)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(unique, 0x100000e3, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000015b, 8) COPY (ram, 0x4eb280, 8)]
[(unique, 0x10000173, 8) COPY (ram, 0x4eb288, 8)]
[(unique, 0x10000193, 8) COPY (ram, 0x4eb290, 8)]
[(unique, 0x100001c3, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x10000213, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(unique, 0x1000011b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x100001fb, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x1000024b, 8) COPY (ram, 0x4eb2a0, 8)]
[(unique, 0x10000283, 4) COPY (register, 0x30, 4)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(unique, 0x10000123, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000203, 8) COPY (ram, 0x4eb298, 8)]
[(unique, 0x10000253, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  CBRANCH (ram, 0x19ac27, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x1000028f, 4), (unique, 0x1000028f, 4) CAST (register, 0x30, 4)]
[(unique, 0x1000020b, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000025b, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(unique, 0x10000133, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000263, 8) COPY (ram, 0x4eb2a0, 8)]
[ ---  CBRANCH (ram, 0x19ac27, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000293, 4), (unique, 0x10000293, 4) CAST (register, 0x30, 4)]
[(unique, 0x1000026b, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x19ac27, 1)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (unique, 0x10000283, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4eb2b4, 4) MULTIEQUAL (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4)]
[(ram, 0x4eb2ac, 4) MULTIEQUAL (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (unique, 0x10000273, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4)]
[(ram, 0x4eb2a0, 8) MULTIEQUAL (unique, 0x10000213, 8) , (unique, 0x1000021b, 8) , (unique, 0x10000223, 8) , (unique, 0x1000022b, 8) , (unique, 0x10000233, 8) , (unique, 0x1000023b, 8) , (unique, 0x10000243, 8) , (unique, 0x1000024b, 8) , (unique, 0x10000253, 8) , (unique, 0x1000025b, 8) , (unique, 0x10000263, 8) , (unique, 0x1000026b, 8) , (ram, 0x4eb2a0, 8) , (ram, 0x4eb2a0, 8)]
[(ram, 0x4eb298, 8) MULTIEQUAL (unique, 0x100001c3, 8) , (unique, 0x100001cb, 8) , (unique, 0x100001d3, 8) , (unique, 0x100001db, 8) , (unique, 0x100001e3, 8) , (unique, 0x100001eb, 8) , (unique, 0x100001f3, 8) , (unique, 0x100001fb, 8) , (unique, 0x10000203, 8) , (unique, 0x1000020b, 8) , (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8)]
[(ram, 0x4eb290, 8) MULTIEQUAL (unique, 0x10000193, 8) , (unique, 0x1000019b, 8) , (unique, 0x100001a3, 8) , (unique, 0x100001ab, 8) , (unique, 0x100001b3, 8) , (unique, 0x100001bb, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (unique, 0x10000173, 8) , (unique, 0x1000017b, 8) , (unique, 0x10000183, 8) , (unique, 0x1000018b, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (unique, 0x10000163, 8) , (unique, 0x1000016b, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100000e3, 8) , (unique, 0x100000eb, 8) , (unique, 0x100000f3, 8) , (unique, 0x100000fb, 8) , (unique, 0x10000103, 8) , (unique, 0x1000010b, 8) , (unique, 0x10000113, 8) , (unique, 0x1000011b, 8) , (unique, 0x10000123, 8) , (unique, 0x10000123, 8) , (unique, 0x10000133, 8) , (unique, 0x10000133, 8) , (unique, 0x10000143, 8) , (unique, 0x10000143, 8)]
[ ---  CBRANCH (ram, 0x19ac3b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000027b, 4) COPY (unique, 0x100000db, 4), (unique, 0x100000db, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x19ac5d, 1) , (unique, 0x100000df, 1), (unique, 0x100000df, 1) INT_NOTEQUAL (unique, 0x100000db, 4) , (const, 0x0, 4), (unique, 0x100000db, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x9e, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x9e, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x9e, 4)]
[(ram, 0x4eb290, 8) INDIRECT (ram, 0x4eb290, 8) , (const, 0x9e, 4)]
[(ram, 0x4eb298, 8) INDIRECT (ram, 0x4eb298, 8) , (const, 0x9e, 4)]
[(ram, 0x4eb2a0, 8) INDIRECT (ram, 0x4eb2a0, 8) , (const, 0x9e, 4)]
[(ram, 0x4eb2ac, 4) INDIRECT (ram, 0x4eb2ac, 4) , (const, 0x9e, 4)]
[(ram, 0x4eb2b4, 4) INDIRECT (ram, 0x4eb2b4, 4) , (const, 0x9e, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x9e, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x9e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9e, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000cb, 8), (unique, 0x100000cb, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(unique, 0x10000153, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x9e, 4)]
[(unique, 0x10000277, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x9e, 4), (ram, 0x4ebc40, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb290, 8) COPY (ram, 0x4eb290, 8), (ram, 0x4eb290, 8) MULTIEQUAL (ram, 0x4eb290, 8) , (ram, 0x4eb290, 8)]
[(ram, 0x4eb298, 8) COPY (ram, 0x4eb298, 8), (ram, 0x4eb298, 8) MULTIEQUAL (ram, 0x4eb298, 8) , (ram, 0x4eb298, 8)]
[(ram, 0x4eb2a0, 8) COPY (ram, 0x4eb2a0, 8), (ram, 0x4eb2a0, 8) MULTIEQUAL (ram, 0x4eb2a0, 8) , (ram, 0x4eb2a0, 8)]
[(ram, 0x4eb2ac, 4) COPY (ram, 0x4eb2ac, 4), (ram, 0x4eb2ac, 4) MULTIEQUAL (ram, 0x4eb2ac, 4) , (ram, 0x4eb2ac, 4)]
[(ram, 0x4eb2b4, 4) COPY (ram, 0x4eb2b4, 4), (ram, 0x4eb2b4, 4) MULTIEQUAL (ram, 0x4eb2b4, 4) , (ram, 0x4eb2b4, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) COPY (unique, 0x1000027f, 4), (unique, 0x1000027f, 4) MULTIEQUAL (unique, 0x10000277, 4) , (unique, 0x1000027b, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000153, 8) , (register, 0x10, 8)]
