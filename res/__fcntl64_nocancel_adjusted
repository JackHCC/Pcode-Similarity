[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000005a, 8), (unique, 0x1000005a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x455e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x9, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0x10, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(unique, 0x1000004a, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x455e6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe8, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) INT_2COMP (stack, 0xffffffffffffffec, 4)]
[(unique, 0x10000052, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x455e6c, 1)]
[(register, 0x0, 4) COPY (const, 0x48, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(unique, 0x10000042, 8) COPY (register, 0x10, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000042, 8) , (unique, 0x1000004a, 8) , (unique, 0x10000052, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffffec, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x455ec3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000062, 8), (unique, 0x10000062, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4f, 4)]
[ ---  CALL (ram, 0x458dd0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x1, 4)]
