[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0x100000b5, 8) COPY (unique, 0x100000dd, 8), (unique, 0x100000dd, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x293bc0, 8)]
[ ---  CBRANCH (ram, 0x16eed3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x20, 4)]
[(unique, 0x100000bd, 8) COPY (unique, 0x100000e5, 8), (unique, 0x100000e5, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x293bb0, 8)]
[ ---  CBRANCH (ram, 0x16eed3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x30, 4)]
[(unique, 0x100000c5, 8) COPY (register, 0x20, 8)]
[(unique, 0x100000cd, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (const, 0x101010101010101, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 1), (register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0x100000cd, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (register, 0x30, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100000b5, 8) , (unique, 0x100000bd, 8) , (unique, 0x100000c5, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff, 8)]
[(unique, 0x100000d5, 4) COPY (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(unique, 0x1000008c, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000094, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x1000009c, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100000a0, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(unique, 0x100000a8, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x16eee8, 1) , (unique, 0x1000008b, 1), (unique, 0x1000008b, 1) INT_SLESS (const, 0xf, 4) , (unique, 0x100000ed, 4), (unique, 0x100000ed, 4) CAST (unique, 0x100000b0, 4), (unique, 0x100000b0, 4) MULTIEQUAL (unique, 0x100000d5, 4) , (unique, 0x100000d9, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x100000a0, 8) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x100000a8, 8) , (const, 0xab, 4)]
[(register, 0x28, 8) INT_ADD (unique, 0x10000094, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CBRANCH (ram, 0x16eee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x10, 4), (register, 0x18, 4) SUBPIECE (unique, 0x1000008c, 8) , (const, 0x0, 4)]
[(unique, 0x100000d9, 4) COPY (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x10, 4), (register, 0x18, 4) SUBPIECE (unique, 0x1000008c, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x16ef07, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000101, 4) , (const, 0x1, 4), (unique, 0x10000101, 4) CAST (unique, 0x1000009c, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x100000a0, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x100000a8, 8) , (const, 0x6d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_ADD (unique, 0x10000094, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xa8, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000111, 8), (unique, 0x10000111, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000010d, 4), (unique, 0x1000010d, 4) CAST (unique, 0x1000009c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000105, 8), (unique, 0x10000105, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000094, 8)]
