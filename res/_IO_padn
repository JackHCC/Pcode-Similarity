[(register, 0xb0, 8) CAST (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bc040, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1802c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x20, 4)]
[(register, 0xb0, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bc030, 8)]
[ ---  CBRANCH (ram, 0x1802c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x30, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_ZEXT (const, 0x101010101010101, 8), (unique, 0x3e080, 16) INT_ZEXT (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x1000006d, 8) , (const, 0xff, 8), (unique, 0x1000006d, 8) INT_ZEXT (unique, 0x10000137, 4), (unique, 0x10000137, 4) CAST (register, 0x30, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) SUBPIECE (unique, 0x1000010f, 16) , (const, 0x0, 4), (unique, 0x1000010f, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_ZEXT (const, 0x101010101010101, 8), (unique, 0x3e080, 16) INT_ZEXT (register, 0x0, 8), (register, 0x8, 8) INT_MULT (register, 0x0, 8) , (const, 0x101010101010101, 8), (register, 0x0, 8) INT_AND (unique, 0x1000006d, 8) , (const, 0xff, 8), (unique, 0x1000006d, 8) INT_ZEXT (unique, 0x10000137, 4), (unique, 0x10000137, 4) CAST (register, 0x30, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x3800, 8)]
[(register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x180340, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000013b, 4) , (const, 0x10, 4), (unique, 0x1000013b, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 4) INT_AND (register, 0xa0, 4) , (const, 0xf, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x180310, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1802f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb4, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x1802f0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000147, 8), (unique, 0x10000147, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x180381, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000147, 8), (unique, 0x10000147, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_SUB (register, 0xb8, 4) , (const, 0x10, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x180348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (register, 0xb8, 4), (register, 0xb8, 4) INT_SUB (register, 0xb8, 4) , (const, 0x10, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x180381, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x1000014f, 4), (unique, 0x1000014f, 4) CAST (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x1803a3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000153, 8), (unique, 0x10000153, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x159, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x159, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x159, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x159, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x180370, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000015b, 4), (unique, 0x1000015b, 4) CAST (register, 0xb8, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1803aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x154, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
