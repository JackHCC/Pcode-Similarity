[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x36, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x31, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x30, 8)]
[(register, 0x8, 8) PTRADD (unique, 0x1000014e, 8) , (unique, 0x10000090, 8) , (const, 0x1, 8), (unique, 0x1000014e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x10000090, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x30, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[(unique, 0x100000b0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x30, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x100001ce, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x1000010d, 8) MULTIEQUAL (unique, 0x100001ce, 8) , (unique, 0x100001d6, 8)]
[(unique, 0x10000115, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4664d2, 1) , (unique, 0x10000104, 1), (unique, 0x10000104, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x8, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000010d, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ee, 8) , (unique, 0xbe00, 8), (unique, 0x100001ee, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x1000010d, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000010d, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x100001d6, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000010d, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x100000b8, 8) , (const, 0x1, 8), (unique, 0x100000b8, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100000b0, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x100000b8, 8) , (const, 0x1, 8), (unique, 0x100000b8, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100000b0, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x4665a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100000b0, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fe, 8) , (unique, 0xbe00, 8), (unique, 0x100001fe, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x10000115, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4664e4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000206, 8) , (const, 0x4664f2, 8), (unique, 0x10000206, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x1000015e, 8) , (const, 0x1, 8), (unique, 0x1000015e, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020e, 8) , (const, 0x466500, 8), (unique, 0x1000020e, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x10000166, 8) , (const, 0x1, 8), (unique, 0x10000166, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x0, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (register, 0x0, 8) CALL (ram, 0x401160, 8) , (register, 0x20, 8) , (register, 0x38, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000216, 8) , (const, 0x466508, 8), (unique, 0x10000216, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x1000016e, 8) , (const, 0x1, 8), (unique, 0x1000016e, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xab, 4)]
[(register, 0x80, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x466e20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x466581, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x466e20, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000226, 8), (unique, 0x10000226, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000022e, 8), (unique, 0x1000022e, 8) INT_ADD (register, 0x0, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x466581, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) CAST (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) INT_XOR (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000236, 8), (unique, 0x10000236, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xa0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000226, 8), (unique, 0x10000226, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000246, 8) , (const, 0x466563, 8), (unique, 0x10000246, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x10000176, 8) , (const, 0x1, 8), (unique, 0x10000176, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024e, 8) , (const, 0x466569, 8), (unique, 0x1000024e, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x1000017e, 8) , (const, 0x1, 8), (unique, 0x1000017e, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x114, 4)]
[(register, 0x0, 4) CALLIND (register, 0xa0, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000256, 8), (unique, 0x10000256, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x118, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x114, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4665b3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000266, 8) , (unique, 0x1000011e, 8), (unique, 0x10000266, 8) CAST (register, 0x20, 8), (unique, 0x1000011e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4665b8, 8), (register, 0x20, 8) PTRADD (unique, 0x10000115, 8) , (unique, 0x10000186, 8) , (const, 0x1, 8), (unique, 0x10000186, 8) INT_ADD (unique, 0x100000b8, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x164, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
