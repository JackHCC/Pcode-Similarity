[ ---  CBRANCH (ram, 0x4867c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x4864a0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4863d0, 8)]
[(ram, 0x4c8310, 8) COPY (ram, 0x4c8310, 8), (ram, 0x4c8310, 8) INDIRECT (ram, 0x4c8310, 8) , (const, 0x6f, 4), (ram, 0x4c8310, 8) INDIRECT (ram, 0x4c8310, 8) , (const, 0x5f, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (ram, 0x4c8310, 8) , (const, 0xe, 8)]
[(ram, 0x4c8310, 8) INDIRECT (ram, 0x4c8310, 8) , (const, 0x29, 4)]
[ ---  CBRANCH (ram, 0x4867d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000005d, 8), (unique, 0x1000005d, 8) CALL (ram, 0x427e50, 8) , (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INT_ADD (ram, 0x4c8310, 8) , (const, 0x10, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4867ab, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c8310, 8) INDIRECT (ram, 0x4c8310, 8) , (const, 0x41, 4), (ram, 0x4c8310, 8) INDIRECT (ram, 0x4c8310, 8) , (const, 0x35, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000065, 8), (unique, 0x10000065, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x4864a0, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x28, 8)]
[(ram, 0x4c8310, 8) COPY (ram, 0x4c8310, 8), (ram, 0x4c8310, 8) INDIRECT (ram, 0x4c8310, 8) , (const, 0x50, 4), (ram, 0x4c8310, 8) MULTIEQUAL (ram, 0x4c8310, 8) , (ram, 0x4c8310, 8)]
[ ---  RETURN (const, 0x0, 8)]
