[(unique, 0x10000227, 4) COPY (ram, 0x4f0628, 4)]
[ ---  CBRANCH (ram, 0x143112, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0628, 4) COPY (unique, 0x10000237, 4), (unique, 0x10000237, 4) MULTIEQUAL (unique, 0x10000227, 4) , (unique, 0x1000022b, 4) , (unique, 0x1000022f, 4) , (unique, 0x10000233, 4)]
[ ---  CBRANCH (ram, 0x142f16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x142f32, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x306, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x306, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x306, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x306, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x306, 4)]
[ ---  CALL (ram, 0x230690, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x142fa4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000217, 8) COPY (ram, 0x4f0620, 8), (ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[ ---  CBRANCH (ram, 0x143050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x2b2, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x2b2, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x2b2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x143064, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b7, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x2b7, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x2b7, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x2b7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b7, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x143075, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000233, 4) COPY (unique, 0x1000020e, 4), (unique, 0x1000020e, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x143090, 1) , (unique, 0x10000212, 1), (unique, 0x10000212, 1) INT_NOTEQUAL (unique, 0x1000020e, 4) , (const, 0x0, 4), (unique, 0x1000020e, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e1, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x2e1, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x2e1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e1, 4)]
[ ---  CALL (ram, 0x2306c0, 8)]
[(unique, 0x1000022f, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x2e1, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x130, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x130, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x130, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000263, 8), (unique, 0x10000263, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x1000025b, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000025b, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x142fd1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x130, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000023f, 4) COPY (unique, 0x10000202, 4), (unique, 0x10000202, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x142fec, 1) , (unique, 0x10000206, 1), (unique, 0x10000206, 1) INT_NOTEQUAL (unique, 0x10000202, 4) , (const, 0x0, 4), (unique, 0x10000202, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28d, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x28d, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x28d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x28d, 4)]
[ ---  CALL (ram, 0x2306c0, 8)]
[(unique, 0x1000021f, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x28d, 4)]
[(unique, 0x1000023b, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x28d, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0628, 4) COPY (unique, 0x10000243, 4), (unique, 0x10000243, 4) MULTIEQUAL (unique, 0x1000023b, 4) , (unique, 0x1000023f, 4)]
[ ---  CBRANCH (ram, 0x142f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001ea, 8) , (const, 0x8, 8), (unique, 0x100001ea, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000021f, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x143020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27f, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x27f, 4), (ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x258, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x27f, 4), (ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x258, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x27f, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x258, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x258, 4)]
[ ---  CALLIND (register, 0x10, 8) , (unique, 0xbd80, 8) , (register, 0x38, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8), (register, 0x10, 8) CAST (unique, 0x10000293, 8), (unique, 0x10000293, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x142f69, 1)]
[ ---  CBRANCH (ram, 0x142f69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x252, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x252, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x252, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x252, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x252, 4)]
[ ---  CALLIND (register, 0x10, 8) , (register, 0x38, 4) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) INT_ADD (register, 0x0, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ae, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x1ae, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x1ae, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x1ae, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ae, 4)]
[ ---  CALLIND (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002d3, 8), (unique, 0x100002d3, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c3, 8), (unique, 0x100002c3, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x142f69, 1)]
[(ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x142f7f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x142f9b, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f5, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x1f5, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x1f5, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x1f5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1f5, 4)]
[ ---  CALL (ram, 0x230690, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x142f32, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0620, 8) , (unique, 0x10000217, 8), (ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x1430b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000024b, 4) COPY (unique, 0x10000207, 4), (unique, 0x10000207, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1430cb, 1) , (unique, 0x1000020b, 1), (unique, 0x1000020b, 1) INT_NOTEQUAL (unique, 0x10000207, 4) , (const, 0x0, 4), (unique, 0x10000207, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0x105, 4)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0x105, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x105, 4)]
[ ---  CALL (ram, 0x2306c0, 8)]
[(unique, 0x10000247, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x105, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0628, 4) COPY (unique, 0x1000024f, 4), (unique, 0x1000024f, 4) MULTIEQUAL (unique, 0x10000247, 4) , (unique, 0x1000024b, 4)]
[ ---  CBRANCH (ram, 0x14310b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7738, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x100002db, 8), (unique, 0x100002db, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7740, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdb, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0xdb, 4), (ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0xdb, 4), (ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0xdb, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xdb, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLIND (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x143100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x100002f3, 8), (unique, 0x100002f3, 8) CAST (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7740, 8), (register, 0x18, 8) PTRADD (unique, 0x100002eb, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100002eb, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x3a00, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0xf4, 4), (ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0xf4, 4), (ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0xf4, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf4, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALL (ram, 0x1e4dd0, 8) , (register, 0x38, 4)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf7, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ecd6c, 1) INDIRECT (ram, 0x4ecd6c, 1) , (const, 0xf7, 4), (ram, 0x4ecd6c, 1) MULTIEQUAL (ram, 0x4ecd6c, 1) , (ram, 0x4ecd6c, 1)]
[(ram, 0x4f0620, 8) INDIRECT (ram, 0x4f0620, 8) , (const, 0xf7, 4), (ram, 0x4f0620, 8) MULTIEQUAL (ram, 0x4f0620, 8) , (ram, 0x4f0620, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf7, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALL (ram, 0x143870, 8)]
[(unique, 0x1000022b, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0xf7, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[ ---  BRANCH (ram, 0x142eef, 1)]
