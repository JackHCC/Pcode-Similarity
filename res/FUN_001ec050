[(register, 0x30, 4) INT_AND (register, 0x80, 4) , (const, 0x20, 4)]
[(register, 0xb8, 4) INT_AND (register, 0x80, 4) , (const, 0x10, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000d3d, 8), (unique, 0x10000d3d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x30, 4) INT_AND (register, 0x80, 4) , (const, 0x5, 4)]
[(register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x2, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000d55, 8), (unique, 0x10000d55, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d4d, 8), (unique, 0x10000d4d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d45, 8), (unique, 0x10000d45, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x2f, 4), (register, 0x30, 4) INT_2COMP (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x80, 4) , (const, 0x1, 4)]
[(unique, 0x10000c22, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000c4a, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000cd6, 4) COPY (register, 0x8, 4)]
[(unique, 0x10000d11, 4) COPY (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x80, 4) , (const, 0xfffffffb, 4)]
[ ---  CBRANCH (ram, 0x1ec0f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x80, 4) , (const, 0x1, 4)]
[(unique, 0x10000c2a, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000c52, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000cda, 4) COPY (register, 0x8, 4)]
[(unique, 0x10000d15, 4) COPY (register, 0x80, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000d05, 4) , (unique, 0x10000d09, 4) , (unique, 0x10000d0d, 4) , (unique, 0x10000d11, 4) , (unique, 0x10000d15, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x10000c32, 8) , (unique, 0x10000c3a, 8) , (unique, 0x10000c42, 8) , (unique, 0x10000c22, 8) , (unique, 0x10000c2a, 8)]
[(register, 0x90, 4) MULTIEQUAL (unique, 0x10000cde, 4) , (unique, 0x10000ce2, 4) , (unique, 0x10000ce6, 4) , (unique, 0x10000cd6, 4) , (unique, 0x10000cda, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000c5a, 8) , (unique, 0x10000c62, 8) , (unique, 0x10000c6a, 8) , (unique, 0x10000c4a, 8) , (unique, 0x10000c52, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000c5a, 8) , (unique, 0x10000c62, 8) , (unique, 0x10000c6a, 8) , (unique, 0x10000c4a, 8) , (unique, 0x10000c52, 8)]
[ ---  CBRANCH (ram, 0x1ecb50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000c5a, 8) , (unique, 0x10000c62, 8) , (unique, 0x10000c6a, 8) , (unique, 0x10000c4a, 8) , (unique, 0x10000c52, 8)]
[(unique, 0x10000cca, 4) COPY (stack, 0xfffffffffffff6e0, 4), (stack, 0xfffffffffffff6e0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000067c, 4) , (const, 0x0, 4), (unique, 0x1000067c, 4) INT_AND (register, 0x80, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec12c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d65, 8), (unique, 0x10000d65, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d5d, 8), (unique, 0x10000d5d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_SUB (register, 0x18, 4) , (const, 0x21, 4), (register, 0x18, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ec5d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(register, 0x0, 4) COPY (const, 0x5c, 4)]
[(unique, 0x10000cbe, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x5c, 4)]
[ ---  CBRANCH (ram, 0x1ec980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d6d, 8), (unique, 0x10000d6d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec193, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec968, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d7d, 8), (unique, 0x10000d7d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d75, 8), (unique, 0x10000d75, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x3800, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d85, 8), (unique, 0x10000d85, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1ec5ec, 1)]
[(unique, 0x10000cba, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec5e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x3800, 8)]
[(register, 0x0, 4) COPY (unique, 0x10000cc2, 4), (unique, 0x10000cc2, 4) MULTIEQUAL (unique, 0x10000cba, 4) , (unique, 0x10000cbe, 4)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1ec384, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec8f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4edfac, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x118b, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x118b, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x118b, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x118b, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x118b, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x118b, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x118b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118b, 4)]
[(register, 0x0, 4) INT_OR (unique, 0x10000227, 4) , (const, 0x1, 4), (unique, 0x10000227, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1426e0, 8) , (unique, 0x100008a5, 8), (unique, 0x100008a5, 8) COPY (const, 0x2b54b0, 8)]
[ ---  BRANCH (ram, 0x1ec1ae, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (register, 0x0, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(unique, 0x10000cfd, 4) COPY (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1ec8d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(unique, 0x10000d01, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec1d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x1ec1d6, 1) , (unique, 0x1000099d, 1), (unique, 0x1000099d, 1) INT_EQUAL (unique, 0x100009b7, 4) , (const, 0x0, 4), (unique, 0x100009b7, 4) MULTIEQUAL (unique, 0x10000cfd, 4) , (unique, 0x10000d01, 4)]
[ ---  CBRANCH (ram, 0x1ec600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x21, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec1f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5e, 1)]
[ ---  CBRANCH (ram, 0x1ec600, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000d8d, 4) , (const, 0x0, 4), (unique, 0x10000d8d, 4) CAST (ram, 0x4edfac, 4)]
[(unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x90, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1ec1f8, 1)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000a72, 8) COPY (unique, 0x3800, 8)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000a72, 8) , (unique, 0x3800, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ec213, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d99, 8), (unique, 0x10000d99, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d91, 8), (unique, 0x10000d91, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0xb0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) PTRADD (register, 0x10, 8) , (unique, 0x100008b5, 8) , (const, 0x1, 8), (unique, 0x100008b5, 8) INT_SUB (const, 0xffffffffffffffff, 8) , (unique, 0x10000da1, 8), (unique, 0x10000da1, 8) CAST (register, 0x98, 8)]
[(unique, 0x10000ada, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1ec262, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x80, 8)]
[(register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000ada, 8) , (unique, 0x10000ae2, 8)]
[ ---  CBRANCH (ram, 0x1ec270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x5c, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ec710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000db1, 8), (unique, 0x10000db1, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000da9, 8), (unique, 0x10000da9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec2a0, 1)]
[(unique, 0x10000d19, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ec6c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x5b, 1)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x10000d31, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ec7e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x10000a3a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000b0a, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1ec810, 1)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000a3a, 8) , (unique, 0x10000a42, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000b0a, 8) , (unique, 0x10000b12, 8)]
[ ---  CBRANCH (ram, 0x1ec7f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000b0a, 8) , (unique, 0x10000b12, 8)]
[ ---  CBRANCH (ram, 0x1ecc28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (const, 0x0, 1), (unique, 0x3e80, 8) PTRADD (unique, 0x100008fd, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100008fd, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10bd, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x10bd, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x10bd, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x10bd, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x10bd, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x10bd, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x10bd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10bd, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x225690, 8) , (unique, 0x10000db9, 8), (unique, 0x10000db9, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[ ---  CBRANCH (ram, 0x1ed510, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1d000, 4) , (const, 0x0, 4), (unique, 0x1d000, 4) INT_AND (unique, 0x1cf80, 4) , (const, 0x1, 4), (unique, 0x1cf80, 4) INT_RIGHT (unique, 0xbc80, 4) , (unique, 0x1cf00, 4), (unique, 0x1cf00, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000dc1, 8), (unique, 0x10000dc1, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_SUB (register, 0x0, 8) , (const, 0x20, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 1), (register, 0x10, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x5, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec259, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[ ---  CBRANCH (ram, 0x1ec827, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x18, 1) , (unique, 0x10000dc9, 1), (unique, 0x10000dc9, 1) CAST (register, 0x30, 1), (register, 0x30, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x9f, 1)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec2a0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) PTRADD (unique, 0x100008cd, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100008cd, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[(unique, 0x10000a42, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10000b12, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x800, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec764, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec9b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec764, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec240, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ecf4d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dda, 8), (unique, 0x10000dda, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dd2, 8), (unique, 0x10000dd2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000dca, 8), (unique, 0x10000dca, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dea, 8), (unique, 0x10000dea, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x68, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000df2, 8), (unique, 0x10000df2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8)]
[ ---  CBRANCH (ram, 0x1ed443, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000e02, 4), (unique, 0x10000e02, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dfa, 8), (unique, 0x10000dfa, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000de2, 8), (unique, 0x10000de2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000e06, 8), (unique, 0x10000e06, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8) , (register, 0x10, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000e0e, 8), (unique, 0x10000e0e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8) , (register, 0x10, 8)]
[(unique, 0x10000822, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x10000819, 8) INT_ADD (unique, 0x10000e1a, 8) , (const, 0x5, 8), (unique, 0x10000e1a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ed489, 1) , (unique, 0x10000821, 1), (unique, 0x10000821, 1) INT_SLESS (unique, 0x10000e16, 4) , (const, 0x0, 4), (unique, 0x10000e16, 4) CAST (unique, 0x10000815, 4), (unique, 0x10000815, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1ed6de, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000822, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e26, 8), (unique, 0x10000e26, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000e22, 4), (unique, 0x10000e22, 4) CAST (unique, 0x10000815, 4)]
[ ---  BRANCH (ram, 0x1ecf6e, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000e2e, 8), (unique, 0x10000e2e, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000819, 8), (register, 0x10, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000555, 4) , (const, 0x1, 4), (unique, 0x10000555, 4) SUBPIECE (unique, 0x1000054d, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x1000054d, 8) , (const, 0x4, 8), (unique, 0x1000054d, 8) INT_MULT (unique, 0x10000822, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1ed44e, 1)]
[ ---  CBRANCH (ram, 0x1ecf6e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000822, 8) , (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000e36, 8), (unique, 0x10000e36, 8) INT_ADD (unique, 0x10000819, 8) , (unique, 0x10000822, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000047d, 4) , (const, 0x1, 4), (unique, 0x1000047d, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ed44e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000047d, 4) , (const, 0x1, 4), (unique, 0x1000047d, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000e46, 8), (unique, 0x10000e46, 8) INT_ADD (unique, 0x10000e3e, 8) , (register, 0x8, 8), (unique, 0x10000e3e, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000e4e, 8), (unique, 0x10000e4e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) CAST (unique, 0x10000e46, 8), (unique, 0x10000e46, 8) INT_ADD (unique, 0x10000e3e, 8) , (register, 0x8, 8), (unique, 0x10000e3e, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0x10000815, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1ed525, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000e5e, 4), (unique, 0x10000e5e, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e56, 8), (unique, 0x10000e56, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) CAST (unique, 0x10000e62, 8), (unique, 0x10000e62, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000e82, 8), (unique, 0x10000e82, 8) INT_ADD (unique, 0x10000e7a, 8) , (const, 0x5, 8), (unique, 0x10000e7a, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3400, 8) , (register, 0x8, 8) , (unique, 0x3400, 8)]
[(register, 0x28, 8) INT_SEXT (unique, 0x10000e8a, 4), (unique, 0x10000e8a, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3400, 8) , (register, 0x8, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000b8a, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ed550, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000e72, 8), (unique, 0x10000e72, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000e6a, 8), (unique, 0x10000e6a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3400, 8) , (register, 0x8, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000b92, 8) COPY (register, 0x0, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000b8a, 8) , (unique, 0x10000b92, 8)]
[ ---  CBRANCH (ram, 0x1ed5b4, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000e8e, 4), (unique, 0x10000e8e, 4) CAST (unique, 0xbc80, 4)]
[(unique, 0x10000aba, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1ed591, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ed75c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e9a, 8), (unique, 0x10000e9a, 8) INT_ADD (unique, 0x10000e92, 8) , (const, 0x5, 8), (unique, 0x10000e92, 8) CAST (register, 0x8, 8)]
[(unique, 0x10000ac2, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed591, 1)]
[(unique, 0x10000a7a, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed583, 1)]
[(unique, 0x10000aca, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1ed573, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a7a, 8) , (unique, 0x10000a82, 8)]
[(unique, 0x10000a82, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000ad2, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ed6ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000eaa, 8) , (const, 0x1, 8), (unique, 0x10000eaa, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x98, 8) , (unique, 0x10000ea2, 8) , (const, 0x1, 8), (unique, 0x10000ea2, 8) CAST (unique, 0x10000975, 8), (unique, 0x10000975, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed779, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000aba, 8) , (unique, 0x10000ac2, 8) , (unique, 0x10000aca, 8) , (unique, 0x10000ad2, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000eba, 8), (unique, 0x10000eba, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000eb2, 8) , (const, 0x1, 8), (unique, 0x10000eb2, 8) CAST (unique, 0x3100, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x100004ee, 4) , (const, 0x1, 4), (unique, 0x100004ee, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ed539, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x100004ee, 4) , (const, 0x1, 4), (unique, 0x100004ee, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0x8, 8) CAST (unique, 0x10000eca, 8), (unique, 0x10000eca, 8) INT_ADD (unique, 0x10000ec2, 8) , (register, 0x30, 8), (unique, 0x10000ec2, 8) CAST (unique, 0x3400, 8), (register, 0x30, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed539, 1)]
[(unique, 0x10000a9a, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1ed5f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ed78c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000eda, 8), (unique, 0x10000eda, 8) INT_ADD (unique, 0x10000ed2, 8) , (const, 0x5, 8), (unique, 0x10000ed2, 8) CAST (register, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000aa2, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed5f8, 1)]
[(unique, 0x10000b7a, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed5e5, 1)]
[(unique, 0x10000aaa, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1ed5d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000b7a, 8) , (unique, 0x10000b82, 8)]
[(unique, 0x10000ab2, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000b82, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1ed6cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000eea, 8) , (const, 0x1, 8), (unique, 0x10000eea, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x98, 8) , (unique, 0x10000ee2, 8) , (const, 0x1, 8), (unique, 0x10000ee2, 8) CAST (unique, 0x1000097d, 8), (unique, 0x1000097d, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed783, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a9a, 8) , (unique, 0x10000aa2, 8) , (unique, 0x10000aaa, 8) , (unique, 0x10000ab2, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed74c, 1)]
[ ---  CBRANCH (ram, 0x1ed6c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ed6c7, 1) , (unique, 0x100007b7, 1), (unique, 0x100007b7, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESS (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000efa, 8) , (const, 0x1, 8), (unique, 0x10000efa, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000ef2, 8) , (const, 0x1, 8), (unique, 0x10000ef2, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000cfb, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed768, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000a92, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ed76f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000f02, 8) , (const, 0x1, 8), (unique, 0x10000f02, 8) CAST (unique, 0x3100, 8)]
[(unique, 0x10000cfa, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ed6f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a8a, 8) , (register, 0x10, 8)]
[(unique, 0x10000a8a, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ed663, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10000f12, 8) , (const, 0x1, 8), (unique, 0x10000f12, 8) CAST (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x98, 8) , (unique, 0x10000f0a, 8) , (const, 0x1, 8), (unique, 0x10000f0a, 8) CAST (unique, 0x10000985, 8), (unique, 0x10000985, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000cfc, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ed768, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10000f22, 8) , (const, 0x1, 8), (unique, 0x10000f22, 8) CAST (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000f1a, 8) , (const, 0x1, 8), (unique, 0x10000f1a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a92, 8) , (register, 0x10, 8)]
[(unique, 0x10000b5a, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ed724, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0x10000862, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000f32, 8), (unique, 0x10000f32, 8) INT_ADD (unique, 0x10000f2a, 8) , (const, 0x5, 8), (unique, 0x10000f2a, 8) CAST (register, 0x8, 8), (unique, 0x10000862, 1) MULTIEQUAL (unique, 0x10000cfa, 1) , (unique, 0x10000cfb, 1) , (unique, 0x10000cfc, 1)]
[(unique, 0x10000b62, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000b5a, 8) , (unique, 0x10000b62, 8)]
[ ---  CBRANCH (ram, 0x1ed715, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000f42, 8) , (const, 0x1, 8), (unique, 0x10000f42, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x98, 8) , (unique, 0x10000f3a, 8) , (const, 0x1, 8), (unique, 0x10000f3a, 8) CAST (unique, 0x1000098d, 8), (unique, 0x1000098d, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000b5a, 8) , (unique, 0x10000b62, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000f5a, 4), (unique, 0x10000f5a, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000f52, 8) , (const, 0x1, 8), (unique, 0x10000f52, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x98, 8) , (unique, 0x10000f4a, 8) , (const, 0x1, 8), (unique, 0x10000f4a, 8) CAST (unique, 0x10000995, 8), (unique, 0x10000995, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1ed72b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000f5e, 8), (unique, 0x10000f5e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (register, 0x28, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x1ecf8a, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000f6e, 8), (unique, 0x10000f6e, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000535, 4) , (const, 0x1, 4), (unique, 0x10000535, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_MULT (unique, 0x10000f66, 8) , (const, 0x2, 8), (unique, 0x10000f66, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ed539, 1)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (unique, 0x10000f7a, 4) , (const, 0x18, 4), (unique, 0x10000f7a, 4) CAST (register, 0x28, 4), (register, 0x10, 4) INT_SRIGHT (unique, 0x10000f76, 4) , (const, 0x18, 4), (unique, 0x10000f76, 4) CAST (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000f96, 8), (unique, 0x10000f96, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000f92, 4), (unique, 0x10000f92, 4) CAST (register, 0x28, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000f8a, 8), (unique, 0x10000f8a, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000f86, 4), (unique, 0x10000f86, 4) CAST (register, 0x18, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0xffffff, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xffffff, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000f7e, 8), (unique, 0x10000f7e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8)]
[ ---  CBRANCH (ram, 0x1ed020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000fae, 8), (unique, 0x10000fae, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x10000fa6, 8), (unique, 0x10000fa6, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000fa2, 4), (unique, 0x10000fa2, 4) CAST (unique, 0x3100, 4), (register, 0x30, 8) INT_SEXT (unique, 0x10000f9e, 4), (unique, 0x10000f9e, 4) CAST (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4), (unique, 0x3100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0x100003a8, 4) , (const, 0x1, 4), (unique, 0x100003a8, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0x10000b6a, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ed013, 1)]
[ ---  CBRANCH (ram, 0x1ed000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000b6a, 8) , (unique, 0x10000b72, 8)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(unique, 0x10000b72, 8) COPY (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec9e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec259, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000b2a, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ec840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(register, 0xb8, 8) PTRADD (register, 0x28, 8) , (unique, 0x100001ff, 8) , (const, 0x1, 8), (unique, 0x100001ff, 8) INT_2COMP (unique, 0x10000fb6, 8), (unique, 0x10000fb6, 8) CAST (register, 0x80, 8), (register, 0x28, 8) COPY (unique, 0x10000b42, 8), (unique, 0x10000b42, 8) MULTIEQUAL (unique, 0x10000b2a, 8) , (unique, 0x10000d21, 8) , (unique, 0x10000d21, 8)]
[(unique, 0x10000d21, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) COPY (unique, 0x10000b42, 8), (unique, 0x10000b42, 8) MULTIEQUAL (unique, 0x10000b2a, 8) , (unique, 0x10000d21, 8) , (unique, 0x10000d21, 8)]
[ ---  CBRANCH (ram, 0x1ec848, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) COPY (unique, 0x10000b42, 8), (unique, 0x10000b42, 8) MULTIEQUAL (unique, 0x10000b2a, 8) , (unique, 0x10000d21, 8) , (unique, 0x10000d21, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1ec850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000fce, 8), (unique, 0x10000fce, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000fc6, 8), (unique, 0x10000fc6, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000fbe, 8), (unique, 0x10000fbe, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ecde0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec88e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ece06, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1eca40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100008a2, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1ed436, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec8ae, 1)]
[(unique, 0x100008a1, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x1ece0e, 1)]
[(unique, 0x100008a0, 1) MULTIEQUAL (unique, 0x100008a2, 1) , (unique, 0x100008a1, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000fd6, 8), (unique, 0x10000fd6, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa8, 8)]
[(register, 0x10, 8) INT_AND (unique, 0x10000fde, 8) , (const, 0xffffffff, 8), (unique, 0x10000fde, 8) CAST (register, 0xb8, 8)]
[(unique, 0x10000869, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000fe6, 8), (unique, 0x10000fe6, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1ece5c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000fee, 8), (unique, 0x10000fee, 8) CAST (register, 0xb8, 8)]
[(unique, 0x3a00, 8) PTRADD (unique, 0x3880, 8) , (unique, 0x10000ff6, 8) , (const, 0x1, 8), (unique, 0x10000ff6, 8) CAST (register, 0xb8, 8), (unique, 0x3880, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000a2a, 8) COPY (unique, 0x3100, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0xa8, 4) , (unique, 0x10000343, 4), (unique, 0x10000343, 4) INT_MULT (unique, 0x10000347, 4) , (const, 0x8, 4), (unique, 0x10000347, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0xa8, 4) INT_SEXT (unique, 0x10000ffe, 1), (unique, 0x10000ffe, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a2a, 8) , (unique, 0x10000a32, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000a32, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a2a, 8) , (unique, 0x10000a32, 8)]
[ ---  CBRANCH (ram, 0x1ece40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a2a, 8) , (unique, 0x10000a32, 8)]
[ ---  CBRANCH (ram, 0x1ed0c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001003, 8), (unique, 0x10001003, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x100007ed, 4), (unique, 0x100007ed, 4) INT_MULT (unique, 0x10000871, 4) , (const, 0x2, 4), (unique, 0x10000871, 4) INT_SREM (unique, 0x10000fff, 4) , (unique, 0xbc80, 4), (unique, 0x10000fff, 4) CAST (stack, 0xfffffffffffff730, 4), (stack, 0xfffffffffffff730, 4) MULTIEQUAL (unique, 0x10000869, 4) , (register, 0x10, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000100b, 8), (unique, 0x1000100b, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xb8, 8)]
[(register, 0x30, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100005d4, 4), (unique, 0x100005d4, 4) INT_MULT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x0, 8) INT_SEXT (unique, 0x100005cc, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (unique, 0x10000871, 4), (unique, 0x100005cc, 4) INT_MULT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_ADD (unique, 0x100005ab, 4) , (const, 0x1, 4), (unique, 0x100005ab, 4) INT_SREM (unique, 0x10001013, 4) , (register, 0x30, 4), (unique, 0x10001013, 4) CAST (stack, 0xfffffffffffff730, 4), (register, 0x30, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[ ---  BRANCH (ram, 0x1ed17f, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ed170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xfffffffffffff730, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1ed170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0xb8, 8), (register, 0x10, 8) CAST (unique, 0x10001023, 8), (unique, 0x10001023, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000101b, 8), (unique, 0x1000101b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10001017, 4), (unique, 0x10001017, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9ee, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x9ee, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x9ee, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x9ee, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x9ee, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x9ee, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x9ee, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9ee, 4)]
[ ---  CBRANCH (ram, 0x1ed170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121220, 8) , (unique, 0x3100, 8) , (unique, 0x3a00, 8) , (unique, 0x10001033, 8), (unique, 0x10001033, 8) CAST (register, 0xb8, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000102b, 8), (unique, 0x1000102b, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(register, 0x38, 4) INT_ADD (unique, 0x100003f9, 4) , (unique, 0x100003fd, 4), (unique, 0x100003fd, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x100003f9, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ece8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffff730, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000103b, 8), (unique, 0x1000103b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1eca1a, 1) , (unique, 0x100008a0, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1eca3b, 1)]
[ ---  CBRANCH (ram, 0x1eca25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x80, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ed245, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001044, 8), (unique, 0x10001044, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x8, 4) INT_SEXT (unique, 0x10001043, 1), (unique, 0x10001043, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x98, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001050, 8), (unique, 0x10001050, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000104c, 4), (unique, 0x1000104c, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffb, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000409, 4) , (register, 0x80, 4), (unique, 0x10000409, 4) INT_ADD (register, 0x38, 4) , (const, 0x4, 4)]
[(unique, 0x1000063b, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x1ec250, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ed269, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (register, 0x30, 8) , (const, 0x4, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec8ae, 1) , (unique, 0x100008a0, 1)]
[ ---  CBRANCH (ram, 0x1ec8ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(unique, 0x1000063c, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x1ec250, 1)]
[ ---  CBRANCH (ram, 0x1ecc10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x10, 8) COPY (unique, 0x10000b02, 8), (unique, 0x10000b02, 8) MULTIEQUAL (unique, 0x10000d19, 8) , (unique, 0x10000d19, 8) , (unique, 0x10000afa, 8)]
[(unique, 0x10000bea, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ec2a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001060, 8), (unique, 0x10001060, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001058, 8), (unique, 0x10001058, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000c02, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000bea, 8) , (unique, 0x10000bea, 8) , (unique, 0x10000d31, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ec240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 1) , (const, 0x2d, 1), (register, 0x18, 1) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000c0a, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ec240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000b22, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000ba2, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000c12, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ec240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000c02, 8) , (unique, 0x10000c0a, 8) , (unique, 0x10000c12, 8) , (unique, 0x10000d31, 8)]
[(unique, 0x10000b1a, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000b9a, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1eca40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000b9a, 8) , (unique, 0x10000ba2, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000063d, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 1) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000b1a, 8) , (unique, 0x10000b22, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(unique, 0x1000063a, 1) MULTIEQUAL (unique, 0x1000063d, 1) , (unique, 0x1000063c, 1) , (unique, 0x1000063b, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ec620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 1) , (const, 0x2d, 1), (register, 0x18, 1) MULTIEQUAL (register, 0x18, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000afa, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ec728, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0x28, 4) INT_SEXT (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001068, 8), (unique, 0x10001068, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0xb0, 1)]
[ ---  CBRANCH (ram, 0x1ec655, 1) , (unique, 0x1000063e, 1), (unique, 0x1000063e, 1) BOOL_NEGATE (unique, 0x1000063a, 1)]
[(register, 0x28, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001070, 8), (unique, 0x10001070, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0xb8, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ec770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5b, 1)]
[(register, 0x8, 8) INT_NEGATE (unique, 0x10001078, 8), (unique, 0x10001078, 8) CAST (register, 0x80, 8)]
[(unique, 0x10000baa, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000bd2, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ec679, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (register, 0x8, 8) , (const, 0x1, 8), (register, 0x88, 8) COPY (unique, 0x10000bc2, 8), (unique, 0x10000bc2, 8) MULTIEQUAL (unique, 0x10000baa, 8) , (unique, 0x10000d29, 8) , (unique, 0x10000d29, 8)]
[(unique, 0x10000d29, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x88, 8) COPY (unique, 0x10000bc2, 8), (unique, 0x10000bc2, 8) MULTIEQUAL (unique, 0x10000baa, 8) , (unique, 0x10000d29, 8) , (unique, 0x10000d29, 8)]
[ ---  CBRANCH (ram, 0x1ec788, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x88, 8) COPY (unique, 0x10000bc2, 8), (unique, 0x10000bc2, 8) MULTIEQUAL (unique, 0x10000baa, 8) , (unique, 0x10000d29, 8) , (unique, 0x10000d29, 8)]
[ ---  CBRANCH (ram, 0x1ec790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed2ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001090, 8), (unique, 0x10001090, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001088, 8), (unique, 0x10001088, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001080, 8), (unique, 0x10001080, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10001098, 8), (unique, 0x10001098, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa8, 8)]
[(register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_AND (unique, 0x100010a0, 8) , (const, 0xffffffff, 8), (unique, 0x100010a0, 8) CAST (unique, 0x3400, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100010a8, 8), (unique, 0x100010a8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xb0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed2e6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100010b0, 8), (unique, 0x100010b0, 8) CAST (unique, 0x3400, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100010b8, 8) , (const, 0x1, 8), (unique, 0x100010b8, 8) CAST (unique, 0x3400, 8)]
[(unique, 0x10000a1a, 8) COPY (unique, 0x3100, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x10, 4) , (unique, 0x10000425, 4), (unique, 0x10000425, 4) INT_MULT (unique, 0x10000429, 4) , (const, 0x8, 4), (unique, 0x10000429, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x10, 4) INT_SEXT (unique, 0x100010c0, 1), (unique, 0x100010c0, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a1a, 8) , (unique, 0x10000a22, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000a22, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a1a, 8) , (unique, 0x10000a22, 8)]
[ ---  CBRANCH (ram, 0x1ed2d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a1a, 8) , (unique, 0x10000a22, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100010c5, 8), (unique, 0x100010c5, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x100007f1, 4), (unique, 0x100007f1, 4) INT_MULT (unique, 0x10000881, 4) , (const, 0x2, 4), (unique, 0x10000881, 4) INT_SREM (unique, 0x100010c1, 4) , (unique, 0xbc80, 4), (unique, 0x100010c1, 4) CAST (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100010cd, 8), (unique, 0x100010cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xb8, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100005d8, 4), (unique, 0x100005d8, 4) INT_MULT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x0, 8) INT_SEXT (unique, 0x100005d0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (unique, 0x10000881, 4), (unique, 0x100005d0, 4) INT_MULT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_ADD (unique, 0x100005bb, 4) , (const, 0x1, 4), (unique, 0x100005bb, 4) INT_SREM (unique, 0x100010d5, 4) , (register, 0x30, 4), (unique, 0x100010d5, 4) CAST (register, 0x8, 4), (register, 0x30, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[ ---  BRANCH (ram, 0x1ed366, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ed350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ed350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3400, 8), (register, 0x10, 8) CAST (unique, 0x100010e5, 8), (unique, 0x100010e5, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100010dd, 8), (unique, 0x100010dd, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100010d9, 4), (unique, 0x100010d9, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x735, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x735, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x735, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x735, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x735, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x735, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x735, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x735, 4)]
[ ---  CBRANCH (ram, 0x1ed350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121220, 8) , (unique, 0x3100, 8) , (unique, 0x3a00, 8) , (unique, 0x100010f5, 8), (unique, 0x100010f5, 8) CAST (unique, 0x3400, 8), (unique, 0x3a00, 8) CAST (unique, 0x100010ed, 8), (unique, 0x100010ed, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(unique, 0x3a00, 4) INT_ADD (unique, 0x3880, 4) , (register, 0x0, 4), (unique, 0x3880, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001109, 8), (unique, 0x10001109, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10001105, 4), (unique, 0x10001105, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffb, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000461, 4) , (unique, 0x10000465, 4), (unique, 0x10000465, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x10000461, 4) INT_ADD (unique, 0x3a00, 4) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100010fd, 8), (unique, 0x100010fd, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3a00, 4)]
[ ---  CBRANCH (ram, 0x1ec6b0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0xb8, 4)]
[(register, 0x0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1ec6a1, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1ec671, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[ ---  CBRANCH (ram, 0x1ec671, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000bca, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000bca, 8) , (unique, 0x10000bd2, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ec740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001119, 8), (unique, 0x10001119, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001111, 8), (unique, 0x10001111, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100009e8, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x100009f1, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ec695, 1) , (unique, 0x100009f0, 1), (unique, 0x100009f0, 1) INT_LESS (register, 0xb8, 4) , (register, 0x28, 4), (register, 0xb8, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ec695, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0xb8, 4)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100009e8, 8) , (register, 0x88, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001121, 8), (unique, 0x10001121, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009f1, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(unique, 0x100005cb, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x0, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1ec6a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x28, 4) , (register, 0xb8, 4)]
[(register, 0x28, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ed06b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x28, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x100005cb, 1), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000bda, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3100, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000c92, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3100, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1eca7c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 1) , (const, 0x5d, 1), (register, 0x18, 1) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000c92, 8) , (unique, 0x10000c9a, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000bda, 8) , (unique, 0x10000be2, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 1) , (const, 0x0, 1), (register, 0x18, 1) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1eca66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 1) , (const, 0x5c, 1)]
[ ---  CBRANCH (ram, 0x1ecad8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1eca90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 1) , (const, 0x5b, 1)]
[ ---  CBRANCH (ram, 0x1ecc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x88, 8) , (const, 0x801, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eccb0, 1)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ecc98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1ecf44, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eccc3, 1)]
[ ---  CBRANCH (ram, 0x1eccbf, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x18, 1) , (unique, 0x10001129, 1), (unique, 0x10001129, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x9f, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x3200, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ecaf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[(unique, 0x10000c72, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1eca70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xb8, 8) COPY (unique, 0x10000c8a, 8), (unique, 0x10000c8a, 8) MULTIEQUAL (unique, 0x10000c72, 8) , (unique, 0x10000c7a, 8) , (unique, 0x10000c7a, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xb8, 8) COPY (unique, 0x10000c8a, 8), (unique, 0x10000c8a, 8) MULTIEQUAL (unique, 0x10000c72, 8) , (unique, 0x10000c7a, 8) , (unique, 0x10000c7a, 8)]
[(unique, 0x10000c7a, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ecaa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[ ---  CBRANCH (ram, 0x1ecaa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1eca48, 1)]
[(unique, 0x10000be2, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10000c9a, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1eca51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ec387, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100009e8, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100009e8, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x1ec259, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3100, 8) , (register, 0x80, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000ae2, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ecb30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x5d, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000caa, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1ec387, 1)]
[(register, 0x18, 4) COPY (const, 0x5b, 4)]
[ ---  BRANCH (ram, 0x1ec362, 1)]
[ ---  CBRANCH (ram, 0x1ecd30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x28, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x128c, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x128c, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x128c, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x128c, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x128c, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x128c, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x128c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x128c, 4)]
[ ---  CBRANCH (ram, 0x1ec2c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1eb900, 8) , (const, 0x3f, 8) , (unique, 0x3800, 8) , (register, 0x98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec8c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec384, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec384, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec384, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(register, 0x18, 4) COPY (const, 0x2f, 4)]
[ ---  CBRANCH (ram, 0x1ec35c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(register, 0x90, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1ec387, 1)]
[ ---  CBRANCH (ram, 0x1ecccc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec3a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x28, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ed038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(stack, 0xfffffffffffff6e0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005dc, 8) , (register, 0x98, 8), (unique, 0x100005dc, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1766, 4), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x368d, 4), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x368c, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x1766, 4), (ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x368d, 4), (ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x368c, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x1766, 4), (ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x368d, 4), (ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x368c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000112a, 8) , (register, 0x90, 4), (unique, 0x1000112a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1ec2f8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1799, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1799, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x1799, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x1799, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x1799, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x1799, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x1799, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1799, 4)]
[ ---  CBRANCH (ram, 0x1ec3b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1eb900, 8) , (const, 0x2a, 8) , (unique, 0x3800, 8) , (register, 0x98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ec3c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec3c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0xb0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec3dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec435, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3f, 1)]
[(register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec589, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ec548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x28, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1ec990, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1742, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1742, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x1742, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x1742, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x1742, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x1742, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x1742, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1742, 4)]
[(unique, 0x10000a5a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10001132, 8), (unique, 0x10001132, 8) CALL (ram, 0x1e9850, 8)]
[ ---  CBRANCH (ram, 0x1ec571, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0xb8, 8), (register, 0x0, 8) CAST (unique, 0x10001132, 8), (unique, 0x10001132, 8) CALL (ram, 0x1e9850, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000a62, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1ec56e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x3f, 1), (register, 0xb0, 1) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0xb0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a5a, 8) , (unique, 0x10000a62, 8) , (unique, 0x10000a62, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a5a, 8) , (unique, 0x10000a62, 8) , (unique, 0x10000a62, 8)]
[ ---  CBRANCH (ram, 0x1ec589, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a5a, 8) , (unique, 0x10000a62, 8) , (unique, 0x10000a62, 8)]
[ ---  CBRANCH (ram, 0x1ec42f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec40e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x28, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x1ec5b0, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x16d0, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x16d0, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x16d0, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x16d0, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x16d0, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x16d0, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x16d0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16d0, 4)]
[ ---  CBRANCH (ram, 0x1ec41b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0xb8, 8), (register, 0x0, 8) CAST (unique, 0x1000113a, 8), (unique, 0x1000113a, 8) CALL (ram, 0x1e9850, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000a4a, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1ec598, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x3f, 1), (register, 0xb0, 1) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x28, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1ec41b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0xb0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a4a, 8) , (unique, 0x10000a4a, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a4a, 8) , (unique, 0x10000a4a, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ec400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a4a, 8) , (unique, 0x10000a4a, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ec400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3f, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ed07c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x0, 1), (register, 0xb0, 1) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000cd2, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(stack, 0xfffffffffffff6e0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000071e, 4) , (const, 0x0, 4), (unique, 0x1000071e, 4) INT_AND (register, 0x80, 4) , (const, 0x8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x16a4, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x16a4, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x16a4, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x16a4, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x16a4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16a4, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (register, 0x98, 8) , (const, 0x2f, 4) , (unique, 0x1000114a, 8), (unique, 0x1000114a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (unique, 0x100003bd, 8) , (const, 0x1, 8), (unique, 0x100003bd, 8) INT_2COMP (unique, 0x10001142, 8), (unique, 0x10001142, 8) CAST (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x1ec2f8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13b8, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x13b8, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x13b8, 4)]
[(stack, 0xfffffffffffff6d0, 8) INDIRECT (stack, 0xfffffffffffff6d0, 8) , (const, 0x13b8, 4), (stack, 0xfffffffffffff6d0, 8) COPY (const, 0x1ec46a, 8)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x13b8, 4), (stack, 0xfffffffffffff798, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x13b8, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x13b8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13b8, 4)]
[(unique, 0x10000a12, 8) COPY (ram, 0x4eaf20, 8), (ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x13b8, 4)]
[(unique, 0x10000b4a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10001162, 8), (unique, 0x10001162, 8) CALL (ram, 0x1210c0, 8) , (register, 0x98, 8) , (register, 0x30, 4) , (unique, 0x1000115a, 8), (unique, 0x1000115a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000015a, 8) , (const, 0x1, 8), (unique, 0x1000015a, 8) INT_2COMP (unique, 0x10001152, 8), (unique, 0x10001152, 8) CAST (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec479, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10001162, 8), (unique, 0x10001162, 8) CALL (ram, 0x1210c0, 8) , (register, 0x98, 8) , (register, 0x30, 4) , (unique, 0x1000115a, 8), (unique, 0x1000115a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000015a, 8) , (const, 0x1, 8), (unique, 0x1000015a, 8) INT_2COMP (unique, 0x10001152, 8), (unique, 0x10001152, 8) CAST (register, 0x98, 8)]
[(unique, 0x10000b52, 8) COPY (register, 0x10, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000b4a, 8) , (unique, 0x10000b52, 8)]
[ ---  CBRANCH (ram, 0x1ecedd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x5b, 1)]
[ ---  CBRANCH (ram, 0x1eceb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x10000360, 4) , (const, 0x21, 4), (unique, 0x10000360, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec494, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 1) , (const, 0x20, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x10000360, 4) , (const, 0x21, 4), (unique, 0x10000360, 4) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec494, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0x80000401, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8)]
[ ---  CBRANCH (ram, 0x1ec494, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x28, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x98, 8) , (register, 0x28, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff798, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1644, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1644, 4), (ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x1644, 4), (ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x1644, 4), (ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(stack, 0xfffffffffffff6d0, 8) INDIRECT (stack, 0xfffffffffffff6d0, 8) , (const, 0x1644, 4), (stack, 0xfffffffffffff6d0, 8) MULTIEQUAL (stack, 0xfffffffffffff6d0, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x1644, 4), (stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x1644, 4), (stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x1644, 4), (stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1644, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1ecf3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ec050, 8) , (register, 0xb8, 8) , (register, 0xa8, 8) , (register, 0x10, 8) , (register, 0x8, 4) , (register, 0x0, 4) , (unique, 0x3c80, 8) , (stack, 0x8, 8) , (stack, 0xfffffffffffff6d0, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x8, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0xa8, 8), (stack, 0xfffffffffffff6d0, 8) MULTIEQUAL (stack, 0xfffffffffffff6d0, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ecf05, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000d39, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1ec9f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x1ec4af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x10000cb6, 4) COPY (register, 0x80, 4)]
[(unique, 0x1000016d, 4) MULTIEQUAL (unique, 0x10000d39, 4) , (unique, 0x10000cb6, 4)]
[ ---  CBRANCH (ram, 0x1ec4c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x5c, 1)]
[ ---  CBRANCH (ram, 0x1ec4c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0xb0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000cea, 4) COPY (unique, 0x1000016d, 4)]
[(unique, 0x10000cf2, 4) COPY (unique, 0x1000016d, 4)]
[ ---  CBRANCH (ram, 0x1ec928, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ed4a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ed4ce, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ed4c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x90, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15c2, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x15c2, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x15c2, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x15c2, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x15c2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15c2, 4)]
[ ---  CBRANCH (ram, 0x1ecbc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ec050, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (register, 0x10, 8) , (register, 0x8, 4) , (register, 0x80, 4) , (const, 0x0, 8) , (stack, 0x8, 8) , (stack, 0xfffffffffffff6d0, 8), (register, 0x8, 4) INT_AND (register, 0x80, 4) , (const, 0x4, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x90, 8), (register, 0x90, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec928, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(unique, 0x10000836, 4) MULTIEQUAL (unique, 0x10000cea, 4) , (unique, 0x10000d39, 4)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x28, 8) , (register, 0x98, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff798, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(stack, 0xfffffffffffff6d0, 8) MULTIEQUAL (stack, 0xfffffffffffff6d0, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1ecb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (unique, 0xba80, 1), (register, 0xb0, 1) SUBPIECE (register, 0xb0, 8) , (const, 0x0, 4), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1541, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1541, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x1541, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x1541, 4)]
[(stack, 0xfffffffffffff6d0, 8) INDIRECT (stack, 0xfffffffffffff6d0, 8) , (const, 0x1541, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x1541, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x1541, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x1541, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1541, 4)]
[ ---  CBRANCH (ram, 0x1ec952, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ec050, 8) , (register, 0xb8, 8) , (register, 0xa0, 8) , (register, 0x10, 8) , (register, 0x8, 4) , (unique, 0x10000836, 4) , (unique, 0x3c80, 8) , (stack, 0x8, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(stack, 0xfffffffffffff6d0, 8) MULTIEQUAL (stack, 0xfffffffffffff6d0, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec948, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000083a, 4) MULTIEQUAL (unique, 0x10000cf2, 4) , (unique, 0x10000d39, 4)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001172, 8), (unique, 0x10001172, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000116a, 8), (unique, 0x1000116a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x28, 8) , (register, 0x98, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff798, 8)]
[(register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(stack, 0xfffffffffffff6d0, 8) MULTIEQUAL (stack, 0xfffffffffffff6d0, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1ecbd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001182, 8), (unique, 0x10001182, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000117a, 8), (unique, 0x1000117a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000a12, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14ba, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x14ba, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x14ba, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x14ba, 4)]
[(stack, 0xfffffffffffff6d0, 8) INDIRECT (stack, 0xfffffffffffff6d0, 8) , (const, 0x14ba, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x14ba, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x14ba, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x14ba, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14ba, 4)]
[ ---  CBRANCH (ram, 0x1ec512, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ec050, 8) , (register, 0xb8, 8) , (register, 0x98, 8) , (register, 0x10, 8) , (register, 0x8, 4) , (unique, 0x1000083a, 4) , (unique, 0x3c80, 8) , (stack, 0x8, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000c42, 8) COPY (stack, 0xfffffffffffff7a0, 8), (stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(unique, 0x10000c6a, 8) COPY (stack, 0xfffffffffffff798, 8), (stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(unique, 0x10000ce6, 4) COPY (stack, 0xfffffffffffff7a8, 4), (stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(unique, 0x10000d0d, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec52e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffff798, 8) , (const, 0x0, 8), (stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000cce, 4) COPY (stack, 0xfffffffffffff6e0, 4), (stack, 0xfffffffffffff6e0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1ec2f8, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(stack, 0xfffffffffffff6d0, 8) MULTIEQUAL (stack, 0xfffffffffffff6d0, 8) , (stack, 0xfffffffffffff6d0, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (register, 0x98, 8), (register, 0x98, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000c3a, 8) COPY (stack, 0xfffffffffffff7a0, 8), (stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(unique, 0x10000c62, 8) COPY (stack, 0xfffffffffffff798, 8), (stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(unique, 0x10000ce2, 4) COPY (stack, 0xfffffffffffff7a8, 4), (stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(unique, 0x10000d09, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffff798, 8) , (const, 0x0, 8), (stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[ ---  CBRANCH (ram, 0x1ecd90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ec35c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x28, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11f6, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x11f6, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x11f6, 4)]
[(ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x11f6, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x11f6, 4)]
[(stack, 0xfffffffffffff7a0, 8) INDIRECT (stack, 0xfffffffffffff7a0, 8) , (const, 0x11f6, 4)]
[(stack, 0xfffffffffffff7a8, 4) INDIRECT (stack, 0xfffffffffffff7a8, 4) , (const, 0x11f6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11f6, 4)]
[ ---  CBRANCH (ram, 0x1ec35c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1eb900, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x98, 8) , (register, 0x10, 8) , (register, 0x90, 4) , (register, 0x80, 4) , (stack, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1ec37c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10001192, 8), (unique, 0x10001192, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000118a, 8), (unique, 0x1000118a, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ec2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x18, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000cc6, 4) COPY (stack, 0xfffffffffffff6e0, 4), (stack, 0xfffffffffffff6e0, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000ca2, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0xb8, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff7a0, 8) MULTIEQUAL (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8) , (stack, 0xfffffffffffff7a0, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000c32, 8) COPY (register, 0x98, 8), (register, 0x98, 8) PTRADD (register, 0x98, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000c5a, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000ca2, 8) , (unique, 0x10000caa, 8) , (register, 0xb8, 8) , (unique, 0x3800, 8)]
[(unique, 0x10000cde, 4) COPY (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(unique, 0x10000d05, 4) COPY (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x1ec106, 1)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8) , (stack, 0xfffffffffffff798, 8)]
[(ram, 0x4edfac, 4) MULTIEQUAL (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4) , (ram, 0x4edfac, 4)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x0, 4) COPY (stack, 0xfffffffffffff6e0, 4), (stack, 0xfffffffffffff6e0, 4) MULTIEQUAL (unique, 0x10000cc6, 4) , (unique, 0x10000cca, 4) , (unique, 0x10000cce, 4) , (unique, 0x10000cd2, 4) , (stack, 0xfffffffffffff6e0, 4) , (register, 0x0, 4) , (stack, 0xfffffffffffff6e0, 4) , (stack, 0xfffffffffffff6e0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ed763, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000119a, 8), (unique, 0x1000119a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[(ram, 0x4edfac, 4) COPY (ram, 0x4edfac, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xfffffffffffff798, 8) INDIRECT (stack, 0xfffffffffffff798, 8) , (const, 0x18f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18f, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x18f, 4)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8), (ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x18f, 4)]
[(ram, 0x4edfac, 4) COPY (ram, 0x4edfac, 4), (ram, 0x4edfac, 4) INDIRECT (ram, 0x4edfac, 4) , (const, 0x18f, 4)]
[ ---  RETURN (const, 0x1, 4)]
