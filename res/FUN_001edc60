[ ---  CBRANCH (ram, 0x1ede15, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8), (register, 0xb0, 8) INT_MULT (register, 0xb0, 8) , (const, 0x10, 8), (register, 0xb0, 8) INT_SEXT (register, 0x8, 4)]
[(register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0x2, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (register, 0x0, 8) INT_SEXT (register, 0x80, 4)]
[(register, 0x0, 2) INT_NEGATE (unique, 0x1000010d, 2), (unique, 0x1000010d, 2) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (unique, 0x1000010b, 1) , (const, 0x3f, 1), (unique, 0x1000010b, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1edcfb, 1)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x30, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000008e, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1edce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001e8, 8), (unique, 0x100001e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) CAST (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_MULT (register, 0x18, 8) , (const, 0x10, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d0, 8), (unique, 0x100001d0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1ede30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  CBRANCH (ram, 0x1edcec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1edcec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1edd40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x4, 1)]
[ ---  CBRANCH (ram, 0x1edcec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0xffffffff, 4)]
[(register, 0xa8, 8) CAST (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1ede60, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x1edee5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1edef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001a8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1eded0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000200, 8), (unique, 0x10000200, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x18, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1edd25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edc60, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4) , (register, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1edef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001a8, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edfa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000208, 8), (unique, 0x10000208, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edebc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001b0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1eded0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000210, 8), (unique, 0x10000210, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x18, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1edd25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edc60, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4) , (register, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100001b0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ede88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000218, 8), (unique, 0x10000218, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edf3d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1eddde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001b8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1eddde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000228, 8), (unique, 0x10000228, 8) INT_ADD (unique, 0x10000220, 8) , (const, 0x12, 8), (unique, 0x10000220, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1eded0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000230, 8), (unique, 0x10000230, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x18, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1edd25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edc60, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4) , (register, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb80, 2), (unique, 0xbb80, 2) INT_AND (unique, 0xbb80, 2) , (register, 0x0, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000240, 8) INT_ADD (unique, 0x10000238, 8) , (const, 0x12, 8), (unique, 0x10000238, 8) CAST (register, 0xb8, 8)]
[(unique, 0x100001b8, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edd90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000248, 8), (unique, 0x10000248, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edf4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1edf4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000258, 8), (unique, 0x10000258, 8) INT_ADD (unique, 0x10000250, 8) , (const, 0x12, 8), (unique, 0x10000250, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1eded0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x18, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1edd25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edc60, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4) , (register, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1edf45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb80, 2), (unique, 0xbb80, 2) INT_AND (unique, 0xbb80, 2) , (register, 0x0, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000270, 8), (unique, 0x10000270, 8) INT_ADD (unique, 0x10000268, 8) , (const, 0x12, 8), (unique, 0x10000268, 8) CAST (register, 0xb8, 8)]
[(unique, 0x100001a0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edfa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000278, 8), (unique, 0x10000278, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1edcfb, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000008e, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000280, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1edcec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1edcec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1ede10, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000008e, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (unique, 0x10000288, 4) , (const, 0x1, 4), (unique, 0x10000288, 4) CAST (register, 0x30, 4)]
