[(unique, 0x100002d1, 8) COPY (ram, 0x4f0900, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[ ---  CBRANCH (ram, 0x1e4d88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0900, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e4af3, 1)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(stack, 0xffffffffffffffa8, 4) COPY (stack, 0xffffffffffffffa8, 4)]
[ ---  CBRANCH (ram, 0x1e4a79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000309, 8), (unique, 0x10000309, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (ram, 0x4f0900, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000311, 8), (unique, 0x10000311, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4f0900, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x71, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x71, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x71, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x71, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x71, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x71, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000319, 8) , (unique, 0x3100, 4), (unique, 0x10000319, 8) CAST (unique, 0x3100, 8)]
[(unique, 0x100002d9, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002e9, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x1e4abe, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f0, 8) MULTIEQUAL (ram, 0x4f08f0, 8) , (ram, 0x4f08f0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08e0, 8) MULTIEQUAL (ram, 0x4f08e0, 8) , (ram, 0x4f08e0, 8)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100002e9, 8) , (unique, 0x100002f1, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100002d9, 8) , (unique, 0x100002e1, 8)]
[ ---  CBRANCH (ram, 0x1e4aca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000321, 8), (unique, 0x10000321, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100002d1, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e4aca, 8), (register, 0x20, 8) CAST (unique, 0x10000331, 8), (unique, 0x10000331, 8) INT_ADD (unique, 0x10000329, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000329, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8f, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x8f, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x8f, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x8f, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x8f, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x8f, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x8f, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x8f, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8f, 4)]
[ ---  CALLIND (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000341, 8), (unique, 0x10000341, 8) INT_ADD (unique, 0x10000339, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000339, 8) CAST (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000351, 8), (unique, 0x10000351, 8) INT_ADD (unique, 0x10000349, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000349, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) CAST (unique, 0x10000369, 8), (unique, 0x10000369, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000361, 8), (unique, 0x10000361, 8) INT_ADD (unique, 0x10000359, 8) , (const, 0xffffffffffffffef, 8), (unique, 0x10000359, 8) CAST (register, 0x20, 8)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x780, 4), (ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x77f, 4), (ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x780, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x77f, 4), (ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x780, 4), (ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x77f, 4), (ram, 0x4f08e0, 8) MULTIEQUAL (ram, 0x4f08e0, 8) , (ram, 0x4f08e0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x780, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x77f, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x780, 4), (ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x77f, 4), (ram, 0x4f08f0, 8) MULTIEQUAL (ram, 0x4f08f0, 8) , (ram, 0x4f08f0, 8)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x780, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x77f, 4), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c6, 8) , (unique, 0x10000371, 8), (unique, 0x10000371, 8) CAST (register, 0x18, 8), (unique, 0x100001c6, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) CAST (unique, 0x10000369, 8), (unique, 0x10000369, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000361, 8), (unique, 0x10000361, 8) INT_ADD (unique, 0x10000359, 8) , (const, 0xffffffffffffffef, 8), (unique, 0x10000359, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1e4ab8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000379, 8), (unique, 0x10000379, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f0, 8) MULTIEQUAL (ram, 0x4f08f0, 8) , (ram, 0x4f08f0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08e0, 8) MULTIEQUAL (ram, 0x4f08e0, 8) , (ram, 0x4f08e0, 8)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e4cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e4cb5, 8), (register, 0x20, 8) CAST (unique, 0x10000389, 8), (unique, 0x10000389, 8) INT_ADD (unique, 0x10000381, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000381, 8) CAST (register, 0x20, 8)]
[ ---  CALL (ram, 0x18fe30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e4cba, 8), (register, 0x20, 8) CAST (unique, 0x10000399, 8), (unique, 0x10000399, 8) INT_ADD (unique, 0x10000391, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000391, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x313, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x310, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x313, 4), (ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x310, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x313, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x310, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x313, 4), (ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x310, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x313, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x310, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x313, 4), (ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x310, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x313, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x313, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x312, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x310, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x313, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x312, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x310, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x313, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x312, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x310, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30f, 4)]
[ ---  CALL (ram, 0x196e20, 8)]
[ ---  BRANCH (ram, 0x1e4afc, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f0, 8) MULTIEQUAL (ram, 0x4f08f0, 8) , (ram, 0x4f08f0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08e0, 8) MULTIEQUAL (ram, 0x4f08e0, 8) , (ram, 0x4f08e0, 8)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x1e4cc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e4cc5, 8), (register, 0x20, 8) CAST (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) INT_ADD (unique, 0x100003a1, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100003a1, 8) CAST (register, 0x20, 8)]
[ ---  CALL (ram, 0x196ec0, 8) , (const, 0x1200011, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e4cca, 8), (register, 0x20, 8) CAST (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) INT_ADD (unique, 0x100003b1, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100003b1, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f0, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ed, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x2f0, 4), (ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x2ed, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x2f0, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x2ed, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x2f0, 4), (ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x2ed, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2f0, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2ed, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x2f0, 4), (ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x2ed, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x2f0, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x2ed, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x2f0, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x2ef, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x2ed, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2f0, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ef, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ed, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ef, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ed, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ec, 4)]
[ ---  CALL (ram, 0x18fe90, 8)]
[(unique, 0x1000028b, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000293, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(unique, 0x1000029b, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(unique, 0x1000029f, 8) MULTIEQUAL (ram, 0x4f08e0, 8) , (ram, 0x4f08e0, 8) , (ram, 0x4f08e0, 8)]
[(unique, 0x100002a7, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x100002ab, 8) MULTIEQUAL (ram, 0x4f08f0, 8) , (ram, 0x4f08f0, 8) , (ram, 0x4f08f0, 8)]
[(unique, 0x100002b3, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(unique, 0x100002bb, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(unique, 0x100002bf, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100002c7, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1e4c3e, 1) , (unique, 0x1000028a, 1), (unique, 0x1000028a, 1) INT_NOTEQUAL (unique, 0x10000282, 8) , (const, 0x0, 8), (unique, 0x10000282, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e4c6a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003c1, 8), (unique, 0x100003c1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000282, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1e4c67, 8), (register, 0x20, 8) CAST (unique, 0x100003d1, 8), (unique, 0x100003d1, 8) INT_ADD (unique, 0x100003c9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100003c9, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000028b, 8) , (const, 0x275, 4)]
[(ram, 0x4eade8, 8) INDIRECT (unique, 0x10000293, 8) , (const, 0x275, 4)]
[(ram, 0x4ee940, 4) INDIRECT (unique, 0x1000029b, 4) , (const, 0x275, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (unique, 0x1000029f, 8) , (const, 0x275, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x100002a7, 4) , (const, 0x275, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (unique, 0x100002ab, 8) , (const, 0x275, 4)]
[(ram, 0x4f0900, 8) INDIRECT (unique, 0x100002b3, 8) , (const, 0x275, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x275, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (unique, 0x100002bb, 4) , (const, 0x274, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x275, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100002bf, 8) , (const, 0x274, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x275, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002c7, 8) , (const, 0x274, 4)]
[ ---  CALLIND (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000282, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100002c7, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100002bf, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (unique, 0x100002bb, 4) , (stack, 0xffffffffffffffa8, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000028b, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x27e, 4), (ram, 0x4eade8, 8) MULTIEQUAL (unique, 0x10000293, 8) , (ram, 0x4eade8, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x27e, 4), (ram, 0x4ee940, 4) MULTIEQUAL (unique, 0x1000029b, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x27e, 4), (ram, 0x4f08e0, 8) MULTIEQUAL (unique, 0x1000029f, 8) , (ram, 0x4f08e0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x27e, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (unique, 0x100002a7, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x27e, 4), (ram, 0x4f08f0, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (ram, 0x4f08f0, 8)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x27e, 4), (ram, 0x4f0900, 8) MULTIEQUAL (unique, 0x100002b3, 8) , (ram, 0x4f0900, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003e1, 8) , (unique, 0xbd00, 4), (unique, 0x100003e1, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003d9, 8), (unique, 0x100003d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1e4c50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1e4c50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x100003f1, 8) , (const, 0x2c, 8), (unique, 0x100003f1, 8) CAST (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000282, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e4d8f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002c7, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000409, 8), (unique, 0x10000409, 8) INT_ADD (unique, 0x1000028b, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x100001df, 8), (unique, 0x100001df, 8) PTRSUB (const, 0x0, 8) , (const, 0x1e4d94, 8), (register, 0x20, 8) CAST (unique, 0x10000419, 8), (unique, 0x10000419, 8) INT_ADD (unique, 0x10000411, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000411, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x1d6, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (unique, 0x100002bb, 4) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100002bf, 8) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002c7, 8) , (const, 0x1d5, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eade8, 8) COPY (ram, 0x4eade8, 8), (ram, 0x4eade8, 8) INDIRECT (unique, 0x10000293, 8) , (const, 0x1d6, 4)]
[(ram, 0x4ee940, 4) COPY (ram, 0x4ee940, 4), (ram, 0x4ee940, 4) INDIRECT (unique, 0x1000029b, 4) , (const, 0x1d6, 4)]
[(ram, 0x4f08e0, 8) COPY (ram, 0x4f08e0, 8), (ram, 0x4f08e0, 8) INDIRECT (unique, 0x1000029f, 8) , (const, 0x1d6, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (unique, 0x100002a7, 4) , (const, 0x1d6, 4)]
[(ram, 0x4f08f0, 8) COPY (ram, 0x4f08f0, 8), (ram, 0x4f08f0, 8) INDIRECT (unique, 0x100002ab, 8) , (const, 0x1d6, 4)]
[(ram, 0x4f0900, 8) COPY (ram, 0x4f0900, 8), (ram, 0x4f0900, 8) INDIRECT (unique, 0x100002b3, 8) , (const, 0x1d6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eade8, 8) COPY (unique, 0x10000293, 8)]
[(ram, 0x4ee940, 4) COPY (unique, 0x1000029b, 4)]
[(ram, 0x4f08e0, 8) COPY (unique, 0x1000029f, 8)]
[(ram, 0x4f08e8, 4) COPY (unique, 0x100002a7, 4)]
[(ram, 0x4f08f0, 8) COPY (unique, 0x100002ab, 8)]
[(ram, 0x4f0900, 8) COPY (unique, 0x100002b3, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x38, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x31b, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x31b, 4)]
[(ram, 0x4f08e0, 8) INDIRECT (ram, 0x4f08e0, 8) , (const, 0x31b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x31b, 4)]
[(ram, 0x4f08f0, 8) INDIRECT (ram, 0x4f08f0, 8) , (const, 0x31b, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x31b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000429, 8) , (unique, 0xbd00, 4), (unique, 0x10000429, 8) CAST (unique, 0x3800, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000421, 8), (unique, 0x10000421, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x100002e1, 8) COPY (register, 0x18, 8)]
[(unique, 0x100002f1, 8) COPY (register, 0x20, 8)]
