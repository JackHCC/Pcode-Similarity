[ ---  CBRANCH (ram, 0x195470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000157, 8) , (const, 0xc, 4), (unique, 0x10000157, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x217, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x217, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x217, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x217, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x217, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x217, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x217, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19530a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ebc40, 4) , (const, 0x0, 4)]
[(ram, 0x4ebc40, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ebc40, 4) , (const, 0x0, 4)]
[(ram, 0x4ebc40, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19532d, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f0, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1f0, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1f0, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1f0, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1f0, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1f0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1f0, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000010b, 8), (unique, 0x1000010b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x19538a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000015f, 8) , (unique, 0x10000123, 8), (unique, 0x1000015f, 8) CAST (ram, 0x4ebca0, 8), (unique, 0x10000123, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebca0, 8), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  CBRANCH (ram, 0x195484, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000060, 8) , (const, 0x0, 8), (unique, 0x10000060, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4ebca0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195484, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (const, 0x20, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x195484, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e9, 8) , (const, 0x0, 8), (unique, 0x100000e9, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19538a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4ebc44, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x195484, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000167, 8) , (register, 0x8, 8), (unique, 0x10000167, 8) CAST (ram, 0x4ebca0, 8), (register, 0x10, 8) INT_ADD (ram, 0x4ec4c8, 8) , (ram, 0x4eb2c8, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000103, 8), (unique, 0x10000103, 8) COPY (const, 0x2b4e81, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e1, 4)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1e1, 4)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1e1, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1e1, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1e1, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1e1, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9e, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x9e, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x9e, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x9e, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x9e, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x9e, 4)]
[(register, 0x0, 8) CALL (ram, 0x1942d0, 8) , (unique, 0x10000113, 8) , (unique, 0x3100, 8), (unique, 0x10000113, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1953b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9e, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000014f, 4) COPY (unique, 0x1000012b, 4), (unique, 0x1000012b, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1953d3, 1) , (unique, 0x1000012f, 1), (unique, 0x1000012f, 1) INT_NOTEQUAL (unique, 0x1000012b, 4) , (const, 0x0, 4), (unique, 0x1000012b, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x0, 8) , (const, 0x1cb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cb, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1cb, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1cb, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1cb, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1cb, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(unique, 0x1000014b, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1cb, 4), (ram, 0x4ebc40, 4) INT_ADD (ram, 0x4ebc40, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ebc40, 4) COPY (unique, 0x10000153, 4), (unique, 0x10000153, 4) MULTIEQUAL (unique, 0x1000014b, 4) , (unique, 0x1000014f, 4)]
[ ---  CBRANCH (ram, 0x19544c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x1953f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x1, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_XOR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4), (unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x10, 8)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x1000009d, 4), (unique, 0x1000009d, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000013b, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x19540e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f1, 8) , (const, 0x0, 8), (unique, 0x100000f1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(unique, 0x10000143, 8) COPY (unique, 0x3100, 8)]
[(register, 0x8, 1) SUBPIECE (unique, 0x1000009d, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x195449, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000013b, 8) , (unique, 0x10000143, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x195439, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0xff, 8)]
[ ---  CBRANCH (ram, 0x195458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1aa, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1aa, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1aa, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1aa, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1aa, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1aa, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1aa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x88, 1), (register, 0x88, 1) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000177, 8), (unique, 0x10000177, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x195428, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x189, 4)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x189, 4)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x189, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x189, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x189, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x189, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x189, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x1000017f, 8), (unique, 0x1000017f, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x195428, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb2c8, 8) INDIRECT (ram, 0x4eb2c8, 8) , (const, 0x1a0, 4), (ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4ebc40, 4) INDIRECT (ram, 0x4ebc40, 4) , (const, 0x1a0, 4), (ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4ebc44, 1) INDIRECT (ram, 0x4ebc44, 1) , (const, 0x1a0, 4), (ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1a0, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x1a0, 4), (ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x8, 1), (unique, 0x3400, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (register, 0x30, 8) , (register, 0x38, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb2c8, 8) COPY (ram, 0x4eb2c8, 8), (ram, 0x4eb2c8, 8) MULTIEQUAL (ram, 0x4eb2c8, 8) , (ram, 0x4eb2c8, 8)]
[(ram, 0x4ebc40, 4) COPY (ram, 0x4ebc40, 4), (ram, 0x4ebc40, 4) MULTIEQUAL (ram, 0x4ebc40, 4) , (ram, 0x4ebc40, 4)]
[(ram, 0x4ebc44, 1) COPY (ram, 0x4ebc44, 1), (ram, 0x4ebc44, 1) MULTIEQUAL (ram, 0x4ebc44, 1) , (ram, 0x4ebc44, 1)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8)]
