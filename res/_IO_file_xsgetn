[ ---  CBRANCH (ram, 0x41c6a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41c6bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000224, 8) , (unique, 0xbc80, 4), (unique, 0x10000224, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x41ee60, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x41c536, 1)]
[(unique, 0x1000024d, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41c604, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x41c6d0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xa0, 8) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000e0, 8) , (const, 0x1, 8), (unique, 0x100000e0, 8) INT_2COMP (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0xa0, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000285, 8) , (const, 0x1, 8), (unique, 0x10000285, 8) CAST (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41c550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41c642, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x100, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100000e8, 8) , (const, 0x1, 8), (unique, 0x100000e8, 8) INT_2COMP (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) CAST (register, 0x28, 8)]
[(register, 0x0, 8) CALL (ram, 0x401160, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000295, 8) , (const, 0x1, 8), (unique, 0x10000295, 8) CAST (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x41c55c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x100, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000275, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x41c650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x1000029d, 8), (unique, 0x1000029d, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x41c670, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0xa0, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000088, 8) , (const, 0x1, 8), (unique, 0x10000088, 8) INT_2COMP (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x41c5ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x41ea50, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000010c, 8) , (const, 0x1, 8), (unique, 0x1000010c, 8) INT_2COMP (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) CAST (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014c, 8) , (unique, 0xbd80, 8), (unique, 0x1000014c, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000154, 8) , (unique, 0xbd80, 8), (unique, 0x10000154, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015c, 8) , (unique, 0xbd80, 8), (unique, 0x1000015c, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x41c660, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x1000016c, 8) , (register, 0x8, 8), (unique, 0x1000016c, 8) PTRSUB (const, 0x0, 8) , (const, 0x80, 8)]
[(unique, 0x10000255, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100000a8, 8) , (const, 0x1, 8), (unique, 0x100000a8, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_REM (unique, 0x100002c5, 8) , (unique, 0x100002cd, 8), (unique, 0x100002cd, 8) CAST (register, 0x8, 8), (unique, 0x100002c5, 8) CAST (register, 0xa0, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000255, 8) , (unique, 0x10000275, 8) , (unique, 0x10000275, 8)]
[ ---  CBRANCH (ram, 0x41c698, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d5, 8), (unique, 0x100002d5, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41c5cd, 1)]
[ ---  CBRANCH (ram, 0x41c6e8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[(register, 0xa8, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000134, 8) , (const, 0x1, 8), (unique, 0x10000134, 8) INT_2COMP (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) CAST (register, 0xa0, 8)]
[(register, 0x8, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000026d, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41c6fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000271, 4) COPY (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023c, 8) , (register, 0x10, 4), (unique, 0x1000023c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000026d, 4) , (unique, 0x10000271, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa8, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100000d0, 8) , (const, 0x1, 8), (unique, 0x100000d0, 8) INT_2COMP (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41c5ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x90, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CALL (ram, 0x41e890, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x41c5ff, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x41c680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
