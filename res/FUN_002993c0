[(register, 0x90, 8) INT_AND (unique, 0x100000e5, 8) , (const, 0xffffffffffff, 8), (unique, 0x100000e5, 8) INT_ADD (unique, 0x100001cb, 8) , (register, 0x1208, 4), (unique, 0x100001cb, 8) INT_LEFT (unique, 0x100001c3, 8) , (const, 0x20, 8), (unique, 0x100001c3, 8) INT_SEXT (unique, 0x100001e3, 4), (unique, 0x100001e3, 4) CAST (register, 0x120c, 4)]
[(register, 0x10, 8) INT_AND (unique, 0x100000f5, 8) , (const, 0xffffffffffff, 8), (unique, 0x100000f5, 8) INT_ADD (unique, 0x100001db, 8) , (register, 0x1228, 4), (unique, 0x100001db, 8) INT_LEFT (unique, 0x100001d3, 8) , (const, 0x20, 8), (unique, 0x100001d3, 8) INT_SEXT (unique, 0x100001e7, 4), (unique, 0x100001e7, 4) CAST (register, 0x122c, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x299448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7fff, 4), (register, 0x8, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x2994b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x299468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x7fff, 4)]
[(unique, 0x100000b1, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x2994fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x7fff, 4)]
[(register, 0x38, 1) MULTIEQUAL (unique, 0x100000b1, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_OR (register, 0x1200, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x29949f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001b2, 4) , (const, 0x0, 4), (unique, 0x100001b2, 4) INT_AND (register, 0x120c, 4) , (const, 0x8000, 4)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2994fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x2994fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x2994fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (register, 0x1220, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2994fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x1220, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2994fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001aa, 4) , (const, 0x0, 4), (unique, 0x100001aa, 4) INT_AND (register, 0x122c, 4) , (const, 0x8000, 4)]
[ ---  CBRANCH (ram, 0x2994f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) INT_OR (register, 0x90, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x2994bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x29943d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29943d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x1220, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29957c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001ae, 4) , (const, 0x0, 4), (unique, 0x100001ae, 4) INT_AND (register, 0x122c, 4) , (const, 0x8000, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x29949f, 1)]
[ ---  CBRANCH (ram, 0x299570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_OR (register, 0x10, 8) , (register, 0x1220, 8)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (unique, 0x100000b1, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x299430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x0, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 1) COPY (const, 0x2, 1)]
[ ---  BRANCH (ram, 0x299430, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 1) COPY (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x299540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x299430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x1220, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29949f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001b6, 4) , (const, 0x0, 4), (unique, 0x100001b6, 4) INT_AND (register, 0x122c, 4) , (const, 0x8000, 4)]
[(register, 0x38, 1) INT_OR (register, 0x38, 1) , (const, 0x1, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x299430, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x299430, 1)]
[ ---  CALL (ram, 0x299bb0, 8) , (register, 0x38, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
