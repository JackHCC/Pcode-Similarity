[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000db, 8), (unique, 0x100000db, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100000d3, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1c7924, 1)]
[ ---  CBRANCH (ram, 0x1c7920, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x1a, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x41, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffdf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100000d3, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1c7920, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1c7920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x5f, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1c796a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x10, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc4, 4)]
[(ram, 0x2bcae0, 4) INDIRECT (ram, 0x2bcae0, 4) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffc8, 10) INDIRECT (stack, 0xffffffffffffffc8, 10) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xc4, 4)]
[(register, 0x0, 8) CALL (ram, 0x1befb0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x1000008a, 8), (unique, 0x1000008a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea960, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1c7944, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (register, 0x18, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffc8, 10) INT_ADD (unique, 0x100000c9, 10) , (stack, 0xffffffffffffffc8, 8), (unique, 0x100000c9, 10) INT_LEFT (unique, 0x100000bf, 10) , (const, 0x40, 10), (unique, 0x100000bf, 10) INT_SEXT (unique, 0x100000f7, 2), (unique, 0x100000f7, 2) CAST (stack, 0xffffffffffffffd0, 2), (stack, 0xffffffffffffffc8, 8) INT_OR (unique, 0x10000072, 8) , (unique, 0x10000082, 8), (unique, 0x10000082, 8) INT_LEFT (unique, 0x1000007a, 8) , (const, 0x20, 4), (unique, 0x1000007a, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000072, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8), (stack, 0xffffffffffffffd0, 2) SUBPIECE (unique, 0x100000b5, 10) , (const, 0x0, 4), (unique, 0x100000b5, 10) INT_RIGHT (unique, 0x100000ed, 10) , (const, 0x40, 4), (unique, 0x100000ed, 10) CAST (register, 0x1000, 10), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_AND (stack, 0xffffffffffffffcc, 4) , (const, 0xc0000000, 4), (stack, 0xffffffffffffffcc, 4) SUBPIECE (unique, 0x100000ab, 10) , (const, 0x0, 4), (unique, 0x100000ab, 10) INT_RIGHT (unique, 0x100000e3, 10) , (const, 0x20, 4), (unique, 0x100000e3, 10) CAST (register, 0x1000, 10), (register, 0x8, 4) INT_AND (unique, 0x1000005e, 4) , (const, 0x3fffffff, 4), (unique, 0x1000005e, 4) SUBPIECE (unique, 0x100000a3, 8) , (const, 0x0, 4), (unique, 0x100000a3, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x20, 4), (register, 0x1000, 10) FLOAT2FLOAT (ram, 0x2bcae0, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc8, 10) MULTIEQUAL (stack, 0xffffffffffffffc8, 10) , (stack, 0xffffffffffffffc8, 10) , (stack, 0xffffffffffffffc8, 10)]
[(ram, 0x2bcae0, 4) MULTIEQUAL (ram, 0x2bcae0, 4) , (ram, 0x2bcae0, 4) , (ram, 0x2bcae0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1c7953, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x2bcae0, 4) INDIRECT (ram, 0x2bcae0, 4) , (const, 0x7d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8)]
[(ram, 0x2bcae0, 4) MULTIEQUAL (ram, 0x2bcae0, 4) , (ram, 0x2bcae0, 4)]
[ ---  CBRANCH (ram, 0x1c79bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x2bcae0, 4) COPY (ram, 0x2bcae0, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffc8, 10) INDIRECT (stack, 0xffffffffffffffc8, 10) , (const, 0xa8, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa8, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2bcae0, 4) COPY (ram, 0x2bcae0, 4), (ram, 0x2bcae0, 4) INDIRECT (ram, 0x2bcae0, 4) , (const, 0xa8, 4)]
[ ---  RETURN (const, 0x1, 4)]
