[ ---  CBRANCH (ram, 0x1863e1, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c3144, 4) , (const, 0x0, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x3a9, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x3a9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3a9, 4)]
[ ---  CALL (ram, 0x1849e0, 8)]
[ ---  BRANCH (ram, 0x186191, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0x100002bf, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1861c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x3a5, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x3a5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3a5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x5d, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x5d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1861dd, 1)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x388, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x388, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x388, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000293, 8) COPY (unique, 0x10000283, 8), (unique, 0x10000283, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x388, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x186249, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100002c7, 8), (unique, 0x100002c7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002bf, 8) , (unique, 0x10000293, 8) , (unique, 0x100002bf, 8)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xfd, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xfd, 4)]
[ ---  CALL (ram, 0x17e460, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x186337, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x18, 8) , (const, 0x1, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xfd, 4)]
[ ---  CBRANCH (ram, 0x186352, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (const, 0x31, 8), (register, 0xa0, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x18637a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (const, 0x15, 8), (register, 0xa0, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x9, 4)]
[(unique, 0x100002b3, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000164, 4) , (const, 0x5b, 4), (unique, 0x10000164, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x186275, 1)]
[ ---  CBRANCH (ram, 0x1863c6, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (const, 0xb, 8), (register, 0xa0, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x1863eb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (const, 0x5, 8), (register, 0xa0, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0xf, 4)]
[(register, 0xa0, 4) INT_ADD (unique, 0x10000194, 4) , (const, 0x7c, 4), (unique, 0x10000194, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x12, 4)]
[(unique, 0x100002b7, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x7e, 4)]
[ ---  CBRANCH (ram, 0x186403, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x12, 4)]
[(unique, 0x100002bb, 4) COPY (register, 0xa0, 4)]
[(unique, 0x100002af, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000184, 4) , (const, 0x77, 4), (unique, 0x10000184, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x186275, 1)]
[(unique, 0x100002ab, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000015c, 4) , (const, 0x6e, 4), (unique, 0x1000015c, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x186275, 1)]
[(unique, 0x100002a7, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000144, 4) , (const, 0x30, 4), (unique, 0x10000144, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x186275, 1)]
[(unique, 0x100002a3, 4) COPY (unique, 0x100001ac, 4), (unique, 0x100001ac, 4) SUBPIECE (unique, 0x100000e0, 8) , (const, 0x0, 4), (unique, 0x100000e0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x4, 4), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (unique, 0x100002a3, 4) , (unique, 0x100002a7, 4) , (unique, 0x100002ab, 4) , (unique, 0x100002af, 4) , (unique, 0x100002b3, 4) , (unique, 0x100002b7, 4) , (unique, 0x100002bb, 4)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[(register, 0xb8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x2f, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (const, 0x16, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) INT_NEGATE (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1862ad, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb0, 8)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x186298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x1, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1862b2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (stack, 0xffffffffffffffb8, 4) , (register, 0x28, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(unique, 0x10000256, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0x1000025e, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(unique, 0x10000262, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x10000266, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1862c9, 1) , (unique, 0x10000255, 1), (unique, 0x10000255, 1) INT_NOTEQUAL (register, 0xb0, 8) , (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1862c0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xb8, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002df, 8), (unique, 0x100002df, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1863a7, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x38, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) INT_AND (unique, 0x3400, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100002e7, 8) , (register, 0xb8, 8), (unique, 0x100002e7, 8) CAST (unique, 0x1000024d, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x100001dd, 8) , (unique, 0x100001c5, 8) , (const, 0x11aa, 8) , (unique, 0x100001d5, 8), (unique, 0x100001dd, 8) COPY (const, 0x290e08, 8), (unique, 0x100001d5, 8) COPY (const, 0x28d6fe, 8), (unique, 0x100001c5, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (unique, 0x10000256, 8) , (const, 0x24a, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (unique, 0x1000025e, 4) , (const, 0x24a, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000262, 4) , (const, 0x24a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x186388, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100002ff, 8), (unique, 0x100002ff, 8) INT_ADD (unique, 0x100002f7, 8) , (register, 0x30, 8), (unique, 0x100002f7, 8) CAST (unique, 0x1000024d, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x100001e5, 8) , (unique, 0x100001bd, 8) , (const, 0x11ab, 8) , (unique, 0x100001cd, 8), (unique, 0x100001e5, 8) COPY (const, 0x290e40, 8), (unique, 0x100001cd, 8) COPY (const, 0x28d6fe, 8), (unique, 0x100001bd, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (unique, 0x10000256, 8) , (const, 0x241, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (unique, 0x1000025e, 4) , (const, 0x241, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000262, 4) , (const, 0x241, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1862c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) INT_SUB (unique, 0x10000307, 8) , (unique, 0x1000030f, 8), (unique, 0x1000030f, 8) CAST (unique, 0x1000024d, 8), (unique, 0x10000307, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (unique, 0x10000256, 8) , (const, 0x22b, 4)]
[(ram, 0x4c3144, 4) INDIRECT (unique, 0x1000025e, 4) , (const, 0x22b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000262, 4) , (const, 0x22b, 4)]
[ ---  CALL (ram, 0x200f40, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x4, 4), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (register, 0xa8, 8)]
[(register, 0x8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1862c0, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x10000262, 4) , (unique, 0x10000262, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (unique, 0x1000025e, 4) , (unique, 0x1000025e, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (unique, 0x10000256, 8) , (unique, 0x10000256, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000266, 4) , (unique, 0x10000266, 4) , (register, 0x8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000031f, 8), (unique, 0x1000031f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x10000262, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (unique, 0x1000025e, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (unique, 0x10000256, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000266, 4) , (register, 0x8, 4)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186319, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x80, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18640c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1be, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1be, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1be, 4)]
[(register, 0x0, 4) CALL (ram, 0x17d800, 8) , (register, 0x38, 8) , (unique, 0x100001fd, 8) , (unique, 0x10000205, 8), (unique, 0x10000205, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c43a0, 8), (unique, 0x100001fd, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b78, 8)]
[ ---  BRANCH (ram, 0x18632d, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x1861e6, 1)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0xbc80, 4) INT_OR (stack, 0xffffffffffffffbc, 4) , (register, 0x90, 4), (register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x186200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xed, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xed, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x98, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x98, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x98, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000026b, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0x10000273, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(unique, 0x10000277, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x18621a, 1) , (unique, 0x1000026a, 1), (unique, 0x1000026a, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (unique, 0x1000026b, 8) , (const, 0xdf, 4)]
[(ram, 0x4c3144, 4) INDIRECT (unique, 0x10000273, 4) , (const, 0xdf, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000277, 4) , (const, 0xdf, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000027b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0xdf, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000277, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (unique, 0x10000273, 4)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (unique, 0x1000026b, 8)]
[ ---  CBRANCH (ram, 0x1861a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000327, 8), (unique, 0x10000327, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x10, 8) , (const, 0x21a, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000027b, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4)]
