[ ---  CBRANCH (ram, 0x19a728, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb264, 4) , (const, 0x0, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x406, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x406, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x406, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x406, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x406, 4)]
[ ---  CALL (ram, 0x1913e0, 8)]
[ ---  BRANCH (ram, 0x19a490, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0x0, 4)]
[(register, 0xa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19a4bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x402, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x402, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x402, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x402, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x402, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x61, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x61, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x61, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x61, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x61, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19a4da, 1)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3e5, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3e5, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x3e5, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x3e5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3e5, 4)]
[ ---  CALL (ram, 0x230690, 8) , (register, 0xa8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x68, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x68, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x68, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x68, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x68, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x19a4e2, 8)]
[ ---  CALL (ram, 0x190910, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19a668, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x68, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[ ---  CBRANCH (ram, 0x19a680, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0x31, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x19a738, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (const, 0x15, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x9, 4)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x5b, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x19a500, 1)]
[ ---  CBRANCH (ram, 0x19a740, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0xb, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x19a755, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0x5, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0xf, 4)]
[ ---  CBRANCH (ram, 0x19a769, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x2, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x12, 4)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7c, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x19a500, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x77, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x19a500, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x6e, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x19a500, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x30, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x19a500, 1)]
[(unique, 0x100000c5, 4) SUBPIECE (unique, 0x100000c5, 8) , (const, 0x0, 4), (unique, 0x100000c5, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x4, 4), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x100000c5, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x2f, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb8, 8) INT_2COMP (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x19a598, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x19a598, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (register, 0x8, 4) , (register, 0x18, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(unique, 0x10000268, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x10000270, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x10000278, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(unique, 0x10000280, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(unique, 0x10000284, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x10000288, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000290, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x19a51f, 1) , (unique, 0x10000267, 1), (unique, 0x10000267, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0x1000025f, 8), (unique, 0x1000025f, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19a5e4, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c5, 8), (unique, 0x100002c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000025f, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x19a5f8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x38, 8) CAST (unique, 0x100002d5, 8), (unique, 0x100002d5, 8) INT_AND (unique, 0x3b80, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000025f, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x100002cd, 8) , (unique, 0x3100, 8), (unique, 0x100002cd, 8) CAST (unique, 0x1000025f, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x12b6, 8)]
[ ---  CBRANCH (ram, 0x19a624, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) CAST (unique, 0x10000270, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff98, 8) COPY (const, 0x2b8f58, 8)]
[ ---  CBRANCH (ram, 0x19a6b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3b80, 8) , (register, 0x38, 8), (unique, 0x3b80, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) INT_ADD (unique, 0x100002e5, 8) , (register, 0x30, 8), (unique, 0x100002e5, 8) CAST (unique, 0x1000025f, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x12b7, 8)]
[ ---  CBRANCH (ram, 0x19a6dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) CAST (unique, 0x10000270, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff98, 8) COPY (const, 0x2b8f90, 8)]
[ ---  BRANCH (ram, 0x19a632, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x1000020f, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x100001ff, 8) , (register, 0x88, 8) , (unique, 0x10000207, 8) , (unique, 0x100001f7, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x10000288, 8), (unique, 0x1000020f, 8) COPY (const, 0x2b8758, 8), (unique, 0x10000207, 8) COPY (const, 0x2b4fd8, 8), (unique, 0x100001ff, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x100001f7, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002fd, 8), (unique, 0x100002fd, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000268, 8) , (const, 0x267, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x279, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x276, 4), (ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000268, 8) , (const, 0x267, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x279, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x276, 4), (ram, 0x4eadf0, 8) INDIRECT (unique, 0x10000270, 8) , (const, 0x267, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x279, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x276, 4), (ram, 0x4eae58, 8) INDIRECT (unique, 0x10000278, 8) , (const, 0x267, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x279, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x276, 4), (ram, 0x4eb264, 4) INDIRECT (unique, 0x10000280, 4) , (const, 0x267, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x279, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x276, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000284, 4) , (const, 0x267, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x19a6f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000315, 8), (unique, 0x10000315, 8) INT_SUB (unique, 0x10000305, 8) , (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) CAST (unique, 0x1000025f, 8), (unique, 0x10000305, 8) CAST (register, 0x38, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000268, 8) , (const, 0x217, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x10000270, 8) , (const, 0x217, 4)]
[(ram, 0x4eae58, 8) INDIRECT (unique, 0x10000278, 8) , (const, 0x217, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000280, 4) , (const, 0x217, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000284, 4) , (const, 0x217, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x217, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x19a70b, 8)]
[ ---  CALL (ram, 0x21bbb0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x4, 4), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (register, 0xb8, 8)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19a5e4, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x10000288, 8) , (unique, 0x10000288, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (unique, 0x10000284, 4) , (unique, 0x10000284, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (unique, 0x10000280, 4) , (unique, 0x10000280, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (unique, 0x10000278, 8) , (unique, 0x10000278, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (unique, 0x10000270, 8) , (unique, 0x10000270, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (unique, 0x10000268, 8) , (unique, 0x10000268, 8) , (ram, 0x4eadb0, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000290, 4) , (unique, 0x10000290, 4) , (register, 0x10, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000031d, 8), (unique, 0x1000031d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000025f, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000288, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000284, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (unique, 0x10000280, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (unique, 0x10000278, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x10000270, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x10000268, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000290, 4)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x19a516, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x80, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x19a771, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (unique, 0x10000217, 8), (unique, 0x10000217, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x17c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x17c, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x17c, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x17c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17c, 4)]
[(register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x191310, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x19a537, 1)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0xbc80, 4) INT_OR (stack, 0xffffffffffffffb0, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x19a54d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x16a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x16a, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x16a, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x16a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x16a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x117, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x117, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x117, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x117, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x117, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0x10000295, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x1000029d, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x100002a5, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(unique, 0x100002ad, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(unique, 0x100002b1, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x19a56a, 1) , (unique, 0x10000294, 1), (unique, 0x10000294, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000295, 8) , (const, 0x15c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000029d, 8) , (const, 0x15c, 4)]
[(ram, 0x4eae58, 8) INDIRECT (unique, 0x100002a5, 8) , (const, 0x15c, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x100002ad, 4) , (const, 0x15c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100002b1, 4) , (const, 0x15c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0xa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x100002b1, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (unique, 0x100002ad, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (unique, 0x100002a5, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x1000029d, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x10000295, 8)]
[ ---  CBRANCH (ram, 0x19a4a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x1000021f, 8), (unique, 0x1000021f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000325, 8), (unique, 0x10000325, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0xa8, 8) , (const, 0x21c, 8) , (const, 0x4, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4)]
