[ ---  CBRANCH (ram, 0x421d50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7ca8, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000158, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000158, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[ ---  CBRANCH (ram, 0x421d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x23f, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7cb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23f, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x23f, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x23f, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x421cb9, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000210, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[ ---  CBRANCH (ram, 0x421d0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7ca8, 8) , (const, 0x0, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000244, 8), (unique, 0x10000244, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (ram, 0x4c7ca8, 8) , (const, 0x21e, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421de0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (ram, 0x4c7ca8, 8) , (const, 0x220, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000130, 8) , (unique, 0x10000128, 8) , (const, 0x302, 8) , (unique, 0x10000150, 8), (unique, 0x10000150, 8) COPY (const, 0x49c258, 8), (unique, 0x10000130, 8) COPY (const, 0x49b1a9, 8), (unique, 0x10000128, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (unique, 0x1000021c, 8) , (const, 0x21d, 4), (unique, 0x1000021c, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x21d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (unique, 0x10000224, 8) , (const, 0x56, 4), (unique, 0x10000224, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x56, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (const, 0x1, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) PTRADD (ram, 0x4c7ca8, 8) , (const, 0x220, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421d0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421dff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x133, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x133, 4)]
[ ---  CALL (ram, 0x421c50, 8)]
[ ---  CBRANCH (ram, 0x421ecf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000274, 8), (unique, 0x10000274, 8) INT_ADD (unique, 0x1000026c, 8) , (register, 0x0, 8), (unique, 0x1000026c, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000264, 8), (unique, 0x10000264, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x133, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000138, 8), (unique, 0x10000138, 8) COPY (const, 0x49b1c7, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x214, 4)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x214, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000284, 8), (unique, 0x10000284, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421eb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421eb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000029c, 8) , (unique, 0xbd80, 8), (unique, 0x1000029c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x185, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x182, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x185, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x182, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x421e7a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x421e7a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421edb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421edb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000148, 8), (unique, 0x10000148, 8) COPY (const, 0x49b4e0, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x208, 4)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x208, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x421e80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x421ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002d4, 8) , (unique, 0xbd80, 8), (unique, 0x100002d4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x439, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x438, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x439, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x438, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002dc, 8) , (unique, 0xbd80, 8), (unique, 0x100002dc, 8) CAST (unique, 0x10000117, 8), (unique, 0x10000117, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x421e7a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e4, 8) , (unique, 0xbd80, 8), (unique, 0x100002e4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ec, 8) , (unique, 0xbd80, 8), (unique, 0x100002ec, 8) CAST (unique, 0x1000010f, 8), (unique, 0x1000010f, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1fd, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1f7, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x434, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x433, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1fd, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1f7, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x434, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x433, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000304, 8), (unique, 0x10000304, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x421e7a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000314, 8) , (unique, 0xbd80, 8), (unique, 0x10000314, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1d5, 4), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x1cf, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1d5, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x1cf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000324, 8) , (unique, 0xbd80, 8), (unique, 0x10000324, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000140, 8), (unique, 0x10000140, 8) COPY (const, 0x49b1e4, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x20e, 4)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x20e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0x79, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0x79, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x880, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(unique, 0x10000218, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  CBRANCH (ram, 0x421d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c7cb0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x421d22, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000218, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x421d22, 1)]
[(ram, 0x4c7cb0, 4) INT_ADD (ram, 0x4c7cb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  CBRANCH (ram, 0x421d50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000210, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421dc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000210, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xec, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000210, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf1, 4)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xf1, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xf1, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000210, 8)]
[ ---  BRANCH (ram, 0x421d42, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000210, 8)]
[(ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xbf, 4)]
[(ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xbf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000210, 8) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000344, 8) , (unique, 0x10000210, 8), (unique, 0x10000344, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000160, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000160, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) INDIRECT (ram, 0x4c7ca8, 8) , (const, 0xc2, 4), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) INDIRECT (ram, 0x4c7cb0, 4) , (const, 0xc2, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000210, 8)]
[(ram, 0x4c7ca8, 8) COPY (ram, 0x4c7ca8, 8), (ram, 0x4c7ca8, 8) MULTIEQUAL (ram, 0x4c7ca8, 8) , (ram, 0x4c7ca8, 8)]
[(ram, 0x4c7cb0, 4) COPY (ram, 0x4c7cb0, 4), (ram, 0x4c7cb0, 4) MULTIEQUAL (ram, 0x4c7cb0, 4) , (ram, 0x4c7cb0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
