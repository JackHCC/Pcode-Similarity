[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100000f0, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x12cdc4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x6, 4)]
[(unique, 0x100000e0, 1) MULTIEQUAL (unique, 0x100000f0, 1) , (unique, 0x100000ef, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x12cdc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x6, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x12d016, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (register, 0xb8, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x12cde0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000215, 8) , (register, 0xb8, 8) , (const, 0x8, 8), (unique, 0x10000215, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ec5e0, 8)]
[(register, 0xa0, 8) INT_ADD (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000025c, 1), (unique, 0x1000025c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001bd, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (unique, 0x100001bd, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12ce1b, 1) , (unique, 0x100000e0, 1)]
[ ---  CBRANCH (ram, 0x12ce1b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100000e2, 1) MULTIEQUAL (unique, 0x100000e0, 1) , (unique, 0x100000e0, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x12cdc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x12cee2, 1) , (unique, 0x100000e2, 1)]
[(unique, 0x100000ef, 1) MULTIEQUAL (unique, 0x100000e0, 1) , (unique, 0x100000e2, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
[(unique, 0x100000f1, 1) MULTIEQUAL (unique, 0x10000103, 1) , (unique, 0x100000f0, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x12ce80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x6, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xa0, 8) INT_ADD (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000025d, 1), (unique, 0x1000025d, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001c5, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (unique, 0x100001c5, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12ced3, 1) , (unique, 0x100000f1, 1)]
[ ---  CBRANCH (ram, 0x12ced3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100000f4, 1) MULTIEQUAL (unique, 0x100000f1, 1) , (unique, 0x100000f1, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x12ce80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xc, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x12ce2a, 1) , (unique, 0x100000f4, 1)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12cf78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0xbd80, 8) , (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) COPY (const, 0x2b596e, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x2b596e, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x2b596e, 8)]
[ ---  CBRANCH (ram, 0x12cf90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0xbd80, 8) , (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) COPY (const, 0x2b3d19, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x12d01e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12d01e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000266, 8), (unique, 0x10000266, 8) CALL (ram, 0x1212c0, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x12cfc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x6, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000254, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12cfdc, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000254, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x12cfd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x6, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3d, 1), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100001e5, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x100001e5, 8) COPY (const, 0x29cd00, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000026e, 1), (unique, 0x1000026e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d5, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x100001d5, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100001e5, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x100001e5, 8) COPY (const, 0x29cd00, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0x28, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000026e, 1), (unique, 0x1000026e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d5, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x100001d5, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3b, 1), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100001e5, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x100001e5, 8) COPY (const, 0x29cd00, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0x28, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000026e, 1), (unique, 0x1000026e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d5, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x100001d5, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8)]
[ ---  CBRANCH (ram, 0x12cfd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0xc, 4), (register, 0x28, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000024c, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12cf24, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000024c, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x12cf20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x6, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x12d02c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (register, 0xb8, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x12cf40, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000021d, 8) , (register, 0xb8, 8) , (const, 0x8, 8), (unique, 0x1000021d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ec5e0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3d, 1), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100001dd, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x100001dd, 8) COPY (const, 0x29cd00, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000026f, 1), (unique, 0x1000026f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001cd, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (unique, 0x100001cd, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100001dd, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x100001dd, 8) COPY (const, 0x29cd00, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000026f, 1), (unique, 0x1000026f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001cd, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (unique, 0x100001cd, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3b, 1), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100001dd, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x100001dd, 8) COPY (const, 0x29cd00, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000026f, 1), (unique, 0x1000026f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001cd, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (unique, 0x100001cd, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12cf20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000103, 1) MULTIEQUAL (unique, 0x100000f1, 1) , (unique, 0x100000f4, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
