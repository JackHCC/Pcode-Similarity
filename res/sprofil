[(stack, 0xfffffffffffffeec, 4) COPY (register, 0x8, 4)]
[(unique, 0x100006c2, 8) COPY (unique, 0x3680, 8), (unique, 0x3680, 8) CAST (unique, 0x100006ee, 8), (unique, 0x100006ee, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100006e6, 8) , (unique, 0x100004ed, 8), (unique, 0x100006e6, 8) CAST (unique, 0x100004f5, 8), (unique, 0x100004f5, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeec, 8), (unique, 0x100004ed, 8) INT_ADD (unique, 0x100000a4, 8) , (const, 0x3, 8), (unique, 0x100000a4, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x16, 8), (unique, 0x3480, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_SEXT (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x209410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2093d7, 8), (register, 0x20, 8) CAST (unique, 0x100006fe, 8), (unique, 0x100006fe, 8) INT_ADD (unique, 0x100006f6, 8) , (unique, 0x100000a4, 8), (unique, 0x100006f6, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x70, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x6f, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x70, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x6f, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x70, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x6f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b5, 8) , (register, 0x10, 8), (unique, 0x100003b5, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_DIV (register, 0x8, 8) , (const, 0xf4240, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000021c, 4), (unique, 0x1000021c, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x209a80, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0xca, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0xb5, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x70, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0xca, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0xb5, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x70, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0xca, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0xb5, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x70, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0xca, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0xb5, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x70, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0xca, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0xb5, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x70, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0xca, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0xb5, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x70, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0xca, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0xb5, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x70, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0xca, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0xb5, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x70, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0xca, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0xb5, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x70, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0xca, 4), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0xb5, 4), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x70, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0xca, 4), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0xb5, 4), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x70, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0xca, 4), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0xb5, 4), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x70, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRSUB (register, 0x10, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_REM (register, 0x8, 8) , (const, 0xf4240, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000021c, 4), (unique, 0x1000021c, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x209a80, 8)]
[(unique, 0x100006ca, 8) COPY (stack, 0xffffffffffffff00, 8), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x70, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x6f, 4), (stack, 0xffffffffffffff00, 8) COPY (unique, 0x3680, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100006c2, 8) , (unique, 0x100006ca, 8)]
[ ---  CBRANCH (ram, 0x2099d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6420, 4) , (const, 0x0, 4), (ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2099e6, 8), (register, 0x20, 8) CAST (unique, 0x1000070e, 8), (unique, 0x1000070e, 8) INT_ADD (unique, 0x10000706, 8) , (unique, 0x100000a4, 8), (unique, 0x10000706, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x925, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x925, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x925, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x925, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x925, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x925, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x925, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x925, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x925, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x925, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x925, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x925, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x925, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x924, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x925, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x924, 4)]
[ ---  CBRANCH (ram, 0x2097c1, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1bec00, 8) , (const, 0x2, 4) , (unique, 0x10000385, 8) , (const, 0x0, 8), (unique, 0x10000385, 8) CAST (unique, 0x10000716, 8), (unique, 0x10000716, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6440, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x209a01, 8), (register, 0x20, 8) CAST (unique, 0x10000726, 8), (unique, 0x10000726, 8) INT_ADD (unique, 0x1000071e, 8) , (unique, 0x100000a4, 8), (unique, 0x1000071e, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x93e, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x93e, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x93e, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x93e, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x93e, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x93e, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x93e, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x93e, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x93e, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x93e, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x93e, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x93e, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x93e, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x93d, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x93e, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x93d, 4)]
[ ---  CBRANCH (ram, 0x2097c1, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (const, 0x1b, 4) , (unique, 0x10000395, 8) , (const, 0x0, 8), (unique, 0x10000395, 8) CAST (unique, 0x1000072e, 8), (unique, 0x1000072e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6460, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x209a15, 8), (register, 0x20, 8) CAST (unique, 0x1000073e, 8), (unique, 0x1000073e, 8) INT_ADD (unique, 0x10000736, 8) , (unique, 0x100000a4, 8), (unique, 0x10000736, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x94c, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x94b, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x94c, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x94b, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x94c, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x94c, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x94c, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x94c, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x94c, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x94c, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x94c, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x94c, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x94c, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x94c, 4)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x94c, 4)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x94c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c6428, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c6438, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c43e0, 8)]
[ ---  CBRANCH (ram, 0x209a58, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x209a6f, 8), (register, 0x20, 8) CAST (unique, 0x1000074e, 8), (unique, 0x1000074e, 8) INT_ADD (unique, 0x10000746, 8) , (unique, 0x100000a4, 8), (unique, 0x10000746, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x915, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x915, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x915, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x915, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x915, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x915, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x915, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x915, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x915, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x915, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x915, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x915, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x915, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x914, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x915, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x914, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x915, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x914, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x915, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x914, 4)]
[ ---  CALL (ram, 0x139750, 8) , (register, 0x80, 8) , (register, 0xb8, 8) , (const, 0x8, 8) , (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) PTRSUB (const, 0x0, 8) , (const, 0x209130, 8)]
[ ---  BRANCH (ram, 0x20980e, 1)]
[(stack, 0xffffffffffffff00, 8) COPY (register, 0x80, 8)]
[(unique, 0x100006de, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (unique, 0x1000050a, 8) , (const, 0x0, 4), (unique, 0x1000050a, 8) INT_SRIGHT (register, 0x0, 8) , (const, 0x3f, 4), (register, 0x0, 8) INT_LEFT (unique, 0x10000756, 8) , (const, 0x3c, 4), (unique, 0x10000756, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x209459, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_LESS (unique, 0x1000075e, 4) , (register, 0x0, 4), (unique, 0x1000075e, 4) CAST (register, 0x30, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (unique, 0x1000050a, 8) , (const, 0x0, 4), (unique, 0x1000050a, 8) INT_SRIGHT (register, 0x0, 8) , (const, 0x3f, 4), (register, 0x0, 8) INT_LEFT (unique, 0x10000756, 8) , (const, 0x3c, 4), (unique, 0x10000756, 8) CAST (register, 0x80, 8)]
[(unique, 0x100006e2, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100006de, 4) , (unique, 0x100006e2, 4)]
[(unique, 0x100006d6, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x20959e, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x30, 4) , (const, 0x7, 4)]
[(unique, 0x100006d2, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x209464, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x165, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x165, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x165, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x165, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x165, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x165, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x165, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x165, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x165, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x165, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x165, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x165, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3680, 8) , (register, 0x38, 8), (unique, 0x3680, 8) CAST (unique, 0x10000762, 8), (unique, 0x10000762, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x209a26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) COPY (unique, 0x100006da, 4), (unique, 0x100006da, 4) MULTIEQUAL (unique, 0x100006d2, 4) , (unique, 0x100006d6, 4)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2094e0, 1)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x175, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x175, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x175, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x175, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x175, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x175, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x175, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x175, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x175, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x175, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x175, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x175, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3580, 8) , (unique, 0x3100, 8), (unique, 0x3580, 8) CAST (unique, 0x1000076a, 8), (unique, 0x1000076a, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x8, 8), (unique, 0x3480, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x209a4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x10, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x2094e0, 1)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x185, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x185, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x185, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x185, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x185, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x185, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x185, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x185, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x185, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x185, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x185, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x185, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3580, 8) , (unique, 0x3100, 8), (unique, 0x3580, 8) CAST (unique, 0x10000772, 8), (unique, 0x10000772, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x209a44, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[(register, 0x10, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x2094e0, 1)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x195, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x195, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x195, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x195, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x195, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x195, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x195, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x195, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x195, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x195, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x195, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x195, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3580, 8) , (unique, 0x3100, 8), (unique, 0x3580, 8) CAST (unique, 0x1000077a, 8), (unique, 0x1000077a, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x18, 8), (unique, 0x3480, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x209a3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[(register, 0x10, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x2094e0, 1)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x1a5, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x1a5, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x1a5, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x1a5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3580, 8) , (unique, 0x3200, 8), (unique, 0x3580, 8) CAST (unique, 0x10000782, 8), (unique, 0x10000782, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x20, 8), (unique, 0x3480, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x209a30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x6, 4)]
[(register, 0x10, 4) COPY (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x2094e0, 1)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x1ad, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x1ad, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x1ad, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3580, 8) , (unique, 0x3200, 8), (unique, 0x3580, 8) CAST (unique, 0x1000078a, 8), (unique, 0x1000078a, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x28, 8), (unique, 0x3480, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x20, 8)]
[(register, 0x10, 4) COPY (const, 0x6, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4), (register, 0xa0, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2095f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x0, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2094ec, 1)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x1000067e, 4) COPY (ram, 0x293c9c, 4), (ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(unique, 0x1000067a, 4) COPY (ram, 0x293c98, 4), (ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(unique, 0x10000676, 4) COPY (ram, 0x293c94, 4), (ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(unique, 0x10000672, 4) COPY (ram, 0x293c90, 4), (ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4), (register, 0xa0, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x3680, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x3100, 4) , (const, 0x2, 4), (unique, 0x3100, 4) INT_SUB (register, 0x38, 4) , (const, 0x4, 4), (register, 0x38, 4) INT_SUB (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2095b5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 4) , (register, 0x98, 4), (register, 0x98, 4) INT_SUB (register, 0xa0, 4) , (register, 0x0, 4), (register, 0xa0, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x1200, 16) INT_ADD (unique, 0x1000054a, 16) , (register, 0x1200, 12), (unique, 0x1000054a, 16) INT_LEFT (unique, 0x1000053a, 16) , (const, 0x60, 16), (unique, 0x1000053a, 16) INT_SEXT (register, 0x120c, 4), (register, 0x120c, 4) INT_ADD (register, 0x10, 4) , (ram, 0x293c8c, 4), (register, 0x1200, 12) INT_ADD (unique, 0x1000052e, 12) , (register, 0x1200, 8), (unique, 0x1000052e, 12) INT_LEFT (unique, 0x10000522, 12) , (const, 0x40, 12), (unique, 0x10000522, 12) INT_SEXT (register, 0x1208, 4), (register, 0x1208, 4) INT_ADD (register, 0x10, 4) , (ram, 0x293c88, 4), (register, 0x1200, 8) INT_ADD (unique, 0x1000051a, 8) , (register, 0x1200, 4), (unique, 0x1000051a, 8) INT_LEFT (unique, 0x10000512, 8) , (const, 0x20, 8), (unique, 0x10000512, 8) INT_SEXT (register, 0x1204, 4), (register, 0x1204, 4) INT_ADD (register, 0x10, 4) , (ram, 0x293c84, 4), (register, 0x1200, 4) INT_ADD (register, 0x10, 4) , (ram, 0x293c80, 4)]
[(unique, 0x10000682, 8) COPY (unique, 0x10000792, 8), (unique, 0x10000792, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x30, 8) , (const, 0x8, 8)]
[(register, 0x12c0, 16) INT_ADD (unique, 0x1000060a, 16) , (register, 0x12c0, 12), (unique, 0x1000060a, 16) INT_LEFT (unique, 0x100005fa, 16) , (const, 0x60, 16), (unique, 0x100005fa, 16) INT_SEXT (register, 0x12cc, 4), (register, 0x12cc, 4) INT_ADD (register, 0x120c, 4) , (unique, 0x1000067e, 4), (register, 0x12c0, 12) INT_ADD (unique, 0x100005ee, 12) , (register, 0x12c0, 8), (unique, 0x100005ee, 12) INT_LEFT (unique, 0x100005e2, 12) , (const, 0x40, 12), (unique, 0x100005e2, 12) INT_SEXT (register, 0x12c8, 4), (register, 0x12c8, 4) INT_ADD (register, 0x1208, 4) , (unique, 0x1000067a, 4), (register, 0x12c0, 8) INT_ADD (unique, 0x100005da, 8) , (register, 0x12c0, 4), (unique, 0x100005da, 8) INT_LEFT (unique, 0x100005d2, 8) , (const, 0x20, 8), (unique, 0x100005d2, 8) INT_SEXT (register, 0x12c4, 4), (register, 0x12c4, 4) INT_ADD (register, 0x1204, 4) , (unique, 0x10000676, 4), (register, 0x12c0, 4) INT_ADD (register, 0x1200, 4) , (unique, 0x10000672, 4), (register, 0x120c, 4) SUBPIECE (unique, 0x1000057a, 16) , (const, 0x0, 4), (unique, 0x1000057a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x60, 4), (register, 0x1208, 4) SUBPIECE (unique, 0x1000056a, 16) , (const, 0x0, 4), (unique, 0x1000056a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x40, 4), (register, 0x1204, 4) SUBPIECE (unique, 0x1000055a, 16) , (const, 0x0, 4), (unique, 0x1000055a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x20, 4), (register, 0x1200, 4) SUBPIECE (register, 0x1200, 16) , (const, 0x0, 4), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x12c0, 16)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x1220, 8), (register, 0x1220, 8) PTRADD (register, 0x38, 8) , (register, 0x1220, 8) , (const, 0x20, 8), (register, 0x1220, 8) INT_OR (unique, 0x10000224, 8) , (unique, 0x10000234, 8), (unique, 0x10000234, 8) INT_LEFT (unique, 0x1000023c, 8) , (const, 0x20, 4), (unique, 0x1000023c, 8) INT_ZEXT (register, 0x1240, 4), (unique, 0x10000224, 8) INT_AND (register, 0x1220, 8) , (const, 0xffffffff, 8), (register, 0x1220, 8) SUBPIECE (register, 0x1200, 16) , (const, 0x0, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x98b00, 4), (unique, 0x98b00, 4) INT_ZEXT (unique, 0x98a80, 1), (unique, 0x98a80, 1) INT_SLESS (register, 0x1200, 4) , (const, 0x0, 4), (register, 0x1200, 4) SUBPIECE (register, 0x1200, 16) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000682, 8) , (unique, 0x1000068a, 8), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x12c0, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000032c, 8) , (register, 0x1228, 8), (unique, 0x1000032c, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x1228, 8) PTRADD (register, 0x38, 8) , (register, 0x1228, 8) , (const, 0x20, 8), (register, 0x1228, 8) SUBPIECE (unique, 0x1000058a, 16) , (const, 0x0, 4), (unique, 0x1000058a, 16) INT_RIGHT (register, 0x1220, 16) , (const, 0x40, 4), (register, 0x1220, 16) INT_ADD (unique, 0x100005c2, 16) , (register, 0x1220, 12), (unique, 0x100005c2, 16) INT_LEFT (unique, 0x100005b2, 16) , (const, 0x60, 16), (unique, 0x100005b2, 16) INT_SEXT (unique, 0x1000079a, 4), (unique, 0x1000079a, 4) CAST (register, 0x1244, 4), (register, 0x1220, 12) INT_ADD (unique, 0x100005a6, 12) , (register, 0x1220, 8), (unique, 0x100005a6, 12) INT_LEFT (unique, 0x1000059a, 12) , (const, 0x40, 12), (unique, 0x1000059a, 12) INT_SEXT (register, 0x1204, 4), (register, 0x1220, 8) SUBPIECE (register, 0x1200, 16) , (const, 0x0, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x98c80, 4), (unique, 0x98c80, 4) INT_ZEXT (unique, 0x98c00, 1), (unique, 0x98c00, 1) INT_SLESS (register, 0x1204, 4) , (const, 0x0, 4), (register, 0x1204, 4) SUBPIECE (unique, 0x1000055a, 16) , (const, 0x0, 4), (unique, 0x1000055a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x20, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000682, 8) , (unique, 0x1000068a, 8), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x12c0, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x1200, 8) PTRADD (register, 0x38, 8) , (register, 0x1200, 8) , (const, 0x20, 8), (register, 0x1200, 8) INT_ADD (unique, 0x10000622, 8) , (register, 0x1208, 4), (unique, 0x10000622, 8) INT_LEFT (unique, 0x1000061a, 8) , (const, 0x20, 8), (unique, 0x1000061a, 8) INT_SEXT (unique, 0x1000079e, 4), (unique, 0x1000079e, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x98e00, 4), (unique, 0x98e00, 4) INT_ZEXT (unique, 0x98d80, 1), (unique, 0x98d80, 1) INT_SLESS (register, 0x1208, 4) , (const, 0x0, 4), (register, 0x1208, 4) SUBPIECE (unique, 0x1000056a, 16) , (const, 0x0, 4), (unique, 0x1000056a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x40, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000682, 8) , (unique, 0x1000068a, 8), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x12c0, 16)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x1413, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x1412, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x1418, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x1417, 4), (ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x1413, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x1412, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x1418, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x1417, 4), (ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x1413, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x1412, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x1418, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x1417, 4), (ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x1413, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x1412, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x1418, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x1417, 4), (ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x1413, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x1412, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x1418, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x1417, 4), (ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x1413, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x1412, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x1418, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x1417, 4), (ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x1413, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x1412, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x1418, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x1417, 4), (ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x1413, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x1412, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x1418, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x1417, 4), (ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x1413, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x1412, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x1418, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x1417, 4), (ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x1413, 4), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x1412, 4), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x1418, 4), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x1417, 4), (ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x1413, 4), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x1412, 4), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x1418, 4), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x1417, 4), (ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x1413, 4), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x1412, 4), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x1418, 4), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x1417, 4), (ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000324, 8) , (register, 0x1208, 8), (unique, 0x10000324, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x1208, 8) PTRADD (register, 0x38, 8) , (register, 0x1208, 8) , (const, 0x20, 8), (register, 0x1208, 8) SUBPIECE (unique, 0x10000662, 16) , (const, 0x0, 4), (unique, 0x10000662, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x40, 4), (register, 0x1200, 16) INT_ADD (unique, 0x10000652, 16) , (register, 0x1200, 12), (unique, 0x10000652, 16) INT_LEFT (unique, 0x10000642, 16) , (const, 0x60, 16), (unique, 0x10000642, 16) INT_SEXT (unique, 0x100007a2, 4), (unique, 0x100007a2, 4) CAST (register, 0x124c, 4), (register, 0x1200, 12) INT_ADD (unique, 0x10000636, 12) , (register, 0x1200, 8), (unique, 0x10000636, 12) INT_LEFT (unique, 0x1000062a, 12) , (const, 0x40, 12), (unique, 0x1000062a, 12) INT_SEXT (register, 0x120c, 4), (register, 0x1200, 8) INT_ADD (unique, 0x10000622, 8) , (register, 0x1208, 4), (unique, 0x10000622, 8) INT_LEFT (unique, 0x1000061a, 8) , (const, 0x20, 8), (unique, 0x1000061a, 8) INT_SEXT (unique, 0x1000079e, 4), (unique, 0x1000079e, 4) CAST (register, 0x1248, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x98f80, 4), (unique, 0x98f80, 4) INT_ZEXT (unique, 0x98f00, 1), (unique, 0x98f00, 1) INT_SLESS (register, 0x1200, 16) , (const, 0x0, 16), (register, 0x120c, 4) SUBPIECE (unique, 0x1000057a, 16) , (const, 0x0, 4), (unique, 0x1000057a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x60, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x98e00, 4), (unique, 0x98e00, 4) INT_ZEXT (unique, 0x98d80, 1), (unique, 0x98d80, 1) INT_SLESS (register, 0x1208, 4) , (const, 0x0, 4), (register, 0x1208, 4) SUBPIECE (unique, 0x1000056a, 16) , (const, 0x0, 4), (unique, 0x1000056a, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x40, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000682, 8) , (unique, 0x1000068a, 8), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x12c0, 16)]
[(unique, 0x1000068a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000682, 8) , (unique, 0x1000068a, 8)]
[ ---  CBRANCH (ram, 0x2095ad, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (register, 0x8, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (unique, 0x3680, 4)]
[ ---  CBRANCH (ram, 0x2095f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x28600, 4) , (const, 0x0, 4), (unique, 0x28600, 4) INT_SUB (unique, 0x3680, 4) , (register, 0x38, 4)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x2d7, 4), (ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x2d7, 4), (ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x2d7, 4), (ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x2d7, 4), (ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x2d7, 4), (ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x2d7, 4), (ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x2d7, 4), (ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x2d7, 4), (ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x2d7, 4), (ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x2d7, 4), (ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x2d7, 4), (ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x2d7, 4), (ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (register, 0x0, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x8, 8) , (const, 0x8, 8), (register, 0x0, 8) PTRADD (register, 0x38, 8) , (register, 0x8, 8) , (const, 0x20, 8), (register, 0x8, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x2095f4, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x3100, 4) , (register, 0x30, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x31a, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x31a, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x31a, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x31a, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x31a, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x31a, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x31a, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x31a, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x31a, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x31a, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x31a, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x31a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100007ae, 8), (unique, 0x100007ae, 8) CAST (register, 0x8, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x2095f4, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x3100, 4) , (register, 0x30, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x35d, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x35d, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x35d, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x35d, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x35d, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x35d, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x35d, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x35d, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x35d, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x35d, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x35d, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x35d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100007b6, 8), (unique, 0x100007b6, 8) CAST (register, 0xa8, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0xa8, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x209612, 8), (register, 0x20, 8) CAST (unique, 0x100007c6, 8), (unique, 0x100007c6, 8) INT_ADD (unique, 0x100007be, 8) , (unique, 0x100000a4, 8), (unique, 0x100007be, 8) CAST (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x367, 4), (ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x367, 4), (ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x367, 4), (ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x367, 4), (ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x367, 4), (ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x367, 4), (ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x367, 4), (ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x367, 4), (ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x367, 4), (ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x367, 4), (ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x367, 4), (ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x367, 4), (ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x367, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x366, 4)]
[ ---  CALL (ram, 0x139750, 8) , (register, 0x80, 8) , (register, 0xb8, 8) , (const, 0x8, 8) , (unique, 0x10000355, 8), (unique, 0x10000355, 8) PTRSUB (const, 0x0, 8) , (const, 0x209130, 8)]
[(stack, 0xfffffffffffffef0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_AND (unique, 0x1000012c, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x1000012c, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_AND (stack, 0xfffffffffffffeec, 4) , (const, 0x1, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x367, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x366, 4)]
[(stack, 0xfffffffffffffef8, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xfffffffffffffef8, 8) , (unique, 0x10000475, 8) , (const, 0x8, 8), (unique, 0x10000475, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x367, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x366, 4), (stack, 0xfffffffffffffef8, 8) COPY (register, 0x80, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[ ---  CBRANCH (ram, 0x2097f2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100007ce, 8), (unique, 0x100007ce, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff00, 8), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100007d6, 8), (unique, 0x100007d6, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x209998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x80, 8) COPY (const, 0x2, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_DIV (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_LEFT (register, 0x10, 8) , (const, 0x10, 4), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10000, 8), (register, 0x10, 8) INT_REM (unique, 0x10000254, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_DIV (unique, 0x10000254, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100007de, 8), (unique, 0x100007de, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0x10000254, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x2096ad, 1)]
[(register, 0x38, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x2, 4)]
[(register, 0x80, 8) COPY (const, 0x4, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_DIV (unique, 0x100007ee, 8) , (register, 0x8, 8), (unique, 0x100007ee, 8) CAST (register, 0x0, 8), (register, 0x18, 8) INT_MULT (register, 0x0, 8) , (const, 0x10000, 8), (register, 0x0, 8) INT_LEFT (register, 0x10, 8) , (const, 0x10, 4), (register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_AND (unique, 0x10000244, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x10000244, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2e800, 16) INT_ZEXT (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100007e6, 8), (unique, 0x100007e6, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) INT_NEGATE (register, 0x30, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x10, 4), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x10, 4), (register, 0x10, 8) INT_ZEXT (register, 0x0, 2), (register, 0x0, 2) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ZEXT (register, 0x0, 8), (unique, 0x2e800, 16) INT_ZEXT (register, 0x80, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x209950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x10, 4), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xffff, 8), (register, 0x10, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x11, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x10, 4), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xffff, 8), (register, 0x10, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x12, 4)]
[ ---  CBRANCH (ram, 0x209707, 1) , (unique, 0x1000034c, 1), (unique, 0x1000034c, 1) INT_LESSEQUAL (register, 0x38, 8) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x209975, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x10, 4), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x10, 4), (register, 0x10, 8) INT_ZEXT (register, 0x0, 2), (register, 0x0, 2) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ZEXT (register, 0x0, 8), (unique, 0x2e800, 16) INT_ZEXT (stack, 0xfffffffffffffef0, 8), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) PTRSUB (const, 0x0, 8) , (const, 0x209994, 8), (register, 0x20, 8) CAST (unique, 0x100007fe, 8), (unique, 0x100007fe, 8) INT_ADD (unique, 0x100007f6, 8) , (unique, 0x100000a4, 8), (unique, 0x100007f6, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x7d5, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x7d4, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x7d5, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x7d4, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x7d5, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x7d4, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x7d5, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x7d4, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000375, 8) , (unique, 0x1000036d, 8) , (const, 0x65, 4) , (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) COPY (const, 0x2921e0, 8), (unique, 0x10000375, 8) COPY (const, 0x292178, 8), (unique, 0x1000036d, 8) COPY (const, 0x28e973, 8)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x7d5, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x7d5, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x7d5, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x7d5, 4)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x7d5, 4)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x7d5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x100006a2, 8) COPY (ram, 0x4c6428, 8)]
[(unique, 0x100006ba, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_ZEXT (ram, 0x4c6420, 4)]
[ ---  CBRANCH (ram, 0x20976e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6420, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x10000692, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100006a2, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x209761, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000081e, 8), (unique, 0x1000081e, 8) INT_ADD (unique, 0x10000816, 8) , (const, 0x20, 8), (unique, 0x10000816, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000080e, 8), (unique, 0x1000080e, 8) INT_ADD (unique, 0x10000806, 8) , (register, 0x90, 8), (unique, 0x10000806, 8) CAST (register, 0x8, 8), (register, 0x90, 8) INT_MULT (register, 0xb8, 8) , (const, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100006a2, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x100006aa, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x2097d8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x20979c, 8), (register, 0x20, 8) CAST (unique, 0x1000082e, 8), (unique, 0x1000082e, 8) INT_ADD (unique, 0x10000826, 8) , (unique, 0x100000a4, 8), (unique, 0x10000826, 8) CAST (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x7a3, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x7a3, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x7a3, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x7a3, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x7a3, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x7a3, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x7a3, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x7a2, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x7a3, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x7a2, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x7a3, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x7a2, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x7a3, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x7a2, 4)]
[ ---  CBRANCH (ram, 0x209750, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x209150, 8)]
[(register, 0x38, 8) INT_ZEXT (ram, 0x4c6420, 4)]
[(unique, 0x3400, 8) CAST (unique, 0x1000083e, 8), (unique, 0x1000083e, 8) INT_ADD (unique, 0x10000836, 8) , (register, 0x90, 8), (unique, 0x10000836, 8) CAST (ram, 0x4c6428, 8)]
[(unique, 0x1000069a, 8) COPY (ram, 0x4c6428, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000692, 8) , (unique, 0x1000069a, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000084e, 8), (unique, 0x1000084e, 8) INT_ADD (unique, 0x10000846, 8) , (const, 0x28, 8), (unique, 0x10000846, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100006b2, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2097d8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (register, 0x38, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0xb8, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100006aa, 8) , (unique, 0x100006b2, 8) , (unique, 0x100006ba, 8)]
[ ---  CBRANCH (ram, 0x2097f2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2097ee, 8), (register, 0x20, 8) CAST (unique, 0x1000085e, 8), (unique, 0x1000085e, 8) INT_ADD (unique, 0x10000856, 8) , (unique, 0x100000a4, 8), (unique, 0x10000856, 8) CAST (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x675, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x675, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x675, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x675, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x675, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x675, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x675, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x675, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x675, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x675, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x675, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x675, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x675, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x674, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x675, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x674, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x675, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x674, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x675, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x674, 4)]
[ ---  CBRANCH (ram, 0x2097a0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x209150, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x18, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2097ac, 8), (register, 0x20, 8) CAST (unique, 0x1000086e, 8), (unique, 0x1000086e, 8) INT_ADD (unique, 0x10000866, 8) , (unique, 0x100000a4, 8), (unique, 0x10000866, 8) CAST (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x751, 4), (ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x751, 4), (ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x751, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x750, 4), (stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x751, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x750, 4), (stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x751, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x750, 4), (stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x751, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x750, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (ram, 0x4c6428, 8), (ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x751, 4), (ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x751, 4), (ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x751, 4), (ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x751, 4), (ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x751, 4), (ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x751, 4), (ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x751, 4), (ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x751, 4), (ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c6428, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x751, 4), (ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x751, 4), (ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[(stack, 0xffffffffffffff00, 8) COPY (unique, 0xbe00, 8), (unique, 0xbe00, 8) PTRADD (stack, 0xffffffffffffff00, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[ ---  CBRANCH (ram, 0x209650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (stack, 0xfffffffffffffef8, 8), (unique, 0xbe00, 8) PTRADD (stack, 0xffffffffffffff00, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(stack, 0xfffffffffffffef0, 8) MULTIEQUAL (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffef0, 8)]
[(stack, 0xfffffffffffffeec, 4) MULTIEQUAL (stack, 0xfffffffffffffeec, 4) , (stack, 0xfffffffffffffeec, 4)]
[(ram, 0x4c6438, 8) MULTIEQUAL (ram, 0x4c6438, 8) , (ram, 0x4c6438, 8)]
[(ram, 0x4c6430, 8) MULTIEQUAL (ram, 0x4c6430, 8) , (ram, 0x4c6430, 8)]
[(ram, 0x4c6428, 8) MULTIEQUAL (ram, 0x4c6428, 8) , (ram, 0x4c6428, 8)]
[(ram, 0x293c9c, 4) MULTIEQUAL (ram, 0x293c9c, 4) , (ram, 0x293c9c, 4)]
[(ram, 0x293c98, 4) MULTIEQUAL (ram, 0x293c98, 4) , (ram, 0x293c98, 4)]
[(ram, 0x293c94, 4) MULTIEQUAL (ram, 0x293c94, 4) , (ram, 0x293c94, 4)]
[(ram, 0x293c90, 4) MULTIEQUAL (ram, 0x293c90, 4) , (ram, 0x293c90, 4)]
[(ram, 0x293c8c, 4) MULTIEQUAL (ram, 0x293c8c, 4) , (ram, 0x293c8c, 4)]
[(ram, 0x293c88, 4) MULTIEQUAL (ram, 0x293c88, 4) , (ram, 0x293c88, 4)]
[(ram, 0x293c84, 4) MULTIEQUAL (ram, 0x293c84, 4) , (ram, 0x293c84, 4)]
[(ram, 0x293c80, 4) MULTIEQUAL (ram, 0x293c80, 4) , (ram, 0x293c80, 4)]
[ ---  CBRANCH (ram, 0x2097c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c6420, 4) , (const, 0x0, 4), (ram, 0x4c6420, 4) MULTIEQUAL (ram, 0x4c6420, 4) , (ram, 0x4c6420, 4)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x3200, 8) CAST (unique, 0x10000876, 8), (unique, 0x10000876, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0x10000000, 4)]
[(stack, 0xffffffffffffff30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6428, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2092a0, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff40, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff48, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x209877, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000343, 4) , (const, 0x0, 4), (unique, 0x10000343, 4) INT_AND (stack, 0xfffffffffffffeec, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x209050, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2098ed, 8), (register, 0x20, 8) CAST (unique, 0x10000886, 8), (unique, 0x10000886, 8) INT_ADD (unique, 0x1000087e, 8) , (unique, 0x100000a4, 8), (unique, 0x1000087e, 8) CAST (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x707, 4)]
[(ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x707, 4)]
[(ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x707, 4)]
[(ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x707, 4)]
[(ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x707, 4)]
[(ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x707, 4)]
[(ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x707, 4)]
[(ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x707, 4)]
[(ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x707, 4)]
[(ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x707, 4)]
[(ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x707, 4)]
[(ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x707, 4)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x707, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x706, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x707, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x706, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x707, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x706, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x706, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff28, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x706, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x706, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x706, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x706, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff58, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff60, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff68, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff70, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff78, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff80, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff88, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x707, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x706, 4), (stack, 0xffffffffffffff98, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x707, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x706, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x707, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x706, 4), (stack, 0xffffffffffffffa8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x707, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x706, 4)]
[ ---  CBRANCH (ram, 0x2097c1, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (const, 0x1b, 4) , (unique, 0x3200, 8) , (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) CAST (unique, 0x1000088e, 8), (unique, 0x1000088e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6460, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x20993f, 8), (register, 0x20, 8) CAST (unique, 0x1000089e, 8), (unique, 0x1000089e, 8) INT_ADD (unique, 0x10000896, 8) , (unique, 0x100000a4, 8), (unique, 0x10000896, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x72a, 4), (stack, 0xfffffffffffffeec, 4) INDIRECT (stack, 0xfffffffffffffeec, 4) , (const, 0x729, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x72a, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x729, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x72a, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x729, 4), (stack, 0xffffffffffffff08, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x729, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x729, 4), (stack, 0xffffffffffffff18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x729, 4), (stack, 0xffffffffffffff20, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x72a, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x729, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x72a, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x729, 4)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4), (ram, 0x293c80, 4) INDIRECT (ram, 0x293c80, 4) , (const, 0x72a, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4), (ram, 0x293c84, 4) INDIRECT (ram, 0x293c84, 4) , (const, 0x72a, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4), (ram, 0x293c88, 4) INDIRECT (ram, 0x293c88, 4) , (const, 0x72a, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4), (ram, 0x293c8c, 4) INDIRECT (ram, 0x293c8c, 4) , (const, 0x72a, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4), (ram, 0x293c90, 4) INDIRECT (ram, 0x293c90, 4) , (const, 0x72a, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4), (ram, 0x293c94, 4) INDIRECT (ram, 0x293c94, 4) , (const, 0x72a, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4), (ram, 0x293c98, 4) INDIRECT (ram, 0x293c98, 4) , (const, 0x72a, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4), (ram, 0x293c9c, 4) INDIRECT (ram, 0x293c9c, 4) , (const, 0x72a, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4), (ram, 0x4c6420, 4) INDIRECT (ram, 0x4c6420, 4) , (const, 0x72a, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8), (ram, 0x4c6428, 8) INDIRECT (ram, 0x4c6428, 8) , (const, 0x72a, 4)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8), (ram, 0x4c6430, 8) INDIRECT (ram, 0x4c6430, 8) , (const, 0x72a, 4)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8), (ram, 0x4c6438, 8) INDIRECT (ram, 0x4c6438, 8) , (const, 0x72a, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1bec00, 8) , (const, 0x2, 4) , (unique, 0x3200, 8) , (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) CAST (unique, 0x100008a6, 8), (unique, 0x100008a6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6440, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(ram, 0x293c80, 4) COPY (ram, 0x293c80, 4)]
[(ram, 0x293c84, 4) COPY (ram, 0x293c84, 4)]
[(ram, 0x293c88, 4) COPY (ram, 0x293c88, 4)]
[(ram, 0x293c8c, 4) COPY (ram, 0x293c8c, 4)]
[(ram, 0x293c90, 4) COPY (ram, 0x293c90, 4)]
[(ram, 0x293c94, 4) COPY (ram, 0x293c94, 4)]
[(ram, 0x293c98, 4) COPY (ram, 0x293c98, 4)]
[(ram, 0x293c9c, 4) COPY (ram, 0x293c9c, 4)]
[(ram, 0x4c6420, 4) COPY (ram, 0x4c6420, 4)]
[(ram, 0x4c6428, 8) COPY (ram, 0x4c6428, 8)]
[(ram, 0x4c6430, 8) COPY (ram, 0x4c6430, 8)]
[(ram, 0x4c6438, 8) COPY (ram, 0x4c6438, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
