[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x6f00, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(ram, 0x2bc250, 8) INDIRECT (ram, 0x2bc250, 8) , (const, 0x50, 4), (ram, 0x2bc250, 8) INDIRECT (ram, 0x2bc250, 8) , (const, 0x42, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (register, 0x30, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x50, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24d218, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x257800, 8) , (register, 0x38, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x100001cc, 16) , (unique, 0x1000018c, 8), (unique, 0x100001cc, 16) CAST (unique, 0x1000010b, 16), (unique, 0x1000010b, 16) INT_ADD (unique, 0x1000017c, 16) , (stack, 0xffffffffffffff38, 8), (unique, 0x1000017c, 16) INT_LEFT (unique, 0x1000016c, 16) , (const, 0x40, 16), (unique, 0x1000016c, 16) INT_SEXT (unique, 0x100001c4, 8), (unique, 0x100001c4, 8) CAST (register, 0x30, 8), (unique, 0x1000018c, 8) COPY (ram, 0x2bc250, 8)]
[(register, 0x28, 4) COPY (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x24d1e5, 1)]
[(register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x5, 8) , (unique, 0x10000124, 8) , (unique, 0x100001dc, 8) , (unique, 0x1000011c, 8) , (unique, 0x100001e4, 8) , (stack, 0x18, 16), (unique, 0x100001e4, 8) CAST (unique, 0x3800, 8), (unique, 0x100001dc, 8) CAST (unique, 0x3800, 8), (unique, 0x10000124, 8) PTRSUB (const, 0x0, 8) , (const, 0x24cfc0, 8), (unique, 0x1000011c, 8) PTRSUB (const, 0x0, 8) , (const, 0x24cf30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x95, 4)]
[(ram, 0x2bc250, 8) INDIRECT (ram, 0x2bc250, 8) , (const, 0xa7, 4), (ram, 0x2bc250, 8) INDIRECT (ram, 0x2bc250, 8) , (const, 0x95, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff68, 8) COPY (stack, 0x28, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff78, 8) COPY (stack, 0x10, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff80, 8) COPY (stack, 0x8, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x10000194, 8) , (const, 0x95, 4), (unique, 0x10000194, 8) COPY (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x1000019c, 8) , (const, 0x95, 4), (unique, 0x1000019c, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100001a4, 8) , (const, 0x95, 4), (unique, 0x100001a4, 8) COPY (register, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100001ac, 8) , (const, 0x95, 4), (unique, 0x100001ac, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100001b4, 8) , (const, 0x95, 4), (unique, 0x100001b4, 8) COPY (register, 0x80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x95, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (stack, 0xffffffffffffff40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffff40, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff40, 8) INDIRECT (register, 0x0, 8) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x28, 4)]
[(ram, 0x2bc250, 8) INDIRECT (ram, 0x2bc250, 8) , (const, 0xc2, 4), (ram, 0x2bc250, 8) MULTIEQUAL (ram, 0x2bc250, 8) , (ram, 0x2bc250, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x24d21f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe1, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2bc250, 8) COPY (ram, 0x2bc250, 8), (ram, 0x2bc250, 8) INDIRECT (ram, 0x2bc250, 8) , (const, 0xe1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x2bc250, 8) COPY (ram, 0x2bc250, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x28, 4)]
