[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x6f00, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(ram, 0x293d20, 8) INDIRECT (ram, 0x293d20, 8) , (const, 0x32, 4), (ram, 0x293d20, 8) INDIRECT (ram, 0x293d20, 8) , (const, 0x2b, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x100001cf, 8) , (const, 0x32, 4), (unique, 0x100001cf, 8) COPY (register, 0x80, 8)]
[(register, 0x0, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x22c795, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x235f60, 8) , (register, 0x38, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x100001df, 16) , (unique, 0x100001a7, 8), (unique, 0x100001df, 16) CAST (unique, 0x100000ea, 16), (unique, 0x100000ea, 16) INT_ADD (unique, 0x10000197, 16) , (unique, 0x100000fa, 12), (unique, 0x10000197, 16) INT_LEFT (unique, 0x10000187, 16) , (const, 0x60, 16), (unique, 0x10000187, 16) INT_SEXT (stack, 0xffffffffffffff64, 4), (unique, 0x100000fa, 12) INT_ADD (unique, 0x1000017b, 12) , (stack, 0xffffffffffffff58, 8), (unique, 0x1000017b, 12) INT_LEFT (unique, 0x1000016f, 12) , (const, 0x40, 12), (unique, 0x1000016f, 12) INT_SEXT (stack, 0xffffffffffffff60, 4), (stack, 0xffffffffffffff64, 4) SUBPIECE (unique, 0x10000167, 8) , (const, 0x0, 4), (unique, 0x10000167, 8) INT_RIGHT (unique, 0x100001d7, 8) , (const, 0x20, 4), (unique, 0x100001d7, 8) CAST (register, 0x80, 8), (stack, 0xffffffffffffff60, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (unique, 0x100001a7, 8) COPY (ram, 0x293d20, 8)]
[(ram, 0x293d20, 8) INDIRECT (ram, 0x293d20, 8) , (const, 0x8b, 4), (ram, 0x293d20, 8) INDIRECT (ram, 0x293d20, 8) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (register, 0x0, 4) , (const, 0x8b, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x5, 8) , (unique, 0x1000011f, 8) , (unique, 0x100001ef, 8) , (unique, 0x10000117, 8) , (unique, 0x100001f7, 8) , (stack, 0x18, 16), (unique, 0x100001f7, 8) CAST (unique, 0x3800, 8), (unique, 0x100001ef, 8) CAST (unique, 0x3800, 8), (unique, 0x1000011f, 8) PTRSUB (const, 0x0, 8) , (const, 0x22c5b0, 8), (unique, 0x10000117, 8) PTRSUB (const, 0x0, 8) , (const, 0x22c540, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000147, 8), (unique, 0x10000147, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x7b, 4), (stack, 0xffffffffffffff78, 8) COPY (stack, 0x28, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x7b, 4), (stack, 0xffffffffffffff88, 8) COPY (stack, 0x10, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x7b, 4), (stack, 0xffffffffffffff90, 8) COPY (stack, 0x8, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100001af, 8) , (const, 0x7b, 4), (unique, 0x100001af, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100001b7, 8) , (const, 0x7b, 4), (unique, 0x100001b7, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100001bf, 8) , (const, 0x7b, 4), (unique, 0x100001bf, 8) COPY (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100001c7, 8) , (const, 0x7b, 4), (unique, 0x100001c7, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x7b, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(ram, 0x293d20, 8) COPY (ram, 0x293d20, 8), (ram, 0x293d20, 8) INDIRECT (ram, 0x293d20, 8) , (const, 0x9c, 4), (ram, 0x293d20, 8) MULTIEQUAL (ram, 0x293d20, 8) , (ram, 0x293d20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffff60, 4)]
