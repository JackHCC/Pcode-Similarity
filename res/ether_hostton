[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x239740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef6f8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf5, 4)]
[(ram, 0x4ef6f0, 8) INDIRECT (ram, 0x4ef6f0, 8) , (const, 0xf5, 4)]
[(ram, 0x4ef6f8, 8) INDIRECT (ram, 0x4ef6f8, 8) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffb98, 8) INDIRECT (stack, 0xfffffffffffffb98, 8) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffbb0, 4) INDIRECT (stack, 0xfffffffffffffbb0, 4) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffbb4, 2) INDIRECT (stack, 0xfffffffffffffbb4, 2) , (const, 0xf5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xf5, 4)]
[ ---  CBRANCH (ram, 0x239770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24b520, 8) , (unique, 0x3800, 8) , (unique, 0x100000a4, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x100000a4, 8) COPY (const, 0x2b6abd, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb98, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffba0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4ef6f8, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x2396f3, 1)]
[(stack, 0xfffffffffffffb98, 8) COPY (ram, 0x4ef6f8, 8)]
[(stack, 0xfffffffffffffba0, 8) COPY (ram, 0x4ef6f0, 8)]
[ ---  CBRANCH (ram, 0x2396ee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef6f8, 8) , (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffffbb4, 2) MULTIEQUAL (stack, 0xfffffffffffffbb4, 2) , (stack, 0xfffffffffffffbb4, 2)]
[(stack, 0xfffffffffffffbb0, 4) MULTIEQUAL (stack, 0xfffffffffffffbb0, 4) , (stack, 0xfffffffffffffbb0, 4)]
[(register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffba0, 8)]
[(register, 0x28, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb98, 8)]
[(register, 0x10, 8) PTRADD (ram, 0x4eae68, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffba8, 8)]
[(unique, 0x1000010e, 8) COPY (stack, 0xfffffffffffffba0, 8), (stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(unique, 0x10000116, 8) COPY (stack, 0xfffffffffffffb98, 8), (stack, 0xfffffffffffffb98, 8) MULTIEQUAL (stack, 0xfffffffffffffb98, 8) , (stack, 0xfffffffffffffb98, 8)]
[ ---  BRANCH (ram, 0x2396b9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x89, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x89, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef6f0, 8) INDIRECT (ram, 0x4ef6f0, 8) , (const, 0x89, 4), (ram, 0x4ef6f0, 8) INDIRECT (ram, 0x4ef6f0, 8) , (const, 0x6b, 4), (ram, 0x4ef6f0, 8) MULTIEQUAL (unique, 0x1000010e, 8) , (ram, 0x4ef6f0, 8)]
[(ram, 0x4ef6f8, 8) INDIRECT (ram, 0x4ef6f8, 8) , (const, 0x89, 4), (ram, 0x4ef6f8, 8) INDIRECT (ram, 0x4ef6f8, 8) , (const, 0x6b, 4), (ram, 0x4ef6f8, 8) MULTIEQUAL (unique, 0x10000116, 8) , (ram, 0x4ef6f8, 8)]
[(stack, 0xfffffffffffffb98, 8) INDIRECT (stack, 0xfffffffffffffb98, 8) , (const, 0x89, 4), (stack, 0xfffffffffffffb98, 8) INDIRECT (stack, 0xfffffffffffffb98, 8) , (const, 0x6b, 4), (stack, 0xfffffffffffffb98, 8) MULTIEQUAL (stack, 0xfffffffffffffb98, 8) , (stack, 0xfffffffffffffb98, 8)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x89, 4), (stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0x6b, 4), (stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffbb0, 4) INDIRECT (stack, 0xfffffffffffffbb0, 4) , (const, 0x89, 4), (stack, 0xfffffffffffffbb0, 4) INDIRECT (stack, 0xfffffffffffffbb0, 4) , (const, 0x6b, 4), (stack, 0xfffffffffffffbb0, 4) MULTIEQUAL (stack, 0xfffffffffffffbb0, 4) , (stack, 0xfffffffffffffbb0, 4)]
[(stack, 0xfffffffffffffbb4, 2) INDIRECT (stack, 0xfffffffffffffbb4, 2) , (const, 0x89, 4), (stack, 0xfffffffffffffbb4, 2) INDIRECT (stack, 0xfffffffffffffbb4, 2) , (const, 0x6b, 4), (stack, 0xfffffffffffffbb4, 2) MULTIEQUAL (stack, 0xfffffffffffffbb4, 2) , (stack, 0xfffffffffffffbb4, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x89, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2396b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0x28, 8) , (unique, 0x100000ac, 8) , (const, 0x0, 8) , (register, 0xa0, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000ac, 8) COPY (const, 0x2b6abd, 8), (register, 0x0, 4) CALLIND (stack, 0xfffffffffffffba0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (const, 0x400, 8) , (register, 0x10, 8), (stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[ ---  CBRANCH (ram, 0x239720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000011e, 8) , (stack, 0xfffffffffffffbb0, 4), (unique, 0x1000011e, 8) CAST (unique, 0x100000e4, 8), (unique, 0x100000e4, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xdb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd4, 4)]
[(ram, 0x4ef6f0, 8) INDIRECT (ram, 0x4ef6f0, 8) , (const, 0xdb, 4), (ram, 0x4ef6f0, 8) INDIRECT (ram, 0x4ef6f0, 8) , (const, 0xd4, 4)]
[(ram, 0x4ef6f8, 8) INDIRECT (ram, 0x4ef6f8, 8) , (const, 0xdb, 4), (ram, 0x4ef6f8, 8) INDIRECT (ram, 0x4ef6f8, 8) , (const, 0xd4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000126, 8) , (stack, 0xfffffffffffffbb4, 2), (unique, 0x10000126, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000ec, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x100000ec, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2396f3, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb98, 8) MULTIEQUAL (stack, 0xfffffffffffffb98, 8) , (stack, 0xfffffffffffffb98, 8)]
[(ram, 0x4ef6f8, 8) MULTIEQUAL (ram, 0x4ef6f8, 8) , (ram, 0x4ef6f8, 8)]
[(ram, 0x4ef6f0, 8) MULTIEQUAL (ram, 0x4ef6f0, 8) , (ram, 0x4ef6f0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffba0, 8) MULTIEQUAL (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8) , (stack, 0xfffffffffffffba0, 8)]
[(stack, 0xfffffffffffffb98, 8) MULTIEQUAL (stack, 0xfffffffffffffb98, 8) , (stack, 0xfffffffffffffb98, 8) , (stack, 0xfffffffffffffb98, 8)]
[(ram, 0x4ef6f8, 8) MULTIEQUAL (ram, 0x4ef6f8, 8) , (ram, 0x4ef6f8, 8) , (ram, 0x4ef6f8, 8)]
[(ram, 0x4ef6f0, 8) MULTIEQUAL (ram, 0x4ef6f0, 8) , (ram, 0x4ef6f0, 8) , (ram, 0x4ef6f0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x23978d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ef6f0, 8) COPY (ram, 0x4ef6f0, 8)]
[(ram, 0x4ef6f8, 8) COPY (ram, 0x4ef6f8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xfffffffffffffb98, 8) INDIRECT (stack, 0xfffffffffffffb98, 8) , (const, 0xc9, 4)]
[(stack, 0xfffffffffffffba0, 8) INDIRECT (stack, 0xfffffffffffffba0, 8) , (const, 0xc9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc9, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc9, 4)]
[(ram, 0x4ef6f0, 8) COPY (ram, 0x4ef6f0, 8), (ram, 0x4ef6f0, 8) INDIRECT (ram, 0x4ef6f0, 8) , (const, 0xc9, 4)]
[(ram, 0x4ef6f8, 8) COPY (ram, 0x4ef6f8, 8), (ram, 0x4ef6f8, 8) INDIRECT (ram, 0x4ef6f8, 8) , (const, 0xc9, 4)]
[ ---  RETURN (const, 0x1, 4)]
