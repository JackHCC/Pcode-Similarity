[(register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3d, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x36, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x3d, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x36, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x3d, 4), (stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x36, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x3d, 4), (stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x36, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x3d, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x36, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x36, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100001d5, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36, 4)]
[ ---  CBRANCH (ram, 0x269788, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1df920, 8) , (register, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0xffffffff, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000245, 8), (unique, 0x10000245, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d5, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x26975b, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x53, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x53, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x53, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x269740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1dfbe0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bd, 4)]
[ ---  CALL (ram, 0x1dfbb0, 8) , (register, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x19, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024d, 8) , (register, 0x8, 4), (unique, 0x1000024d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bd, 4)]
[ ---  CBRANCH (ram, 0x269652, 1) , (unique, 0x10000163, 1), (unique, 0x10000163, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000185, 8), (unique, 0x10000185, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 8) COPY (const, 0x6, 8)]
[(unique, 0x100001fd, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x13, 8)]
[(unique, 0x1000022d, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b57de, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000022d, 8) , (unique, 0x10000235, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100001fd, 8) , (unique, 0x10000205, 8)]
[ ---  CBRANCH (ram, 0x269663, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000205, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x1000019d, 8) , (const, 0x1, 8), (unique, 0x1000019d, 8) INT_ADD (unique, 0x100000ca, 8) , (const, 0x1, 8), (unique, 0x100000ca, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000235, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000195, 8) , (const, 0x1, 8), (unique, 0x10000195, 8) INT_ADD (unique, 0x100000c2, 8) , (const, 0x1, 8), (unique, 0x100000c2, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x269661, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 8) COPY (const, 0x7, 8)]
[(unique, 0x100001ed, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000021d, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b57e4, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000021d, 8) , (unique, 0x10000225, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100001ed, 8) , (unique, 0x100001f5, 8)]
[ ---  CBRANCH (ram, 0x269672, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100001f5, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001ad, 8) , (const, 0x1, 8), (unique, 0x100001ad, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0x1, 8), (unique, 0x100000e3, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000225, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001a5, 8) , (const, 0x1, 8), (unique, 0x100001a5, 8) INT_ADD (unique, 0x100000db, 8) , (const, 0x1, 8), (unique, 0x100000db, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x269670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 8) COPY (const, 0x7, 8)]
[(unique, 0x100001dd, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000020d, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b57eb, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000020d, 8) , (unique, 0x10000215, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100001dd, 8) , (unique, 0x100001e5, 8)]
[ ---  CBRANCH (ram, 0x269685, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100001e5, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001bd, 8) , (const, 0x1, 8), (unique, 0x100001bd, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0x1, 8), (unique, 0x100000fc, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000215, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001b5, 8) , (const, 0x1, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x100000f4, 8) , (const, 0x1, 8), (unique, 0x100000f4, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x269683, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe6, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xe6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe6, 4)]
[ ---  CBRANCH (ram, 0x26979c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b3, 4)]
[ ---  CALL (ram, 0x1dfbb0, 8) , (register, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x22, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1af, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000255, 8) , (const, 0x22, 4), (unique, 0x10000255, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1af, 4)]
[ ---  BRANCH (ram, 0x26975b, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CALL (ram, 0x121070, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x10f, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x105, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x10f, 4), (stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x105, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x105, 4)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (register, 0x38, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x269630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x171, 4)]
[ ---  CALL (ram, 0x1dfbb0, 8) , (register, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000025d, 8) , (register, 0x8, 4), (unique, 0x1000025d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x171, 4)]
[ ---  BRANCH (ram, 0x26975b, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x2697c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ab, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ab, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
