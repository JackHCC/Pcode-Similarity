[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000030a, 8), (unique, 0x1000030a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[(unique, 0x100002c2, 8) COPY (unique, 0x10000312, 8), (unique, 0x10000312, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edbc8, 8)]
[(register, 0x8, 8) COPY (const, 0xb, 8)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc08, 8) MULTIEQUAL (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8)]
[(ram, 0x4edbd8, 8) MULTIEQUAL (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002c2, 8) , (unique, 0x100002ca, 8)]
[ ---  CBRANCH (ram, 0x1d357c, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x46, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x46, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x46, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x46, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x46, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x46, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x46, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100002ca, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1d3579, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x4e, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x4e, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x4e, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x4e, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x4e, 4), (ram, 0x4edbc0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x4e, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x4e, 4), (ram, 0x4edbf0, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3c79, 8)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x4e, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002f2, 8) , (const, 0x4e, 4), (unique, 0x100002f2, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffb6, 2) INDIRECT (stack, 0xffffffffffffffb6, 2) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4e, 4)]
[ ---  CBRANCH (ram, 0x1d3610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x1d2f90, 8) , (unique, 0x3800, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffa0, 8)]
[ ---  CBRANCH (ram, 0x1d359d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffa0, 8)]
[ ---  CBRANCH (ram, 0x1d3720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x3100, 4) , (const, 0xfd, 4), (unique, 0x3100, 4) INT_SUB (register, 0x0, 4) , (const, 0x2b, 4)]
[(register, 0x28, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x100002e2, 8) COPY (stack, 0xffffffffffffffa0, 8)]
[ ---  CBRANCH (ram, 0x1d363d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4)]
[(unique, 0x3880, 8) INT_ADD (unique, 0x10000216, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x10000216, 8) INT_MULT (unique, 0x100000e2, 8) , (const, 0x2, 8), (unique, 0x100000e2, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1)]
[(unique, 0x100002da, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x3880, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13a, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x13a, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x13a, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x13a, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x13a, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x13a, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x13a, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x13a, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x13a, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002fa, 8) , (const, 0x13a, 4), (unique, 0x100002fa, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002da, 8) , (unique, 0x100002e2, 8)]
[(stack, 0xffffffffffffffb6, 2) INDIRECT (stack, 0xffffffffffffffb6, 2) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x13a, 4), (stack, 0xffffffffffffffb8, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x13a, 4), (stack, 0xffffffffffffffba, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x13a, 4), (stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13a, 4)]
[ ---  CBRANCH (ram, 0x1d38a8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x17b110, 8) , (register, 0xb0, 8) , (unique, 0x10000269, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x10000269, 8) COPY (const, 0x2b5204, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffba, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb6, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002da, 8) , (unique, 0x100002e2, 8)]
[(ram, 0x4edbd8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000023e, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4edc08, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d35c2, 1)]
[(register, 0x0, 4) INT_ZEXT (stack, 0xffffffffffffffb8, 2)]
[ ---  CBRANCH (ram, 0x1d36bc, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3b, 2) , (stack, 0xffffffffffffffb8, 2)]
[(register, 0x0, 4) COPY (const, 0x3b, 4)]
[(register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x3c, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x10, 4) INT_ZEXT (stack, 0xffffffffffffffb6, 2)]
[ ---  CBRANCH (ram, 0x1d36c5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x18, 2) , (stack, 0xffffffffffffffb6, 2)]
[(register, 0x10, 4) COPY (const, 0x18, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_MULT (register, 0x10, 4) , (const, 0xe10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) INT_ZEXT (stack, 0xffffffffffffffba, 2)]
[ ---  CBRANCH (ram, 0x1d36d8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3b, 2) , (stack, 0xffffffffffffffba, 2)]
[(register, 0x10, 4) COPY (const, 0x3b, 4)]
[(register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x28, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1d3740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ee, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x1ee, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x1ee, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x1ee, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x1ee, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x1ee, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (register, 0x0, 8) , (const, 0x1ee, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x1ee, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x1ee, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x1ee, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (register, 0xb0, 8) , (const, 0x1ee, 4)]
[(stack, 0xffffffffffffffb6, 2) INDIRECT (stack, 0xffffffffffffffb6, 2) , (const, 0x1ee, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x1ee, 4)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x1ee, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x1ee, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ee, 4)]
[ ---  CBRANCH (ram, 0x1d3880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x1d2f90, 8) , (unique, 0x3800, 8) , (const, 0x1, 8)]
[(register, 0x90, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x100002d2, 8) COPY (stack, 0xffffffffffffffa0, 8)]
[ ---  CBRANCH (ram, 0x1d3782, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) INT_AND (register, 0x10, 1) , (const, 0xfd, 1), (register, 0x10, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0xb0, 8) PTRADD (stack, 0xffffffffffffffa0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3880, 8) INT_ADD (unique, 0x1000022e, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x1000022e, 8) INT_MULT (unique, 0x10000160, 8) , (const, 0x2, 8), (unique, 0x10000160, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0x3880, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26d, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x26d, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x26d, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x26d, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x26d, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x26d, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x26d, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x26d, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x26d, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x26d, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10000302, 8) , (const, 0x26d, 4), (unique, 0x10000302, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002d2, 8) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffb6, 2) INDIRECT (stack, 0xffffffffffffffb6, 2) , (const, 0x26d, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x26d, 4), (stack, 0xffffffffffffffb8, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x26d, 4), (stack, 0xffffffffffffffba, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x26d, 4), (stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26d, 4)]
[ ---  CBRANCH (ram, 0x1d38d6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x17b110, 8) , (register, 0xb0, 8) , (unique, 0x10000271, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x10000271, 8) COPY (const, 0x2b5204, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002d2, 8) , (register, 0xb0, 8)]
[(unique, 0x3200, 8) INT_ADD (ram, 0x4edbd8, 8) , (const, 0xe10, 8)]
[ ---  BRANCH (ram, 0x1d3818, 1)]
[(register, 0x0, 4) INT_ZEXT (stack, 0xffffffffffffffb8, 2)]
[ ---  CBRANCH (ram, 0x1d37ee, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3b, 2) , (stack, 0xffffffffffffffb8, 2)]
[(register, 0x0, 4) COPY (const, 0x3b, 4)]
[(register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x3c, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x10, 4) INT_ZEXT (stack, 0xffffffffffffffb6, 2)]
[ ---  CBRANCH (ram, 0x1d37f7, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x18, 2) , (stack, 0xffffffffffffffb6, 2)]
[(register, 0x10, 4) COPY (const, 0x18, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_MULT (register, 0x10, 4) , (const, 0xe10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) INT_ZEXT (stack, 0xffffffffffffffba, 2)]
[ ---  CBRANCH (ram, 0x1d380a, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3b, 2) , (stack, 0xffffffffffffffba, 2)]
[(register, 0x10, 4) COPY (const, 0x3b, 4)]
[(register, 0x8, 8) INT_MULT (register, 0x8, 8) , (register, 0x90, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x3400, 4), (unique, 0x3400, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(ram, 0x4edc08, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3200, 8)]
[ ---  CBRANCH (ram, 0x1d3838, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (stack, 0xffffffffffffffbc, 4)]
[ ---  CBRANCH (ram, 0x1d3880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1)]
[ ---  CBRANCH (ram, 0x1d3880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x320, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x320, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x320, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x320, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x320, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x320, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x320, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x320, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (register, 0xb0, 8) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x320, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x320, 4)]
[ ---  CALL (ram, 0x1d5570, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbd8, 8)]
[ ---  CBRANCH (ram, 0x1d3880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f06d8, 4) , (const, 0x0, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x320, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x330, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x330, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x330, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x330, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x330, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x330, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x330, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x330, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x330, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x330, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x330, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x330, 4)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x330, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x330, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x330, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d35e9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x340, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x340, 4), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x340, 4), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x340, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x340, 4), (ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x340, 4), (ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x340, 4), (ram, 0x4edbd8, 8) MULTIEQUAL (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x340, 4), (ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x340, 4), (ram, 0x4edc08, 8) MULTIEQUAL (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x340, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x340, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x340, 4), (stack, 0xffffffffffffffb8, 2) MULTIEQUAL (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x340, 4), (stack, 0xffffffffffffffba, 2) MULTIEQUAL (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x340, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x340, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1d359d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x1d3130, 8) , (unique, 0x3800, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34f, 4)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x34f, 4)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x34f, 4)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x34f, 4)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x34f, 4)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x34f, 4)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x34f, 4)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x34f, 4)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x34f, 4)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x34f, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x34f, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0x34f, 4)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0x34f, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x34f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34f, 4)]
[ ---  CALL (ram, 0x1d3130, 8) , (unique, 0x3800, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1d359d, 1)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x1200, 8) COPY (ram, 0x4edbc0, 8)]
[(register, 0x0, 8) INT_2COMP (register, 0x0, 8)]
[(unique, 0x100002ea, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1d35c2, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffba, 2) MULTIEQUAL (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2)]
[(stack, 0xffffffffffffffb8, 2) MULTIEQUAL (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4edc08, 8) , (ram, 0x4edbd8, 8), (ram, 0x4edbd8, 8) MULTIEQUAL (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8), (ram, 0x4edc08, 8) MULTIEQUAL (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8)]
[(register, 0x0, 8) INT_2COMP (ram, 0x4edbd8, 8), (ram, 0x4edbd8, 8) MULTIEQUAL (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffba, 2) MULTIEQUAL (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2)]
[(stack, 0xffffffffffffffb8, 2) MULTIEQUAL (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0xb0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000031a, 8) , (register, 0x8, 4), (unique, 0x1000031a, 8) CAST (ram, 0x4eaec8, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (unique, 0x1000023e, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000322, 8) , (register, 0x0, 8), (unique, 0x10000322, 8) CAST (ram, 0x4eae48, 8), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x83, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000032a, 8) , (unique, 0x100002b2, 8), (unique, 0x1000032a, 8) CAST (ram, 0x4eae40, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x86, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x83, 4), (unique, 0x100002b2, 8) COPY (ram, 0x4edbc0, 8), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8), (ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x81b, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x81a, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x86, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x83, 4), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x81b, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x81a, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x86, 4), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0x83, 4), (ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x81b, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x81a, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x86, 4), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0x83, 4), (ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x81b, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x81a, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x86, 4), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0x83, 4), (ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x81b, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x81a, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x86, 4), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0x83, 4), (ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x81b, 4), (ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x81a, 4), (ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x86, 4), (ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0x83, 4), (ram, 0x4edbd8, 8) MULTIEQUAL (ram, 0x4edbd8, 8) , (register, 0x0, 8) , (ram, 0x4edbd8, 8)]
[(ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x81b, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x81a, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x86, 4), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0x83, 4), (ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (register, 0x1200, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x81b, 4), (ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x81a, 4), (ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x86, 4), (ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0x83, 4), (ram, 0x4edc08, 8) MULTIEQUAL (ram, 0x4edc08, 8) , (unique, 0x100002ea, 8) , (ram, 0x4edc08, 8)]
[(ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x81b, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x81a, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x86, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0x83, 4), (ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000332, 8) , (unique, 0x100002ba, 8), (unique, 0x10000332, 8) CAST (unique, 0x10000252, 8), (unique, 0x10000252, 8) PTRADD (unique, 0x100002aa, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002aa, 8) COPY (ram, 0x4eae40, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x86, 4), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0x83, 4), (unique, 0x100002ba, 8) COPY (ram, 0x4edbf0, 8), (ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8), (ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (register, 0x1200, 8) , (ram, 0x4edbf0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffba, 2) MULTIEQUAL (stack, 0xffffffffffffffba, 2) , (stack, 0xffffffffffffffba, 2)]
[(stack, 0xffffffffffffffb8, 2) MULTIEQUAL (stack, 0xffffffffffffffb8, 2) , (stack, 0xffffffffffffffb8, 2)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f06d8, 4) MULTIEQUAL (ram, 0x4f06d8, 4) , (ram, 0x4f06d8, 4)]
[(ram, 0x4edc08, 8) MULTIEQUAL (ram, 0x4edc08, 8) , (ram, 0x4edc08, 8)]
[(ram, 0x4edbf0, 8) MULTIEQUAL (ram, 0x4edbf0, 8) , (ram, 0x4edbf0, 8)]
[(ram, 0x4edbd8, 8) MULTIEQUAL (ram, 0x4edbd8, 8) , (ram, 0x4edbd8, 8)]
[(ram, 0x4edbc0, 8) MULTIEQUAL (ram, 0x4edbc0, 8) , (ram, 0x4edbc0, 8)]
[(ram, 0x4edbb0, 8) MULTIEQUAL (ram, 0x4edbb0, 8) , (ram, 0x4edbb0, 8)]
[(ram, 0x4eaec8, 8) MULTIEQUAL (ram, 0x4eaec8, 8) , (ram, 0x4eaec8, 8)]
[(ram, 0x4eae48, 8) MULTIEQUAL (ram, 0x4eae48, 8) , (ram, 0x4eae48, 8)]
[(ram, 0x4eae40, 8) MULTIEQUAL (ram, 0x4eae40, 8) , (ram, 0x4eae40, 8)]
[ ---  CBRANCH (ram, 0x1d38f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000033a, 8), (unique, 0x1000033a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae40, 8) COPY (ram, 0x4eae40, 8)]
[(ram, 0x4eae48, 8) COPY (ram, 0x4eae48, 8)]
[(ram, 0x4eaec8, 8) COPY (ram, 0x4eaec8, 8)]
[(ram, 0x4edbb0, 8) COPY (ram, 0x4edbb0, 8)]
[(ram, 0x4edbc0, 8) COPY (ram, 0x4edbc0, 8)]
[(ram, 0x4edbd8, 8) COPY (ram, 0x4edbd8, 8)]
[(ram, 0x4edbf0, 8) COPY (ram, 0x4edbf0, 8)]
[(ram, 0x4edc08, 8) COPY (ram, 0x4edc08, 8)]
[(ram, 0x4f06d8, 4) COPY (ram, 0x4f06d8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffb8, 2) INDIRECT (stack, 0xffffffffffffffb8, 2) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffba, 2) INDIRECT (stack, 0xffffffffffffffba, 2) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae40, 8) COPY (ram, 0x4eae40, 8), (ram, 0x4eae40, 8) INDIRECT (ram, 0x4eae40, 8) , (const, 0xb4, 4)]
[(ram, 0x4eae48, 8) COPY (ram, 0x4eae48, 8), (ram, 0x4eae48, 8) INDIRECT (ram, 0x4eae48, 8) , (const, 0xb4, 4)]
[(ram, 0x4eaec8, 8) COPY (ram, 0x4eaec8, 8), (ram, 0x4eaec8, 8) INDIRECT (ram, 0x4eaec8, 8) , (const, 0xb4, 4)]
[(ram, 0x4edbb0, 8) COPY (ram, 0x4edbb0, 8), (ram, 0x4edbb0, 8) INDIRECT (ram, 0x4edbb0, 8) , (const, 0xb4, 4)]
[(ram, 0x4edbc0, 8) COPY (ram, 0x4edbc0, 8), (ram, 0x4edbc0, 8) INDIRECT (ram, 0x4edbc0, 8) , (const, 0xb4, 4)]
[(ram, 0x4edbd8, 8) COPY (ram, 0x4edbd8, 8), (ram, 0x4edbd8, 8) INDIRECT (ram, 0x4edbd8, 8) , (const, 0xb4, 4)]
[(ram, 0x4edbf0, 8) COPY (ram, 0x4edbf0, 8), (ram, 0x4edbf0, 8) INDIRECT (ram, 0x4edbf0, 8) , (const, 0xb4, 4)]
[(ram, 0x4edc08, 8) COPY (ram, 0x4edc08, 8), (ram, 0x4edc08, 8) INDIRECT (ram, 0x4edc08, 8) , (const, 0xb4, 4)]
[(ram, 0x4f06d8, 4) COPY (ram, 0x4f06d8, 4), (ram, 0x4f06d8, 4) INDIRECT (ram, 0x4f06d8, 4) , (const, 0xb4, 4)]
[ ---  RETURN (const, 0x1, 4)]
