[(register, 0x18, 8) COPY (const, 0x1000, 8)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffef38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef8, 8)]
[(unique, 0x100002f3, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefc8, 8)]
[(unique, 0x1000031b, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  BRANCH (ram, 0x24223d, 1)]
[(stack, 0xffffffffffffef58, 4) MULTIEQUAL (stack, 0xffffffffffffef58, 4) , (unique, 0x10000295, 4)]
[(stack, 0xffffffffffffef54, 4) MULTIEQUAL (stack, 0xffffffffffffef54, 4) , (unique, 0x10000291, 4)]
[(stack, 0xffffffffffffef50, 4) MULTIEQUAL (stack, 0xffffffffffffef50, 4) , (unique, 0x1000028d, 4)]
[(stack, 0xffffffffffffef10, 8) MULTIEQUAL (stack, 0xffffffffffffef10, 8) , (unique, 0x10000285, 8)]
[(ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (unique, 0x10000281, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000031b, 8) , (unique, 0x10000323, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000271, 8)]
[(register, 0xa0, 8) COPY (unique, 0x10000303, 8), (unique, 0x10000303, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8)]
[ ---  CBRANCH (ram, 0x242220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100002a7, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x36, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x36, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x242253, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0x36, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x36, 4)]
[(stack, 0xffffffffffffef54, 4) INDIRECT (stack, 0xffffffffffffef54, 4) , (const, 0x36, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x36, 4)]
[(unique, 0x100002d3, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x36, 4)]
[ ---  CBRANCH (ram, 0x242380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x242480, 8) , (register, 0x38, 4) , (register, 0xa0, 8) , (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  CBRANCH (ram, 0x242392, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x19, 4)]
[(register, 0x0, 4) COPY (const, 0x16, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21e, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x21e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033b, 8) , (register, 0x0, 4), (unique, 0x1000033b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x24229c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x50, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x50, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x242268, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffef54, 4) INDIRECT (stack, 0xffffffffffffef54, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x50, 4)]
[ ---  CBRANCH (ram, 0x2422d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18de30, 8) , (register, 0xa0, 8) , (const, 0x0, 4) , (register, 0x18, 8)]
[(unique, 0x100000d5, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe5, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x2422de, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0xe5, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0xe5, 4)]
[ ---  CBRANCH (ram, 0x242301, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffef54, 4), (register, 0x0, 4) CALL (ram, 0x1cc7c0, 8), (stack, 0xffffffffffffef54, 4) INDIRECT (stack, 0xffffffffffffef54, 4) , (const, 0xe5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xfd, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xfd, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x2422f6, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0xfd, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x24233b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f7a40, 8) , (register, 0xa0, 8) , (register, 0x0, 4) , (stack, 0xffffffffffffef58, 4)]
[(stack, 0xffffffffffffef58, 4) MULTIEQUAL (stack, 0xffffffffffffef58, 4) , (stack, 0xffffffffffffef58, 4)]
[(stack, 0xffffffffffffef50, 4) MULTIEQUAL (stack, 0xffffffffffffef50, 4) , (stack, 0xffffffffffffef50, 4)]
[(stack, 0xffffffffffffef10, 8) MULTIEQUAL (stack, 0xffffffffffffef10, 8) , (stack, 0xffffffffffffef10, 8)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100002db, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000030b, 4) COPY (ram, 0x4c3314, 4), (ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[ ---  CBRANCH (ram, 0x2423ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c3314, 4) , (const, 0xffffffff, 4), (ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x1b1, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x1b1, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x2423b7, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0x1b1, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x1b1, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x1b1, 4)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffef18, 8)]
[ ---  CBRANCH (ram, 0x2423cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x1cd4f0, 8) , (const, 0x45, 4)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001e8, 8) , (unique, 0x10000159, 8) , (const, 0x1, 8), (unique, 0x100001e8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef8, 8), (unique, 0x10000159, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000200, 8) , (unique, 0x10000159, 8) , (const, 0x1, 8), (unique, 0x10000200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef8, 8), (unique, 0x10000159, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000343, 8) , (const, 0x2423f5, 8), (unique, 0x10000343, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000238, 8) , (unique, 0x10000230, 8) , (const, 0x1, 8), (unique, 0x10000238, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef8, 8), (unique, 0x10000230, 8) INT_ADD (unique, 0x10000159, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000159, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e6, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x1e6, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x1e6, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x1e5, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x1e6, 4), (stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x1e5, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x1e6, 4), (stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x1e5, 4)]
[ ---  CALL (ram, 0x1c9800, 8) , (unique, 0x10000198, 8) , (unique, 0x3200, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x3200, 8), (unique, 0x10000198, 8) COPY (const, 0x28c5fa, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000175, 8) , (unique, 0x10000159, 8) , (const, 0x1, 8), (unique, 0x10000175, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffef00, 8), (unique, 0x10000159, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffef10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24241d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffef10, 8) , (const, 0x0, 8), (stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0x1e6, 4), (stack, 0xffffffffffffef10, 8) INDIRECT (stack, 0xffffffffffffef10, 8) , (const, 0x1e5, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffef10, 8) , (const, 0x10, 8)]
[(unique, 0x100002e3, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000030f, 4) COPY (ram, 0x4c3314, 4), (ram, 0x4c3314, 4) MULTIEQUAL (unique, 0xbc80, 4) , (ram, 0x4c3314, 4)]
[ ---  CBRANCH (ram, 0x242310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c3314, 4) , (const, 0xffffffff, 4), (ram, 0x4c3314, 4) MULTIEQUAL (unique, 0xbc80, 4) , (ram, 0x4c3314, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000034b, 8) , (const, 0x242418, 8), (unique, 0x1000034b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000250, 8) , (unique, 0x10000248, 8) , (const, 0x1, 8), (unique, 0x10000250, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef8, 8), (unique, 0x10000248, 8) INT_ADD (unique, 0x10000159, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x206, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x206, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x206, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x205, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x206, 4), (stack, 0xffffffffffffef50, 4) INDIRECT (stack, 0xffffffffffffef50, 4) , (const, 0x205, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x206, 4), (stack, 0xffffffffffffef58, 4) INDIRECT (stack, 0xffffffffffffef58, 4) , (const, 0x205, 4)]
[(register, 0x0, 4) CALL (ram, 0x1cc7e0, 8)]
[(unique, 0x100002eb, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x242310, 1)]
[(stack, 0xffffffffffffef50, 4) MULTIEQUAL (stack, 0xffffffffffffef50, 4) , (stack, 0xffffffffffffef50, 4) , (stack, 0xffffffffffffef50, 4)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100002db, 8) , (unique, 0x100002e3, 8) , (unique, 0x100002eb, 8)]
[(register, 0x30, 4) COPY (const, 0x180, 4)]
[ ---  CBRANCH (ram, 0x24239d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (stack, 0xffffffffffffef58, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000030b, 4) , (unique, 0x1000030f, 4) , (register, 0x0, 4), (stack, 0xffffffffffffef58, 4) MULTIEQUAL (stack, 0xffffffffffffef58, 4) , (stack, 0xffffffffffffef58, 4) , (stack, 0xffffffffffffef58, 4)]
[(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x180, 4), (register, 0x30, 4) INT_AND (stack, 0xffffffffffffef50, 4) , (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x242323, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24233b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffef50, 4) , (const, 0x1ff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000353, 8) , (const, 0x242338, 8), (unique, 0x10000353, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14d, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x14d, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x14d, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x14c, 4)]
[(register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) CALL (ram, 0x1f6630, 8) , (register, 0xa0, 8) , (register, 0x30, 4)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2422ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035b, 8) , (const, 0x24234e, 8), (unique, 0x1000035b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x181, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x180, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x181, 4)]
[(ram, 0x4c3314, 4) COPY (ram, 0x4c3314, 4), (ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x181, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (stack, 0xffffffffffffef04, 4), (stack, 0xffffffffffffef04, 4) INDIRECT (stack, 0xffffffffffffef04, 4) , (const, 0x181, 4), (stack, 0xffffffffffffef04, 4) INDIRECT (stack, 0xffffffffffffef04, 4) , (const, 0x180, 4), (stack, 0xffffffffffffef04, 4) COPY (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c3314, 4) COPY (ram, 0x4c3314, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x80, 8)]
[(unique, 0x1000029f, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002a7, 8) MULTIEQUAL (unique, 0x100000d5, 8) , (register, 0x18, 8)]
[(unique, 0x100002af, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100002b7, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(unique, 0x100002bb, 8) MULTIEQUAL (stack, 0xffffffffffffef10, 8) , (stack, 0xffffffffffffef10, 8)]
[(unique, 0x100002c3, 4) MULTIEQUAL (stack, 0xffffffffffffef50, 4) , (stack, 0xffffffffffffef50, 4)]
[(unique, 0x100002c7, 4) MULTIEQUAL (stack, 0xffffffffffffef54, 4) , (stack, 0xffffffffffffef54, 4)]
[(unique, 0x100002cb, 4) MULTIEQUAL (stack, 0xffffffffffffef58, 4) , (stack, 0xffffffffffffef58, 4)]
[ ---  CBRANCH (ram, 0x24222a, 1) , (unique, 0x1000029e, 1), (unique, 0x1000029e, 1) INT_EQUAL (register, 0xa0, 8) , (unique, 0x3200, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000029f, 8) , (const, 0xd8, 4)]
[(ram, 0x4c3314, 4) INDIRECT (unique, 0x100002b7, 4) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xd8, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x242235, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (unique, 0x100002bb, 8) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (unique, 0x100002c3, 4) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffef54, 4) INDIRECT (unique, 0x100002c7, 4) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (unique, 0x100002cb, 4) , (const, 0xd8, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000363, 8), (unique, 0x10000363, 8) CALL (ram, 0x11f7f0, 8) , (register, 0xa0, 8) , (unique, 0x100002a7, 8)]
[(unique, 0x10000333, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x100002af, 8) , (const, 0xd8, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000029f, 8) , (const, 0x73, 4)]
[(ram, 0x4c3314, 4) INDIRECT (unique, 0x100002b7, 4) , (const, 0x73, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x73, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x24227d, 8)]
[(stack, 0xffffffffffffef10, 8) INDIRECT (unique, 0x100002bb, 8) , (const, 0x73, 4)]
[(stack, 0xffffffffffffef50, 4) INDIRECT (unique, 0x100002c3, 4) , (const, 0x73, 4)]
[(stack, 0xffffffffffffef54, 4) INDIRECT (unique, 0x100002c7, 4) , (const, 0x73, 4)]
[(stack, 0xffffffffffffef58, 4) INDIRECT (unique, 0x100002cb, 4) , (const, 0x73, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000036b, 8), (unique, 0x1000036b, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x100002a7, 8)]
[(unique, 0x1000032b, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x100002af, 8) , (const, 0x73, 4)]
[(unique, 0x10000271, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000281, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(unique, 0x10000285, 8) MULTIEQUAL (stack, 0xffffffffffffef10, 8) , (stack, 0xffffffffffffef10, 8)]
[(unique, 0x1000028d, 4) MULTIEQUAL (stack, 0xffffffffffffef50, 4) , (stack, 0xffffffffffffef50, 4)]
[(unique, 0x10000291, 4) MULTIEQUAL (stack, 0xffffffffffffef54, 4) , (stack, 0xffffffffffffef54, 4)]
[(unique, 0x10000295, 4) MULTIEQUAL (stack, 0xffffffffffffef58, 4) , (stack, 0xffffffffffffef58, 4)]
[(unique, 0x100002fb, 8) COPY (unique, 0x10000261, 8), (unique, 0x10000261, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000323, 8) COPY (unique, 0x10000279, 8), (unique, 0x10000279, 8) MULTIEQUAL (unique, 0x1000032b, 8) , (unique, 0x10000333, 8)]
[ ---  CBRANCH (ram, 0x24223a, 1) , (unique, 0x10000260, 1), (unique, 0x10000260, 1) INT_NOTEQUAL (unique, 0x10000261, 8) , (const, 0x0, 8), (unique, 0x10000261, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xb8, 4) COPY (const, 0xc, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000323, 8) , (const, 0x85, 4)]
[(ram, 0x4c3314, 4) INDIRECT (unique, 0x10000281, 4) , (const, 0x85, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000373, 8) , (const, 0xc, 4), (unique, 0x10000373, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000279, 8) , (unique, 0x10000271, 8) , (const, 0x1, 8)]
[(ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000271, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000279, 8) , (unique, 0x100002d3, 8)]
[ ---  CBRANCH (ram, 0x2422a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0x3200, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x93, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x93, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0x93, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x93, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x2422a9, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa3, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0xa3, 4), (ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xa3, 4), (stack, 0xffffffffffffeef0, 8) COPY (const, 0x2422b8, 8)]
[ ---  CBRANCH (ram, 0x242368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1f6df0, 8) , (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2422c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x9, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb0, 4)]
[(ram, 0x4c3314, 4) INDIRECT (ram, 0x4c3314, 4) , (const, 0xb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000383, 8) , (register, 0xb8, 4), (unique, 0x10000383, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c3314, 4) COPY (ram, 0x4c3314, 4), (ram, 0x4c3314, 4) MULTIEQUAL (ram, 0x4c3314, 4) , (ram, 0x4c3314, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
