[(register, 0xb8, 8) COPY (const, 0x1000, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003d5, 8), (unique, 0x100003d5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3200, 8) CAST (unique, 0x100003dd, 8), (unique, 0x100003dd, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffef28, 8)]
[(unique, 0x10000385, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefb8, 8)]
[ ---  BRANCH (ram, 0x2651f2, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffef48, 4) MULTIEQUAL (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4)]
[(stack, 0xffffffffffffef44, 4) MULTIEQUAL (stack, 0xffffffffffffef44, 4) , (stack, 0xffffffffffffef44, 4) , (stack, 0xffffffffffffef44, 4)]
[(stack, 0xffffffffffffef40, 4) MULTIEQUAL (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4)]
[(stack, 0xffffffffffffef00, 8) MULTIEQUAL (stack, 0xffffffffffffef00, 8) , (stack, 0xffffffffffffef00, 8) , (stack, 0xffffffffffffef00, 8)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (unique, 0x3200, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) COPY (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) MULTIEQUAL (unique, 0x10000385, 8) , (unique, 0x1000038d, 8) , (unique, 0x10000395, 8)]
[ ---  CBRANCH (ram, 0x2651d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x4b, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x4b, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x26520c, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x4b, 4)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x4b, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x4b, 4)]
[(stack, 0xffffffffffffef44, 4) INDIRECT (stack, 0xffffffffffffef44, 4) , (const, 0x4b, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x4b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b, 4)]
[(unique, 0x10000375, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4b, 4)]
[ ---  CBRANCH (ram, 0x265388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x265790, 8) , (register, 0x38, 4) , (register, 0x18, 8) , (register, 0xb8, 8) , (stack, 0xffffffffffffeef0, 8)]
[ ---  CBRANCH (ram, 0x2653c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x19, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28f, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x28f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003e5, 8) , (const, 0x16, 4), (unique, 0x100003e5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0xa8, 4) COPY (const, 0x16, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x263, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x263, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ed, 8) , (register, 0x0, 4), (unique, 0x100003ed, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100002ea, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x0, 4)]
[(unique, 0x100002f2, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002fa, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[ ---  CBRANCH (ram, 0x2653a1, 1) , (unique, 0x100002e9, 1), (unique, 0x100002e9, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x268, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x2653a9, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x278, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x268, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x278, 4), (ram, 0x4eae68, 8) INDIRECT (unique, 0x100002f2, 8) , (const, 0x268, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x278, 4), (ram, 0x4eb434, 4) INDIRECT (unique, 0x100002fa, 4) , (const, 0x268, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x278, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x2653b8, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x278, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x268, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x278, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x268, 4)]
[(register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x38, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x67, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x67, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x67, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x67, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x265224, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x67, 4)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x67, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x67, 4)]
[(stack, 0xffffffffffffef44, 4) INDIRECT (stack, 0xffffffffffffef44, 4) , (const, 0x67, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x67, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x67, 4)]
[ ---  CBRANCH (ram, 0x265280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (register, 0x18, 8) , (const, 0x0, 4) , (register, 0xb8, 8)]
[(unique, 0x100000f9, 8) INT_MULT (register, 0xb8, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x2651db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x132, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x132, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x132, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x132, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x265285, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x132, 4)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x132, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x132, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x132, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x132, 4)]
[ ---  CBRANCH (ram, 0x2652f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffef44, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e5900, 8), (stack, 0xffffffffffffef44, 4) INDIRECT (stack, 0xffffffffffffef44, 4) , (const, 0x132, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23f, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x265300, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23f, 4)]
[ ---  CBRANCH (ram, 0x26528d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2113e0, 8) , (register, 0x18, 8) , (register, 0x0, 4) , (stack, 0xffffffffffffef48, 4)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x2652b9, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffef48, 4) MULTIEQUAL (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4)]
[(stack, 0xffffffffffffef40, 4) MULTIEQUAL (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4)]
[(stack, 0xffffffffffffef00, 8) MULTIEQUAL (stack, 0xffffffffffffef00, 8) , (stack, 0xffffffffffffef00, 8)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffeee0, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003a5, 8) COPY (register, 0x20, 8)]
[(unique, 0x100003cd, 4) COPY (ram, 0x4eb434, 4), (ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[ ---  CBRANCH (ram, 0x2653e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eb434, 4) , (const, 0xffffffff, 4), (ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1dc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1dc, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x1dc, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x2653ea, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x1dc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1dc, 4)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffef08, 8)]
[ ---  CBRANCH (ram, 0x2653fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x1e69f0, 8) , (const, 0x45, 4)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000259, 8) , (unique, 0x100001a9, 8) , (const, 0x1, 8), (unique, 0x10000259, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8), (unique, 0x100001a9, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000271, 8) , (unique, 0x100001a9, 8) , (const, 0x1, 8), (unique, 0x10000271, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8), (unique, 0x100001a9, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000405, 8) , (const, 0x265428, 8), (unique, 0x10000405, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100002c1, 8) , (unique, 0x100002b9, 8) , (const, 0x1, 8), (unique, 0x100002c1, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8), (unique, 0x100002b9, 8) INT_ADD (unique, 0x100001a9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001a9, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x211, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x211, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x211, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x210, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x210, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x211, 4), (stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x210, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x211, 4), (stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x210, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x211, 4)]
[ ---  CALL (ram, 0x1e1cd0, 8) , (unique, 0x100001f9, 8) , (unique, 0x3200, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x3200, 8), (unique, 0x100001f9, 8) COPY (const, 0x2b3f24, 8), (unique, 0x3800, 8) CAST (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) INT_ADD (unique, 0x100003f5, 8) , (unique, 0x100001a9, 8), (unique, 0x100003f5, 8) CAST (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef0, 8), (unique, 0x100001a9, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1e, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000030d, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x1000030d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeef0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x265450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffef00, 8) , (const, 0x0, 8), (stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x211, 4), (stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x210, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000040d, 8), (unique, 0x1000040d, 8) INT_ADD (stack, 0xffffffffffffef00, 8) , (const, 0x10, 8)]
[(unique, 0x100003ad, 8) COPY (register, 0x20, 8)]
[(unique, 0x100003d1, 4) COPY (ram, 0x4eb434, 4), (ram, 0x4eb434, 4) MULTIEQUAL (unique, 0xbc80, 4) , (ram, 0x4eb434, 4)]
[ ---  CBRANCH (ram, 0x26529c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eb434, 4) , (const, 0xffffffff, 4), (ram, 0x4eb434, 4) MULTIEQUAL (unique, 0xbc80, 4) , (ram, 0x4eb434, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000415, 8) , (const, 0x26544b, 8), (unique, 0x10000415, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100002d9, 8) , (unique, 0x100002d1, 8) , (const, 0x1, 8), (unique, 0x100002d9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffeee8, 8), (unique, 0x100002d1, 8) INT_ADD (unique, 0x100001a9, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x231, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x231, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x231, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x231, 4), (stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x230, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x231, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x230, 4)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x231, 4), (stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x230, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x231, 4), (stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x230, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x231, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e5920, 8)]
[(unique, 0x100003b5, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x26529c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffef40, 4) MULTIEQUAL (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffeee0, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8)]
[(ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003a5, 8) , (unique, 0x100003ad, 8) , (unique, 0x100003b5, 8)]
[(register, 0x30, 4) COPY (const, 0x180, 4)]
[ ---  CBRANCH (ram, 0x265320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffef48, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100003cd, 4) , (unique, 0x100003d1, 4) , (register, 0x0, 4), (stack, 0xffffffffffffef48, 4) MULTIEQUAL (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4)]
[ ---  CBRANCH (ram, 0x2652b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x180, 4), (register, 0x30, 4) INT_AND (stack, 0xffffffffffffef40, 4) , (const, 0x10, 4), (register, 0x10, 4) INT_AND (stack, 0xffffffffffffef40, 4) , (const, 0x1ff, 4)]
[ ---  CBRANCH (ram, 0x265310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x180, 4), (register, 0x10, 4) INT_AND (stack, 0xffffffffffffef40, 4) , (const, 0x1ff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000041d, 8) , (const, 0x265318, 8), (unique, 0x1000041d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x187, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x187, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x187, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x187, 4), (stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x186, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x187, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x186, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x187, 4)]
[(register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) CALL (ram, 0x20fac0, 8) , (register, 0x18, 8) , (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  BRANCH (ram, 0x2652b9, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffeee0, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8)]
[(ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0xa8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x2652c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000425, 8) , (const, 0x2652c6, 8), (unique, 0x10000425, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x183, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x183, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x183, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x182, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x183, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8)]
[(register, 0xb8, 8) COPY (const, 0x80, 8)]
[ ---  CBRANCH (ram, 0x265231, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x3200, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x8a, 4), (ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x265239, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffef00, 8) MULTIEQUAL (stack, 0xffffffffffffef00, 8) , (stack, 0xffffffffffffef00, 8)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x8a, 4), (stack, 0xffffffffffffef40, 4) MULTIEQUAL (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4)]
[(stack, 0xffffffffffffef44, 4) INDIRECT (stack, 0xffffffffffffef44, 4) , (const, 0x8a, 4), (stack, 0xffffffffffffef44, 4) MULTIEQUAL (stack, 0xffffffffffffef44, 4) , (stack, 0xffffffffffffef44, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x8a, 4), (stack, 0xffffffffffffef48, 4) MULTIEQUAL (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000037d, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000038d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000042d, 8), (unique, 0x1000042d, 8) CALL (ram, 0x1212c0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100000f9, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x2651ef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000042d, 8), (unique, 0x1000042d, 8) CALL (ram, 0x1212c0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100000f9, 8) , (register, 0xb8, 8)]
[(register, 0xa8, 4) COPY (const, 0xc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9a, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x9a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000435, 8) , (const, 0xc, 4), (unique, 0x10000435, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (unique, 0x100002ea, 4)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000037d, 8) , (unique, 0x10000375, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaa, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaa, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100002f2, 8)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0xaa, 4), (ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (unique, 0x100002fa, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0xaa, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x265262, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xaa, 4), (stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaa, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x265375, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x38, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x102, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x102, 4), (ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x102, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x2651e6, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x102, 4), (stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffef00, 8) INDIRECT (stack, 0xffffffffffffef00, 8) , (const, 0x102, 4), (stack, 0xffffffffffffef00, 8) MULTIEQUAL (stack, 0xffffffffffffef00, 8) , (stack, 0xffffffffffffef00, 8)]
[(stack, 0xffffffffffffef40, 4) INDIRECT (stack, 0xffffffffffffef40, 4) , (const, 0x102, 4), (stack, 0xffffffffffffef40, 4) MULTIEQUAL (stack, 0xffffffffffffef40, 4) , (stack, 0xffffffffffffef40, 4)]
[(stack, 0xffffffffffffef44, 4) INDIRECT (stack, 0xffffffffffffef44, 4) , (const, 0x102, 4), (stack, 0xffffffffffffef44, 4) MULTIEQUAL (stack, 0xffffffffffffef44, 4) , (stack, 0xffffffffffffef44, 4)]
[(stack, 0xffffffffffffef48, 4) INDIRECT (stack, 0xffffffffffffef48, 4) , (const, 0x102, 4), (stack, 0xffffffffffffef48, 4) MULTIEQUAL (stack, 0xffffffffffffef48, 4) , (stack, 0xffffffffffffef48, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x102, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000036d, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x102, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000395, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000043d, 8), (unique, 0x1000043d, 8) CALL (ram, 0x121020, 8) , (register, 0x18, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100000f9, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x265340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000043d, 8), (unique, 0x1000043d, 8) CALL (ram, 0x121020, 8) , (register, 0x18, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100000f9, 8) , (register, 0xb8, 8)]
[(register, 0xa8, 4) COPY (const, 0xc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000445, 8) , (const, 0xc, 4), (unique, 0x10000445, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x115, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x26535d, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x115, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x125, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x115, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x112, 4)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x125, 4), (ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x115, 4), (ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0x112, 4)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffeee0, 8) COPY (const, 0x26536c, 8)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x115, 4)]
[(register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x38, 4) , (const, 0x1, 4)]
[(unique, 0x1000032d, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000335, 8) MULTIEQUAL (unique, 0x10000375, 8) , (unique, 0x1000036d, 8)]
[(unique, 0x1000033d, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000345, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(unique, 0x10000349, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8)]
[(unique, 0x10000351, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(unique, 0x10000359, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000361, 4) MULTIEQUAL (unique, 0x100002ea, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x26526b, 1) , (unique, 0x1000032c, 1), (unique, 0x1000032c, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000359, 8)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (unique, 0x10000351, 8)]
[(stack, 0xffffffffffffeee0, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (unique, 0x10000349, 8)]
[(ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (unique, 0x10000345, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x1000033d, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (unique, 0x10000361, 4)]
[ ---  CBRANCH (ram, 0x265375, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x9, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000044d, 8), (unique, 0x1000044d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0xb8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x10000335, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x1000032d, 8)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100003bd, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x2652c6, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000359, 8)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (unique, 0x10000351, 8)]
[(stack, 0xffffffffffffeee0, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8) , (unique, 0x10000349, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfa, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x1000033d, 8)]
[(ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0xfa, 4), (ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (unique, 0x10000345, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000455, 8) , (register, 0xa8, 4), (unique, 0x10000455, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0xb8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (unique, 0x10000335, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x1000032d, 8), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (unique, 0x10000361, 4)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100003c5, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x2652c6, 1)]
[(stack, 0xffffffffffffeef0, 8) MULTIEQUAL (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8) , (stack, 0xffffffffffffeef0, 8)]
[(stack, 0xffffffffffffeee0, 8) MULTIEQUAL (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8) , (stack, 0xffffffffffffeee0, 8)]
[(ram, 0x4eb434, 4) MULTIEQUAL (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4) , (ram, 0x4eb434, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003bd, 8) , (unique, 0x100003c5, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x265458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000045d, 8), (unique, 0x1000045d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eb434, 4) COPY (ram, 0x4eb434, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000465, 8) , (unique, 0x100001f1, 8), (unique, 0x10000465, 8) CAST (register, 0x20, 8), (unique, 0x100001f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x26545d, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffeee0, 8) INDIRECT (stack, 0xffffffffffffeee0, 8) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffeef0, 8) INDIRECT (stack, 0xffffffffffffeef0, 8) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf5, 4)]
[(ram, 0x4eb434, 4) COPY (ram, 0x4eb434, 4), (ram, 0x4eb434, 4) INDIRECT (ram, 0x4eb434, 4) , (const, 0xf5, 4)]
[ ---  RETURN (const, 0x1, 4)]
