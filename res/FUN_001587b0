[(register, 0x80, 8) COPY (const, 0x2ad5a0, 8)]
[ ---  CBRANCH (ram, 0x1587c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) COPY (const, 0x2ad5e0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x158840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[(unique, 0x100000a7, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x158800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100000a7, 8) , (unique, 0x100000af, 8)]
[(unique, 0x100000af, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x4, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x100000a7, 8) , (unique, 0x100000af, 8)]
[ ---  CBRANCH (ram, 0x158800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x4, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x100000a7, 8) , (unique, 0x100000af, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x10, 4)]
[(unique, 0x1000007f, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000008f, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x158820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000007f, 8) , (unique, 0x10000087, 8)]
[(unique, 0x10000087, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x3, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000007f, 8) , (unique, 0x10000087, 8)]
[ ---  CBRANCH (ram, 0x158820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x3, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000007f, 8) , (unique, 0x10000087, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_REM (register, 0x38, 8) , (register, 0x8, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000008f, 8) , (unique, 0x10000097, 8)]
[(unique, 0x10000097, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_DIV (register, 0x38, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000008f, 8) , (unique, 0x10000097, 8)]
[ ---  CBRANCH (ram, 0x1587d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_DIV (register, 0x38, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000008f, 8) , (unique, 0x10000097, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_REM (register, 0x38, 8) , (const, 0xa, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000009f, 8) , (register, 0x38, 8)]
[(unique, 0x1000009f, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_DIV (register, 0x38, 8) , (const, 0xa, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000009f, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x158850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_DIV (register, 0x38, 8) , (const, 0xa, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000009f, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8)]
