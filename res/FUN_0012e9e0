[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x35, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x35, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x35, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x35, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x35, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ea19, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x35, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (unique, 0x100006a7, 4) , (const, 0x35, 4), (unique, 0x100006a7, 4) COPY (register, 0x38, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x35, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x35, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x35, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x35, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x35, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006b3, 8), (unique, 0x100006b3, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CALL (ram, 0x1e69f0, 8) , (const, 0x1e, 4)]
[(unique, 0x100006ab, 8) COPY (ram, 0x4ecaa0, 8), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x35, 4)]
[(unique, 0x10000509, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000519, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(unique, 0x10000521, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(unique, 0x10000529, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(unique, 0x10000531, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(unique, 0x10000535, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(unique, 0x1000053d, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(unique, 0x10000545, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(unique, 0x1000054d, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(unique, 0x10000551, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(unique, 0x10000555, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(unique, 0x1000055d, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(unique, 0x10000565, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(unique, 0x1000056d, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x12ea4b, 1) , (unique, 0x10000508, 1), (unique, 0x10000508, 1) INT_NOTEQUAL (unique, 0x10000511, 8) , (const, 0x0, 8), (unique, 0x10000511, 8) MULTIEQUAL (unique, 0x100006ab, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005f7, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12ea30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100006bb, 8), (unique, 0x100006bb, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000511, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000509, 8) , (const, 0x477, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (unique, 0x10000519, 8) , (const, 0x477, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (unique, 0x10000521, 8) , (const, 0x477, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (unique, 0x10000529, 8) , (const, 0x477, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (unique, 0x10000531, 4) , (const, 0x477, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (unique, 0x10000535, 8) , (const, 0x477, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x477, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ea3b, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (unique, 0x10000545, 8) , (const, 0x477, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (unique, 0x1000054d, 4) , (const, 0x477, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (unique, 0x10000551, 4) , (const, 0x477, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (unique, 0x10000555, 8) , (const, 0x477, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (unique, 0x1000055d, 8) , (const, 0x477, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (unique, 0x10000565, 8) , (const, 0x477, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000056d, 8) , (const, 0x477, 4)]
[(unique, 0x100005ff, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12ecd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x100006c3, 8) , (unique, 0x100006cb, 8), (unique, 0x100006cb, 8) CAST (unique, 0xbd80, 8), (unique, 0x100006c3, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000056d, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (unique, 0x10000565, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (unique, 0x1000055d, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (unique, 0x10000555, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (unique, 0x10000551, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (unique, 0x10000545, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (unique, 0x1000053d, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000509, 8) , (register, 0x110, 8)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x46d, 4), (ram, 0x4ecaa0, 8) MULTIEQUAL (unique, 0x10000519, 8) , (ram, 0x4ecaa0, 8)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x46d, 4), (ram, 0x4ecaf0, 8) MULTIEQUAL (unique, 0x10000521, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x46d, 4), (ram, 0x4ecb50, 8) MULTIEQUAL (unique, 0x10000529, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x46d, 4), (ram, 0x4ecb5c, 4) MULTIEQUAL (unique, 0x10000531, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x46d, 4), (ram, 0x4ecb68, 8) MULTIEQUAL (unique, 0x10000535, 8) , (ram, 0x4ecb68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100005f7, 8) , (unique, 0x100005ff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000511, 8) , (unique, 0x100003b8, 8) , (const, 0x8, 8), (unique, 0x100003b8, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2, 8), (register, 0xa0, 8) INT_SEXT (stack, 0xfffffffffffffec8, 4), (stack, 0xfffffffffffffec8, 4) MULTIEQUAL (unique, 0x1000054d, 4) , (stack, 0xfffffffffffffec8, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100006d3, 8), (unique, 0x100006d3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000511, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000509, 8) , (const, 0x47, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (unique, 0x10000519, 8) , (const, 0x47, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (unique, 0x10000521, 8) , (const, 0x47, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (unique, 0x10000529, 8) , (const, 0x47, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (unique, 0x10000531, 4) , (const, 0x47, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (unique, 0x10000535, 8) , (const, 0x47, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x47, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ea9d, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (unique, 0x10000545, 8) , (const, 0x47, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (unique, 0x1000054d, 4) , (const, 0x47, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (unique, 0x10000551, 4) , (const, 0x47, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (unique, 0x10000555, 8) , (const, 0x47, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (unique, 0x1000055d, 8) , (const, 0x47, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (unique, 0x10000565, 8) , (const, 0x47, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000056d, 8) , (const, 0x47, 4)]
[(unique, 0x100005e7, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000064f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12eaac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x100006db, 8) , (const, 0x2e, 4), (unique, 0x100006db, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000657, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ed10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xbf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3c3, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ed21, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c3, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x3d5, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x3c3, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x3d5, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x3c3, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x3d5, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x3c3, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x3d5, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x3c3, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x3d5, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x3c3, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3d5, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ed39, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x3d5, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x3c3, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3d5, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3c3, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3d5, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3c3, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3d5, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3c3, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3d5, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3c3, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (register, 0x0, 8) , (const, 0x3d5, 4), (register, 0x0, 8) CALL (ram, 0x121040, 8) , (unique, 0x3100, 8) , (const, 0x40, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c3, 4)]
[(unique, 0x10000647, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006eb, 8), (unique, 0x100006eb, 8) CALL (ram, 0x1351e0, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000206, 8) , (const, 0x1, 8), (unique, 0x10000206, 8) INT_2COMP (unique, 0x100006e3, 8), (unique, 0x100006e3, 8) CAST (unique, 0x3100, 8), (register, 0x0, 8) CALL (ram, 0x121040, 8) , (unique, 0x3100, 8) , (const, 0x40, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e6, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x3e6, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x3e6, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x3e6, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x3e6, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x3e6, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3e6, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ed4f, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x3e6, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3e6, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3e6, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3e6, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3e6, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x3e6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e6, 4)]
[ ---  CBRANCH (ram, 0x12ed5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x100006f3, 8), (unique, 0x100006f3, 8) CAST (register, 0xb8, 8)]
[(unique, 0x1000065f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12edd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x100006fb, 8) , (const, 0x1, 8), (unique, 0x100006fb, 8) CAST (register, 0xb8, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x404, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ed62, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000478, 8) , (unique, 0x10000237, 8) , (const, 0x1, 8), (unique, 0x10000478, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (unique, 0x10000237, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000713, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000713, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000468, 8) , (const, 0x1, 8), (unique, 0x10000468, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x10, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x1000022f, 8) , (const, 0x1, 8), (unique, 0x1000022f, 8) INT_2COMP (unique, 0x1000070b, 8), (unique, 0x1000070b, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0xfffffffffffffee0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000072b, 8) , (const, 0x12eda9, 8), (unique, 0x1000072b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004c8, 8) , (unique, 0x100004c0, 8) , (const, 0x1, 8), (unique, 0x100004c8, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (unique, 0x100004c0, 8) INT_ADD (unique, 0x10000237, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000237, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000713, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000713, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000468, 8) , (const, 0x1, 8), (unique, 0x10000468, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x10, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x1000022f, 8) , (const, 0x1, 8), (unique, 0x1000022f, 8) INT_2COMP (unique, 0x1000070b, 8), (unique, 0x1000070b, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0xfffffffffffffee0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000073b, 8) , (const, 0x12edb7, 8), (unique, 0x1000073b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004e0, 8) , (unique, 0x100004d8, 8) , (const, 0x1, 8), (unique, 0x100004e0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (unique, 0x100004d8, 8) INT_ADD (unique, 0x10000237, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000237, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000713, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000713, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000468, 8) , (const, 0x1, 8), (unique, 0x10000468, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x10, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x1000022f, 8) , (const, 0x1, 8), (unique, 0x1000022f, 8) INT_2COMP (unique, 0x1000070b, 8), (unique, 0x1000070b, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0xfffffffffffffee0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000743, 8) , (const, 0x12edd0, 8), (unique, 0x10000743, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004f8, 8) , (unique, 0x100004f0, 8) , (const, 0x1, 8), (unique, 0x100004f8, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (unique, 0x100004f0, 8) INT_ADD (unique, 0x10000237, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000237, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000713, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000713, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000468, 8) , (const, 0x1, 8), (unique, 0x10000468, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x10, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x1000022f, 8) , (const, 0x1, 8), (unique, 0x1000022f, 8) INT_2COMP (unique, 0x1000070b, 8), (unique, 0x1000070b, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0xfffffffffffffee0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x455, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x44a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x444, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x40b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x404, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x455, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x44a, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x444, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x40b, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x404, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x455, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x44a, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x444, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x40b, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x404, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x455, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x44a, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x444, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x40b, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x404, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x455, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x44a, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x444, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x40b, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x404, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x455, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x44a, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x444, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x40b, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x404, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x455, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x454, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x449, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x444, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x443, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x40b, 4), (stack, 0xfffffffffffffeb0, 8) COPY (const, 0x12ed71, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x455, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x454, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x449, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x444, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x443, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x40b, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x404, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x455, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x454, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x44a, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x449, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x444, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x443, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x40b, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x404, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x455, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x454, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x44a, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x449, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x444, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x443, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x40b, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x404, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x455, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x454, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x449, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x444, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x443, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x40b, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x404, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x455, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x454, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x449, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x444, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x443, 4), (stack, 0xfffffffffffffed8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000703, 8), (unique, 0x10000703, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0xfffffffffffffee0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x455, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x454, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x449, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x444, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x443, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x40b, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x455, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x454, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x44a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x449, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x444, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x443, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x40b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x404, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0x1000058f, 8) , (unique, 0x1000074b, 8), (unique, 0x1000074b, 8) CAST (unique, 0x10000587, 8), (unique, 0x10000587, 8) COPY (stack, 0xfffffffffffffed8, 8), (unique, 0x1000058f, 8) COPY (stack, 0xfffffffffffffee0, 8), (register, 0x0, 8) CALL (ram, 0x121230, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x44a, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x449, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x449, 4), (register, 0x0, 8) CALL (ram, 0x121230, 8) , (unique, 0x3800, 8) , (unique, 0xbd80, 8) , (unique, 0x10000733, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x444, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x444, 4), (unique, 0x10000733, 8) CAST (register, 0x10, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x443, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x443, 4), (unique, 0x3800, 8) CAST (unique, 0x10000723, 8), (unique, 0x10000723, 8) INT_ADD (unique, 0x1000071b, 8) , (unique, 0x10000237, 8), (unique, 0x1000071b, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec0, 8), (unique, 0x10000237, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000713, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000713, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000468, 8) , (const, 0x1, 8), (unique, 0x10000468, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (stack, 0xfffffffffffffed8, 8) COPY (unique, 0x3100, 8), (register, 0x10, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x1000022f, 8) , (const, 0x1, 8), (unique, 0x1000022f, 8) INT_2COMP (unique, 0x1000070b, 8), (unique, 0x1000070b, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000703, 8), (unique, 0x10000703, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0xfffffffffffffee0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x40b, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x404, 4)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100005e7, 8) , (unique, 0x3800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000753, 8) , (const, 0x12edd8, 8), (unique, 0x10000753, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x1000065f, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x459, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x459, 4), (ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x459, 4), (ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x459, 4), (ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x459, 4), (ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x459, 4), (ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x459, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x458, 4), (stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x459, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x458, 4), (stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x459, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x458, 4), (stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x459, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x458, 4), (stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x459, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x458, 4), (stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x459, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x458, 4), (stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x459, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x458, 4), (stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x459, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x458, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12eaac, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x1000064f, 8) , (unique, 0x10000657, 8) , (register, 0x20, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100005e7, 8) , (unique, 0x100005e7, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x12ede8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ecb68, 8) , (const, 0x0, 8), (ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000075b, 8) , (const, 0x12ee09, 8), (unique, 0x1000075b, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x302, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x302, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x302, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x302, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x302, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x302, 4), (ram, 0x4ecb68, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ecb50, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x302, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x301, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x302, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x301, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x302, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x301, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x302, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x301, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x302, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x301, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x302, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x301, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x302, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x301, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x302, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x301, 4)]
[(unique, 0x1000063f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0x10000368, 8), (unique, 0x10000368, 8) COPY (const, 0x2bb190, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000763, 8) , (const, 0x12ee27, 8), (unique, 0x10000763, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x315, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x315, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x315, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x315, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x315, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x315, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x314, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x315, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x314, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x315, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x314, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x315, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x314, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x315, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x314, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x315, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x314, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x315, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x314, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x315, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x314, 4)]
[(unique, 0x10000577, 8) COPY (ram, 0x4ecaf0, 8), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x315, 4)]
[ ---  CBRANCH (ram, 0x12ee3b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x10000370, 8), (unique, 0x10000370, 8) CAST (unique, 0x1000076b, 8), (unique, 0x1000076b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ecac0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000773, 8) , (const, 0x12ee5c, 8), (unique, 0x10000773, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34d, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x34d, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x34d, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x34d, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x34d, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x34d, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x34d, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x34c, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x34d, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x34c, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x34d, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x34c, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x34d, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x34c, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x34d, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x34c, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x34d, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x34c, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x34d, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x34c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34c, 4)]
[ ---  CBRANCH (ram, 0x12ee2c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (ram, 0x4ecaf0, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (register, 0x0, 4) , (const, 0x0, 8)]
[(unique, 0x100005a7, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xc, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000793, 8), (unique, 0x10000793, 8) INT_ADD (unique, 0x1000078b, 8) , (const, 0x8, 8), (unique, 0x1000078b, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000783, 8), (unique, 0x10000783, 8) INT_ADD (unique, 0x1000077b, 8) , (const, 0x10, 8), (unique, 0x1000077b, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12ee8f, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x6c, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007b3, 8), (unique, 0x100007b3, 8) INT_ADD (unique, 0x100007ab, 8) , (const, 0x20, 8), (unique, 0x100007ab, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007a3, 8), (unique, 0x100007a3, 8) INT_ADD (unique, 0x1000079b, 8) , (const, 0x24, 8), (unique, 0x1000079b, 8) CAST (register, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xc, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000793, 8), (unique, 0x10000793, 8) INT_ADD (unique, 0x1000078b, 8) , (const, 0x8, 8), (unique, 0x1000078b, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000783, 8), (unique, 0x10000783, 8) INT_ADD (unique, 0x1000077b, 8) , (const, 0x10, 8), (unique, 0x1000077b, 8) CAST (register, 0x0, 8)]
[(unique, 0x100005af, 8) COPY (unique, 0x3400, 8)]
[(unique, 0x10000597, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100005a7, 8) , (unique, 0x100005af, 8)]
[ ---  CBRANCH (ram, 0x12ee9e, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100007db, 4), (unique, 0x100007db, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007d3, 8), (unique, 0x100007d3, 8) INT_ADD (unique, 0x100007cb, 8) , (const, 0x14, 8), (unique, 0x100007cb, 8) CAST (register, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007c3, 8), (unique, 0x100007c3, 8) INT_ADD (unique, 0x100007bb, 8) , (const, 0x18, 8), (unique, 0x100007bb, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100005a7, 8) , (unique, 0x100005af, 8)]
[(unique, 0x1000059f, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12eeb3, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0x10000577, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000597, 8) , (unique, 0x1000059f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007df, 8) , (const, 0x12eebb, 8), (unique, 0x100007df, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b9, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x3b9, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x3b9, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x3b9, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x3b9, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x3b9, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3b9, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3b8, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3b9, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3b8, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3b9, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3b8, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3b9, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3b8, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3b9, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3b8, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x3b9, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x3b8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b8, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[(register, 0xa0, 4) SUBPIECE (unique, 0x10000577, 8) , (const, 0x0, 4)]
[(unique, 0x1000069f, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12eaca, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007e7, 8) , (const, 0x12eeae, 8), (unique, 0x100007e7, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b3, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x3b3, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x3b3, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x3b3, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x3b3, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x3b3, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3b3, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x3b2, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x3b3, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x3b2, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3b3, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x3b2, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3b3, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x3b2, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3b3, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x3b2, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3b3, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x3b2, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x3b3, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x3b2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b2, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x0, 8) , (unique, 0x10000577, 8)]
[ ---  BRANCH (ram, 0x12ee2c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007ef, 8) , (const, 0x12ee34, 8), (unique, 0x100007ef, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x325, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x325, 4), (ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x325, 4), (ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x325, 4), (ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x325, 4), (ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x325, 4), (ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x325, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x324, 4), (stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x325, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x324, 4), (stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x325, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x324, 4), (stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x325, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x324, 4), (stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x325, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x324, 4), (stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x325, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x324, 4), (stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x325, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x324, 4), (stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x325, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x324, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x12ea64, 1)]
[(unique, 0x10000607, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000697, 8) COPY (ram, 0x4ecb50, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ecb50, 8) , (const, 0x0, 8)]
[(unique, 0x1000057f, 8) COPY (ram, 0x4ecb50, 8), (ram, 0x4ecb50, 8) MULTIEQUAL (unique, 0x10000697, 8) , (unique, 0x1000069f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007f7, 8) , (const, 0x12ead2, 8), (unique, 0x100007f7, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x77, 4), (ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x77, 4), (ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x77, 4), (ram, 0x4ecb50, 8) MULTIEQUAL (unique, 0x10000697, 8) , (unique, 0x1000069f, 8)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x77, 4), (ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (register, 0xa0, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x77, 4), (ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x77, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x76, 4), (stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x77, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x76, 4), (stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x77, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x76, 4), (stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x77, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x76, 4), (stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x77, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x76, 4), (stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x77, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x76, 4), (stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x77, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x76, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x88, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100007ff, 8), (unique, 0x100007ff, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x12ed00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100007ff, 8), (unique, 0x100007ff, 8) CAST (register, 0x18, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000080f, 8), (unique, 0x1000080f, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000807, 8), (unique, 0x10000807, 8) CAST (register, 0x18, 8)]
[(unique, 0x100005d7, 8) COPY (register, 0x18, 8)]
[(register, 0x88, 8) INT_ZEXT (register, 0x88, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x88, 4) INT_OR (unique, 0x4c800, 4) , (unique, 0x4c900, 4), (unique, 0x4c900, 4) INT_RIGHT (register, 0x88, 4) , (const, 0x17, 4), (unique, 0x4c800, 4) INT_LEFT (register, 0x88, 4) , (const, 0x9, 4), (register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000817, 8), (unique, 0x10000817, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005d7, 8) , (register, 0x10, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x12eae8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000827, 8), (unique, 0x10000827, 8) INT_ADD (unique, 0x1000081f, 8) , (const, 0x1, 8), (unique, 0x1000081f, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005d7, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12ed00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x12eb07, 1)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(stack, 0xfffffffffffffec0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000837, 8), (unique, 0x10000837, 8) INT_ADD (unique, 0x1000082f, 8) , (const, 0x8, 8), (unique, 0x1000082f, 8) CAST (unique, 0x1000057f, 8)]
[(unique, 0x1000060f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000847, 8), (unique, 0x10000847, 8) INT_ADD (unique, 0x1000083f, 8) , (const, 0x10, 8), (unique, 0x1000083f, 8) CAST (unique, 0x1000057f, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000085f, 8), (unique, 0x1000085f, 8) INT_REM (register, 0x88, 8) , (unique, 0x10000857, 8), (unique, 0x10000857, 8) CAST (register, 0x90, 8), (register, 0x90, 8) CAST (unique, 0x1000084f, 8), (unique, 0x1000084f, 8) INT_ZEXT (unique, 0xbc80, 4)]
[(unique, 0x100005cf, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_REM (register, 0x88, 8) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100005cf, 8) , (register, 0x10, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000877, 8), (unique, 0x10000877, 8) INT_ADD (unique, 0x1000086f, 8) , (unique, 0x3400, 8), (unique, 0x1000086f, 8) CAST (unique, 0x1000057f, 8), (unique, 0x3400, 8) INT_ADD (stack, 0xfffffffffffffec0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x10000867, 8) , (const, 0xc, 8), (unique, 0x10000867, 8) CAST (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x80, 8), (stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[ ---  BRANCH (ram, 0x12eb6f, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0xb8, 8)]
[(unique, 0x10000617, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0xb8, 8)]
[(unique, 0x100005bf, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000667, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000677, 8) COPY (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x12eb60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000088f, 8) , (const, 0x12eba7, 8), (unique, 0x1000088f, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x168, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x168, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x168, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x168, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x168, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x168, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x168, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x167, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x168, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x167, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x168, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x167, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x168, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x167, 4)]
[(register, 0x88, 8) INT_ZEXT (stack, 0xfffffffffffffecc, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x168, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x167, 4), (stack, 0xfffffffffffffecc, 4) COPY (register, 0x88, 4)]
[(unique, 0x100005c7, 8) COPY (stack, 0xfffffffffffffed0, 8), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x168, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x167, 4), (stack, 0xfffffffffffffed0, 8) COPY (register, 0x10, 8)]
[(unique, 0x1000066f, 8) COPY (stack, 0xfffffffffffffed8, 8), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x168, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x167, 4), (stack, 0xfffffffffffffed8, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000067f, 8) COPY (stack, 0xfffffffffffffee0, 8), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x168, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x167, 4), (stack, 0xfffffffffffffee0, 8) COPY (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x12eb60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x10000897, 8) , (register, 0x30, 8), (unique, 0x10000897, 8) CAST (register, 0x18, 8), (register, 0x30, 8) CAST (unique, 0x10000887, 8), (unique, 0x10000887, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000087f, 8), (unique, 0x1000087f, 8) CAST (unique, 0x1000057f, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x1000061f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x1000089f, 8) , (register, 0x0, 8), (unique, 0x1000089f, 8) CAST (unique, 0x1000057f, 8)]
[ ---  CBRANCH (ram, 0x12eed3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (ram, 0x4ecaf0, 8), (register, 0x0, 8) INT_ZEXT (ram, 0x4ecb5c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008a7, 8) , (unique, 0x10000348, 8), (unique, 0x100008a7, 8) CAST (register, 0x20, 8), (unique, 0x10000348, 8) PTRSUB (const, 0x0, 8) , (const, 0x12eef2, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x2c4, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x2c4, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x2c5, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x2c4, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x2c5, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x2c4, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x2c4, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x2c4, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x2c5, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x2c4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c4, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000358, 8) , (unique, 0x10000350, 8) , (const, 0x136, 4) , (unique, 0x10000360, 8), (unique, 0x10000360, 8) COPY (const, 0x2bb170, 8), (unique, 0x10000358, 8) COPY (const, 0x2b7700, 8), (unique, 0x10000350, 8) COPY (const, 0x2b3b2d, 8)]
[(ram, 0x4ecaa0, 8) COPY (ram, 0x4ecaa0, 8), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x2c5, 4)]
[(ram, 0x4ecaf0, 8) COPY (ram, 0x4ecaf0, 8), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x2c5, 4)]
[(ram, 0x4ecb50, 8) COPY (ram, 0x4ecb50, 8), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x2c5, 4)]
[(ram, 0x4ecb5c, 4) COPY (ram, 0x4ecb5c, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x2c5, 4)]
[(ram, 0x4ecb68, 8) COPY (ram, 0x4ecb68, 8), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x2c5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x100005b7, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[ ---  BRANCH (ram, 0x12ec08, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100005b7, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12ec00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100008af, 8), (unique, 0x100008af, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100008b7, 8), (unique, 0x100008b7, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[(unique, 0x10000627, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (ram, 0x4ecb5c, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100008b7, 8), (unique, 0x100008b7, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100008af, 8), (unique, 0x100008af, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100008bf, 8), (unique, 0x100008bf, 8) CAST (unique, 0x1000057f, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ea, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12ec00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xc, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008c7, 8) , (const, 0x12ec3e, 8), (unique, 0x100008c7, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f0, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x1f0, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x1f0, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x1f0, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x1f0, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x1f0, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x1f0, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x1ef, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x1f0, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x1ef, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x1f0, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x1ef, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x1f0, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x1ef, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x1f0, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x1ef, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x1f0, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x1ef, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x1f0, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x1ef, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ef, 4)]
[(unique, 0x1000062f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12ecf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100008cf, 8), (unique, 0x100008cf, 8) CALL (ram, 0x1212c0, 8) , (const, 0x78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d7, 8) , (const, 0x12ec53, 8), (unique, 0x100008d7, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x200, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x200, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x1ff, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x200, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x1ff, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x200, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x1ff, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x200, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x1ff, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x200, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x1ff, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x200, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x1ff, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x200, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x200, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ff, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x20c, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x200, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x20c, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x200, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x20c, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x200, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x20c, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x200, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x20c, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x200, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x19d9a0, 8) , (unique, 0x100008df, 8), (unique, 0x100008df, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x12ece0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19d9a0, 8) , (unique, 0x100008df, 8), (unique, 0x100008df, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x21b, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x21b, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x21b, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x21b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (ram, 0x4ecaa0, 8)]
[(ram, 0x4ecaa0, 8) COPY (unique, 0x1000068f, 8), (unique, 0x1000068f, 8) INDIRECT (unique, 0x10000687, 8) , (const, 0x21b, 4), (unique, 0x10000687, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12ec80, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3200, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x12ec78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x6, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e7, 8) , (const, 0x12ec94, 8), (unique, 0x100008e7, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x230, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x22f, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x22f, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x230, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x22f, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x230, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x22f, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x22f, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x22f, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x22f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x230, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22f, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x23e, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x230, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x23e, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x230, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x23e, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x230, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x23e, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x230, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x23e, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x230, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000420, 8) , (const, 0x8, 8), (unique, 0x10000420, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8), (register, 0x0, 8) CAST (unique, 0x100008ef, 8), (unique, 0x100008ef, 8) CALL (ram, 0x12e170, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12ecb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100008ef, 8), (unique, 0x100008ef, 8) CALL (ram, 0x12e170, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008f7, 8) , (const, 0x2, 4), (unique, 0x100008f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008ff, 8) , (const, 0xffffffff, 4), (unique, 0x100008ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x24a, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x248, 4), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x245, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x24a, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x248, 4), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x245, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x24a, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x248, 4), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x245, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x24a, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x248, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x245, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x24a, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x248, 4), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x245, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[ ---  CBRANCH (ram, 0x12ec78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0xc, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x25d, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x25d, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x25d, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x25d, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x25d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000907, 8), (unique, 0x10000907, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000458, 8) , (const, 0x8, 8), (unique, 0x10000458, 8) INT_ADD (register, 0xa0, 8) , (const, 0x2, 8), (register, 0xa0, 8) INT_SEXT (stack, 0xfffffffffffffec8, 4)]
[ ---  BRANCH (ram, 0x12ea64, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000090f, 8) , (const, 0x12ece8, 8), (unique, 0x1000090f, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29f, 4)]
[(ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x29f, 4)]
[(ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x29f, 4)]
[(ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x29f, 4)]
[(ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x29f, 4)]
[(ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x29f, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x29f, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x29e, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x29f, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x29e, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x29f, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x29e, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x29f, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x29e, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x29f, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x29e, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x29f, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x29e, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x29f, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x29e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x29f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x29e, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(unique, 0x10000637, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (unique, 0x100003c8, 8) , (const, 0x4, 8), (unique, 0x100003c8, 8) INT_MULT (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x12ede0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x80, 8) , (register, 0x90, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005bf, 8) , (unique, 0x100005c7, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000667, 8) , (unique, 0x1000066f, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000677, 8) , (unique, 0x1000067f, 8)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0x1000025f, 8) , (const, 0x1, 8), (unique, 0x1000025f, 8) INT_2COMP (unique, 0x10000917, 8), (unique, 0x10000917, 8) CAST (register, 0x90, 8)]
[ ---  BRANCH (ram, 0x12eb47, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000607, 8) , (unique, 0x1000060f, 8) , (unique, 0x10000617, 8) , (unique, 0x1000061f, 8) , (unique, 0x10000627, 8) , (unique, 0x1000062f, 8) , (unique, 0x10000637, 8) , (unique, 0x1000063f, 8) , (unique, 0x10000647, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x12ea64, 1)]
[(stack, 0xfffffffffffffee0, 8) MULTIEQUAL (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8) , (stack, 0xfffffffffffffee0, 8)]
[(stack, 0xfffffffffffffed8, 8) MULTIEQUAL (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8) , (stack, 0xfffffffffffffed8, 8)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffecc, 4) MULTIEQUAL (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4) , (stack, 0xfffffffffffffecc, 4)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xfffffffffffffec0, 8) MULTIEQUAL (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8) , (stack, 0xfffffffffffffec0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(ram, 0x4ecb68, 8) MULTIEQUAL (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8) , (ram, 0x4ecb68, 8)]
[(ram, 0x4ecb5c, 4) MULTIEQUAL (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4) , (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb50, 8) MULTIEQUAL (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8) , (ram, 0x4ecb50, 8)]
[(ram, 0x4ecaf0, 8) MULTIEQUAL (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8) , (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecaa0, 8) MULTIEQUAL (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8) , (ram, 0x4ecaa0, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x12eece, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000091f, 8), (unique, 0x1000091f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000927, 8) , (const, 0x12eed3, 8), (unique, 0x10000927, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x287, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x286, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x287, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x286, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x287, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x286, 4)]
[(stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x287, 4), (stack, 0xfffffffffffffecc, 4) INDIRECT (stack, 0xfffffffffffffecc, 4) , (const, 0x286, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x287, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x286, 4)]
[(stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x287, 4), (stack, 0xfffffffffffffed8, 8) INDIRECT (stack, 0xfffffffffffffed8, 8) , (const, 0x286, 4)]
[(stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x287, 4), (stack, 0xfffffffffffffee0, 8) INDIRECT (stack, 0xfffffffffffffee0, 8) , (const, 0x286, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x287, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x286, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ecaa0, 8) COPY (ram, 0x4ecaa0, 8), (ram, 0x4ecaa0, 8) INDIRECT (ram, 0x4ecaa0, 8) , (const, 0x287, 4)]
[(ram, 0x4ecaf0, 8) COPY (ram, 0x4ecaf0, 8), (ram, 0x4ecaf0, 8) INDIRECT (ram, 0x4ecaf0, 8) , (const, 0x287, 4)]
[(ram, 0x4ecb50, 8) COPY (ram, 0x4ecb50, 8), (ram, 0x4ecb50, 8) INDIRECT (ram, 0x4ecb50, 8) , (const, 0x287, 4)]
[(ram, 0x4ecb5c, 4) COPY (ram, 0x4ecb5c, 4), (ram, 0x4ecb5c, 4) INDIRECT (ram, 0x4ecb5c, 4) , (const, 0x287, 4)]
[(ram, 0x4ecb68, 8) COPY (ram, 0x4ecb68, 8), (ram, 0x4ecb68, 8) INDIRECT (ram, 0x4ecb68, 8) , (const, 0x287, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ecaa0, 8) COPY (ram, 0x4ecaa0, 8)]
[(ram, 0x4ecaf0, 8) COPY (ram, 0x4ecaf0, 8)]
[(ram, 0x4ecb50, 8) COPY (ram, 0x4ecb50, 8)]
[(ram, 0x4ecb5c, 4) COPY (ram, 0x4ecb5c, 4)]
[(ram, 0x4ecb68, 8) COPY (ram, 0x4ecb68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
