[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x2c, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x2c, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x2c, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x2c, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x2c, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2c, 4)]
[ ---  CBRANCH (ram, 0x47dc5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (register, 0x38, 8) , (const, 0x80000, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x100005fa, 8), (unique, 0x100005fa, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x4b, 4), (ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x47, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x4b, 4), (ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x47, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x4b, 4), (ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x47, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x4b, 4), (ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x47, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x4b, 4), (ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x47, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x4b, 4), (ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x47, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x6a, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x6a, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x6a, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x6a, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x6a, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x6a, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x47e0ac, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x456020, 8) , (register, 0x0, 4) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000602, 8), (unique, 0x10000602, 8) CAST (stack, 0xffffffffffffffc0, 8), (register, 0x10, 8) INT_SUB (const, 0x340, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x47db51, 1)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x84, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x84, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x84, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x84, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x84, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x84, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47db27, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0x40, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[ ---  CBRANCH (ram, 0x47de60, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000060a, 8) , (const, 0x40, 8), (unique, 0x1000060a, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) COPY (const, 0x4af494, 8)]
[(unique, 0x1000052e, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47de80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000612, 8), (unique, 0x10000612, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) COPY (const, 0x4af4a3, 8)]
[(unique, 0x10000536, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000053e, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47df10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x10102464c457f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x100005f2, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x1000053e, 8) , (unique, 0x10000546, 8)]
[ ---  CBRANCH (ram, 0x47df30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000061a, 8), (unique, 0x1000061a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47db8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000062a, 8), (unique, 0x1000062a, 8) INT_ADD (unique, 0x10000622, 8) , (const, 0xf, 8), (unique, 0x10000622, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47db7c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x47dc70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (ram, 0x4afc69, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000063a, 8), (unique, 0x1000063a, 8) INT_ADD (unique, 0x10000632, 8) , (const, 0x11, 8), (unique, 0x10000632, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47db8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb80, 2) , (ram, 0x4afc6d, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000064a, 8), (unique, 0x1000064a, 8) INT_ADD (unique, 0x10000642, 8) , (const, 0x15, 8), (unique, 0x10000642, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47db8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (ram, 0x4afc6f, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000065a, 8), (unique, 0x1000065a, 8) INT_ADD (unique, 0x10000652, 8) , (const, 0x17, 8), (unique, 0x10000652, 8) CAST (register, 0xb0, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x47e07f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000066a, 8), (unique, 0x1000066a, 8) INT_ADD (unique, 0x10000662, 8) , (const, 0x1c, 8), (unique, 0x10000662, 8) CAST (register, 0xb0, 8)]
[(register, 0x18, 8) COPY (const, 0x4af6d8, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[ ---  CBRANCH (ram, 0x47e090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x3e, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000067a, 8), (unique, 0x1000067a, 8) INT_ADD (unique, 0x10000672, 8) , (const, 0x1a, 8), (unique, 0x10000672, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47e0a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 2) , (unique, 0x1000068a, 2), (unique, 0x1000068a, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000682, 8), (unique, 0x10000682, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) COPY (const, 0x4af6b0, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[ ---  CBRANCH (ram, 0x47e0b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x38, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000694, 8), (unique, 0x10000694, 8) INT_ADD (unique, 0x1000068c, 8) , (const, 0x3e, 8), (unique, 0x1000068c, 8) CAST (register, 0xb0, 8)]
[(register, 0x18, 8) COPY (const, 0x4af770, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[ ---  CBRANCH (ram, 0x47dfa8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x18, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) INT_MULT (register, 0x8, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) CAST (unique, 0x100006ac, 8), (unique, 0x100006ac, 8) INT_ADD (unique, 0x100006a4, 8) , (unique, 0x1000025c, 8), (unique, 0x100006a4, 8) CAST (register, 0x20, 8), (unique, 0x1000025c, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x17, 8)]
[(unique, 0x1000027c, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x17, 8)]
[ ---  CBRANCH (ram, 0x47dfdc, 1) , (unique, 0x1000031d, 1), (unique, 0x1000031d, 1) INT_NOTEQUAL (register, 0x20, 8) , (unique, 0x100006b4, 8), (unique, 0x100006b4, 8) CAST (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100006c4, 8), (unique, 0x100006c4, 8) INT_ADD (unique, 0x100006bc, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100006bc, 8) CAST (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x100006d4, 8), (unique, 0x100006d4, 8) INT_ADD (unique, 0x100006cc, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x100006cc, 8) CAST (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x100006e4, 8), (unique, 0x100006e4, 8) INT_ADD (unique, 0x100006dc, 8) , (unique, 0x10000284, 8), (unique, 0x100006dc, 8) CAST (register, 0x20, 8), (unique, 0x10000284, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x1000027c, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) CAST (unique, 0x100006f4, 8), (unique, 0x100006f4, 8) INT_ADD (unique, 0x100006ec, 8) , (unique, 0x10000284, 8), (unique, 0x100006ec, 8) CAST (register, 0x20, 8), (unique, 0x10000284, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x1000027c, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47dff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x1000027c, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3880, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3880, 8), (unique, 0x3880, 8) CAST (unique, 0x10000704, 8), (unique, 0x10000704, 8) INT_ADD (unique, 0x100006fc, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100006fc, 8) CAST (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47e00e, 8), (register, 0x20, 8) CAST (unique, 0x1000072c, 8), (unique, 0x1000072c, 8) INT_ADD (unique, 0x10000724, 8) , (unique, 0x10000499, 8), (unique, 0x10000724, 8) CAST (register, 0x20, 8), (unique, 0x10000499, 8) INT_ADD (unique, 0x10000284, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6cf, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x6cf, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x6cf, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x6cf, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x6cf, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x6cf, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x6cf, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x6cf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6cf, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6cf, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x1000071c, 8), (unique, 0x1000071c, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000714, 8), (unique, 0x10000714, 8) INT_ADD (unique, 0x1000070c, 8) , (unique, 0x10000491, 8), (unique, 0x1000070c, 8) CAST (register, 0x20, 8), (unique, 0x10000491, 8) INT_ADD (unique, 0x10000284, 8) , (const, 0xf, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6cf, 4)]
[ ---  CBRANCH (ram, 0x47e124, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x48c220, 8) , (register, 0x0, 4) , (register, 0x88, 8) , (register, 0x18, 8), (register, 0x88, 8) CAST (unique, 0x1000071c, 8), (unique, 0x1000071c, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000714, 8), (unique, 0x10000714, 8) INT_ADD (unique, 0x1000070c, 8) , (unique, 0x10000491, 8), (unique, 0x1000070c, 8) CAST (register, 0x20, 8), (unique, 0x10000491, 8) INT_ADD (unique, 0x10000284, 8) , (const, 0xf, 8)]
[(register, 0x0, 8) INT_MULT (register, 0x8, 8) , (const, 0x38, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000734, 8), (unique, 0x10000734, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0x100004d6, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000059e, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x47dcfb, 1)]
[(unique, 0x10000596, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000744, 8), (unique, 0x10000744, 8) INT_ADD (unique, 0x1000073c, 8) , (unique, 0xbd80, 8), (unique, 0x1000073c, 8) CAST (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100005f2, 8) , (unique, 0x100004d6, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47e0c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x88, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000754, 8), (unique, 0x10000754, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000074c, 8), (unique, 0x1000074c, 8) CAST (register, 0x88, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000596, 8) , (unique, 0x1000059e, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000058e, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x47dd2c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x1000058e, 8) , (register, 0x88, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47dd10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47dd10, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1f, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000075c, 8), (unique, 0x1000075c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47dd10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58b00, 8) , (const, 0x0, 8), (unique, 0x58b00, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffffb, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000764, 8), (unique, 0x10000764, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47e038, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0x200, 1) INT_LESS (unique, 0x10000784, 8) , (unique, 0xbd80, 8), (unique, 0x10000784, 8) CAST (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000774, 8) , (unique, 0x1000077c, 8), (unique, 0x1000077c, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000774, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000076c, 8), (unique, 0x1000076c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000079c, 8), (unique, 0x1000079c, 8) INT_ADD (unique, 0x1000078c, 8) , (unique, 0x10000794, 8), (unique, 0x10000794, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000078c, 8) CAST (stack, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x47dde6, 1)]
[ ---  CBRANCH (ram, 0x47e048, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x10000, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47e05f, 8), (register, 0x20, 8) CAST (unique, 0x100007ac, 8), (unique, 0x100007ac, 8) INT_ADD (unique, 0x100007a4, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100007a4, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x616, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x616, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x616, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x616, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x616, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x616, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x616, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x616, 4), (stack, 0xffffffffffffffa8, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x616, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x616, 4), (stack, 0xffffffffffffffb8, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x616, 4)]
[(unique, 0x100005b6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100007bc, 8), (unique, 0x100007bc, 8) CALL (ram, 0x427240, 8) , (register, 0x90, 8) , (unique, 0x100007b4, 8), (unique, 0x100007b4, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x47e124, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100007bc, 8), (unique, 0x100007bc, 8) CALL (ram, 0x427240, 8) , (register, 0x90, 8) , (unique, 0x100007b4, 8), (unique, 0x100007b4, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x38, 8) CAST (unique, 0x100007d4, 8), (unique, 0x100007d4, 8) INT_ADD (unique, 0x100007cc, 8) , (unique, 0x10000186, 8), (unique, 0x100007cc, 8) CAST (register, 0x20, 8), (unique, 0x10000186, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x100007c4, 8) , (const, 0x17, 8), (unique, 0x100007c4, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100001a6, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x100007c4, 8) , (const, 0x17, 8), (unique, 0x100007c4, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100005c2, 8) COPY (unique, 0x100007dc, 8), (unique, 0x100007dc, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47dd9d, 1) , (unique, 0x10000336, 1), (unique, 0x10000336, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100005c2, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007ec, 8) , (unique, 0xbe00, 8), (unique, 0x100007ec, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007e4, 8), (unique, 0x100007e4, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) CAST (unique, 0x100007f4, 8), (unique, 0x100007f4, 8) PTRADD (register, 0x20, 8) , (unique, 0x100001ae, 8) , (const, 0x1, 8), (unique, 0x100001ae, 8) INT_2COMP (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0x100001a6, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47ddb1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0x100001a6, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000804, 8) , (unique, 0xbe00, 8), (unique, 0x10000804, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100007fc, 8), (unique, 0x100007fc, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(unique, 0x100004c6, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000586, 8) COPY (register, 0x88, 8)]
[(unique, 0x100005ae, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x10000814, 8), (unique, 0x10000814, 8) INT_AND (unique, 0x1000080c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000080c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000419, 8) , (const, 0x1, 8), (unique, 0x10000419, 8) INT_ADD (unique, 0x100001ae, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47ddd1, 8), (register, 0x20, 8) CAST (unique, 0x10000824, 8), (unique, 0x10000824, 8) INT_ADD (unique, 0x1000081c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000081c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x4a9, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x4a9, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x4a9, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x4a9, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x4a9, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x4a9, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4a9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100004be, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4a9, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100004c6, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100005da, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4a9, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x0, 8)]
[(unique, 0x100005ea, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4a9, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000586, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x47e11c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CAST (unique, 0x1000082c, 8), (unique, 0x1000082c, 8) CALL (ram, 0x48c220, 8) , (register, 0x0, 4) , (register, 0xa0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4a9, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100004c6, 8) , (stack, 0xffffffffffffffb8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100005ae, 8) , (unique, 0x100005b6, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47e124, 8), (register, 0x20, 8) CAST (unique, 0x1000083c, 8), (unique, 0x1000083c, 8) INT_ADD (unique, 0x10000834, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000834, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x601, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x601, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x601, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x601, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x601, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x601, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x601, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x601, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x601, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x601, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x601, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x18, 8) COPY (const, 0x4af4a3, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000844, 8), (unique, 0x10000844, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000050e, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (unique, 0xbc80, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0xa0, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47de88, 8), (register, 0x20, 8) CAST (unique, 0x10000854, 8), (unique, 0x10000854, 8) INT_ADD (unique, 0x1000084c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000084c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100004de, 8) , (unique, 0x100004e6, 8) , (unique, 0x100004ee, 8) , (unique, 0x100004f6, 8) , (unique, 0x100004fe, 8) , (unique, 0x10000506, 8) , (unique, 0x1000050e, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x1000052e, 8) , (unique, 0x10000536, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x17b, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x17b, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x17b, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x17b, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x17b, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x17b, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x38, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000864, 8), (unique, 0x10000864, 8) INT_ADD (unique, 0x1000085c, 8) , (unique, 0x100001da, 8), (unique, 0x1000085c, 8) CAST (register, 0x20, 8), (unique, 0x100001da, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffff000, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100004de, 8) , (unique, 0x100004e6, 8) , (unique, 0x100004ee, 8) , (unique, 0x100004f6, 8) , (unique, 0x100004fe, 8) , (unique, 0x10000506, 8) , (unique, 0x1000050e, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x1000052e, 8) , (unique, 0x10000536, 8) , (register, 0x20, 8)]
[(unique, 0x100001fa, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x38, 8)]
[(unique, 0x100005ca, 8) COPY (unique, 0x1000086c, 8), (unique, 0x1000086c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100004de, 8) , (unique, 0x100004e6, 8) , (unique, 0x100004ee, 8) , (unique, 0x100004f6, 8) , (unique, 0x100004fe, 8) , (unique, 0x10000506, 8) , (unique, 0x1000050e, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x1000052e, 8) , (unique, 0x10000536, 8) , (register, 0x20, 8)]
[(unique, 0x10000360, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000368, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000370, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000378, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x47dec0, 1) , (unique, 0x10000347, 1), (unique, 0x10000347, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100005ca, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000360, 8) , (const, 0x1bd, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000368, 8) , (const, 0x1bd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000370, 8) , (const, 0x1bd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000378, 8) , (const, 0x1bd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000087c, 8) , (unique, 0xbe00, 8), (unique, 0x1000087c, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000874, 8), (unique, 0x10000874, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x10000202, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001fa, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47df48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001fa, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000088c, 8) , (unique, 0xbe00, 8), (unique, 0x1000088c, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000884, 8), (unique, 0x10000884, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x47dece, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000089c, 8) , (const, 0x47dee2, 8), (unique, 0x1000089c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000441, 8) , (const, 0x1, 8), (unique, 0x10000441, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008ac, 8) , (const, 0x47deed, 8), (unique, 0x100008ac, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000449, 8) , (const, 0x1, 8), (unique, 0x10000449, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008b4, 8) , (const, 0x0, 8), (unique, 0x100008b4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000451, 8) , (const, 0x1, 8), (unique, 0x10000451, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x20, 8) CAST (unique, 0x100008bc, 8), (unique, 0x100008bc, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000469, 8) , (const, 0x1, 8), (unique, 0x10000469, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008c4, 8) , (const, 0x0, 8), (unique, 0x100008c4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000461, 8) , (const, 0x1, 8), (unique, 0x10000461, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d4, 8) , (const, 0x47df07, 8), (unique, 0x100008d4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100008cc, 8) , (const, 0x1, 8), (unique, 0x100008cc, 8) CAST (unique, 0x10000459, 8), (unique, 0x10000459, 8) PTRADD (unique, 0x100004ae, 8) , (unique, 0x10000202, 8) , (const, 0x1, 8), (unique, 0x100004ae, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffe8, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x227, 4), (register, 0x30, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x227, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x204, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ff, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x227, 4), (ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x204, 4), (ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x1ff, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x227, 4), (ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x204, 4), (ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x1ff, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x227, 4), (ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x204, 4), (ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x1ff, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x227, 4), (ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x204, 4), (ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x1ff, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x227, 4), (ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x204, 4), (ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x227, 4), (ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x204, 4), (ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x227, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000360, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x227, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000368, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x227, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000370, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x227, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000378, 8) , (const, 0x1ff, 4)]
[ ---  CALL (ram, 0x47cc10, 8) , (register, 0xa0, 4) , (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x18, 8), (register, 0x30, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 8) CAST (unique, 0x100008a4, 8), (unique, 0x100008a4, 8) CALL (ram, 0x401060, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x38, 8) INT_AND (unique, 0x10000894, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000894, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000439, 8) , (const, 0x1, 8), (unique, 0x10000439, 8) INT_ADD (unique, 0x10000202, 8) , (const, 0xf, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x10000546, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47db6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x3010102464c457f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (unique, 0x100005f2, 8) , (register, 0x20, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47e10d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x464c457f, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008dc, 8), (unique, 0x100008dc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x4af509, 8)]
[(unique, 0x10000506, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[ ---  CBRANCH (ram, 0x47dc20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008ec, 8), (unique, 0x100008ec, 8) INT_ADD (unique, 0x100008e4, 8) , (const, 0xc, 8), (unique, 0x100008e4, 8) CAST (register, 0xb0, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x2c9, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x2c9, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x2c9, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x2c9, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x2c9, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x2c9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x1, 1)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000576, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47e090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x3e, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008fc, 8), (unique, 0x100008fc, 8) INT_ADD (unique, 0x100008f4, 8) , (const, 0x1a, 8), (unique, 0x100008f4, 8) CAST (register, 0xb0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000576, 8) , (unique, 0x100005f2, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47dc30, 1)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x4af740, 8)]
[(unique, 0x100004de, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47de80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000090c, 8), (unique, 0x1000090c, 8) INT_ADD (unique, 0x10000904, 8) , (const, 0xd, 8), (unique, 0x10000904, 8) CAST (register, 0xb0, 8)]
[(register, 0x18, 8) COPY (const, 0x4af708, 8)]
[(unique, 0x100004e6, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47de80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000091c, 8), (unique, 0x1000091c, 8) INT_ADD (unique, 0x10000914, 8) , (const, 0xe, 8), (unique, 0x10000914, 8) CAST (register, 0xb0, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000092c, 8), (unique, 0x1000092c, 8) INT_ADD (unique, 0x10000924, 8) , (const, 0xf, 8), (unique, 0x10000924, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47dbf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000092c, 8), (unique, 0x1000092c, 8) INT_ADD (unique, 0x10000924, 8) , (const, 0xf, 8), (unique, 0x10000924, 8) CAST (register, 0xb0, 8)]
[(register, 0x18, 8) COPY (const, 0x4af4b9, 8)]
[(unique, 0x100004ee, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47de80, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x47e0c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000934, 8), (unique, 0x10000934, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47dc0c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x4, 1)]
[ ---  CBRANCH (ram, 0x47e0c8, 1) , (register, 0x206, 1)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x4af4d1, 8)]
[(unique, 0x100004f6, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[ ---  CBRANCH (ram, 0x47e0e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (ram, 0x4afc69, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000944, 8), (unique, 0x10000944, 8) INT_ADD (unique, 0x1000093c, 8) , (const, 0x11, 8), (unique, 0x1000093c, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47e0d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb80, 2) , (ram, 0x4afc6d, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000954, 8), (unique, 0x10000954, 8) INT_ADD (unique, 0x1000094c, 8) , (const, 0x15, 8), (unique, 0x1000094c, 8) CAST (register, 0xb0, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x4af51c, 8)]
[ ---  CBRANCH (ram, 0x47e0d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (ram, 0x4afc6f, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000964, 8), (unique, 0x10000964, 8) INT_ADD (unique, 0x1000095c, 8) , (const, 0x17, 8), (unique, 0x1000095c, 8) CAST (register, 0xb0, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0x4af4ee, 8)]
[(unique, 0x100004fe, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x47de80, 1)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100005e2, 8) , (unique, 0x100005ea, 8) , (register, 0x88, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x100005d2, 8) , (unique, 0x100005da, 8) , (register, 0x90, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100004b6, 8) , (unique, 0x100004be, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x47df58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_XOR (unique, 0xbd80, 8) , (ram, 0x4afd58, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (ram, 0x4afd50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (unique, 0x3400, 8), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[ ---  CBRANCH (ram, 0x47df98, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x4, 8), (register, 0x30, 8) CAST (unique, 0x1000098c, 8), (unique, 0x1000098c, 8) INT_AND (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x98, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (register, 0x30, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xb, 8), (register, 0x98, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000984, 8), (unique, 0x10000984, 8) INT_ADD (unique, 0x1000097c, 8) , (const, 0x4, 8), (unique, 0x1000097c, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000974, 8), (unique, 0x10000974, 8) CAST (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000096c, 8), (unique, 0x1000096c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(unique, 0x100004b6, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100009a4, 8), (unique, 0x100009a4, 8) INT_SUB (unique, 0x10000994, 8) , (unique, 0x1000099c, 8), (unique, 0x1000099c, 8) CAST (register, 0x30, 8), (unique, 0x10000994, 8) CAST (register, 0x10, 8)]
[(unique, 0x100005d2, 8) COPY (register, 0x90, 8)]
[(unique, 0x100005e2, 8) COPY (register, 0x88, 8)]
[(register, 0xa0, 8) CAST (unique, 0x100009bc, 8), (unique, 0x100009bc, 8) INT_ADD (unique, 0x100009ac, 8) , (unique, 0x100009b4, 8), (unique, 0x100009b4, 8) CAST (register, 0x30, 8), (unique, 0x100009ac, 8) CAST (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x47ddf0, 1)]
[ ---  CBRANCH (ram, 0x47df98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47dc30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009c4, 8), (unique, 0x100009c4, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47dc54, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (ram, 0x4c8868, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x100, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100009ec, 8), (unique, 0x100009ec, 8) INT_ADD (unique, 0x100009e4, 8) , (const, 0x1c, 8), (unique, 0x100009e4, 8) CAST (register, 0xa0, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_MULT (unique, 0x100002fc, 4) , (const, 0x100, 4), (unique, 0x100002fc, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009dc, 8), (unique, 0x100009dc, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100009d4, 8), (unique, 0x100009d4, 8) INT_ADD (unique, 0x100009cc, 8) , (const, 0x14, 8), (unique, 0x100009cc, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47dc54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8868, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47dc42, 8), (register, 0x20, 8) CAST (unique, 0x100009fc, 8), (unique, 0x100009fc, 8) INT_ADD (unique, 0x100009f4, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100009f4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a9, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a9, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x2ad, 4), (ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x2a9, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x2ad, 4), (ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x2a9, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x2ad, 4), (ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x2a9, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x2ad, 4), (ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x2a9, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x2ad, 4), (ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x2a9, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x2ad, 4), (ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x2a9, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x2, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000a04, 8), (unique, 0x10000a04, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100005a6, 8) COPY (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a8, 4), (stack, 0xffffffffffffffc0, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(unique, 0x100005be, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000a0c, 8), (unique, 0x10000a0c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x47dd10, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47dc54, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (register, 0x18, 8), (unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (unique, 0x100003f1, 8) , (const, 0x4, 8), (unique, 0x100003f1, 8) INT_MULT (register, 0x8, 8) , (const, 0xe, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xe, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47dc54, 1)]
[(register, 0xb8, 4) MULTIEQUAL (unique, 0x100005be, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47dc5c, 8), (register, 0x20, 8) CAST (unique, 0x10000a1c, 8), (unique, 0x10000a1c, 8) INT_ADD (unique, 0x10000a14, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000a14, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x2b4, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x2b4, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x2b4, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x2b4, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x2b4, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x2b4, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2b4, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2b4, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2b4, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b4, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x100005a6, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(ram, 0x4afc69, 4) COPY (ram, 0x4afc69, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) COPY (ram, 0x4afc6d, 2), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) COPY (ram, 0x4afc6f, 1), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) COPY (ram, 0x4afd50, 8), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) COPY (ram, 0x4afd58, 8), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) COPY (ram, 0x4c8868, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb8, 4)]
