[ ---  CBRANCH (ram, 0x21c99b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7640, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc9, 4)]
[(ram, 0x4c7638, 8) INDIRECT (ram, 0x4c7638, 8) , (const, 0xc9, 4)]
[(ram, 0x4c7640, 8) INDIRECT (ram, 0x4c7640, 8) , (const, 0xc9, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0xc9, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0xc9, 4)]
[(stack, 0xfffffffffffffbb8, 8) INDIRECT (stack, 0xfffffffffffffbb8, 8) , (const, 0xc9, 4)]
[ ---  CBRANCH (ram, 0x21c9c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x244240, 8) , (unique, 0x3800, 8) , (unique, 0x100000a2, 8) , (unique, 0x3800, 8), (unique, 0x100000a2, 8) COPY (const, 0x28ee0b, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffba8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7638, 8) COPY (ram, 0x4c7638, 8)]
[(ram, 0x4c7640, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffbb0, 8) COPY (ram, 0x4c7640, 8)]
[(stack, 0xfffffffffffffba8, 8) COPY (ram, 0x4c7638, 8)]
[ ---  CBRANCH (ram, 0x21c96e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7640, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7638, 8) COPY (ram, 0x4c7638, 8)]
[(ram, 0x4c7640, 8) COPY (ram, 0x4c7640, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xfffffffffffffbb8, 8) MULTIEQUAL (stack, 0xfffffffffffffbb8, 8) , (stack, 0xfffffffffffffbb8, 8)]
[(register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb0, 8)]
[(register, 0x28, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffba8, 8)]
[(register, 0x10, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb8, 8)]
[(unique, 0x100000e6, 8) COPY (stack, 0xfffffffffffffba8, 8), (stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(unique, 0x100000ee, 8) COPY (stack, 0xfffffffffffffbb0, 8), (stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[ ---  BRANCH (ram, 0x21c939, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x79, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5b, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7638, 8) INDIRECT (ram, 0x4c7638, 8) , (const, 0x79, 4), (ram, 0x4c7638, 8) INDIRECT (ram, 0x4c7638, 8) , (const, 0x5b, 4), (ram, 0x4c7638, 8) MULTIEQUAL (unique, 0x100000e6, 8) , (ram, 0x4c7638, 8)]
[(ram, 0x4c7640, 8) INDIRECT (ram, 0x4c7640, 8) , (const, 0x79, 4), (ram, 0x4c7640, 8) INDIRECT (ram, 0x4c7640, 8) , (const, 0x5b, 4), (ram, 0x4c7640, 8) MULTIEQUAL (unique, 0x100000ee, 8) , (ram, 0x4c7640, 8)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x79, 4), (stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0x5b, 4), (stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x79, 4), (stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0x5b, 4), (stack, 0xfffffffffffffbb0, 8) MULTIEQUAL (stack, 0xfffffffffffffbb0, 8) , (stack, 0xfffffffffffffbb0, 8)]
[(stack, 0xfffffffffffffbb8, 8) INDIRECT (stack, 0xfffffffffffffbb8, 8) , (const, 0x79, 4), (stack, 0xfffffffffffffbb8, 8) INDIRECT (stack, 0xfffffffffffffbb8, 8) , (const, 0x5b, 4), (stack, 0xfffffffffffffbb8, 8) MULTIEQUAL (stack, 0xfffffffffffffbb8, 8) , (stack, 0xfffffffffffffbb8, 8)]
[ ---  CBRANCH (ram, 0x21c930, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (register, 0xa0, 8) , (unique, 0x100000aa, 8) , (const, 0x0, 8) , (register, 0x28, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000aa, 8) COPY (const, 0x28ee0b, 8), (register, 0x0, 4) CALLIND (stack, 0xfffffffffffffba8, 8) , (register, 0x30, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (const, 0x400, 8) , (register, 0x10, 8), (stack, 0xfffffffffffffba8, 8) MULTIEQUAL (stack, 0xfffffffffffffba8, 8) , (stack, 0xfffffffffffffba8, 8)]
[ ---  CBRANCH (ram, 0x21c988, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(stack, 0xfffffffffffffba8, 8) INDIRECT (stack, 0xfffffffffffffba8, 8) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffbb0, 8) INDIRECT (stack, 0xfffffffffffffbb0, 8) , (const, 0xaf, 4)]
[ ---  CALL (ram, 0x18a770, 8) , (register, 0x38, 8) , (stack, 0xfffffffffffffbb8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xaf, 4)]
[(ram, 0x4c7638, 8) COPY (ram, 0x4c7638, 8), (ram, 0x4c7638, 8) INDIRECT (ram, 0x4c7638, 8) , (const, 0xaf, 4)]
[(ram, 0x4c7640, 8) COPY (ram, 0x4c7640, 8), (ram, 0x4c7640, 8) INDIRECT (ram, 0x4c7640, 8) , (const, 0xaf, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7638, 8) COPY (ram, 0x4c7638, 8)]
[(ram, 0x4c7640, 8) COPY (ram, 0x4c7640, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
