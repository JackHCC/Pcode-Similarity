[(unique, 0x100002fc, 8) COPY (ram, 0x2bc3f8, 8)]
[(register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_OR (unique, 0x100000a2, 4) , (unique, 0x100000a6, 4), (unique, 0x100000a6, 4) INT_ZEXT (register, 0x206, 1), (unique, 0x100000a2, 4) INT_AND (unique, 0x100000b2, 4) , (const, 0xffffff00, 4), (unique, 0x100000b2, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_OR (unique, 0x1000009a, 4) , (unique, 0x1000009e, 4), (unique, 0x1000009e, 4) INT_ZEXT (unique, 0xce80, 1), (unique, 0x1000009a, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff00, 4), (unique, 0xce80, 1) INT_SLESS (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21c1d0, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESS (ram, 0x2bc3f8, 8) , (unique, 0x100003fc, 8), (unique, 0x100003fc, 8) CAST (register, 0x1240, 8), (register, 0x1240, 8) INT_AND (unique, 0x100003f4, 8) , (ram, 0x2bbe20, 8), (unique, 0x100003f4, 8) CAST (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x21c230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x485, 4), (ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x479, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x485, 4), (ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x479, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x485, 4), (ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x479, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x485, 4), (ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x479, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x485, 4), (ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x479, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x485, 4), (ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x479, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x485, 4), (ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x479, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x485, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x479, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x1, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c535, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c200, 1) , (unique, 0x18400, 1), (unique, 0x18400, 1) FLOAT_EQUAL (register, 0x1200, 8) , (const, 0x0, 8)]
[(unique, 0x100003bc, 8) COPY (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x21c328, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1200, 8) , (const, 0x0, 8)]
[(register, 0x1280, 8) CAST (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) INT_XOR (unique, 0x10000404, 8) , (ram, 0x2bbe10, 8), (unique, 0x10000404, 8) CAST (register, 0x1200, 8)]
[ ---  BRANCH (ram, 0x21c165, 1)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0x100003ac, 8) COPY (register, 0x1280, 8), (register, 0x1280, 8) MULTIEQUAL (unique, 0x100003bc, 8) , (register, 0x1280, 8)]
[ ---  CBRANCH (ram, 0x21c18c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) FLOAT_LESS (register, 0x1280, 8) , (ram, 0x2bc460, 8), (register, 0x1280, 8) MULTIEQUAL (unique, 0x100003bc, 8) , (register, 0x1280, 8)]
[(register, 0x28, 4) COPY (const, 0xfffffecd, 4)]
[(unique, 0x100003b4, 8) COPY (register, 0x1220, 8), (register, 0x1220, 8) FLOAT_DIV (register, 0x1200, 8) , (ram, 0x2bc460, 8)]
[ ---  CBRANCH (ram, 0x21c488, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1220, 8) , (const, 0x0, 8), (register, 0x1220, 8) FLOAT_DIV (register, 0x1200, 8) , (ram, 0x2bc460, 8)]
[(register, 0x1280, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_XOR (unique, 0x10000414, 8) , (ram, 0x2bbe10, 8), (unique, 0x10000414, 8) CAST (register, 0x1220, 8)]
[(register, 0x28, 4) COPY (const, 0xfffffecd, 4)]
[ ---  BRANCH (ram, 0x21c18c, 1)]
[(register, 0x1220, 8) MULTIEQUAL (register, 0x1200, 8) , (register, 0x1220, 8) , (register, 0x1220, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x100003cc, 8) COPY (ram, 0x2bc3d0, 8)]
[ ---  CBRANCH (ram, 0x21c338, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1280, 8) , (ram, 0x2bc3d0, 8), (register, 0x1280, 8) MULTIEQUAL (unique, 0x100003ac, 8) , (unique, 0x100003b4, 8) , (register, 0x1280, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x100003c4, 8) COPY (register, 0x12c0, 8), (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (ram, 0x2bc468, 8), (register, 0x12c0, 8) MULTIEQUAL (unique, 0x100003c4, 8) , (unique, 0x100003cc, 8)]
[ ---  CBRANCH (ram, 0x21c348, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x12e0, 8) , (ram, 0x2bc3d0, 8), (register, 0x12e0, 8) FLOAT_MULT (register, 0x1280, 8) , (register, 0x12c0, 8), (register, 0x12c0, 8) FLOAT_MULT (register, 0x12c0, 8) , (ram, 0x2bc468, 8), (register, 0x12c0, 8) MULTIEQUAL (unique, 0x100003c4, 8) , (unique, 0x100003cc, 8)]
[(register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (register, 0x12c0, 8)]
[ ---  BRANCH (ram, 0x21c202, 1)]
[(unique, 0x100003d4, 8) COPY (ram, 0x2bc3d0, 8)]
[ ---  CBRANCH (ram, 0x21c202, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESSEQUAL (ram, 0x2bc468, 8) , (register, 0x1280, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x21c1b0, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESSEQUAL (register, 0x12c0, 8) , (register, 0x1280, 8), (register, 0x12c0, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x2bc468, 8), (register, 0x1240, 8) FLOAT_MULT (register, 0x1240, 8) , (ram, 0x2bc468, 8), (register, 0x1240, 8) MULTIEQUAL (unique, 0x100003d4, 8) , (register, 0x1240, 8)]
[(register, 0x1220, 8) FLOAT_DIV (register, 0x1220, 8) , (register, 0x1240, 8)]
[ ---  BRANCH (ram, 0x21c202, 1)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0x1220, 8) MULTIEQUAL (register, 0x1220, 8) , (register, 0x1220, 8) , (register, 0x1220, 8) , (register, 0x1200, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x21c370, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[(register, 0x0, 4) COPY (const, 0x11, 4)]
[(unique, 0x100003dc, 4) COPY (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x21c37b, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (const, 0x11, 4) , (register, 0x38, 4)]
[(unique, 0x100003e0, 4) COPY (register, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0x100003dc, 4) , (unique, 0x100003e0, 4)]
[ ---  CBRANCH (ram, 0x21c535, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000424, 8) , (const, 0x16, 4), (unique, 0x10000424, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x2bbe10, 8) COPY (ram, 0x2bbe10, 8), (ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x433, 4)]
[(ram, 0x2bbe20, 8) COPY (ram, 0x2bbe20, 8), (ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x433, 4)]
[(ram, 0x2bc3d0, 8) COPY (ram, 0x2bc3d0, 8), (ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x433, 4)]
[(ram, 0x2bc3f8, 8) COPY (ram, 0x2bc3f8, 8), (ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x433, 4)]
[(ram, 0x2bc458, 8) COPY (ram, 0x2bc458, 8), (ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x433, 4)]
[(ram, 0x2bc460, 8) COPY (ram, 0x2bc460, 8), (ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x433, 4)]
[(ram, 0x2bc468, 8) COPY (ram, 0x2bc468, 8), (ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x433, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x433, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21c249, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESS (ram, 0x2bc3f8, 8) , (unique, 0x10000434, 8), (unique, 0x10000434, 8) CAST (register, 0x1200, 8), (register, 0x1200, 8) INT_AND (ram, 0x2bbe20, 8) , (unique, 0x1000042c, 8), (unique, 0x1000042c, 8) CAST (register, 0x1220, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x425, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x425, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x425, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x425, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x425, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x425, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x425, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x425, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000384, 8) COPY (register, 0x1220, 8), (register, 0x1220, 8) MULTIEQUAL (register, 0x1220, 8) , (register, 0x1200, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x177, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x177, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x177, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x177, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x177, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x177, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x177, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x177, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000018e, 4), (unique, 0x1000018e, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (const, 0x11, 4) , (unique, 0x10000022, 16), (unique, 0x10000022, 16) INT_ADD (unique, 0x100002ec, 16) , (unique, 0x10000444, 8), (unique, 0x10000444, 8) CAST (register, 0x1220, 8), (unique, 0x100002ec, 16) INT_LEFT (unique, 0x100002dc, 16) , (const, 0x40, 16), (unique, 0x100002dc, 16) INT_SEXT (unique, 0x1000043c, 8), (unique, 0x1000043c, 8) CAST (register, 0x1208, 8)]
[ ---  CBRANCH (ram, 0x21c3ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (const, 0x11, 4) , (unique, 0x10000022, 16), (unique, 0x10000022, 16) INT_ADD (unique, 0x100002ec, 16) , (unique, 0x10000444, 8), (unique, 0x10000444, 8) CAST (register, 0x1220, 8), (unique, 0x100002ec, 16) INT_LEFT (unique, 0x100002dc, 16) , (const, 0x40, 16), (unique, 0x100002dc, 16) INT_SEXT (unique, 0x1000043c, 8), (unique, 0x1000043c, 8) CAST (register, 0x1208, 8)]
[(register, 0x1220, 8) CAST (unique, 0x10000454, 8), (unique, 0x10000454, 8) INT_XOR (unique, 0x1000044c, 8) , (ram, 0x2bbe10, 8), (unique, 0x1000044c, 8) CAST (register, 0x1220, 8)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000037c, 8) COPY (register, 0x1220, 8), (register, 0x1220, 8) MULTIEQUAL (register, 0x1220, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x21c252, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x3100, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_SUB (const, 0x1, 4) , (register, 0x38, 4)]
[(unique, 0x1000039c, 8) COPY (register, 0x1220, 8)]
[(unique, 0x100003e4, 4) COPY (register, 0xa8, 4)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x100003e4, 4) , (register, 0xa8, 4)]
[(unique, 0x1000038c, 8) COPY (register, 0x1220, 8), (register, 0x1220, 8) MULTIEQUAL (unique, 0x1000039c, 8) , (unique, 0x10000394, 8)]
[ ---  CBRANCH (ram, 0x21c520, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) FLOAT_LESS (register, 0x1220, 8) , (ram, 0x2bc3d0, 8), (register, 0x1220, 8) FLOAT_MULT (register, 0x1220, 8) , (ram, 0x2bc458, 8), (register, 0x1220, 8) MULTIEQUAL (unique, 0x1000039c, 8) , (unique, 0x10000394, 8)]
[(unique, 0x10000394, 8) COPY (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x21c3d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (register, 0x0, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x1220, 8) MULTIEQUAL (unique, 0x1000037c, 8) , (unique, 0x10000384, 8) , (unique, 0x1000038c, 8) , (unique, 0x10000394, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x1e1, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x1e1, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x1e1, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x1e1, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x1e1, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x1e1, 4), (ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x1e1, 4), (ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x21c52b, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0x1000045c, 8) , (register, 0xb0, 8), (unique, 0x1000045c, 8) CAST (register, 0x80, 8), (register, 0xb0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x164f50, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) COPY (const, 0x2b58f2, 8)]
[(ram, 0x2bbe10, 8) COPY (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) COPY (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) COPY (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) COPY (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) COPY (ram, 0x2bc458, 8)]
[(ram, 0x2bc460, 8) COPY (ram, 0x2bc460, 8)]
[(ram, 0x2bc468, 8) COPY (ram, 0x2bc468, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21c4a0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x21c4a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x21c1e9, 1)]
[(unique, 0x10000304, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x21c2c4, 1)]
[ ---  CBRANCH (ram, 0x21c2b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x10000314, 8), (unique, 0x10000314, 8) MULTIEQUAL (unique, 0x10000304, 8) , (unique, 0x1000030c, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x232, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x232, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x232, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x232, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x232, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x232, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x232, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x232, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4)]
[(unique, 0x1000030c, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x21c400, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x10, 4) , (const, 0xa, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000295, 8) , (const, 0x1, 8), (unique, 0x10000295, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x2ce, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x2ce, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x2ce, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x2ce, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x2ce, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x2ce, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x2ce, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ce, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 4), (register, 0x38, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4)]
[(unique, 0x10000334, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x100002a5, 8) , (const, 0x1, 8), (unique, 0x100002a5, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)]
[(unique, 0x1000035c, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x21c422, 1)]
[(register, 0x10, 8) COPY (unique, 0x10000344, 8), (unique, 0x10000344, 8) MULTIEQUAL (unique, 0x10000334, 8) , (unique, 0x1000033c, 8)]
[ ---  CBRANCH (ram, 0x21c410, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) COPY (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) MULTIEQUAL (unique, 0x1000035c, 8) , (unique, 0x10000364, 8)]
[(unique, 0x1000033c, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000364, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x21c42e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x21c4b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21c434, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x21c4cc, 1) , (unique, 0x18400, 1), (unique, 0x18400, 1) FLOAT_NOTEQUAL (register, 0x1220, 8) , (const, 0x0, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x38a, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x38a, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x38a, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x38a, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x38a, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x38a, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x38a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x38a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c54d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x3100, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x21c54d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x88, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x21c434, 1)]
[(unique, 0x1000031c, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (unique, 0x100002ad, 8) , (const, 0x1, 8), (unique, 0x100002ad, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0x100003e8, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x21c508, 1)]
[(register, 0x10, 8) COPY (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) MULTIEQUAL (unique, 0x1000031c, 8) , (unique, 0x10000324, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x3ae, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x3ae, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x3ae, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x3ae, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x3ae, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x3ae, 4), (ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x3ae, 4), (ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ae, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x100003f0, 4), (unique, 0x100003f0, 4) MULTIEQUAL (unique, 0x100003e8, 4) , (unique, 0x100003ec, 4)]
[ ---  CBRANCH (ram, 0x21c4f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb8, 8)]
[(unique, 0x10000324, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100003ec, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21c434, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_SUB (register, 0xb0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8)]
[(unique, 0x1000034c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_SEXT (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x0, 4) , (register, 0x88, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c44b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x88, 4) , (const, 0x0, 4), (register, 0x88, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x0, 4) , (register, 0x88, 4) , (register, 0x0, 4)]
[(unique, 0x10000354, 8) COPY (register, 0x8, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x31f, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x31f, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x31f, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x31f, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x31f, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x31f, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x31f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31f, 4)]
[ ---  CALL (ram, 0x1212b0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x38, 8) PTRADD (register, 0x8, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000034c, 8) , (unique, 0x10000354, 8)]
[(stack, 0xffffffffffffffb8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21c46e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x351, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x351, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x351, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x351, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x351, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x351, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x351, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x351, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_SUB (register, 0xb0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_SUB (register, 0xb8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x21c2d1, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x21c1e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x25a, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x25a, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x25a, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x25a, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x25a, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x25a, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x25a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x21c1e9, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0xb0, 8) , (unique, 0x10000464, 8), (unique, 0x10000464, 8) CAST (register, 0x80, 8), (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (const, 0x1, 8)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x27f, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x27f, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x27f, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x27f, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x27f, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x27f, 4), (ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x27f, 4), (ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x30, 1), (unique, 0x3a00, 8) PTRADD (register, 0x8, 8) , (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000374, 8) , (register, 0xb0, 8)]
[(unique, 0x10000374, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000374, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x21c2f8, 1) , (unique, 0x10000227, 1), (unique, 0x10000227, 1) BOOL_AND (unique, 0xd080, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0xa8, 4), (unique, 0xd080, 1) INT_SLESS (register, 0xb0, 8) , (unique, 0x1000046c, 8), (unique, 0x1000046c, 8) CAST (register, 0x80, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0xffffffff, 4), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000374, 8) , (register, 0xb0, 8), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x2a9, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x2a9, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x2a9, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x2a9, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x2a9, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x2a9, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x2a9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2a9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x8, 8) , (register, 0xb0, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x21c1e9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 1)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0xde, 4), (ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0xdc, 4)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0xde, 4), (ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0xdc, 4)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0xde, 4), (ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0xdc, 4)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0xde, 4), (ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0xdc, 4)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0xde, 4), (ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0xdc, 4)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0xde, 4), (ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0xdc, 4)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0xde, 4), (ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0xdc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xde, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xdc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21c555, 1) , (unique, 0x18500, 1), (unique, 0x18500, 1) FLOAT_LESS (unique, 0x100002fc, 8) , (register, 0x1200, 8), (register, 0x1200, 8) CAST (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) INT_AND (ram, 0x2bbe20, 8) , (unique, 0x10000474, 8), (unique, 0x10000474, 8) CAST (register, 0x1220, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x21c1e3, 1)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLOTHER (const, 0x72, 4) , (register, 0x0, 4) , (unique, 0x10000012, 16), (unique, 0x10000012, 16) INT_ADD (unique, 0x100002cc, 16) , (unique, 0x1000048c, 8), (unique, 0x1000048c, 8) CAST (register, 0x1220, 8), (unique, 0x100002cc, 16) INT_LEFT (unique, 0x100002bc, 16) , (const, 0x40, 16), (unique, 0x100002bc, 16) INT_SEXT (unique, 0x10000484, 8), (unique, 0x10000484, 8) CAST (register, 0x1208, 8)]
[ ---  BRANCH (ram, 0x21c1e3, 1)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0xf7, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0xf7, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0xf7, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0xf7, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0xf7, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0xf7, 4), (ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0xf7, 4), (ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf7, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x28, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x2bbe10, 8) COPY (ram, 0x2bbe10, 8), (ram, 0x2bbe10, 8) INDIRECT (ram, 0x2bbe10, 8) , (const, 0x106, 4), (ram, 0x2bbe10, 8) MULTIEQUAL (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8) , (ram, 0x2bbe10, 8)]
[(ram, 0x2bbe20, 8) COPY (ram, 0x2bbe20, 8), (ram, 0x2bbe20, 8) INDIRECT (ram, 0x2bbe20, 8) , (const, 0x106, 4), (ram, 0x2bbe20, 8) MULTIEQUAL (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8) , (ram, 0x2bbe20, 8)]
[(ram, 0x2bc3d0, 8) COPY (ram, 0x2bc3d0, 8), (ram, 0x2bc3d0, 8) INDIRECT (ram, 0x2bc3d0, 8) , (const, 0x106, 4), (ram, 0x2bc3d0, 8) MULTIEQUAL (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8) , (ram, 0x2bc3d0, 8)]
[(ram, 0x2bc3f8, 8) COPY (ram, 0x2bc3f8, 8), (ram, 0x2bc3f8, 8) INDIRECT (ram, 0x2bc3f8, 8) , (const, 0x106, 4), (ram, 0x2bc3f8, 8) MULTIEQUAL (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8) , (ram, 0x2bc3f8, 8)]
[(ram, 0x2bc458, 8) COPY (ram, 0x2bc458, 8), (ram, 0x2bc458, 8) INDIRECT (ram, 0x2bc458, 8) , (const, 0x106, 4), (ram, 0x2bc458, 8) MULTIEQUAL (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8) , (ram, 0x2bc458, 8)]
[(ram, 0x2bc460, 8) COPY (ram, 0x2bc460, 8), (ram, 0x2bc460, 8) INDIRECT (ram, 0x2bc460, 8) , (const, 0x106, 4), (ram, 0x2bc460, 8) MULTIEQUAL (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8) , (ram, 0x2bc460, 8)]
[(ram, 0x2bc468, 8) COPY (ram, 0x2bc468, 8), (ram, 0x2bc468, 8) INDIRECT (ram, 0x2bc468, 8) , (const, 0x106, 4), (ram, 0x2bc468, 8) MULTIEQUAL (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8) , (ram, 0x2bc468, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x106, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
