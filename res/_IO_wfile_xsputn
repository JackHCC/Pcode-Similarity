[ ---  CBRANCH (ram, 0x186aa9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000398, 8), (unique, 0x10000398, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000390, 8), (unique, 0x10000390, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000390, 8), (unique, 0x10000390, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xa00, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xa00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100001f4, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1868ef, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1868ef, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xa, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) CAST (unique, 0x100003d0, 8), (unique, 0x100003d0, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100003c8, 8), (unique, 0x100003c8, 8) CAST (unique, 0x3400, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x10, 8) INT_NEGATE (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0x100003c0, 8) , (unique, 0x10000335, 8), (unique, 0x100003c0, 8) CAST (unique, 0x3100, 8), (unique, 0x10000335, 8) INT_SUB (const, 0x3, 8) , (unique, 0x100003b8, 8), (unique, 0x100003b8, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x186b31, 1)]
[ ---  CBRANCH (ram, 0x186b28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x100001f3, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x1868ef, 1)]
[ ---  CBRANCH (ram, 0x186b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xa, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x100001f2, 1) COPY (const, 0x1, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SRIGHT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) CAST (unique, 0x100003e8, 8), (unique, 0x100003e8, 8) INT_SUB (unique, 0x100003d8, 8) , (unique, 0x100003e0, 8), (unique, 0x100003e0, 8) CAST (register, 0x30, 8), (unique, 0x100003d8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1868ef, 1)]
[(unique, 0x100001f5, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100003f0, 8), (unique, 0x100003f0, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100001f0, 1) MULTIEQUAL (unique, 0x100001f5, 1) , (unique, 0x100001f4, 1) , (unique, 0x100001f4, 1) , (unique, 0x100001f3, 1) , (unique, 0x100001f2, 1)]
[(unique, 0x10000350, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x186ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000358, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1868ff, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x10000360, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x186a60, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (const, 0x15, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x0, 8) CALL (ram, 0x1bd680, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x18, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0x1000007f, 4) , (const, 0x1, 4), (unique, 0x1000007f, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x186b70, 1) , (unique, 0x1000019e, 1), (unique, 0x1000019e, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186b70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x1000007f, 4) , (const, 0xd, 4)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (register, 0x30, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10000418, 8), (unique, 0x10000418, 8) INT_ADD (unique, 0x10000410, 8) , (register, 0x0, 8), (unique, 0x10000410, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000408, 8), (unique, 0x10000408, 8) INT_ADD (unique, 0x10000400, 8) , (register, 0x0, 8), (unique, 0x10000400, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x186b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3580, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000380, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000388, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x186b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x1000009b, 4), (unique, 0x1000009b, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_RIGHT (unique, 0x10000420, 8) , (const, 0x2, 4), (unique, 0x10000420, 8) CAST (register, 0x30, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) INT_SUB (unique, 0x1000007f, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000368, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1869aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) INT_SUB (unique, 0x1000007f, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000370, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1869aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x3, 4)]
[(unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) INT_SUB (unique, 0x1000007f, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10000378, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x10000388, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000368, 8) , (unique, 0x10000370, 8) , (unique, 0x10000378, 8) , (unique, 0x10000380, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x30, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4)]
[(register, 0x90, 4) INT_RIGHT (register, 0x98, 4) , (const, 0x2, 4), (register, 0x98, 4) INT_SUB (unique, 0x1000007f, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100001a7, 4), (unique, 0x3400, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) INT_ADD (unique, 0x10000438, 8) , (unique, 0x1000026d, 8), (unique, 0x10000438, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000026d, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x100001a7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x10000428, 8) , (unique, 0x10000265, 8), (unique, 0x10000428, 8) CAST (register, 0x30, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cf, 8) , (unique, 0x100001ab, 4), (unique, 0x100001cf, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) INT_ADD (unique, 0x10000438, 8) , (unique, 0x1000026d, 8), (unique, 0x10000438, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000026d, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x100001ab, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001af, 8), (unique, 0x100001af, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x10000428, 8) , (unique, 0x10000265, 8), (unique, 0x10000428, 8) CAST (register, 0x30, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d7, 8) , (unique, 0x100001b7, 4), (unique, 0x100001d7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) INT_ADD (unique, 0x10000438, 8) , (unique, 0x1000026d, 8), (unique, 0x10000438, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000026d, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x100001b7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001bb, 8), (unique, 0x100001bb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x10000428, 8) , (unique, 0x10000265, 8), (unique, 0x10000428, 8) CAST (register, 0x30, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001df, 8) , (unique, 0x100001c3, 4), (unique, 0x100001df, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) INT_ADD (unique, 0x10000438, 8) , (unique, 0x1000026d, 8), (unique, 0x10000438, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000026d, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x100001c3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x10000428, 8) , (unique, 0x10000265, 8), (unique, 0x10000428, 8) CAST (register, 0x30, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1869d0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (register, 0x90, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x80, 4) INT_SUB (register, 0x80, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x98, 4) , (const, 0xfffffffc, 4)]
[(register, 0x8, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x98, 4) , (const, 0xfffffffc, 4)]
[(register, 0x0, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x98, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x186a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x98, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x186a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x10000448, 8), (unique, 0x10000448, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x38, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000305, 8) , (const, 0x4, 8), (unique, 0x10000305, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x186a73, 1)]
[(register, 0xa0, 8) CAST (unique, 0x10000458, 8), (unique, 0x10000458, 8) INT_ADD (unique, 0x10000450, 8) , (unique, 0x10000195, 8), (unique, 0x10000450, 8) CAST (register, 0x30, 8), (unique, 0x10000195, 8) MULTIEQUAL (unique, 0x3580, 8) , (unique, 0x3300, 8)]
[(unique, 0x10000348, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x186ac3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)]
[(register, 0x28, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x183b40, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000348, 8) , (unique, 0x10000350, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x186a81, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x186aa9, 1) , (unique, 0x100001f0, 1)]
[ ---  CBRANCH (ram, 0x186aa9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000470, 8), (unique, 0x10000470, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000468, 8), (unique, 0x10000468, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000460, 8), (unique, 0x10000460, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x186270, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8)]
