[ ---  CBRANCH (ram, 0x41a7d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000492, 8), (unique, 0x10000492, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000048a, 8), (unique, 0x1000048a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000049a, 8), (unique, 0x1000049a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000048a, 8), (unique, 0x1000048a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41a790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xa00, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xa00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000029c, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x41a6c1, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100004aa, 8), (unique, 0x100004aa, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004a2, 8), (unique, 0x100004a2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x41a7bd, 1)]
[ ---  CBRANCH (ram, 0x41a7b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8)]
[(unique, 0x1000029b, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x41a6c1, 1)]
[ ---  CBRANCH (ram, 0x41a890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xa, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x1000029a, 1) COPY (const, 0x1, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SRIGHT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) CAST (unique, 0x100004c2, 8), (unique, 0x100004c2, 8) INT_SUB (unique, 0x100004b2, 8) , (unique, 0x100004ba, 8), (unique, 0x100004ba, 8) CAST (register, 0x30, 8), (unique, 0x100004b2, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x41a6c1, 1)]
[(unique, 0x1000029d, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100004ca, 8), (unique, 0x100004ca, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000298, 1) MULTIEQUAL (unique, 0x1000029d, 1) , (unique, 0x1000029c, 1) , (unique, 0x1000029b, 1) , (unique, 0x1000029a, 1)]
[(unique, 0x10000472, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41a7d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000047a, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x41a6d1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x10000482, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41a870, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (const, 0x15, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000047a, 8) , (unique, 0x10000482, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100004d2, 8), (unique, 0x100004d2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x0, 8) CALL (ram, 0x453700, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x41a769, 1)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000077, 4) , (const, 0x1, 4), (unique, 0x10000077, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41a8b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100004ea, 8) , (const, 0x1f, 8), (unique, 0x100004ea, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100004e2, 8) , (unique, 0x100002b9, 8), (unique, 0x100004e2, 8) CAST (register, 0x30, 8), (unique, 0x100002b9, 8) INT_SUB (const, 0xf, 8) , (unique, 0x100004da, 8), (unique, 0x100004da, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41a8b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0x4, 4)]
[(unique, 0x1000045a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000045a, 8) , (unique, 0x10000462, 8)]
[(unique, 0x10000462, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000045a, 8) , (unique, 0x10000462, 8)]
[ ---  CBRANCH (ram, 0x41a8b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000045a, 8) , (unique, 0x10000462, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x10000153, 4), (unique, 0x10000153, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017b, 8) , (unique, 0x10000157, 4), (unique, 0x1000017b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000157, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015b, 8), (unique, 0x1000015b, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000183, 8) , (unique, 0x10000163, 4), (unique, 0x10000183, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000163, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000167, 8), (unique, 0x10000167, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018b, 8) , (unique, 0x1000016f, 4), (unique, 0x1000018b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x1000016f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000173, 8), (unique, 0x10000173, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41a820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000013b, 4) , (const, 0x1, 4), (unique, 0x1000013b, 4) SUBPIECE (unique, 0x10000093, 8) , (const, 0x0, 4), (unique, 0x10000093, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000193, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0x10000193, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001bb, 8) , (unique, 0x10000197, 4), (unique, 0x100001bb, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x10000197, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000019b, 8), (unique, 0x1000019b, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c3, 8) , (unique, 0x100001a3, 4), (unique, 0x100001c3, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x100001a3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a7, 8), (unique, 0x100001a7, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cb, 8) , (unique, 0x100001af, 4), (unique, 0x100001cb, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x100001af, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41a820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000013b, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001d3, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0x100001d3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fb, 8) , (unique, 0x100001d7, 4), (unique, 0x100001fb, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x100001d7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000203, 8) , (unique, 0x100001e3, 4), (unique, 0x10000203, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x100001e3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) PTRADD (register, 0x30, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020b, 8) , (unique, 0x100001ef, 4), (unique, 0x1000020b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x100001ef, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) PTRADD (register, 0x30, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41a820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000013b, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000213, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0x10000213, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023b, 8) , (unique, 0x10000217, 4), (unique, 0x1000023b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x10000217, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) PTRADD (register, 0x30, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000243, 8) , (unique, 0x10000223, 4), (unique, 0x10000243, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x10000223, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000227, 8), (unique, 0x10000227, 8) PTRADD (register, 0x30, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024b, 8) , (unique, 0x1000022f, 4), (unique, 0x1000024b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x1000022f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000233, 8), (unique, 0x10000233, 8) PTRADD (register, 0x30, 8) , (const, 0xf, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41a820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000013b, 4) , (const, 0x5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000253, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0x10000253, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027b, 8) , (unique, 0x10000257, 4), (unique, 0x1000027b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x11, 8) , (const, 0x4, 8), (unique, 0x10000257, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) PTRADD (register, 0x30, 8) , (const, 0x11, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000283, 8) , (unique, 0x10000263, 4), (unique, 0x10000283, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x12, 8) , (const, 0x4, 8), (unique, 0x10000263, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000267, 8), (unique, 0x10000267, 8) PTRADD (register, 0x30, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000028b, 8) , (unique, 0x1000026f, 4), (unique, 0x1000028b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x13, 8) , (const, 0x4, 8), (unique, 0x1000026f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000273, 8), (unique, 0x10000273, 8) PTRADD (register, 0x30, 8) , (const, 0x13, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000077, 4) , (const, 0xfffffffc, 4)]
[(unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000077, 4) , (const, 0xfffffffc, 4)]
[(register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000077, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x41a757, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000077, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000077, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x41a757, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41a757, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x41a757, 1)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f2, 8), (unique, 0x100004f2, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x38, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100003f1, 8) , (const, 0x4, 8), (unique, 0x100003f1, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000502, 8), (unique, 0x10000502, 8) INT_ADD (unique, 0x100004fa, 8) , (unique, 0x10000143, 8), (unique, 0x100004fa, 8) CAST (register, 0x30, 8), (unique, 0x10000143, 8) MULTIEQUAL (unique, 0x3580, 8) , (unique, 0x3300, 8)]
[(unique, 0x1000046a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x41a7db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) CALL (ram, 0x478cd0, 8) , (register, 0x38, 8) , (register, 0xa0, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000046a, 8) , (unique, 0x10000472, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x30, 8)]
[(unique, 0x100002a6, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41a779, 1) , (unique, 0x10000298, 1)]
[ ---  CBRANCH (ram, 0x41a779, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000051a, 8), (unique, 0x1000051a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000512, 8), (unique, 0x10000512, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000050a, 8), (unique, 0x1000050a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x41a000, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x41a779, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x100002a6, 8)]
