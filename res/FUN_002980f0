[(register, 0x28, 8) INT_2COMP (unique, 0x10000919, 8), (unique, 0x10000919, 8) INT_SRIGHT (unique, 0x10000921, 8) , (const, 0x1f, 4), (unique, 0x10000921, 8) INT_SEXT (register, 0x120c, 4)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_ZEXT (unique, 0x10000915, 4), (unique, 0x10000915, 4) INT_RIGHT (register, 0x1204, 4) , (const, 0x1d, 4), (register, 0x10, 8) INT_AND (stack, 0xffffffffffffffa0, 8) , (const, 0xffffffffffff, 8), (stack, 0xffffffffffffffa0, 8) INT_ADD (unique, 0x100009de, 8) , (register, 0x1208, 4), (unique, 0x100009de, 8) INT_LEFT (unique, 0x100009d6, 8) , (const, 0x20, 8), (unique, 0x100009d6, 8) INT_SEXT (register, 0x120c, 4), (register, 0x1204, 4) SUBPIECE (unique, 0x100009c6, 8) , (const, 0x0, 4), (unique, 0x100009c6, 8) INT_RIGHT (register, 0x1200, 8) , (const, 0x20, 4)]
[(register, 0x88, 8) INT_ZEXT (register, 0x30, 2), (register, 0x30, 2) INT_AND (register, 0x30, 2) , (const, 0x7fff, 2), (register, 0x30, 2) SUBPIECE (unique, 0x100009e6, 4) , (const, 0x0, 4), (unique, 0x100009e6, 4) INT_RIGHT (unique, 0x10000de6, 4) , (const, 0x10, 4), (unique, 0x10000de6, 4) CAST (register, 0x120c, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x1200, 8) , (const, 0x8, 8)]
[(register, 0x98, 8) INT_ZEXT (unique, 0x1000093d, 4), (unique, 0x1000093d, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x1f, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ZEXT (unique, 0x10000931, 4), (unique, 0x10000931, 4) INT_RIGHT (register, 0x1224, 4) , (const, 0x1d, 4), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_AND (unique, 0x10000827, 8) , (const, 0xffffffffffff, 8), (unique, 0x10000827, 8) INT_ADD (unique, 0x100009f2, 8) , (register, 0x1228, 4), (unique, 0x100009f2, 8) INT_LEFT (unique, 0x100009ea, 8) , (const, 0x20, 8), (unique, 0x100009ea, 8) INT_SEXT (unique, 0x10000dea, 4), (unique, 0x10000dea, 4) CAST (register, 0x122c, 4), (register, 0x1224, 4) SUBPIECE (unique, 0x100009ce, 8) , (const, 0x0, 4), (unique, 0x100009ce, 8) INT_RIGHT (register, 0x1220, 8) , (const, 0x20, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x1220, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x298380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x7fff, 8), (register, 0xa0, 8) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (register, 0x38, 2) , (const, 0x7fff, 2), (register, 0x38, 2) SUBPIECE (unique, 0x100009fa, 4) , (const, 0x0, 4), (unique, 0x100009fa, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x29819d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8), (register, 0xb8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0x98, 8) INT_XOR (register, 0x98, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_SUB (register, 0x30, 4) , (register, 0x38, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x30, 4) INT_ZEXT (register, 0x30, 2)]
[(unique, 0x10000674, 4) SUBPIECE (unique, 0x100009fe, 8) , (const, 0x0, 4), (unique, 0x100009fe, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x20, 4)]
[(unique, 0x10000708, 4) SUBPIECE (unique, 0x10000a06, 8) , (const, 0x0, 4), (unique, 0x10000a06, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x2982e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0x28, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2988d8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000dee, 4), (unique, 0x10000dee, 4) CAST (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x2983f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x29830e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[(register, 0x80, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[(unique, 0x10000c0e, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x298328, 1)]
[ ---  CBRANCH (ram, 0x298710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x8000000000000, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298b30, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000df2, 4) , (const, 0x75, 4), (unique, 0x10000df2, 4) CAST (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000788, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x298d60, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000df6, 4) , (const, 0x40, 4), (unique, 0x10000df6, 4) CAST (register, 0x30, 4)]
[(register, 0xa0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000788, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x298d7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x40, 4)]
[(register, 0x18, 8) INT_OR (unique, 0x3680, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x10000788, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x298322, 1)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000788, 1) , (const, 0x3f, 1)]
[(register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x18, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0xa0, 8) INT_OR (register, 0xa0, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000788, 1) , (const, 0x3f, 1), (register, 0xa0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x10000788, 1)]
[ ---  BRANCH (ram, 0x298322, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0x80, 8) INT_ADD (unique, 0x3680, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (register, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000c06, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x298c90, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x298d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29910d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(register, 0x30, 4) INT_2COMP (register, 0x30, 4)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x8000000000000, 8)]
[ ---  CBRANCH (ram, 0x29871c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x299241, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x298328, 1)]
[ ---  CBRANCH (ram, 0x299302, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(unique, 0x10000cb6, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x299384, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000d76, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x2987d1, 1)]
[(register, 0x30, 4) INT_NEGATE (register, 0x30, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x298dae, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x298ff2, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000dfa, 4) , (const, 0x75, 4), (unique, 0x10000dfa, 4) CAST (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x100004f2, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x298df6, 1)]
[(unique, 0x10000796, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2991c7, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000dfe, 4) , (const, 0x40, 4), (unique, 0x10000dfe, 4) CAST (register, 0x30, 4)]
[(register, 0xb0, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000796, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x2991e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x40, 4)]
[(register, 0x80, 8) INT_OR (unique, 0x3680, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x10000796, 1)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) INT_OR (unique, 0x100005ba, 8) , (register, 0xb0, 8), (unique, 0x100005ba, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x298df6, 1)]
[(register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0xb8, 8), (register, 0x80, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000796, 1) , (const, 0x3f, 1), (register, 0x88, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x10000796, 1)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000796, 1) , (const, 0x3f, 1)]
[(register, 0x80, 8) INT_ADD (unique, 0x3680, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (unique, 0x100004f2, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x0, 8) , (register, 0x8, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (register, 0x88, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (unique, 0x100004f2, 8)]
[ ---  BRANCH (ram, 0x298328, 1)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000c06, 8) , (unique, 0x10000c0e, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x18, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x29845f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x33, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x7fff, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfff7ffffffffffff, 8)]
[(register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3f, 4), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x1, 4), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x1, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfff7ffffffffffff, 8)]
[(register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x1, 4), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x1, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4)]
[(unique, 0x10000bf6, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x2984ce, 1)]
[(unique, 0x10000d7a, 4) COPY (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x298e50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x299230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x29889d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2000, 4)]
[ ---  CBRANCH (ram, 0x2992f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x120c, 4)]
[ ---  CBRANCH (ram, 0x2988af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29925a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x29845f, 1)]
[ ---  CBRANCH (ram, 0x298aa4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 4) INT_XOR (unique, 0x1000057a, 4) , (const, 0x1, 4), (unique, 0x1000057a, 4) INT_RIGHT (unique, 0x10000708, 4) , (const, 0x12, 4)]
[ ---  BRANCH (ram, 0x298684, 1)]
[ ---  CBRANCH (ram, 0x298d20, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (register, 0x28, 4) , (const, 0x2, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x7fff, 4), (register, 0x28, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)]
[(register, 0xb8, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298e90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x299167, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298c04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x80, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x29936c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x33, 4), (register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x298468, 1)]
[(register, 0x88, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfff7ffffffffffff, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x2984ce, 1)]
[ ---  CBRANCH (ram, 0x29926b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x298785, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a46, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000b0e, 8) COPY (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x298c04, 1)]
[(unique, 0x10000dde, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x298f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x299325, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29933b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x298aa4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x38, 4) INT_XOR (unique, 0x100004b6, 4) , (const, 0x1, 4), (unique, 0x100004b6, 4) INT_RIGHT (unique, 0x10000674, 4) , (const, 0x12, 4)]
[ ---  CBRANCH (ram, 0x298eb5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(unique, 0x10000ab6, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b76, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298fc2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x2992a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x299347, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x298f9c, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x298fb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100008cd, 8) , (const, 0x0, 8), (unique, 0x100008cd, 8) INT_AND (register, 0x0, 8) , (const, 0x4000000000000, 8)]
[(unique, 0x100004ce, 4) COPY (const, 0x1, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0x100004ce, 4)]
[(unique, 0x10000abe, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000b7e, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298ebe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000aae, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b6e, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298fc2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x299295, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000aa6, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b66, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298fc2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (unique, 0x3680, 8) , (register, 0x0, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000a66, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b2e, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x8, 8), (register, 0x80, 8) INT_LEFT (unique, 0x10000969, 8) , (const, 0x20, 4), (unique, 0x10000969, 8) INT_AND (unique, 0x100008b3, 8) , (const, 0xe0000000, 8), (unique, 0x100008b3, 8) INT_ZEXT (register, 0x1204, 4), (register, 0x8, 8) INT_AND (register, 0x1200, 8) , (const, 0x1fffffffffffffff, 8)]
[(unique, 0x10000c86, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x298f04, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) INT_LEFT (unique, 0x10000979, 8) , (const, 0x20, 4), (unique, 0x10000979, 8) INT_AND (unique, 0x100008c4, 8) , (const, 0xe0000000, 8), (unique, 0x100008c4, 8) INT_ZEXT (register, 0x1224, 4), (register, 0x88, 8) INT_AND (register, 0x1220, 8) , (const, 0x1fffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x2993a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(unique, 0x10000a6e, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000b36, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000c8e, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2993a2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x80, 8) , (register, 0x0, 8)]
[(unique, 0x10000a76, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000b3e, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000c96, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x298f04, 1)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000c86, 8) , (unique, 0x10000c8e, 8) , (unique, 0x10000c96, 8)]
[(register, 0x80, 8) INT_LEFT (register, 0x80, 8) , (const, 0x3, 4), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000b2e, 8) , (unique, 0x10000b36, 8) , (unique, 0x10000b3e, 8)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x3d, 4), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a66, 8) , (unique, 0x10000a6e, 8) , (unique, 0x10000a76, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000b2e, 8) , (unique, 0x10000b36, 8) , (unique, 0x10000b3e, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x80, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x10, 8) INT_ADD (unique, 0x12280, 8) , (unique, 0x12080, 8), (unique, 0x12280, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)]
[(register, 0x80, 8) INT_OR (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3f, 4), (register, 0x0, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x1, 4)]
[(register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x1, 4)]
[(unique, 0x10000bfe, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x2984ce, 1)]
[ ---  CBRANCH (ram, 0x2990c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[(unique, 0x10000d6e, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x28, 4)]
[ ---  BRANCH (ram, 0x2987d1, 1)]
[ ---  CBRANCH (ram, 0x2992db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[(register, 0x38, 4) COPY (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x29889d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2000, 4)]
[(unique, 0x10000d86, 4) COPY (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x2992f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x298840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x2992c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x88, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x88, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000bce, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x298501, 1)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x88, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x2990ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(unique, 0x10000d72, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x28, 4)]
[ ---  BRANCH (ram, 0x2987d1, 1)]
[(register, 0x88, 8) COPY (const, 0x7ffe, 8)]
[(register, 0x38, 4) COPY (const, 0x28, 4)]
[(unique, 0x10000b4e, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x29851e, 1)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x298298, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000e02, 4) , (const, 0x1, 4), (unique, 0x10000e02, 4) CAST (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x2985d8, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x298bb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298e10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x299156, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000d46, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x29845f, 1)]
[ ---  CBRANCH (ram, 0x298aa4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x29913a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x10000582, 8), (unique, 0x10000582, 8) INT_MULT (register, 0x1200, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x0, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x2981e8, 1)]
[ ---  CBRANCH (ram, 0x2991f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(unique, 0x10000cbe, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x29931b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000cb6, 8) , (unique, 0x10000cbe, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x3, 4), (register, 0x38, 4) INT_NEGATE (unique, 0x100005ce, 4), (unique, 0x100005ce, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x100008fa, 8) , (const, 0x0, 8), (unique, 0x100008fa, 8) INT_AND (register, 0x0, 8) , (const, 0x4000000000000, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(unique, 0x10000d6a, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x2987d1, 1)]
[(register, 0x30, 4) INT_NEGATE (register, 0x30, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x298606, 1)]
[ ---  CBRANCH (ram, 0x298e60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x298723, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(register, 0x38, 4) INT_XOR (unique, 0x1000044e, 4) , (const, 0x1, 4), (unique, 0x1000044e, 4) INT_RIGHT (unique, 0x10000708, 4) , (const, 0x12, 4)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000c7e, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x30, 4) INT_2COMP (register, 0x30, 4)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x8000000000000, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x298e38, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e06, 4) , (const, 0x75, 4), (unique, 0x10000e06, 4) CAST (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000436, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x29864a, 1)]
[(unique, 0x1000078e, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x299003, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e0a, 4) , (const, 0x40, 4), (unique, 0x10000e0a, 4) CAST (register, 0x30, 4)]
[(register, 0x28, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x1000078e, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x29901e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x40, 4)]
[(register, 0x80, 8) INT_OR (unique, 0x3680, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x1000078e, 1)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) INT_OR (unique, 0x10000522, 8) , (register, 0x28, 8), (unique, 0x10000522, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x29864a, 1)]
[(register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0xb8, 8), (register, 0x80, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x1000078e, 1) , (const, 0x3f, 1), (register, 0x88, 8) INT_LEFT (register, 0x10, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x1000078e, 1)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x1000078e, 1) , (const, 0x3f, 1)]
[(register, 0x80, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (unique, 0x10000436, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x0, 8) , (register, 0x8, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (register, 0x88, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (unique, 0x10000436, 8)]
[ ---  BRANCH (ram, 0x2981e8, 1)]
[ ---  CBRANCH (ram, 0x2989e0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (const, 0x1, 2) , (register, 0x38, 2), (register, 0x38, 2) INT_AND (register, 0x38, 2) , (const, 0x7fff, 2), (register, 0x38, 2) INT_ADD (register, 0x30, 2) , (const, 0x1, 2)]
[(register, 0x8, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x100000a1, 8), (unique, 0x100000a1, 8) INT_MULT (register, 0x1220, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x298b10, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x33, 4), (register, 0x30, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_MULT (register, 0x1200, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x0, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x298200, 1)]
[ ---  CBRANCH (ram, 0x298cc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x30, 8) , (register, 0x8, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000d56, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x298200, 1)]
[(register, 0xb8, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x28, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298be0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298f30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(unique, 0x10000a36, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000afe, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298c04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x10000486, 8), (unique, 0x10000486, 8) INT_MULT (register, 0x1220, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x299278, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x33, 4), (register, 0x8, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x29934e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_OR (register, 0x8, 8) , (register, 0x30, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x298785, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a3e, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000b06, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x298c04, 1)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[(register, 0x18, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x1000049e, 8), (unique, 0x1000049e, 8) INT_MULT (register, 0x1200, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x0, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000cde, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x298468, 1)]
[ ---  CBRANCH (ram, 0x298cc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x298785, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a2e, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000af6, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000ce6, 8) COPY (register, 0x98, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000ce6, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[(unique, 0x10000aee, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a2e, 8) , (unique, 0x10000a36, 8) , (unique, 0x10000a3e, 8) , (unique, 0x10000a46, 8) , (register, 0x10, 8)]
[(unique, 0x10000bde, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000af6, 8) , (unique, 0x10000afe, 8) , (unique, 0x10000b06, 8) , (unique, 0x10000b0e, 8) , (unique, 0x3680, 8)]
[ ---  BRANCH (ram, 0x29847a, 1)]
[(unique, 0x10000dd6, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x299032, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x299106, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x29909f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x299096, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x299106, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x299052, 1)]
[ ---  CBRANCH (ram, 0x2991ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000c6e, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x38, 4) INT_XOR (unique, 0x1000052a, 4) , (const, 0x1, 4), (unique, 0x1000052a, 4) INT_RIGHT (unique, 0x10000674, 4) , (const, 0x12, 4)]
[ ---  CBRANCH (ram, 0x298a1a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x7fff, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000a96, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b56, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298fc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x2991a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x299072, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100008e0, 8) , (const, 0x0, 8), (unique, 0x100008e0, 8) INT_AND (register, 0x0, 8) , (const, 0x4000000000000, 8)]
[(unique, 0x10000542, 4) COPY (const, 0x1, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0x10000542, 4)]
[ ---  CBRANCH (ram, 0x298a23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000c76, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000a16, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x80, 8), (register, 0x8, 8) INT_AND (register, 0x1200, 8) , (const, 0x1fffffffffffffff, 8), (register, 0x80, 8) INT_LEFT (unique, 0x10000949, 8) , (const, 0x20, 4), (unique, 0x10000949, 8) INT_AND (unique, 0x10000877, 8) , (const, 0xe0000000, 8), (unique, 0x10000877, 8) INT_ZEXT (register, 0x1204, 4)]
[(unique, 0x10000a7e, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000c9e, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x298a69, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xb0, 8), (register, 0x0, 8) INT_LEFT (unique, 0x10000959, 8) , (const, 0x20, 4), (unique, 0x10000959, 8) INT_AND (unique, 0x10000888, 8) , (const, 0xe0000000, 8), (unique, 0x10000888, 8) INT_ZEXT (register, 0x1224, 4), (register, 0xb0, 8) INT_AND (register, 0x1220, 8) , (const, 0x1fffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x299376, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(unique, 0x10000a1e, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000a86, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000ca6, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x299376, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[(unique, 0x10000a26, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000a8e, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000cae, 8) COPY (register, 0x98, 8)]
[ ---  BRANCH (ram, 0x298a69, 1)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a16, 8) , (unique, 0x10000a1e, 8) , (unique, 0x10000a26, 8)]
[(register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x3d, 4), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a16, 8) , (unique, 0x10000a1e, 8) , (unique, 0x10000a26, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a7e, 8) , (unique, 0x10000a86, 8) , (unique, 0x10000a8e, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000c5e, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000c9e, 8) , (unique, 0x10000ca6, 8) , (unique, 0x10000cae, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(unique, 0x10000a9e, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b5e, 8) COPY (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298fc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x80, 8) COPY (unique, 0x10000b86, 8), (unique, 0x10000b86, 8) MULTIEQUAL (unique, 0x10000b56, 8) , (unique, 0x10000b5e, 8) , (unique, 0x10000b66, 8) , (unique, 0x10000b6e, 8) , (unique, 0x10000b76, 8) , (unique, 0x10000b7e, 8)]
[(register, 0x10, 8) COPY (unique, 0x10000ac6, 8), (unique, 0x10000ac6, 8) MULTIEQUAL (unique, 0x10000a96, 8) , (unique, 0x10000a9e, 8) , (unique, 0x10000aa6, 8) , (unique, 0x10000aae, 8) , (unique, 0x10000ab6, 8) , (unique, 0x10000abe, 8)]
[(register, 0x88, 8) COPY (const, 0x7fff, 8)]
[(unique, 0x10000c66, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000dd6, 8) , (unique, 0x10000dd6, 8) , (unique, 0x10000dde, 8) , (unique, 0x10000dde, 8) , (unique, 0x10000dde, 8) , (unique, 0x10000dde, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x38, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2986e2, 1)]
[ ---  CBRANCH (ram, 0x298398, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[ ---  CBRANCH (ram, 0x298674, 1) , (unique, 0x100009c2, 1), (unique, 0x100009c2, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x8000000000000, 8)]
[ ---  CBRANCH (ram, 0x298450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x298ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[(register, 0x80, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x1000005d, 8), (unique, 0x1000005d, 8) INT_MULT (register, 0x1220, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000c16, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000cee, 8) COPY (register, 0x28, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x2983b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[(unique, 0x10000d66, 4) COPY (unique, 0x100009b3, 4), (unique, 0x100009b3, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x298e50, 1) , (unique, 0x100009b2, 1), (unique, 0x100009b2, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x3, 4), (register, 0x38, 4) INT_NEGATE (unique, 0x10000151, 4), (unique, 0x10000151, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x10000848, 8) , (const, 0x0, 8), (unique, 0x10000848, 8) INT_AND (register, 0x10, 8) , (const, 0x4000000000000, 8)]
[(unique, 0x10000a56, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b1e, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000c4e, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x298684, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2989c0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000e0e, 4) , (const, 0x75, 4), (unique, 0x10000e0e, 4) CAST (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x100002a8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (unique, 0x3680, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000792, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x298b78, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000e12, 4) , (const, 0x40, 4), (unique, 0x10000e12, 4) CAST (register, 0x30, 4)]
[(register, 0x98, 8) INT_OR (register, 0x98, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x98, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_LEFT (unique, 0x3680, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0xb8, 8) INT_RIGHT (unique, 0x3680, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000792, 1) , (const, 0x3f, 1), (register, 0x98, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x10000792, 1)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x10000792, 1) , (const, 0x3f, 1)]
[ ---  BRANCH (ram, 0x2989cc, 1)]
[(register, 0x28, 8) INT_RIGHT (register, 0x0, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000792, 1) , (const, 0x40, 1)]
[ ---  CBRANCH (ram, 0x2983e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x40, 4)]
[(register, 0x18, 8) INT_OR (unique, 0x3680, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x10000792, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) INT_OR (unique, 0x10000129, 8) , (register, 0x28, 8), (unique, 0x10000129, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3680, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x2989cc, 1)]
[(register, 0x80, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (unique, 0x100002a8, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x10, 8) , (register, 0x0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3680, 8) , (register, 0x98, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8) , (unique, 0x100002a8, 8)]
[(unique, 0x10000c1e, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000cf6, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x2981e8, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000ace, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x0, 8)]
[(unique, 0x10000b8e, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x18, 8)]
[(unique, 0x10000c26, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000c16, 8) , (unique, 0x10000c1e, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x10000d2e, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000cee, 8) , (unique, 0x10000cf6, 8) , (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x29845f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1e080, 8) , (const, 0x0, 8), (unique, 0x1e080, 8) INT_AND (unique, 0x1e000, 8) , (const, 0x1, 8), (unique, 0x1e000, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x33, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) INT_AND (register, 0x10, 8) , (const, 0x7ffffffffffff, 8)]
[(unique, 0x10000c3e, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000d4e, 8) COPY (register, 0xa8, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000d4e, 8) , (unique, 0x10000d56, 8) , (register, 0x98, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000c3e, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x8, 8) , (register, 0x18, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x298998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x0, 8)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x1b500, 8) , (const, 0x0, 8), (unique, 0x1b500, 8) INT_RIGHT (register, 0x80, 8) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[(unique, 0x1b380, 8) INT_ADD (unique, 0x1b380, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x40, 4), (register, 0x8, 4) INT_XOR (unique, 0x10000290, 4) , (const, 0x3f, 4), (unique, 0x10000290, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  BRANCH (ram, 0x298210, 1)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x1b500, 8) , (const, 0x0, 8), (unique, 0x1b500, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[(unique, 0x1b380, 8) INT_ADD (unique, 0x1b380, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x8, 4) INT_XOR (register, 0x8, 4) , (const, 0x3f, 4), (register, 0x8, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  CBRANCH (ram, 0x298980, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x3100, 4) , (const, 0x40, 4), (unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0xc, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_ADD (unique, 0x1000086a, 1) , (const, 0xb4, 1), (unique, 0x1000086a, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x29823b, 1)]
[(register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_RIGHT (register, 0x80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (register, 0x8, 1), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000dc6, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x298968, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x0, 8) , (unique, 0x10000e16, 8), (unique, 0x10000e16, 8) CAST (register, 0x88, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[(unique, 0x10000ad6, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x30, 8) , (const, 0xfff7ffffffffffff, 8)]
[(unique, 0x10000b96, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000c2e, 8) COPY (register, 0x88, 8), (register, 0x88, 8) INT_SUB (register, 0x88, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x29845f, 1)]
[(unique, 0x1000077a, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4), (unique, 0x3100, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) INT_SUB (unique, 0x3100, 4) , (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x298ad8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x3100, 4) , (const, 0x40, 4), (unique, 0x3100, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) INT_SUB (unique, 0x3100, 4) , (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4)]
[(register, 0x88, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x10000892, 1) , (const, 0x3f, 1), (unique, 0x10000892, 1) SUBPIECE (register, 0x98, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x298af3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0x40, 4)]
[(register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x80, 1) , (unique, 0x1000077a, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x88, 8), (register, 0x80, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x298468, 1)]
[(register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x1000077a, 1) , (const, 0x3f, 1)]
[(register, 0x80, 8) INT_OR (register, 0x80, 8) , (register, 0x88, 8), (register, 0x80, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0x18, 8), (register, 0x80, 8) INT_LEFT (register, 0x80, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x18, 8) INT_RIGHT (register, 0x80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x1000077a, 1) , (const, 0x3f, 1), (register, 0x88, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x1000077a, 1)]
[ ---  BRANCH (ram, 0x298468, 1)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000ade, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b9e, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000c36, 8) COPY (register, 0x88, 8)]
[(unique, 0x10000d3e, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x298a98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x7fff, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000b8e, 8) , (unique, 0x10000b96, 8) , (unique, 0x10000b9e, 8) , (unique, 0x3680, 8) , (register, 0x80, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000ace, 8) , (unique, 0x10000ad6, 8) , (unique, 0x10000ade, 8) , (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x0, 8)]
[(unique, 0x10000cd6, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000d2e, 8) , (unique, 0x10000dc6, 8) , (unique, 0x10000d3e, 8) , (unique, 0x10000d46, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x298958, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000c26, 8) , (unique, 0x10000c2e, 8) , (unique, 0x10000c36, 8) , (register, 0xa0, 8) , (register, 0x88, 8) , (register, 0xa0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000dc6, 8) , (unique, 0x10000dc6, 8) , (unique, 0x10000cd6, 8) , (unique, 0x10000cde, 8) , (register, 0x28, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x298780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_OR (register, 0x80, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x18, 8) , (register, 0x80, 8)]
[(register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4)]
[(unique, 0x10000ae6, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000bd6, 8) COPY (register, 0x80, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x3400, 8) INT_SUB (unique, 0x3300, 8) , (unique, 0x1000077c, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x1000077c, 8) INT_SRIGHT (unique, 0x10000e1e, 8) , (const, 0x3f, 4), (unique, 0x10000e1e, 8) CAST (register, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000ae6, 8) , (unique, 0x10000aee, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000bd6, 8) , (unique, 0x10000bde, 8)]
[ ---  CBRANCH (ram, 0x2984c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000165, 8) , (const, 0x0, 8), (unique, 0x10000165, 8) INT_AND (unique, 0x10000654, 8) , (const, 0x6, 8), (unique, 0x10000654, 8) INT_MULT (register, 0x80, 8) , (const, 0x2, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000bd6, 8) , (unique, 0x10000bde, 8)]
[(register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x298d10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2000, 4), (register, 0x8, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x2984c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298cf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x2984c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffff7, 8) , (unique, 0x10000654, 8)]
[ ---  BRANCH (ram, 0x2984c0, 1)]
[ ---  CBRANCH (ram, 0x298c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2984c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x4, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10000654, 8) , (const, 0x0, 4)]
[(register, 0x30, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffffb, 8) , (unique, 0x10000654, 8)]
[ ---  BRANCH (ram, 0x2984c0, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_XOR (unique, 0x1000017d, 4) , (const, 0x1, 4), (unique, 0x1000017d, 4) SUBPIECE (unique, 0x10000a0e, 8) , (const, 0x0, 4), (unique, 0x10000a0e, 8) INT_RIGHT (unique, 0x10000e26, 8) , (const, 0x34, 4), (unique, 0x10000e26, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x30, 8) , (unique, 0x3400, 8) , (register, 0x30, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000be6, 8) COPY (register, 0x88, 8), (register, 0x88, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x7, 4), (register, 0x28, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4)]
[(unique, 0x10000bee, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x2984ce, 1)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000be6, 8) , (unique, 0x10000bee, 8) , (unique, 0x10000bf6, 8) , (unique, 0x10000bfe, 8) , (register, 0x88, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000a4e, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000b16, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000c46, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x298684, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x298858, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000bc6, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x298501, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2988c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x298861, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x28, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffff7, 8) , (register, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000bbe, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x298501, 1)]
[(unique, 0x10000ba6, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x298938, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x10000bae, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x298501, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffffb, 8) , (register, 0x80, 8)]
[(unique, 0x10000bb6, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x298501, 1)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x28, 8) , (register, 0xa8, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000ba6, 8) , (unique, 0x10000bae, 8) , (unique, 0x10000bb6, 8) , (unique, 0x10000bbe, 8) , (unique, 0x10000bc6, 8) , (unique, 0x10000bce, 8) , (register, 0x80, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0x8000000000000, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x298515, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x298674, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(register, 0x38, 4) INT_XOR (unique, 0x100001ec, 4) , (const, 0x1, 4), (unique, 0x100001ec, 4) INT_RIGHT (unique, 0x10000674, 4) , (const, 0x12, 4)]
[(unique, 0x10000a5e, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b26, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x10000c56, 8) COPY (register, 0x28, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000c46, 8) , (unique, 0x10000c4e, 8) , (unique, 0x10000c56, 8) , (unique, 0x10000c5e, 8) , (unique, 0x10000c66, 8) , (unique, 0x10000c6e, 8) , (unique, 0x10000c76, 8) , (unique, 0x10000c7e, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000b16, 8) , (unique, 0x10000b1e, 8) , (unique, 0x10000b26, 8) , (unique, 0x3680, 8) , (register, 0x80, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8) , (register, 0x80, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8) , (unique, 0x3680, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0x8000000000000, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a4e, 8) , (unique, 0x10000a56, 8) , (unique, 0x10000a5e, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x298515, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x298512, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001f4, 4) , (const, 0x0, 4), (unique, 0x100001f4, 4) INT_AND (register, 0x38, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x298512, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000085e, 4) , (const, 0x0, 4), (unique, 0x1000085e, 4) INT_AND (register, 0x1084, 4) , (const, 0x800, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x10, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000982, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000098a, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x1000099a, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x100009a2, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x10000b46, 8) COPY (unique, 0x10000992, 8), (unique, 0x10000992, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x29851e, 1) , (unique, 0x10000981, 1), (unique, 0x10000981, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_RIGHT (unique, 0x10000982, 8) , (const, 0x3, 4)]
[(register, 0x28, 8) INT_OR (register, 0x28, 8) , (register, 0x80, 8), (register, 0x28, 8) INT_LEFT (unique, 0x10000982, 8) , (const, 0x3d, 4), (register, 0x80, 8) INT_RIGHT (unique, 0x10000992, 8) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x298785, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000099a, 8) , (const, 0x7fff, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100009a2, 8) , (register, 0x28, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000b46, 8) , (unique, 0x10000b4e, 8)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x1000098a, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000982, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2987a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x7ffe, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000099a, 8) , (register, 0x88, 8)]
[(register, 0x28, 8) INT_OR (register, 0x28, 8) , (register, 0x80, 8), (register, 0x28, 8) INT_LEFT (register, 0x10, 8) , (const, 0x3d, 4), (register, 0x80, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x2989b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x1084, 4) , (const, 0x6000, 4)]
[ ---  CBRANCH (ram, 0x298c60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x2989b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[(unique, 0x10000d62, 4) COPY (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[ ---  BRANCH (ram, 0x2987d1, 1)]
[(register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x298c6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[(unique, 0x10000d5e, 4) COPY (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x298c6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2000, 4)]
[(register, 0x38, 4) COPY (unique, 0x10000d8a, 4), (unique, 0x10000d8a, 4) MULTIEQUAL (unique, 0x10000d5e, 4) , (unique, 0x10000d62, 4) , (unique, 0x10000d66, 4) , (unique, 0x10000d6a, 4) , (unique, 0x10000d6e, 4) , (unique, 0x10000d72, 4) , (unique, 0x10000d76, 4) , (unique, 0x10000d7a, 4) , (unique, 0x10000d7a, 4) , (unique, 0x10000d7a, 4) , (unique, 0x10000d86, 4)]
[(unique, 0x100007bf, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 4) INT_OR (register, 0x38, 4) , (const, 0x28, 4)]
[(register, 0x28, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x298785, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2986d6, 1)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x1000098a, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x2993b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x10, 8) , (register, 0x28, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x298555, 1)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x298823, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (unique, 0x1000098a, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CALL (ram, 0x299bb0, 8) , (register, 0x1200, 8) , (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4), (register, 0x1200, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x100007bf, 8)]
[ ---  RETURN (const, 0x0, 8)]
