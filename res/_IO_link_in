[(unique, 0x10000204, 4) COPY (ram, 0x4c8790, 4)]
[ ---  CBRANCH (ram, 0x17ad93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000012f, 4) , (const, 0x0, 4), (unique, 0x1000012f, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2a, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2a, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2a, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2a, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x2a, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2a, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2a, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2a, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2a, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x80, 4)]
[ ---  CBRANCH (ram, 0x17adc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000204, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x284, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x284, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x284, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x284, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x284, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x284, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x284, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x284, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x284, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x284, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x284, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x10000148, 8) , (const, 0x0, 8), (unique, 0x10000148, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8), (register, 0x0, 8) CAST (unique, 0x100002a8, 8), (unique, 0x100002a8, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8750, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8750, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x17ac19, 1)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc8, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x10000278, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17ac71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c5768, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17ac47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000290, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000280, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x17ac6a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23c, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x23c, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x23c, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x23c, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x23c, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x23c, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x23c, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x23c, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x23c, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x23c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x23c, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x23c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x23c, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000158, 8), (unique, 0x10000158, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x10000288, 8) COPY (unique, 0x10000270, 8), (unique, 0x10000270, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x23c, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (unique, 0x10000278, 8) , (unique, 0x10000280, 8) , (unique, 0x10000288, 8) , (unique, 0x10000290, 8)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4c5764, 4) , (const, 0x1, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[ ---  CBRANCH (ram, 0x17ad98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x22e, 4), (ram, 0x4c5758, 4) INT_ADD (ram, 0x4c5758, 4) , (const, 0x1, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x22e, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22e, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x22e, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x22e, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x22e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x22e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b8, 8) , (ram, 0x4c4520, 8), (unique, 0x100002b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(ram, 0x4c4520, 8) COPY (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) CAST (unique, 0x10000238, 8), (unique, 0x10000238, 8) INDIRECT (unique, 0x10000230, 8) , (const, 0x22e, 4), (unique, 0x10000230, 8) COPY (unique, 0x10000228, 8), (unique, 0x10000228, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x17ad2c, 1)]
[(unique, 0x10000258, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17acec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17acc3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x21f, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000258, 8) , (const, 0x21f, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x21f, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x21f, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x21f, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x21f, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x21f, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x21f, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x21f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xc4, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000258, 8) , (const, 0xc4, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xc4, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xc4, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0xc4, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc4, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xc4, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xc4, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xc4, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17acdf, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x202, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x202, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000258, 8) , (const, 0x202, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x202, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x202, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x202, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x202, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x202, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x202, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x202, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x202, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x202, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x202, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000208, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x202, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xd0, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd0, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xd0, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xd0, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xd0, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd0, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xd0, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xd0, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xd0, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e8, 8) , (register, 0x10, 8), (unique, 0x100002e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x10000208, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xf8, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd9, 4), (ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x10000258, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xf8, 4), (ram, 0x4c5758, 4) INT_ADD (ram, 0x4c5758, 4) , (const, 0x1, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xd9, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xf8, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xd9, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xf8, 4), (ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xd9, 4), (ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xf8, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd9, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xf8, 4), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xd9, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xf8, 4), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xd9, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xf8, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xd9, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf8, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd9, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002f0, 8) , (ram, 0x4c4520, 8), (unique, 0x100002f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c4520, 8) COPY (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) CAST (unique, 0x10000220, 8), (unique, 0x10000220, 8) INDIRECT (unique, 0x10000218, 8) , (const, 0xf8, 4), (unique, 0x10000218, 8) COPY (unique, 0x10000210, 8), (unique, 0x10000210, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17ae24, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000013f, 4) , (const, 0x0, 4), (unique, 0x1000013f, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x114, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x114, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x114, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x114, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x114, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x114, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x114, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x114, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x114, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x114, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17adf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1b1, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1b1, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1b1, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1b1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000300, 8) , (const, 0x0, 8), (unique, 0x10000300, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17ae09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b1, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1eb, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1eb, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1eb, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1eb, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1eb, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1eb, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1eb, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1eb, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1eb, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1eb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1c1, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1c1, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1c1, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1c1, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1c1, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1c1, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1c1, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1c1, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1c1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x100001c1, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x100001c9, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100001d1, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(unique, 0x100001d5, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(unique, 0x100001d9, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x100001dd, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100001e5, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(unique, 0x100001ed, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(unique, 0x100001f5, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(unique, 0x100001f9, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x17ae24, 1) , (unique, 0x100001c0, 1), (unique, 0x100001c0, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c4520, 8) INDIRECT (unique, 0x100001c1, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100001c9, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c5758, 4) INDIRECT (unique, 0x100001d1, 4) , (const, 0x1dd, 4)]
[(ram, 0x4c5760, 4) INDIRECT (unique, 0x100001d5, 4) , (const, 0x1dd, 4)]
[(ram, 0x4c5764, 4) INDIRECT (unique, 0x100001d9, 4) , (const, 0x1dd, 4)]
[(ram, 0x4c5768, 8) INDIRECT (unique, 0x100001dd, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c8750, 8) INDIRECT (unique, 0x100001e5, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c8758, 8) INDIRECT (unique, 0x100001ed, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c8790, 4) INDIRECT (unique, 0x100001f5, 4) , (const, 0x1dd, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001f9, 4) , (const, 0x1dd, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1dd, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1dd, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0x80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x100001f9, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (unique, 0x100001f5, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (unique, 0x100001ed, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (unique, 0x100001e5, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (unique, 0x100001dd, 8)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (unique, 0x100001d1, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (unique, 0x100001c1, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000260, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (unique, 0x100001d5, 4)]
[ ---  CBRANCH (ram, 0x17ad85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (register, 0x10, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (unique, 0x100001d9, 4)]
[(ram, 0x4c5768, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17ad63, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000268, 4) COPY (unique, 0x100001fd, 4), (unique, 0x100001fd, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x17ad85, 1) , (unique, 0x10000201, 1), (unique, 0x10000201, 1) INT_NOTEQUAL (unique, 0x100001fd, 4) , (const, 0x0, 4), (unique, 0x100001fd, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19c, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x19c, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x19c, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x19c, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x19c, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x19c, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x19c, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x19c, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x19c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x19c, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x19c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x19c, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000150, 8), (unique, 0x10000150, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x10000264, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x19c, 4), (ram, 0x4c5760, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4) , (register, 0x10, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5760, 4) COPY (unique, 0x1000026c, 4), (unique, 0x1000026c, 4) MULTIEQUAL (unique, 0x10000260, 4) , (unique, 0x10000264, 4) , (unique, 0x10000268, 4)]
[ ---  CBRANCH (ram, 0x17ae30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000204, 4) , (const, 0x0, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x18e, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x18e, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x18e, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x18e, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x18e, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x18e, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x18e, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x18e, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x18e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x18e, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x18e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x18e, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8758, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8758, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x17ad8d, 1)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
