[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ea, 8), (unique, 0x100001ea, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100001a6, 4) COPY (ram, 0x4c7c30, 4)]
[ ---  CBRANCH (ram, 0x41e739, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000e0, 4) , (const, 0x0, 4), (unique, 0x100000e0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x3c, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x3c, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x3c, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x3c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x80, 4)]
[(unique, 0x100001ba, 8) COPY (ram, 0x4c7c38, 8), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x3c, 4)]
[ ---  CBRANCH (ram, 0x41e623, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7c38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x3c, 4)]
[ ---  CBRANCH (ram, 0x41e7a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001ca, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23e, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x23e, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x23e, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x23e, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x23e, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x23e, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x100000ec, 8), (unique, 0x100000ec, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7c30, 8)]
[(unique, 0x100001d2, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x41e61c, 1)]
[(unique, 0x100001da, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001c2, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (unique, 0x100001ba, 8) , (unique, 0x100001c2, 8) , (unique, 0x100001ca, 8) , (unique, 0x100001d2, 8) , (unique, 0x100001da, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4c7c34, 4) , (const, 0x1, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[ ---  CBRANCH (ram, 0x41e6e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x21e, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x21e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000202, 8) , (ram, 0x4c5120, 8), (unique, 0x10000202, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(ram, 0x4c5120, 8) COPY (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) INDIRECT (unique, 0x1000018e, 8) , (const, 0x21e, 4), (unique, 0x1000018e, 8) COPY (unique, 0x10000186, 8), (unique, 0x10000186, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41e780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000222, 8), (unique, 0x10000222, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000212, 8), (unique, 0x10000212, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x218, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x20b, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x218, 4), (ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x20b, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x218, 4), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x20b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022a, 8) , (ram, 0x4c5120, 8), (unique, 0x1000022a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(ram, 0x4c5120, 8) COPY (unique, 0x10000232, 8), (unique, 0x10000232, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) INDIRECT (unique, 0x10000176, 8) , (const, 0x218, 4), (unique, 0x10000176, 8) COPY (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x41e6a5, 1)]
[ ---  CBRANCH (ram, 0x41e800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1fd, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1fd, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x1fd, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1fd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x201, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x201, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (unique, 0x1000019e, 8) , (const, 0x201, 4), (unique, 0x1000019e, 8) COPY (register, 0x38, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x201, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x201, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x201, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x41e679, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xd7, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xd7, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0xd7, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xd7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000242, 8), (unique, 0x10000242, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024a, 8) , (unique, 0xbd80, 8), (unique, 0x1000024a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000242, 8), (unique, 0x10000242, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xf6, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xf2, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xe6, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xf6, 4), (ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xf2, 4), (ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xe6, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (register, 0x10, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xf6, 4), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xf2, 4), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xe6, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000252, 8) , (ram, 0x4c5120, 8), (unique, 0x10000252, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c5120, 8) COPY (unique, 0x1000025a, 8), (unique, 0x1000025a, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) INDIRECT (unique, 0x1000015e, 8) , (const, 0xf6, 4), (unique, 0x1000015e, 8) COPY (unique, 0x10000156, 8), (unique, 0x10000156, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41e845, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000094, 4) , (const, 0x0, 4), (unique, 0x10000094, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x112, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x112, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x112, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x112, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41e6f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x119, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x119, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x119, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x119, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000262, 8) , (const, 0x0, 8), (unique, 0x10000262, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41e820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1c5, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1c5, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x1c5, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1c5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41e6f2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x12f, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x12f, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x12f, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x12f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x41e6f2, 1)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7c20, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001aa, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[ ---  CBRANCH (ram, 0x41e72a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (register, 0x10, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41e7d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000272, 8), (unique, 0x10000272, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(unique, 0x100001b2, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x41e72a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (ram, 0x4c7c30, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x41e72a, 1)]
[(unique, 0x100001ae, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) INT_ADD (ram, 0x4c7c30, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (unique, 0x100001a6, 4) , (unique, 0x100001aa, 4) , (unique, 0x100001ae, 4) , (unique, 0x100001b2, 4) , (unique, 0x100001b2, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[ ---  CBRANCH (ram, 0x41e850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x19f, 4)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x19f, 4)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x19f, 4)]
[(ram, 0x4c7c34, 4) COPY (ram, 0x4c7c34, 4), (ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x19f, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x19f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) COPY (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  RETURN (const, 0x0, 8)]
