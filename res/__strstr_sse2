[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x429b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x429b51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) CALL (ram, 0x4011a0, 8) , (register, 0x38, 8) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x429b54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x429b85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x28, 4) INT_OR (register, 0x28, 4) , (register, 0x0, 4), (register, 0x28, 4) INT_LEFT (unique, 0x100001fb, 4) , (const, 0x10, 4), (unique, 0x100001fb, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x429b51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000394, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x429ba4, 1)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) COPY (unique, 0x100003a4, 8), (unique, 0x100003a4, 8) MULTIEQUAL (unique, 0x10000394, 8) , (unique, 0x1000039c, 8)]
[ ---  CBRANCH (ram, 0x429ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x10, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x1000039c, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x429bbf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x429b51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x429b54, 1)]
[ ---  CBRANCH (ram, 0x429bc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x28, 4) INT_OR (register, 0x28, 4) , (register, 0x0, 4), (register, 0x28, 4) INT_LEFT (unique, 0x10000207, 4) , (const, 0x18, 4), (unique, 0x10000207, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_LEFT (unique, 0x100001ff, 4) , (const, 0x10, 4), (unique, 0x100001ff, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x10, 4) INT_LEFT (unique, 0x10000203, 4) , (const, 0x8, 4), (unique, 0x10000203, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x429b51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000037c, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x429bec, 1)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) COPY (unique, 0x1000038c, 8), (unique, 0x1000038c, 8) MULTIEQUAL (unique, 0x1000037c, 8) , (unique, 0x10000384, 8)]
[ ---  CBRANCH (ram, 0x429be8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x10000384, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x429c0a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x429b51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0xa0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x429b54, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x78, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x8a, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x78, 4)]
[ ---  CBRANCH (ram, 0x429b51, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401030, 8) , (register, 0x0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_OR (register, 0x0, 8) , (const, 0x200, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9d, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x9d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9d, 4)]
[ ---  CBRANCH (ram, 0x429b54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4010f0, 8) , (register, 0x0, 8) , (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x429c14, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x101, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0xb8, 8) PTRADD (register, 0x0, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (register, 0xb8, 8) INT_SUB (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000036c, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x8, 8) COPY (const, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000036c, 8) , (unique, 0x10000374, 8)]
[ ---  CBRANCH (ram, 0x4299f1, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000374, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000023b, 8) , (const, 0x8, 8), (unique, 0x1000023b, 8) INT_ADD (unique, 0x10000233, 8) , (const, 0x1, 8), (unique, 0x10000233, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x4299ee, 1)]
[ ---  CBRANCH (ram, 0x429a89, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x429c49, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x429a56, 1)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x5, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x100003c5, 8), (unique, 0x100003c5, 8) INT_ADD (unique, 0x100003bd, 8) , (register, 0x30, 8), (unique, 0x100003bd, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x100003bc, 1), (unique, 0x100003bc, 1) CAST (register, 0x30, 1), (register, 0x30, 1) INT_SUB (unique, 0xbb00, 1) , (unique, 0x100000eb, 1), (unique, 0x100000eb, 1) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_LEFT (register, 0x18, 8) , (const, 0x3, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x186, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x173, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x30, 1), (unique, 0x3a00, 8) CAST (unique, 0x100003d5, 8), (unique, 0x100003d5, 8) INT_ADD (unique, 0x100003cd, 8) , (register, 0x8, 8), (unique, 0x100003cd, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x8, 8) INT_AND (register, 0x38, 8) , (const, 0xff, 8), (register, 0x38, 8) INT_ADD (register, 0x18, 8) , (unique, 0x100000f5, 8), (unique, 0x100000f5, 8) INT_MULT (register, 0x8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x30, 1) INT_ADD (register, 0x10, 1) , (const, 0x1, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x1000024b, 8) , (const, 0x1, 8), (unique, 0x1000024b, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x30, 4) INT_ADD (unique, 0x100000fd, 4) , (const, 0x2, 4), (unique, 0x100000fd, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x429a16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100001f5, 1) INT_SUB (unique, 0x100001f7, 1) , (unique, 0x100001f9, 1), (unique, 0x100001f7, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (unique, 0x100001f9, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x1000032c, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000344, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f5, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x10, 1), (unique, 0x3a00, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) INT_ADD (unique, 0x100003de, 8) , (register, 0x0, 8), (unique, 0x100003de, 8) CAST (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003dd, 1), (unique, 0x100003dd, 1) CAST (register, 0x0, 1), (register, 0x10, 1) INT_ADD (unique, 0x100001f5, 1) , (unique, 0x100001f6, 1), (unique, 0x100001f6, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x10000122, 1), (unique, 0x10000122, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000293, 8) , (const, 0x1, 8), (unique, 0x10000293, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x30, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000334, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000344, 8) , (unique, 0x1000034c, 8)]
[(unique, 0x10000334, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000334, 8)]
[(unique, 0x1000034c, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000334, 8)]
[ ---  CBRANCH (ram, 0x429a60, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 8) , (unique, 0x3100, 8), (register, 0x8, 8) COPY (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000334, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x260, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0xb0, 1), (register, 0xb0, 1) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000407, 8), (unique, 0x10000407, 8) INT_ADD (unique, 0x100003ff, 8) , (register, 0x0, 8), (unique, 0x100003ff, 8) CAST (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003ee, 1), (unique, 0x100003ee, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x10000141, 1), (unique, 0x10000141, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x100002c3, 8) , (const, 0x1, 8), (unique, 0x100002c3, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x100002bb, 8) , (const, 0x1, 8), (unique, 0x100002bb, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x9, 8)]
[(register, 0x18, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) INT_ADD (unique, 0x100003ef, 8) , (register, 0x0, 8), (unique, 0x100003ef, 8) CAST (unique, 0x100002db, 8), (unique, 0x100002db, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003ee, 1), (unique, 0x100003ee, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x10000141, 1), (unique, 0x10000141, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x100002c3, 8) , (const, 0x1, 8), (unique, 0x100002c3, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x100002bb, 8) , (const, 0x1, 8), (unique, 0x100002bb, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x429b32, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x429aef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000418, 8), (unique, 0x10000418, 8) INT_ADD (unique, 0x10000410, 8) , (register, 0x0, 8), (unique, 0x10000410, 8) CAST (unique, 0x1000031b, 8), (unique, 0x1000031b, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000040f, 1), (unique, 0x1000040f, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0xbb00, 1) , (unique, 0x1000015e, 1), (unique, 0x1000015e, 1) INT_MULT (unique, 0xbb00, 1) , (const, 0xf8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x429ac8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (unique, 0x10000169, 8) , (const, 0x1, 8), (unique, 0x10000169, 8) INT_2COMP (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x429ac0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x429b08, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0xf, 8)]
[(unique, 0x10000354, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x429b2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000428, 8), (unique, 0x10000428, 8) CAST (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x30, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000420, 8), (unique, 0x10000420, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x28, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30f, 4)]
[ ---  CBRANCH (ram, 0x429b54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4010f0, 8) , (register, 0xa0, 8) , (register, 0x30, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000035c, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x28, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x429b27, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (const, 0x8, 8)]
[(unique, 0x10000364, 8) COPY (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000354, 8) , (unique, 0x1000035c, 8) , (unique, 0x10000364, 8)]
[ ---  CBRANCH (ram, 0x429ac8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x347, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x347, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x429ac8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xb8, 8) , (register, 0xa0, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401030, 8) , (unique, 0x3400, 8) , (const, 0x800, 8), (unique, 0x3400, 8) PTRADD (register, 0xb8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x429c58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000430, 8), (unique, 0x10000430, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000438, 8), (unique, 0x10000438, 8) CALL (ram, 0x429480, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x30, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x429c58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000440, 8), (unique, 0x10000440, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x391, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
