[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000176, 8), (unique, 0x10000176, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x41bac8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x1a2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1a2, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41b998, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x57, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x57, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x41b9b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x41ba38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x41b9b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff58, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41ba5c, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0xbd80, 8) , (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) CAST (stack, 0xffffffffffffff58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x41b9b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4)]
[ ---  CBRANCH (ram, 0x41b9b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff58, 8) , (const, 0x1, 4) , (const, 0x1, 4) , (unique, 0xbc80, 4) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14b, 4)]
[ ---  CBRANCH (ram, 0x41bad2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff58, 8), (register, 0x0, 8) CALL (ram, 0x4555d0, 8) , (unique, 0xbc80, 4) , (stack, 0xffffffffffffff58, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x14b, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x172, 4)]
[ ---  CALL (ram, 0x41ee00, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100001a6, 8) , (register, 0x0, 8), (unique, 0x100001a6, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6ce0, 8)]
[(unique, 0x1000014e, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) INT_ADD (unique, 0x100001be, 8) , (unique, 0xbd80, 8), (unique, 0x100001be, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x41bb01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(unique, 0x10000156, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000014e, 8) , (unique, 0x10000156, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x3200, 8) CAST (unique, 0x100001de, 8), (unique, 0x100001de, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6f20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0xb8, 8) INT_ADD (unique, 0x100001d6, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x100001d6, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x41b9c7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15c, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3200, 8) CAST (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  BRANCH (ram, 0x41b9b9, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6fe0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6da0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000015e, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41b9d3, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[(unique, 0x10000166, 8) COPY (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x100001fe, 8), (unique, 0x100001fe, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (unique, 0x10000166, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3200, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xe0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000206, 8), (unique, 0x10000206, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x41bab8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe8, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41b9fe, 1)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x41bb24, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000226, 8), (unique, 0x10000226, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe3, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
