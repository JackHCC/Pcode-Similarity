[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x19a980, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb264, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12f, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x12f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12f, 4)]
[ ---  CALL (ram, 0x1913e0, 8)]
[ ---  BRANCH (ram, 0x19a89d, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19a8e6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x12b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x6e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x6e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19a901, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10e, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x10e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10e, 4)]
[ ---  CALL (ram, 0x230690, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x76, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x76, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[ ---  CALL (ram, 0x190770, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x19a91c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x76, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0xf7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x86, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x86, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x10000163, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(unique, 0x10000167, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x19a936, 1) , (unique, 0x10000162, 1), (unique, 0x10000162, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe9, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000163, 4) , (const, 0xe9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000167, 4) , (const, 0xe9, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0x18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000167, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (unique, 0x10000163, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x19a8d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x10000122, 8), (unique, 0x10000122, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000175, 8), (unique, 0x10000175, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x21c, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000105, 8) , (const, 0x0, 4), (unique, 0x10000105, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010d, 8) , (const, 0x0, 4), (unique, 0x1000010d, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000115, 8) , (const, 0x0, 4), (unique, 0x10000115, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000185, 8) , (const, 0x0, 8), (unique, 0x10000185, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018d, 8) , (const, 0x0, 8), (unique, 0x1000018d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x251, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x250, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0xbb, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x25f, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x25d, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x25b, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x25a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x251, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x250, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbb, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000195, 8) , (const, 0x0, 8), (unique, 0x10000195, 8) CAST (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x19a98a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x234c80, 8) , (const, 0x0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0xda, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xda, 4)]
[ ---  RETURN (const, 0x1, 4)]
