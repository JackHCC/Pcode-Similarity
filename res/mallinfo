[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000110, 8), (unique, 0x10000110, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x4286c8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c56e4, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x122, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x122, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x122, 4)]
[ ---  CALL (ram, 0x425560, 8)]
[ ---  BRANCH (ram, 0x4285d1, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 16) COPY (const, 0x0, 16)]
[(stack, 0xffffffffffffffb8, 16) COPY (const, 0x0, 16)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4286a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000118, 8), (unique, 0x10000118, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000120, 8), (unique, 0x10000120, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x119, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000128, 8) , (const, 0x1, 4), (unique, 0x10000128, 8) CAST (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11e, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x11e, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x11e, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x11e, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x11e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11e, 4)]
[ ---  CALL (ram, 0x421390, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x428618, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000130, 8), (unique, 0x10000130, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x70, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000138, 8) , (const, 0x1, 4), (unique, 0x10000138, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x75, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x75, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0x75, 4), (stack, 0xffffffffffffffb8, 16) MULTIEQUAL (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16) , (stack, 0xffffffffffffffb8, 16)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x421660, 8) , (register, 0x18, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x428680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000140, 8), (unique, 0x10000140, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x75, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xe4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000150, 8) , (const, 0x0, 4), (unique, 0x10000150, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x428632, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000148, 8), (unique, 0x10000148, 8) CAST (register, 0x18, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x428632, 1)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x8b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000160, 8) , (unique, 0xbd00, 4), (unique, 0x10000160, 8) CAST (register, 0x18, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000158, 8), (unique, 0x10000158, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[ ---  CBRANCH (ram, 0x428600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000170, 8), (unique, 0x10000170, 8) INT_ADD (unique, 0x10000168, 8) , (const, 0x870, 8), (unique, 0x10000168, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ac, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x100000ac, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffb8, 8) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0x0, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x267, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x266, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x261, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x260, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xad, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000cc, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x100000cc, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffc0, 8) SUBPIECE (stack, 0xffffffffffffffb8, 16) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4286d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xdc, 4)]
[(stack, 0xffffffffffffffb8, 16) INDIRECT (stack, 0xffffffffffffffb8, 16) , (const, 0xdc, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xdc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xdc, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xdc, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
