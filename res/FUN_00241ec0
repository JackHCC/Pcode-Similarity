[ ---  CBRANCH (ram, 0x241f68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4ef910, 4) COPY (ram, 0x4ef910, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x10000092, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x10000092, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffe8, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ef910, 4) INDIRECT (ram, 0x4ef910, 4) , (const, 0x15, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) PTRADD (unique, 0x1000009a, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000009a, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffec, 8)]
[ ---  CBRANCH (ram, 0x241f68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) PTRADD (unique, 0x1000009a, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000009a, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffec, 8)]
[(ram, 0x4ef910, 4) COPY (ram, 0x4ef910, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x241f00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef910, 4) , (const, 0x0, 4)]
[(ram, 0x4ef910, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef910, 4) , (const, 0x0, 4)]
[(ram, 0x4ef910, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x241f23, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0x3100, 8) , (const, 0xbb, 4)]
[(ram, 0x4ef910, 4) INDIRECT (ram, 0x4ef910, 4) , (const, 0xbb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbb, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000008a, 8), (unique, 0x1000008a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef910, 8)]
[(unique, 0x100000b2, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0xbb, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef910, 4) MULTIEQUAL (ram, 0x4ef910, 4) , (ram, 0x4ef910, 4) , (ram, 0x4ef910, 4)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x80, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x241f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000ce, 8), (unique, 0x100000ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000a2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000a2, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffec, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x100000b2, 8) , (register, 0x38, 8)]
[(ram, 0x4ef910, 4) INDIRECT (ram, 0x4ef910, 4) , (const, 0xad, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xad, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x241f2a, 1)]
[(ram, 0x4ef910, 4) MULTIEQUAL (ram, 0x4ef910, 4) , (ram, 0x4ef910, 4)]
[ ---  CBRANCH (ram, 0x241f3e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100000be, 4) COPY (unique, 0x100000aa, 4), (unique, 0x100000aa, 4) INT_ADD (ram, 0x4ef910, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x241f60, 1) , (unique, 0x100000ae, 1), (unique, 0x100000ae, 1) INT_NOTEQUAL (unique, 0x100000aa, 4) , (const, 0x0, 4), (unique, 0x100000aa, 4) INT_ADD (ram, 0x4ef910, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x97, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000082, 8), (unique, 0x10000082, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef910, 8)]
[(unique, 0x100000ba, 4) COPY (ram, 0x4ef910, 4), (ram, 0x4ef910, 4) INDIRECT (ram, 0x4ef910, 4) , (const, 0x97, 4), (ram, 0x4ef910, 4) INT_ADD (ram, 0x4ef910, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4ef910, 4) COPY (ram, 0x4ef910, 4), (ram, 0x4ef910, 4) COPY (unique, 0x100000c2, 4), (unique, 0x100000c2, 4) MULTIEQUAL (unique, 0x100000ba, 4) , (unique, 0x100000be, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
