[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41ee27, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000005b, 8), (unique, 0x1000005b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41ee50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000021, 4) , (const, 0x0, 4), (unique, 0x10000021, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x41ee27, 1)]
[(register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000053, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x41ee39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(unique, 0x10000057, 4) COPY (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000063, 8) , (register, 0x30, 8), (unique, 0x10000063, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000006b, 8) , (register, 0x10, 8), (unique, 0x1000006b, 8) CAST (unique, 0x10000031, 8), (unique, 0x10000031, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000025, 4), (unique, 0x10000025, 4) MULTIEQUAL (unique, 0x10000053, 4) , (unique, 0x10000057, 4)]
[ ---  RETURN (const, 0x0, 8)]
