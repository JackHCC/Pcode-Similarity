[ ---  CBRANCH (ram, 0x28a683, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x1200, 32) CALLOTHER (const, 0x274, 4) , (unique, 0xbaa00, 16), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x28a480, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x21, 4), (register, 0x8, 4) INT_AND (unique, 0x10000070, 4) , (const, 0x3f, 4), (unique, 0x10000070, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000070, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x28a4b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) INT_AND (unique, 0x100001e1, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100001e1, 8) CAST (register, 0x38, 8), (register, 0x8, 4) INT_AND (unique, 0x10000070, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0x100001da, 1), (unique, 0x100001da, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x8, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (const, 0x20, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a57b, 1) , (unique, 0x10000083, 1), (unique, 0x10000083, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100000ad, 8) , (unique, 0x100000a5, 8) , (const, 0x1, 8), (unique, 0x100000ad, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x100000a5, 8) INT_ADD (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x28a610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0x100001d6, 1), (unique, 0x100001d6, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x20, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) INT_AND (unique, 0x100001f1, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100001f1, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a57b, 1) , (unique, 0x1000007b, 1), (unique, 0x1000007b, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000070, 4) , (const, 0x1f, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28a690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a6a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a6b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a6de, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a57b, 1) , (unique, 0x10000086, 1), (unique, 0x10000086, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000209, 8), (unique, 0x10000209, 8) INT_AND (unique, 0x10000201, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x10000201, 8) CAST (register, 0x38, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28a6c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x12c0, 32) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1280, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x24e, 4) , (register, 0x1240, 32) , (register, 0x1220, 32), (register, 0x1280, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32)]
[ ---  CBRANCH (ram, 0x28a6a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32)]
[ ---  CBRANCH (ram, 0x28a6b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001ad, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001ad, 8) PTRSUB (unique, 0x100001a5, 8) , (const, 0x0, 8), (unique, 0x100001a5, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1280, 32)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001c5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001c5, 8) PTRSUB (unique, 0x100001bd, 8) , (const, 0x0, 8), (unique, 0x100001bd, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a540, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x40, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28a5e0, 1) , (unique, 0x100001dd, 1), (unique, 0x100001dd, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x207, 1) INT_SLESS (unique, 0x10000211, 4) , (const, 0x0, 4), (unique, 0x10000211, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x40, 4), (register, 0x20b, 1) INT_SCARRY (register, 0x10, 4) , (const, 0x40, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x80, 4)]
[ ---  CBRANCH (ram, 0x28a610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000125, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000125, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x60, 4)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0x1000008d, 1), (unique, 0x1000008d, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (const, 0x1f, 4) , (unique, 0x10000215, 4), (unique, 0x10000215, 4) CAST (register, 0x10, 4), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x60, 4)]
[ ---  CBRANCH (ram, 0x28a620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000013d, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000013d, 8) PTRSUB (unique, 0x10000135, 8) , (const, 0x0, 8), (unique, 0x10000135, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28a690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000017d, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000017d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28a6a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000195, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000195, 8) PTRSUB (unique, 0x1000018d, 8) , (const, 0x0, 8), (unique, 0x1000018d, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CBRANCH (ram, 0x28a640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x10000155, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000155, 8) PTRSUB (unique, 0x1000014d, 8) , (const, 0x0, 8), (unique, 0x1000014d, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0x10000089, 1), (unique, 0x10000089, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (const, 0x1f, 4) , (unique, 0x10000219, 4), (unique, 0x10000219, 4) CAST (register, 0x10, 4), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x28a660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xdc980, 4)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x28a680, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000016d, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000016d, 8) PTRSUB (unique, 0x10000165, 8) , (const, 0x0, 8), (unique, 0x10000165, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
