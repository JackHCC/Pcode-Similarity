[(register, 0x1200, 16) SUBPIECE (register, 0x1200, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1bc060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x278, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000251, 8), (unique, 0x10000251, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1bc0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1bc0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1bc086, 1)]
[(register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_ZEXT (unique, 0x10000262, 1), (unique, 0x10000262, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000113, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000113, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000261, 1), (unique, 0x10000261, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000103, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000103, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1bc078, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_ZEXT (unique, 0x10000262, 1), (unique, 0x10000262, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000113, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000113, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000261, 1), (unique, 0x10000261, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000103, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000103, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bc0a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1bc0a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x28df80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000285, 4), (unique, 0x10000285, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000e3, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000e3, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000275, 8), (unique, 0x10000275, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000db, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000db, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000274, 1), (unique, 0x10000274, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001eb, 8), (unique, 0x100001eb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000273, 1), (unique, 0x10000273, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001e3, 8), (unique, 0x100001e3, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_AND (unique, 0x1000009d, 4) , (const, 0x3f, 4), (unique, 0x1000009d, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x2bc0b0, 16)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x2bc0d0, 16)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x2bc040, 16)]
[ ---  CBRANCH (ram, 0x28c6c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0x31, 4), (register, 0x8, 4) INT_AND (unique, 0x10000095, 4) , (const, 0x3f, 4), (unique, 0x10000095, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x28c6c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x31, 4)]
[ ---  CBRANCH (ram, 0x28df50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xffff, 4), (register, 0x10, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xc5400, 16), (unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb300, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb300, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_SUB (register, 0x10, 8) , (const, 0x10, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x10, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x98, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) INT_AND (unique, 0x10000289, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000289, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) CAST (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) INT_AND (unique, 0x10000299, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000299, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000095, 4) , (const, 0xf, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000009d, 4) , (const, 0xf, 4)]
[(unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x1200, 16) , (unique, 0xc0300, 16)]
[ ---  CBRANCH (ram, 0x28c710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000009d, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_AND (unique, 0x10000095, 4) , (const, 0xf, 4)]
[(unique, 0x10000201, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000211, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000229, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000239, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28c6e7, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4)]
[(unique, 0x10000209, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000231, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000241, 8) COPY (register, 0x30, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16), (ram, 0x2bc040, 16) INDIRECT (ram, 0x2bc040, 16) , (const, 0x111, 4)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16), (ram, 0x2bc0b0, 16) INDIRECT (ram, 0x2bc0b0, 16) , (const, 0x111, 4)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16), (ram, 0x2bc0d0, 16) INDIRECT (ram, 0x2bc0d0, 16) , (const, 0x111, 4)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x111, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0x100002b1, 8) , (register, 0x1200, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x1260, 8) , (register, 0x1280, 8) , (register, 0x12a0, 8) , (register, 0x12c0, 8), (unique, 0x100002b1, 8) CAST (unique, 0x3400, 8), (register, 0x12c0, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x12a0, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1280, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1240, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1220, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1200, 8) SUBPIECE (unique, 0xc0300, 16) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0x100000f3, 8) , (register, 0x88, 8) , (const, 0x1, 8), (unique, 0x100000f3, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bdc80, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (register, 0x88, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000eb, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000eb, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bdc80, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xf, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000201, 8) , (unique, 0x10000209, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000211, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000229, 8) , (unique, 0x10000231, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000239, 8) , (unique, 0x10000241, 8)]
[ ---  CBRANCH (ram, 0x28df3d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x88, 4), (register, 0x88, 4) INT_RIGHT (register, 0x88, 4) , (register, 0x8, 1), (register, 0x10, 4) INT_RIGHT (const, 0xffff, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x88, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x98, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x98, 8), (unique, 0x3880, 8) INT_SUB (register, 0x8, 8) , (const, 0x10, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3a00, 8) , (const, 0x0, 8)]
[(unique, 0x10000219, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x10, 8)]
[ ---  CALLOTHER (const, 0x183, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16) , (const, 0x1a, 1), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) PTRADD (unique, 0x10000143, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000143, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) PTRADD (unique, 0x10000133, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000133, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000219, 8) , (unique, 0x10000221, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000219, 8) , (unique, 0x10000221, 8)]
[(unique, 0x10000249, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x28c830, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_SUB (register, 0x98, 8) , (const, 0x10, 8), (register, 0x200, 1) INT_LESS (register, 0x98, 8) , (const, 0x10, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x183, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16) , (const, 0x1a, 1), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) PTRADD (unique, 0x10000173, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000173, 8) PTRSUB (unique, 0x1000016b, 8) , (const, 0x0, 8), (unique, 0x1000016b, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) PTRADD (unique, 0x1000015b, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000015b, 8) PTRSUB (unique, 0x10000153, 8) , (const, 0x0, 8), (unique, 0x10000153, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x28c830, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x10000249, 8) , (register, 0x98, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (unique, 0x100001fe, 1), (unique, 0x100001fe, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x98, 8) , (const, 0x11, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002eb, 4), (unique, 0x100002eb, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000c3, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000c3, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002db, 8), (unique, 0x100002db, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000bb, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000bb, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100002da, 1), (unique, 0x100002da, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000193, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000193, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002d9, 1), (unique, 0x100002d9, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000183, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000183, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000221, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (unique, 0x100001fb, 1), (unique, 0x100001fb, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_SUB (register, 0x98, 8) , (const, 0x20, 8), (register, 0x200, 1) INT_LESS (register, 0x98, 8) , (const, 0x10, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) PTRADD (unique, 0x100001a3, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001a3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) PTRADD (unique, 0x100001b3, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[(unique, 0x1aa00, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1ac80, 1), (unique, 0x1ac80, 1) INT_EQUAL (unique, 0x100000b7, 4) , (const, 0x0, 4), (unique, 0x100000b7, 4) INT_AND (unique, 0x100000b3, 4) , (const, 0x1, 4), (unique, 0x100000b3, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1aa00, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
[(unique, 0x1aa00, 8) INT_ADD (unique, 0x1aa00, 8) , (const, 0x1, 8)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[ ---  CBRANCH (ram, 0x28df71, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x98, 8) , (unique, 0x1aa00, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000311, 4), (unique, 0x10000311, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000309, 8), (unique, 0x10000309, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000d3, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000301, 8), (unique, 0x10000301, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000cb, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000cb, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ddc0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000300, 1), (unique, 0x10000300, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d3, 8) , (unique, 0x1aa00, 8) , (const, 0x1, 8), (unique, 0x100001d3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x100002ff, 1), (unique, 0x100002ff, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001c3, 8) , (unique, 0x1aa00, 8) , (const, 0x1, 8), (unique, 0x100001c3, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x2bc040, 16) COPY (ram, 0x2bc040, 16)]
[(ram, 0x2bc0b0, 16) COPY (ram, 0x2bc0b0, 16)]
[(ram, 0x2bc0d0, 16) COPY (ram, 0x2bc0d0, 16)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
