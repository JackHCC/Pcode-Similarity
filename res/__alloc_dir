[(register, 0x28, 8) INT_AND (register, 0x38, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x47c0b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xce, 4)]
[ ---  CBRANCH (ram, 0x47c01f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455d90, 8) , (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) COPY (const, 0x8030, 8)]
[(register, 0x18, 8) COPY (const, 0x8000, 8)]
[ ---  CBRANCH (ram, 0x47c056, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x8000, 8)]
[(unique, 0x3800, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) INT_ADD (register, 0x8, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47c042, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7fff, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100000be, 8), (unique, 0x100000be, 8) INT_ADD (register, 0x8, 8) , (const, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x47c052, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x100000, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) COPY (const, 0x100000, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57, 4)]
[(register, 0x28, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x47c0ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000ce, 8), (unique, 0x100000ce, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0x18, 8) COPY (const, 0x2000, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4)]
[ ---  CBRANCH (ram, 0x47c063, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d6, 8), (unique, 0x100000d6, 8) CALL (ram, 0x426550, 8) , (const, 0x2030, 8)]
[ ---  CBRANCH (ram, 0x47c0c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x0, 1)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0xbc80, 4), (unique, 0x4f00, 8) CAST (unique, 0x100000e6, 8), (unique, 0x100000e6, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000de, 8), (unique, 0x100000de, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47c099, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x28, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ee, 8) , (register, 0x18, 8), (unique, 0x100000ee, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000f6, 8) , (const, 0x0, 8), (unique, 0x100000f6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000fe, 8) , (const, 0x0, 8), (unique, 0x100000fe, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000106, 8) , (const, 0x0, 8), (unique, 0x10000106, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
