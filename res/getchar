[(unique, 0x100000d7, 8) COPY (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x187f30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4ec850, 8) , (const, 0x74, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x188018, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000103, 8), (unique, 0x10000103, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4ec850, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000fb, 8), (unique, 0x100000fb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4ec850, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x35, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x35, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000113, 4), (unique, 0x10000113, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (unique, 0x1000010b, 8), (unique, 0x1000010b, 8) CAST (ram, 0x4ec850, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000117, 8) , (unique, 0x3100, 8), (unique, 0x10000117, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4ec850, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x27, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100000ef, 8) COPY (unique, 0x10000127, 8), (unique, 0x10000127, 8) CAST (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x187f99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) CAST (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x187f95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4ec850, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x187f68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x14c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x14c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x7a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x187f83, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x12f, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x12f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12f, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100000df, 8) COPY (unique, 0x10000147, 8), (unique, 0x10000147, 8) CAST (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x84, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x84, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000157, 8) , (register, 0x80, 8), (unique, 0x10000157, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000d7, 8) , (const, 0x88, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000ef, 8) , (unique, 0x100000df, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x8c, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x188008, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100000ef, 8) , (register, 0x38, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x11f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11f, 4)]
[(register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x187fae, 1)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xac, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000167, 8), (unique, 0x10000167, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x187f27, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) CAST (unique, 0x100000d7, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xc6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000177, 8), (unique, 0x10000177, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000d7, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x187f27, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000177, 8), (unique, 0x10000177, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000d7, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xd4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017f, 8) , (const, 0x0, 8), (unique, 0x1000017f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x187fe3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd4, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x112, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x112, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xe4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100000c6, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(unique, 0x100000ce, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x187ffd, 1) , (unique, 0x100000c5, 1), (unique, 0x100000c5, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ec850, 8) INDIRECT (unique, 0x100000c6, 8) , (const, 0x104, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100000ce, 4) , (const, 0x104, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100000f7, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0x104, 4)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (unique, 0x100000c6, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x100000ce, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000187, 4), (unique, 0x10000187, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x100000f7, 4) , (register, 0x10, 4)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000018b, 4), (unique, 0x1000018b, 4) COPY (register, 0x10, 4)]
