[(register, 0xa8, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x456354, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0xbe00, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000096, 8), (unique, 0x10000096, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) COPY (const, 0x3, 8)]
[(unique, 0x10000086, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x456385, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000009e, 8), (unique, 0x1000009e, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000065, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x456398, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000a6, 8), (unique, 0x100000a6, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x456330, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000065, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x456366, 1)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x38, 8) , (const, 0x1, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x4563b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000ae, 8), (unique, 0x100000ae, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x456330, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000065, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x45637d, 1)]
[(register, 0x30, 8) COPY (const, 0x2, 8)]
[(unique, 0x1000008e, 8) COPY (register, 0xa8, 8)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000086, 8) , (unique, 0x1000008e, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x1, 4)]
