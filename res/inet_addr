[(stack, 0xffffffffffffffb8, 4) COPY (const, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000e4, 8), (unique, 0x100000e4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x29, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x29, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ec, 8) , (const, 0x0, 4), (unique, 0x100000ec, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100000fc, 8), (unique, 0x100000fc, 8) INT_ADD (unique, 0x100000f4, 8) , (const, 0x2, 8), (unique, 0x100000f4, 8) CAST (unique, 0x100000b8, 8), (unique, 0x100000b8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x100000d4, 8) COPY (unique, 0x10000104, 8), (unique, 0x10000104, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100000d4, 8) , (unique, 0x100000dc, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x5a, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5a, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x5a, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3e0, 8) , (register, 0xb8, 8) , (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0xb8, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0x30, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x224b20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x207, 1) INT_SLESS (const, 0xff, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x224b5f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (register, 0x207, 1)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000114, 8), (unique, 0x10000114, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000010c, 8), (unique, 0x1000010c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (unique, 0x10000095, 1), (unique, 0x10000095, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (unique, 0x10000134, 4), (unique, 0x10000134, 4) CAST (unique, 0x5200, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000098, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0x10000098, 8) PTRSUB (const, 0x0, 8) , (const, 0x293cf0, 8), (register, 0x8, 8) CAST (unique, 0x1000012c, 8), (unique, 0x1000012c, 8) INT_SUB (unique, 0x1000011c, 8) , (unique, 0x10000124, 8), (unique, 0x10000124, 8) CAST (unique, 0x3800, 8), (unique, 0x1000011c, 8) CAST (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000138, 8) , (unique, 0xbc80, 4), (unique, 0x10000138, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x127, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x127, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000140, 4), (unique, 0x10000140, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (stack, 0xffffffffffffffb8, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (register, 0x0, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (register, 0x0, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (register, 0x0, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x224afb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x9a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000154, 8) , (register, 0x0, 1), (unique, 0x10000154, 8) CAST (register, 0x18, 8), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100000dc, 8) COPY (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) INT_ADD (unique, 0x10000144, 8) , (const, 0x1, 8), (unique, 0x10000144, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x224ab6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015c, 8) , (unique, 0xbc80, 4), (unique, 0x1000015c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xbd, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xbd, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
