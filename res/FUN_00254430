[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x254460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f00ec, 4) , (const, 0x0, 4)]
[(ram, 0x4f00ec, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f00ec, 4) , (const, 0x0, 4)]
[(ram, 0x4f00ec, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x254483, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe4, 4)]
[(ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0xe4, 4)]
[(ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0xe4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe4, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100000e8, 8), (unique, 0x100000e8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00ec, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0x3f, 4), (ram, 0x4f00ec, 4) MULTIEQUAL (ram, 0x4f00ec, 4) , (ram, 0x4f00ec, 4) , (ram, 0x4f00ec, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3f, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000010b, 4) COPY (ram, 0x4f00e8, 4), (ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0x3f, 4), (ram, 0x4f00e8, 4) MULTIEQUAL (ram, 0x4f00e8, 4) , (ram, 0x4f00e8, 4) , (ram, 0x4f00e8, 4)]
[ ---  CBRANCH (ram, 0x2544c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f00e8, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e58e0, 8), (ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0x3f, 4), (ram, 0x4f00e8, 4) MULTIEQUAL (ram, 0x4f00e8, 4) , (ram, 0x4f00e8, 4) , (ram, 0x4f00e8, 4)]
[ ---  CALL (ram, 0x120ff0, 8) , (register, 0x20, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x75, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4)]
[(ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0x75, 4), (ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0x5a, 4)]
[(ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0x75, 4), (ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0x5a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x75, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x5a, 4)]
[ ---  CALL (ram, 0x144780, 8) , (register, 0x38, 8) , (unique, 0x100000d0, 8), (unique, 0x100000d0, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00d0, 8), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x38, 8) INT_XOR (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x5a, 4)]
[(unique, 0x1000010f, 4) COPY (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0x7b, 4), (ram, 0x4f00e8, 4) MULTIEQUAL (unique, 0x1000010b, 4) , (unique, 0x1000010f, 4)]
[(ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0x7b, 4), (ram, 0x4f00ec, 4) MULTIEQUAL (ram, 0x4f00ec, 4) , (ram, 0x4f00ec, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x7b, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x7b, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x1446b0, 8) , (unique, 0x100000d8, 8) , (unique, 0x10000137, 8), (unique, 0x10000137, 8) CAST (register, 0x20, 8), (unique, 0x100000d8, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00d0, 8)]
[ ---  CBRANCH (ram, 0x2544e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7b, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000117, 4) COPY (unique, 0x10000100, 4), (unique, 0x10000100, 4) INT_ADD (ram, 0x4f00ec, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x254505, 1) , (unique, 0x10000104, 1), (unique, 0x10000104, 1) INT_NOTEQUAL (unique, 0x10000100, 4) , (const, 0x0, 4), (unique, 0x10000100, 4) INT_ADD (ram, 0x4f00ec, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc5, 4)]
[(ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0xc5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc5, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xc5, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xc5, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000e0, 8), (unique, 0x100000e0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00ec, 8)]
[(unique, 0x10000113, 4) COPY (ram, 0x4f00ec, 4), (ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0xc5, 4), (ram, 0x4f00ec, 4) INT_ADD (ram, 0x4f00ec, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f00e8, 4) MULTIEQUAL (ram, 0x4f00e8, 4) , (ram, 0x4f00e8, 4)]
[(ram, 0x4f00ec, 4) COPY (unique, 0x1000011b, 4), (unique, 0x1000011b, 4) MULTIEQUAL (unique, 0x10000113, 4) , (unique, 0x10000117, 4)]
[(register, 0x0, 8) COPY (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x254520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4f00e8, 4) COPY (ram, 0x4f00e8, 4), (ram, 0x4f00e8, 4) INDIRECT (ram, 0x4f00e8, 4) , (const, 0xb6, 4)]
[(ram, 0x4f00ec, 4) COPY (ram, 0x4f00ec, 4), (ram, 0x4f00ec, 4) INDIRECT (ram, 0x4f00ec, 4) , (const, 0xb6, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4f00e8, 4) COPY (ram, 0x4f00e8, 4)]
[(ram, 0x4f00ec, 4) COPY (ram, 0x4f00ec, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
