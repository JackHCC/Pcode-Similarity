[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x6f00, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000474, 8), (unique, 0x10000474, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffff92, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffff94, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2594d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x6, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x137, 4)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x137, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x137, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x137, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x137, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x137, 4)]
[ ---  CBRANCH (ram, 0x25958f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222ec0, 8) , (const, 0x2, 4) , (const, 0x1, 4) , (const, 0x6, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x14e, 4), (stack, 0xffffffffffffffb8, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14e, 4)]
[ ---  CBRANCH (ram, 0x259588, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222870, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x10, 4), (unique, 0x3800, 8) CAST (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x15f, 4)]
[ ---  CBRANCH (ram, 0x259588, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2228a0, 8) , (register, 0x0, 4) , (unique, 0x10000484, 8) , (const, 0x10, 4), (unique, 0x10000484, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x188, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x188, 4), (stack, 0xffffffffffffff92, 2) MULTIEQUAL (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x188, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x188, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x188, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x188, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x188, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x188, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x188, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x188, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x188, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x19f, 4), (stack, 0xffffffffffffff92, 2) MULTIEQUAL (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x19f, 4), (stack, 0xffffffffffffff94, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x19f, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x19f, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x19f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x19f, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x0, 8) CALL (ram, 0x2564d0, 8) , (register, 0x38, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x3800, 8) , (const, 0x190, 4) , (const, 0x190, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff94, 8)]
[(unique, 0x100002e4, 8) INT_ADD (unique, 0x10000458, 8) , (stack, 0xffffffffffffffa0, 4), (unique, 0x10000458, 8) INT_LEFT (unique, 0x10000450, 8) , (const, 0x20, 8), (unique, 0x10000450, 8) INT_SEXT (unique, 0x1000048c, 4), (unique, 0x1000048c, 4) CAST (stack, 0xffffffffffffffa4, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x19f, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x19f, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x100002cc, 8) INT_ADD (unique, 0x10000448, 8) , (stack, 0xffffffffffffff98, 4), (unique, 0x10000448, 8) INT_LEFT (unique, 0x10000440, 8) , (const, 0x20, 8), (unique, 0x10000440, 8) INT_SEXT (unique, 0x10000490, 4), (unique, 0x10000490, 4) CAST (stack, 0xffffffffffffff9c, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x19f, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x19f, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x176, 4)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x176, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (unique, 0x10000460, 4) , (const, 0x176, 4), (unique, 0x10000460, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x176, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x176, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x176, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x176, 4)]
[(unique, 0x100002b4, 8) INT_ADD (unique, 0x10000438, 8) , (stack, 0xffffffffffffffa0, 4), (unique, 0x10000438, 8) INT_LEFT (unique, 0x10000430, 8) , (const, 0x20, 8), (unique, 0x10000430, 8) INT_SEXT (unique, 0x10000494, 4), (unique, 0x10000494, 4) CAST (stack, 0xffffffffffffffa4, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x176, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x176, 4)]
[(unique, 0x100002a4, 8) INT_ADD (unique, 0x10000428, 8) , (stack, 0xffffffffffffff98, 4), (unique, 0x10000428, 8) INT_LEFT (unique, 0x10000420, 8) , (const, 0x20, 8), (unique, 0x10000420, 8) INT_SEXT (unique, 0x10000498, 4), (unique, 0x10000498, 4) CAST (stack, 0xffffffffffffff9c, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x176, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x176, 4)]
[ ---  CBRANCH (ram, 0x2594c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x2564d0, 8) , (register, 0x38, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x3800, 8) , (const, 0x190, 4) , (const, 0x190, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff94, 8)]
[(unique, 0x10000275, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x259405, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6d, 4)]
[(register, 0x0, 8) CALL (ram, 0x257520, 8) , (register, 0x38, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x1000049c, 16) , (unique, 0x100004ac, 8) , (const, 0x0, 4) , (register, 0x88, 4), (unique, 0x100004ac, 8) CAST (unique, 0x100002ec, 8), (unique, 0x1000049c, 16) CAST (unique, 0x100001c9, 16), (unique, 0x100002ec, 8) PTRSUB (const, 0x0, 8) , (const, 0x5, 8), (unique, 0x100001c9, 16) INT_ADD (unique, 0x100003f0, 16) , (unique, 0x100001d9, 9), (unique, 0x100003f0, 16) INT_LEFT (unique, 0x100003e0, 16) , (const, 0x48, 16), (unique, 0x100003e0, 16) INT_SEXT (const, 0x1, 7), (unique, 0x100001d9, 9) INT_ADD (unique, 0x100003d7, 9) , (const, 0x190, 8), (unique, 0x100003d7, 9) INT_LEFT (unique, 0x100003ce, 9) , (const, 0x40, 9), (unique, 0x100003ce, 9) INT_SEXT (const, 0x90, 1), (register, 0x88, 4) INT_SUB (unique, 0x1000026b, 4) , (const, 0x6c, 4), (unique, 0x1000026b, 4) SUBPIECE (register, 0x20, 8) , (const, 0x0, 4)]
[(unique, 0x100002dc, 8) INT_ADD (unique, 0x10000418, 8) , (stack, 0xffffffffffffffa0, 4), (unique, 0x10000418, 8) INT_LEFT (unique, 0x10000410, 8) , (const, 0x20, 8), (unique, 0x10000410, 8) INT_SEXT (unique, 0x100004b4, 4), (unique, 0x100004b4, 4) CAST (stack, 0xffffffffffffffa4, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x6d, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x6d, 4)]
[(unique, 0x100002c4, 8) INT_ADD (unique, 0x10000408, 8) , (stack, 0xffffffffffffff98, 4), (unique, 0x10000408, 8) INT_LEFT (unique, 0x10000400, 8) , (const, 0x20, 8), (unique, 0x10000400, 8) INT_SEXT (unique, 0x100004b8, 4), (unique, 0x100004b8, 4) CAST (stack, 0xffffffffffffff9c, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x6d, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x6d, 4)]
[(unique, 0x1000038d, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000395, 2) MULTIEQUAL (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2)]
[(unique, 0x10000397, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(unique, 0x1000039b, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100003a3, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100003ab, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100003b3, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x100003bc, 8) MULTIEQUAL (unique, 0x100002cc, 8) , (unique, 0x100002c4, 8)]
[(unique, 0x100003c4, 8) MULTIEQUAL (unique, 0x100002e4, 8) , (unique, 0x100002dc, 8)]
[(unique, 0x100003bb, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x259405, 1) , (unique, 0x10000384, 1), (unique, 0x10000384, 1) INT_EQUAL (unique, 0x10000385, 8) , (const, 0x0, 8), (unique, 0x10000385, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000273, 1) MULTIEQUAL (unique, 0x100003bb, 1) , (unique, 0x10000275, 1)]
[(register, 0x0, 8) CALL (ram, 0x259750, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xac, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x89, 4), (register, 0x110, 8) MULTIEQUAL (unique, 0x1000038d, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0xac, 4), (stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x89, 4), (stack, 0xffffffffffffff92, 2) MULTIEQUAL (unique, 0x10000395, 2) , (stack, 0xffffffffffffff92, 2)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xac, 4), (stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x89, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0x10000397, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (register, 0x0, 8) , (const, 0xac, 4), (register, 0x0, 8) INT_ZEXT (register, 0x8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x89, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100003ab, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x89, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x100003b3, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffa4, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000046c, 8) , (const, 0xac, 4), (unique, 0x1000046c, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffa0, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000046c, 8) , (const, 0xac, 4), (unique, 0x1000046c, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000464, 8) , (const, 0xac, 4), (unique, 0x10000464, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000464, 8) , (const, 0xac, 4), (unique, 0x10000464, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x259568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0x3, 8) , (unique, 0x100002f4, 8) , (unique, 0x100004bc, 8) , (unique, 0x100002fc, 8) , (unique, 0x100004c4, 8) , (unique, 0x100004cc, 16), (unique, 0x100004cc, 16) CAST (unique, 0x100001e2, 16), (unique, 0x100004c4, 8) CAST (unique, 0x3800, 8), (unique, 0x100004bc, 8) CAST (unique, 0x3800, 8), (unique, 0x100002fc, 8) PTRSUB (const, 0x0, 8) , (const, 0x25cac0, 8), (unique, 0x100002f4, 8) PTRSUB (const, 0x0, 8) , (const, 0x24cdc0, 8), (unique, 0x100001e2, 16) INT_ZEXT (unique, 0x100001f2, 9), (unique, 0x100001f2, 9) INT_ZEXT (const, 0x3c, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000324, 8), (unique, 0x10000324, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff92, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x18, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000385, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x259486, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff92, 2) , (const, 0x0, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000374, 8) , (const, 0xf, 4), (unique, 0x10000374, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x259486, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000334, 8) , (const, 0xe, 4), (unique, 0x10000334, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc7, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0x3800, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x18, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa4, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffffa0, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xc7, 4)]
[(stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xc7, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0xd0, 4), (stack, 0xffffffffffffff92, 2) MULTIEQUAL (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xd0, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xd0, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd0, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd0, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd0, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x18, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa4, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000028c, 8) , (const, 0xd0, 4), (unique, 0x1000028c, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa0, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000028c, 8) , (const, 0xd0, 4), (unique, 0x1000028c, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000027c, 8) , (const, 0xd0, 4), (unique, 0x1000027c, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000027c, 8) , (const, 0xd0, 4), (unique, 0x1000027c, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  CBRANCH (ram, 0x2594c8, 1) , (unique, 0x10000277, 1), (unique, 0x10000277, 1) BOOL_NEGATE (unique, 0x10000273, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x11e, 4), (stack, 0xffffffffffffff92, 2) MULTIEQUAL (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x11e, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11e, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x2108c0, 8) , (stack, 0xffffffffffffff94, 4), (stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffffa4, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002ac, 8) , (const, 0x11e, 4), (unique, 0x100002ac, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x100002b4, 8)]
[(stack, 0xffffffffffffffa0, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002ac, 8) , (const, 0x11e, 4), (unique, 0x100002ac, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x100002b4, 8)]
[(stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000029c, 8) , (const, 0x11e, 4), (unique, 0x1000029c, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (unique, 0x100002a4, 8)]
[(stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000029c, 8) , (const, 0x11e, 4), (unique, 0x1000029c, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (unique, 0x100002a4, 8)]
[ ---  BRANCH (ram, 0x259495, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100003ab, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100003a3, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000039b, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100002d4, 8) MULTIEQUAL (unique, 0x100003c4, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100002bc, 8) MULTIEQUAL (unique, 0x100003bc, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (unique, 0x10000397, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffff92, 2) MULTIEQUAL (unique, 0x10000395, 2) , (stack, 0xffffffffffffff92, 2) , (stack, 0xffffffffffffff92, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x2595ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004dc, 8), (unique, 0x100004dc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x1000038d, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x100003b3, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff92, 2) INDIRECT (stack, 0xffffffffffffff92, 2) , (const, 0x115, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x115, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(stack, 0xffffffffffffffa4, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002d4, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffa0, 4) SUBPIECE (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100002d4, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffff9c, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100002bc, 8) , (const, 0x115, 4)]
[(stack, 0xffffffffffffff98, 4) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100002bc, 8) , (const, 0x115, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 2), (register, 0x0, 2) COPY (stack, 0xffffffffffffff92, 2)]
