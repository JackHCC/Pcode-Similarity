[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1465a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 2) , (const, 0x400, 2), (register, 0x0, 2) INT_AND (register, 0x1090, 2) , (const, 0xc00, 2)]
[(register, 0xa8, 4) COPY (const, 0x400, 4)]
[ ---  BRANCH (ram, 0x14639d, 1)]
[ ---  CBRANCH (ram, 0x146450, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 2) , (const, 0x401, 2)]
[ ---  CBRANCH (ram, 0x1467d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 2) , (const, 0x0, 2)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x14639d, 1)]
[ ---  CBRANCH (ram, 0x1463e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 2) , (const, 0x800, 2)]
[ ---  CBRANCH (ram, 0x1467d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 2) , (const, 0xc00, 2)]
[(register, 0xa8, 4) COPY (const, 0xc00, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x1463ec, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x10000263, 8) , (const, 0xffffffffffffff82, 8), (unique, 0x10000263, 8) CAST (register, 0x30, 8)]
[(register, 0xa8, 4) COPY (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x1463a3, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (const, 0xffffffffffffff81, 8) , (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) CAST (register, 0x30, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x1466a8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000273, 8) , (const, 0x81, 8), (unique, 0x10000273, 8) CAST (register, 0x30, 8)]
[(register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (register, 0x8, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x80, 1) , (const, 0x3f, 1)]
[(register, 0x38, 1) INT_AND (unique, 0x10000229, 1) , (const, 0x1, 1), (unique, 0x10000229, 1) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x146525, 1)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x146468, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x1000027b, 8) , (const, 0xffffffffffffff6a, 8), (unique, 0x1000027b, 8) CAST (register, 0x30, 8)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x84, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x84, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x84, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x84, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x84, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x84, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000283, 8) , (const, 0x22, 4), (unique, 0x10000283, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1465b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x1200, 4) FLOAT_MULT (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[ ---  BRANCH (ram, 0x14641c, 1)]
[(register, 0x1200, 4) FLOAT_MULT (ram, 0x2bcad8, 4) , (ram, 0x2bcad4, 4)]
[ ---  BRANCH (ram, 0x14641c, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x88, 4) INT_OR (register, 0x88, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x80, 1) , (const, 0x3f, 1)]
[(register, 0xb0, 1) INT_OR (unique, 0x100001d9, 1) , (register, 0x206, 1), (unique, 0x100001d9, 1) INT_AND (unique, 0x100001db, 1) , (const, 0x1, 1), (unique, 0x100001db, 1) SUBPIECE (register, 0x88, 4) , (const, 0x0, 4), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x80, 1) , (const, 0x3f, 1)]
[ ---  CBRANCH (ram, 0x1467e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x18, 8), (register, 0x30, 8) PTRADD (unique, 0x10000240, 8) , (unique, 0x100000ad, 8) , (const, 0x1, 8), (unique, 0x10000240, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff82, 8), (unique, 0x100000ad, 8) INT_2COMP (register, 0x30, 8)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x52a, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x52a, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x52a, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x52a, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x52a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x52a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 1) COPY (const, 0x17, 1)]
[(register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x17, 4)]
[ ---  BRANCH (ram, 0x1464f6, 1)]
[(unique, 0x10000203, 1) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1465c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_AND (unique, 0x1000028b, 8) , (const, 0xffffffff, 8), (unique, 0x1000028b, 8) CAST (register, 0x30, 8)]
[(unique, 0x100001e1, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_RIGHT (register, 0x8, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x80, 1) , (const, 0x3f, 1)]
[ ---  CBRANCH (ram, 0x146808, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x400, 4)]
[ ---  CBRANCH (ram, 0x146740, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (const, 0x400, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x146890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x1467d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0xc00, 4)]
[(register, 0x8, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1464b9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x138, 4)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x138, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x138, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x138, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x138, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x138, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x138, 4)]
[(register, 0x1200, 4) CAST (unique, 0x10000293, 4), (unique, 0x10000293, 4) CALL (ram, 0x153340, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (const, 0x1, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 1) INT_AND (unique, 0x1000022f, 1) , (const, 0x1, 1), (unique, 0x1000022f, 1) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x100001f0, 1) , (const, 0x3f, 1), (unique, 0x100001f0, 1) INT_SUB (const, 0x81, 1) , (unique, 0x10000203, 1)]
[ ---  CBRANCH (ram, 0x1467d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x81, 1) , (unique, 0x10000203, 1)]
[ ---  CBRANCH (ram, 0x14683c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c9, 8) , (const, 0x0, 8), (unique, 0x100001c9, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x14677b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000131, 8) , (const, 0x0, 8), (unique, 0x10000131, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x14683c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x146899, 1) , (unique, 0x100001f2, 1), (unique, 0x100001f2, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x81, 1) , (unique, 0x10000203, 1)]
[ ---  BRANCH (ram, 0x14683c, 1)]
[(register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x1, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x81, 1) , (unique, 0x10000203, 1)]
[ ---  CBRANCH (ram, 0x14677b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001e1, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x14677b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 1) , (const, 0x0, 1)]
[(register, 0x98, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1) , (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x404, 4)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x404, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x404, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x404, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x404, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x404, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x404, 4)]
[(register, 0x1200, 4) CAST (unique, 0x10000297, 4), (unique, 0x10000297, 4) CALL (ram, 0x153340, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(register, 0x38, 1) INT_AND (unique, 0x1000022d, 1) , (const, 0x1, 1), (unique, 0x1000022d, 1) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1464f6, 1)]
[(register, 0x98, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1) , (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x489, 4)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x489, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x489, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x489, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x489, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x489, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x489, 4)]
[(register, 0x1200, 4) CAST (unique, 0x1000029b, 4), (unique, 0x1000029b, 4) CALL (ram, 0x153340, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(register, 0x38, 1) INT_AND (unique, 0x1000022b, 1) , (const, 0x1, 1), (unique, 0x1000022b, 1) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x14651e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000141, 8) , (const, 0x0, 8), (unique, 0x10000141, 8) INT_AND (unique, 0x3100, 8) , (const, 0x1000000, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x98, 1) MULTIEQUAL (unique, 0x100001f0, 1) , (register, 0x98, 1) , (register, 0x98, 1) , (register, 0x98, 1)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 1) SUBPIECE (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x146504, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x146710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x146504, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x98, 1) , (const, 0x3f, 1)]
[(register, 0x1200, 4) FLOAT_MULT (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x1a9, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x1a9, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x1a9, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x1a9, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x1a9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000029f, 8) , (const, 0x22, 4), (unique, 0x1000029f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 8) COPY (const, 0xffffffffffffff81, 8)]
[ ---  BRANCH (ram, 0x146543, 1)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x98, 1) MULTIEQUAL (register, 0x98, 1) , (register, 0x98, 1)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) COPY (const, 0xffffffffffffff81, 8)]
[(unique, 0x1000024d, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000257, 4) COPY (register, 0x88, 4)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x98, 1) MULTIEQUAL (register, 0x98, 1) , (register, 0x80, 1)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0x8, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x30, 8)]
[(register, 0x80, 1) SUBPIECE (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(unique, 0x100001ee, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x14654a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000257, 4) , (register, 0x88, 4)]
[(register, 0x0, 8) INT_AND (register, 0x0, 8) , (register, 0x90, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x98, 1) , (const, 0x3f, 1)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(unique, 0x100001ec, 1) MULTIEQUAL (unique, 0x100001ee, 1) , (register, 0x206, 1)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x146680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x400, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x146630, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (register, 0xa8, 4) , (const, 0x401, 4)]
[ ---  CBRANCH (ram, 0x1467d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(unique, 0x10000255, 1) COPY (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x146577, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x146698, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x800, 4)]
[(unique, 0x10000256, 1) COPY (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x146577, 1) , (unique, 0x10000248, 1), (unique, 0x10000248, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x146577, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x0, 1), (register, 0x38, 1) INT_OR (unique, 0x100001ec, 1) , (unique, 0x100001ef, 1), (unique, 0x100001ef, 1) MULTIEQUAL (unique, 0x10000255, 1) , (unique, 0x10000256, 1)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x276, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x276, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x276, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x276, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x276, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x276, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1466d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f5, 8) , (const, 0x0, 8), (unique, 0x100000f5, 8) INT_AND (register, 0x30, 8) , (const, 0x1000000, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ae, 4)]
[(register, 0x1200, 4) CAST (unique, 0x100002a7, 4), (unique, 0x100002a7, 4) CALL (ram, 0x153340, 8) , (register, 0x1200, 4) , (register, 0x38, 8) , (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x2b3, 4), (ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x2ae, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x2b3, 4), (ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x2ae, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x2b3, 4), (ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x2ae, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x2b3, 4), (ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x2ae, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x2b3, 4), (ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x2ae, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ae, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x800000, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1463f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x81, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x2d8, 4), (ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x2d8, 4), (ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x2d8, 4), (ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x2d8, 4), (ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x2d8, 4), (ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ab, 8) , (const, 0x22, 4), (unique, 0x100002ab, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x146440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x1200, 4) FLOAT_MULT (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[ ---  BRANCH (ram, 0x14641c, 1)]
[(register, 0x1200, 4) FLOAT_MULT (ram, 0x2bcadc, 4) , (ram, 0x2bcad0, 4)]
[ ---  CBRANCH (ram, 0x146577, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0xffffffffffffff81, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x7f, 4), (register, 0x30, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000105, 8) , (const, 0x0, 8), (unique, 0x10000105, 8) INT_AND (register, 0x30, 8) , (const, 0x800000, 8)]
[ ---  BRANCH (ram, 0x146579, 1)]
[ ---  CBRANCH (ram, 0x1467d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0xc00, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x2bcabc, 4) COPY (ram, 0x2bcabc, 4), (ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x23d, 4), (ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(ram, 0x2bcad0, 4) COPY (ram, 0x2bcad0, 4), (ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x23d, 4), (ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcad4, 4) COPY (ram, 0x2bcad4, 4), (ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x23d, 4), (ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad8, 4) COPY (ram, 0x2bcad8, 4), (ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x23d, 4), (ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcadc, 4) COPY (ram, 0x2bcadc, 4), (ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x23d, 4), (ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x146618, 1) , (unique, 0x100001ec, 1)]
[ ---  CBRANCH (ram, 0x146618, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 1) , (const, 0x0, 1)]
[(register, 0x1200, 4) FLOAT_ADD (ram, 0x2bcad4, 4) , (ram, 0x2bcabc, 4)]
[ ---  BRANCH (ram, 0x14658b, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x233, 4)]
[(ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0x233, 4)]
[(ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0x233, 4)]
[(ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0x233, 4)]
[(ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0x233, 4)]
[(ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0x233, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x233, 4)]
[(register, 0x1200, 4) CAST (unique, 0x100002b3, 4), (unique, 0x100002b3, 4) CALL (ram, 0x154b40, 8) , (register, 0x1200, 4) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4)]
[ ---  BRANCH (ram, 0x14641c, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x2bcadc, 4) MULTIEQUAL (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4) , (ram, 0x2bcadc, 4)]
[(ram, 0x2bcad8, 4) MULTIEQUAL (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4) , (ram, 0x2bcad8, 4)]
[(ram, 0x2bcad4, 4) MULTIEQUAL (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4) , (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad0, 4) MULTIEQUAL (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4) , (ram, 0x2bcad0, 4)]
[(ram, 0x2bcabc, 4) MULTIEQUAL (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4) , (ram, 0x2bcabc, 4)]
[(register, 0x1200, 4) MULTIEQUAL (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4) , (register, 0x1200, 4)]
[ ---  CBRANCH (ram, 0x1468b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALL (ram, 0x234c80, 8) , (register, 0x1200, 4)]
[(ram, 0x2bcabc, 4) COPY (ram, 0x2bcabc, 4), (ram, 0x2bcabc, 4) INDIRECT (ram, 0x2bcabc, 4) , (const, 0xb6, 4)]
[(ram, 0x2bcad0, 4) COPY (ram, 0x2bcad0, 4), (ram, 0x2bcad0, 4) INDIRECT (ram, 0x2bcad0, 4) , (const, 0xb6, 4)]
[(ram, 0x2bcad4, 4) COPY (ram, 0x2bcad4, 4), (ram, 0x2bcad4, 4) INDIRECT (ram, 0x2bcad4, 4) , (const, 0xb6, 4)]
[(ram, 0x2bcad8, 4) COPY (ram, 0x2bcad8, 4), (ram, 0x2bcad8, 4) INDIRECT (ram, 0x2bcad8, 4) , (const, 0xb6, 4)]
[(ram, 0x2bcadc, 4) COPY (ram, 0x2bcadc, 4), (ram, 0x2bcadc, 4) INDIRECT (ram, 0x2bcadc, 4) , (const, 0xb6, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x2bcabc, 4) COPY (ram, 0x2bcabc, 4)]
[(ram, 0x2bcad0, 4) COPY (ram, 0x2bcad0, 4)]
[(ram, 0x2bcad4, 4) COPY (ram, 0x2bcad4, 4)]
[(ram, 0x2bcad8, 4) COPY (ram, 0x2bcad8, 4)]
[(ram, 0x2bcadc, 4) COPY (ram, 0x2bcadc, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8)]
