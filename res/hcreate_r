[ ---  CBRANCH (ram, 0x201cde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x100, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ca, 8) , (const, 0x16, 4), (unique, 0x100000ca, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x201c32, 1)]
[ ---  CBRANCH (ram, 0x201c38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000aa, 8), (unique, 0x100000aa, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x201cf3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x3, 8)]
[(register, 0x80, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x201c92, 1)]
[(register, 0x38, 8) INT_OR (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x201cc9, 1) , (unique, 0x100000a9, 1), (unique, 0x100000a9, 1) INT_LESS (unique, 0x100000a1, 8) , (const, 0xfffffffe, 8), (unique, 0x100000a1, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x38, 4) SUBPIECE (unique, 0x100000a1, 8) , (const, 0x0, 4)]
[(register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_AND (unique, 0x100000a1, 8) , (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x201c92, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100000a1, 8) , (const, 0x9, 8)]
[ ---  CBRANCH (ram, 0x201cc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000009d, 4) , (register, 0x38, 4), (unique, 0x1000009d, 4) INT_MULT (unique, 0x10000051, 4) , (const, 0x3, 4), (unique, 0x10000051, 4) SUBPIECE (unique, 0x10000041, 8) , (const, 0x0, 4), (unique, 0x10000041, 8) INT_DIV (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_AND (unique, 0x100000a1, 8) , (const, 0xffffffff, 8)]
[(register, 0x8, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x201c84, 1)]
[(register, 0x10, 4) SUBPIECE (unique, 0x2e680, 8) , (const, 0x0, 4), (unique, 0x2e680, 8) INT_REM (register, 0x80, 8) , (unique, 0x2e180, 8), (unique, 0x2e180, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x201c80, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000091, 4) , (register, 0x8, 4), (unique, 0x10000091, 4) SUBPIECE (unique, 0x2e500, 8) , (const, 0x0, 4), (unique, 0x2e500, 8) INT_DIV (register, 0x80, 8) , (unique, 0x2e180, 8), (unique, 0x2e180, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 4), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0xc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000c2, 8) , (register, 0x0, 8), (unique, 0x100000c2, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) CALL (ram, 0x11f870, 8) , (register, 0x38, 8) , (const, 0x18, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb9, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb5, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000da, 4), (unique, 0x100000da, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) CALL (ram, 0x11f870, 8) , (register, 0x38, 8) , (const, 0x18, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x201cc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) INT_ADD (unique, 0x100000a1, 8) , (const, 0x2, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000de, 8) , (const, 0xc, 4), (unique, 0x100000de, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x201c32, 1)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
