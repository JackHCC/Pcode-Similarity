[ ---  CBRANCH (ram, 0x21cf20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000c7, 8) , (const, 0x16, 4), (unique, 0x100000c7, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21ce68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000097, 8), (unique, 0x10000097, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x100000b7, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x21ce7b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x2, 8) , (register, 0x38, 8)]
[(unique, 0x100000bf, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21cf09, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (const, 0xfffffffe, 8), (register, 0x80, 8) INT_OR (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100000b7, 8) , (unique, 0x100000bf, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8), (register, 0x0, 8) INT_SUB (const, 0xfffffffd, 8) , (register, 0x80, 8)]
[(register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) INT_AND (register, 0x80, 8) , (const, 0xffffffff, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x21ced1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x80, 4) , (const, 0x9, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x21cf00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000093, 4) , (register, 0x80, 4), (unique, 0x10000093, 4) INT_MULT (unique, 0x10000045, 4) , (const, 0x3, 4), (unique, 0x10000045, 4) SUBPIECE (unique, 0x10000035, 8) , (const, 0x0, 4), (unique, 0x10000035, 8) INT_DIV (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_AND (register, 0x80, 8) , (const, 0xffffffff, 8)]
[(register, 0x8, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x21cec4, 1)]
[(register, 0x10, 4) SUBPIECE (unique, 0x2e680, 8) , (const, 0x0, 4), (unique, 0x2e680, 8) INT_REM (register, 0x38, 8) , (unique, 0x2e180, 8), (unique, 0x2e180, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x21cec0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000085, 4) , (register, 0x8, 4), (unique, 0x10000085, 4) SUBPIECE (unique, 0x2e500, 8) , (const, 0x0, 4), (unique, 0x2e500, 8) INT_DIV (register, 0x38, 8) , (unique, 0x2e180, 8), (unique, 0x2e180, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x21cf00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21cea0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (unique, 0x3a00, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000cf, 8) , (const, 0xc, 4), (unique, 0x100000cf, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 4), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0xc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000af, 8) , (register, 0x0, 8), (unique, 0x100000af, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) CALL (ram, 0x1211e0, 8) , (register, 0x38, 8) , (const, 0x18, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xca, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000df, 4), (unique, 0x100000df, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) CALL (ram, 0x1211e0, 8) , (register, 0x38, 8) , (const, 0x18, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
