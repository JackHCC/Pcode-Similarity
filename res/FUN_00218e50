[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0x100002c3, 8) COPY (ram, 0x4ee228, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x21, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x21, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x21, 4), (ram, 0x4ee180, 8) MULTIEQUAL (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x21, 4), (ram, 0x4ee188, 8) MULTIEQUAL (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x21, 4), (ram, 0x4ee190, 8) MULTIEQUAL (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x21, 4), (ram, 0x4ee198, 4) MULTIEQUAL (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x21, 4), (ram, 0x4ee1a0, 8) MULTIEQUAL (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x21, 4), (ram, 0x4ee1a8, 8) MULTIEQUAL (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x21, 4), (ram, 0x4ee1c0, 1) MULTIEQUAL (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1)]
[(ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x21, 4), (ram, 0x4ee228, 8) MULTIEQUAL (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x21, 4), (ram, 0x4ee230, 1) MULTIEQUAL (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1)]
[ ---  CBRANCH (ram, 0x218f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a590, 8) , (unique, 0x100001b8, 8) , (const, 0x64, 4) , (register, 0x10, 8), (unique, 0x100001b8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee1c0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002c3, 8) , (unique, 0x100002cb, 8) , (unique, 0x10000396, 8) , (unique, 0x10000396, 8) , (unique, 0x100002e3, 8) , (unique, 0x100002e3, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4ee180, 8) COPY (ram, 0x4ee180, 8)]
[(ram, 0x4ee188, 8) COPY (ram, 0x4ee188, 8)]
[(ram, 0x4ee190, 8) COPY (ram, 0x4ee190, 8)]
[(ram, 0x4ee198, 4) COPY (ram, 0x4ee198, 4)]
[(ram, 0x4ee1a0, 8) COPY (ram, 0x4ee1a0, 8)]
[(ram, 0x4ee1a8, 8) COPY (ram, 0x4ee1a8, 8)]
[(ram, 0x4ee1c0, 1) COPY (ram, 0x4ee1c0, 1)]
[(ram, 0x4ee228, 8) COPY (ram, 0x4ee228, 8)]
[(ram, 0x4ee230, 1) COPY (ram, 0x4ee230, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x30, 4)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x30, 4)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x30, 4)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x30, 4)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x30, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x30, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x30, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x30, 4)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x30, 4)]
[(unique, 0x10000293, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x30, 4)]
[(unique, 0x10000396, 8) COPY (ram, 0x4ee228, 8), (ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x218ee8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x100001c0, 8) , (const, 0xa, 4), (unique, 0x100001c0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee1c0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ee228, 8) , (const, 0x10, 8)]
[(unique, 0x1000029b, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ee228, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x218f14, 1)]
[(ram, 0x4ee230, 1) MULTIEQUAL (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1)]
[(ram, 0x4ee228, 8) MULTIEQUAL (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8)]
[(ram, 0x4ee1c0, 1) MULTIEQUAL (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1)]
[(ram, 0x4ee1a8, 8) MULTIEQUAL (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8)]
[(ram, 0x4ee1a0, 8) MULTIEQUAL (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8)]
[(ram, 0x4ee198, 4) MULTIEQUAL (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4)]
[(ram, 0x4ee190, 8) MULTIEQUAL (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8)]
[(ram, 0x4ee188, 8) MULTIEQUAL (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8)]
[(ram, 0x4ee180, 8) MULTIEQUAL (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000396, 8) , (unique, 0x100002e3, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x218f00, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000029b, 8) , (unique, 0x100002a3, 8) , (unique, 0x100002ab, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x292, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x292, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x292, 4)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x292, 4)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x292, 4)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x292, 4)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x292, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x292, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x292, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x292, 4)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x292, 4)]
[(unique, 0x100002e3, 8) COPY (ram, 0x4ee228, 8), (ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x292, 4)]
[ ---  CBRANCH (ram, 0x218eda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x218eda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x100002a3, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ee228, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ee228, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x218f11, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x2b4, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x2b4, 4)]
[(ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x2b4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100003a6, 8) , (const, 0x8, 8), (unique, 0x100003a6, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100002ab, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100002cb, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x218e70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee1c0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003b6, 8), (unique, 0x100003b6, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (ram, 0x4ee1c0, 1)]
[(unique, 0x10000393, 1) COPY (ram, 0x4ee1c0, 1)]
[(unique, 0x1000016e, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000177, 1) MULTIEQUAL (unique, 0x10000393, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x218ed2, 1) , (unique, 0x10000176, 1), (unique, 0x10000176, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003be, 8), (unique, 0x100003be, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x1000016e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x218eda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000177, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x218f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000177, 1) , (const, 0x23, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x87, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x87, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x87, 4)]
[(ram, 0x4ee180, 8) INDIRECT (unique, 0x10000373, 8) , (const, 0x87, 4), (unique, 0x10000373, 8) COPY (unique, 0x1000016e, 8)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x87, 4)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x87, 4)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x87, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x87, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x87, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x87, 4)]
[(ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x87, 4)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x87, 4), (ram, 0x4ee230, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x21911b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) CALL (ram, 0x218d50, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x264, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x264, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x264, 4)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x264, 4)]
[(ram, 0x4ee188, 8) INDIRECT (unique, 0x1000037b, 8) , (const, 0x264, 4), (unique, 0x1000037b, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x264, 4)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x264, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x264, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x264, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x264, 4)]
[(ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x264, 4)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x264, 4)]
[ ---  CBRANCH (ram, 0x219142, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) CALL (ram, 0x218d50, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27a, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x27a, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x27a, 4)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x27a, 4)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x27a, 4)]
[(ram, 0x4ee190, 8) INDIRECT (unique, 0x10000383, 8) , (const, 0x27a, 4), (unique, 0x10000383, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x27a, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x27a, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x27a, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x27a, 4)]
[(ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x27a, 4)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x27a, 4)]
[(register, 0x0, 8) CAST (unique, 0x100003d6, 8), (unique, 0x100003d6, 8) CALL (ram, 0x218d50, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x218f94, 1)]
[(ram, 0x4ee190, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x218f94, 1)]
[(ram, 0x4ee190, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ee188, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ee230, 1) MULTIEQUAL (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1)]
[(ram, 0x4ee228, 8) MULTIEQUAL (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8)]
[(ram, 0x4ee1c0, 1) MULTIEQUAL (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1)]
[(ram, 0x4ee1a8, 8) MULTIEQUAL (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8)]
[(ram, 0x4ee190, 8) MULTIEQUAL (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8)]
[(ram, 0x4ee188, 8) MULTIEQUAL (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8)]
[(ram, 0x4ee180, 8) MULTIEQUAL (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ee198, 4) COPY (const, 0x0, 4)]
[(ram, 0x4ee1a0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000023f, 4) MULTIEQUAL (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4)]
[(unique, 0x10000243, 8) MULTIEQUAL (ram, 0x4ee1a0, 8) , (ram, 0x4ee1a0, 8)]
[(unique, 0x1000024d, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(unique, 0x10000255, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000025d, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x1000025e, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0x10000266, 8) MULTIEQUAL (ram, 0x4ee180, 8) , (ram, 0x4ee180, 8)]
[(unique, 0x1000026e, 8) MULTIEQUAL (ram, 0x4ee188, 8) , (ram, 0x4ee188, 8)]
[(unique, 0x10000276, 8) MULTIEQUAL (ram, 0x4ee190, 8) , (ram, 0x4ee190, 8)]
[(unique, 0x1000027e, 8) MULTIEQUAL (ram, 0x4ee1a8, 8) , (ram, 0x4ee1a8, 8)]
[(unique, 0x10000286, 1) MULTIEQUAL (ram, 0x4ee1c0, 1) , (ram, 0x4ee1c0, 1)]
[(unique, 0x10000287, 8) MULTIEQUAL (ram, 0x4ee228, 8) , (ram, 0x4ee228, 8)]
[(unique, 0x10000395, 1) COPY (unique, 0x1000028f, 1), (unique, 0x1000028f, 1) MULTIEQUAL (ram, 0x4ee230, 1) , (ram, 0x4ee230, 1)]
[ ---  CBRANCH (ram, 0x2190a6, 1) , (unique, 0x1000024c, 1), (unique, 0x1000024c, 1) INT_EQUAL (unique, 0x1000024b, 1) , (const, 0x0, 1), (unique, 0x1000024b, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) COPY (const, 0x3, 8)]
[(unique, 0x10000323, 8) COPY (unique, 0x1000024d, 8)]
[(unique, 0x10000363, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b5891, 8)]
[(register, 0x206, 1) MULTIEQUAL (unique, 0x1000024c, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000363, 8) , (unique, 0x1000036b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000323, 8) , (unique, 0x1000032b, 8)]
[ ---  CBRANCH (ram, 0x219013, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000032b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001f8, 8) , (const, 0x1, 8), (unique, 0x100001f8, 8) INT_ADD (unique, 0x100000d4, 8) , (const, 0x1, 8), (unique, 0x100000d4, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[(unique, 0x1000036b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001f0, 8) , (const, 0x1, 8), (unique, 0x100001f0, 8) INT_ADD (unique, 0x100000cc, 8) , (const, 0x1, 8), (unique, 0x100000cc, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[ ---  CBRANCH (ram, 0x219011, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x218fd8, 1) , (unique, 0x1000016a, 1), (unique, 0x1000016a, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x219015, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003de, 8), (unique, 0x100003de, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000293, 8) , (unique, 0x10000255, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[(unique, 0x10000313, 8) COPY (unique, 0x1000024d, 8)]
[(unique, 0x10000353, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b3b69, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000353, 8) , (unique, 0x1000035b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000313, 8) , (unique, 0x1000031b, 8)]
[ ---  CBRANCH (ram, 0x219022, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000031b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000208, 8) , (const, 0x1, 8), (unique, 0x10000208, 8) INT_ADD (unique, 0x100000ed, 8) , (const, 0x1, 8), (unique, 0x100000ed, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[(unique, 0x1000035b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000200, 8) , (const, 0x1, 8), (unique, 0x10000200, 8) INT_ADD (unique, 0x100000e5, 8) , (const, 0x1, 8), (unique, 0x100000e5, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[ ---  CBRANCH (ram, 0x219020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x219040, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x219040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f6, 8), (unique, 0x100003f6, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000293, 8) , (unique, 0x10000255, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 8) COPY (const, 0x6, 8)]
[(unique, 0x10000303, 8) COPY (unique, 0x1000024d, 8)]
[(unique, 0x10000343, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b5895, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000343, 8) , (unique, 0x1000034b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000303, 8) , (unique, 0x1000030b, 8)]
[ ---  CBRANCH (ram, 0x21904d, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000030b, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000218, 8) , (const, 0x1, 8), (unique, 0x10000218, 8) INT_ADD (unique, 0x10000106, 8) , (const, 0x1, 8), (unique, 0x10000106, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[(unique, 0x1000034b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000210, 8) , (const, 0x1, 8), (unique, 0x10000210, 8) INT_ADD (unique, 0x100000fe, 8) , (const, 0x1, 8), (unique, 0x100000fe, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[ ---  CBRANCH (ram, 0x21904b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x219070, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x219070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000406, 8), (unique, 0x10000406, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003fe, 8), (unique, 0x100003fe, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000293, 8) , (unique, 0x10000255, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 8) COPY (const, 0x6, 8)]
[(unique, 0x100002f3, 8) COPY (unique, 0x1000024d, 8)]
[(unique, 0x10000333, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b589c, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000333, 8) , (unique, 0x1000033b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8)]
[ ---  CBRANCH (ram, 0x21907d, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100002fb, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000228, 8) , (const, 0x1, 8), (unique, 0x10000228, 8) INT_ADD (unique, 0x1000011f, 8) , (const, 0x1, 8), (unique, 0x1000011f, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[(unique, 0x1000033b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000220, 8) , (const, 0x1, 8), (unique, 0x10000220, 8) INT_ADD (unique, 0x10000117, 8) , (const, 0x1, 8), (unique, 0x10000117, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (unique, 0x1000025d, 1)]
[ ---  CBRANCH (ram, 0x21907b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2190f8, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x2190f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024d, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[(unique, 0x10000394, 1) COPY (unique, 0x1000024b, 1)]
[ ---  CBRANCH (ram, 0x219108, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000028f, 1) , (const, 0x23, 1)]
[ ---  CBRANCH (ram, 0x2190af, 1) , (unique, 0x10000178, 1), (unique, 0x10000178, 1) INT_EQUAL (unique, 0x100001b7, 1) , (const, 0x23, 1), (unique, 0x100001b7, 1) MULTIEQUAL (unique, 0x10000394, 1) , (unique, 0x10000395, 1)]
[ ---  CBRANCH (ram, 0x219108, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x1000024d, 8)]
[ ---  CBRANCH (ram, 0x219108, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[(unique, 0x1000038b, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2190c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0x18, 8)]
[(ram, 0x4ee1a8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (unique, 0x1000025e, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee180, 8) INDIRECT (unique, 0x10000266, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee188, 8) INDIRECT (unique, 0x1000026e, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee190, 8) INDIRECT (unique, 0x10000276, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee198, 4) INDIRECT (unique, 0x1000023f, 4) , (const, 0x13f, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (unique, 0x10000243, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x13f, 4), (ram, 0x4ee1a8, 8) MULTIEQUAL (unique, 0x1000038b, 8) , (ram, 0x4ee1a8, 8)]
[(ram, 0x4ee1c0, 1) INDIRECT (unique, 0x10000286, 1) , (const, 0x13f, 4)]
[(ram, 0x4ee228, 8) INDIRECT (unique, 0x10000287, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee230, 1) INDIRECT (unique, 0x1000028f, 1) , (const, 0x13f, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee180, 8)]
[ ---  CBRANCH (ram, 0x218f42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (register, 0x18, 8) , (const, 0xa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee180, 8) COPY (ram, 0x4ee180, 8), (ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee188, 8) COPY (ram, 0x4ee188, 8), (ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee190, 8) COPY (ram, 0x4ee190, 8), (ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee198, 4) COPY (ram, 0x4ee198, 4), (ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x14d, 4)]
[(ram, 0x4ee1a0, 8) COPY (ram, 0x4ee1a0, 8), (ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee1a8, 8) COPY (ram, 0x4ee1a8, 8), (ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee1c0, 1) COPY (ram, 0x4ee1c0, 1), (ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x14d, 4)]
[(ram, 0x4ee228, 8) COPY (ram, 0x4ee228, 8), (ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee230, 1) COPY (ram, 0x4ee230, 1), (ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x14d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4ee180, 8) COPY (ram, 0x4ee180, 8)]
[(ram, 0x4ee188, 8) COPY (ram, 0x4ee188, 8)]
[(ram, 0x4ee190, 8) COPY (ram, 0x4ee190, 8)]
[(ram, 0x4ee198, 4) COPY (ram, 0x4ee198, 4)]
[(ram, 0x4ee1a0, 8) COPY (ram, 0x4ee1a0, 8)]
[(ram, 0x4ee1a8, 8) COPY (ram, 0x4ee1a8, 8)]
[(ram, 0x4ee1c0, 1) COPY (ram, 0x4ee1c0, 1)]
[(ram, 0x4ee228, 8) COPY (ram, 0x4ee228, 8)]
[(ram, 0x4ee230, 1) COPY (ram, 0x4ee230, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000255, 8) , (const, 0x214, 4)]
[(register, 0x20a, 1) INDIRECT (unique, 0x1000025d, 1) , (const, 0x214, 4)]
[(ram, 0x4eae00, 8) INDIRECT (unique, 0x1000025e, 8) , (const, 0x214, 4)]
[(ram, 0x4ee180, 8) INDIRECT (unique, 0x10000266, 8) , (const, 0x214, 4)]
[(ram, 0x4ee188, 8) INDIRECT (unique, 0x1000026e, 8) , (const, 0x214, 4)]
[(ram, 0x4ee190, 8) INDIRECT (unique, 0x10000276, 8) , (const, 0x214, 4)]
[(ram, 0x4ee198, 4) INDIRECT (unique, 0x1000023f, 4) , (const, 0x214, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (unique, 0x10000243, 8) , (const, 0x214, 4)]
[(ram, 0x4ee1a8, 8) INDIRECT (unique, 0x1000027e, 8) , (const, 0x214, 4)]
[(ram, 0x4ee1c0, 1) INDIRECT (unique, 0x10000286, 1) , (const, 0x214, 4)]
[(ram, 0x4ee228, 8) INDIRECT (unique, 0x10000287, 8) , (const, 0x214, 4)]
[(ram, 0x4ee230, 1) INDIRECT (unique, 0x1000028f, 1) , (const, 0x214, 4)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (unique, 0x12600, 8) , (const, 0x1, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x1000024d, 8) , (const, 0x3d, 4)]
[ ---  BRANCH (ram, 0x218ff0, 1)]
[(ram, 0x4ee198, 4) INT_OR (unique, 0x1000023f, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x218ff0, 1)]
[(ram, 0x4ee198, 4) INT_OR (unique, 0x1000023f, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x218ff0, 1)]
[(ram, 0x4ee198, 4) INT_AND (unique, 0x1000023f, 4) , (const, 0xfffffffe, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x112, 4), (register, 0x110, 8) MULTIEQUAL (unique, 0x10000255, 8) , (unique, 0x10000255, 8) , (register, 0x110, 8) , (unique, 0x10000255, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x112, 4), (register, 0x20a, 1) MULTIEQUAL (unique, 0x1000025d, 1) , (unique, 0x1000025d, 1) , (register, 0x20a, 1) , (unique, 0x1000025d, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x112, 4), (ram, 0x4eae00, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (unique, 0x1000025e, 8) , (ram, 0x4eae00, 8) , (unique, 0x1000025e, 8)]
[(ram, 0x4ee180, 8) INDIRECT (ram, 0x4ee180, 8) , (const, 0x112, 4), (ram, 0x4ee180, 8) MULTIEQUAL (unique, 0x10000266, 8) , (unique, 0x10000266, 8) , (ram, 0x4ee180, 8) , (unique, 0x10000266, 8)]
[(ram, 0x4ee188, 8) INDIRECT (ram, 0x4ee188, 8) , (const, 0x112, 4), (ram, 0x4ee188, 8) MULTIEQUAL (unique, 0x1000026e, 8) , (unique, 0x1000026e, 8) , (ram, 0x4ee188, 8) , (unique, 0x1000026e, 8)]
[(ram, 0x4ee190, 8) INDIRECT (ram, 0x4ee190, 8) , (const, 0x112, 4), (ram, 0x4ee190, 8) MULTIEQUAL (unique, 0x10000276, 8) , (unique, 0x10000276, 8) , (ram, 0x4ee190, 8) , (unique, 0x10000276, 8)]
[(ram, 0x4ee198, 4) INDIRECT (ram, 0x4ee198, 4) , (const, 0x112, 4), (ram, 0x4ee198, 4) MULTIEQUAL (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4) , (ram, 0x4ee198, 4)]
[(ram, 0x4ee1a0, 8) INDIRECT (ram, 0x4ee1a0, 8) , (const, 0x112, 4), (ram, 0x4ee1a0, 8) MULTIEQUAL (unique, 0x10000243, 8) , (unique, 0x10000243, 8) , (register, 0x0, 8) , (unique, 0x10000243, 8)]
[(ram, 0x4ee1a8, 8) INDIRECT (ram, 0x4ee1a8, 8) , (const, 0x112, 4), (ram, 0x4ee1a8, 8) MULTIEQUAL (unique, 0x1000027e, 8) , (unique, 0x1000027e, 8) , (ram, 0x4ee1a8, 8) , (unique, 0x1000027e, 8)]
[(ram, 0x4ee1c0, 1) INDIRECT (ram, 0x4ee1c0, 1) , (const, 0x112, 4), (ram, 0x4ee1c0, 1) MULTIEQUAL (unique, 0x10000286, 1) , (unique, 0x10000286, 1) , (ram, 0x4ee1c0, 1) , (unique, 0x10000286, 1)]
[(ram, 0x4ee228, 8) INDIRECT (ram, 0x4ee228, 8) , (const, 0x112, 4), (ram, 0x4ee228, 8) MULTIEQUAL (unique, 0x10000287, 8) , (unique, 0x10000287, 8) , (ram, 0x4ee228, 8) , (unique, 0x10000287, 8)]
[(ram, 0x4ee230, 1) INDIRECT (ram, 0x4ee230, 1) , (const, 0x112, 4), (ram, 0x4ee230, 1) MULTIEQUAL (unique, 0x1000028f, 1) , (unique, 0x1000028f, 1) , (ram, 0x4ee230, 1) , (unique, 0x1000028f, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000040e, 8), (unique, 0x1000040e, 8) CALL (ram, 0x218d50, 8) , (unique, 0x1000024d, 8)]
