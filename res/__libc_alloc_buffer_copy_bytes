[ ---  CBRANCH (ram, 0x19d710, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x1000008a, 8) , (register, 0x8, 8), (unique, 0x1000008a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x30, 8) , (unique, 0x10000082, 8), (unique, 0x10000082, 8) CAST (register, 0x38, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19d6eb, 1)]
[(unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x10000092, 8), (unique, 0x10000092, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x19d6eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x10, 8) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) COPY (unique, 0x10000051, 16), (unique, 0x10000051, 16) INT_ADD (unique, 0x10000072, 16) , (stack, 0xffffffffffffffe8, 8), (unique, 0x10000072, 16) INT_LEFT (unique, 0x10000062, 16) , (const, 0x40, 16), (unique, 0x10000062, 16) INT_SEXT (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x18, 8), (stack, 0xffffffffffffffe8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (stack, 0xffffffffffffffe8, 8)]
