[ ---  CBRANCH (ram, 0x456800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x456648, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000199, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000199, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000139, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000165, 4) COPY (register, 0x10, 4), (register, 0x10, 4) COPY (const, 0x0, 4)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3c, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3c, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3c, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x10000119, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000149, 8) COPY (register, 0x30, 8)]
[(unique, 0x1000016d, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000017d, 4) COPY (stack, 0xffffffffffffffc4, 4), (stack, 0xffffffffffffffc4, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000185, 4) COPY (register, 0x28, 4), (register, 0x28, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (unique, 0x1000017d, 4) , (unique, 0x10000181, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x1000016d, 8) , (unique, 0x10000175, 8)]
[(ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[(ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[(register, 0xa0, 8) COPY (unique, 0x10000129, 8), (unique, 0x10000129, 8) MULTIEQUAL (unique, 0x10000119, 8) , (unique, 0x10000121, 8)]
[(unique, 0x10000141, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) COPY (unique, 0x10000159, 8), (unique, 0x10000159, 8) MULTIEQUAL (unique, 0x10000149, 8) , (unique, 0x10000151, 8)]
[(unique, 0x10000169, 4) COPY (register, 0x28, 4), (register, 0x28, 4) COPY (unique, 0x1000018d, 4), (unique, 0x1000018d, 4) MULTIEQUAL (unique, 0x10000185, 4) , (unique, 0x10000189, 4)]
[ ---  CBRANCH (ram, 0x45688d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_AND (unique, 0x100001a9, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100001a9, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x100000c1, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x76, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x76, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x76, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x76, 4)]
[ ---  CBRANCH (ram, 0x456790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0x10, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb0, 8)]
[(register, 0x38, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_AND (unique, 0x100001b9, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100001b9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x456610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x100001b9, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100001b9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x456610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x456610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x456610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (register, 0x90, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0xe8, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0xd9, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0xd3, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0xe8, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0xd9, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0xd3, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0xe8, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0xd9, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0xd3, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0xe8, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0xd9, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0xd3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x456610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x456610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000062, 8) , (const, 0x0, 8), (unique, 0x10000062, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000201, 8), (unique, 0x10000201, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8), (register, 0x90, 8) INT_AND (unique, 0x100001f9, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100001f9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(register, 0x18, 8) INT_AND (unique, 0x10000209, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000209, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x4567c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xd080, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffffc4, 4), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_OR (register, 0x8, 8) , (register, 0x90, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x98, 8), (unique, 0x3100, 8) CAST (unique, 0x10000219, 8), (unique, 0x10000219, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8), (register, 0x98, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x48d, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x487, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x484, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x48d, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x487, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x484, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x48d, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x487, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x484, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x48d, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x487, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x484, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45682a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) CAST (unique, 0x10000231, 8), (unique, 0x10000231, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000229, 8), (unique, 0x10000229, 8) INT_ADD (register, 0x90, 8) , (const, 0x10, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x4d9, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x4d6, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x4d9, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x4d6, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x4d9, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x4d6, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x4d9, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x4d6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000239, 8), (unique, 0x10000239, 8) INT_ADD (register, 0x90, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x456610, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x4c6, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x4ba, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x4c6, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x4ba, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x4c6, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x4ba, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x4c6, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x4ba, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000251, 8), (unique, 0x10000251, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x456610, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x98, 8), (unique, 0x3100, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8), (register, 0x98, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)]
[(register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x176, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x15d, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x156, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x176, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x15d, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x156, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x176, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x15d, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x156, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x176, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x15d, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x156, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x456798, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x10000279, 8), (unique, 0x10000279, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) INT_ADD (register, 0x90, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x90, 8) INT_OR (register, 0x90, 8) , (register, 0x98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x10000289, 8), (unique, 0x10000289, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x461, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x45e, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x45b, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x44f, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x461, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x45e, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x45b, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x44f, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x461, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x45e, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x45b, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x44f, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x461, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x45e, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x45b, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x44f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x4565ef, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) INT_ADD (register, 0x90, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x1b4, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x1a8, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x192, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x18c, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x1b4, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x1a8, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x192, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x18c, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x1b4, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x1a8, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x192, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x18c, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x1b4, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x1a8, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x192, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x18c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0x98, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x1d2, 4), (ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x1d2, 4), (ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x1d2, 4), (ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x1d2, 4), (ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) INT_OR (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[(ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[ ---  CBRANCH (ram, 0x456760, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000121, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10000131, 8) COPY (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000151, 8) COPY (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000161, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000175, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000181, 4) COPY (register, 0x28, 4)]
[(unique, 0x10000189, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45662d, 1) , (unique, 0x100000d1, 1), (unique, 0x100000d1, 1) INT_NOTEQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x100002c9, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100002c9, 8) CAST (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x10, 4) , (register, 0x28, 4)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000131, 8) , (unique, 0x10000139, 8) , (unique, 0x10000141, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0x30, 8) , (register, 0xb8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100000c1, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x18, 8) , (register, 0xa0, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000161, 4) , (unique, 0x10000165, 4) , (unique, 0x10000169, 4)]
[(unique, 0x10000115, 4) COPY (ram, 0x49e20c, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x209, 4), (ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[(unique, 0x10000111, 4) COPY (ram, 0x49e208, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x209, 4), (ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(unique, 0x1000010d, 4) COPY (ram, 0x49e204, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x209, 4), (ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(unique, 0x10000109, 4) COPY (ram, 0x49e200, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x209, 4), (ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[ ---  CBRANCH (ram, 0x456800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) CALL (ram, 0x426550, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100002e1, 8), (unique, 0x100002e1, 8) INT_OR (register, 0x30, 8) , (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CAST (register, 0x0, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e9, 8) , (unique, 0x10000109, 4), (unique, 0x100002e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000009c, 8) , (unique, 0x1000010d, 4), (unique, 0x1000009c, 8) CAST (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) INT_ADD (unique, 0x100002f1, 8) , (const, 0xc, 8), (unique, 0x100002f1, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000301, 8) , (unique, 0x10000111, 4), (unique, 0x10000301, 8) CAST (unique, 0x100000a4, 8), (unique, 0x100000a4, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x7c7, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x7c5, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x7c3, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x7c2, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x22f, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x22d, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x7c7, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x7c5, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x7c3, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x7c2, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x22f, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x22d, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x7c7, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x7c5, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x7c3, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x7c2, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x22f, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x22d, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x7c7, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x7c5, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x7c3, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x7c2, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x22f, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x22d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ac, 8) , (unique, 0x10000115, 4), (unique, 0x100000ac, 8) CAST (unique, 0x10000311, 8), (unique, 0x10000311, 8) INT_ADD (unique, 0x10000309, 8) , (const, 0x14, 8), (unique, 0x10000309, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x456745, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (register, 0xb0, 8)]
[(register, 0x80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000321, 8), (unique, 0x10000321, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (unique, 0x10000319, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000319, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x270, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x270, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x270, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x270, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000331, 8), (unique, 0x10000331, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000321, 8), (unique, 0x10000321, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (unique, 0x10000319, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000319, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x4566c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000329, 8), (unique, 0x10000329, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x10000319, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000319, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x277, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x277, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x277, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x277, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000339, 8), (unique, 0x10000339, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[(ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[ ---  CBRANCH (ram, 0x4566cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x290, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x290, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x290, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x290, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000341, 8), (unique, 0x10000341, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[(ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[(ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[ ---  CBRANCH (ram, 0x456745, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000008b, 8) , (const, 0x0, 8), (unique, 0x1000008b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000351, 8), (unique, 0x10000351, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x10000349, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000349, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(register, 0x88, 8) INT_AND (unique, 0x10000359, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000359, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x45683f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xd080, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0x28, 4), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x90, 8), (register, 0x90, 8) CAST (unique, 0x10000361, 8), (unique, 0x10000361, 8) INT_OR (register, 0x90, 8) , (register, 0x8, 8), (register, 0x90, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_AND (register, 0x90, 4) , (const, 0x1, 4), (register, 0x90, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x10000369, 8), (unique, 0x10000369, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3ce, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3c8, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3c5, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3ce, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3c8, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3c5, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3ce, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3c8, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3c5, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3ce, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3c8, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3c5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000371, 8), (unique, 0x10000371, 8) INT_ADD (register, 0x88, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x456878, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000381, 8), (unique, 0x10000381, 8) INT_ADD (register, 0x88, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000379, 8), (unique, 0x10000379, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) CAST (unique, 0x10000389, 8), (unique, 0x10000389, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x41a, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x417, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x41a, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x417, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x41a, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x417, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x41a, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x417, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) CAST (unique, 0x10000399, 8), (unique, 0x10000399, 8) INT_ADD (register, 0x88, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000391, 8), (unique, 0x10000391, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000391, 8), (unique, 0x10000391, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x407, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3fb, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x407, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3fb, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x407, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3fb, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x407, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3fb, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b1, 8), (unique, 0x100003b1, 8) INT_ADD (register, 0x88, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x30d, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x2f4, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x2ed, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x30d, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x2f4, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x2ed, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x30d, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x2f4, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x2ed, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x30d, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x2f4, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x2ed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x456808, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c9, 8), (unique, 0x100003c9, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c1, 8), (unique, 0x100003c1, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d1, 8), (unique, 0x100003d1, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d9, 8), (unique, 0x100003d9, 8) INT_ADD (register, 0x88, 8) , (const, 0x10, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3a6, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3a3, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x3a0, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x394, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3a6, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3a3, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x3a0, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x394, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3a6, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3a3, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x3a0, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x394, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3a6, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3a3, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x3a0, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x394, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e1, 8), (unique, 0x100003e1, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x456739, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f1, 8), (unique, 0x100003f1, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) INT_ADD (register, 0x88, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) INT_ADD (register, 0x88, 8) , (const, 0x8, 8)]
[(ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x34b, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x33f, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x329, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x326, 4)]
[(ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x34b, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x33f, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x329, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x326, 4)]
[(ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x34b, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x33f, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x329, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x326, 4)]
[(ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x34b, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x33f, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x329, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x326, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) CAST (unique, 0x10000409, 8), (unique, 0x10000409, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x88, 8) INT_OR (register, 0x88, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000411, 8), (unique, 0x10000411, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4), (ram, 0x49e200, 4) INDIRECT (ram, 0x49e200, 4) , (const, 0x362, 4), (ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4), (ram, 0x49e204, 4) INDIRECT (ram, 0x49e204, 4) , (const, 0x362, 4), (ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4), (ram, 0x49e208, 4) INDIRECT (ram, 0x49e208, 4) , (const, 0x362, 4), (ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4), (ram, 0x49e20c, 4) INDIRECT (ram, 0x49e20c, 4) , (const, 0x362, 4), (ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x49e200, 4) COPY (ram, 0x49e200, 4), (ram, 0x49e200, 4) MULTIEQUAL (ram, 0x49e200, 4) , (ram, 0x49e200, 4)]
[(ram, 0x49e204, 4) COPY (ram, 0x49e204, 4), (ram, 0x49e204, 4) MULTIEQUAL (ram, 0x49e204, 4) , (ram, 0x49e204, 4)]
[(ram, 0x49e208, 4) COPY (ram, 0x49e208, 4), (ram, 0x49e208, 4) MULTIEQUAL (ram, 0x49e208, 4) , (ram, 0x49e208, 4)]
[(ram, 0x49e20c, 4) COPY (ram, 0x49e20c, 4), (ram, 0x49e20c, 4) MULTIEQUAL (ram, 0x49e20c, 4) , (ram, 0x49e20c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
