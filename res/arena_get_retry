[(unique, 0x1000007f, 4) COPY (ram, 0x4c57a0, 4)]
[ ---  CBRANCH (ram, 0x422640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x1000009b, 8), (unique, 0x1000009b, 8) CAST (unique, 0x1000005f, 8), (unique, 0x1000005f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(unique, 0x10000093, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4226c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000a3, 8), (unique, 0x100000a3, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x422652, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000007f, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x81, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x422652, 1)]
[(unique, 0xbd00, 4) INT_ADD (ram, 0x4c57a0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xd9, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (unique, 0xbd00, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  CBRANCH (ram, 0x422630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000ab, 8), (unique, 0x100000ab, 8) CALL (ram, 0x421c80, 8) , (unique, 0x10000077, 8) , (register, 0x30, 8) , (register, 0x10, 8), (unique, 0x10000077, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000093, 8) , (unique, 0x10000093, 8) , (register, 0x30, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xf2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000b3, 8), (unique, 0x100000b3, 8) CALL (ram, 0x422050, 8) , (register, 0x30, 8) , (unique, 0x10000067, 8), (unique, 0x10000067, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x422670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bb, 8), (unique, 0x100000bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x99, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x422611, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 8) COPY (const, 0x81, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x422611, 1)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x2c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x422690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x422630, 1) , (unique, 0x1000005d, 1), (unique, 0x1000005d, 1) BOOL_NEGATE (register, 0x206, 1)]
[(stack, 0xfffffffffffffff0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x87, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x1000006f, 8) , (register, 0x30, 8), (unique, 0x1000006f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  BRANCH (ram, 0x422630, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xfffffffffffffff0, 8) , (register, 0x0, 8)]
