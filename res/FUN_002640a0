[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2642a2, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb430, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1dd, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001b9, 8) , (unique, 0x100001b1, 8) , (const, 0xaf, 4) , (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) COPY (const, 0x2bb780, 8), (unique, 0x100001b9, 8) COPY (const, 0x2b745a, 8), (unique, 0x100001b1, 8) COPY (const, 0x2b7445, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1dd, 4)]
[(ram, 0x4f02e0, 8) COPY (ram, 0x4f02e0, 8), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x1dd, 4)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1dd, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1dd, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x264188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f0460, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x100002e1, 8), (unique, 0x100002e1, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x51, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x51, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x51, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x51, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x51, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x51, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x100002e9, 8), (unique, 0x100002e9, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffffe88, 8) PTRSUB (const, 0x0, 8) , (const, 0x263ac0, 8)]
[(unique, 0x100002c9, 8) COPY (unique, 0x100002f1, 8), (unique, 0x100002f1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000279, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000279, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002c9, 8) , (unique, 0x100002d1, 8)]
[ ---  CBRANCH (ram, 0x26412b, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3800, 8) , (unique, 0x3c80, 8)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0xa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x96, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7b, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x96, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x7f, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x7b, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x96, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x7f, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x7b, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x96, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x7f, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x7b, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x96, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x7f, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x7b, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x96, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x7f, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x7b, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x96, 4), (stack, 0xfffffffffffffe68, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x96, 4), (stack, 0xfffffffffffffe78, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x96, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x7f, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x96, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x7f, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x96, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7b, 4)]
[ ---  CBRANCH (ram, 0x2641c8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2106c0, 8) , (const, 0x0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (register, 0x20, 8), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x7f, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x7b, 4)]
[(register, 0x0, 8) CALL (ram, 0x210110, 8) , (ram, 0x4eb430, 4) , (unique, 0x100001d1, 8) , (const, 0x180, 8), (unique, 0x100001d1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e0, 8)]
[ ---  CALL (ram, 0x2106c0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (register, 0x20, 8), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x103, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x134, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x118, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x103, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x134, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x125, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x118, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x103, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x134, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x125, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x118, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x103, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x134, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x125, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x118, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x103, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x134, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x125, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x118, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x103, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x134, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x125, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x118, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x103, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x125, 4), (stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x118, 4), (stack, 0xfffffffffffffe68, 16) INT_ADD (unique, 0x10000299, 16) , (const, 0x2, 2), (unique, 0x10000299, 16) INT_LEFT (unique, 0x10000289, 16) , (const, 0x10, 16), (unique, 0x10000289, 16) INT_SEXT (stack, 0xfffffffffffffe6a, 14), (stack, 0xfffffffffffffe6a, 14) SUBPIECE (stack, 0xfffffffffffffe68, 16) , (const, 0x2, 8), (stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x103, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x125, 4), (stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x118, 4), (stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x103, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x125, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x118, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x103, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x134, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x125, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x118, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x103, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x103, 4)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3c80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x26427f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d5, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1d5, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1d5, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x1d5, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1d5, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1d5, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x1d5, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x1d5, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d5, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x26421b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x264289, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x180, 8)]
[ ---  CBRANCH (ram, 0x264188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4f0460, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x264188, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x166, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x162, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x166, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x162, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x166, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x162, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x166, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x162, 4), (ram, 0x4f0460, 8) INT_ADD (ram, 0x4f0460, 8) , (const, 0x180, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (ram, 0x4f0458, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x2f, 8) , (const, 0x8, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x162, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000166, 4) , (const, 0x180, 4), (unique, 0x10000166, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CAST (unique, 0x10000319, 8), (unique, 0x10000319, 8) INT_SUB (unique, 0x10000309, 8) , (unique, 0x10000311, 8), (unique, 0x10000311, 8) CAST (register, 0x38, 8), (unique, 0x10000309, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_AND (unique, 0x100002f9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100002a9, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000331, 8), (unique, 0x10000331, 8) INT_SUB (unique, 0x10000321, 8) , (unique, 0x10000329, 8), (unique, 0x10000329, 8) CAST (register, 0x0, 8), (unique, 0x10000321, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e0, 8), (register, 0x0, 8) CAST (unique, 0x10000319, 8), (unique, 0x10000319, 8) INT_SUB (unique, 0x10000309, 8) , (unique, 0x10000311, 8), (unique, 0x10000311, 8) CAST (register, 0x38, 8), (unique, 0x10000309, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_AND (unique, 0x100002f9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100002b9, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_AND (unique, 0x100002f9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002b9, 8) , (unique, 0x100002c1, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100002a9, 8) , (unique, 0x100002b1, 8)]
[ ---  CBRANCH (ram, 0x264272, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1c3, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x1c3, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1c3, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1c3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x264198, 1)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1c0, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x1c0, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1c0, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100002b1, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000261, 8) , (const, 0x8, 8), (unique, 0x10000261, 8) INT_ADD (unique, 0x10000259, 8) , (const, 0x1, 8), (unique, 0x10000259, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x100002c1, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000241, 8) , (const, 0x8, 8), (unique, 0x10000241, 8) INT_ADD (unique, 0x10000239, 8) , (const, 0x1, 8), (unique, 0x10000239, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x26426f, 1)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xae, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xbd, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xae, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xbd, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xae, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xbd, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xae, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xbd, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xae, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xbd, 4), (stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xae, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xbd, 4), (stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xae, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xbd, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xae, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xbd, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xae, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xae, 4)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3c80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x264188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcc, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xcc, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xcc, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xcc, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xcc, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xcc, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xcc, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xcc, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xcc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcc, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xce, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xce, 4), (ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xce, 4), (ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xce, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x26427a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000339, 8), (unique, 0x10000339, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xfa, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xfa, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfa, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xfa, 4)]
[(ram, 0x4f02e0, 8) COPY (ram, 0x4f02e0, 8), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xfa, 4)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xfa, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xfa, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 8) COPY (ram, 0x4f02e0, 8)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x76, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x76, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100002d1, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000211, 8) , (const, 0x8, 8), (unique, 0x10000211, 8) INT_ADD (unique, 0x10000209, 8) , (const, 0x1, 8), (unique, 0x10000209, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x264128, 1)]
