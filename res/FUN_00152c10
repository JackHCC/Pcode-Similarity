[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x152c59, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x152c60, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000062, 8), (unique, 0x10000062, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x152c33, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x1000006a, 8), (unique, 0x1000006a, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x152c59, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000052, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000072, 8), (unique, 0x10000072, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000042, 16) , (unique, 0xbd80, 8), (unique, 0x10000042, 16) INT_LEFT (unique, 0x10000032, 16) , (const, 0x40, 16), (unique, 0x10000032, 16) INT_SEXT (unique, 0x10000082, 8), (unique, 0x10000082, 8) CAST (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000007a, 8), (unique, 0x1000007a, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000042, 16) , (unique, 0xbd80, 8), (unique, 0x10000042, 16) INT_LEFT (unique, 0x10000032, 16) , (const, 0x40, 16), (unique, 0x10000032, 16) INT_SEXT (unique, 0x10000082, 8), (unique, 0x10000082, 8) CAST (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000007a, 8), (unique, 0x1000007a, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000052, 8) , (unique, 0x1000005a, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x1000005a, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000052, 8) , (unique, 0x1000005a, 8)]
[ ---  CBRANCH (ram, 0x152c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0xffffffffffffffff, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
