[ ---  CBRANCH (ram, 0x428530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c7c90, 4) COPY (ram, 0x4c7c90, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000084, 8), (unique, 0x10000084, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000004d, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000084, 8), (unique, 0x10000084, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x10000055, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000084, 8), (unique, 0x10000084, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x428538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c90, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x428518, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000004d, 8) , (const, 0x0, 8)]
[(ram, 0x4c7c90, 4) COPY (ram, 0x4c7c90, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x10000074, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000008c, 8), (unique, 0x1000008c, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x428528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000040, 8) , (const, 0x0, 8), (unique, 0x10000040, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000008c, 8), (unique, 0x1000008c, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000007c, 8) COPY (register, 0x10, 8)]
[(ram, 0x4c7c90, 4) COPY (ram, 0x4c7c90, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000074, 8) , (unique, 0x1000007c, 8)]
[ ---  CBRANCH (ram, 0x428556, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x1, 1), (register, 0x80, 1) INT_XOR (unique, 0x10000067, 1) , (unique, 0x10000068, 1), (unique, 0x10000068, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x10000067, 1) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4)]
[(register, 0x80, 1) COPY (const, 0x2, 1)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000094, 8), (unique, 0x10000094, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3a00, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000055, 8) , (const, 0x0, 8)]
[(unique, 0x1000005d, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x428589, 1) , (unique, 0x10000066, 1), (unique, 0x10000066, 1) INT_EQUAL (unique, 0x10000065, 1) , (register, 0x80, 1), (unique, 0x10000065, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x10000065, 1)]
[ ---  CBRANCH (ram, 0x42858e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000065, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x42858e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x1000005d, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x1000006c, 8), (unique, 0x1000006c, 8) COPY (const, 0x49c1e8, 8)]
[(ram, 0x4c7c90, 4) COPY (ram, 0x4c7c90, 4), (ram, 0x4c7c90, 4) INDIRECT (ram, 0x4c7c90, 4) , (const, 0x12f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000009c, 8), (unique, 0x1000009c, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0x1000005d, 8) , (register, 0x10, 8)]
[(ram, 0x4c7c90, 4) COPY (ram, 0x4c7c90, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0x1000005d, 8) , (const, 0x10, 8)]
