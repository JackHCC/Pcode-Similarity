[(unique, 0x1000019d, 4) COPY (ram, 0x4c3150, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x18465d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x184670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57cc, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x184630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000059, 8) , (const, 0x0, 8), (unique, 0x10000059, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x18465d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x184698, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x1, 1), (register, 0x80, 1) INT_XOR (unique, 0x10000147, 1) , (unique, 0x10000148, 1), (unique, 0x10000148, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x10000147, 1) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4)]
[(register, 0x0, 1) COPY (const, 0x2, 1)]
[(unique, 0x10000128, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3a00, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000009a, 4) , (const, 0x8, 4), (unique, 0x1000009a, 4) INT_2COMP (unique, 0x1000009e, 4), (unique, 0x1000009e, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x10000120, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000120, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x184634, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (unique, 0x10000082, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3a00, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000009a, 4) , (const, 0x8, 4), (unique, 0x1000009a, 4) INT_2COMP (unique, 0x1000009e, 4), (unique, 0x1000009e, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x10000120, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000120, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0x10000082, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1846ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1846d9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0x3a00, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x184634, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0x10000082, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1846d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1846ed, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x184740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000128, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1847d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000118, 8) , (const, 0x0, 8), (unique, 0x10000118, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  BRANCH (ram, 0x184711, 1)]
[ ---  CBRANCH (ram, 0x184715, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c57cc, 4) INDIRECT (ram, 0x4c57cc, 4) , (const, 0x1ad, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1ad, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(ram, 0x4c57cc, 4) MULTIEQUAL (ram, 0x4c57cc, 4) , (ram, 0x4c57cc, 4) , (ram, 0x4c57cc, 4)]
[(ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[ ---  CBRANCH (ram, 0x184643, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) INT_AND (unique, 0x1000019d, 4) , (const, 0x5, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x287, 4)]
[(ram, 0x4c57cc, 4) INDIRECT (ram, 0x4c57cc, 4) , (const, 0x287, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x287, 4)]
[ ---  CALL (ram, 0x177450, 8) , (register, 0x18, 4) , (unique, 0x10000151, 8) , (unique, 0x10000161, 8), (unique, 0x10000161, 8) COPY (const, 0x290dd8, 8), (unique, 0x10000151, 8) COPY (const, 0x28eed2, 8), (register, 0x18, 4) INT_AND (unique, 0x1000019d, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x184750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000bc, 4) , (const, 0x0, 4), (unique, 0x100000bc, 4) INT_AND (unique, 0x1000019d, 4) , (const, 0x1, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1fa, 4)]
[(ram, 0x4c57cc, 4) INDIRECT (ram, 0x4c57cc, 4) , (const, 0x1fa, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1fa, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x1fa, 4), (stack, 0xffffffffffffffc8, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x184793, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x20, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) CALL (ram, 0x14a670, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x10, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x220, 4)]
[(ram, 0x4c57cc, 4) INDIRECT (ram, 0x4c57cc, 4) , (const, 0x220, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x220, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x220, 4)]
[ ---  CALL (ram, 0x18e810, 8) , (register, 0x20, 8) , (const, 0x30, 8)]
[(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(ram, 0x4c57cc, 4) MULTIEQUAL (ram, 0x4c57cc, 4) , (ram, 0x4c57cc, 4)]
[(ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001a1, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x28d44b, 8)]
[ ---  CBRANCH (ram, 0x1847bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(unique, 0x100001a9, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x261, 4)]
[ ---  CALL (ram, 0x177450, 8) , (register, 0x18, 4) , (unique, 0x10000159, 8) , (register, 0x10, 8) , (unique, 0x10000169, 8) , (register, 0x28, 8), (unique, 0x10000169, 8) COPY (const, 0x290dd8, 8), (unique, 0x10000159, 8) COPY (const, 0x2906b0, 8), (register, 0x18, 4) INT_AND (unique, 0x1000019d, 4) , (const, 0x2, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001a1, 8) , (unique, 0x100001a9, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x261, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4), (ram, 0x4c57cc, 4) INDIRECT (ram, 0x4c57cc, 4) , (const, 0x261, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x261, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18465d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0x1000019d, 4) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x136eb0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1e5, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4), (ram, 0x4c57cc, 4) INDIRECT (ram, 0x4c57cc, 4) , (const, 0x1e5, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1e5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(ram, 0x4c57cc, 4) COPY (ram, 0x4c57cc, 4), (ram, 0x4c57cc, 4) MULTIEQUAL (ram, 0x4c57cc, 4) , (ram, 0x4c57cc, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
