[ ---  CBRANCH (ram, 0x19a7e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4ed90c, 4) COPY (ram, 0x4ed90c, 4)]
[(ram, 0x4ed930, 8) COPY (ram, 0x4ed930, 8)]
[(ram, 0x4ed938, 8) COPY (ram, 0x4ed938, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000069, 8), (unique, 0x10000069, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000069, 8), (unique, 0x10000069, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x19a7f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed90c, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x19a7d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0x10000059, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19a7dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000071, 8), (unique, 0x10000071, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x10000061, 8) COPY (unique, 0x3100, 8)]
[(ram, 0x4ed90c, 4) COPY (ram, 0x4ed90c, 4)]
[(ram, 0x4ed930, 8) COPY (ram, 0x4ed930, 8)]
[(ram, 0x4ed938, 8) COPY (ram, 0x4ed938, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000059, 8) , (unique, 0x10000061, 8)]
[ ---  CBRANCH (ram, 0x19a7e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (ram, 0x4ed938, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x19a7e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (ram, 0x4ed930, 8)]
[(ram, 0x4ed90c, 4) COPY (ram, 0x4ed90c, 4)]
[(ram, 0x4ed930, 8) COPY (ram, 0x4ed930, 8)]
[(ram, 0x4ed938, 8) COPY (ram, 0x4ed938, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8)]
[(ram, 0x4ed90c, 4) COPY (ram, 0x4ed90c, 4)]
[(ram, 0x4ed930, 8) COPY (ram, 0x4ed930, 8)]
[(ram, 0x4ed938, 8) COPY (ram, 0x4ed938, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19a80e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x1, 1), (register, 0x80, 1) INT_XOR (unique, 0x1000004e, 1) , (unique, 0x1000004f, 1), (unique, 0x1000004f, 1) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x1000004e, 1) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x30, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4)]
[(register, 0x30, 1) COPY (const, 0x2, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000079, 8), (unique, 0x10000079, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3a00, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19a851, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0x10000016, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000079, 8), (unique, 0x10000079, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3a00, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (unique, 0x10000016, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x30, 1)]
[ ---  CBRANCH (ram, 0x19a856, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x19a845, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0x3a00, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000081, 8), (unique, 0x10000081, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19a838, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0x10000016, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000081, 8), (unique, 0x10000081, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19a856, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x19a856, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000050, 8), (unique, 0x10000050, 8) COPY (const, 0x2b8fb8, 8)]
[(ram, 0x4ed90c, 4) COPY (ram, 0x4ed90c, 4), (ram, 0x4ed90c, 4) INDIRECT (ram, 0x4ed90c, 4) , (const, 0x114, 4)]
[(ram, 0x4ed930, 8) COPY (ram, 0x4ed930, 8), (ram, 0x4ed930, 8) INDIRECT (ram, 0x4ed930, 8) , (const, 0x114, 4)]
[(ram, 0x4ed938, 8) COPY (ram, 0x4ed938, 8), (ram, 0x4ed938, 8) INDIRECT (ram, 0x4ed938, 8) , (const, 0x114, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ed90c, 4) COPY (ram, 0x4ed90c, 4)]
[(ram, 0x4ed930, 8) COPY (ram, 0x4ed930, 8)]
[(ram, 0x4ed938, 8) COPY (ram, 0x4ed938, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8)]
