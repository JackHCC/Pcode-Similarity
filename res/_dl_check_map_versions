[ ---  CBRANCH (ram, 0x49182a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) COPY (ram, 0x4c87c0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f9, 8), (unique, 0x100004f9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x2e, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x49181b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x2c, 8) , (const, 0x8, 8)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x491b6e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000509, 8), (unique, 0x10000509, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000501, 8), (unique, 0x10000501, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x690, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x690, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x690, 4), (stack, 0xffffffffffffff9b, 1) COPY (const, 0x0, 1)]
[ ---  CALL (ram, 0x46b290, 8) , (unique, 0xbc00, 2) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9b, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x491bb5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000511, 8), (unique, 0x10000511, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (unique, 0xbd80, 8), (register, 0xa0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000519, 8), (unique, 0x10000519, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000521, 8), (unique, 0x10000521, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000029a, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000029a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6180, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x1000041b, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x10000423, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(unique, 0x10000424, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CBRANCH (ram, 0x49167d, 1) , (unique, 0x1000041a, 1), (unique, 0x1000041a, 1) INT_NOTEQUAL (unique, 0x10000412, 8) , (const, 0x0, 8), (unique, 0x10000412, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (unique, 0x1000041b, 8) , (const, 0x663, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (unique, 0x10000423, 1) , (const, 0x663, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (unique, 0x10000424, 1) , (const, 0x663, 4)]
[ ---  CBRANCH (ram, 0x491670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x485520, 8) , (register, 0xa0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000529, 8), (unique, 0x10000529, 8) INT_ADD (unique, 0x10000412, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x491893, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000531, 8), (unique, 0x10000531, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x59, 8) , (const, 0x8, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x49185d, 1)]
[(register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xa8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0xe7, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (unique, 0x1000041b, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0xe7, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (unique, 0x10000423, 1) , (ram, 0x4c87c0, 1)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0xe7, 4), (stack, 0xffffffffffffff9b, 1) MULTIEQUAL (unique, 0x10000424, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CBRANCH (ram, 0x491850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x485520, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x49168c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000539, 8), (unique, 0x10000539, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x58, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x10000412, 8)]
[ ---  CBRANCH (ram, 0x491b5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x491698, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000541, 8), (unique, 0x10000541, 8) INT_ADD (register, 0x18, 8) , (const, 0x31d, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000559, 8), (unique, 0x10000559, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x10000551, 8), (unique, 0x10000551, 8) CAST (register, 0x0, 8), (register, 0xa0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000549, 8), (unique, 0x10000549, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000569, 8), (unique, 0x10000569, 8) INT_ADD (unique, 0x10000561, 8) , (const, 0x4, 8), (unique, 0x10000561, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0xa8, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (register, 0xa8, 8) , (unique, 0xbd80, 8), (register, 0xa8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000571, 8), (unique, 0x10000571, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000581, 8), (unique, 0x10000581, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x4916f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000599, 8), (unique, 0x10000599, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4916f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005a1, 8), (unique, 0x100005a1, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x28, 8) COPY (const, 0x4af52f, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a9, 8), (unique, 0x100005a9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(unique, 0x100004d1, 8) COPY (stack, 0xffffffffffffff60, 8)]
[ ---  CBRANCH (ram, 0x491900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c87c0, 1) , (const, 0x10, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491a4a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005b1, 8), (unique, 0x100005b1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491a62, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005b9, 8), (unique, 0x100005b9, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x10, 8) COPY (const, 0x4af52f, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x623, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x623, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x623, 4)]
[ ---  CALL (ram, 0x485320, 8) , (unique, 0x1000025a, 8) , (register, 0xa8, 8) , (register, 0x10, 8) , (unique, 0xbd80, 8) , (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0x1000025a, 8) COPY (const, 0x4b5a90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(unique, 0x100004d9, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x49170b, 1)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0x100004d1, 8) , (unique, 0x100004d9, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x100004e1, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x4918b2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2e, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491c5f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c1, 8), (unique, 0x100005c1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x10000439, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000481, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x491770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0xa8, 8) CAST (unique, 0x100005d1, 8), (unique, 0x100005d1, 8) INT_ZEXT (unique, 0xbc80, 4)]
[(unique, 0x100004c9, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x5b3, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000242, 8) , (unique, 0x10000232, 8) , (const, 0x58, 4) , (unique, 0x1000028a, 8), (unique, 0x1000028a, 8) COPY (const, 0x4b5bb8, 8), (unique, 0x10000242, 8) COPY (const, 0x4b5a3b, 8), (unique, 0x10000232, 8) COPY (const, 0x4b5a1f, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x5b3, 4)]
[(ram, 0x4c87c0, 1) COPY (ram, 0x4c87c0, 1), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x5b3, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4917f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4918dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491c7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005e1, 8), (unique, 0x100005e1, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x30, 8) COPY (const, 0x4af52f, 8)]
[ ---  BRANCH (ram, 0x4918dd, 1)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x5f4, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x5f4, 4)]
[ ---  CALL (ram, 0x487a90, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (unique, 0x10000262, 8), (unique, 0x10000262, 8) COPY (const, 0x4b5ad8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x4917c3, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000459, 8) , (unique, 0x100004e9, 8) , (unique, 0x100004e9, 8) , (unique, 0x100004e1, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x254, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x254, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x254, 4), (stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CALL (ram, 0x4893c0, 8) , (const, 0x0, 8) , (register, 0x28, 8) , (unique, 0x1000024a, 8), (unique, 0x1000024a, 8) COPY (const, 0x4b5a4b, 8), (register, 0x28, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x100004b1, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000491, 8) , (unique, 0x100004f1, 8) , (unique, 0x100004f1, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100004a9, 8) , (unique, 0x100004b1, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000449, 8) , (register, 0x18, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x26a, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x26a, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x26a, 4), (stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CBRANCH (ram, 0x491754, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x401140, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000449, 8) , (register, 0x18, 8)]
[(unique, 0x100004f1, 8) COPY (stack, 0xffffffffffffff60, 8), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[ ---  CBRANCH (ram, 0x491a8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000449, 8) , (register, 0x18, 8)]
[(unique, 0x100004e9, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x491bcf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000210, 2) , (const, 0x0, 2), (unique, 0x10000210, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x2, 2)]
[ ---  CBRANCH (ram, 0x491bf6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005f1, 8), (unique, 0x100005f1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff60, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491bf6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x30, 8) COPY (const, 0x4af52f, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x5ab, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x5ab, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x5ab, 4)]
[ ---  CALL (ram, 0x487a90, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) COPY (const, 0x4b5b68, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x4917c3, 1)]
[ ---  CBRANCH (ram, 0x4917f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x491ad5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff60, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491c53, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000609, 8), (unique, 0x10000609, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x30, 8) COPY (const, 0x4af52f, 8)]
[ ---  BRANCH (ram, 0x491ad5, 1)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x573, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x573, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x573, 4)]
[ ---  CALL (ram, 0x487a90, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (unique, 0x10000272, 8), (unique, 0x10000272, 8) COPY (const, 0x4b5b38, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x4917c3, 1)]
[(unique, 0x10000441, 8) COPY (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) INT_ADD (unique, 0x10000611, 8) , (register, 0x0, 8), (unique, 0x10000611, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x49174a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) INT_ADD (unique, 0x10000611, 8) , (register, 0x0, 8), (unique, 0x10000611, 8) CAST (register, 0x18, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100004e1, 8) , (register, 0xa8, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000439, 8) , (unique, 0x10000441, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x212, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x212, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x212, 4), (stack, 0xffffffffffffff9b, 1) COPY (const, 0x0, 1)]
[ ---  CALL (ram, 0x46b290, 8) , (unique, 0xbc00, 2) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff9b, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x4917ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000621, 8), (unique, 0x10000621, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000481, 8) , (unique, 0x100004f1, 8)]
[ ---  CBRANCH (ram, 0x4917ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000629, 8), (unique, 0x10000629, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x30, 8) COPY (const, 0x4af52f, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x245, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x245, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x245, 4)]
[ ---  CALL (ram, 0x487a90, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) COPY (const, 0x4b5b10, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(unique, 0x10000459, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000491, 8) COPY (register, 0xb0, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0x100004c9, 8) , (stack, 0xffffffffffffff60, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x28, 8)]
[(unique, 0x10000449, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x100004a9, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x4917d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (unique, 0x5200, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000631, 8), (unique, 0x10000631, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x100004b9, 4) COPY (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x491806, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000641, 8), (unique, 0x10000641, 8) INT_ADD (unique, 0x10000639, 8) , (const, 0x6, 8), (unique, 0x10000639, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xa0, 8) , (register, 0xb0, 8)]
[(unique, 0x100004bd, 4) COPY (register, 0x0, 4)]
[(register, 0xb8, 4) MULTIEQUAL (unique, 0x100004b9, 4) , (unique, 0x100004bd, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000651, 8), (unique, 0x10000651, 8) INT_ADD (unique, 0x10000649, 8) , (const, 0xc, 8), (unique, 0x10000649, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x491a67, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000651, 8), (unique, 0x10000651, 8) INT_ADD (unique, 0x10000649, 8) , (const, 0xc, 8), (unique, 0x10000649, 8) CAST (register, 0xa0, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000661, 8), (unique, 0x10000661, 8) INT_ADD (unique, 0x10000659, 8) , (register, 0x0, 8), (unique, 0x10000659, 8) CAST (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x4916ae, 1)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000669, 8), (unique, 0x10000669, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x49193d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000669, 8), (unique, 0x10000669, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x49197a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000679, 8), (unique, 0x10000679, 8) INT_ADD (unique, 0x10000671, 8) , (register, 0x0, 8), (unique, 0x10000671, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x491640, 1)]
[(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x491893, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x5200, 4) , (register, 0xa8, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000681, 8), (unique, 0x10000681, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x59, 8) , (const, 0x8, 8), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x10a, 4), (stack, 0xffffffffffffff9b, 1) MULTIEQUAL (unique, 0x10000424, 1) , (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x1000023a, 8) , (unique, 0x1000022a, 8) , (const, 0xcd, 4) , (unique, 0x10000292, 8), (unique, 0x10000292, 8) COPY (const, 0x4b5bd0, 8), (unique, 0x1000023a, 8) COPY (const, 0x4b5a2c, 8), (unique, 0x1000022a, 8) COPY (const, 0x4b5a1f, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x10a, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (unique, 0x1000041b, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) COPY (ram, 0x4c87c0, 1), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x10a, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (unique, 0x10000423, 1) , (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x491949, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) COPY (ram, 0x4c87c0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000689, 8), (unique, 0x10000689, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x491963, 1)]
[(unique, 0x100004c1, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x491973, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000691, 8), (unique, 0x10000691, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(unique, 0x100004c5, 4) COPY (register, 0x0, 4)]
[(register, 0xb8, 4) MULTIEQUAL (unique, 0x100004c1, 4) , (unique, 0x100004c5, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000699, 8), (unique, 0x10000699, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x491960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000699, 8), (unique, 0x10000699, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[ ---  CBRANCH (ram, 0x49182a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x32a, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x32d, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x32a, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x32d, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x32a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x100006a1, 8), (unique, 0x100006a1, 8) CAST (register, 0x0, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x5d, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x427e50, 8) , (register, 0x38, 8) , (const, 0x18, 8), (register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x491c14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427e50, 8) , (register, 0x38, 8) , (const, 0x18, 8), (register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0xb8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x491c35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100006a9, 8), (unique, 0x100006a9, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491c35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006b1, 8), (unique, 0x100006b1, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x30, 8) COPY (const, 0x4af52f, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x4da, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x4da, 4)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x4da, 4)]
[ ---  CALL (ram, 0x4879c0, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (unique, 0x10000282, 8), (unique, 0x10000282, 8) COPY (const, 0x4b5b90, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) COPY (const, 0xc, 8)]
[ ---  BRANCH (ram, 0x491bab, 1)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x4ea, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x4ea, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x4ea, 4), (stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CALL (ram, 0x4893c0, 8) , (register, 0x38, 8) , (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[ ---  CBRANCH (ram, 0x491bcd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006b9, 8), (unique, 0x100006b9, 8) CAST (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x30, 8) COPY (const, 0x4af52f, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x50c, 4), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x50c, 4), (ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[(stack, 0xffffffffffffff9b, 1) INDIRECT (stack, 0xffffffffffffff9b, 1) , (const, 0x50c, 4), (stack, 0xffffffffffffff9b, 1) MULTIEQUAL (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1) , (stack, 0xffffffffffffff9b, 1)]
[ ---  CALL (ram, 0x487a90, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (unique, 0x10000252, 8), (unique, 0x10000252, 8) COPY (const, 0x4b5a60, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c1, 8) , (unique, 0x3100, 4), (unique, 0x100006c1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x5e, 8) , (const, 0x8, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x344, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x33e, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x344, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x33e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x68, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006c9, 8), (unique, 0x100006c9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x3a, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x491af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006d1, 8), (unique, 0x100006d1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (unique, 0x10000227, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (unique, 0x1000021f, 8)]
[(register, 0x10, 8) CAST (unique, 0x100006e1, 8), (unique, 0x100006e1, 8) INT_ADD (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006d9, 8), (unique, 0x100006d9, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x491a19, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (unique, 0x10000227, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (unique, 0x1000021f, 8)]
[(register, 0x8, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x7fff, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006f1, 8), (unique, 0x100006f1, 8) INT_ADD (unique, 0x100006e9, 8) , (const, 0x6, 8), (unique, 0x100006e9, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4919e0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x80, 4) , (unique, 0x3100, 4), (register, 0x80, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006f1, 8), (unique, 0x100006f1, 8) INT_ADD (unique, 0x100006e9, 8) , (const, 0x6, 8), (unique, 0x100006e9, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000711, 8), (unique, 0x10000711, 8) INT_ADD (unique, 0x10000709, 8) , (const, 0xc, 8), (unique, 0x10000709, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000701, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (unique, 0x3300, 8), (unique, 0x100006f9, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (register, 0x0, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x8000, 2), (register, 0x8, 8) INT_ZEXT (register, 0x8, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000719, 8) , (unique, 0xbc80, 4), (unique, 0x10000719, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000701, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (unique, 0x3300, 8), (unique, 0x100006f9, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000701, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (unique, 0x3300, 8), (unique, 0x100006f9, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 2)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x4a4, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x494, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x489, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x482, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x4a4, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x494, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x489, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x482, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000721, 8), (unique, 0x10000721, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000701, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (unique, 0x3300, 8), (unique, 0x100006f9, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x18, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 2)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x1000021f, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x10000227, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[ ---  CBRANCH (ram, 0x491a3a, 1) , (unique, 0x1000021e, 1), (unique, 0x1000021e, 1) INT_EQUAL (unique, 0x1000021a, 4) , (const, 0x0, 4), (unique, 0x1000021a, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000729, 8), (unique, 0x10000729, 8) INT_ADD (register, 0x38, 8) , (const, 0xc, 8)]
[ ---  CBRANCH (ram, 0x491af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000729, 8), (unique, 0x10000729, 8) INT_ADD (register, 0x38, 8) , (const, 0xc, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x4919d5, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000739, 8), (unique, 0x10000739, 8) INT_ADD (unique, 0x10000731, 8) , (register, 0x0, 8), (unique, 0x10000731, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000021a, 4)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (unique, 0x10000227, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (unique, 0x1000021f, 8)]
[ ---  CBRANCH (ram, 0x49182a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000741, 8), (unique, 0x10000741, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x491b4a, 1)]
[(ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (unique, 0x10000432, 1)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (unique, 0x1000042a, 8)]
[ ---  CBRANCH (ram, 0x491b10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000749, 8), (unique, 0x10000749, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000781, 8) , (unique, 0xbc80, 4), (unique, 0x10000781, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000779, 8), (unique, 0x10000779, 8) INT_ADD (unique, 0x10000771, 8) , (unique, 0x3300, 8), (unique, 0x10000771, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x18, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7fff, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000761, 8), (unique, 0x10000761, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000759, 8), (unique, 0x10000759, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0x3400, 8) CAST (unique, 0x10000779, 8), (unique, 0x10000779, 8) INT_ADD (unique, 0x10000771, 8) , (unique, 0x3300, 8), (unique, 0x10000771, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x18, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7fff, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000769, 8), (unique, 0x10000769, 8) INT_ADD (register, 0x0, 8) , (register, 0x8, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000759, 8), (unique, 0x10000759, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000751, 8), (unique, 0x10000751, 8) INT_ADD (register, 0x0, 8) , (const, 0xc, 8)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x452, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x44f, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x44d, 4)]
[(ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x452, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x44f, 4), (ram, 0x4c87c0, 1) INDIRECT (ram, 0x4c87c0, 1) , (const, 0x44d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000779, 8), (unique, 0x10000779, 8) INT_ADD (unique, 0x10000771, 8) , (unique, 0x3300, 8), (unique, 0x10000771, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x18, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7fff, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000759, 8), (unique, 0x10000759, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000789, 8), (unique, 0x10000789, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000791, 8), (unique, 0x10000791, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[(unique, 0x1000042a, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(unique, 0x10000432, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1)]
[ ---  CBRANCH (ram, 0x49182a, 1) , (unique, 0x10000429, 1), (unique, 0x10000429, 1) INT_EQUAL (unique, 0x10000425, 4) , (const, 0x0, 4), (unique, 0x10000425, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x10000425, 4)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8) , (unique, 0x1000042a, 8)]
[(ram, 0x4c87c0, 1) COPY (ram, 0x4c87c0, 1), (ram, 0x4c87c0, 1) MULTIEQUAL (ram, 0x4c87c0, 1) , (ram, 0x4c87c0, 1) , (unique, 0x10000432, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8)]
