[(register, 0x20, 8) CAST (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x21d3f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 2) , (const, 0x2, 2)]
[(register, 0xb0, 4) COPY (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x21d300, 1)]
[ ---  CBRANCH (ram, 0x21d3c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 2) , (const, 0xa, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000dd, 8) , (const, 0x61, 4), (unique, 0x100000dd, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x156, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0xb0, 4) COPY (const, 0x1c, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x46, 4)]
[ ---  CBRANCH (ram, 0x21d471, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (register, 0x38, 4) , (const, 0x1, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_ZEXT (register, 0x30, 2)]
[(stack, 0xffffffffffffffa8, 8) INT_ZEXT (register, 0x30, 2)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21d408, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x200, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100000cd, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x21d35f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x3ff, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x136, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x3ff, 4)]
[(unique, 0x100000d1, 4) COPY (register, 0x28, 4), (register, 0x28, 4) COPY (const, 0x3ff, 4)]
[ ---  BRANCH (ram, 0x21d35f, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x71, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x200, 4)]
[(unique, 0x100000c9, 4) COPY (register, 0x28, 4), (register, 0x28, 4) COPY (const, 0x200, 4)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x100000c5, 4) , (unique, 0x100000c9, 4) , (unique, 0x100000cd, 4) , (unique, 0x100000d1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x94, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x100000a2, 8) , (unique, 0x100000aa, 8), (unique, 0x100000aa, 8) INT_ZEXT (stack, 0xffffffffffffffa8, 4), (unique, 0x100000a2, 8) INT_AND (stack, 0xffffffffffffffa8, 8) , (const, 0xffffffff00000000, 8), (stack, 0xffffffffffffffa8, 4) INT_ADD (unique, 0x100000c1, 4) , (stack, 0xffffffffffffffa8, 2), (unique, 0x100000c1, 4) INT_LEFT (unique, 0x100000bd, 4) , (const, 0x10, 4), (unique, 0x100000bd, 4) INT_SEXT (unique, 0x100000e5, 2), (unique, 0x100000e5, 2) CAST (register, 0x0, 2), (stack, 0xffffffffffffffa8, 2) SUBPIECE (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8), (register, 0x0, 2) INT_OR (unique, 0x4e880, 2) , (unique, 0x4e980, 2), (unique, 0x4e980, 2) INT_LEFT (register, 0x0, 2) , (const, 0x8, 4), (unique, 0x4e880, 2) INT_RIGHT (register, 0x0, 2) , (const, 0x8, 4), (register, 0x0, 2) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x28, 4) , (unique, 0xbc80, 4) , (register, 0x28, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x94, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[ ---  CBRANCH (ram, 0x21d368, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207830, 8) , (register, 0x0, 4) , (register, 0x20, 8) , (register, 0xb0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21d428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x62, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x10f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10f, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x10f, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x3100, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21d38d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x200, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 4) COPY (const, 0x3ff, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x0, 4)]
[(unique, 0x100000c5, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x21d448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xed, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ef, 8) , (const, 0xb, 4), (unique, 0x100000ef, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xed, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xed, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xed, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
