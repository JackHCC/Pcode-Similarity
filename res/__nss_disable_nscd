[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x50, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (register, 0x38, 8) , (const, 0x50, 4), (register, 0x38, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x38, 8) , (const, 0x11, 4), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005d5, 8), (unique, 0x100005d5, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x50, 4), (ram, 0x4c7d48, 1) COPY (const, 0x1, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x50, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x50, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x50, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x50, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x50, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x50, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100005a5, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[ ---  CBRANCH (ram, 0x229800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x100002c9, 8) , (const, 0x0, 8) , (unique, 0x100002d9, 8) , (unique, 0x3100, 8), (unique, 0x100002d9, 8) COPY (const, 0x2927f0, 8), (unique, 0x100002c9, 8) COPY (const, 0x28f293, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x100004b6, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100004be, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100004c6, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x100004ce, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x100004cf, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x100004d7, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x100004db, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x100004df, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x100004e3, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x100004e7, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x100004eb, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x100004ef, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100004f7, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000595, 8) COPY (unique, 0x10000507, 8), (unique, 0x10000507, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(unique, 0x100005ad, 8) COPY (unique, 0x10000507, 8), (unique, 0x10000507, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x229800, 1) , (unique, 0x100004b5, 1), (unique, 0x100004b5, 1) INT_NOTEQUAL (unique, 0x10000571, 8) , (const, 0x0, 8), (unique, 0x10000571, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100004f7, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100004ef, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x100004eb, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (unique, 0x100004e7, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (unique, 0x100004e3, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (unique, 0x100004df, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (unique, 0x100004db, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (unique, 0x100004d7, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (unique, 0x100004cf, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (unique, 0x100004ce, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (unique, 0x100004c6, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x100004be, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x100004b6, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000595, 8) , (unique, 0x1000059d, 8)]
[(unique, 0x10000585, 8) COPY (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000571, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2296e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000571, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffc0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x1000058d, 8) COPY (ram, 0x4c7d58, 8)]
[ ---  CBRANCH (ram, 0x229716, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d58, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d30, 8)]
[(unique, 0x100005bd, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005dd, 8), (unique, 0x100005dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000058d, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x229738, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005dd, 8), (unique, 0x100005dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000058d, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e5, 8) , (const, 0x229743, 8), (unique, 0x100005e5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x311, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x311, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x311, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x311, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x311, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x311, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x311, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x311, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x311, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x311, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x311, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x310, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x311, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x310, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x311, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x310, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x311, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x310, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x229728, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) COPY (unique, 0x100005cd, 8), (unique, 0x100005cd, 8) MULTIEQUAL (unique, 0x100005bd, 8) , (unique, 0x100005c5, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x32c, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x32c, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x32c, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x32c, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x32c, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x32c, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x32c, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x32c, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x32c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x100005c5, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005ed, 8), (unique, 0x100005ed, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x229910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005ed, 8), (unique, 0x100005ed, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xb0, 8) CAST (unique, 0x100005f5, 8), (unique, 0x100005f5, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100005fd, 8), (unique, 0x100005fd, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x229914, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000605, 8) , (const, 0x22991e, 8), (unique, 0x10000605, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x9d, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x9c, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9c, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x9d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x9c, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xa8, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x9d, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xa8, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x9d, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xa8, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x9d, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xa8, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x9d, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xa8, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x9d, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xa8, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x9d, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xa8, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x9d, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xa8, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x9d, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x10000615, 8), (unique, 0x10000615, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000060d, 8), (unique, 0x1000060d, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x18, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x229a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000060d, 8), (unique, 0x1000060d, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x1000061d, 8), (unique, 0x1000061d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc3, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb5, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb0, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xab, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xc3, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xb5, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xb0, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xab, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xc3, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xb5, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xb0, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xab, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xc3, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xb5, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xb0, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xab, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xc3, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xb5, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xb0, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xab, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xc3, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xb5, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xb0, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xab, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xc3, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xb5, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xb0, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xab, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xc3, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xb5, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xb0, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xab, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xc3, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xb5, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xb0, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xab, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x2296e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000518, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000520, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000528, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000530, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x10000538, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x10000539, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x10000541, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000545, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000549, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x1000054d, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x10000551, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x10000555, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x10000559, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000561, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000569, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2296e7, 1) , (unique, 0x10000517, 1), (unique, 0x10000517, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) MULTIEQUAL (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000625, 8) , (const, 0x229768, 8), (unique, 0x10000625, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1d3, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (unique, 0x10000555, 4) , (const, 0x1d2, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1d3, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000559, 8) , (const, 0x1d2, 4)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000010e, 8) , (const, 0x1, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000010e, 8) , (const, 0x1, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000063d, 8) , (const, 0x5f73736e62696c, 8), (unique, 0x1000063d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000010e, 8) , (const, 0x1, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000645, 8) , (const, 0x2297a3, 8), (unique, 0x10000645, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000349, 8) , (const, 0x1, 8), (unique, 0x10000349, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f732e, 4), (register, 0x0, 8) CAST (unique, 0x1000064d, 8), (unique, 0x1000064d, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000341, 8) , (const, 0x1, 8), (unique, 0x10000341, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0x7, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x1000065d, 8), (unique, 0x1000065d, 8) INT_ADD (unique, 0x10000655, 8) , (const, 0x5, 8), (unique, 0x10000655, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000064d, 8), (unique, 0x1000064d, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000341, 8) , (const, 0x1, 8), (unique, 0x10000341, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0x7, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x322e, 2), (unique, 0x3100, 8) CAST (unique, 0x1000066d, 8), (unique, 0x1000066d, 8) INT_ADD (unique, 0x10000665, 8) , (const, 0x3, 8), (unique, 0x10000665, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000064d, 8), (unique, 0x1000064d, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000341, 8) , (const, 0x1, 8), (unique, 0x10000341, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0x7, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000675, 8) , (const, 0x2297c3, 8), (unique, 0x10000675, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000351, 8) , (const, 0x1, 8), (unique, 0x10000351, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x212, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x204, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000520, 8) , (const, 0x1d3, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x212, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x211, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x204, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x203, 4), (stack, 0xffffffffffffffa4, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000635, 8), (unique, 0x10000635, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000528, 8) , (const, 0x1d3, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000520, 8) , (const, 0x1d3, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x203, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d3, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d2, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x203, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000569, 8) , (const, 0x1d2, 4)]
[(unique, 0x1000057d, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x204, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x203, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1fe, 4), (stack, 0xffffffffffffffa8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xd, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x215, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x212, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x207, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x204, 4), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000528, 8) , (const, 0x1d3, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x215, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x212, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x20d, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x20a, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x207, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x204, 4), (ram, 0x4c7d40, 8) INDIRECT (unique, 0x10000530, 8) , (const, 0x1d3, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x215, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x212, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x20d, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x20a, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x207, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x204, 4), (ram, 0x4c7d48, 1) INDIRECT (unique, 0x10000538, 1) , (const, 0x1d3, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x215, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x212, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x20d, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x20a, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x207, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x204, 4), (ram, 0x4c7d58, 8) INDIRECT (unique, 0x10000539, 8) , (const, 0x1d3, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x215, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x212, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x20d, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x20a, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x207, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x204, 4), (ram, 0x4c8990, 4) INDIRECT (unique, 0x10000541, 4) , (const, 0x1d3, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x215, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x212, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x20d, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x20a, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x207, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x204, 4), (ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000545, 4) , (const, 0x1d3, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x215, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x212, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x20d, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x20a, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x207, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x204, 4), (ram, 0x4c89c0, 4) INDIRECT (unique, 0x10000549, 4) , (const, 0x1d3, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x215, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x212, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x20d, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x20a, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x207, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x204, 4), (ram, 0x4c89f0, 4) INDIRECT (unique, 0x1000054d, 4) , (const, 0x1d3, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x215, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x212, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x20d, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x20a, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x207, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x204, 4), (ram, 0x4c89f4, 4) INDIRECT (unique, 0x10000551, 4) , (const, 0x1d3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000518, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x242e40, 8) , (register, 0x20, 8) , (const, 0x80000001, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000010e, 8) , (const, 0x1, 8), (unique, 0x1000010e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2299d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000067d, 8) , (const, 0x2299f8, 8), (unique, 0x1000067d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000361, 8) , (const, 0x1, 8), (unique, 0x10000361, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2ca, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2ca, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2ca, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2ca, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2ca, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2c9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2ca, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2c9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ca, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ca, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c9, 4)]
[ ---  CBRANCH (ram, 0x229a2e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000685, 8) , (unique, 0x1000057d, 8), (unique, 0x10000685, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x155860, 8) , (register, 0x20, 8) , (unique, 0x1000057d, 8) , (unique, 0x100002c1, 8) , (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x17, 8), (unique, 0x100002c1, 8) COPY (const, 0x28f234, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000068d, 8) , (const, 0x229a3f, 8), (unique, 0x1000068d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000369, 8) , (const, 0x1, 8), (unique, 0x10000369, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f1, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2f1, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2f0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2f1, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2f0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2f1, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2f0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2f4, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2f4, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2f1, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2f4, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2f1, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2f4, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2f1, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2f4, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2f1, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2f4, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2f1, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2f4, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2f1, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2f4, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2f1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x242e40, 8) , (register, 0x20, 8) , (const, 0x80000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2297e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2dd, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2dd, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2dd, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2dd, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2dd, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2dd, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2dd, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2dd, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2dd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e0, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2e8, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2e0, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2e8, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2e0, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2e8, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2e0, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2e8, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2e0, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2e8, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2e0, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2e8, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2e0, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2e8, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2e0, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2e8, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2e0, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000695, 8) , (stack, 0xffffffffffffffa4, 4), (unique, 0x10000695, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[ ---  BRANCH (ram, 0x2297e3, 1)]
[ ---  CBRANCH (ram, 0x229960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d48, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000069d, 8) , (const, 0x22996b, 8), (unique, 0x1000069d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000359, 8) , (const, 0x1, 8), (unique, 0x10000359, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x10000399, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006ad, 8) , (const, 0x73736e5f, 4), (unique, 0x100006ad, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000379, 8) , (const, 0x1, 8), (unique, 0x10000379, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x100003e9, 8) , (const, 0x1, 8), (unique, 0x100003e9, 8) INT_ADD (unique, 0x10000381, 8) , (const, 0x4, 8), (unique, 0x10000381, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006b5, 8) , (const, 0x22998f, 8), (unique, 0x100006b5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100003f1, 8) , (const, 0x1, 8), (unique, 0x100003f1, 8) INT_ADD (unique, 0x10000389, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000389, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x696e695f, 4), (register, 0x0, 8) CAST (unique, 0x100006bd, 8), (unique, 0x100006bd, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x100003e1, 8) , (const, 0x1, 8), (unique, 0x100003e1, 8) INT_ADD (unique, 0x10000371, 8) , (const, 0x5, 8), (unique, 0x10000371, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c5, 8) , (const, 0x74, 2), (unique, 0x100006c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x100006bd, 8), (unique, 0x100006bd, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x100003e1, 8) , (const, 0x1, 8), (unique, 0x100003e1, 8) INT_ADD (unique, 0x10000371, 8) , (const, 0x5, 8), (unique, 0x10000371, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006cd, 8) , (const, 0x2299aa, 8), (unique, 0x100006cd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100003f9, 8) , (const, 0x1, 8), (unique, 0x100003f9, 8) INT_ADD (unique, 0x10000391, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000391, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x281, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x274, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x281, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x277, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x274, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x24e, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x281, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x27b, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x277, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x274, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x24e, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x281, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x27b, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x277, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x274, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x24e, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x281, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x27b, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x277, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x274, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x24e, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x281, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x27b, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x277, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x274, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x24e, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x281, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x27b, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x277, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x274, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x24e, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x281, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x27b, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x277, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x274, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x24e, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x281, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x27b, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x277, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x274, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x24e, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x281, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x27b, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x277, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x274, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x24e, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x281, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x280, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x274, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x273, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x271, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x26e, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x24e, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x24d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x280, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x274, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x273, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x271, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x26e, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x24e, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x24d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x280, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x274, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x273, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x271, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26e, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x24e, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x24d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x280, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x274, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x273, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x271, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24d, 4)]
[ ---  CBRANCH (ram, 0x2299c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CALL (ram, 0x242ee0, 8) , (unique, 0xbd80, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100003a1, 8) , (const, 0x1, 8), (unique, 0x100003a1, 8) INT_ADD (unique, 0x1000018f, 8) , (unique, 0x1000010e, 8), (unique, 0x1000018f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100006a5, 8), (unique, 0x100006a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006e5, 8) , (const, 0x2299c5, 8), (unique, 0x100006e5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000401, 8) , (const, 0x1, 8), (unique, 0x10000401, 8) INT_ADD (unique, 0x10000399, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ae, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ae, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x2ae, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x2ae, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2ae, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x2ae, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x2ae, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x2ae, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x2ae, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x2ae, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2ae, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2ad, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2ae, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2ad, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ae, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2ad, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ae, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ad, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006dd, 8), (unique, 0x100006dd, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x38, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c7d40, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c7d40, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100006ed, 8), (unique, 0x100006ed, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000059d, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100005b5, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x2296fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100006ed, 8), (unique, 0x100006ed, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x30a, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x30a, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x30a, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x30a, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x30a, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x30a, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x30a, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x30a, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x30a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000585, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x2296e7, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000561, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000559, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x10000555, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (unique, 0x10000551, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (unique, 0x1000054d, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (unique, 0x10000549, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (unique, 0x10000545, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (unique, 0x10000541, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (unique, 0x10000539, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (unique, 0x10000538, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (unique, 0x10000530, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000528, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000520, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100006f5, 8), (unique, 0x100006f5, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000569, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006fd, 8) , (const, 0x229820, 8), (unique, 0x100006fd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100005a5, 8) , (unique, 0x100005ad, 8) , (unique, 0x100005b5, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xeb, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100004be, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xeb, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100004c6, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xeb, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100004ce, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xeb, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100004cf, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xeb, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x100004d7, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xeb, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x100004db, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xeb, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x100004df, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xeb, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x100004e3, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xeb, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x100004e7, 4) , (ram, 0x4c89f4, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xeb, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xea, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (unique, 0x100004eb, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xeb, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x100004ef, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xeb, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x100004f7, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xeb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x229845, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x100002a9, 8) , (const, 0x0, 8) , (unique, 0x100002e1, 8) , (unique, 0x3100, 8), (unique, 0x100002e1, 8) COPY (const, 0x2927f0, 8), (unique, 0x100002a9, 8) COPY (const, 0x28dfde, 8)]
[(unique, 0x100001e3, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100001eb, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x100001f3, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x100001f4, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x100001fc, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000200, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000204, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x10000208, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x1000020c, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x10000218, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000021c, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000224, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x229845, 1) , (unique, 0x100001e2, 1), (unique, 0x100001e2, 1) INT_NOTEQUAL (unique, 0x10000286, 8) , (const, 0x0, 8), (unique, 0x10000286, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000705, 8) , (const, 0x229835, 8), (unique, 0x10000705, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x100001e3, 8) , (const, 0x106, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (unique, 0x100001eb, 8) , (const, 0x106, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (unique, 0x100001f3, 1) , (const, 0x106, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (unique, 0x100001f4, 8) , (const, 0x106, 4)]
[(ram, 0x4c8990, 4) INDIRECT (unique, 0x100001fc, 4) , (const, 0x106, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000200, 4) , (const, 0x106, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (unique, 0x10000204, 4) , (const, 0x106, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (unique, 0x10000208, 4) , (const, 0x106, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (unique, 0x1000020c, 4) , (const, 0x106, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x106, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (unique, 0x10000218, 4) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x106, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000021c, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x106, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000224, 8) , (const, 0x105, 4)]
[ ---  CALL (ram, 0x2286d0, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000070d, 8), (unique, 0x1000070d, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x106, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000286, 8) , (const, 0x105, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000715, 8) , (const, 0x229865, 8), (unique, 0x10000715, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100001e3, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x12c, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100001eb, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x12c, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100001f3, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x12c, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100001f4, 8)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x12c, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x100001fc, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x12c, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x10000200, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x12c, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x10000204, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x12c, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x10000208, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x12c, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x1000020c, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x12c, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x12b, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (unique, 0x10000218, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000021c, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000224, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12b, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22988d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x100002b9, 8) , (const, 0x0, 8) , (unique, 0x10000299, 8) , (unique, 0x3100, 8), (unique, 0x100002b9, 8) COPY (const, 0x28eea7, 8), (unique, 0x10000299, 8) COPY (const, 0x28ddb3, 8)]
[(unique, 0x1000045a, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000462, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x1000046a, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x1000046b, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x10000473, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000477, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x1000047b, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x1000047f, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x10000483, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x10000487, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000048b, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000493, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x22988d, 1) , (unique, 0x10000459, 1), (unique, 0x10000459, 1) INT_NOTEQUAL (unique, 0x100004a9, 8) , (const, 0x0, 8), (unique, 0x100004a9, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000071d, 8) , (const, 0x22987d, 8), (unique, 0x1000071d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x1000045a, 8) , (const, 0x149, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (unique, 0x10000462, 8) , (const, 0x149, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (unique, 0x1000046a, 1) , (const, 0x149, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (unique, 0x1000046b, 8) , (const, 0x149, 4)]
[(ram, 0x4c8990, 4) INDIRECT (unique, 0x10000473, 4) , (const, 0x149, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000477, 4) , (const, 0x149, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (unique, 0x1000047b, 4) , (const, 0x149, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (unique, 0x1000047f, 4) , (const, 0x149, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (unique, 0x10000483, 4) , (const, 0x149, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x149, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (unique, 0x10000487, 4) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000048b, 8) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000493, 8) , (const, 0x148, 4)]
[ ---  CALL (ram, 0x2286d0, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000725, 8), (unique, 0x10000725, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x149, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100004a9, 8) , (const, 0x148, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000072d, 8) , (const, 0x2298a8, 8), (unique, 0x1000072d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x178, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x1000045a, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x178, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x10000462, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x178, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x1000046a, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x178, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x1000046b, 8)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x178, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x10000473, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x178, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x10000477, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x178, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x1000047b, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x178, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x1000047f, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x178, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x10000483, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x178, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x177, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (unique, 0x10000487, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x178, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x177, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000048b, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x178, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x177, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000493, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x178, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x177, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2298cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x100002d1, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x100002d1, 8) COPY (const, 0x28f29a, 8)]
[(unique, 0x10000235, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x1000023d, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x10000245, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x10000246, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x1000024e, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000252, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000256, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x1000025a, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x1000025e, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x1000026a, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000026e, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000276, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x2298cd, 1) , (unique, 0x10000234, 1), (unique, 0x10000234, 1) INT_NOTEQUAL (unique, 0x1000028e, 8) , (const, 0x0, 8), (unique, 0x1000028e, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000735, 8) , (const, 0x2298bd, 8), (unique, 0x10000735, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000235, 8) , (const, 0x193, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (unique, 0x1000023d, 8) , (const, 0x193, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (unique, 0x10000245, 1) , (const, 0x193, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (unique, 0x10000246, 8) , (const, 0x193, 4)]
[(ram, 0x4c8990, 4) INDIRECT (unique, 0x1000024e, 4) , (const, 0x193, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000252, 4) , (const, 0x193, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (unique, 0x10000256, 4) , (const, 0x193, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (unique, 0x1000025a, 4) , (const, 0x193, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (unique, 0x1000025e, 4) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x193, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (unique, 0x1000026a, 4) , (const, 0x192, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x193, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000026e, 8) , (const, 0x192, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x193, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000276, 8) , (const, 0x192, 4)]
[ ---  CALL (ram, 0x2286d0, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000073d, 8), (unique, 0x1000073d, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x193, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000028e, 8) , (const, 0x192, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x10000235, 8)]
[(ram, 0x4c7d40, 8) COPY (ram, 0x4c7d40, 8), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x1000023d, 8)]
[(ram, 0x4c7d48, 1) COPY (ram, 0x4c7d48, 1), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x10000245, 1)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x10000246, 8)]
[(ram, 0x4c8990, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89b0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89c0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89f0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89f4, 4) COPY (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8)]
