[(register, 0xa8, 8) COPY (const, 0x2bb7d0, 8)]
[(register, 0x10, 1) COPY (const, 0x70, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc5, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000061, 8), (unique, 0x10000061, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc5, 8) COPY (const, 0x7974702f7665642f, 8)]
[(stack, 0xffffffffffffffcf, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcf, 1) MULTIEQUAL (stack, 0xffffffffffffffcf, 1) , (stack, 0xffffffffffffffcf, 1)]
[(stack, 0xffffffffffffffc5, 8) MULTIEQUAL (stack, 0xffffffffffffffc5, 8) , (stack, 0xffffffffffffffc5, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x18, 8) COPY (const, 0x2bb7b0, 8)]
[(unique, 0x1000005d, 1) COPY (register, 0x10, 1), (register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000005e, 1) COPY (register, 0x10, 1), (register, 0x10, 1) COPY (const, 0x30, 1)]
[ ---  BRANCH (ram, 0x265120, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc5, 8) INDIRECT (stack, 0xffffffffffffffc5, 8) , (const, 0x48, 4), (stack, 0xffffffffffffffc5, 8) MULTIEQUAL (stack, 0xffffffffffffffc5, 8) , (stack, 0xffffffffffffffc5, 8)]
[(stack, 0xffffffffffffffcd, 1) INDIRECT (stack, 0xffffffffffffffcd, 1) , (const, 0x48, 4), (stack, 0xffffffffffffffcd, 1) MULTIEQUAL (unique, 0x1000005d, 1) , (stack, 0xffffffffffffffcd, 1)]
[(stack, 0xffffffffffffffce, 1) INDIRECT (register, 0x10, 1) , (const, 0x48, 4), (register, 0x10, 1) COPY (unique, 0x10000060, 1), (unique, 0x10000060, 1) MULTIEQUAL (unique, 0x1000005e, 1) , (unique, 0x1000005f, 1)]
[(stack, 0xffffffffffffffcf, 1) INDIRECT (stack, 0xffffffffffffffcf, 1) , (const, 0x48, 4), (stack, 0xffffffffffffffcf, 1) MULTIEQUAL (stack, 0xffffffffffffffcf, 1) , (stack, 0xffffffffffffffcf, 1)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x48, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x265108, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x10000069, 8) , (const, 0x2, 4), (unique, 0x10000069, 8) CAST (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x265137, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000071, 8), (unique, 0x10000071, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000005f, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x265158, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2650f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xba, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000079, 8) , (const, 0x2, 4), (unique, 0x10000079, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x265137, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x26516e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000081, 8), (unique, 0x10000081, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc5, 8) INDIRECT (stack, 0xffffffffffffffc5, 8) , (const, 0x79, 4)]
[(stack, 0xffffffffffffffcd, 1) INDIRECT (stack, 0xffffffffffffffcd, 1) , (const, 0x79, 4)]
[(stack, 0xffffffffffffffce, 1) INDIRECT (stack, 0xffffffffffffffce, 1) , (const, 0x79, 4)]
[(stack, 0xffffffffffffffcf, 1) INDIRECT (stack, 0xffffffffffffffcf, 1) , (const, 0x79, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x79, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x79, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8)]
