[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000ed, 8), (unique, 0x100000ed, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x254900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000f5, 8), (unique, 0x100000f5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000e5, 8), (unique, 0x100000e5, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x5, 8)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xb2, 4)]
[ ---  CBRANCH (ram, 0x254960, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x251110, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) CAST (unique, 0x10000115, 8), (unique, 0x10000115, 8) INT_ADD (unique, 0x1000010d, 8) , (const, 0x24, 8), (unique, 0x1000010d, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (unique, 0x100000fd, 8) , (const, 0x34, 8), (unique, 0x100000fd, 8) CAST (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000125, 8), (unique, 0x10000125, 8) INT_ADD (unique, 0x1000011d, 8) , (const, 0x34, 8), (unique, 0x1000011d, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x25488b, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xca, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xca, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xca, 4)]
[ ---  CALL (ram, 0x120ff0, 8) , (unique, 0x1000012d, 8) , (const, 0x0, 8), (unique, 0x1000012d, 8) CAST (unique, 0x3800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) CAST (unique, 0x10000155, 8), (unique, 0x10000155, 8) INT_ADD (unique, 0x1000014d, 8) , (const, 0x34, 8), (unique, 0x1000014d, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (stack, 0xffffffffffffffc8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000145, 8), (unique, 0x10000145, 8) INT_ADD (unique, 0x1000013d, 8) , (const, 0x34, 8), (unique, 0x1000013d, 8) CAST (unique, 0xbd80, 8), (stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0xca, 4)]
[ ---  CBRANCH (ram, 0x25494e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000015d, 8) , (unique, 0x10000165, 8), (unique, 0x10000165, 8) CAST (stack, 0xffffffffffffffd0, 8), (unique, 0x1000015d, 8) CAST (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000135, 8), (unique, 0x10000135, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xca, 4)]
[(register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xf4240, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) INT_ADD (unique, 0x1000016d, 8) , (const, 0x34, 8), (unique, 0x1000016d, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017d, 8) , (register, 0x0, 4), (unique, 0x1000017d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x7, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) SUBPIECE (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x25488b, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) INT_ADD (unique, 0x1000019d, 8) , (const, 0x7c, 8), (unique, 0x1000019d, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000185, 8), (unique, 0x10000185, 8) INT_ADD (register, 0x38, 8) , (const, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x44, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x44, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (register, 0x0, 4) , (const, 0x5a, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000195, 8), (unique, 0x10000195, 8) INT_ADD (unique, 0x1000018d, 8) , (const, 0x84, 8), (unique, 0x1000018d, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x3200, 8) , (const, 0x44, 4), (unique, 0x3200, 8) CAST (unique, 0x10000195, 8), (unique, 0x10000195, 8) INT_ADD (unique, 0x1000018d, 8) , (const, 0x84, 8), (unique, 0x1000018d, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x44, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x2548dc, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258270, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) INT_ADD (unique, 0x100001b5, 8) , (const, 0x7c, 8), (unique, 0x100001b5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d5, 8) , (const, 0x0, 4), (unique, 0x100001d5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) INT_ADD (unique, 0x100001c5, 8) , (const, 0x7c, 8), (unique, 0x100001c5, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x0, 1) COPY (register, 0x207, 1)]
[ ---  CBRANCH (ram, 0x25496d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1)]
