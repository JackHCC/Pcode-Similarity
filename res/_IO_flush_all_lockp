[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x1000022c, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  CBRANCH (ram, 0x41fb5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7c38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41fdac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000023c, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c0, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x2c0, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x2c0, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x2c0, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x2c0, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x2c0, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000147, 8), (unique, 0x10000147, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7c30, 8)]
[(unique, 0x10000244, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x41fb53, 1)]
[(unique, 0x1000024c, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000234, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8) , (unique, 0x10000244, 8) , (unique, 0x1000024c, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (ram, 0x4c7c34, 4) , (const, 0x1, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[ ---  CBRANCH (ram, 0x41fca9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5120, 8) , (const, 0x0, 8), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000274, 8), (unique, 0x10000274, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[(unique, 0x100001c8, 8) COPY (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) CAST (ram, 0x4c5120, 8)]
[(unique, 0x10000228, 4) COPY (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x41fc34, 1)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (unique, 0x10000228, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x10000210, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001c8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41fc7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41fc7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x41fc79, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000284, 8), (unique, 0x10000284, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41fd68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x29b, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x29b, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x29b, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x29b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(unique, 0x100001f0, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (unique, 0x10000210, 8) , (const, 0x29b, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29f, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x29f, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x29f, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x29f, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x29f, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[(unique, 0x100001f8, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (unique, 0x10000210, 8) , (const, 0x29f, 4)]
[ ---  BRANCH (ram, 0x41fc6e, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xe1, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xe1, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xe1, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xe1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(unique, 0x100001e8, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (unique, 0x10000210, 8) , (const, 0xe1, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xe7, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0xe7, 4), (ram, 0x4c7c20, 8) MULTIEQUAL (unique, 0x100001e8, 8) , (unique, 0x100001f0, 8) , (unique, 0x100001f8, 8) , (unique, 0x10000210, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xe7, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xe7, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xe7, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a4, 8) , (unique, 0xbd80, 8), (unique, 0x100002a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xef, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0xef, 4), (ram, 0x4c7c20, 8) MULTIEQUAL (unique, 0x10000210, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xef, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xef, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xef, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (unique, 0x10000210, 8) , (unique, 0x10000210, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x41fb90, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100002ac, 4) , (const, 0x1, 4), (unique, 0x100002ac, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41fbe0, 1) , (unique, 0x10000137, 1), (unique, 0x10000137, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41fba1, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41fd30, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26d, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x26d, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x26d, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x26d, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x26d, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x26d, 4)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41fbc8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x25c, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x25c, 4), (ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x25c, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x25c, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x25c, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  CBRANCH (ram, 0x41fbe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x41fc20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41fc20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x147, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x147, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x147, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x147, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41fc20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x14c, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x14c, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x14c, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x14c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002f8, 8) , (const, 0x0, 8), (unique, 0x100002f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41fd88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000300, 8), (unique, 0x10000300, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x215, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x215, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x215, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x215, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41fc20, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x41fc20, 1)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x162, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x162, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x162, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x162, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41fca0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000308, 8), (unique, 0x10000308, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) INT_ADD (ram, 0x4c7c34, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c20, 8) MULTIEQUAL (ram, 0x4c7c20, 8) , (ram, 0x4c7c20, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x41fcd1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (register, 0x0, 4)]
[(ram, 0x4c7c38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41fd3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(unique, 0x10000220, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41fcd1, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (ram, 0x4c7c30, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x41fcd1, 1)]
[(ram, 0x4c7c30, 4) INT_ADD (ram, 0x4c7c30, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (unique, 0x10000220, 4) , (unique, 0x10000220, 4)]
[ ---  CBRANCH (ram, 0x41fdd2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000318, 8), (unique, 0x10000318, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1ef, 4)]
[(ram, 0x4c7c34, 4) COPY (ram, 0x4c7c34, 4), (ram, 0x4c7c34, 4) INDIRECT (register, 0x0, 4) , (const, 0x1ef, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1ef, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) COPY (register, 0x0, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xb0, 4)]
