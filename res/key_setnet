[ ---  CBRANCH (ram, 0x236c14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x236c37, 1)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x105, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x105, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x105, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100000eb, 8), (unique, 0x100000eb, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7fb0, 8)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x38, 4), (ram, 0x4c7fb0, 4) MULTIEQUAL (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x38, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x38, 4), (stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x236c7a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x236290, 8) , (const, 0x2, 8)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x60, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x60, 4)]
[(unique, 0x10000090, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x8, 8) , (unique, 0x100000db, 8) , (register, 0x38, 8) , (unique, 0x100000d3, 8) , (unique, 0x3800, 8) , (const, 0x1e, 8) , (const, 0x0, 8), (unique, 0x100000db, 8) PTRSUB (const, 0x0, 8) , (const, 0x22fdb0, 8), (unique, 0x100000d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x22fb60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000113, 8), (unique, 0x10000113, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000090, 4)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(ram, 0x4c7fb0, 4) MULTIEQUAL (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4)]
[ ---  CBRANCH (ram, 0x236c8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000107, 4) COPY (unique, 0x100000fb, 4), (unique, 0x100000fb, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x236cb0, 1) , (unique, 0x100000ff, 1), (unique, 0x100000ff, 1) INT_NOTEQUAL (unique, 0x100000fb, 4) , (const, 0x0, 4), (unique, 0x100000fb, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0xe6, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7fb0, 8)]
[(unique, 0x10000103, 4) COPY (ram, 0x4c7fb0, 4), (ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0xe6, 4), (ram, 0x4c7fb0, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x1000010f, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0xe6, 4)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7fb0, 4) COPY (unique, 0x1000010b, 4), (unique, 0x1000010b, 4) MULTIEQUAL (unique, 0x10000103, 4) , (unique, 0x10000107, 4)]
[ ---  CBRANCH (ram, 0x236cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000010f, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x236cc1, 1)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (unique, 0x100000b8, 4) , (const, 0x2, 4), (unique, 0x100000b8, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (stack, 0xfffffffffffffff4, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (ram, 0x4c7fb0, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
