[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000043d, 8), (unique, 0x1000043d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f1a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000445, 8), (unique, 0x10000445, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000044d, 8), (unique, 0x1000044d, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x45f1a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000455, 8), (unique, 0x10000455, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000475, 8), (unique, 0x10000475, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000046d, 8), (unique, 0x1000046d, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000465, 8) , (const, 0x2f, 4), (unique, 0x10000465, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000045d, 8) , (const, 0x11, 4), (unique, 0x1000045d, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45f4e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x5c1, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002db, 8) , (unique, 0x100002c3, 8) , (const, 0x1a4, 4) , (unique, 0x10000313, 8), (unique, 0x10000313, 8) COPY (const, 0x49f840, 8), (unique, 0x100002db, 8) COPY (const, 0x49f46e, 8), (unique, 0x100002c3, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000047d, 8), (unique, 0x1000047d, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f30e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000485, 8), (unique, 0x10000485, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5b3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5b3, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x57f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5b3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x57f, 4)]
[(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x45f30e, 1)]
[(unique, 0x100003c5, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x45f1c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x100003cd, 8) COPY (register, 0x30, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000048d, 8), (unique, 0x1000048d, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003c5, 8) , (unique, 0x100003cd, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000495, 8), (unique, 0x10000495, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f338, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f1d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000049d, 8), (unique, 0x1000049d, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f6b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x54b, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002e3, 8) , (unique, 0x100002d3, 8) , (const, 0x234, 4) , (unique, 0x10000323, 8), (unique, 0x10000323, 8) COPY (const, 0x49f840, 8), (unique, 0x100002e3, 8) COPY (const, 0x49f46e, 8), (unique, 0x100002d3, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100003f5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100004a5, 4), (unique, 0x100004a5, 4) CAST (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x45f4c1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004a9, 8), (unique, 0x100004a9, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45f3c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000012e, 4) , (const, 0x0, 4), (unique, 0x1000012e, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004b1, 8), (unique, 0x100004b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100004c1, 8), (unique, 0x100004c1, 8) INT_ADD (unique, 0x100004b9, 8) , (unique, 0x1000035b, 8), (unique, 0x100004b9, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000035b, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45f4be, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f3c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004c9, 8), (unique, 0x100004c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100004d9, 8), (unique, 0x100004d9, 8) INT_ADD (unique, 0x100004d1, 8) , (unique, 0x10000363, 8), (unique, 0x100004d1, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000363, 8) INT_ADD (register, 0x10, 8) , (const, 0x5, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f4c1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f3c4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003f5, 8) , (register, 0x10, 8) , (unique, 0x3100, 8)]
[(register, 0xa0, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4)]
[ ---  BRANCH (ram, 0x45f30e, 1)]
[ ---  CBRANCH (ram, 0x45f3c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004e1, 8), (unique, 0x100004e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100004f1, 8), (unique, 0x100004f1, 8) INT_ADD (unique, 0x100004e9, 8) , (const, 0x7, 8), (unique, 0x100004e9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004f9, 8), (unique, 0x100004f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000509, 8), (unique, 0x10000509, 8) INT_ADD (unique, 0x10000501, 8) , (const, 0x5, 8), (unique, 0x10000501, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000519, 8), (unique, 0x10000519, 8) INT_ADD (unique, 0x10000511, 8) , (const, 0x6, 8), (unique, 0x10000511, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000529, 8), (unique, 0x10000529, 8) INT_ADD (unique, 0x10000521, 8) , (const, 0x7, 8), (unique, 0x10000521, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000415, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x45f1e0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x1000040d, 8) , (unique, 0x10000415, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff90, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45f1fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8)]
[(register, 0xa0, 4) COPY (const, 0x4, 4)]
[(unique, 0x100003b5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000b8, 8) , (const, 0x1, 8), (unique, 0x100000b8, 8) INT_2COMP (unique, 0x10000531, 8), (unique, 0x10000531, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x45f229, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (unique, 0x10000539, 8) , (unique, 0x10000541, 8), (unique, 0x10000541, 8) CAST (register, 0x10, 8), (unique, 0x10000539, 8) CAST (register, 0x8, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000b8, 8) , (const, 0x1, 8), (unique, 0x100000b8, 8) INT_2COMP (unique, 0x10000531, 8), (unique, 0x10000531, 8) CAST (register, 0x28, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (unique, 0x100000b0, 8) , (const, 0x1, 8), (unique, 0x100000b0, 8) INT_2COMP (unique, 0xbd80, 8)]
[(unique, 0x100003bd, 8) COPY (register, 0x8, 8)]
[(unique, 0x100003fd, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003b5, 8) , (unique, 0x100003bd, 8)]
[ ---  CBRANCH (ram, 0x45f234, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x10000549, 8), (unique, 0x10000549, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003b5, 8) , (unique, 0x100003bd, 8)]
[(unique, 0x10000405, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x10000551, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x10000551, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003fd, 8) , (unique, 0x10000405, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x122, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x122, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x122, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000559, 8), (unique, 0x10000559, 8) CALL (ram, 0x401160, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x45f266, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x7, 4), (register, 0xa0, 4) INT_AND (unique, 0x100000de, 4) , (const, 0xfffffffe, 4), (unique, 0x100000de, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x45f400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x45f30e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000571, 8), (unique, 0x10000571, 8) INT_ADD (unique, 0x10000569, 8) , (const, 0x14, 8), (unique, 0x10000569, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45f410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000579, 8), (unique, 0x10000579, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8)]
[(unique, 0x1000042d, 4) COPY (register, 0xa0, 4)]
[ ---  BRANCH (ram, 0x45f2f9, 1)]
[(unique, 0x10000431, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x45f2f6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a9, 4)]
[(unique, 0x1000039d, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cf, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1a9, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45f2f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x10000435, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x45f2e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x45f420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45f42f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x45f4b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff90, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003a5, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f453, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESSEQUAL (unique, 0x10000591, 8) , (unique, 0x10000599, 8), (unique, 0x10000599, 8) CAST (register, 0x8, 8), (unique, 0x10000591, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000162, 8) , (const, 0x1, 8), (unique, 0x10000162, 8) INT_2COMP (unique, 0x10000589, 8), (unique, 0x10000589, 8) CAST (register, 0x28, 8)]
[(unique, 0x100003ad, 8) COPY (register, 0x10, 8)]
[(unique, 0x100003e5, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003a5, 8) , (unique, 0x100003ad, 8)]
[ ---  CBRANCH (ram, 0x45f45e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100005a1, 8), (unique, 0x100005a1, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100003a5, 8) , (unique, 0x100003ad, 8)]
[(unique, 0x100003ed, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x100005a9, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x100005a9, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003e5, 8) , (unique, 0x100003ed, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ae, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3ae, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ae, 4)]
[(register, 0x0, 8) CAST (unique, 0x100005b1, 8), (unique, 0x100005b1, 8) CALL (ram, 0x401160, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x45f639, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005b9, 8), (unique, 0x100005b9, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45f540, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0x1000039d, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f644, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x45f2da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) INT_ADD (unique, 0x100005c1, 8) , (const, 0x14, 8), (unique, 0x100005c1, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x45f2da, 1)]
[ ---  CBRANCH (ram, 0x45f549, 1) , (unique, 0x100002af, 1), (unique, 0x100002af, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x415, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x415, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002fb, 8) , (unique, 0x100002b3, 8) , (const, 0x2eb, 4) , (unique, 0x10000303, 8), (unique, 0x10000303, 8) COPY (const, 0x49f840, 8), (unique, 0x100002fb, 8) COPY (const, 0x49f500, 8), (unique, 0x100002b3, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x401, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x401, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002eb, 8) , (unique, 0x100002bb, 8) , (const, 0x2ea, 4) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) COPY (const, 0x49f840, 8), (unique, 0x100002eb, 8) COPY (const, 0x49f482, 8), (unique, 0x100002bb, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x8, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000198, 8) , (const, 0x1, 8), (unique, 0x10000198, 8) INT_2COMP (unique, 0x100005d1, 8), (unique, 0x100005d1, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x45f2da, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000439, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f6a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x45f30e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x7, 4), (register, 0xa0, 4) MULTIEQUAL (unique, 0x1000042d, 4) , (unique, 0x10000431, 4) , (unique, 0x10000435, 4) , (unique, 0x10000439, 4)]
[ ---  CBRANCH (ram, 0x45f570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f687, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 8) , (unique, 0x100005f1, 8), (unique, 0x100005f1, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000200, 8) , (const, 0x1, 8), (unique, 0x10000200, 8) INT_2COMP (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100005e1, 8), (unique, 0x100005e1, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x345, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x345, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002f3, 8) , (unique, 0x100002cb, 8) , (const, 0x31e, 4) , (unique, 0x1000031b, 8), (unique, 0x1000031b, 8) COPY (const, 0x49f840, 8), (unique, 0x100002f3, 8) COPY (const, 0x49f493, 8), (unique, 0x100002cb, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f625, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000601, 8), (unique, 0x10000601, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000609, 8) , (unique, 0xbb00, 1), (unique, 0x10000609, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45f61f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000611, 8), (unique, 0x10000611, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000621, 8), (unique, 0x10000621, 8) INT_ADD (unique, 0x10000619, 8) , (const, 0x5, 8), (unique, 0x10000619, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f61f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000629, 8), (unique, 0x10000629, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000639, 8), (unique, 0x10000639, 8) INT_ADD (unique, 0x10000631, 8) , (const, 0x6, 8), (unique, 0x10000631, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f61f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000641, 8), (unique, 0x10000641, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000651, 8), (unique, 0x10000651, 8) INT_ADD (unique, 0x10000649, 8) , (const, 0x7, 8), (unique, 0x10000649, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f61f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000659, 8), (unique, 0x10000659, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000661, 8) , (unique, 0xbb00, 1), (unique, 0x10000661, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45f61f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x100003d5, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000041d, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000671, 8), (unique, 0x10000671, 8) INT_ADD (unique, 0x10000669, 8) , (const, 0x9, 8), (unique, 0x10000669, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000679, 8), (unique, 0x10000679, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003d5, 8) , (unique, 0x100003dd, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003d5, 8) , (unique, 0x100003dd, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000041d, 8) , (unique, 0x10000425, 8)]
[(unique, 0x100003dd, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003d5, 8) , (unique, 0x100003dd, 8)]
[(unique, 0x10000425, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000041d, 8) , (unique, 0x10000425, 8)]
[ ---  CBRANCH (ram, 0x45f604, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003d5, 8) , (unique, 0x100003dd, 8)]
[(register, 0x8, 4) INT_SUB (stack, 0xffffffffffffff70, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff70, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0xa0, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  BRANCH (ram, 0x45f30e, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f663, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000681, 8), (unique, 0x10000681, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x246, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x246, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000040d, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000689, 8), (unique, 0x10000689, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x45f1e0, 1)]
