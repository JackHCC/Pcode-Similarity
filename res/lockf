[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000116, 8), (unique, 0x10000116, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd8, 16) INT_ZEXT (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) CAST (register, 0x10, 8)]
[(stack, 0xffffffffffffffca, 14) SUBPIECE (stack, 0xffffffffffffffc8, 16) , (const, 0x2, 8), (stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x100000a6, 16) , (const, 0x10000, 4), (unique, 0x100000a6, 16) INT_LEFT (unique, 0x10000096, 16) , (const, 0x20, 16), (unique, 0x10000096, 16) INT_SEXT (stack, 0xffffffffffffffcc, 12), (stack, 0xffffffffffffffcc, 12) SUBPIECE (unique, 0x10000086, 16) , (const, 0x0, 4), (unique, 0x10000086, 16) INT_RIGHT (const, 0x0, 16) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x210880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) COPY (const, 0x1, 8)]
[(register, 0x30, 4) COPY (const, 0x7, 4)]
[(stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x10000106, 16) , (const, 0x1, 2), (unique, 0x10000106, 16) INT_LEFT (unique, 0x100000f6, 16) , (const, 0x10, 16), (unique, 0x100000f6, 16) INT_SEXT (stack, 0xffffffffffffffca, 14)]
[ ---  BRANCH (ram, 0x21082e, 1)]
[ ---  CBRANCH (ram, 0x210850, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x210868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x100000e6, 16) , (const, 0x2, 2), (unique, 0x100000e6, 16) INT_LEFT (unique, 0x100000d6, 16) , (const, 0x10, 16), (unique, 0x100000d6, 16) INT_SEXT (stack, 0xffffffffffffffca, 14)]
[(register, 0x30, 4) COPY (const, 0x6, 4)]
[ ---  BRANCH (ram, 0x21082e, 1)]
[ ---  CBRANCH (ram, 0x210820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x2, 4)]
[(register, 0x30, 4) COPY (const, 0x6, 4)]
[(stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x100000c6, 16) , (const, 0x1, 2), (unique, 0x100000c6, 16) INT_LEFT (unique, 0x100000b6, 16) , (const, 0x10, 16), (unique, 0x100000b6, 16) INT_SEXT (stack, 0xffffffffffffffca, 14)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd0, 4)]
[(stack, 0xffffffffffffffc8, 16) INDIRECT (stack, 0xffffffffffffffc8, 16) , (const, 0xd0, 4), (stack, 0xffffffffffffffc8, 16) MULTIEQUAL (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16)]
[(stack, 0xffffffffffffffd8, 16) INDIRECT (stack, 0xffffffffffffffd8, 16) , (const, 0xd0, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xd0, 4)]
[(register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (const, 0x0, 8) , (register, 0x38, 4) , (register, 0x30, 4) , (register, 0x20, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x210868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000126, 8) , (const, 0x16, 4), (unique, 0x10000126, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x210835, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffc8, 16) INDIRECT (stack, 0xffffffffffffffc8, 16) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffd8, 16) INDIRECT (stack, 0xffffffffffffffd8, 16) , (const, 0x5a, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x5a, 4)]
[ ---  CBRANCH (ram, 0x2108a5, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (const, 0x0, 8) , (register, 0x38, 4) , (const, 0x5, 4) , (register, 0x20, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x210835, 1)]
[ ---  CBRANCH (ram, 0x210816, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc8, 2) , (const, 0x2, 2), (stack, 0xffffffffffffffc8, 2) SUBPIECE (stack, 0xffffffffffffffc8, 16) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x78, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffc8, 16) INDIRECT (stack, 0xffffffffffffffc8, 16) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffd8, 16) INDIRECT (stack, 0xffffffffffffffd8, 16) , (const, 0x78, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x78, 4)]
[ ---  CBRANCH (ram, 0x210890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e58e0, 8), (stack, 0xffffffffffffffe0, 4) SUBPIECE (stack, 0xffffffffffffffd8, 16) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000012e, 8) , (const, 0xd, 4), (unique, 0x1000012e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x210835, 1)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffd8, 16) MULTIEQUAL (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16)]
[(stack, 0xffffffffffffffc8, 16) MULTIEQUAL (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x210835, 1)]
[(stack, 0xffffffffffffffd8, 16) MULTIEQUAL (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16) , (stack, 0xffffffffffffffd8, 16)]
[(stack, 0xffffffffffffffc8, 16) MULTIEQUAL (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2108ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000136, 8), (unique, 0x10000136, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffc8, 16) INDIRECT (stack, 0xffffffffffffffc8, 16) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffd8, 16) INDIRECT (stack, 0xffffffffffffffd8, 16) , (const, 0xaf, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xaf, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
