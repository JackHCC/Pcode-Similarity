[(register, 0x206, 1) INT_EQUAL (ram, 0x4c8990, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1caec8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4c8990, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1cae72, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1cad5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5ea8, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1cae68, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x64, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (ram, 0x4c8990, 4) , (const, 0x1, 4)]
[(ram, 0x4c8990, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[ ---  CBRANCH (ram, 0x1cad4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8830, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x266, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x266, 4)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x266, 4)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x266, 4)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x266, 4)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x266, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x266, 4)]
[ ---  CBRANCH (ram, 0x1cae53, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x23c460, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c5e98, 8) COPY (ram, 0x4c5e98, 8)]
[(ram, 0x4c5ea0, 8) COPY (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5ea8, 1) COPY (ram, 0x4c5ea8, 1)]
[(ram, 0x4c8830, 1) COPY (ram, 0x4c8830, 1)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (register, 0x0, 4)]
[(ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1caee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5ea8, 1) , (const, 0x0, 1), (ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d9, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x1d9, 4), (ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x1d9, 4), (ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x1d9, 4), (ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x1d9, 4), (ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1d9, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1caf60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22ab90, 8) , (unique, 0x3800, 8) , (unique, 0x10000105, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x10000105, 8) COPY (const, 0x28dacb, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1caf27, 1)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (unique, 0x10000161, 8) , (unique, 0xbd80, 8), (unique, 0x10000161, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c5e98, 8) MULTIEQUAL (register, 0x10, 8) , (ram, 0x4c5e98, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c5ea8, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x1cad98, 1)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000169, 8), (unique, 0x10000169, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c5e98, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c5e98, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c5ea0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c5ea0, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (register, 0x10, 8)]
[(ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000159, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1caf76, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x1c2, 4)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x1c2, 4)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x1c2, 4)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x1c2, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1c2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c2, 4)]
[ ---  BRANCH (ram, 0x1cae42, 1)]
[(stack, 0xffffffffffffffa8, 8) COPY (ram, 0x4c2e78, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xb0, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x242d60, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xdd, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd2, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0xdd, 4), (ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0xd2, 4), (ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0xdd, 4), (ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0xd2, 4), (ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0xdd, 4), (ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0xd2, 4), (ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0xdd, 4), (ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0xd2, 4), (ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xdd, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xd2, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xdd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1cae05, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0xb0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd2, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x1caea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000181, 8), (unique, 0x10000181, 8) INT_ADD (unique, 0x10000171, 8) , (unique, 0x10000179, 8), (unique, 0x10000179, 8) CAST (unique, 0x10000159, 8), (unique, 0x10000171, 8) CAST (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a4, 4)]
[(ram, 0x4c5e98, 8) COPY (ram, 0x4c5e98, 8), (ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x1a4, 4)]
[(ram, 0x4c5ea0, 8) COPY (ram, 0x4c5ea0, 8), (ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x1a4, 4)]
[(ram, 0x4c5ea8, 1) COPY (ram, 0x4c5ea8, 1), (ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x1a4, 4)]
[(ram, 0x4c8830, 1) COPY (ram, 0x4c8830, 1), (ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x1a4, 4)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1a4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x22, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x11a, 4)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x11a, 4)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x11a, 4)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x11a, 4)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x11a, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11a, 4)]
[ ---  CBRANCH (ram, 0x1cadd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (unique, 0x3800, 8) , (unique, 0x100000fd, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000fd, 8) COPY (const, 0x28dacb, 8)]
[ ---  CBRANCH (ram, 0x1caf40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x195, 4)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x195, 4)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x195, 4)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x195, 4)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x195, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x195, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x133, 4)]
[(ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x133, 4)]
[(ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x133, 4)]
[(ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x133, 4)]
[(ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x133, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1caf99, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1caf45, 1)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x1caf9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) INT_ADD (unique, 0x10000189, 8) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x10000189, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1cae53, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xfffffffe, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c5e98, 8) COPY (ram, 0x4c5e98, 8)]
[(ram, 0x4c5ea0, 8) COPY (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5ea8, 1) COPY (ram, 0x4c5ea8, 1)]
[(ram, 0x4c8830, 1) COPY (ram, 0x4c8830, 1)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4)]
[(register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  BRANCH (ram, 0x1caf45, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (register, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (unique, 0x100001a1, 8) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x100001a1, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x170, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5e98, 8) COPY (ram, 0x4c5e98, 8), (ram, 0x4c5e98, 8) INDIRECT (ram, 0x4c5e98, 8) , (const, 0x170, 4), (ram, 0x4c5e98, 8) MULTIEQUAL (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8) , (ram, 0x4c5e98, 8)]
[(ram, 0x4c5ea0, 8) COPY (ram, 0x4c5ea0, 8), (ram, 0x4c5ea0, 8) INDIRECT (ram, 0x4c5ea0, 8) , (const, 0x170, 4), (ram, 0x4c5ea0, 8) MULTIEQUAL (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8) , (ram, 0x4c5ea0, 8)]
[(ram, 0x4c5ea8, 1) COPY (ram, 0x4c5ea8, 1), (ram, 0x4c5ea8, 1) INDIRECT (ram, 0x4c5ea8, 1) , (const, 0x170, 4), (ram, 0x4c5ea8, 1) MULTIEQUAL (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1) , (ram, 0x4c5ea8, 1)]
[(ram, 0x4c8830, 1) COPY (ram, 0x4c8830, 1), (ram, 0x4c8830, 1) INDIRECT (ram, 0x4c8830, 1) , (const, 0x170, 4), (ram, 0x4c8830, 1) MULTIEQUAL (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1) , (ram, 0x4c8830, 1)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x170, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
