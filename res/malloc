[(unique, 0x10000307, 8) COPY (ram, 0x4ead78, 8)]
[ ---  CBRANCH (ram, 0x197270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000317, 8), (unique, 0x10000317, 8) CAST (ram, 0x4eaee0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x399, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x399, 4)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x399, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x399, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x399, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x399, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x399, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x399, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x399, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000326, 8), (unique, 0x10000326, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x10000223, 8), (unique, 0x10000223, 8) INT_ADD (unique, 0x100002ff, 8) , (stack, 0x0, 1), (unique, 0x100002ff, 8) INT_LEFT (unique, 0x100002f7, 8) , (const, 0x8, 8), (unique, 0x100002f7, 8) INT_SEXT (unique, 0x1000031f, 7), (unique, 0x1000031f, 7) CAST (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x1971a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x17, 8)]
[(unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  BRANCH (ram, 0x19709e, 1)]
[(unique, 0x10000230, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[(unique, 0x1000022c, 1) MULTIEQUAL (unique, 0x10000230, 1) , (unique, 0xc800, 1)]
[ ---  CBRANCH (ram, 0x197280, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197280, 1) , (unique, 0x1000022c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000032e, 8) , (const, 0xc, 4), (unique, 0x1000032e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x371, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x371, 4)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x371, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x371, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x371, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x371, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x371, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x371, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x371, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x4, 4), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x1971b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000336, 8), (unique, 0x10000336, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1970dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead80, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x346, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x346, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x346, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x346, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x346, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x346, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x346, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x346, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x346, 4)]
[ ---  CALL (ram, 0x196460, 8)]
[ ---  CBRANCH (ram, 0x1970dc, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x346, 4)]
[ ---  CBRANCH (ram, 0x1970dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033e, 8), (unique, 0x1000033e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000307, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1971f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1970dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000346, 8), (unique, 0x10000346, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x40, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x197220, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x40, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb7d, 8)]
[ ---  CBRANCH (ram, 0x19724c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034e, 8), (unique, 0x1000034e, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b4db5, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b90a8, 8)]
[ ---  BRANCH (ram, 0x197170, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0xff, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000035e, 8), (unique, 0x1000035e, 8) INT_ADD (register, 0x8, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2fc, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2f3, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2fc, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2f3, 4)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2fc, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2fc, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2fc, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fc, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2fc, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2fc, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2fc, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2f3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x197298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0xa5, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xa5, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0xa5, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xa5, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xa5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa5, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0xa5, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xa5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa5, 4)]
[ ---  CBRANCH (ram, 0x197260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000366, 8), (unique, 0x10000366, 8) CALL (ram, 0x1942d0, 8) , (unique, 0x10000286, 8) , (register, 0x38, 8), (unique, 0x10000286, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b6, 8) , (const, 0x0, 8), (unique, 0x100000b6, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x197212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000be, 8) , (const, 0x0, 8), (unique, 0x100000be, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x197212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000376, 8), (unique, 0x10000376, 8) INT_AND (unique, 0x1000036e, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x1000036e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xbf3, 8)]
[ ---  CBRANCH (ram, 0x197162, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8d18, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b9038, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1973a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000386, 8), (unique, 0x10000386, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead70, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x29a, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x29a, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x29a, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x29a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x29a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x29a, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x29a, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x29a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x29a, 4)]
[ ---  CBRANCH (ram, 0x1972e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) CALL (ram, 0x191da0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2ba, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2ba, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2ba, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2ba, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2ba, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ba, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2ba, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2ba, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ba, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b4, 4)]
[ ---  CBRANCH (ram, 0x1973fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) CALL (ram, 0x1942d0, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x10000396, 8), (unique, 0x10000396, 8) CALL (ram, 0x1916e0, 8) , (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1973fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1972c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x296, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x296, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x296, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x296, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x296, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x296, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x296, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x296, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x296, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x19c, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x19c, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x19c, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x19c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x19c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19c, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x19c, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x19c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x19c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1972e2, 1)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x279, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x279, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x279, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x279, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x279, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x279, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x279, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x279, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x279, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1a4, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x1a4, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x1a4, 4), (ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1a4, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1a4, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x1a4, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x1a4, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a4, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x1973e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003a6, 8), (unique, 0x100003a6, 8) CALL (ram, 0x1942d0, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x260, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x25a, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x260, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x25a, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x260, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x25a, 4), (ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x260, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x25a, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x260, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x25a, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x260, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x260, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x25a, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x260, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x25a, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x260, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25a, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(register, 0x0, 8) CAST (unique, 0x100003b6, 8), (unique, 0x100003b6, 8) CALL (ram, 0x1942d0, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) CALL (ram, 0x191fc0, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197326, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19730a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x24b, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x24b, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x24b, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x24b, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x24b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24b, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x24b, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x24b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x24b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1bf, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x1bf, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x1bf, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1bf, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1bf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bf, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x1bf, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x1bf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0x100002af, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(unique, 0x100002b7, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(unique, 0x100002bf, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(unique, 0x100002c7, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x100002cf, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x100002d7, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002df, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(unique, 0x100002e7, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(unique, 0x100002ef, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x197326, 1) , (unique, 0x100002ae, 1), (unique, 0x100002ae, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x100002af, 8) , (const, 0x23d, 4)]
[(ram, 0x4ead78, 8) INDIRECT (unique, 0x100002b7, 8) , (const, 0x23d, 4)]
[(ram, 0x4ead80, 8) INDIRECT (unique, 0x100002bf, 8) , (const, 0x23d, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x100002c7, 8) , (const, 0x23d, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x100002cf, 8) , (const, 0x23d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100002d7, 8) , (const, 0x23d, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (unique, 0x100002df, 8) , (const, 0x23d, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (unique, 0x100002e7, 8) , (const, 0x23d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100002ef, 4) , (const, 0x23d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0x28, 8)]
[(unique, 0x1000030f, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x23d, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x100002ef, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (unique, 0x100002e7, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (unique, 0x100002df, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100002d7, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x100002cf, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x100002c7, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (unique, 0x100002bf, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (unique, 0x100002b7, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (unique, 0x100002af, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000030f, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001ba, 8) , (const, 0x0, 8), (unique, 0x100001ba, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x197353, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c2, 8) , (const, 0x0, 8), (unique, 0x100001c2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) INT_AND (unique, 0x100003be, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100003be, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x197212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x28, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xc07, 8)]
[ ---  CBRANCH (ram, 0x197388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8d80, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b9038, 8)]
[ ---  BRANCH (ram, 0x197170, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000276, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x1000026e, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000266, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x10000276, 8) COPY (const, 0x2b8758, 8), (unique, 0x1000026e, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000266, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003d6, 8), (unique, 0x100003d6, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x124, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x136, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x133, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x124, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x136, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x133, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x124, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x136, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x133, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x124, 4), (ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x136, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x133, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x124, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x136, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x133, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x124, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x136, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x133, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x124, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x136, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x133, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x124, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x136, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x133, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x124, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x136, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x133, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x124, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
