[ ---  CBRANCH (ram, 0x4266c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5790, 8) , (const, 0x0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2b8, 4)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x2b8, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) CALLIND (unique, 0x100001f5, 8) , (register, 0x38, 8) , (unique, 0x10000155, 8), (unique, 0x100001f5, 8) CAST (ram, 0x4c5790, 8), (unique, 0x10000155, 8) INT_ADD (unique, 0x100001e6, 8) , (stack, 0x0, 1), (unique, 0x100001e6, 8) INT_LEFT (unique, 0x100001de, 8) , (const, 0x8, 8), (unique, 0x100001de, 8) INT_SEXT (unique, 0x100001ee, 7), (unique, 0x100001ee, 7) CAST (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x4266a0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000205, 8) , (const, 0x0, 8), (unique, 0x10000205, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2a4, 4)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x2a4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426600, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1f, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x17, 8)]
[(register, 0x18, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  BRANCH (ram, 0x426584, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x426618, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000215, 8), (unique, 0x10000215, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x4265a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffd0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24b, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x24b, 4)]
[ ---  CALL (ram, 0x424e50, 8)]
[ ---  CBRANCH (ram, 0x4265a3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x24b, 4)]
[ ---  CBRANCH (ram, 0x4265a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000225, 8), (unique, 0x10000225, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x426650, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4265a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000022d, 8), (unique, 0x1000022d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) CAST (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 2), (register, 0x10, 2) INT_ADD (unique, 0xbc00, 2) , (const, 0xffff, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x238, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x235, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x233, 4)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x238, 4), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x235, 4), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x233, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[ ---  CBRANCH (ram, 0x4266d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000245, 8), (unique, 0x10000245, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x62, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x62, 4)]
[ ---  CBRANCH (ram, 0x426690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) CALL (ram, 0x423fd0, 8) , (unique, 0x100001a1, 8) , (register, 0x38, 8), (unique, 0x100001a1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4265f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000009c, 8) , (const, 0x0, 8), (unique, 0x1000009c, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4265f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000a4, 8) , (const, 0x0, 8), (unique, 0x100000a4, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x426836, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x10000199, 8), (unique, 0x10000199, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) INT_AND (unique, 0x10000255, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000255, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000179, 8) , (unique, 0x10000171, 8) , (const, 0xbf3, 8) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) COPY (const, 0x49c268, 8), (unique, 0x10000179, 8) COPY (const, 0x49bf48, 8), (unique, 0x10000171, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xb0, 4)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0xb0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4267a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000265, 8), (unique, 0x10000265, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001a9, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100001a9, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1d6, 4)]
[ ---  CBRANCH (ram, 0x4266fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) CALL (ram, 0x421c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f0, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1f6, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1f0, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1f6, 4), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1f0, 4)]
[ ---  CBRANCH (ram, 0x4267fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CALL (ram, 0x423fd0, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) CALL (ram, 0x422050, 8) , (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42672a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1cd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d2, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1d2, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1d2, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4266fe, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xf8, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0xf8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfd, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xfd, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0xfd, 4), (ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[ ---  CBRANCH (ram, 0x4267e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) CALL (ram, 0x423fd0, 8) , (register, 0xa0, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1a1, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x19b, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x1a1, 4), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x19b, 4), (ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000029d, 8), (unique, 0x1000029d, 8) CALL (ram, 0x423fd0, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x10000295, 8), (unique, 0x10000295, 8) CALL (ram, 0x4225f0, 8) , (register, 0xa0, 8) , (register, 0x38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42672a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x42680b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x178, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x178, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42672a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x42672a, 1)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x11e, 4)]
[(ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x11e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(ram, 0x4c5790, 8) MULTIEQUAL (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8) , (ram, 0x4c5790, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4265f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e9, 8) , (const, 0x0, 8), (unique, 0x100000e9, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x426757, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f1, 8) , (const, 0x0, 8), (unique, 0x100000f1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) INT_AND (unique, 0x100002ad, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100002ad, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4265f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002bd, 8) , (register, 0xa0, 8), (unique, 0x100002bd, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000181, 8) , (unique, 0x10000169, 8) , (const, 0xc07, 8) , (unique, 0x10000189, 8), (unique, 0x10000189, 8) COPY (const, 0x49c268, 8), (unique, 0x10000181, 8) COPY (const, 0x49bfb0, 8), (unique, 0x10000169, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x168, 4)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8), (ram, 0x4c5790, 8) INDIRECT (ram, 0x4c5790, 8) , (const, 0x168, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5790, 8) COPY (ram, 0x4c5790, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
