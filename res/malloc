[ ---  CBRANCH (ram, 0x1836b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000169, 8), (unique, 0x10000169, 8) CAST (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x19b, 4)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x19b, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x19b, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x1000010a, 8), (unique, 0x1000010a, 8) INT_ADD (unique, 0x10000159, 8) , (stack, 0x0, 1), (unique, 0x10000159, 8) INT_LEFT (unique, 0x10000151, 8) , (const, 0x8, 8), (unique, 0x10000151, 8) INT_SEXT (unique, 0x10000171, 7), (unique, 0x10000171, 7) CAST (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x183588, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000180, 8), (unique, 0x10000180, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2d90, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x183620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x3d, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x3d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3d, 4)]
[ ---  CBRANCH (ram, 0x183660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000188, 8), (unique, 0x10000188, 8) CALL (ram, 0x17d8c0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x125, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x11f, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x125, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x11f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x125, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x11f, 4)]
[ ---  CBRANCH (ram, 0x1836a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000198, 8), (unique, 0x10000198, 8) CALL (ram, 0x181400, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x10000190, 8), (unique, 0x10000190, 8) CALL (ram, 0x17dae0, 8) , (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1836a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183636, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x189, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x189, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x189, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x15b, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x15b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x15b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x183651, 1)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x16c, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x16c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x16c, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x4d, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x4d, 4), (ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4d, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x183688, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) CALL (ram, 0x181400, 8) , (register, 0x18, 8) , (register, 0x38, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x104, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xfe, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x104, 4), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0xfe, 4), (ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x104, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xfe, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) CALL (ram, 0x181400, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) CALL (ram, 0x17dff0, 8) , (register, 0x18, 8) , (register, 0x38, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1835b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1835c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xef, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0xef, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x68, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0x68, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x68, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x1000013c, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(unique, 0x10000144, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (ram, 0x4c2ef0, 8)]
[(unique, 0x1000014c, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x1835da, 1) , (unique, 0x1000013b, 1), (unique, 0x1000013b, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (unique, 0x1000013c, 8) , (const, 0xe1, 4)]
[(ram, 0x4c2ef0, 8) INDIRECT (unique, 0x10000144, 8) , (const, 0xe1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000014c, 4) , (const, 0xe1, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0x18, 8)]
[(unique, 0x10000161, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0xe1, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x1000014c, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2ef0, 8) MULTIEQUAL (ram, 0x4c2ef0, 8) , (unique, 0x10000144, 8) , (ram, 0x4c2ef0, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (unique, 0x1000013c, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1836c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000161, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x18360f, 1)]
[ ---  CBRANCH (ram, 0x18360c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000009e, 8) , (const, 0x0, 8), (unique, 0x1000009e, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) INT_ADD (unique, 0x100001b8, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001b8, 8) CAST (register, 0x10, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  CBRANCH (ram, 0x183603, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a6, 8) , (const, 0x0, 8), (unique, 0x100000a6, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001d0, 8), (unique, 0x100001d0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x100001c8, 8) , (const, 0x10, 8), (unique, 0x100001c8, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1836cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x18, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x10000123, 8) , (unique, 0x1000011b, 8) , (const, 0xb70, 8) , (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) COPY (const, 0x291140, 8), (unique, 0x10000123, 8) COPY (const, 0x290c60, 8), (unique, 0x1000011b, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xc7, 4)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8), (ram, 0x4c2ef0, 8) INDIRECT (ram, 0x4c2ef0, 8) , (const, 0xc7, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc7, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8)]
[(ram, 0x4c2ef0, 8) COPY (ram, 0x4c2ef0, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
