[ ---  CBRANCH (ram, 0x134850, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x33, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7ff, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10000015, 8) , (const, 0x0, 4), (unique, 0x10000015, 8) INT_SRIGHT (unique, 0x1000001d, 8) , (const, 0x34, 4), (unique, 0x1000001d, 8) CAST (register, 0x1200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x134888, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x400, 4)]
[ ---  CBRANCH (ram, 0x13485c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x10000025, 8) , (const, 0xfffffffffffff, 8), (unique, 0x10000025, 8) CAST (register, 0x1200, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000035, 8), (unique, 0x10000035, 8) INT_AND (unique, 0x1000002d, 8) , (const, 0x8000000000000000, 8), (unique, 0x1000002d, 8) CAST (register, 0x1200, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x1200, 8), (register, 0x1200, 8) COPY (register, 0x1200, 8), (register, 0x1200, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x1200, 8)]
[(register, 0x1200, 8) COPY (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x1348a0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x134870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (unique, 0x1000003d, 8), (unique, 0x1000003d, 8) CAST (register, 0x1200, 8), (register, 0x10, 8) INT_RIGHT (const, 0xfffffffffffff, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x1200, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x1200, 8), (register, 0x1200, 8) COPY (unique, 0x1000004d, 8), (unique, 0x1000004d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000045, 8) , (const, 0x8000000000000000, 8), (unique, 0x10000045, 8) CAST (register, 0x1200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000005d, 8), (unique, 0x1000005d, 8) INT_AND (unique, 0x10000055, 8) , (register, 0x10, 8), (unique, 0x10000055, 8) CAST (register, 0x1200, 8), (register, 0x10, 8) INT_NEGATE (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x1200, 8), (register, 0x1200, 8) COPY (register, 0x1200, 8), (register, 0x1200, 8) FLOAT_SUB (register, 0x1200, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000005d, 8), (unique, 0x1000005d, 8) INT_AND (unique, 0x10000055, 8) , (register, 0x10, 8), (unique, 0x10000055, 8) CAST (register, 0x1200, 8), (register, 0x10, 8) INT_NEGATE (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x1000006d, 8), (unique, 0x1000006d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000065, 8) , (const, 0x8000000000000000, 8), (unique, 0x10000065, 8) CAST (register, 0x1200, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x1200, 8)]
