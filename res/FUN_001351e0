[(unique, 0x100000a7, 8) COPY (ram, 0x4ea9c8, 8)]
[ ---  CBRANCH (ram, 0x1352e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x154, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x154, 4)]
[ ---  CBRANCH (ram, 0x1352be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000df, 8), (unique, 0x100000df, 8) CALL (ram, 0x1212c0, 8) , (const, 0x4, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d0, 8) COPY (ram, 0x4ea9d0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f7369, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x164, 4), (ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x162, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x164, 4), (ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x162, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x100000ef, 8), (unique, 0x100000ef, 8) INT_ADD (unique, 0x100000e7, 8) , (const, 0x3, 8), (unique, 0x100000e7, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1352a2, 1)]
[(unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10000096, 1) COPY (const, 0x1, 1)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x100000d7, 8) COPY (register, 0x38, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000095, 1) MULTIEQUAL (unique, 0x10000096, 1) , (unique, 0x10000093, 1)]
[ ---  CBRANCH (ram, 0x13522a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4ea9c8, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000d7, 8) , (register, 0x10, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x13522a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0x10000094, 1) COPY (const, 0x0, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000093, 1) MULTIEQUAL (unique, 0x10000095, 1) , (unique, 0x10000095, 1) , (unique, 0x10000094, 1)]
[ ---  CBRANCH (ram, 0x135210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1352b0, 1) , (unique, 0x10000093, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x140, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x140, 4)]
[ ---  CBRANCH (ram, 0x1352c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d0, 8) COPY (ram, 0x4ea9d0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x14d, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x14d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f7369, 4)]
[(unique, 0x100000c7, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000107, 8), (unique, 0x10000107, 8) INT_ADD (unique, 0x100000ff, 8) , (const, 0x3, 8), (unique, 0x100000ff, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x13524b, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x8d, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x8d, 4)]
[(unique, 0x100000cf, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000010f, 8), (unique, 0x1000010f, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1352be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000010f, 8), (unique, 0x1000010f, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d0, 8) COPY (ram, 0x4ea9d0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100000c7, 8) , (unique, 0x100000cf, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100000af, 8) COPY (ram, 0x4ea9d0, 8), (ram, 0x4ea9d0, 8) MULTIEQUAL (ram, 0x4ea9d0, 8) , (ram, 0x4ea9d0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x135275, 1)]
[(ram, 0x4ea9d0, 8) MULTIEQUAL (ram, 0x4ea9d0, 8) , (ram, 0x4ea9d0, 8) , (ram, 0x4ea9d0, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x135260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000a7, 8) , (unique, 0x1000009b, 8) , (const, 0x1, 8), (unique, 0x1000009b, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x2, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100000b7, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13526c, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x30, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0xdc, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0xdc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000117, 8) , (unique, 0xbb00, 1), (unique, 0x10000117, 8) CAST (register, 0x8, 8)]
[(register, 0x8, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) INT_ADD (unique, 0x1000011f, 8) , (const, 0x1, 8), (unique, 0x1000011f, 8) CAST (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x135275, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x121, 4)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0x121, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000147, 8) , (register, 0x30, 1), (unique, 0x10000147, 8) CAST (register, 0x8, 8), (register, 0x30, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000af, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[(unique, 0x100000bf, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (unique, 0x10000137, 8) , (const, 0x1, 8), (unique, 0x10000137, 8) CAST (register, 0x8, 8)]
[(ram, 0x4ea9d0, 8) MULTIEQUAL (ram, 0x4ea9d0, 8) , (ram, 0x4ea9d0, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100000b7, 8) , (unique, 0x100000bf, 8)]
[ ---  CBRANCH (ram, 0x13529f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0xf3, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d0, 8) INDIRECT (ram, 0x4ea9d0, 8) , (const, 0xf3, 4), (ram, 0x4ea9d0, 8) MULTIEQUAL (ram, 0x4ea9d0, 8) , (ram, 0x4ea9d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014f, 8) , (const, 0x0, 1), (unique, 0x1000014f, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d0, 8) COPY (ram, 0x4ea9d0, 8), (ram, 0x4ea9d0, 8) MULTIEQUAL (ram, 0x4ea9d0, 8) , (ram, 0x4ea9d0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
