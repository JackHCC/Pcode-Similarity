[ ---  CBRANCH (ram, 0x1df438, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x63, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1df438, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100000f5, 8), (unique, 0x100000f5, 8) INT_ADD (register, 0x30, 8) , (const, 0x350, 8)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xa8, 8) INT_ZEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1df381, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5d, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x5d, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x5d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x5d, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0880, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0880, 8) , (const, 0x11, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1df450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x124, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x131, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x124, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x131, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x124, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x131, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x124, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000115, 8), (unique, 0x10000115, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8), (register, 0x0, 8) CALL (ram, 0x1211e0, 8) , (const, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1df431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1211e0, 8) , (const, 0x30, 8) , (const, 0x1, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x136, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x136, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x136, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100000b5, 8), (unique, 0x100000b5, 8) PTRSUB (const, 0x0, 8) , (const, 0x1df640, 8), (unique, 0x3100, 8) CAST (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1df38e, 1)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1df428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) INT_ADD (unique, 0x10000125, 8) , (const, 0x2c, 8), (unique, 0x10000125, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x7f, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x7f, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x7f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x10000145, 8), (unique, 0x10000145, 8) INT_ADD (unique, 0x1000013d, 8) , (const, 0x2c, 8), (unique, 0x1000013d, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1df428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000135, 8), (unique, 0x10000135, 8) INT_ADD (register, 0x30, 8) , (const, 0x350, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[ ---  CBRANCH (ram, 0x1df3eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000155, 8), (unique, 0x10000155, 8) INT_ADD (unique, 0x1000014d, 8) , (const, 0x20, 8), (unique, 0x1000014d, 8) CAST (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8d, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x9a, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x8d, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x9a, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x8d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x9a, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x8d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) INT_ADD (unique, 0x10000165, 8) , (const, 0x20, 8), (unique, 0x10000165, 8) CAST (register, 0x28, 8), (register, 0x0, 8) CAST (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) CALL (ram, 0x1212c0, 8) , (const, 0x320, 8)]
[ ---  CBRANCH (ram, 0x1df431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000015d, 8), (unique, 0x1000015d, 8) CALL (ram, 0x1212c0, 8) , (const, 0x320, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1df3ef, 1)]
[(unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x64, 8) , (const, 0x8, 8)]
[(unique, 0x100000ed, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100000ed, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb7, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xb7, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xa0, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xb7, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xa0, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xb7, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xa0, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121010, 8) , (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1df3d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (unique, 0x3200, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100000ed, 8) , (register, 0x28, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xb0, 8) , (register, 0xa8, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1df416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xf8, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xf8, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xf8, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000bd, 8), (unique, 0x100000bd, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000175, 8), (unique, 0x10000175, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0888, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0888, 8) , (const, 0x11, 4)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8)]
