[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x67, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0x1000, 10) INDIRECT (register, 0x1000, 10) , (const, 0x67, 4)]
[(register, 0x100a, 10) INDIRECT (register, 0x100a, 10) , (const, 0x67, 4)]
[(stack, 0x0, 8) INDIRECT (stack, 0x0, 8) , (const, 0x67, 4)]
[(stack, 0x10, 1) INDIRECT (stack, 0x10, 1) , (const, 0x67, 4), (stack, 0x10, 1) SUBPIECE (stack, 0x10, 8) , (const, 0x0, 4)]
[(stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x67, 4), (stack, 0xfffffffffffffc58, 8) COPY (const, 0x48763e, 8)]
[(stack, 0xfffffffffffffc78, 8) INDIRECT (unique, 0x1000071e, 8) , (const, 0x67, 4), (unique, 0x1000071e, 8) COPY (register, 0x8, 8)]
[(stack, 0xfffffffffffffc80, 8) INDIRECT (unique, 0x10000726, 8) , (const, 0x67, 4), (unique, 0x10000726, 8) COPY (register, 0x30, 8)]
[(stack, 0xfffffffffffffc88, 8) INDIRECT (unique, 0x1000072e, 8) , (const, 0x67, 4), (unique, 0x1000072e, 8) COPY (register, 0x38, 8)]
[(stack, 0xfffffffffffffc98, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x67, 4), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x10, 8)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (register, 0x20, 8) , (const, 0x67, 4), (register, 0x20, 8) PTRADD (unique, 0x10000406, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000406, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc58, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000776, 8), (unique, 0x10000776, 8) CALL (ram, 0x48c630, 8) , (stack, 0x0, 8) , (stack, 0x8, 8) , (stack, 0x10, 8) , (register, 0x20, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x20, 8) PTRADD (unique, 0x1000041e, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x1000041e, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc58, 8)]
[(unique, 0x100006ce, 8) COPY (stack, 0xfffffffffffffc70, 8), (stack, 0xfffffffffffffc70, 8) INDIRECT (unique, 0x10000716, 8) , (const, 0x67, 4), (unique, 0x10000716, 8) COPY (register, 0x88, 8)]
[(unique, 0x100006c6, 8) COPY (stack, 0xfffffffffffffc68, 8), (stack, 0xfffffffffffffc68, 8) INDIRECT (unique, 0x1000070e, 8) , (const, 0x67, 4), (unique, 0x1000070e, 8) COPY (register, 0x80, 8)]
[(unique, 0x100006be, 8) COPY (stack, 0xfffffffffffffc60, 8), (stack, 0xfffffffffffffc60, 8) INDIRECT (unique, 0x10000706, 8) , (const, 0x67, 4), (unique, 0x10000706, 8) COPY (register, 0x10, 8)]
[(stack, 0xfffffffffffffca0, 4) SUBPIECE (stack, 0xfffffffffffffca0, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffca0, 16) INDIRECT (unique, 0x10000024, 16) , (const, 0x67, 4), (unique, 0x10000024, 16) INT_ADD (unique, 0x10000486, 16) , (unique, 0x1000003c, 12), (unique, 0x10000486, 16) INT_LEFT (unique, 0x10000476, 16) , (const, 0x60, 16), (unique, 0x10000476, 16) INT_SEXT (unique, 0x1000073a, 4), (unique, 0x1000073a, 4) CAST (register, 0x120c, 4), (unique, 0x1000003c, 12) INT_ADD (unique, 0x1000046a, 12) , (register, 0x1200, 8), (unique, 0x1000046a, 12) INT_LEFT (unique, 0x1000045e, 12) , (const, 0x40, 12), (unique, 0x1000045e, 12) INT_SEXT (unique, 0x10000736, 4), (unique, 0x10000736, 4) CAST (register, 0x1208, 4)]
[(stack, 0xfffffffffffffcb0, 4) SUBPIECE (stack, 0xfffffffffffffcb0, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffcb0, 16) INDIRECT (unique, 0x1000006c, 16) , (const, 0x67, 4), (unique, 0x1000006c, 16) INT_ADD (unique, 0x100004be, 16) , (unique, 0x10000084, 12), (unique, 0x100004be, 16) INT_LEFT (unique, 0x100004ae, 16) , (const, 0x60, 16), (unique, 0x100004ae, 16) INT_SEXT (unique, 0x10000742, 4), (unique, 0x10000742, 4) CAST (register, 0x122c, 4), (unique, 0x10000084, 12) INT_ADD (unique, 0x100004a2, 12) , (register, 0x1220, 8), (unique, 0x100004a2, 12) INT_LEFT (unique, 0x10000496, 12) , (const, 0x40, 12), (unique, 0x10000496, 12) INT_SEXT (unique, 0x1000073e, 4), (unique, 0x1000073e, 4) CAST (register, 0x1228, 4)]
[(stack, 0xfffffffffffffcb4, 4) SUBPIECE (stack, 0xfffffffffffffcb0, 16) , (const, 0x4, 8), (stack, 0xfffffffffffffcb0, 16) INDIRECT (unique, 0x1000006c, 16) , (const, 0x67, 4), (unique, 0x1000006c, 16) INT_ADD (unique, 0x100004be, 16) , (unique, 0x10000084, 12), (unique, 0x100004be, 16) INT_LEFT (unique, 0x100004ae, 16) , (const, 0x60, 16), (unique, 0x100004ae, 16) INT_SEXT (unique, 0x10000742, 4), (unique, 0x10000742, 4) CAST (register, 0x122c, 4), (unique, 0x10000084, 12) INT_ADD (unique, 0x100004a2, 12) , (register, 0x1220, 8), (unique, 0x100004a2, 12) INT_LEFT (unique, 0x10000496, 12) , (const, 0x40, 12), (unique, 0x10000496, 12) INT_SEXT (unique, 0x1000073e, 4), (unique, 0x1000073e, 4) CAST (register, 0x1228, 4)]
[(stack, 0xfffffffffffffcb8, 4) SUBPIECE (stack, 0xfffffffffffffcb0, 16) , (const, 0x8, 8), (stack, 0xfffffffffffffcb0, 16) INDIRECT (unique, 0x1000006c, 16) , (const, 0x67, 4), (unique, 0x1000006c, 16) INT_ADD (unique, 0x100004be, 16) , (unique, 0x10000084, 12), (unique, 0x100004be, 16) INT_LEFT (unique, 0x100004ae, 16) , (const, 0x60, 16), (unique, 0x100004ae, 16) INT_SEXT (unique, 0x10000742, 4), (unique, 0x10000742, 4) CAST (register, 0x122c, 4), (unique, 0x10000084, 12) INT_ADD (unique, 0x100004a2, 12) , (register, 0x1220, 8), (unique, 0x100004a2, 12) INT_LEFT (unique, 0x10000496, 12) , (const, 0x40, 12), (unique, 0x10000496, 12) INT_SEXT (unique, 0x1000073e, 4), (unique, 0x1000073e, 4) CAST (register, 0x1228, 4)]
[(stack, 0xfffffffffffffcbc, 4) SUBPIECE (stack, 0xfffffffffffffcb0, 16) , (const, 0xc, 8), (stack, 0xfffffffffffffcb0, 16) INDIRECT (unique, 0x1000006c, 16) , (const, 0x67, 4), (unique, 0x1000006c, 16) INT_ADD (unique, 0x100004be, 16) , (unique, 0x10000084, 12), (unique, 0x100004be, 16) INT_LEFT (unique, 0x100004ae, 16) , (const, 0x60, 16), (unique, 0x100004ae, 16) INT_SEXT (unique, 0x10000742, 4), (unique, 0x10000742, 4) CAST (register, 0x122c, 4), (unique, 0x10000084, 12) INT_ADD (unique, 0x100004a2, 12) , (register, 0x1220, 8), (unique, 0x100004a2, 12) INT_LEFT (unique, 0x10000496, 12) , (const, 0x40, 12), (unique, 0x10000496, 12) INT_SEXT (unique, 0x1000073e, 4), (unique, 0x1000073e, 4) CAST (register, 0x1228, 4)]
[(stack, 0xfffffffffffffcc0, 4) SUBPIECE (stack, 0xfffffffffffffcc0, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffcc0, 16) INDIRECT (unique, 0x100000b4, 16) , (const, 0x67, 4), (unique, 0x100000b4, 16) INT_ADD (unique, 0x100004f6, 16) , (unique, 0x100000cc, 12), (unique, 0x100004f6, 16) INT_LEFT (unique, 0x100004e6, 16) , (const, 0x60, 16), (unique, 0x100004e6, 16) INT_SEXT (unique, 0x1000074a, 4), (unique, 0x1000074a, 4) CAST (register, 0x124c, 4), (unique, 0x100000cc, 12) INT_ADD (unique, 0x100004da, 12) , (register, 0x1240, 8), (unique, 0x100004da, 12) INT_LEFT (unique, 0x100004ce, 12) , (const, 0x40, 12), (unique, 0x100004ce, 12) INT_SEXT (unique, 0x10000746, 4), (unique, 0x10000746, 4) CAST (register, 0x1248, 4)]
[(stack, 0xfffffffffffffcd0, 4) SUBPIECE (stack, 0xfffffffffffffcd0, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffcd0, 16) INDIRECT (unique, 0x100000d8, 16) , (const, 0x67, 4), (unique, 0x100000d8, 16) INT_ADD (unique, 0x1000052e, 16) , (unique, 0x100000f0, 12), (unique, 0x1000052e, 16) INT_LEFT (unique, 0x1000051e, 16) , (const, 0x60, 16), (unique, 0x1000051e, 16) INT_SEXT (unique, 0x10000752, 4), (unique, 0x10000752, 4) CAST (register, 0x126c, 4), (unique, 0x100000f0, 12) INT_ADD (unique, 0x10000512, 12) , (register, 0x1260, 8), (unique, 0x10000512, 12) INT_LEFT (unique, 0x10000506, 12) , (const, 0x40, 12), (unique, 0x10000506, 12) INT_SEXT (unique, 0x1000074e, 4), (unique, 0x1000074e, 4) CAST (register, 0x1268, 4)]
[(stack, 0xfffffffffffffce0, 4) SUBPIECE (stack, 0xfffffffffffffce0, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffce0, 16) INDIRECT (unique, 0x100000fc, 16) , (const, 0x67, 4), (unique, 0x100000fc, 16) INT_ADD (unique, 0x10000566, 16) , (unique, 0x10000114, 12), (unique, 0x10000566, 16) INT_LEFT (unique, 0x10000556, 16) , (const, 0x60, 16), (unique, 0x10000556, 16) INT_SEXT (unique, 0x1000075a, 4), (unique, 0x1000075a, 4) CAST (register, 0x128c, 4), (unique, 0x10000114, 12) INT_ADD (unique, 0x1000054a, 12) , (register, 0x1280, 8), (unique, 0x1000054a, 12) INT_LEFT (unique, 0x1000053e, 12) , (const, 0x40, 12), (unique, 0x1000053e, 12) INT_SEXT (unique, 0x10000756, 4), (unique, 0x10000756, 4) CAST (register, 0x1288, 4)]
[(stack, 0xfffffffffffffcf0, 4) SUBPIECE (stack, 0xfffffffffffffcf0, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffcf0, 16) INDIRECT (unique, 0x10000120, 16) , (const, 0x67, 4), (unique, 0x10000120, 16) INT_ADD (unique, 0x1000059e, 16) , (unique, 0x10000138, 12), (unique, 0x1000059e, 16) INT_LEFT (unique, 0x1000058e, 16) , (const, 0x60, 16), (unique, 0x1000058e, 16) INT_SEXT (unique, 0x10000762, 4), (unique, 0x10000762, 4) CAST (register, 0x12ac, 4), (unique, 0x10000138, 12) INT_ADD (unique, 0x10000582, 12) , (register, 0x12a0, 8), (unique, 0x10000582, 12) INT_LEFT (unique, 0x10000576, 12) , (const, 0x40, 12), (unique, 0x10000576, 12) INT_SEXT (unique, 0x1000075e, 4), (unique, 0x1000075e, 4) CAST (register, 0x12a8, 4)]
[(stack, 0xfffffffffffffd00, 4) SUBPIECE (stack, 0xfffffffffffffd00, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffd00, 16) INDIRECT (unique, 0x10000144, 16) , (const, 0x67, 4), (unique, 0x10000144, 16) INT_ADD (unique, 0x100005d6, 16) , (unique, 0x1000015c, 12), (unique, 0x100005d6, 16) INT_LEFT (unique, 0x100005c6, 16) , (const, 0x60, 16), (unique, 0x100005c6, 16) INT_SEXT (unique, 0x1000076a, 4), (unique, 0x1000076a, 4) CAST (register, 0x12cc, 4), (unique, 0x1000015c, 12) INT_ADD (unique, 0x100005ba, 12) , (register, 0x12c0, 8), (unique, 0x100005ba, 12) INT_LEFT (unique, 0x100005ae, 12) , (const, 0x40, 12), (unique, 0x100005ae, 12) INT_SEXT (unique, 0x10000766, 4), (unique, 0x10000766, 4) CAST (register, 0x12c8, 4)]
[(stack, 0xfffffffffffffd10, 4) SUBPIECE (stack, 0xfffffffffffffd10, 16) , (const, 0x0, 8), (stack, 0xfffffffffffffd10, 16) INDIRECT (unique, 0x10000168, 16) , (const, 0x67, 4), (unique, 0x10000168, 16) INT_ADD (unique, 0x1000060e, 16) , (unique, 0x10000180, 12), (unique, 0x1000060e, 16) INT_LEFT (unique, 0x100005fe, 16) , (const, 0x60, 16), (unique, 0x100005fe, 16) INT_SEXT (unique, 0x10000772, 4), (unique, 0x10000772, 4) CAST (register, 0x12ec, 4), (unique, 0x10000180, 12) INT_ADD (unique, 0x100005f2, 12) , (register, 0x12e0, 8), (unique, 0x100005f2, 12) INT_LEFT (unique, 0x100005e6, 12) , (const, 0x40, 12), (unique, 0x100005e6, 12) INT_SEXT (unique, 0x1000076e, 4), (unique, 0x1000076e, 4) CAST (register, 0x12e8, 4)]
[ ---  CBRANCH (ram, 0x4876d3, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (stack, 0xfffffffffffffff0, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x67, 4)]
[(unique, 0x100006e6, 8) COPY (unique, 0x1000078e, 8), (unique, 0x1000078e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x18, 8)]
[(unique, 0x100006f6, 8) COPY (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x10000786, 8), (unique, 0x10000786, 8) INT_ADD (unique, 0x1000077e, 8) , (unique, 0x10000436, 8), (unique, 0x1000077e, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc58, 8), (unique, 0x10000436, 8) INT_ADD (unique, 0x100001a4, 8) , (const, 0x8, 8), (unique, 0x100001a4, 8) INT_2COMP (register, 0x90, 8), (register, 0x90, 8) INT_AND (register, 0x90, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x90, 8) INT_ADD (stack, 0xfffffffffffffff0, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_RIGHT (register, 0x90, 8) , (const, 0x3, 4), (register, 0x90, 8) INT_AND (register, 0x90, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x90, 8) INT_ADD (stack, 0xfffffffffffffff0, 8) , (const, 0x8, 8)]
[(stack, 0xfffffffffffffff8, 8) MULTIEQUAL (stack, 0xfffffffffffffff8, 8) , (stack, 0xfffffffffffffff8, 8)]
[(stack, 0xfffffffffffffd10, 16) MULTIEQUAL (stack, 0xfffffffffffffd10, 16) , (stack, 0xfffffffffffffd10, 16)]
[(stack, 0xfffffffffffffd00, 16) MULTIEQUAL (stack, 0xfffffffffffffd00, 16) , (stack, 0xfffffffffffffd00, 16)]
[(stack, 0xfffffffffffffcf0, 16) MULTIEQUAL (stack, 0xfffffffffffffcf0, 16) , (stack, 0xfffffffffffffcf0, 16)]
[(stack, 0xfffffffffffffce0, 16) MULTIEQUAL (stack, 0xfffffffffffffce0, 16) , (stack, 0xfffffffffffffce0, 16)]
[(stack, 0xfffffffffffffcd0, 16) MULTIEQUAL (stack, 0xfffffffffffffcd0, 16) , (stack, 0xfffffffffffffcd0, 16)]
[(stack, 0xfffffffffffffcc0, 16) MULTIEQUAL (stack, 0xfffffffffffffcc0, 16) , (stack, 0xfffffffffffffcc0, 16)]
[(stack, 0xfffffffffffffcb0, 16) MULTIEQUAL (stack, 0xfffffffffffffcb0, 16) , (stack, 0xfffffffffffffcb0, 16)]
[(stack, 0xfffffffffffffca0, 16) MULTIEQUAL (stack, 0xfffffffffffffca0, 16) , (stack, 0xfffffffffffffca0, 16)]
[(stack, 0xfffffffffffffc98, 8) MULTIEQUAL (stack, 0xfffffffffffffc98, 8) , (stack, 0xfffffffffffffc98, 8)]
[(stack, 0xfffffffffffffc88, 8) MULTIEQUAL (stack, 0xfffffffffffffc88, 8) , (stack, 0xfffffffffffffc88, 8)]
[(stack, 0xfffffffffffffc80, 8) MULTIEQUAL (stack, 0xfffffffffffffc80, 8) , (stack, 0xfffffffffffffc80, 8)]
[(stack, 0xfffffffffffffc78, 8) MULTIEQUAL (stack, 0xfffffffffffffc78, 8) , (stack, 0xfffffffffffffc78, 8)]
[(stack, 0xfffffffffffffc70, 8) MULTIEQUAL (stack, 0xfffffffffffffc70, 8) , (stack, 0xfffffffffffffc70, 8)]
[(stack, 0xfffffffffffffc68, 8) MULTIEQUAL (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc68, 8)]
[(stack, 0xfffffffffffffc60, 8) MULTIEQUAL (stack, 0xfffffffffffffc60, 8) , (stack, 0xfffffffffffffc60, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100006f6, 8) , (unique, 0x100006fe, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100006e6, 8) , (unique, 0x100006ee, 8)]
[ ---  CBRANCH (ram, 0x4876ef, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x4876ff, 8), (register, 0x20, 8) CAST (unique, 0x1000079e, 8), (unique, 0x1000079e, 8) INT_ADD (unique, 0x10000796, 8) , (unique, 0x100001a4, 8), (unique, 0x10000796, 8) CAST (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (register, 0x0, 8), (register, 0x20, 8) CAST (unique, 0x100007b6, 8), (unique, 0x100007b6, 8) INT_ADD (unique, 0x100007ae, 8) , (const, 0xffffffffffffff10, 8), (unique, 0x100007ae, 8) CAST (stack, 0xfffffffffffffff8, 8), (register, 0x0, 8) SUBPIECE (VARIABLE, 0x0, 4) , (const, 0x0, 4), (VARIABLE, 0x0, 4) CALLIND (register, 0x0, 8) , (stack, 0xfffffffffffffca0, 4) , (stack, 0xfffffffffffffcb0, 4) , (stack, 0xfffffffffffffcc0, 4) , (stack, 0xfffffffffffffcd0, 4) , (stack, 0xfffffffffffffce0, 4) , (stack, 0xfffffffffffffcf0, 4) , (stack, 0xfffffffffffffd00, 4) , (stack, 0xfffffffffffffd10, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0x100006be, 8) , (unique, 0xbd80, 8) , (unique, 0x100006c6, 8) , (unique, 0x100006ce, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007ce, 8) , (register, 0x10, 8), (unique, 0x100007ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100006d6, 8) , (const, 0xffffffffffffff18, 8) , (const, 0x1, 8), (register, 0x10, 8) SUBPIECE (unique, 0x1000061e, 16) , (const, 0x0, 4), (unique, 0x1000061e, 16) INT_RIGHT (VARIABLE, 0x0, 4) , (const, 0x40, 4), (unique, 0x100006d6, 8) COPY (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (stack, 0xfffffffffffffff8, 8), (VARIABLE, 0x0, 4) CALLIND (register, 0x0, 8) , (stack, 0xfffffffffffffca0, 4) , (stack, 0xfffffffffffffcb0, 4) , (stack, 0xfffffffffffffcc0, 4) , (stack, 0xfffffffffffffcd0, 4) , (stack, 0xfffffffffffffce0, 4) , (stack, 0xfffffffffffffcf0, 4) , (stack, 0xfffffffffffffd00, 4) , (stack, 0xfffffffffffffd10, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0x100006be, 8) , (unique, 0xbd80, 8) , (unique, 0x100006c6, 8) , (unique, 0x100006ce, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000048, 16), (unique, 0x10000048, 16) INT_ADD (unique, 0x10000666, 16) , (unique, 0x10000060, 12), (unique, 0x10000666, 16) INT_LEFT (unique, 0x10000656, 16) , (const, 0x60, 16), (unique, 0x10000656, 16) INT_SEXT (unique, 0x100007e6, 4), (unique, 0x100007e6, 4) CAST (register, 0x120c, 4), (unique, 0x10000060, 12) INT_ADD (unique, 0x1000064a, 12) , (unique, 0x10000058, 8), (unique, 0x1000064a, 12) INT_LEFT (unique, 0x1000063e, 12) , (const, 0x40, 12), (unique, 0x1000063e, 12) INT_SEXT (unique, 0x100007e2, 4), (unique, 0x100007e2, 4) CAST (register, 0x1208, 4), (unique, 0x10000058, 8) INT_ADD (unique, 0x10000636, 8) , (register, 0x1200, 4), (unique, 0x10000636, 8) INT_LEFT (unique, 0x1000062e, 8) , (const, 0x20, 8), (unique, 0x1000062e, 8) INT_SEXT (unique, 0x100007de, 4), (unique, 0x100007de, 4) CAST (register, 0x1204, 4), (unique, 0x3100, 8) CAST (unique, 0x100007d6, 8), (unique, 0x100007d6, 8) PTRADD (unique, 0x100006d6, 8) , (const, 0xffffffffffffff20, 8) , (const, 0x1, 8), (unique, 0x100006d6, 8) COPY (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (register, 0x120c, 4) INDIRECT (const, 0x0, 4) , (const, 0x134, 4), (register, 0x1208, 4) INDIRECT (const, 0x0, 4) , (const, 0x134, 4), (register, 0x1204, 4) INDIRECT (const, 0x0, 4) , (const, 0x134, 4), (register, 0x1200, 4) INDIRECT (const, 0x0, 4) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000090, 16), (unique, 0x10000090, 16) INT_ADD (unique, 0x100006ae, 16) , (unique, 0x100000a8, 12), (unique, 0x100006ae, 16) INT_LEFT (unique, 0x1000069e, 16) , (const, 0x60, 16), (unique, 0x1000069e, 16) INT_SEXT (unique, 0x100007fa, 4), (unique, 0x100007fa, 4) CAST (register, 0x122c, 4), (unique, 0x100000a8, 12) INT_ADD (unique, 0x10000692, 12) , (unique, 0x100000a0, 8), (unique, 0x10000692, 12) INT_LEFT (unique, 0x10000686, 12) , (const, 0x40, 12), (unique, 0x10000686, 12) INT_SEXT (unique, 0x100007f6, 4), (unique, 0x100007f6, 4) CAST (register, 0x1228, 4), (unique, 0x100000a0, 8) INT_ADD (unique, 0x1000067e, 8) , (register, 0x1220, 4), (unique, 0x1000067e, 8) INT_LEFT (unique, 0x10000676, 8) , (const, 0x20, 8), (unique, 0x10000676, 8) INT_SEXT (unique, 0x100007f2, 4), (unique, 0x100007f2, 4) CAST (register, 0x1224, 4), (unique, 0x3100, 8) CAST (unique, 0x100007ea, 8), (unique, 0x100007ea, 8) PTRADD (unique, 0x100006d6, 8) , (const, 0xffffffffffffff30, 8) , (const, 0x1, 8), (unique, 0x100006d6, 8) COPY (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (register, 0x122c, 4) INDIRECT (stack, 0xfffffffffffffcbc, 4) , (const, 0x134, 4), (register, 0x1228, 4) INDIRECT (stack, 0xfffffffffffffcb8, 4) , (const, 0x134, 4), (register, 0x1224, 4) INDIRECT (stack, 0xfffffffffffffcb4, 4) , (const, 0x134, 4), (register, 0x1220, 4) INDIRECT (stack, 0xfffffffffffffcb0, 4) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007fe, 8) , (register, 0x1000, 10), (unique, 0x100007fe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100006d6, 8) , (const, 0xffffffffffffff40, 8) , (const, 0x1, 8), (unique, 0x100006d6, 8) COPY (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (register, 0x1000, 10) INDIRECT (register, 0x1000, 10) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000806, 8) , (register, 0x100a, 10), (unique, 0x10000806, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100006d6, 8) , (const, 0xffffffffffffff50, 8) , (const, 0x1, 8), (unique, 0x100006d6, 8) COPY (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (register, 0x100a, 10) INDIRECT (register, 0x100a, 10) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000816, 8) , (const, 0x487743, 8), (unique, 0x10000816, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100006d6, 8) , (const, 0xffffffffffffff08, 8) , (const, 0x1, 8), (unique, 0x100006d6, 8) COPY (unique, 0x100007a6, 8), (unique, 0x100007a6, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[(stack, 0x10, 1) INDIRECT (stack, 0x10, 1) , (const, 0x16e, 4), (stack, 0x10, 1) INDIRECT (stack, 0x10, 1) , (const, 0x134, 4)]
[(stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x16e, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x16d, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x15b, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x151, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x14c, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x149, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x146, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x143, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x134, 4), (stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x16e, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x16d, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[ ---  CALL (ram, 0x48c890, 8) , (stack, 0x0, 8) , (stack, 0x8, 8) , (unique, 0x100006de, 8), (unique, 0x100006de, 8) COPY (unique, 0x1000080e, 8), (unique, 0x1000080e, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x15b, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x151, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x14c, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x149, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x146, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x143, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (stack, 0x0, 8) INDIRECT (stack, 0x0, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) COPY (unique, 0x100001dc, 16), (unique, 0x100001dc, 16) LOAD (const, 0x1b1, 4) , (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x100007c6, 8), (unique, 0x100007c6, 8) INT_ADD (unique, 0x100007be, 8) , (const, 0xffffffffffffff10, 8), (unique, 0x100007be, 8) CAST (stack, 0xfffffffffffffff8, 8), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x134, 4), (stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0x127, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0x127, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100006ee, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100003b6, 8) , (const, 0x8, 8), (unique, 0x100003b6, 8) INT_ADD (unique, 0x100003ae, 8) , (const, 0x1, 8), (unique, 0x100003ae, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x100006fe, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000396, 8) , (const, 0x8, 8), (unique, 0x10000396, 8) INT_ADD (unique, 0x1000038e, 8) , (const, 0x1, 8), (unique, 0x1000038e, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4876ec, 1)]
[(stack, 0x10, 1) INDIRECT (stack, 0x10, 1) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc58, 8) INDIRECT (stack, 0xfffffffffffffc58, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc60, 8) INDIRECT (stack, 0xfffffffffffffc60, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc68, 8) INDIRECT (stack, 0xfffffffffffffc68, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc70, 8) INDIRECT (stack, 0xfffffffffffffc70, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc78, 8) INDIRECT (stack, 0xfffffffffffffc78, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc80, 8) INDIRECT (stack, 0xfffffffffffffc80, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc88, 8) INDIRECT (stack, 0xfffffffffffffc88, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffc98, 8) INDIRECT (stack, 0xfffffffffffffc98, 8) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffca0, 16) INDIRECT (stack, 0xfffffffffffffca0, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffcb0, 16) INDIRECT (stack, 0xfffffffffffffcb0, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffcc0, 16) INDIRECT (stack, 0xfffffffffffffcc0, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffcd0, 16) INDIRECT (stack, 0xfffffffffffffcd0, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffce0, 16) INDIRECT (stack, 0xfffffffffffffce0, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffcf0, 16) INDIRECT (stack, 0xfffffffffffffcf0, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffd00, 16) INDIRECT (stack, 0xfffffffffffffd00, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffd10, 16) INDIRECT (stack, 0xfffffffffffffd10, 16) , (const, 0xd3, 4)]
[(stack, 0xfffffffffffffff8, 8) INDIRECT (stack, 0xfffffffffffffff8, 8) , (const, 0xd3, 4)]
[ ---  RETURN (const, 0x1, 4) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) CALLIND (register, 0x0, 8) , (stack, 0xfffffffffffffca0, 4) , (stack, 0xfffffffffffffcb0, 4) , (stack, 0xfffffffffffffcc0, 4) , (stack, 0xfffffffffffffcd0, 4) , (stack, 0xfffffffffffffce0, 4) , (stack, 0xfffffffffffffcf0, 4) , (stack, 0xfffffffffffffd00, 4) , (stack, 0xfffffffffffffd10, 4) , (stack, 0xfffffffffffffc88, 8) , (stack, 0xfffffffffffffc80, 8) , (stack, 0xfffffffffffffc60, 8) , (stack, 0xfffffffffffffc78, 8) , (stack, 0xfffffffffffffc68, 8) , (stack, 0xfffffffffffffc70, 8)]
