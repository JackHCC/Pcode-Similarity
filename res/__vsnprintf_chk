[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000e0, 8), (unique, 0x100000e0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2321c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe2, 4)]
[ ---  CALL (ram, 0x232a00, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffff10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2321a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x3f, 8)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[ ---  BRANCH (ram, 0x232115, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x63, 4)]
[(stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x63, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x63, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x63, 4)]
[ ---  CALL (ram, 0x18eb50, 8) , (register, 0x20, 8) , (const, 0x8000, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff60, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7fa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x72, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x63, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (const, 0x0, 1), (register, 0xa0, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3200, 8)]
[ ---  CBRANCH (ram, 0x23214a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4)]
[(unique, 0xbd00, 4) INT_OR (stack, 0xfffffffffffffefc, 4) , (const, 0x4, 4)]
[ ---  CALL (ram, 0x190330, 8) , (register, 0x20, 8) , (register, 0xa0, 8) , (register, 0x28, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x91, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8b, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x91, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x8b, 4)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x91, 4), (stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0x8b, 4), (stack, 0xfffffffffffffefc, 4) MULTIEQUAL (stack, 0xfffffffffffffefc, 4) , (unique, 0xbd00, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x91, 4), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x91, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8b, 4)]
[ ---  CALL (ram, 0x15b390, 8) , (register, 0x20, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x23217f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffec0, 8) , (register, 0x18, 8), (register, 0x18, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x91, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x8b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xfffffffffffffeb0, 8) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x2321c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000e8, 8), (unique, 0x100000e8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffffefc, 4) INDIRECT (stack, 0xfffffffffffffefc, 4) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xd8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd8, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
