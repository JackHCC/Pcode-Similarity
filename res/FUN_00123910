[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000122, 8), (unique, 0x10000122, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x123a10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x123960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eca08, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf3, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xf3, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xf3, 4)]
[ ---  CALL (ram, 0x1246f0, 8)]
[(ram, 0x4eca08, 4) INT_OR (ram, 0x4eca08, 4) , (const, 0x2, 4), (ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0xf3, 4)]
[ ---  BRANCH (ram, 0x123960, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x54, 4)]
[(ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0x54, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x54, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x54, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000b9, 8) , (unique, 0x100000b1, 8), (unique, 0x100000b9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca08, 8), (unique, 0x100000b1, 8) PTRSUB (const, 0x0, 8) , (const, 0x1246f0, 8), (register, 0x0, 8) CAST (unique, 0x10000132, 8), (unique, 0x10000132, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000012a, 8), (unique, 0x1000012a, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0870, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0870, 8) , (const, 0x11, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0x5b, 4), (ram, 0x4eca08, 4) MULTIEQUAL (ram, 0x4eca08, 4) , (ram, 0x4eca08, 4) , (ram, 0x4eca08, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x5b, 4), (ram, 0x4f0870, 8) MULTIEQUAL (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x5b, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x5b, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x5b, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x123998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12bfe0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4)]
[(ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0x9c, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x9c, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x10000112, 8) , (const, 0x9c, 4), (unique, 0x10000112, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x9c, 4)]
[(unique, 0x100000fa, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1239cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000142, 8), (unique, 0x10000142, 8) CALL (ram, 0x21d6c0, 8) , (unique, 0x3800, 8) , (unique, 0x1000013a, 8) , (unique, 0x100000a1, 8), (unique, 0x1000013a, 8) CAST (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f04d8, 8), (unique, 0x100000a1, 8) PTRSUB (const, 0x0, 8) , (const, 0x122d00, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0x10000102, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1239cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x1000010a, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100000fa, 8) , (unique, 0x10000102, 8) , (unique, 0x1000010a, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc1, 4)]
[(ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0xc1, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xc1, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x1000011a, 8) , (const, 0xc1, 4), (unique, 0x1000011a, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xc1, 4)]
[(unique, 0x100000e2, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1239f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000015a, 8), (unique, 0x1000015a, 8) CALL (ram, 0x21d6c0, 8) , (unique, 0x3800, 8) , (unique, 0x10000152, 8) , (unique, 0x100000a9, 8), (unique, 0x10000152, 8) CAST (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f04d8, 8), (unique, 0x100000a9, 8) PTRSUB (const, 0x0, 8) , (const, 0x122d00, 8)]
[(unique, 0x100000ea, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1239f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000162, 8), (unique, 0x10000162, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x100000f2, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe2, 4)]
[(ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0xe2, 4)]
[(ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0xe2, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xe2, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xe2, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xe2, 4)]
[(register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x18, 8) , (register, 0x28, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100000e2, 8) , (unique, 0x100000ea, 8) , (unique, 0x100000f2, 8)]
[ ---  BRANCH (ram, 0x123978, 1)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0870, 8) MULTIEQUAL (ram, 0x4f0870, 8) , (ram, 0x4f0870, 8)]
[(ram, 0x4eca08, 4) MULTIEQUAL (ram, 0x4eca08, 4) , (ram, 0x4eca08, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CBRANCH (ram, 0x123a2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eca08, 4) COPY (ram, 0x4eca08, 4)]
[(ram, 0x4f0870, 8) COPY (ram, 0x4f0870, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x8f, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x8f, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eca08, 4) COPY (ram, 0x4eca08, 4), (ram, 0x4eca08, 4) INDIRECT (ram, 0x4eca08, 4) , (const, 0x8f, 4)]
[(ram, 0x4f0870, 8) COPY (ram, 0x4f0870, 8), (ram, 0x4f0870, 8) INDIRECT (ram, 0x4f0870, 8) , (const, 0x8f, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x8f, 4)]
[ ---  RETURN (const, 0x1, 4)]
