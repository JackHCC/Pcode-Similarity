[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0xa8, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x22288c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x2, 4), (register, 0xa8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x2228a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffb, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x222a10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x222a10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x1000024b, 4) , (const, 0x8, 4), (unique, 0x1000024b, 4) CAST (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x222a40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_SUB (unique, 0x100000e7, 4) , (const, 0x10, 4), (unique, 0x100000e7, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x80, 4) COPY (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000203, 8) , (register, 0x0, 8), (unique, 0x10000203, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x2228b9, 1)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000257, 8), (unique, 0x10000257, 8) INT_ADD (unique, 0x1000024f, 8) , (register, 0x0, 8), (unique, 0x1000024f, 8) CAST (unique, 0x10000123, 8), (unique, 0x10000123, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x222a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) INT_ADD (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (register, 0x18, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2228e7, 1)]
[ ---  CBRANCH (ram, 0x2229b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 1) INT_ADD (unique, 0x100000f7, 1) , (const, 0xfe, 1), (unique, 0x100000f7, 1) SUBPIECE (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x2af, 4)]
[ ---  CALL (ram, 0x18e810, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (register, 0x38, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x3100, 4) INT_ADD (register, 0x18, 4) , (const, 0xfffffffe, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2228e7, 1)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x3a00, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (unique, 0x10000263, 8) , (register, 0x0, 8), (unique, 0x10000263, 8) CAST (unique, 0x10000133, 8), (unique, 0x10000133, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000143, 8) , (register, 0x0, 8), (unique, 0x10000143, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0xa8, 8) INT_SEXT (unique, 0x1000025f, 4), (unique, 0x1000025f, 4) CAST (register, 0xa8, 4), (register, 0x18, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ADD (unique, 0x10000273, 8) , (register, 0x0, 8), (unique, 0x10000273, 8) CAST (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0xa8, 8) INT_SEXT (unique, 0x1000025f, 4), (unique, 0x1000025f, 4) CAST (register, 0xa8, 4), (register, 0x18, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x222a30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100000ef, 4), (unique, 0x100000ef, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0xa8, 8) INT_SEXT (unique, 0x1000025f, 4), (unique, 0x1000025f, 4) CAST (register, 0xa8, 4), (register, 0x18, 8) INT_SEXT (register, 0x18, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001fb, 8), (unique, 0x100001fb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222919, 1)]
[ ---  CBRANCH (ram, 0x2229d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 1) INT_ADD (unique, 0x100000f9, 1) , (const, 0xfe, 1), (unique, 0x100000f9, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2229fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000283, 4), (unique, 0x10000283, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (unique, 0x100001e3, 8) , (const, 0x1, 8), (unique, 0x100001e3, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2229f1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (unique, 0x10000287, 8), (unique, 0x10000287, 8) CAST (register, 0x0, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001eb, 8), (unique, 0x100001eb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x222919, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015b, 8) , (register, 0x0, 8), (unique, 0x1000015b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000028f, 4), (unique, 0x1000028f, 4) CAST (register, 0x10, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x222a87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000073, 8) , (const, 0x0, 8), (unique, 0x10000073, 8) INT_AND (register, 0x0, 8) , (const, 0x7, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000028f, 4), (unique, 0x1000028f, 4) CAST (register, 0x10, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x1000010b, 8) , (unique, 0x10000103, 8) , (const, 0xcd, 4) , (unique, 0x10000113, 8), (unique, 0x10000113, 8) COPY (const, 0x2925b0, 8), (unique, 0x1000010b, 8) COPY (const, 0x292580, 8), (unique, 0x10000103, 8) COPY (const, 0x28f05a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x222a10, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x100, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (unique, 0x3800, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) INT_ADD (unique, 0x10000293, 8) , (const, 0x1, 8), (unique, 0x10000293, 8) CAST (unique, 0x10000173, 8), (unique, 0x10000173, 8) PTRSUB (unique, 0x1000016b, 8) , (const, 0x0, 8), (unique, 0x1000016b, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x222a10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3a00, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x222980, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (const, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) INT_ADD (unique, 0x100002c3, 8) , (unique, 0x10000193, 8), (unique, 0x100002c3, 8) CAST (unique, 0x3a00, 8), (unique, 0x10000193, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x1000018b, 8) , (const, 0x1, 8), (unique, 0x1000018b, 8) INT_SUB (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0xa8, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xa8, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) CAST (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) INT_SUB (unique, 0x100002d3, 8) , (unique, 0x100002db, 8), (unique, 0x100002db, 8) CAST (register, 0x38, 8), (unique, 0x100002d3, 8) CAST (unique, 0x3a00, 8), (register, 0x38, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_AND (unique, 0x100002ab, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000022b, 8) COPY (unique, 0x100002f3, 8), (unique, 0x100002f3, 8) CAST (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100000a7, 8) , (const, 0x1, 8), (unique, 0x100000a7, 8) INT_2COMP (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) CAST (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) INT_SUB (unique, 0x100002d3, 8) , (unique, 0x100002db, 8), (unique, 0x100002db, 8) CAST (register, 0x38, 8), (unique, 0x100002d3, 8) CAST (unique, 0x3a00, 8), (register, 0x38, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_AND (unique, 0x100002ab, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x1000023b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_AND (unique, 0x100002ab, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000023b, 8) , (unique, 0x10000243, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000022b, 8) , (unique, 0x10000233, 8)]
[ ---  CBRANCH (ram, 0x2229ae, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000233, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001cb, 8) , (const, 0x8, 8), (unique, 0x100001cb, 8) INT_ADD (unique, 0x100001c3, 8) , (const, 0x1, 8), (unique, 0x100001c3, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000243, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001ab, 8) , (const, 0x8, 8), (unique, 0x100001ab, 8) INT_ADD (unique, 0x100001a3, 8) , (const, 0x1, 8), (unique, 0x100001a3, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2229ab, 1)]
[ ---  CBRANCH (ram, 0x222a70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000008b, 8) , (const, 0x0, 8), (unique, 0x1000008b, 8) INT_AND (register, 0xa8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000303, 8) , (unique, 0xbc80, 4), (unique, 0x10000303, 8) CAST (unique, 0x3a00, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x1000031b, 8), (unique, 0x1000031b, 8) INT_ADD (unique, 0x10000313, 8) , (unique, 0x10000223, 8), (unique, 0x10000313, 8) CAST (unique, 0x3a00, 8), (unique, 0x10000223, 8) INT_SUB (register, 0xa8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x1000021b, 8) , (const, 0x1, 8), (unique, 0x1000021b, 8) INT_SUB (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x222974, 1)]
[ ---  CBRANCH (ram, 0x222974, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000323, 8) , (unique, 0xbb00, 1), (unique, 0x10000323, 8) CAST (unique, 0x3a00, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x222a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000093, 4) , (const, 0x0, 4), (unique, 0x10000093, 4) INT_AND (register, 0xa8, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc00, 2), (unique, 0x3a00, 8) CAST (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) INT_ADD (unique, 0x10000333, 8) , (unique, 0x10000213, 8), (unique, 0x10000333, 8) CAST (unique, 0x3a00, 8), (unique, 0x10000213, 8) INT_SUB (register, 0xa8, 8) , (const, 0x2, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000032b, 8), (unique, 0x1000032b, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x1000020b, 8) , (const, 0x1, 8), (unique, 0x1000020b, 8) INT_SUB (register, 0xa8, 8) , (const, 0x2, 8), (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x222974, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
