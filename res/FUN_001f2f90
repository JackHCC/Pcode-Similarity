[(unique, 0x100002ba, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x100002ca, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x100002d2, 4) COPY (register, 0x80, 4)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100002ba, 8) , (unique, 0x100002c2, 8) , (register, 0xa0, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffac, 2) SUBPIECE (stack, 0xffffffffffffffac, 4) , (const, 0x0, 8), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (unique, 0x100002d2, 4) , (stack, 0xffffffffffffffac, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f3310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d6, 8), (unique, 0x100002d6, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_MULT (register, 0xb0, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002ca, 8) , (register, 0xb0, 8) , (register, 0x28, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x100002ea, 8), (unique, 0x100002ea, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x28, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x28, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edfc0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002fa, 8), (unique, 0x100002fa, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_MULT (register, 0xb0, 8) , (const, 0x10, 8), (register, 0xb0, 8) INT_SEXT (unique, 0x100002e6, 4), (unique, 0x100002e6, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002de, 8), (unique, 0x100002de, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x1000030a, 8), (unique, 0x1000030a, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x38, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_LEFT (register, 0x90, 4) , (const, 0x8, 4), (register, 0x90, 4) INT_ZEXT (register, 0x90, 2), (register, 0x90, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000302, 8), (unique, 0x10000302, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 4), (unique, 0x3100, 8) CAST (unique, 0x1000031a, 8), (unique, 0x1000031a, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x90, 4) INT_OR (register, 0x90, 4) , (register, 0x0, 4), (register, 0x90, 4) INT_LEFT (register, 0x90, 4) , (const, 0x8, 4), (register, 0x90, 4) INT_OR (register, 0x90, 4) , (unique, 0x100001af, 4), (unique, 0x100001af, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000312, 8), (unique, 0x10000312, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x90, 4) INT_ZEXT (register, 0x90, 2), (register, 0x90, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000302, 8), (unique, 0x10000302, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000322, 8), (unique, 0x10000322, 8) INT_ADD (register, 0x30, 8) , (const, 0xa, 8), (register, 0x0, 1) INT_OR (unique, 0x1000016d, 1) , (const, 0x4, 1), (unique, 0x1000016d, 1) SUBPIECE (unique, 0x100002a6, 4) , (const, 0x0, 4), (unique, 0x100002a6, 4) INT_RIGHT (register, 0x90, 4) , (const, 0x10, 4), (register, 0x90, 4) INT_OR (register, 0x90, 4) , (register, 0x0, 4), (register, 0x90, 4) INT_LEFT (register, 0x90, 4) , (const, 0x8, 4), (register, 0x90, 4) INT_OR (register, 0x90, 4) , (unique, 0x100001af, 4), (unique, 0x100001af, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000312, 8), (unique, 0x10000312, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x90, 4) INT_ZEXT (register, 0x90, 2), (register, 0x90, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000302, 8), (unique, 0x10000302, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x1000032a, 8), (unique, 0x1000032a, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x1000033a, 8), (unique, 0x1000033a, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000332, 8), (unique, 0x10000332, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f3128, 1)]
[ ---  CBRANCH (ram, 0x1f33f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000342, 8), (unique, 0x10000342, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10000352, 8), (unique, 0x10000352, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000034a, 8), (unique, 0x1000034a, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035a, 8), (unique, 0x1000035a, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000362, 8), (unique, 0x10000362, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f3230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f3240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (register, 0x8, 4), (register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f3407, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ee150, 8) , (register, 0x38, 8) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(unique, 0xbc80, 4) INT_OR (stack, 0xffffffffffffffac, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000036e, 8), (unique, 0x1000036e, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edfc0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000376, 8), (unique, 0x10000376, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x80, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x80, 8) INT_MULT (register, 0x28, 8) , (const, 0x10, 8), (register, 0x28, 8) INT_SEXT (unique, 0x1000036a, 4), (unique, 0x1000036a, 4) CAST (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x88, 4), (register, 0x0, 4) INT_LEFT (register, 0x38, 4) , (const, 0x8, 4), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000386, 8), (unique, 0x10000386, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (stack, 0xffffffffffffffac, 2) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 4), (unique, 0x3100, 8) CAST (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x88, 4), (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4), (register, 0x8, 4) INT_OR (unique, 0x1000019b, 4) , (register, 0x38, 4), (unique, 0x1000019b, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000396, 8), (unique, 0x10000396, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x80, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000386, 8), (unique, 0x10000386, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (stack, 0xffffffffffffffac, 2) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x100003a6, 8), (unique, 0x100003a6, 8) INT_ADD (register, 0x30, 8) , (const, 0xa, 8), (register, 0x0, 1) INT_OR (unique, 0x1000016b, 1) , (const, 0x4, 1), (unique, 0x1000016b, 1) SUBPIECE (unique, 0x100002a2, 4) , (const, 0x0, 4), (unique, 0x100002a2, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x88, 4), (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4), (register, 0x8, 4) INT_OR (unique, 0x1000019b, 4) , (register, 0x38, 4), (unique, 0x1000019b, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000396, 8), (unique, 0x10000396, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x80, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000386, 8), (unique, 0x10000386, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (stack, 0xffffffffffffffac, 2) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ee150, 8) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(register, 0x88, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1f2fbd, 1)]
[ ---  CBRANCH (ram, 0x1f3160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003be, 8), (unique, 0x100003be, 8) INT_ADD (register, 0x0, 8) , (const, 0xa, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) INT_MULT (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003b6, 8), (unique, 0x100003b6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3160, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x3100, 4)]
[(unique, 0x3400, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x100002aa, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f305c, 1)]
[(unique, 0x1000016f, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x30, 4)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100002aa, 8) , (unique, 0x100002b2, 8)]
[ ---  CBRANCH (ram, 0x1f3040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f3040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffac, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ee150, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)]
[(register, 0x30, 4) INT_ADD (unique, 0x1000016f, 4) , (const, 0xffffffff, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f3160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000216, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000216, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffffa, 8)]
[(unique, 0x100002b2, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f3160, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edfc0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003e2, 8), (unique, 0x100003e2, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003da, 8), (unique, 0x100003da, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xa0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (unique, 0x100003d6, 4), (unique, 0x100003d6, 4) CAST (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x88, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_ZEXT (register, 0x80, 2), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x80, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ea, 8), (unique, 0x100003ea, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 4), (unique, 0x3100, 8) CAST (unique, 0x10000402, 8), (unique, 0x10000402, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x88, 4), (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4), (register, 0x8, 4) INT_OR (unique, 0x1000018b, 4) , (register, 0x80, 4), (unique, 0x1000018b, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003fa, 8), (unique, 0x100003fa, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xa0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x80, 4) INT_ZEXT (register, 0x80, 2), (register, 0x80, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ea, 8), (unique, 0x100003ea, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x1000040a, 8), (unique, 0x1000040a, 8) INT_ADD (register, 0x30, 8) , (const, 0xa, 8), (register, 0x0, 1) INT_OR (unique, 0x1000015b, 1) , (const, 0x4, 1), (unique, 0x1000015b, 1) SUBPIECE (unique, 0x1000029e, 4) , (const, 0x0, 4), (unique, 0x1000029e, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x88, 4), (register, 0x8, 4) INT_LEFT (register, 0x8, 4) , (const, 0x8, 4), (register, 0x8, 4) INT_OR (unique, 0x1000018b, 4) , (register, 0x80, 4), (unique, 0x1000018b, 4) INT_AND (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003fa, 8), (unique, 0x100003fa, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xa0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x80, 4) INT_ZEXT (register, 0x80, 2), (register, 0x80, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ea, 8), (unique, 0x100003ea, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10000412, 8), (unique, 0x10000412, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ee150, 8) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  CBRANCH (ram, 0x1f307f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x1f2f90, 8) , (register, 0x38, 8) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x8, 4) , (stack, 0xffffffffffffffac, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f3148, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1edfc0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000436, 8), (unique, 0x10000436, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000042e, 8), (unique, 0x1000042e, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x28, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_MULT (register, 0xb0, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0xb0, 8) INT_SEXT (unique, 0x1000042a, 4), (unique, 0x1000042a, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000422, 8), (unique, 0x10000422, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000041a, 8), (unique, 0x1000041a, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x28, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) CAST (unique, 0x10000446, 8), (unique, 0x10000446, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x30, 4) INT_OR (register, 0x30, 4) , (register, 0x0, 4), (register, 0x30, 4) INT_LEFT (register, 0x38, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000456, 8), (unique, 0x10000456, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_OR (unique, 0x1000017b, 4) , (register, 0x38, 4), (unique, 0x1000017b, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000044e, 8), (unique, 0x1000044e, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x28, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x1000045e, 8), (unique, 0x1000045e, 8) INT_ADD (register, 0x8, 8) , (const, 0xa, 8), (register, 0x0, 1) INT_OR (unique, 0x1000014b, 1) , (const, 0x4, 1), (unique, 0x1000014b, 1) SUBPIECE (unique, 0x1000029a, 4) , (const, 0x0, 4), (unique, 0x1000029a, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_OR (unique, 0x1000017b, 4) , (register, 0x38, 4), (unique, 0x1000017b, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000044e, 8), (unique, 0x1000044e, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x28, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffc00ff, 4), (register, 0x38, 4) INT_ZEXT (register, 0x38, 2), (register, 0x38, 2) INT_AND (stack, 0xffffffffffffffac, 2) , (const, 0x3ff, 2), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10000466, 8), (unique, 0x10000466, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x88, 8) INT_ZEXT (stack, 0xffffffffffffffb8, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100002c2, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f2fbd, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1ee150, 8) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_MULT (register, 0xa0, 8) , (const, 0x10, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
