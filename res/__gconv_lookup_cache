[(unique, 0x1000032b, 8) COPY (ram, 0x4c7df0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x466a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7df0, 8) , (const, 0x0, 8)]
[(register, 0xa8, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x466918, 1)]
[(register, 0xb0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000357, 8), (unique, 0x10000357, 8) INT_ADD (ram, 0x4c7df0, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000035f, 8), (unique, 0x1000035f, 8) INT_ADD (ram, 0x4c7df0, 8) , (const, 0xa, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x4a, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x4a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4a, 4)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x466380, 8) , (register, 0x30, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x466940, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (ram, 0x4c7de8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000367, 8), (unique, 0x10000367, 8) INT_ADD (unique, 0x1000032b, 8) , (const, 0xa, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000c7, 8) , (const, 0x3, 8), (unique, 0x100000c7, 8) INT_MULT (stack, 0xffffffffffffffb0, 8) , (const, 0x3, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd2, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0xd2, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0xd2, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd2, 4)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x466380, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x466912, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x30, 8) , (ram, 0x4c7de8, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000df, 8) , (const, 0x3, 8), (unique, 0x100000df, 8) INT_MULT (stack, 0xffffffffffffffb8, 8) , (const, 0x3, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) INT_ADD (unique, 0x1000032b, 8) , (const, 0xa, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000377, 8), (unique, 0x10000377, 8) PTRADD (unique, 0x1000024a, 8) , (unique, 0x10000262, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) INT_ADD (register, 0x8, 8) , (register, 0xb8, 8), (unique, 0x1000024a, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x1000032b, 8)]
[ ---  CBRANCH (ram, 0x466bd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c4, 8) , (const, 0x0, 8), (unique, 0x100001c4, 8) INT_AND (register, 0x80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x46698f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x466918, 1)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x1000032b, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) PTRADD (unique, 0x10000252, 8) , (unique, 0x1000026a, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) INT_ADD (register, 0x80, 8) , (register, 0xb8, 8), (unique, 0x10000252, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8)]
[ ---  CBRANCH (ram, 0x466b70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x466a60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb0, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x5, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x466c1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x5, 8) , (const, 0x2, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x1000038f, 8), (unique, 0x1000038f, 8) INT_ADD (unique, 0x3a00, 8) , (ram, 0x4c7df0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000387, 8), (unique, 0x10000387, 8) INT_ADD (unique, 0x1000032b, 8) , (const, 0xc, 8)]
[(unique, 0x1000031a, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x466c56, 1) , (unique, 0x10000324, 1), (unique, 0x10000324, 1) INT_NOTEQUAL (unique, 0x10000322, 2) , (const, 0x0, 2), (unique, 0x10000322, 2) MULTIEQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x10000322, 2)]
[ ---  CBRANCH (ram, 0x466c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000031a, 8) , (unique, 0x100002ea, 8) , (const, 0x2, 8), (unique, 0x100002ea, 8) INT_ADD (unique, 0x100002e2, 8) , (const, 0x1, 8), (unique, 0x100002e2, 8) INT_MULT (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000397, 4), (unique, 0x10000397, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000322, 2)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x35c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x35c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x35c, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x373, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x35c, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x353, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x373, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x35c, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x353, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x10, 8) , (const, 0x68, 8)]
[ ---  CBRANCH (ram, 0x466be8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x10, 8) , (const, 0x68, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x1000031a, 8) , (const, 0x1, 8) , (const, 0x2, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (register, 0xb0, 8), (register, 0x88, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[(unique, 0x10000333, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x466d0a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) INT_ADD (unique, 0x1000039b, 8) , (const, 0x18, 8), (unique, 0x1000039b, 8) CAST (register, 0xb0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x3b80, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000333, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) INT_ADD (unique, 0x100003bb, 8) , (const, 0x10, 8), (unique, 0x100003bb, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000333, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) INT_ADD (unique, 0x100003cb, 8) , (const, 0x60, 8), (unique, 0x100003cb, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000333, 8) , (register, 0xb0, 8)]
[(unique, 0x3b80, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x2, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x3d3, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x3ca, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x3c7, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x3af, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x3d3, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x3ca, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x3c7, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x3af, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3b80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) INT_ADD (unique, 0x100003db, 8) , (const, 0x20, 8), (unique, 0x100003db, 8) CAST (register, 0xb0, 8), (unique, 0x3b80, 8) INT_ADD (register, 0xb0, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xc, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000333, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x466ce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x2, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41f, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x41f, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x41f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x41f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x41f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41f, 4)]
[ ---  CBRANCH (ram, 0x466b39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x466460, 8) , (register, 0x38, 8) , (unique, 0x3b80, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x441, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x441, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x441, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x441, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x441, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x441, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4669a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x466a88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e6, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x3e6, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x3e6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3e6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3e6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e6, 4)]
[ ---  CALL (ram, 0x45e0d0, 8) , (unique, 0x3b80, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x466cf3, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) CAST (unique, 0x100003f3, 8), (unique, 0x100003f3, 8) INT_ADD (unique, 0x100003eb, 8) , (const, 0x68, 8), (unique, 0x100003eb, 8) CAST (register, 0xb0, 8)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x466d5b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0x100003fb, 4) , (register, 0x28, 4), (unique, 0x100003fb, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000031a, 8), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000031a, 8) , (unique, 0x100002ca, 8) , (const, 0x2, 8), (unique, 0x100002ca, 8) INT_ADD (unique, 0x100002c2, 8) , (const, 0x1, 8), (unique, 0x100002c2, 8) INT_MULT (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x267, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x267, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x267, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x267, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x267, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x466be8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (const, 0xd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000242, 8), (unique, 0x10000242, 8) COPY (const, 0x49ef0c, 8), (unique, 0x3100, 8) CAST (unique, 0x1000040f, 8), (unique, 0x1000040f, 8) INT_ADD (unique, 0x10000407, 8) , (const, 0x20, 8), (unique, 0x10000407, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) INT_ADD (unique, 0x10000417, 8) , (const, 0x18, 8), (unique, 0x10000417, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xb0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) INT_ADD (unique, 0x10000427, 8) , (const, 0x10, 8), (unique, 0x10000427, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x2a6, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x2a3, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x29c, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x299, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x28d, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x27f, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x2a6, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x2a3, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x29c, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x299, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x28d, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x27f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000043f, 8), (unique, 0x1000043f, 8) INT_ADD (unique, 0x10000437, 8) , (const, 0x60, 8), (unique, 0x10000437, 8) CAST (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x466b98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100003ff, 8), (unique, 0x100003ff, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x3, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x304, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x304, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x304, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x304, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x304, 4)]
[ ---  CALL (ram, 0x45e0d0, 8) , (unique, 0x3400, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x466b12, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2be, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x2be, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x2be, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2be, 4)]
[ ---  CBRANCH (ram, 0x466c07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x466460, 8) , (register, 0x38, 8) , (unique, 0x3400, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x2e6, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x2e6, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x466918, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000447, 8), (unique, 0x10000447, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x68, 8), (register, 0x10, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x4669fb, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x466912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000343, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x188, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x188, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x188, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x188, 4)]
[ ---  CBRANCH (ram, 0x466be8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (const, 0xd0, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1a9, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1a7, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1a9, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1a7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[(unique, 0x1000033b, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000033b, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000232, 8), (unique, 0x10000232, 8) COPY (const, 0x49ef0c, 8), (unique, 0x3100, 8) CAST (unique, 0x1000045f, 8), (unique, 0x1000045f, 8) INT_ADD (unique, 0x10000457, 8) , (const, 0x18, 8), (unique, 0x10000457, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (const, 0x10, 8), (unique, 0x10000467, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000487, 8), (unique, 0x10000487, 8) INT_ADD (unique, 0x1000047f, 8) , (const, 0x60, 8), (unique, 0x1000047f, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1ce, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1cb, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1b6, 4), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1b3, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1ce, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1cb, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1b6, 4), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1b3, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000497, 8), (unique, 0x10000497, 8) INT_ADD (unique, 0x1000048f, 8) , (const, 0x20, 8), (unique, 0x1000048f, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0xb0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x2, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x466bb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000477, 8), (unique, 0x10000477, 8) INT_ADD (register, 0x38, 8) , (register, 0xb0, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x230, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x230, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x230, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x230, 4)]
[ ---  CALL (ram, 0x45e0d0, 8) , (register, 0xb0, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x466a3f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ec, 4)]
[ ---  CBRANCH (ram, 0x466bf3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x466460, 8) , (register, 0x38, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x466c07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x219, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x219, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x219, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x219, 4)]
[ ---  CALL (ram, 0x45cc30, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x224, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x224, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x224, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x224, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0x0, 8)]
[(unique, 0x1000034b, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x466918, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1fe, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1fe, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x10000347, 4) COPY (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x466918, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x466918, 1)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000343, 4) , (unique, 0x10000347, 4) , (unique, 0x1000034b, 4) , (register, 0xa8, 4) , (register, 0x0, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x466d65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000049f, 8), (unique, 0x1000049f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xca, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c7de8, 8) COPY (ram, 0x4c7de8, 8), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0xca, 4)]
[(ram, 0x4c7df0, 8) COPY (ram, 0x4c7df0, 8), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0xca, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c7de8, 8) COPY (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) COPY (ram, 0x4c7df0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa8, 4)]
