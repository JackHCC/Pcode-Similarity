[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000018c, 8), (unique, 0x1000018c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x236aa5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef430, 4) , (const, 0x0, 4)]
[(ram, 0x4ef430, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef430, 4) , (const, 0x0, 4)]
[(ram, 0x4ef430, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x236ac8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x15c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15c, 4)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0x15c, 4)]
[(ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0x15c, 4)]
[(ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0x15c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x15c, 4)]
[ ---  CALL (ram, 0x230690, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef430, 4) MULTIEQUAL (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000158, 8) COPY (ram, 0x4ef428, 8), (ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[ ---  CBRANCH (ram, 0x236c00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec948, 8) , (const, 0x0, 8), (ram, 0x4ec948, 8) MULTIEQUAL (ram, 0x4ec948, 8) , (ram, 0x4ec948, 8) , (ram, 0x4ec948, 8)]
[(register, 0x18, 8) COPY (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x141, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x141, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x141, 4)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0x141, 4)]
[(ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0x141, 4), (ram, 0x4ef428, 8) COPY (const, 0x400, 8)]
[(ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0x141, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x141, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x141, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x141, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x141, 4)]
[ ---  CBRANCH (ram, 0x236adf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000194, 8), (unique, 0x10000194, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef430, 4) MULTIEQUAL (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4)]
[(ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000158, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(unique, 0x10000160, 8) COPY (ram, 0x4ec948, 8), (ram, 0x4ec948, 8) MULTIEQUAL (ram, 0x4ec948, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x236af7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x76, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x76, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x76, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0x76, 4), (ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[(ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0x76, 4), (ram, 0x4ef430, 4) MULTIEQUAL (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x76, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x76, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x76, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x76, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000150, 8) COPY (ram, 0x4ec948, 8), (ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0x76, 4), (ram, 0x4ec948, 8) COPY (unique, 0x10000170, 8), (unique, 0x10000170, 8) MULTIEQUAL (unique, 0x10000160, 8) , (unique, 0x10000168, 8)]
[ ---  CBRANCH (ram, 0x236bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x236c40, 8) , (register, 0x38, 4) , (register, 0x30, 4) , (unique, 0x1000011f, 8) , (ram, 0x4ec948, 8) , (register, 0x18, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x1000011f, 8) CAST (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef410, 8), (ram, 0x4ec948, 8) COPY (unique, 0x10000170, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x10000106, 8), (unique, 0x10000170, 8) MULTIEQUAL (unique, 0x10000160, 8) , (unique, 0x10000168, 8)]
[ ---  CBRANCH (ram, 0x236bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x236b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec948, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9f, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x9f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9f, 4)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0x9f, 4)]
[(ram, 0x4ef428, 8) INDIRECT (unique, 0x10000178, 8) , (const, 0x9f, 4), (unique, 0x10000178, 8) COPY (unique, 0x10000106, 8), (unique, 0x10000106, 8) INT_MULT (ram, 0x4ef428, 8) , (const, 0x2, 8)]
[(ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0x9f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x9f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9f, 4)]
[(unique, 0x10000168, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec948, 8) , (unique, 0x10000106, 8), (unique, 0x10000106, 8) INT_MULT (ram, 0x4ef428, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x236af0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec948, 8) , (unique, 0x10000106, 8), (unique, 0x10000106, 8) INT_MULT (ram, 0x4ef428, 8) , (const, 0x2, 8)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaf, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x10000150, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xb4, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xaf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0xb4, 4), (ram, 0x4ec948, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0xb4, 4), (ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0xaf, 4)]
[(ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0xb4, 4), (ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0xaf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb4, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xaf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ac, 8) , (const, 0xc, 4), (unique, 0x100001ac, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef430, 4) MULTIEQUAL (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4)]
[(ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[(ram, 0x4ec948, 8) MULTIEQUAL (ram, 0x4ec948, 8) , (register, 0x0, 8) , (ram, 0x4ec948, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4ef430, 4) MULTIEQUAL (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4)]
[(ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[(ram, 0x4ec948, 8) MULTIEQUAL (ram, 0x4ec948, 8) , (ram, 0x4ec948, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x236b94, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000184, 4) COPY (unique, 0x1000013f, 4), (unique, 0x1000013f, 4) INT_ADD (ram, 0x4ef430, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x236bb6, 1) , (unique, 0x10000143, 1), (unique, 0x10000143, 1) INT_NOTEQUAL (unique, 0x1000013f, 4) , (const, 0x0, 4), (unique, 0x1000013f, 4) INT_ADD (ram, 0x4ef430, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x11c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11c, 4)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0x11c, 4)]
[(ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0x11c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000127, 8), (unique, 0x10000127, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef430, 8)]
[(unique, 0x10000180, 4) COPY (ram, 0x4ef430, 4), (ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0x11c, 4), (ram, 0x4ef430, 4) INT_ADD (ram, 0x4ef430, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[(ram, 0x4ec948, 8) MULTIEQUAL (ram, 0x4ec948, 8) , (ram, 0x4ec948, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ef430, 4) COPY (unique, 0x10000188, 4), (unique, 0x10000188, 4) MULTIEQUAL (unique, 0x10000180, 4) , (unique, 0x10000184, 4)]
[ ---  CBRANCH (ram, 0x236bc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xdf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xdf, 4)]
[(ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0xdf, 4)]
[(ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0xdf, 4)]
[(ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0xdf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xdf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b4, 8) , (stack, 0xffffffffffffffb4, 4), (unique, 0x100001b4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef430, 4) MULTIEQUAL (ram, 0x4ef430, 4) , (ram, 0x4ef430, 4)]
[(ram, 0x4ef428, 8) MULTIEQUAL (ram, 0x4ef428, 8) , (ram, 0x4ef428, 8)]
[(ram, 0x4ec948, 8) MULTIEQUAL (ram, 0x4ec948, 8) , (ram, 0x4ec948, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x0, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x236c32, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10d, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x10d, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10d, 4)]
[(ram, 0x4ec948, 8) COPY (ram, 0x4ec948, 8), (ram, 0x4ec948, 8) INDIRECT (ram, 0x4ec948, 8) , (const, 0x10d, 4)]
[(ram, 0x4ef428, 8) COPY (ram, 0x4ef428, 8), (ram, 0x4ef428, 8) INDIRECT (ram, 0x4ef428, 8) , (const, 0x10d, 4)]
[(ram, 0x4ef430, 4) COPY (ram, 0x4ef430, 4), (ram, 0x4ef430, 4) INDIRECT (ram, 0x4ef430, 4) , (const, 0x10d, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec948, 8) COPY (ram, 0x4ec948, 8)]
[(ram, 0x4ef428, 8) COPY (ram, 0x4ef428, 8)]
[(ram, 0x4ef430, 4) COPY (ram, 0x4ef430, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
