[(register, 0x0, 8) CALL (ram, 0x233dc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x31, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x31, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x27, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x31, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x27, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x31, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x31, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x31, 4), (stack, 0xffffffffffffd684, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x31, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x31, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x31, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x31, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x31, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x31, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x31, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x27, 4)]
[(stack, 0xffffffffffffdd68, 8) INDIRECT (stack, 0xffffffffffffdd68, 8) , (const, 0x31, 4), (stack, 0xffffffffffffdd68, 8) INDIRECT (stack, 0xffffffffffffdd68, 8) , (const, 0x27, 4)]
[(register, 0x30, 8) COPY (const, 0x292840, 8)]
[ ---  CBRANCH (ram, 0x22ca4c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x2, 4) , (const, 0x11, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x49, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x49, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x49, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x49, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x49, 4)]
[(stack, 0xffffffffffffdd68, 8) INDIRECT (stack, 0xffffffffffffdd68, 8) , (const, 0x49, 4)]
[ ---  CBRANCH (ram, 0x22ca40, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207c80, 8) , (register, 0x0, 4) , (const, 0x1, 4) , (const, 0x6, 4) , (unique, 0x3800, 8) , (const, 0x4, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd684, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x63, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x63, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x63, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x63, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x63, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (unique, 0x100004cf, 4) , (const, 0x63, 4), (unique, 0x100004cf, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x63, 4), (stack, 0xffffffffffffd68c, 2) COPY (const, 0x1, 2)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x63, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x63, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x63, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffdd68, 8) INDIRECT (stack, 0xffffffffffffdd68, 8) , (const, 0x63, 4)]
[ ---  CBRANCH (ram, 0x22cb90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222800, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdd68, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x46a, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x46a, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x46a, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x46a, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x46a, 4)]
[ ---  CALL (ram, 0x16a940, 8) , (unique, 0x100002de, 8), (unique, 0x100002de, 8) COPY (const, 0x28f371, 8)]
[(stack, 0xffffffffffffd624, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22c8d1, 1)]
[ ---  CBRANCH (ram, 0x22cc61, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffdd68, 8) , (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22c8c8, 1)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(unique, 0x100004bf, 8) COPY (stack, 0xffffffffffffdd68, 8)]
[ ---  BRANCH (ram, 0x22c88d, 1)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0x10000447, 4)]
[ ---  CBRANCH (ram, 0x22c880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000513, 8), (unique, 0x10000513, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004bf, 8) , (unique, 0x1000043e, 8)]
[ ---  CBRANCH (ram, 0x22c880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22c880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000051b, 8), (unique, 0x1000051b, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000523, 8), (unique, 0x10000523, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000052b, 8), (unique, 0x1000052b, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (unique, 0xbc80, 4), (unique, 0x3e80, 8) PTRADD (unique, 0x10000456, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x10000456, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd738, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000053b, 8), (unique, 0x1000053b, 8) INT_ADD (unique, 0x10000533, 8) , (const, 0x4, 8), (unique, 0x10000533, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) INT_SEXT (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x10000447, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x22c8c8, 1) , (unique, 0x10000446, 1), (unique, 0x10000446, 1) INT_NOTEQUAL (unique, 0x1000043e, 8) , (const, 0x0, 8), (unique, 0x1000043e, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22c8c8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000447, 4) , (const, 0x14, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000447, 4) , (unique, 0x10000447, 4) , (register, 0x8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe7, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe7, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xe7, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xe7, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0xe7, 4)]
[ ---  CALL (ram, 0x222820, 8) , (stack, 0xffffffffffffdd68, 8)]
[(stack, 0xffffffffffffd624, 4) MULTIEQUAL (register, 0x8, 4) , (stack, 0xffffffffffffd624, 4)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8) , (const, 0x578, 4) , (const, 0x0, 4), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd7e8, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd6d8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x171, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x167, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x171, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x167, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf8, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x171, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x167, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xf8, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x171, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x167, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xf8, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x171, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x167, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xf8, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x171, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x167, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0xf8, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x171, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x167, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0xf8, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x171, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x167, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0xf8, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x171, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x167, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0xf8, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x171, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x167, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0xf8, 4), (stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0xf8, 4), (stack, 0xffffffffffffd698, 8) COPY (const, 0x6f000002, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0xf8, 4), (stack, 0xffffffffffffd6a0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x171, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x167, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0xf8, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (unique, 0x3c80, 8) , (const, 0x167, 4), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd690, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd6c8, 8) COPY (stack, 0x8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (unique, 0x100004d3, 8) , (const, 0x167, 4), (unique, 0x100004d3, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x171, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x167, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0xf8, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0xf8, 4), (stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (unique, 0x100004db, 8) , (const, 0x167, 4), (unique, 0x100004db, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (unique, 0x100004e3, 8) , (const, 0x167, 4), (unique, 0x100004e3, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (unique, 0x100004eb, 8) , (const, 0x167, 4), (unique, 0x100004eb, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (unique, 0x100004f3, 8) , (const, 0x167, 4), (unique, 0x100004f3, 8) COPY (register, 0x80, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (unique, 0x100004fb, 8) , (const, 0x167, 4), (unique, 0x100004fb, 8) COPY (register, 0x8, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (unique, 0x10000503, 8) , (const, 0x167, 4), (unique, 0x10000503, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x232ea0, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x171, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x167, 4), (stack, 0xffffffffffffd790, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd798, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd7a0, 8) COPY (const, 0x186a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd7a8, 8) COPY (const, 0x2, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffd7b0, 8) COPY (const, 0x5, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x167, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000543, 8), (unique, 0x10000543, 8) CAST (unique, 0x1000032e, 8), (unique, 0x1000032e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x167, 4), (unique, 0xbd80, 8) CAST (unique, 0x1000054b, 8), (unique, 0x1000054b, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x10000336, 8) , (const, 0x8, 8), (unique, 0x10000336, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x167, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000553, 8), (unique, 0x10000553, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000034e, 8) , (const, 0x10, 8), (unique, 0x1000034e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x167, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000055b, 8), (unique, 0x1000055b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x167, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000036e, 8) , (const, 0x8, 8), (unique, 0x1000036e, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x171, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x167, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000563, 8), (unique, 0x10000563, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x1000038e, 8) , (const, 0x10, 8), (unique, 0x1000038e, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x22ca90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22d1e0, 8) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000056b, 8), (unique, 0x1000056b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd788, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd6d8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ac, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ac, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x1ac, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x1ac, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x1ac, 4)]
[ ---  CBRANCH (ram, 0x22ca2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22c5b0, 8) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd708, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bf, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bf, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x1bf, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x1bf, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x1bf, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x1bf, 4)]
[(register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffd6e0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x22cacc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffd6e0, 8) , (const, 0x38, 8), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x1bf, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x1d6, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x1d6, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8)]
[(stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[(stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd738, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd648, 4) COPY (const, 0xfa0, 4)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd688, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x10000573, 8), (unique, 0x10000573, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd6a8, 8)]
[(unique, 0x3a00, 8) PTRADD (unique, 0x10000496, 8) , (unique, 0x100004af, 8) , (const, 0x4, 8), (unique, 0x100004af, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000496, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd738, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (stack, 0xffffffffffffd624, 4) , (const, 0x1, 4)]
[(unique, 0x3c80, 8) CAST (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[(stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd648, 4) MULTIEQUAL (stack, 0xffffffffffffd648, 4) , (register, 0x0, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x22cbb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffd624, 4) , (const, 0x0, 4)]
[(register, 0xb0, 8) INT_SEXT (unique, 0x10000583, 4), (unique, 0x10000583, 4) CAST (register, 0x0, 4)]
[(unique, 0x100004c7, 8) COPY (unique, 0x3c80, 8)]
[ ---  BRANCH (ram, 0x22cb51, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x238, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x238, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x238, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x238, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x238, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x238, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x238, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x238, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x238, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x238, 4), (stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd698, 8) INT_OR (unique, 0x100002af, 8) , (unique, 0x100002bf, 8), (unique, 0x100002bf, 8) INT_LEFT (unique, 0x100002b7, 8) , (const, 0x20, 4), (unique, 0x100002b7, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0x100002af, 8) INT_AND (stack, 0xffffffffffffd698, 8) , (const, 0xffffffff, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100004c7, 8) , (register, 0x18, 8), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x238, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x238, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x238, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x238, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CBRANCH (ram, 0x22cb48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0xb0, 8), (register, 0x0, 8) CALL (ram, 0x207c20, 8) , (register, 0x0, 4) , (unique, 0x3c80, 8) , (register, 0xb0, 8) , (const, 0x0, 4) , (unique, 0x3c80, 8) , (const, 0x10, 4)]
[(register, 0x30, 8) COPY (const, 0x28f387, 8)]
[ ---  BRANCH (ram, 0x22ca4c, 1)]
[ ---  CBRANCH (ram, 0x22cbb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (unique, 0x3a00, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[(stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x22cd57, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffd680, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x29a, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x29a, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x29a, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x29a, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x29a, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x29a, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x29a, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x29a, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x29a, 4), (stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x29a, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x29a, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x29a, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7a0, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7a8, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7b0, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (unique, 0x1000050b, 8) , (const, 0x29a, 4), (unique, 0x1000050b, 8) COPY (unique, 0x3c80, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x22c540, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x29a, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CBRANCH (ram, 0x22cd68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1fae60, 8) , (unique, 0x3c80, 8) , (const, 0x1, 8) , (stack, 0xffffffffffffd648, 4)]
[ ---  CBRANCH (ram, 0x22cc68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22cb2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3e80, 4), (register, 0x0, 4) INT_ADD (stack, 0xffffffffffffd648, 4) , (const, 0x7d0, 4)]
[(register, 0x28, 4) COPY (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x22ca65, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ee, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ee, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x2ee, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x2ee, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x2ee, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x2ee, 4), (stack, 0xffffffffffffd680, 4) COPY (const, 0x10, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x2ee, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x2ee, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x2ee, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x2ee, 4), (stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x2ee, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x2ee, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CBRANCH (ram, 0x22cc78, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000058f, 4), (unique, 0x1000058f, 4) CAST (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x207a40, 8) , (register, 0x0, 4) , (unique, 0x3c80, 8) , (const, 0x2260, 8) , (const, 0x0, 4) , (unique, 0x10000587, 8) , (unique, 0x3800, 8), (unique, 0x10000587, 8) CAST (unique, 0x3c80, 8)]
[ ---  CBRANCH (ram, 0x22cbc9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x7, 4) , (register, 0x0, 4)]
[ ---  CALL (ram, 0x23b780, 8) , (unique, 0x3c80, 8) , (unique, 0x10000593, 8) , (register, 0x0, 4) , (const, 0x1, 4), (unique, 0x10000593, 8) CAST (unique, 0x3c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x317, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x310, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x317, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x310, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x317, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x310, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x317, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x310, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x317, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x317, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x317, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x317, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x317, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x317, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x317, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x317, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x317, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x310, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x310, 4)]
[ ---  CBRANCH (ram, 0x22ccf1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22cfd0, 8) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8)]
[ ---  CBRANCH (ram, 0x22cdbb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffd788, 4) , (stack, 0xffffffffffffd630, 4), (stack, 0xffffffffffffd788, 4) SUBPIECE (stack, 0xffffffffffffd788, 8) , (const, 0x0, 8), (stack, 0xffffffffffffd630, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22ccf1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffd798, 4) , (const, 0x0, 4), (stack, 0xffffffffffffd798, 4) SUBPIECE (stack, 0xffffffffffffd798, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22ccf1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffd7b8, 4) , (const, 0x0, 4), (stack, 0xffffffffffffd7b8, 4) SUBPIECE (stack, 0xffffffffffffd7b8, 8) , (const, 0x0, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  CALL (ram, 0x22cfd0, 8) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x362, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x362, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x34e, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x362, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x34e, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x362, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x34e, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x362, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x362, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x362, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x362, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x362, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x362, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x362, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x362, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x34e, 4), (stack, 0xffffffffffffd6d8, 4) COPY (const, 0x2, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x362, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x34e, 4), (stack, 0xffffffffffffd7c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x23a1c0, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x34e, 4)]
[ ---  CALLIND (register, 0x88, 8) , (unique, 0x3c80, 8) , (stack, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22cbc9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffd6e0, 8) , (const, 0x38, 8), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x362, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x3d5, 4)]
[(register, 0x0, 4) CALLIND (stack, 0x10, 8) , (stack, 0x8, 8) , (unique, 0x3c80, 8)]
[ ---  CALL (ram, 0x22cfd0, 8) , (unique, 0x3c80, 8) , (unique, 0x3c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3fc, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3fc, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3e8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d5, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x3fc, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x3e8, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x3d5, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x3fc, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x3e8, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x3d5, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x3fc, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x3e8, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x3fc, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x3fc, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x3fc, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x3fc, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x3e8, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x3fc, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x3e8, 4), (stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (register, 0x0, 2) , (const, 0x3d5, 4), (register, 0x0, 2) INT_OR (unique, 0x4e880, 2) , (unique, 0x4e980, 2), (unique, 0x4e980, 2) INT_LEFT (stack, 0xffffffffffffd690, 2) , (const, 0x8, 4), (unique, 0x4e880, 2) INT_RIGHT (stack, 0xffffffffffffd690, 2) , (const, 0x8, 4)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6d8, 4) COPY (const, 0x2, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x3fc, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x23a1c0, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x3d5, 4)]
[ ---  CALLIND (register, 0x88, 8) , (unique, 0x3c80, 8) , (stack, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22cd48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (stack, 0xffffffffffffd6e0, 8) , (const, 0x38, 8), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x3fc, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x3d5, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x378, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x378, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x378, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x378, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x378, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x378, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x378, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x378, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x378, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd690, 2) INDIRECT (stack, 0xffffffffffffd690, 2) , (const, 0x378, 4), (stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x378, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x378, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6e0, 8) INDIRECT (stack, 0xffffffffffffd6e0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x378, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x378, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3c80, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[(stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd6e0, 8) MULTIEQUAL (stack, 0xffffffffffffd6e0, 8) , (stack, 0xffffffffffffd6e0, 8)]
[(stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd690, 2) MULTIEQUAL (stack, 0xffffffffffffd690, 2) , (stack, 0xffffffffffffd690, 2)]
[(stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x22cbc9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22cda8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000059b, 8), (unique, 0x1000059b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x292890, 8)]
[ ---  BRANCH (ram, 0x22cd8a, 1)]
[ ---  CBRANCH (ram, 0x22cbc9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005a3, 8), (unique, 0x100005a3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x28f3a4, 8)]
[(register, 0x28, 4) COPY (const, 0x4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x42d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x429, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x42d, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x429, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x42d, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x429, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x42d, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x429, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x42d, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x429, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x42d, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x429, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x42d, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x429, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x42d, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x429, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x42d, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x429, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x42d, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x429, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x42d, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x429, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x42d, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x429, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005ab, 8), (unique, 0x100005ab, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100002d6, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x100002d6, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x22ca65, 1)]
[(stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[(stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22ca65, 1)]
[(stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[(stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x22ca65, 1)]
[(register, 0x30, 8) COPY (const, 0x292868, 8)]
[(register, 0x28, 4) COPY (const, 0x3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x251, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x24d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x251, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x24d, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x251, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x24d, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x251, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x24d, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x251, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x24d, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x251, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x24d, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x251, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x24d, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x251, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x24d, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x251, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x24d, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x251, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x24d, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x251, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x24d, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x251, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x24d, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005b3, 8), (unique, 0x100005b3, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100002ce, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x100002ce, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x18c, 4), (stack, 0xffffffffffffd680, 4) INDIRECT (stack, 0xffffffffffffd680, 4) , (const, 0x183, 4), (stack, 0xffffffffffffd680, 4) MULTIEQUAL (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4) , (stack, 0xffffffffffffd680, 4)]
[(stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x18c, 4), (stack, 0xffffffffffffd684, 4) INDIRECT (stack, 0xffffffffffffd684, 4) , (const, 0x183, 4), (stack, 0xffffffffffffd684, 4) MULTIEQUAL (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4) , (stack, 0xffffffffffffd684, 4)]
[(stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x18c, 4), (stack, 0xffffffffffffd688, 4) INDIRECT (stack, 0xffffffffffffd688, 4) , (const, 0x183, 4), (stack, 0xffffffffffffd688, 4) MULTIEQUAL (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4) , (stack, 0xffffffffffffd688, 4)]
[(stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x18c, 4), (stack, 0xffffffffffffd68c, 2) INDIRECT (stack, 0xffffffffffffd68c, 2) , (const, 0x183, 4), (stack, 0xffffffffffffd68c, 2) MULTIEQUAL (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2) , (stack, 0xffffffffffffd68c, 2)]
[(stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd698, 8) INDIRECT (stack, 0xffffffffffffd698, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd698, 8) MULTIEQUAL (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8) , (stack, 0xffffffffffffd698, 8)]
[(stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd6a0, 8) INDIRECT (stack, 0xffffffffffffd6a0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd6a0, 8) MULTIEQUAL (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8) , (stack, 0xffffffffffffd6a0, 8)]
[(stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x18c, 4), (stack, 0xffffffffffffd6aa, 2) INDIRECT (stack, 0xffffffffffffd6aa, 2) , (const, 0x183, 4), (stack, 0xffffffffffffd6aa, 2) MULTIEQUAL (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2) , (stack, 0xffffffffffffd6aa, 2)]
[(stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd6b8, 8) INDIRECT (stack, 0xffffffffffffd6b8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd6b8, 8) MULTIEQUAL (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8) , (stack, 0xffffffffffffd6b8, 8)]
[(stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd6c8, 8) INDIRECT (stack, 0xffffffffffffd6c8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd6c8, 8) MULTIEQUAL (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8) , (stack, 0xffffffffffffd6c8, 8)]
[(stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd6d0, 8) INDIRECT (stack, 0xffffffffffffd6d0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd6d0, 8) MULTIEQUAL (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8) , (stack, 0xffffffffffffd6d0, 8)]
[(stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x18c, 4), (stack, 0xffffffffffffd6d8, 4) INDIRECT (stack, 0xffffffffffffd6d8, 4) , (const, 0x183, 4), (stack, 0xffffffffffffd6d8, 4) MULTIEQUAL (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4) , (stack, 0xffffffffffffd6d8, 4)]
[(stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd708, 8) INDIRECT (stack, 0xffffffffffffd708, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd708, 8) MULTIEQUAL (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8) , (stack, 0xffffffffffffd708, 8)]
[(stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd710, 8) INDIRECT (stack, 0xffffffffffffd710, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd710, 8) MULTIEQUAL (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8) , (stack, 0xffffffffffffd710, 8)]
[(stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd718, 8) INDIRECT (stack, 0xffffffffffffd718, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd718, 8) MULTIEQUAL (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8) , (stack, 0xffffffffffffd718, 8)]
[(stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd728, 8) INDIRECT (stack, 0xffffffffffffd728, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd728, 8) MULTIEQUAL (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8) , (stack, 0xffffffffffffd728, 8)]
[(stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd730, 8) INDIRECT (stack, 0xffffffffffffd730, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd730, 8) MULTIEQUAL (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8) , (stack, 0xffffffffffffd730, 8)]
[(stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd788, 8) INDIRECT (stack, 0xffffffffffffd788, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd788, 8) MULTIEQUAL (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8) , (stack, 0xffffffffffffd788, 8)]
[(stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x18c, 4), (stack, 0xffffffffffffd790, 4) INDIRECT (stack, 0xffffffffffffd790, 4) , (const, 0x183, 4), (stack, 0xffffffffffffd790, 4) MULTIEQUAL (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4) , (stack, 0xffffffffffffd790, 4)]
[(stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd798, 8) INDIRECT (stack, 0xffffffffffffd798, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd798, 8) MULTIEQUAL (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8) , (stack, 0xffffffffffffd798, 8)]
[(stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7a0, 8) INDIRECT (stack, 0xffffffffffffd7a0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7a0, 8) MULTIEQUAL (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8) , (stack, 0xffffffffffffd7a0, 8)]
[(stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7a8, 8) INDIRECT (stack, 0xffffffffffffd7a8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7a8, 8) MULTIEQUAL (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8) , (stack, 0xffffffffffffd7a8, 8)]
[(stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7b0, 8) INDIRECT (stack, 0xffffffffffffd7b0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7b0, 8) MULTIEQUAL (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8) , (stack, 0xffffffffffffd7b0, 8)]
[(stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7b8, 8) INDIRECT (stack, 0xffffffffffffd7b8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7b8, 8) MULTIEQUAL (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8) , (stack, 0xffffffffffffd7b8, 8)]
[(stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7c0, 8) INDIRECT (stack, 0xffffffffffffd7c0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7c0, 8) MULTIEQUAL (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8) , (stack, 0xffffffffffffd7c0, 8)]
[(stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7c8, 8) INDIRECT (stack, 0xffffffffffffd7c8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7c8, 8) MULTIEQUAL (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8) , (stack, 0xffffffffffffd7c8, 8)]
[(stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7d0, 8) INDIRECT (stack, 0xffffffffffffd7d0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7d0, 8) MULTIEQUAL (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8) , (stack, 0xffffffffffffd7d0, 8)]
[(stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7d8, 8) INDIRECT (stack, 0xffffffffffffd7d8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7d8, 8) MULTIEQUAL (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8) , (stack, 0xffffffffffffd7d8, 8)]
[(stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffd7e0, 8) INDIRECT (stack, 0xffffffffffffd7e0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffd7e0, 8) MULTIEQUAL (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8) , (stack, 0xffffffffffffd7e0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x38, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x18c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x183, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x18c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x183, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x18c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x183, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x18c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x183, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
