[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x35, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ce, 8), (unique, 0x100002ce, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CAST (unique, 0x100002de, 8), (unique, 0x100002de, 8) CALL (ram, 0x1211e0, 8) , (const, 0x488, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x254c6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002d6, 8), (unique, 0x100002d6, 8) CALL (ram, 0x1212c0, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x254cd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (unique, 0x3200, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0x3200, 8) CAST (unique, 0x100002ee, 8), (unique, 0x100002ee, 8) INT_ADD (unique, 0x100002e6, 8) , (const, 0x84, 8), (unique, 0x100002e6, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xdd, 4)]
[(unique, 0x100002b6, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[ ---  CBRANCH (ram, 0x254d10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258c30, 8) , (unique, 0x100002f6, 8), (unique, 0x100002f6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(unique, 0x100002ae, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x100002be, 8), (unique, 0x100002be, 8) MULTIEQUAL (unique, 0x100002ae, 8) , (unique, 0x100002b6, 8)]
[ ---  CBRANCH (ram, 0x254d13, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100002be, 8), (unique, 0x100002be, 8) MULTIEQUAL (unique, 0x100002ae, 8) , (unique, 0x100002b6, 8)]
[(register, 0x30, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100002c6, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x254d37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100002ca, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100002c6, 4) , (unique, 0x100002ca, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000306, 8), (unique, 0x10000306, 8) INT_ADD (unique, 0x100002fe, 8) , (const, 0x6, 8), (unique, 0x100002fe, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000029e, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x254d41, 1) , (register, 0x206, 1)]
[(unique, 0x100002a6, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000030e, 8) , (register, 0x10, 4), (unique, 0x1000030e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0xb0, 4), (register, 0xb0, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000029e, 8) , (unique, 0x100002a6, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0xb0, 4), (register, 0xb0, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000029e, 8) , (unique, 0x100002a6, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000316, 8) , (register, 0x0, 4), (unique, 0x10000316, 8) CAST (unique, 0x3100, 8), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x186, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x186, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x254cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x254cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c8, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000326, 8), (unique, 0x10000326, 8) INT_ADD (unique, 0x1000031e, 8) , (const, 0x34, 8), (unique, 0x1000031e, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254de6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000169, 4), (unique, 0x3100, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) INT_ADD (unique, 0x1000034e, 8) , (const, 0x24, 8), (unique, 0x1000034e, 8) CAST (register, 0x0, 8), (unique, 0x10000169, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000032e, 8), (unique, 0x1000032e, 8) CAST (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (unique, 0x1000016d, 4), (unique, 0x1000035e, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x1000016d, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000336, 8), (unique, 0x10000336, 8) CAST (unique, 0x10000171, 8), (unique, 0x10000171, 8) PTRADD (unique, 0x10000205, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10000205, 8) PTRSUB (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000199, 8) , (unique, 0x10000179, 4), (unique, 0x10000199, 8) CAST (unique, 0x1000036e, 8), (unique, 0x1000036e, 8) INT_ADD (unique, 0x10000366, 8) , (const, 0x2c, 8), (unique, 0x10000366, 8) CAST (register, 0x0, 8), (unique, 0x10000179, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000033e, 8), (unique, 0x1000033e, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) PTRADD (unique, 0x1000021d, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x1000021d, 8) PTRSUB (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000376, 8) , (unique, 0x10000185, 4), (unique, 0x10000376, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x10000185, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000346, 8), (unique, 0x10000346, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) PTRADD (unique, 0x10000235, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10000235, 8) PTRSUB (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037e, 8) , (register, 0x0, 4), (unique, 0x1000037e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) CAST (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) INT_ADD (unique, 0x10000386, 8) , (const, 0x1c, 8), (unique, 0x10000386, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254e32, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x229, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x229, 4)]
[ ---  CBRANCH (ram, 0x254dff, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258550, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000296, 8) , (const, 0x3, 4), (unique, 0x10000296, 8) PTRSUB (unique, 0x10000265, 8) , (const, 0x0, 8), (unique, 0x10000265, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000275, 8) , (const, 0x3, 4), (unique, 0x10000275, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000396, 8), (unique, 0x10000396, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) CAST (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea460, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x219, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x219, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x254cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x254860, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x254c76, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254ca5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254c8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7f, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x254c9a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8f, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254e44, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003a6, 8), (unique, 0x100003a6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc9, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
