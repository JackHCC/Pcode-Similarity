[ ---  CBRANCH (ram, 0x240f78, 1) , (unique, 0x100000a4, 1), (unique, 0x100000a4, 1) BOOL_AND (unique, 0xc780, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 4) , (unique, 0x100000e1, 4), (unique, 0x100000e1, 4) CAST (register, 0x10, 4), (unique, 0xc780, 1) INT_LESS (const, 0x1, 1) , (register, 0x8, 1)]
[ ---  CBRANCH (ram, 0x240f78, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 4) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x240f78, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000e5, 1) , (const, 0x8, 1), (unique, 0x100000e5, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (register, 0x88, 1) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x240f78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4), (unique, 0x59200, 4) INT_AND (register, 0x88, 4) , (register, 0x38, 4), (register, 0x88, 4) INT_ZEXT (register, 0x88, 1), (register, 0x38, 4) INT_SUB (unique, 0x10000022, 4) , (const, 0x1, 4), (unique, 0x10000022, 4) INT_ZEXT (register, 0x88, 1)]
[ ---  CBRANCH (ram, 0x240f78, 1) , (unique, 0x100000aa, 1), (unique, 0x100000aa, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (register, 0x80, 4), (register, 0x88, 4) INT_ZEXT (register, 0x88, 1), (register, 0x200, 1) INT_LESS (register, 0x88, 4) , (register, 0x80, 4)]
[(register, 0x88, 4) INT_AND (register, 0x88, 4) , (register, 0x38, 4), (register, 0x88, 4) INT_SUB (register, 0x88, 4) , (unique, 0x10000084, 4), (unique, 0x10000084, 4) INT_SREM (unique, 0x3100, 4) , (unique, 0x100000e6, 4), (unique, 0x100000e6, 4) CAST (register, 0x88, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x240f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x240fb0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x30, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x80, 4), (register, 0x8, 4) INT_ADD (unique, 0x3100, 4) , (register, 0x88, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x240f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x100000f2, 8), (unique, 0x100000f2, 8) INT_ADD (unique, 0x100000ea, 8) , (register, 0x0, 8), (unique, 0x100000ea, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (register, 0x10, 4)]
[ ---  BRANCH (ram, 0x240eff, 1)]
[ ---  CBRANCH (ram, 0x240f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) CAST (unique, 0x10000102, 8), (unique, 0x10000102, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (unique, 0x3100, 4) INT_SUB (register, 0x88, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x3100, 4) , (const, 0xff, 4), (unique, 0x3100, 4) INT_SUB (register, 0x88, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x1, 1), (register, 0x10, 8) CAST (unique, 0x10000102, 8), (unique, 0x10000102, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x10000062, 4) INT_ADD (unique, 0x10000098, 4) , (const, 0x2, 4), (unique, 0x10000098, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x10000102, 8), (unique, 0x10000102, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100000fa, 8), (unique, 0x100000fa, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x240f80, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_AND (unique, 0x3100, 4) , (const, 0xff, 4), (unique, 0x3100, 4) INT_SUB (register, 0x88, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010a, 8) , (const, 0x0, 8), (unique, 0x1000010a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000011a, 8) , (const, 0x0, 8), (unique, 0x1000011a, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000112, 8) , (const, 0x1, 8), (unique, 0x10000112, 8) CAST (unique, 0x100000b0, 8), (unique, 0x100000b0, 8) PTRADD (unique, 0x100000c9, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000c9, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffffa, 8)]
[(unique, 0x100000d1, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x1000012a, 8), (unique, 0x1000012a, 8) INT_AND (unique, 0x10000122, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000122, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) INT_SUB (unique, 0x10000062, 4) , (unique, 0x1000006a, 4), (unique, 0x1000006a, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) CAST (unique, 0x1000012a, 8), (unique, 0x1000012a, 8) INT_AND (unique, 0x10000122, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000122, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000d1, 8) , (unique, 0x100000d9, 8)]
[ ---  CBRANCH (ram, 0x240faa, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000d9, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x240fa7, 1)]
[ ---  CBRANCH (ram, 0x240fb7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000008c, 4) , (const, 0x0, 4), (unique, 0x1000008c, 4) INT_AND (unique, 0x3100, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000132, 8) , (const, 0x0, 4), (unique, 0x10000132, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000013a, 8) , (const, 0x0, 4), (unique, 0x1000013a, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100000c0, 8) , (const, 0x1, 8), (unique, 0x100000c0, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x240eff, 1)]
[ ---  CBRANCH (ram, 0x240eff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x240eff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000004e, 4) , (const, 0x0, 4), (unique, 0x1000004e, 4) INT_AND (unique, 0x3100, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000142, 8) , (const, 0x0, 2), (unique, 0x10000142, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x240eff, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (register, 0x8, 1), (register, 0x90, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ADD (unique, 0x1000014e, 8) , (register, 0x0, 8), (unique, 0x1000014e, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000014a, 4), (unique, 0x1000014a, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 1), (register, 0x80, 1) SUBPIECE (register, 0x80, 4) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x90, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ADD (unique, 0x1000014e, 8) , (register, 0x0, 8), (unique, 0x1000014e, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000014a, 4), (unique, 0x1000014a, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (register, 0x90, 8), (register, 0x90, 8) PTRADD (register, 0x90, 8) , (const, 0x2, 8) , (const, 0x1, 8), (register, 0x90, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ADD (unique, 0x1000014e, 8) , (register, 0x0, 8), (unique, 0x1000014e, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000014a, 4), (unique, 0x1000014a, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (register, 0x10, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000015e, 4), (unique, 0x1000015e, 4) COPY (unique, 0x3a00, 4), (unique, 0x3a00, 4) INT_ADD (unique, 0x3880, 4) , (register, 0x80, 4), (unique, 0x3880, 4) INT_ADD (register, 0x88, 4) , (const, 0x2, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (register, 0x10, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
