[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000032e, 8), (unique, 0x1000032e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24f176, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000336, 8) , (const, 0x4, 8), (unique, 0x10000336, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000326, 8), (unique, 0x10000326, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x24f2a0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x10000346, 8), (unique, 0x10000346, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000033e, 8), (unique, 0x1000033e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[(register, 0xb8, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x24f273, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x28, 4) COPY (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0xa0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x24f2c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x1000030a, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x24f2c9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 4) , (register, 0x28, 4)]
[(unique, 0x1000030e, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24f37f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x1000034e, 4), (unique, 0x1000034e, 4) CAST (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0x1000030a, 4) , (unique, 0x1000030e, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000352, 8), (unique, 0x10000352, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[(unique, 0x1000031a, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000322, 4) COPY (register, 0xb0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x1000031a, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000020b, 4) MULTIEQUAL (unique, 0x10000322, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 4) INT_SUB (unique, 0x10000189, 4) , (unique, 0x10000191, 4), (unique, 0x10000189, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (unique, 0x10000191, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x100001b6, 8)]
[(unique, 0x100001ae, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x100001b6, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x3b80, 8)]
[(unique, 0x100001be, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001c6, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(unique, 0x100001ca, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x100001ce, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24f32c, 1) , (unique, 0x100001ad, 1), (unique, 0x100001ad, 1) INT_EQUAL (unique, 0x100001a9, 4) , (const, 0x0, 4), (unique, 0x100001a9, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001be, 8) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x100001c6, 4) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x100001ca, 4) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001ce, 8) , (const, 0x266, 4)]
[ ---  CBRANCH (ram, 0x24f270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8) , (register, 0x10, 4), (unique, 0xbd80, 8) CAST (unique, 0x1000036a, 8), (unique, 0x1000036a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0xb8, 4), (register, 0xa8, 8) CAST (unique, 0x10000362, 8), (unique, 0x10000362, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x3, 4), (register, 0xb8, 4) SUBPIECE (unique, 0x100001b6, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000035a, 8), (unique, 0x1000035a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3b80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000372, 8) , (register, 0x0, 8), (unique, 0x10000372, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(register, 0x88, 4) INT_SUB (unique, 0x10000199, 4) , (unique, 0x100001a1, 4), (unique, 0x10000199, 4) SUBPIECE (unique, 0x3b80, 8) , (const, 0x0, 4), (unique, 0x100001a1, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000372, 8) , (register, 0x0, 8), (unique, 0x10000372, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x10000312, 4) COPY (unique, 0x100001a9, 4)]
[ ---  CBRANCH (ram, 0x24f33f, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESSEQUAL (unique, 0x1000037a, 4) , (unique, 0x1000037e, 4), (unique, 0x1000037e, 4) CAST (unique, 0x100001a9, 4), (unique, 0x1000037a, 4) CAST (unique, 0x1000020b, 4)]
[(unique, 0x10000316, 4) COPY (unique, 0x1000020b, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001be, 8) , (const, 0x2b0, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x100001c6, 4) , (const, 0x2b0, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x100001ca, 4) , (const, 0x2b0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001ce, 8) , (const, 0x2b0, 4)]
[ ---  CALL (ram, 0x121160, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x100001ae, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_SEXT (unique, 0x10000382, 4), (unique, 0x10000382, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000312, 4) , (unique, 0x10000316, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) INT_ADD (unique, 0x10000386, 8) , (register, 0x90, 8), (unique, 0x10000386, 8) CAST (stack, 0xffffffffffffffa0, 8), (register, 0x90, 8) INT_SEXT (unique, 0x10000382, 4), (unique, 0x10000382, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000312, 4) , (unique, 0x10000316, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0xa8, 8) CAST (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) INT_ADD (unique, 0x10000396, 8) , (register, 0x90, 8), (unique, 0x10000396, 8) CAST (unique, 0x100001ae, 8), (register, 0x90, 8) INT_SEXT (unique, 0x10000382, 4), (unique, 0x10000382, 4) CAST (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000312, 4) , (unique, 0x10000316, 4)]
[ ---  CBRANCH (ram, 0x24f2e4, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100003a6, 4), (unique, 0x100003a6, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_SUB (unique, 0x1000020b, 4) , (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000312, 4) , (unique, 0x10000316, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) INT_SUB (register, 0x28, 4) , (register, 0xb0, 4)]
[(register, 0xa0, 8) CAST (unique, 0x100003b2, 8), (unique, 0x100003b2, 8) INT_ADD (unique, 0x100003aa, 8) , (register, 0x10, 8), (unique, 0x100003aa, 8) CAST (register, 0xa0, 8), (register, 0x10, 8) INT_ZEXT (register, 0xb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0xb0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24f270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003c2, 8), (unique, 0x100003c2, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x3800, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x88, 4) INT_SUB (unique, 0x10000169, 4) , (unique, 0x10000171, 4), (unique, 0x10000169, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (unique, 0x10000171, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x100001db, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[(unique, 0x100001db, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3b80, 8)]
[(unique, 0x100001e3, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x100001eb, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001f3, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(unique, 0x100001f7, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x100001fb, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x24f1f3, 1) , (unique, 0x100001da, 1), (unique, 0x100001da, 1) INT_EQUAL (unique, 0x100001d6, 4) , (const, 0x0, 4), (unique, 0x100001d6, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001eb, 8) , (const, 0xc5, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x100001f3, 4) , (const, 0xc5, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x100001f7, 4) , (const, 0xc5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001fb, 8) , (const, 0xc5, 4)]
[ ---  CBRANCH (ram, 0x24f273, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8) , (register, 0x10, 4), (unique, 0xbd80, 8) CAST (unique, 0x100003da, 8), (unique, 0x100003da, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x8, 4), (register, 0xa8, 8) CAST (unique, 0x100003d2, 8), (unique, 0x100003d2, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) SUBPIECE (unique, 0x100001db, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ca, 8), (unique, 0x100003ca, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3b80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x100003e2, 8) , (register, 0x0, 8), (unique, 0x100003e2, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(register, 0x88, 4) INT_SUB (unique, 0x10000179, 4) , (unique, 0x10000181, 4), (unique, 0x10000179, 4) SUBPIECE (unique, 0x3b80, 8) , (const, 0x0, 4), (unique, 0x10000181, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (unique, 0x3b80, 8) INT_ADD (unique, 0x100003e2, 8) , (register, 0x0, 8), (unique, 0x100003e2, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x10000302, 4) COPY (unique, 0x100001d6, 4)]
[ ---  CBRANCH (ram, 0x24f202, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0xb0, 4) , (unique, 0x100001d6, 4)]
[(unique, 0x10000306, 4) COPY (register, 0xb0, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001eb, 8) , (const, 0x10f, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x100001f3, 4) , (const, 0x10f, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x100001f7, 4) , (const, 0x10f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001fb, 8) , (const, 0x10f, 4)]
[ ---  CALL (ram, 0x121160, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x100001e3, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_SEXT (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000302, 4) , (unique, 0x10000306, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) INT_ADD (unique, 0x100003ea, 8) , (register, 0x98, 8), (unique, 0x100003ea, 8) CAST (stack, 0xffffffffffffff98, 8), (register, 0x98, 8) INT_SEXT (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000302, 4) , (unique, 0x10000306, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0xa8, 8) CAST (unique, 0x10000402, 8), (unique, 0x10000402, 8) INT_ADD (unique, 0x100003fa, 8) , (register, 0x98, 8), (unique, 0x100003fa, 8) CAST (unique, 0x100001e3, 8), (register, 0x98, 8) INT_SEXT (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000302, 4) , (unique, 0x10000306, 4)]
[ ---  CBRANCH (ram, 0x24f1ad, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0xb0, 4), (register, 0xb0, 4) INT_SUB (register, 0xb0, 4) , (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (unique, 0x10000302, 4) , (unique, 0x10000306, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000040a, 8) , (register, 0x10, 4), (unique, 0x1000040a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_RIGHT (unique, 0x1bb80, 4) , (const, 0x1f, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffbc, 4) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x24f273, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffbc, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffbc, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffbc, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffbc, 4) , (const, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff7fffffff, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x24f38f, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24f180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0xb8, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffb8, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffb8, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffb8, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffb8, 4) , (const, 0x18, 4)]
[ ---  BRANCH (ram, 0x24f273, 1)]
[(register, 0x0, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x24f3af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000412, 8), (unique, 0x10000412, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f1, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
