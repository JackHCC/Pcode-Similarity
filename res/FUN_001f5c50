[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 16) COPY (const, 0x0, 16)]
[ ---  CBRANCH (ram, 0x1f60d1, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8), (register, 0xa8, 8) INT_MULT (register, 0xa8, 8) , (const, 0x10, 8), (register, 0xa8, 8) INT_SEXT (register, 0x30, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f5f1b, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x98, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x98, 4) , (unique, 0xbc80, 4)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000119, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x88, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f5cf1, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (unique, 0xbc80, 4)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002a4, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x98, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f5d32, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x90, 4) , (register, 0x80, 4), (register, 0x90, 4) SUBPIECE (register, 0x90, 8) , (const, 0x0, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x100002a4, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f5d2d, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) INT_ADD (register, 0x80, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1f5d18, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x80, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1000029c, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f5fd0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x80, 4) , (register, 0x38, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x10, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000029c, 8) , (register, 0x90, 8)]
[(register, 0x80, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x1f5cfb, 1)]
[ ---  CBRANCH (ram, 0x1f5d94, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f5d94, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000300, 8), (unique, 0x10000300, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0x90, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f5d8a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 4) , (register, 0x90, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8), (register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1f5d85, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) INT_ADD (register, 0x80, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1f5d70, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 4) , (register, 0x80, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f6000, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000318, 8), (unique, 0x10000318, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x80, 4) , (register, 0x38, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x10, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x90, 4)]
[(register, 0x80, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x1f5d50, 1)]
[ ---  CBRANCH (ram, 0x1f5f48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x1f5dd8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb8, 4) , (register, 0x38, 4), (register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1f5dd4, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x88, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_ADD (register, 0x38, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x1f5dc0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x30, 4) , (register, 0x38, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000294, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1f6018, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x88, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000330, 8), (unique, 0x10000330, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x30, 4) , (register, 0x38, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x10, 4)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000294, 8) , (register, 0xb8, 8)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x30, 4)]
[ ---  BRANCH (ram, 0x1f5d9f, 1)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x88, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000338, 8), (unique, 0x10000338, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000348, 8), (unique, 0x10000348, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0x80, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f5e28, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 4) , (unique, 0x100001d1, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (unique, 0x100001d1, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1f5e24, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x88, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x30, 4) , (unique, 0x100001d1, 4)]
[ ---  CBRANCH (ram, 0x1f5e10, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 4) , (register, 0x30, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f5f48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x88, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000358, 8), (unique, 0x10000358, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f6030, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x88, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x30, 4) , (register, 0x10, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x100001d1, 4)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  BRANCH (ram, 0x1f5df5, 1)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000368, 8), (unique, 0x10000368, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f5e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f609f, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (stack, 0xffffffffffffffa8, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (stack, 0xffffffffffffffac, 4) , (register, 0x0, 4), (stack, 0xffffffffffffffa8, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 8), (stack, 0xffffffffffffffac, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x595, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x595, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x595, 4)]
[ ---  CBRANCH (ram, 0x1f6085, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (stack, 0xffffffffffffffb0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (const, 0x2, 4), (register, 0x30, 8) INT_SEXT (register, 0xb0, 4), (stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8), (register, 0xb0, 4) INT_ADD (stack, 0xffffffffffffffa8, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 16) INT_ADD (unique, 0x10000274, 16) , (register, 0xb0, 4), (unique, 0x10000274, 16) INT_LEFT (unique, 0x10000264, 16) , (const, 0x20, 16), (unique, 0x10000264, 16) INT_SEXT (stack, 0xffffffffffffffac, 12), (stack, 0xffffffffffffffac, 12) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x4, 8), (stack, 0xffffffffffffffa8, 16) INT_ADD (unique, 0x10000254, 16) , (stack, 0xffffffffffffffa8, 8), (unique, 0x10000254, 16) INT_LEFT (unique, 0x10000244, 16) , (const, 0x40, 16), (unique, 0x10000244, 16) INT_SEXT (unique, 0x10000378, 8), (unique, 0x10000378, 8) CAST (register, 0x0, 8), (stack, 0xffffffffffffffa8, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f5f80, 1)]
[(register, 0x0, 4) COPY (const, 0xc, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x527, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x527, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x527, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1f608a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1efc80, 8) , (unique, 0x3800, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x558, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x558, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x558, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[ ---  BRANCH (ram, 0x1f5f22, 1)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f5cb0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000119, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000380, 8), (unique, 0x10000380, 8) INT_ADD (register, 0xa8, 8) , (const, 0x4, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f5cb0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0x98, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000119, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb0, 8) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x8, 8), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[ ---  CBRANCH (ram, 0x1f5f1b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x98, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000388, 8), (unique, 0x10000388, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x1, 8)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000390, 8), (unique, 0x10000390, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1f5eb5, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (stack, 0xffffffffffffffac, 4) , (const, 0x1, 4), (stack, 0xffffffffffffffac, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x4, 8)]
[(register, 0x90, 4) INT_SUB (stack, 0xffffffffffffffac, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f5eb0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (register, 0x90, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1f5eac, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) INT_ADD (unique, 0x10000398, 8) , (unique, 0x3300, 8), (unique, 0x10000398, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x8, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1f5e98, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f5fb8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) INT_ADD (unique, 0x100003a8, 8) , (unique, 0x3300, 8), (unique, 0x100003a8, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x90, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  BRANCH (ram, 0x1f5e7d, 1)]
[ ---  CBRANCH (ram, 0x1f5f0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (unique, 0x100003b8, 8) , (unique, 0x3300, 8), (unique, 0x100003b8, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f5f0b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003c8, 8), (unique, 0x100003c8, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003d0, 8), (unique, 0x100003d0, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002ac, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f5f00, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 4) , (unique, 0x100001d5, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (unique, 0x100001d5, 4) MULTIEQUAL (unique, 0x100002ac, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1f5efc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003d8, 8), (unique, 0x100003d8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x8, 4) , (unique, 0x100001d5, 4)]
[ ---  CBRANCH (ram, 0x1f5ee8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f5fe8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003e0, 8), (unique, 0x100003e0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x100001d5, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  BRANCH (ram, 0x1f5ecc, 1)]
[ ---  CBRANCH (ram, 0x1f6040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003e8, 8), (unique, 0x100003e8, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f5f0b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x100003f0, 4), (unique, 0x100003f0, 4) CAST (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f5f0b, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x100003f4, 4) , (unique, 0xbc80, 4), (unique, 0x100003f4, 4) CAST (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x3100, 4), (unique, 0x3800, 8) CAST (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f607c, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x10000400, 4) , (unique, 0x10000404, 4), (unique, 0x10000404, 4) CAST (unique, 0x3100, 4), (unique, 0x10000400, 4) CAST (register, 0x8, 4)]
[(unique, 0x10000284, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000408, 4), (unique, 0x10000408, 4) CAST (register, 0x8, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000284, 8) , (unique, 0x1000028c, 8)]
[(unique, 0x1000028c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000284, 8) , (unique, 0x1000028c, 8)]
[ ---  CBRANCH (ram, 0x1f6068, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x1000041c, 4) , (unique, 0x5200, 4), (unique, 0x1000041c, 4) CAST (register, 0x10, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x10, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000420, 8), (unique, 0x10000420, 8) INT_ADD (register, 0xa8, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1f5f0b, 1)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f5e68, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x100001c9, 4) , (register, 0x98, 4), (unique, 0x100001c9, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ec, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x3ec, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ec, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f60d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000428, 8), (unique, 0x10000428, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x421, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x421, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
