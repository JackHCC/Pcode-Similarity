[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b7, 8) , (stack, 0x18, 4), (unique, 0x100001b7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e28a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0x8, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x10, 8) , (stack, 0x8, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e28a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3b80, 8) , (register, 0x38, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (stack, 0x10, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x28, 8) , (stack, 0x10, 8) , (unique, 0x3100, 8), (register, 0x28, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e28b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1e2960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x8, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000018f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1e2803, 1)]
[(unique, 0x10000197, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) COPY (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) MULTIEQUAL (unique, 0x1000018f, 8) , (unique, 0x10000197, 8)]
[ ---  CBRANCH (ram, 0x1e2800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (stack, 0x20, 8) , (unique, 0x3100, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) COPY (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) MULTIEQUAL (unique, 0x1000018f, 8) , (unique, 0x10000197, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001a7, 8) COPY (unique, 0x3b80, 8)]
[ ---  CBRANCH (ram, 0x1e286f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xc, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e2840, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001a7, 8) , (unique, 0x100001af, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0xb8, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (register, 0xb8, 8) CAST (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) INT_ADD (unique, 0x100001df, 8) , (register, 0x18, 8), (unique, 0x100001df, 8) CAST (register, 0x0, 8), (register, 0xb8, 8) CAST (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) INT_ADD (register, 0xb8, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) CAST (register, 0x10, 8)]
[(unique, 0x100001af, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e28e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x100001f7, 8), (unique, 0x100001f7, 8) INT_ADD (unique, 0x100001ef, 8) , (register, 0x18, 8), (unique, 0x100001ef, 8) CAST (stack, 0x20, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x3580, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000217, 8), (unique, 0x10000217, 8) INT_ADD (unique, 0x1000020f, 8) , (register, 0x18, 8), (unique, 0x1000020f, 8) CAST (stack, 0xffffffffffffffa8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000207, 8), (unique, 0x10000207, 8) INT_ADD (unique, 0x100001ff, 8) , (register, 0x80, 8), (unique, 0x100001ff, 8) CAST (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3b80, 8)]
[ ---  CBRANCH (ram, 0x1e28ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000015b, 8) , (const, 0x0, 8), (unique, 0x1000015b, 8) INT_AND (unique, 0x1000021f, 8) , (const, 0x7, 8), (unique, 0x1000021f, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000207, 8), (unique, 0x10000207, 8) INT_ADD (unique, 0x100001ff, 8) , (register, 0x80, 8), (unique, 0x100001ff, 8) CAST (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3b80, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000022f, 8), (unique, 0x1000022f, 8) INT_ADD (unique, 0x10000227, 8) , (register, 0x80, 8), (unique, 0x10000227, 8) CAST (register, 0x10, 8), (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (register, 0x0, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1e288e, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x80, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x1e28a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x28, 8), (unique, 0x3400, 8) CAST (unique, 0x1000023f, 8), (unique, 0x1000023f, 8) INT_ADD (unique, 0x10000237, 8) , (unique, 0x3400, 8), (unique, 0x10000237, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e28a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000247, 8) , (unique, 0x3100, 8), (unique, 0x10000247, 8) CAST (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x22, 8)]
