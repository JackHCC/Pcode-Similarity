[(unique, 0x100001e5, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001e2, 1) MULTIEQUAL (unique, 0x100001e5, 1) , (unique, 0x100001e4, 1) , (unique, 0x100001e2, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000297, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1806b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x28, 4) COPY (unique, 0x1000029f, 4), (unique, 0x1000029f, 4) MULTIEQUAL (unique, 0x10000297, 4) , (unique, 0x1000029b, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1806a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x72, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000029b, 4) COPY (register, 0x28, 4), (register, 0x28, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x180651, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x180868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x77, 1)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x180649, 1)]
[ ---  CBRANCH (ram, 0x180858, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x65, 1)]
[(unique, 0x100001e4, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x180649, 1)]
[ ---  CBRANCH (ram, 0x18066f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x78, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x78, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x78, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x78, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x78, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x78, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x78, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x78, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x78, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000303, 8) , (const, 0x16, 4), (unique, 0x10000303, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x180880, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe1, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0xe1, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0xe1, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0xe1, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0xe1, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0xe1, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0xe1, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xe1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe1, 4)]
[ ---  CBRANCH (ram, 0x180880, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210a30, 8) , (unique, 0x1000030b, 8) , (const, 0x80000, 4), (unique, 0x1000030b, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[(unique, 0x1000028f, 4) COPY (stack, 0xffffffffffffffbc, 4)]
[ ---  CBRANCH (ram, 0x1806fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0xb0, 4) COPY (const, 0x8, 4)]
[(unique, 0x1000028b, 4) COPY (stack, 0xffffffffffffffb8, 4)]
[(unique, 0x10000293, 4) COPY (stack, 0xffffffffffffffbc, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xb8, 4) MULTIEQUAL (unique, 0x1000028f, 4) , (unique, 0x1000028b, 4)]
[(register, 0x38, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (unique, 0x10000293, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x10b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x10b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x117, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10b, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x117, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x10b, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x117, 4), (ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x10b, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x117, 4), (ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x10b, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x117, 4), (ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x10b, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x117, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x10b, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x117, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x10b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x117, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x10b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x117, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x38, 8) , (const, 0x4, 8), (register, 0x0, 4) CALL (ram, 0x1e4a50, 8)]
[ ---  CBRANCH (ram, 0x1808c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e4a50, 8)]
[ ---  CBRANCH (ram, 0x18091d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (register, 0x28, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b5, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x2b5, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x2b5, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x2b5, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2b5, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2b5, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2b5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b5, 4)]
[ ---  CALL (ram, 0x2109a0, 8) , (register, 0x38, 4) , (register, 0x28, 4)]
[(unique, 0x1000027b, 8) COPY (ram, 0x4ed870, 8), (ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x1808d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000273, 8) , (unique, 0x1000027b, 8) , (unique, 0x10000283, 8)]
[ ---  CALL (ram, 0x1e5160, 8) , (unique, 0x100001fd, 8) , (unique, 0x10000205, 8) , (unique, 0x100001f5, 8) , (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x10000205, 8) COPY (const, 0x2b3e9f, 8), (unique, 0x100001fd, 8) COPY (const, 0x2b3e9a, 8), (unique, 0x100001f5, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3e97, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2dd, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x2e1, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x2dd, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x2e1, 4), (ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x2dd, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x2e1, 4), (ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x2dd, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x2e1, 4), (ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x2dd, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2e1, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2dd, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2e1, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2dd, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2e1, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2dd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e1, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2dd, 4)]
[ ---  CALL (ram, 0x1e4dd0, 8) , (const, 0x7f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fb, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x2fb, 4), (ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x2fb, 4), (ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x2fb, 4), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2fb, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2fb, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2fb, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2fb, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fb, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2105a0, 8) , (register, 0x28, 4) , (const, 0x2, 4) , (const, 0x0, 8)]
[(unique, 0x10000283, 8) COPY (ram, 0x4ed870, 8), (ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x2fb, 4), (ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[ ---  BRANCH (ram, 0x1808d0, 1)]
[ ---  CBRANCH (ram, 0x1808e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30d, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x30d, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x30d, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x30d, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x30d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x30d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x30d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x30d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x30d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30d, 4)]
[ ---  CALL (ram, 0x210940, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000273, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000313, 8), (unique, 0x10000313, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x3a, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x122, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x122, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x122, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x122, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x122, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x122, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x122, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x122, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x122, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x122, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x122, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x122, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x122, 4)]
[ ---  CALL (ram, 0x210940, 8)]
[ ---  CBRANCH (ram, 0x180872, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000031b, 4), (unique, 0x1000031b, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x180890, 1) , (unique, 0x100001e3, 1), (unique, 0x100001e3, 1) BOOL_NEGATE (unique, 0x100001e2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x293, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x293, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x293, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x293, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x293, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x293, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x293, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x293, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x293, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x293, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x293, 4)]
[ ---  CALL (ram, 0x2105a0, 8) , (register, 0xb8, 4) , (const, 0x2, 4) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x180734, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x13f, 4), (ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x13f, 4), (ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x13f, 4), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x13f, 4), (ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x13f, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x13f, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x13f, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13f, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1808a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000026f, 4) , (const, 0x0, 4), (unique, 0x1000026f, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) PTRSUB (const, 0x0, 8) , (const, 0x1805d0, 8)]
[ ---  BRANCH (ram, 0x18076a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x179, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x179, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x179, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x179, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x179, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x179, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x179, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x179, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x179, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x179, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x179, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x179, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x179, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0x100001ed, 8) , (const, 0x0, 8), (unique, 0x100001ed, 8) PTRSUB (const, 0x0, 8) , (const, 0x1805d0, 8), (register, 0x0, 8) CAST (unique, 0x10000327, 8), (unique, 0x10000327, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000031f, 8), (unique, 0x1000031f, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002bb, 8) COPY (ram, 0x4ed868, 8), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[ ---  CBRANCH (ram, 0x1807c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed868, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000032f, 8), (unique, 0x1000032f, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[ ---  CBRANCH (ram, 0x180798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed860, 4) , (const, 0x0, 4)]
[(ram, 0x4ed860, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002d3, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed860, 4) , (const, 0x0, 4)]
[(ram, 0x4ed860, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002c3, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1807bb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x258, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x258, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x258, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x258, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x258, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x258, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x258, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x258, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x258, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x258, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x258, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x258, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x258, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000215, 8), (unique, 0x10000215, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed860, 8)]
[(unique, 0x100002cb, 8) COPY (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x258, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x1b4, 4), (ram, 0x4ed868, 8) MULTIEQUAL (unique, 0x100002bb, 8) , (unique, 0x100002c3, 8) , (unique, 0x100002cb, 8) , (unique, 0x100002d3, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1b4, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1b4, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1b4, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b4, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000337, 8) , (ram, 0x4ed870, 8), (unique, 0x10000337, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x3a, 8) , (const, 0x4, 8), (ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed870, 8) COPY (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) INDIRECT (unique, 0x100002e3, 8) , (const, 0x1b4, 4), (unique, 0x100002e3, 8) COPY (unique, 0x100002db, 8), (unique, 0x100002db, 8) COPY (register, 0x38, 8)]
[(unique, 0x100002a3, 4) COPY (ram, 0x4ed860, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x1b4, 4), (ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[ ---  CBRANCH (ram, 0x180822, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed864, 4) , (const, 0x0, 4), (ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x1b4, 4), (ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x180800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100002ab, 4) COPY (unique, 0x10000265, 4), (unique, 0x10000265, 4) INT_ADD (ram, 0x4ed860, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x180822, 1) , (unique, 0x10000269, 1), (unique, 0x10000269, 1) INT_NOTEQUAL (unique, 0x10000265, 4) , (const, 0x0, 4), (unique, 0x10000265, 4) INT_ADD (ram, 0x4ed860, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x239, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x239, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x239, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x239, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x239, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x239, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x239, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x239, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x239, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x239, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x239, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x239, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed860, 8)]
[(unique, 0x100002a7, 4) COPY (ram, 0x4ed860, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x239, 4), (ram, 0x4ed860, 4) INT_ADD (ram, 0x4ed860, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed860, 4) COPY (unique, 0x100002af, 4), (unique, 0x100002af, 4) MULTIEQUAL (unique, 0x100002a3, 4) , (unique, 0x100002a7, 4) , (unique, 0x100002ab, 4)]
[ ---  CBRANCH (ram, 0x180843, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000026f, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x211, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x211, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x211, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x211, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x211, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x211, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x211, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x211, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x211, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x211, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x211, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x211, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x211, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000347, 8), (unique, 0x10000347, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000033f, 8), (unique, 0x1000033f, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x22a, 4), (ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x22a, 4), (ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x22a, 4), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x22a, 4), (ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x22a, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x22a, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x22a, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x22a, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0xb0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff3, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x18067f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x299, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x299, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x299, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x299, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x299, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x299, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x299, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x299, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x299, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x299, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x299, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x299, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x299, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0xb8, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x18067f, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1808c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xad, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xad, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xad, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xad, 4)]
[(ram, 0x4ed860, 4) COPY (ram, 0x4ed860, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0xad, 4)]
[(ram, 0x4ed864, 4) COPY (ram, 0x4ed864, 4), (ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0xad, 4)]
[(ram, 0x4ed868, 8) COPY (ram, 0x4ed868, 8), (ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0xad, 4)]
[(ram, 0x4ed870, 8) COPY (ram, 0x4ed870, 8), (ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0xad, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0xad, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0xad, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xad, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xad, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ed860, 4) COPY (ram, 0x4ed860, 4)]
[(ram, 0x4ed864, 4) COPY (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) COPY (ram, 0x4ed868, 8)]
[(ram, 0x4ed870, 8) COPY (ram, 0x4ed870, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
