[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001bb, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001b8, 1) MULTIEQUAL (unique, 0x100001bb, 1) , (unique, 0x100001ba, 1) , (unique, 0x100001b8, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000268, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x16f24c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x28, 4) COPY (unique, 0x10000270, 4), (unique, 0x10000270, 4) MULTIEQUAL (unique, 0x10000268, 4) , (unique, 0x1000026c, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x16f240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x72, 1), (register, 0x8, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x28, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000026c, 4) COPY (register, 0x28, 4), (register, 0x28, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x16f202, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x16f3e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x77, 1)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x16f1fb, 1)]
[ ---  CBRANCH (ram, 0x16f3d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x65, 1)]
[(unique, 0x100001ba, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x16f1fb, 1)]
[ ---  CBRANCH (ram, 0x16f21d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (register, 0x0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002cc, 8) , (const, 0x16, 4), (unique, 0x100002cc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x72, 4)]
[(ram, 0x4c5720, 4) COPY (ram, 0x4c5720, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x72, 4)]
[(ram, 0x4c5724, 4) COPY (ram, 0x4c5724, 4), (ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x72, 4)]
[(ram, 0x4c5728, 8) COPY (ram, 0x4c5728, 8), (ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x72, 4)]
[(ram, 0x4c5730, 8) COPY (ram, 0x4c5730, 8), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x72, 4)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x72, 4)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x72, 4)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x72, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x72, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16f410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc6, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0xc6, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0xc6, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0xc6, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0xc6, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xc6, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xc6, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xc6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc6, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xc6, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xc6, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xc6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc6, 4)]
[ ---  CBRANCH (ram, 0x16f410, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f7150, 8) , (unique, 0x100002d4, 8) , (const, 0x80000, 4), (unique, 0x100002d4, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[ ---  CBRANCH (ram, 0x16f420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffff94, 4) COPY (const, 0x8, 4)]
[(unique, 0x1000025c, 4) COPY (stack, 0xffffffffffffff98, 4)]
[(unique, 0x10000264, 4) COPY (stack, 0xffffffffffffff9c, 4)]
[ ---  BRANCH (ram, 0x16f28b, 1)]
[(stack, 0xffffffffffffff94, 4) COPY (const, 0x4, 4)]
[(unique, 0x10000260, 4) COPY (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(register, 0xb8, 4) MULTIEQUAL (unique, 0x10000260, 4) , (unique, 0x1000025c, 4)]
[(register, 0xb0, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (unique, 0x10000264, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe9, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0xf7, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0xe9, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0xf7, 4), (ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0xe9, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0xf7, 4), (ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0xe9, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0xf7, 4), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0xe9, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xf7, 4), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xe9, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xf7, 4), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xe9, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xf7, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xe9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf7, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x38, 8) , (const, 0x4, 8), (register, 0x0, 4) CALL (ram, 0x1cb910, 8)]
[ ---  CBRANCH (ram, 0x16f4a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1cb910, 8)]
[ ---  CBRANCH (ram, 0x16f512, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (register, 0x28, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x33c, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x33c, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x33c, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x33c, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x33c, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x33c, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x33c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x33c, 4)]
[ ---  CALL (ram, 0x1f6df0, 8) , (register, 0x28, 4) , (const, 0x2, 4) , (const, 0x0, 8)]
[(unique, 0x10000254, 8) COPY (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) CAST (ram, 0x4c5730, 8), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x33c, 4)]
[ ---  BRANCH (ram, 0x16f4b8, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c5, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x2c5, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x2c5, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x2c5, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2c5, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2c5, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2c5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2c5, 4)]
[ ---  CALL (ram, 0x1f70c0, 8) , (register, 0xb0, 4) , (register, 0x28, 4)]
[(unique, 0x1000024c, 8) COPY (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) CAST (ram, 0x4c5730, 8), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x2c5, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5720, 4) MULTIEQUAL (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4)]
[(ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[(ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x16f4c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000244, 8) , (unique, 0x1000024c, 8) , (unique, 0x10000254, 8)]
[ ---  CBRANCH (ram, 0x16f4da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) INT_ADD (register, 0x10, 8) , (const, 0x70, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(unique, 0x10000244, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) INT_ADD (register, 0x10, 8) , (const, 0xe8, 8)]
[ ---  CALL (ram, 0x1cbfa0, 8) , (unique, 0x100001d1, 8) , (unique, 0x100001d9, 8) , (unique, 0x100001c9, 8) , (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x100001d9, 8) COPY (const, 0x28c590, 8), (unique, 0x100001d1, 8) COPY (const, 0x28c58b, 8), (unique, 0x100001c9, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c588, 8)]
[ ---  CALL (ram, 0x1cbc90, 8) , (const, 0x7f, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ee, 4)]
[(ram, 0x4c5720, 4) COPY (ram, 0x4c5720, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x2f2, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x2ee, 4)]
[(ram, 0x4c5724, 4) COPY (ram, 0x4c5724, 4), (ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x2f2, 4), (ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x2ee, 4)]
[(ram, 0x4c5728, 8) COPY (ram, 0x4c5728, 8), (ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x2f2, 4), (ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x2ee, 4)]
[(ram, 0x4c5730, 8) COPY (ram, 0x4c5730, 8), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x2f2, 4), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x2ee, 4)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2f2, 4), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2ee, 4)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2f2, 4), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2ee, 4)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2f2, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2ee, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2f2, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2ee, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x16f3ea, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x100002fc, 4), (unique, 0x100002fc, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x16f460, 1) , (unique, 0x100001b9, 1), (unique, 0x100001b9, 1) BOOL_NEGATE (unique, 0x100001b8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27b, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x27b, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x27b, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x27b, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x27b, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x27b, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x27b, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x27b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x27b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x27b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x27b, 4)]
[ ---  CALL (ram, 0x1f6df0, 8) , (register, 0xb8, 4) , (const, 0x2, 4) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x16f2c7, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x120, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x120, 4), (ram, 0x4c5720, 4) MULTIEQUAL (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x120, 4), (ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x120, 4), (ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x120, 4), (ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x120, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x120, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x120, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x120, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x16f437, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000240, 4) , (const, 0x0, 4), (unique, 0x10000240, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x260, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x260, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x260, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x260, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x260, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x260, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x260, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x260, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x260, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x260, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x260, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x260, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0x100001c1, 8) , (const, 0x0, 8), (unique, 0x100001c1, 8) PTRSUB (const, 0x0, 8) , (const, 0x16f190, 8), (register, 0x0, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000300, 8), (unique, 0x10000300, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8750, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8750, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x16f2ee, 1)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x16f190, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c5720, 4) MULTIEQUAL (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x1000028c, 8) COPY (ram, 0x4c5728, 8), (ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[ ---  CBRANCH (ram, 0x16f346, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c5728, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[ ---  CBRANCH (ram, 0x16f31c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5720, 4) , (const, 0x0, 4)]
[(ram, 0x4c5720, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002a4, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5720, 4) , (const, 0x0, 4)]
[(ram, 0x4c5720, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000294, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x16f33f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x217, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x217, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x217, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x217, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x217, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x217, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x217, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x217, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x217, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x217, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x217, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x217, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5720, 8)]
[(unique, 0x1000029c, 8) COPY (unique, 0x10000284, 8), (unique, 0x10000284, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x217, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x16d, 4), (ram, 0x4c5728, 8) MULTIEQUAL (unique, 0x1000028c, 8) , (unique, 0x10000294, 8) , (unique, 0x1000029c, 8) , (unique, 0x100002a4, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x16d, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x16d, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x16d, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x16d, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000318, 8) , (ram, 0x4c5730, 8), (unique, 0x10000318, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x3a, 8) , (const, 0x4, 8), (ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c5730, 8) COPY (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INDIRECT (unique, 0x100002b4, 8) , (const, 0x16d, 4), (unique, 0x100002b4, 8) COPY (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000274, 4) COPY (ram, 0x4c5720, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x16d, 4), (ram, 0x4c5720, 4) MULTIEQUAL (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4)]
[ ---  CBRANCH (ram, 0x16f3a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5724, 4) , (const, 0x0, 4), (ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x16d, 4), (ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c5728, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16f384, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000027c, 4) COPY (unique, 0x10000239, 4), (unique, 0x10000239, 4) INT_ADD (ram, 0x4c5720, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x16f3a6, 1) , (unique, 0x1000023d, 1), (unique, 0x1000023d, 1) INT_NOTEQUAL (unique, 0x10000239, 4) , (const, 0x0, 4), (unique, 0x10000239, 4) INT_ADD (ram, 0x4c5720, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f8, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x1f8, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x1f8, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x1f8, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1f8, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1f8, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1f8, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f8, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5720, 8)]
[(unique, 0x10000278, 4) COPY (ram, 0x4c5720, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x1f8, 4), (ram, 0x4c5720, 4) INT_ADD (ram, 0x4c5720, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[(ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5720, 4) COPY (unique, 0x10000280, 4), (unique, 0x10000280, 4) MULTIEQUAL (unique, 0x10000274, 4) , (unique, 0x10000278, 4) , (unique, 0x1000027c, 4)]
[ ---  CBRANCH (ram, 0x16f476, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000240, 4) , (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x1ea, 4)]
[(ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x1ea, 4)]
[(ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1ea, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ea, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1ea, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ea, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8758, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8758, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x16f3ae, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0xa8, 4), (register, 0xa8, 4) INT_OR (stack, 0xffffffffffffff94, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff3, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ba, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5720, 4) COPY (ram, 0x4c5720, 4), (ram, 0x4c5720, 4) INDIRECT (ram, 0x4c5720, 4) , (const, 0x1ba, 4), (ram, 0x4c5720, 4) MULTIEQUAL (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4)]
[(ram, 0x4c5724, 4) COPY (ram, 0x4c5724, 4), (ram, 0x4c5724, 4) INDIRECT (ram, 0x4c5724, 4) , (const, 0x1ba, 4), (ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c5728, 8) COPY (ram, 0x4c5728, 8), (ram, 0x4c5728, 8) INDIRECT (ram, 0x4c5728, 8) , (const, 0x1ba, 4), (ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[(ram, 0x4c5730, 8) COPY (ram, 0x4c5730, 8), (ram, 0x4c5730, 8) INDIRECT (ram, 0x4c5730, 8) , (const, 0x1ba, 4), (ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1ba, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1ba, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1ba, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ba, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c5720, 4) COPY (ram, 0x4c5720, 4), (ram, 0x4c5720, 4) MULTIEQUAL (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4) , (ram, 0x4c5720, 4)]
[(ram, 0x4c5724, 4) COPY (ram, 0x4c5724, 4), (ram, 0x4c5724, 4) MULTIEQUAL (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4) , (ram, 0x4c5724, 4)]
[(ram, 0x4c5728, 8) COPY (ram, 0x4c5728, 8), (ram, 0x4c5728, 8) MULTIEQUAL (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8) , (ram, 0x4c5728, 8)]
[(ram, 0x4c5730, 8) COPY (ram, 0x4c5730, 8), (ram, 0x4c5730, 8) MULTIEQUAL (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8) , (ram, 0x4c5730, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
