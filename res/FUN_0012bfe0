[(unique, 0x1000010f, 8) COPY (ram, 0x4eca30, 8)]
[ ---  CBRANCH (ram, 0x12c183, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eca30, 8) , (const, 0x0, 8)]
[(ram, 0x4eca28, 4) COPY (ram, 0x4eca28, 4)]
[(ram, 0x4eca30, 8) COPY (ram, 0x4eca30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) INT_ADD (ram, 0x4eca30, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) INT_ADD (ram, 0x4eca30, 8) , (const, 0x6, 8)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x3c, 4)]
[(unique, 0x2e680, 8) INT_REM (unique, 0x2e300, 8) , (register, 0xa8, 8), (unique, 0x2e300, 8) INT_ZEXT (register, 0x0, 4), (register, 0xa8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (unique, 0x1000010f, 8) , (const, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x13cfb0, 8)]
[(register, 0x38, 4) INT_SUB (ram, 0x4eca28, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000147, 8), (unique, 0x10000147, 8) INT_ADD (unique, 0x1000010f, 8) , (const, 0x4, 8), (ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0x3c, 4)]
[(register, 0x28, 4) INT_ADD (unique, 0x10000081, 4) , (const, 0x1, 4), (unique, 0x10000081, 4) INT_REM (register, 0x0, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0x10000075, 4) , (const, 0x2, 4), (unique, 0x10000075, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_ADD (unique, 0x1000010f, 8) , (const, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x13cfb0, 8)]
[ ---  BRANCH (ram, 0x12c080, 1)]
[(ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca28, 4) MULTIEQUAL (ram, 0x4eca28, 4) , (ram, 0x4eca28, 4)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x2e680, 8) , (register, 0x18, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) INT_ADD (unique, 0x1000010f, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x2e680, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x12c050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) INT_ADD (unique, 0x1000010f, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x2e680, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x12c06f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 4) , (register, 0x38, 4)]
[(ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0xfd, 4)]
[(unique, 0x10000117, 8) COPY (ram, 0x4eca30, 8), (ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0xfd, 4)]
[ ---  CBRANCH (ram, 0x12c0c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000010f, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x2, 8)]
[(register, 0xa8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) INT_ADD (ram, 0x4eca30, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) INT_ADD (ram, 0x4eca30, 8) , (const, 0x6, 8)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x145, 4)]
[(unique, 0x2e680, 8) INT_REM (unique, 0x2e300, 8) , (register, 0x18, 8), (unique, 0x2e300, 8) INT_ZEXT (register, 0x0, 4), (register, 0x18, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) INT_ADD (unique, 0x10000117, 8) , (const, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x13cfb0, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) INT_ADD (unique, 0x100000bf, 4) , (const, 0x1, 4), (unique, 0x100000bf, 4) INT_REM (register, 0x0, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0x100000b7, 4) , (const, 0x2, 4), (unique, 0x100000b7, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) INT_ADD (unique, 0x10000117, 8) , (const, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x13cfb0, 8) , (register, 0x30, 8)]
[(register, 0x8, 4) INT_SUB (ram, 0x4eca28, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000177, 8), (unique, 0x10000177, 8) INT_ADD (unique, 0x10000117, 8) , (const, 0x4, 8), (ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0x145, 4)]
[ ---  BRANCH (ram, 0x12c149, 1)]
[(ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca28, 4) MULTIEQUAL (ram, 0x4eca28, 4) , (ram, 0x4eca28, 4)]
[(register, 0x28, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (register, 0x28, 8) MULTIEQUAL (unique, 0x2e680, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x12c118, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000017f, 8), (unique, 0x1000017f, 8) INT_ADD (unique, 0x10000117, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0xa0, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x4, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x2e680, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[(ram, 0x4eca28, 4) COPY (ram, 0x4eca28, 4), (ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0xae, 4), (ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0xa9, 4), (ram, 0x4eca28, 4) MULTIEQUAL (ram, 0x4eca28, 4) , (ram, 0x4eca28, 4)]
[(ram, 0x4eca30, 8) COPY (ram, 0x4eca30, 8), (ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0xae, 4), (ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0xa9, 4), (ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x12c138, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 4) , (register, 0x8, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbc00, 2)]
[(ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0x1d8, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x1d8, 4)]
[(register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000117, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0xa8, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbc00, 2)]
[ ---  CBRANCH (ram, 0x12c161, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000117, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0xa8, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbc00, 2)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x2, 8)]
[(ram, 0x4eca28, 4) COPY (ram, 0x4eca28, 4), (ram, 0x4eca28, 4) INDIRECT (ram, 0x4eca28, 4) , (const, 0x225, 4)]
[(ram, 0x4eca30, 8) COPY (ram, 0x4eca30, 8), (ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x225, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca28, 4) MULTIEQUAL (ram, 0x4eca28, 4) , (ram, 0x4eca28, 4)]
[(register, 0x10, 4) INT_SUB (register, 0x28, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x0, 4)]
[(unique, 0x10000127, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x12c147, 1) , (unique, 0x100000fb, 1), (unique, 0x100000fb, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x28, 4), (register, 0x18, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x200, 1) INT_LESS (register, 0x18, 4) , (register, 0x28, 4), (register, 0x18, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x28, 4) INT_ADD (register, 0x28, 4) , (register, 0x0, 4)]
[(unique, 0x1000012b, 4) COPY (register, 0x10, 4)]
[(register, 0x28, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000127, 4) , (unique, 0x1000012b, 4)]
[(ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca28, 4) MULTIEQUAL (ram, 0x4eca28, 4) , (ram, 0x4eca28, 4)]
[(register, 0x10, 4) INT_SUB (register, 0x18, 4) , (register, 0xa8, 4), (register, 0xa8, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x28, 4)]
[(unique, 0x1000011f, 4) COPY (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x12c07e, 1) , (unique, 0x100000f6, 1), (unique, 0x100000f6, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (register, 0x18, 4), (register, 0xa8, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x200, 1) INT_LESS (register, 0xa8, 4) , (register, 0x18, 4), (register, 0xa8, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0x28, 4)]
[(unique, 0x10000123, 4) COPY (register, 0x10, 4)]
[(register, 0x18, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000011f, 4) , (unique, 0x10000123, 4)]
