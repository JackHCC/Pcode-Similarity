[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x2e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x2e, 4)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x2e, 4)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x2e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x2e, 4), (stack, 0xffffffffffffffc4, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2e, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x235a10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x245ec0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1b4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b4, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x1b4, 4)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x1b4, 4)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x1b4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ef, 8) , (const, 0xffffffff, 4), (unique, 0x100001ef, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100001ab, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2359a2, 1)]
[ ---  CBRANCH (ram, 0x235844, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef328, 4) , (const, 0x0, 4)]
[(ram, 0x4ef328, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef328, 4) , (const, 0x0, 4)]
[(ram, 0x4ef328, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x235867, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x197, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x197, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x197, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x197, 4)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x197, 4)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x197, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x197, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000184, 8), (unique, 0x10000184, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef328, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef328, 4) MULTIEQUAL (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4)]
[(ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2359e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec930, 8) , (const, 0x0, 8), (ram, 0x4ec930, 8) MULTIEQUAL (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17e, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x17e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17e, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x17e, 4)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x17e, 4), (ram, 0x4ef320, 8) COPY (const, 0x400, 8)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x17e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17e, 4)]
[ ---  CBRANCH (ram, 0x23594e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001f7, 8), (unique, 0x100001f7, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x8d, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x8d, 4), (ram, 0x4ec930, 8) MULTIEQUAL (ram, 0x4ec930, 8) , (register, 0x0, 8)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x8d, 4), (ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x8d, 4), (ram, 0x4ef328, 4) MULTIEQUAL (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x8d, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x8d, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x8d, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x235957, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24ab70, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (unique, 0x10000164, 8) , (unique, 0x1000015c, 8) , (unique, 0x10000174, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x2, 8) , (unique, 0x3800, 8), (unique, 0x10000174, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef320, 8), (unique, 0x10000164, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef300, 8), (unique, 0x1000015c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ec930, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(unique, 0x100001c3, 8) COPY (ram, 0x4ec930, 8)]
[ ---  CBRANCH (ram, 0x23594e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec930, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xb6, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb6, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0xb6, 4), (ram, 0x4ec930, 8) COPY (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) MULTIEQUAL (unique, 0x100001c3, 8) , (unique, 0x100001cb, 8)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0xb6, 4), (ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0xb6, 4), (ram, 0x4ef328, 4) MULTIEQUAL (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb6, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xb6, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x2359d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x2361e0, 8) , (register, 0x38, 8) , (unique, 0x1000016c, 8) , (ram, 0x4ec930, 8) , (ram, 0x4ef320, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x1000016c, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef300, 8), (ram, 0x4ec930, 8) COPY (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) MULTIEQUAL (unique, 0x100001c3, 8) , (unique, 0x100001cb, 8), (ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[ ---  CBRANCH (ram, 0x2359d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x235957, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec930, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd9, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xd9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd9, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0xd9, 4)]
[(ram, 0x4ef320, 8) INDIRECT (unique, 0x1000014a, 8) , (const, 0xd9, 4), (unique, 0x1000014a, 8) INT_MULT (ram, 0x4ef320, 8) , (const, 0x2, 8)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0xd9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd9, 4)]
[(unique, 0x100001cb, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000207, 8), (unique, 0x10000207, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec930, 8) , (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_MULT (ram, 0x4ef320, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x2358d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000207, 8), (unique, 0x10000207, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec930, 8) , (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_MULT (ram, 0x4ef320, 8) , (const, 0x2, 8)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe9, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4ec930, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xee, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xe9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xee, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe9, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0xee, 4), (ram, 0x4ec930, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0xee, 4), (ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0xe9, 4)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0xee, 4), (ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0xe9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xee, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020f, 8) , (const, 0xc, 4), (unique, 0x1000020f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe9, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef328, 4) MULTIEQUAL (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4)]
[(ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4ec930, 8) MULTIEQUAL (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8) , (register, 0x0, 8) , (ram, 0x4ec930, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4ef328, 4) MULTIEQUAL (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4)]
[(ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4ec930, 8) MULTIEQUAL (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x23596b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100001df, 4) COPY (unique, 0x1000019c, 4), (unique, 0x1000019c, 4) INT_ADD (ram, 0x4ef328, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x23598d, 1) , (unique, 0x100001a0, 1), (unique, 0x100001a0, 1) INT_NOTEQUAL (unique, 0x1000019c, 4) , (const, 0x0, 4), (unique, 0x1000019c, 4) INT_ADD (ram, 0x4ef328, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15a, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x15a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15a, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x15a, 4)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x15a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15a, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x15a, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x15a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x15a, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef328, 8)]
[(unique, 0x100001db, 4) COPY (ram, 0x4ef328, 4), (ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x15a, 4), (ram, 0x4ef328, 4) INT_ADD (ram, 0x4ef328, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x10b, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x10b, 4), (ram, 0x4ec930, 8) MULTIEQUAL (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x10b, 4), (ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x10b, 4), (ram, 0x4ef328, 4) COPY (unique, 0x100001e3, 4), (unique, 0x100001e3, 4) MULTIEQUAL (unique, 0x100001db, 4) , (unique, 0x100001df, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10b, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10b, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[(unique, 0x100001b3, 8) COPY (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x10b, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x2359c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x10b, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x14c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14c, 4)]
[(ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x14c, 4)]
[(ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x14c, 4)]
[(ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x14c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x14c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000217, 8) , (stack, 0xffffffffffffffc4, 4), (unique, 0x10000217, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x23599d, 1)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef328, 4) MULTIEQUAL (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4) , (ram, 0x4ef328, 4)]
[(ram, 0x4ef320, 8) MULTIEQUAL (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8) , (ram, 0x4ef320, 8)]
[(ram, 0x4ec930, 8) MULTIEQUAL (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8) , (ram, 0x4ec930, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100001ab, 8) , (unique, 0x100001b3, 8) , (unique, 0x100001b3, 8)]
[ ---  CBRANCH (ram, 0x235a22, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000021f, 8), (unique, 0x1000021f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x146, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x146, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x146, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x146, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x146, 4)]
[(ram, 0x4ec930, 8) COPY (ram, 0x4ec930, 8), (ram, 0x4ec930, 8) INDIRECT (ram, 0x4ec930, 8) , (const, 0x146, 4)]
[(ram, 0x4ef320, 8) COPY (ram, 0x4ef320, 8), (ram, 0x4ef320, 8) INDIRECT (ram, 0x4ef320, 8) , (const, 0x146, 4)]
[(ram, 0x4ef328, 4) COPY (ram, 0x4ef328, 4), (ram, 0x4ef328, 4) INDIRECT (ram, 0x4ef328, 4) , (const, 0x146, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x146, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec930, 8) COPY (ram, 0x4ec930, 8)]
[(ram, 0x4ef320, 8) COPY (ram, 0x4ef320, 8)]
[(ram, 0x4ef328, 4) COPY (ram, 0x4ef328, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
