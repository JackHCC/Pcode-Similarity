[(stack, 0xffffffffffffffdc, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2193ef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7248, 4) , (const, 0x0, 4)]
[(ram, 0x4c7248, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7248, 4) , (const, 0x0, 4)]
[(ram, 0x4c7248, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x219412, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15c, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x15c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x15c, 4)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0x15c, 4)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0x15c, 4)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0x15c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x15c, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7248, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7248, 4) MULTIEQUAL (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4)]
[(ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x219570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c47f0, 8) , (const, 0x0, 8), (ram, 0x4c47f0, 8) MULTIEQUAL (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x143, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x143, 4)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0x143, 4)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0x143, 4), (ram, 0x4c7240, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0x143, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x143, 4)]
[ ---  CBRANCH (ram, 0x2194fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x6f, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6f, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0x6f, 4), (ram, 0x4c47f0, 8) MULTIEQUAL (ram, 0x4c47f0, 8) , (register, 0x0, 8)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0x6f, 4), (ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0x6f, 4), (ram, 0x4c7248, 4) MULTIEQUAL (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x6f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x6f, 4), (stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x6f, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x219508, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22a250, 8) , (register, 0x38, 8) , (unique, 0x10000127, 8) , (unique, 0x10000117, 8) , (unique, 0x1000012f, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x2, 8) , (unique, 0x3800, 8), (unique, 0x1000012f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7240, 8), (unique, 0x10000127, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7220, 8), (unique, 0x10000117, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c47f0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffdc, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8)]
[(unique, 0x10000165, 8) COPY (ram, 0x4c47f0, 8)]
[ ---  CBRANCH (ram, 0x219482, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c47f0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xf9, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf9, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0xf9, 4), (ram, 0x4c47f0, 8) COPY (unique, 0x10000175, 8), (unique, 0x10000175, 8) MULTIEQUAL (unique, 0x10000165, 8) , (unique, 0x1000016d, 8)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0xf9, 4), (ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0xf9, 4), (ram, 0x4c7248, 4) MULTIEQUAL (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf9, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0xf9, 4), (stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf9, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x219560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x219b60, 8) , (register, 0x38, 8) , (unique, 0x1000011f, 8) , (ram, 0x4c47f0, 8) , (ram, 0x4c7240, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x1000011f, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7220, 8), (ram, 0x4c47f0, 8) COPY (unique, 0x10000175, 8), (unique, 0x10000175, 8) MULTIEQUAL (unique, 0x10000165, 8) , (unique, 0x1000016d, 8), (ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[ ---  CBRANCH (ram, 0x219560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffdc, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x219508, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c47f0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11c, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x11c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x11c, 4)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0x11c, 4)]
[(ram, 0x4c7240, 8) INDIRECT (unique, 0x10000107, 8) , (const, 0x11c, 4), (unique, 0x10000107, 8) INT_MULT (ram, 0x4c7240, 8) , (const, 0x2, 8)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0x11c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x11c, 4)]
[(unique, 0x1000016d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c47f0, 8) , (unique, 0x10000107, 8), (unique, 0x10000107, 8) INT_MULT (ram, 0x4c7240, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x219478, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c47f0, 8) , (unique, 0x10000107, 8), (unique, 0x10000107, 8) INT_MULT (ram, 0x4c7240, 8) , (const, 0x2, 8)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0x12b, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x12b, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (ram, 0x4c47f0, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x130, 4), (ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x12b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x130, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12b, 4)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0x130, 4), (ram, 0x4c47f0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0x130, 4), (ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0x12b, 4)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0x130, 4), (ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0x12b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x130, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x12b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a1, 8) , (const, 0xc, 4), (unique, 0x100001a1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12b, 4)]
[(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7248, 4) MULTIEQUAL (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4)]
[(ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c47f0, 8) MULTIEQUAL (ram, 0x4c47f0, 8) , (register, 0x0, 8) , (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(ram, 0x4c7248, 4) MULTIEQUAL (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4)]
[(ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c47f0, 8) MULTIEQUAL (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21951c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000181, 4) COPY (unique, 0x10000157, 4), (unique, 0x10000157, 4) INT_ADD (ram, 0x4c7248, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21953e, 1) , (unique, 0x1000015b, 1), (unique, 0x1000015b, 1) INT_NOTEQUAL (unique, 0x10000157, 4) , (const, 0x0, 4), (unique, 0x10000157, 4) INT_ADD (ram, 0x4c7248, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdf, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xdf, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xdf, 4)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0xdf, 4)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0xdf, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xdf, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000137, 8), (unique, 0x10000137, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7248, 8)]
[(unique, 0x1000017d, 4) COPY (ram, 0x4c7248, 4), (ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0xdf, 4), (ram, 0x4c7248, 4) INT_ADD (ram, 0x4c7248, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c47f0, 8) MULTIEQUAL (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7248, 4) COPY (unique, 0x10000185, 4), (unique, 0x10000185, 4) MULTIEQUAL (unique, 0x1000017d, 4) , (unique, 0x10000181, 4)]
[ ---  CBRANCH (ram, 0x219550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffdc, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xbd, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xbd, 4)]
[(ram, 0x4c47f0, 8) INDIRECT (ram, 0x4c47f0, 8) , (const, 0xbd, 4)]
[(ram, 0x4c7240, 8) INDIRECT (ram, 0x4c7240, 8) , (const, 0xbd, 4)]
[(ram, 0x4c7248, 4) INDIRECT (ram, 0x4c7248, 4) , (const, 0xbd, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xbd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a9, 8) , (stack, 0xffffffffffffffdc, 4), (unique, 0x100001a9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e68, 8) COPY (ram, 0x4c2e68, 8), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47f0, 8) COPY (ram, 0x4c47f0, 8), (ram, 0x4c47f0, 8) MULTIEQUAL (ram, 0x4c47f0, 8) , (ram, 0x4c47f0, 8)]
[(ram, 0x4c7240, 8) COPY (ram, 0x4c7240, 8), (ram, 0x4c7240, 8) MULTIEQUAL (ram, 0x4c7240, 8) , (ram, 0x4c7240, 8)]
[(ram, 0x4c7248, 4) COPY (ram, 0x4c7248, 4), (ram, 0x4c7248, 4) MULTIEQUAL (ram, 0x4c7248, 4) , (ram, 0x4c7248, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffe0, 8)]
