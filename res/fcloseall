[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x38, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x38, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x38, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x38, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x38, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x38, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x38, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x38, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x38, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x38, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 4) CALL (ram, 0x18f0e0, 8) , (const, 0x0, 8)]
[(unique, 0x100002c8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x38, 4)]
[ ---  CBRANCH (ram, 0x18f6d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8)]
[ ---  BRANCH (ram, 0x18f43d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x77, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x77, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x77, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x77, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x77, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x77, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x77, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x77, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x77, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x77, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x77, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0x100001e3, 8) , (const, 0x0, 8), (unique, 0x100001e3, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8), (register, 0x0, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x100002fc, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18f495, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4ed8a8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18f46b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000314, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000304, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18f48e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x364, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x364, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x364, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x364, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x364, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x364, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x364, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x364, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x364, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x364, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x364, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x364, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x1000030c, 8) COPY (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (unique, 0x100002fc, 8) , (unique, 0x10000304, 8) , (unique, 0x1000030c, 8) , (unique, 0x10000314, 8)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) INT_ADD (ram, 0x4ed8a4, 4) , (const, 0x1, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[ ---  CBRANCH (ram, 0x18f5f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec660, 8) , (const, 0x0, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000344, 8), (unique, 0x10000344, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[(unique, 0x100002cc, 8) COPY (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) CAST (ram, 0x4ec660, 8)]
[ ---  BRANCH (ram, 0x18f4e7, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18f4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100002cc, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18f4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x18f546, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000354, 8), (unique, 0x10000354, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x34d, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x34d, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x34d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x34d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x34d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x34d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x34d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x34d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x34d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x34d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18f546, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18f526, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x345, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x345, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x345, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x345, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x345, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x345, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x345, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x345, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x345, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x345, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18f529, 1)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x136, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x136, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x136, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x136, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x136, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x136, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x136, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x136, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x136, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x136, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18f524, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18f719, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000364, 8), (unique, 0x10000364, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x330, 4), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x32d, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x330, 4), (ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x32d, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x330, 4), (ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x32d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x330, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x32d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x330, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x32d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x330, 4), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x32d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x330, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x32d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x330, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x32d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x330, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x32d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x330, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x32d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x10000374, 8), (unique, 0x10000374, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000364, 8), (unique, 0x10000364, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18f546, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x144, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x144, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x144, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x144, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x144, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x144, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x144, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x144, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x144, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x144, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x144, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x144, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x144, 4)]
[ ---  CALL (ram, 0x203e50, 8)]
[ ---  CBRANCH (ram, 0x18f690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x1, 4)]
[(register, 0xb8, 4) COPY (const, 0x2, 4)]
[(register, 0xb8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18f4fa, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x18f6a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed888, 1) , (const, 0x0, 1), (ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[ ---  CBRANCH (ram, 0x18f553, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bc, 4) , (const, 0x0, 4), (unique, 0x100001bc, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037c, 8) , (ram, 0x4ed880, 8), (unique, 0x1000037c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x2a, 8) , (const, 0x4, 8), (ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x319, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x324, 4), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x31e, 4), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x319, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x324, 4), (ram, 0x4ed880, 8) COPY (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) INDIRECT (unique, 0x100002d4, 8) , (const, 0x31e, 4), (unique, 0x100002d4, 8) COPY (register, 0x18, 8)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x324, 4), (ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x31e, 4), (ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x319, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x324, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x31e, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x319, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x324, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x31e, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x319, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x324, 4), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x31e, 4), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x319, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x324, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x31e, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x319, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x324, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x31e, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x319, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x324, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x31e, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x319, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x324, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x31e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x319, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000038c, 8) , (unique, 0xbd80, 8), (unique, 0x1000038c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x2c, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000384, 8), (unique, 0x10000384, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18f553, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18f6f8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000394, 8), (unique, 0x10000394, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fb, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2fb, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x2fb, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x2fb, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2fb, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2fb, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2fb, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2fb, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2fb, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2fb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2fb, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2fb, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2fb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fb, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18f569, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x18c, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x18c, 4), (ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x18c, 4), (ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x18c, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x18c, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x18c, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x18c, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x18c, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x18c, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8)]
[ ---  CBRANCH (ram, 0x18f58b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x100003a4, 4), (unique, 0x100003a4, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1be, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1be, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x1be, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x1be, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1be, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1be, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1be, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1be, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1be, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1be, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1be, 4)]
[ ---  CALL (ram, 0x1833b0, 8) , (register, 0x18, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18f4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x18f4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1dd, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x1dd, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x1dd, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1dd, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1dd, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1dd, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1dd, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1dd, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1dd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1dd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1eb, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x1eb, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x1eb, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1eb, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1eb, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1eb, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1eb, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1eb, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1eb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b0, 8) , (const, 0x0, 8), (unique, 0x100003b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f5c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1eb, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2eb, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x2eb, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x2eb, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2eb, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2eb, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2eb, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2eb, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2eb, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2eb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2eb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1fb, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x1fb, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x1fb, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1fb, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1fb, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1fb, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1fb, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1fb, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1fb, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1fb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000284, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x1000028c, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(unique, 0x10000294, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(unique, 0x10000295, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(unique, 0x10000299, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x1000029d, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(unique, 0x100002a5, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(unique, 0x100002ad, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(unique, 0x100002b5, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x100002b9, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18f5e1, 1) , (unique, 0x10000283, 1), (unique, 0x10000283, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2dd, 4)]
[(ram, 0x4ec660, 8) INDIRECT (unique, 0x10000284, 8) , (const, 0x2dd, 4)]
[(ram, 0x4ed880, 8) INDIRECT (unique, 0x1000028c, 8) , (const, 0x2dd, 4)]
[(ram, 0x4ed888, 1) INDIRECT (unique, 0x10000294, 1) , (const, 0x2dd, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (unique, 0x10000295, 4) , (const, 0x2dd, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (unique, 0x10000299, 4) , (const, 0x2dd, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (unique, 0x1000029d, 8) , (const, 0x2dd, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (unique, 0x100002a5, 8) , (const, 0x2dd, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (unique, 0x100002ad, 8) , (const, 0x2dd, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x100002b5, 4) , (const, 0x2dd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100002b9, 4) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2dd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2dd, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x20b, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0x10000284, 8)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x20b, 4), (ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (unique, 0x1000028c, 8)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x20b, 4), (ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (unique, 0x10000294, 1)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x20b, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (unique, 0x10000295, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x20b, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (unique, 0x10000299, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x20b, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (unique, 0x1000029d, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x20b, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (unique, 0x100002a5, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x20b, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (unique, 0x100002ad, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x20b, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (unique, 0x100002b5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x20b, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x100002b9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffff, 4), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f5f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b8, 8), (unique, 0x100003b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002e4, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[ ---  CBRANCH (ram, 0x18f644, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18f622, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100002ec, 4) COPY (unique, 0x100002bd, 4), (unique, 0x100002bd, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x18f644, 1) , (unique, 0x100002c1, 1), (unique, 0x100002c1, 1) INT_NOTEQUAL (unique, 0x100002bd, 4) , (const, 0x0, 4), (unique, 0x100002bd, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2be, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2be, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x2be, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x2be, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x0, 4) , (const, 0x2be, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2be, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2be, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2be, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2be, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2be, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2be, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2be, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100001eb, 8), (unique, 0x100001eb, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x100002e8, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2be, 4), (ram, 0x4ed8a0, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4) , (register, 0x0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed8a0, 4) COPY (unique, 0x100002f0, 4), (unique, 0x100002f0, 4) MULTIEQUAL (unique, 0x100002e4, 4) , (unique, 0x100002e8, 4) , (unique, 0x100002ec, 4)]
[ ---  CBRANCH (ram, 0x18f666, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002c8, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x280, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x280, 4)]
[(ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x280, 4)]
[(ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x280, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x280, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x280, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x280, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x280, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x280, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x280, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x280, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x280, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x280, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x280, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c8, 8), (unique, 0x100003c8, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed888, 1) MULTIEQUAL (ram, 0x4ed888, 1) , (ram, 0x4ed888, 1)]
[(ram, 0x4ed880, 8) MULTIEQUAL (ram, 0x4ed880, 8) , (ram, 0x4ed880, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18f730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003d0, 8), (unique, 0x100003d0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2af, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2af, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2af, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2af, 4)]
[(ram, 0x4ed880, 8) COPY (ram, 0x4ed880, 8), (ram, 0x4ed880, 8) INDIRECT (ram, 0x4ed880, 8) , (const, 0x2af, 4)]
[(ram, 0x4ed888, 1) COPY (ram, 0x4ed888, 1), (ram, 0x4ed888, 1) INDIRECT (ram, 0x4ed888, 1) , (const, 0x2af, 4)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2af, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2af, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2af, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2af, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2af, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2af, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2af, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8)]
[(ram, 0x4ed880, 8) COPY (ram, 0x4ed880, 8)]
[(ram, 0x4ed888, 1) COPY (ram, 0x4ed888, 1)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
