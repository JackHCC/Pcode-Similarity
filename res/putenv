[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x139858, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x17, 4)]
[ ---  CBRANCH (ram, 0x139908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x189080, 8) , (register, 0x38, 8) , (const, 0x3d, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcb, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x139910, 8)]
[ ---  CALL (ram, 0x139cf0, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1398b1, 1)]
[(unique, 0x1000015b, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x10000173, 8), (unique, 0x10000173, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1398c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1000, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x10000173, 8), (unique, 0x10000173, 8) CAST (register, 0x38, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x86, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1398c9, 8)]
[(unique, 0x10000163, 8) COPY (stack, 0xffffffffffffffe0, 8), (stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x1000016b, 8) , (const, 0x86, 4), (unique, 0x1000016b, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x139874, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x98, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1398d9, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x98, 4)]
[ ---  CBRANCH (ram, 0x139914, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18aa90, 8) , (register, 0x38, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1398f3, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1398fd, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb3, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x139920, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x10000193, 8), (unique, 0x10000193, 8) INT_ADD (unique, 0x1000018b, 8) , (register, 0x0, 8), (unique, 0x1000018b, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) INT_ADD (unique, 0x1000017b, 8) , (unique, 0x10000091, 8), (unique, 0x1000017b, 8) CAST (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000091, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x18ae90, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (unique, 0x10000163, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x13989f, 8), (register, 0x20, 8) CAST (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) INT_ADD (unique, 0x1000019b, 8) , (unique, 0x10000091, 8), (unique, 0x1000019b, 8) CAST (unique, 0x10000132, 8), (unique, 0x10000132, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0x10000091, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x18ae90, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (unique, 0x10000163, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1398b1, 8), (register, 0x20, 8) CAST (unique, 0x100001b3, 8), (unique, 0x100001b3, 8) INT_ADD (unique, 0x100001ab, 8) , (unique, 0x10000091, 8), (unique, 0x100001ab, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0x10000091, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x18ae90, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (unique, 0x10000163, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x74, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x65, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x64, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x3d, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x13987c, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x75, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x74, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x65, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x64, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x3d, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(register, 0x0, 4) CALL (ram, 0x139920, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x193a40, 8) , (unique, 0x3800, 8) , (register, 0x38, 8) , (register, 0x0, 8), (unique, 0x3800, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) INT_ADD (unique, 0x1000017b, 8) , (unique, 0x10000091, 8), (unique, 0x1000017b, 8) CAST (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000091, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1f, 8), (register, 0x0, 8) CALL (ram, 0x18ae90, 8) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000015b, 8) , (unique, 0x10000163, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
