[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x42, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x1f7c5c, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x42, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x3c, 4), (stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000484, 8), (unique, 0x10000484, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000494, 8), (unique, 0x10000494, 8) CALL (ram, 0x1211e0, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f7f8b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000048c, 8), (unique, 0x1000048c, 8) CALL (ram, 0x1211e0, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f7f8b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f7ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a4, 8) , (unique, 0xbb00, 1), (unique, 0x100004a4, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000049c, 8), (unique, 0x1000049c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f7c7a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7c, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x7c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7c, 4)]
[ ---  CBRANCH (ram, 0x1f7fa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f07b0, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x10, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100004ac, 8) , (const, 0x44, 8), (unique, 0x100004ac, 8) CAST (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4ee, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e2, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4dc, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d1, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4f8, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4f4, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4ee, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4e8, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4e2, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4dc, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4d6, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4d1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f4, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4ee, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4e8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4e2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4dc, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4d6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4d1, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f7e94, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x10000462, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1f7ce1, 1) , (unique, 0x10000461, 1), (unique, 0x10000461, 1) INT_NOTEQUAL (unique, 0x10000460, 1) , (const, 0x0, 1), (unique, 0x10000460, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (unique, 0x10000462, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 1), (register, 0x10, 8) INT_LEFT (const, 0x1, 8) , (register, 0x8, 1), (register, 0x0, 1) INT_RIGHT (unique, 0x10000460, 1) , (const, 0x6, 4), (register, 0x8, 1) INT_AND (unique, 0x10000460, 1) , (const, 0x3f, 1)]
[ ---  CBRANCH (ram, 0x1f7ed0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_NEGATE (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_NEGATE (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_NEGATE (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_NEGATE (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f7cea, 1)]
[ ---  CBRANCH (ram, 0x1f7d19, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004b4, 8), (unique, 0x100004b4, 8) INT_ADD (register, 0x38, 8) , (const, 0xa4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)]
[ ---  CBRANCH (ram, 0x1f8000, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004c4, 8), (unique, 0x100004c4, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x49a, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x49a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x49a, 4)]
[ ---  CBRANCH (ram, 0x1f7f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004cc, 8), (unique, 0x100004cc, 8) CALL (ram, 0x1212c0, 8) , (const, 0x3c8, 8)]
[(register, 0x10, 8) COPY (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100004dc, 8), (unique, 0x100004dc, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004d4, 8), (unique, 0x100004d4, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1f7d42, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004e4, 8), (unique, 0x100004e4, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_MULT (register, 0x28, 8) , (const, 0x40, 8), (register, 0x28, 8) INT_SEXT (unique, 0xbc80, 4)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_MULT (register, 0x28, 8) , (const, 0x40, 8), (register, 0x28, 8) INT_SEXT (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) CAST (unique, 0x100004ec, 8), (unique, 0x100004ec, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (register, 0x0, 8), (unique, 0x3b80, 8) CAST (unique, 0x100004fc, 8), (unique, 0x100004fc, 8) INT_ADD (unique, 0x100004f4, 8) , (register, 0x8, 8), (unique, 0x100004f4, 8) CAST (register, 0xa8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000504, 8) , (const, 0x3, 1), (unique, 0x10000504, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3b80, 8) CAST (unique, 0x100004fc, 8), (unique, 0x100004fc, 8) INT_ADD (unique, 0x100004f4, 8) , (register, 0x8, 8), (unique, 0x100004f4, 8) CAST (register, 0xa8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xf3, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000514, 8), (unique, 0x10000514, 8) INT_ADD (unique, 0x1000050c, 8) , (const, 0x3a, 8), (unique, 0x1000050c, 8) CAST (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000524, 8) , (const, 0xffffffff, 4), (unique, 0x10000524, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x28, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100002e0, 8) , (const, 0x8, 8), (unique, 0x100002e0, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f7f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x1000051c, 8), (unique, 0x1000051c, 8) CAST (register, 0xa8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f7ee8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x492, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x488, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x482, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x47c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x476, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x470, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x492, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x48e, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x488, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x482, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x47c, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x476, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x470, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x492, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x48e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x488, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x482, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x476, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x470, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f7e94, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000534, 8), (unique, 0x10000534, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1f8040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000052c, 8), (unique, 0x1000052c, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x449, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x449, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x449, 4)]
[ ---  CBRANCH (ram, 0x1f7f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000053c, 8), (unique, 0x1000053c, 8) CALL (ram, 0x1212c0, 8) , (const, 0x3c8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000544, 8), (unique, 0x10000544, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x8, 4) COPY (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x30, 8)]
[(register, 0x30, 8) COPY (const, 0x8, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f7dcf, 1)]
[(register, 0x8, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (register, 0xb8, 8) , (const, 0x40, 8), (register, 0xb8, 8) INT_SEXT (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_MULT (register, 0xb8, 8) , (const, 0x40, 8), (register, 0xb8, 8) INT_SEXT (unique, 0xbc80, 4)]
[(unique, 0x1000047c, 8) COPY (register, 0xa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 4), (unique, 0x3200, 8) CAST (unique, 0x1000055c, 8), (unique, 0x1000055c, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000554, 8), (unique, 0x10000554, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000054c, 8), (unique, 0x1000054c, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000564, 8) , (const, 0x6, 1), (unique, 0x10000564, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000554, 8), (unique, 0x10000554, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000054c, 8), (unique, 0x1000054c, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xf3, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000574, 8), (unique, 0x10000574, 8) INT_ADD (unique, 0x1000056c, 8) , (const, 0x3a, 8), (unique, 0x1000056c, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000584, 8) , (const, 0xffffffff, 4), (unique, 0x10000584, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0xb8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000328, 8) , (const, 0x8, 8), (unique, 0x10000328, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1f7f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) CAST (register, 0xa8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000047c, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x43e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x43a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x434, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x428, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x422, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x417, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x43e, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x43a, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x434, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x42e, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x428, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x422, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x41c, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x417, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x43e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x43a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x434, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x428, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x422, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x417, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x1f807c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8)]
[(register, 0x38, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_MULT (register, 0x8, 8) , (const, 0x40, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (register, 0x8, 8) , (const, 0x40, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)]
[(unique, 0x10000474, 8) COPY (register, 0xa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e5, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x3e5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e5, 4)]
[ ---  CBRANCH (ram, 0x1f7f96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000594, 8), (unique, 0x10000594, 8) CALL (ram, 0x1212c0, 8) , (const, 0x3c8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000059c, 8), (unique, 0x1000059c, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x38, 4) COPY (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x30, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f7e4a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x38, 4), (unique, 0x3200, 8) CAST (unique, 0x100005ac, 8), (unique, 0x100005ac, 8) INT_ADD (register, 0x38, 8) , (const, 0x80, 8), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0xa, 1), (unique, 0x3a00, 8) CAST (unique, 0x100005bc, 8), (unique, 0x100005bc, 8) INT_ADD (unique, 0x100005b4, 8) , (unique, 0x10000398, 8), (unique, 0x100005b4, 8) CAST (register, 0xa8, 8), (unique, 0x10000398, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x80, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xf3, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005cc, 8), (unique, 0x100005cc, 8) INT_ADD (unique, 0x100005c4, 8) , (const, 0x3a, 8), (unique, 0x100005c4, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005d4, 8) , (const, 0xffffffff, 4), (unique, 0x100005d4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000370, 8) , (const, 0x8, 8), (unique, 0x10000370, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100005a4, 8), (unique, 0x100005a4, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100005a4, 8), (unique, 0x100005a4, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[(unique, 0x1000046c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100005a4, 8), (unique, 0x100005a4, 8) CAST (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000474, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f7e94, 1)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f80c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005dc, 8), (unique, 0x100005dc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x3da, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3da, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
