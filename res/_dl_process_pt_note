[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x47ca90, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000386, 8), (unique, 0x10000386, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47cb08, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x10000, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x1000024d, 8) , (unique, 0x1000010b, 8) , (const, 0x1, 8), (unique, 0x1000024d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x1000010b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3800, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x17, 8)]
[(unique, 0x1000012b, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (unique, 0x3800, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x17, 8)]
[(unique, 0x1000036e, 8) COPY (register, 0x20, 8)]
[(unique, 0x100001b5, 8) MULTIEQUAL (unique, 0x1000036e, 8) , (unique, 0x10000376, 8)]
[(unique, 0x100001bd, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47cb3d, 1) , (unique, 0x100001ac, 1), (unique, 0x100001ac, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001b5, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000396, 8) , (unique, 0xbe00, 8), (unique, 0x10000396, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100001b5, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001b5, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x10000376, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001b5, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100001bd, 8) , (unique, 0x10000133, 8) , (const, 0x1, 8), (unique, 0x10000133, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x1000012b, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47cb51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x1000012b, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a6, 8) , (unique, 0xbe00, 8), (unique, 0x100003a6, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x100001bd, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003be, 8) , (const, 0x47cb6b, 8), (unique, 0x100003be, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100001bd, 8) , (unique, 0x10000265, 8) , (const, 0x1, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x10000133, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x2fb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fb, 4)]
[ ---  CBRANCH (ram, 0x47cbf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x48c220, 8) , (register, 0x10, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) CAST (unique, 0x100003b6, 8), (unique, 0x100003b6, 8) INT_AND (unique, 0x100003ae, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100003ae, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100001bd, 8) , (unique, 0x1000025d, 8) , (const, 0x1, 8), (unique, 0x1000025d, 8) INT_ADD (unique, 0x10000133, 8) , (const, 0xf, 8)]
[ ---  CBRANCH (ram, 0x47caf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8)]
[ ---  CBRANCH (ram, 0x47caf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x8, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x234, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x10000362, 4) , (const, 0x224, 4), (unique, 0x10000362, 4) COPY (register, 0x10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x234, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000366, 8) , (const, 0x224, 4), (unique, 0x10000366, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x47cbe5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x48c220, 8) , (stack, 0xffffffffffffffbc, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CAST (unique, 0x100003d6, 8), (unique, 0x100003d6, 8) CALL (ram, 0x426550, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000366, 8) , (const, 0x224, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (unique, 0x10000362, 4) , (const, 0x224, 4), (unique, 0x10000366, 8) COPY (unique, 0xbd80, 8), (unique, 0x10000362, 4) COPY (register, 0x10, 4)]
[(unique, 0x100002d2, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000033a, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8)]
[(unique, 0x100002da, 8) COPY (register, 0x20, 8)]
[(unique, 0x100002ea, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47cbfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x8, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47cbf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x26b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26b, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x47caf4, 1)]
[ ---  CBRANCH (ram, 0x47caf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8)]
[ ---  CBRANCH (ram, 0x47caf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x8, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f6, 8), (unique, 0x100003f6, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000406, 8), (unique, 0x10000406, 8) INT_ADD (unique, 0x100003fe, 8) , (unique, 0x10000205, 8), (unique, 0x100003fe, 8) CAST (register, 0x8, 8), (unique, 0x10000205, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x10000275, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8)]
[(unique, 0x1000027e, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x10000282, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000028a, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47c9a6, 1) , (unique, 0x1000027d, 1), (unique, 0x1000027d, 1) INT_LESS (const, 0xc, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100002e2, 8) COPY (unique, 0x1000028a, 8)]
[(unique, 0x1000034a, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (unique, 0x1000027e, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x1000034a, 8) , (unique, 0x1000033a, 8)]
[(register, 0x20, 8) COPY (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) MULTIEQUAL (unique, 0x100002e2, 8) , (unique, 0x100002ea, 8)]
[(stack, 0xffffffffffffffc0, 8) INT_AND (stack, 0xffffffffffffffc0, 8) , (const, 0xffffffff00000000, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000282, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0xb8, 8) INT_SUB (const, 0xc, 8) , (unique, 0x1000040e, 8), (unique, 0x1000040e, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000275, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x47c9e4, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47c9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47c9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x5, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47c9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x554e47, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000292, 8) COPY (register, 0x20, 8)]
[(unique, 0x100002fa, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000416, 8), (unique, 0x10000416, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x10, 1), (unique, 0x3200, 8) CAST (unique, 0x1000041e, 8), (unique, 0x1000041e, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8), (register, 0x10, 1) INT_OR (register, 0x10, 1) , (const, 0x1, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf8, 1)]
[(register, 0x30, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x1000029a, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000302, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100002a2, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000030a, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000167, 4) , (const, 0x0, 4), (unique, 0x10000167, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x10000426, 8) , (register, 0x30, 8), (unique, 0x10000426, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x1000035a, 4) COPY (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x47ca82, 1)]
[(register, 0x90, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x47ca40, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (register, 0x38, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3400, 8), (register, 0x38, 4) MULTIEQUAL (unique, 0x1000035a, 4) , (unique, 0x1000035e, 4)]
[(unique, 0x100002aa, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000312, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x1000042e, 8) , (register, 0x90, 8), (unique, 0x1000042e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47cbd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xc0000002, 4)]
[(unique, 0x100002ca, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000332, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) INT_OR (unique, 0x1000019b, 8) , (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0x1000019b, 8) INT_AND (stack, 0xffffffffffffffc0, 8) , (const, 0xffffffff00000000, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x47c9c3, 1)]
[(unique, 0x100002b2, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000031a, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xc0000002, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000035e, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x47c9c3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x7, 8) , (unique, 0x1000044e, 8), (unique, 0x1000044e, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x3400, 8) , (unique, 0x10000446, 8), (unique, 0x10000446, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) INT_ADD (unique, 0x10000436, 8) , (register, 0x10, 8), (unique, 0x10000436, 8) CAST (unique, 0x3100, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x10, 8) INT_ADD (register, 0x90, 8) , (const, 0x7, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x47cba0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x1000046e, 8) , (unique, 0xbd80, 8), (unique, 0x1000046e, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000466, 8) , (register, 0xb8, 8), (unique, 0x10000466, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000045e, 8), (unique, 0x1000045e, 8) INT_ADD (unique, 0x10000456, 8) , (register, 0x0, 8), (unique, 0x10000456, 8) CAST (register, 0x18, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x30, 8) , (const, 0x7, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x13, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000192, 8) INT_AND (stack, 0xffffffffffffffc0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x47cbb5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000189, 8) , (const, 0x0, 8), (unique, 0x10000189, 8) INT_AND (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000476, 8), (unique, 0x10000476, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8)]
[(unique, 0x100002ba, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000322, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x47cae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000192, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000047e, 8), (unique, 0x1000047e, 8) INT_ADD (register, 0x38, 8) , (const, 0x321, 8)]
[(unique, 0x100002c2, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000032a, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x47cae5, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000292, 8) , (unique, 0x1000029a, 8) , (unique, 0x100002a2, 8) , (unique, 0x100002aa, 8) , (unique, 0x100002b2, 8) , (unique, 0x100002ba, 8) , (unique, 0x100002c2, 8) , (unique, 0x100002ca, 8) , (unique, 0x100002d2, 8) , (unique, 0x100002da, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47caf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100002fa, 8) , (unique, 0x10000302, 8) , (unique, 0x1000030a, 8) , (unique, 0x10000312, 8) , (unique, 0x1000031a, 8) , (unique, 0x10000322, 8) , (unique, 0x1000032a, 8) , (unique, 0x10000332, 8) , (unique, 0x1000033a, 8) , (unique, 0x1000033a, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000486, 8) , (const, 0x47caf2, 8), (unique, 0x10000486, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0xb0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
