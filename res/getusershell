[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000220, 8), (unique, 0x10000220, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2193b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee250, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4ee250, 8)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x72, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4ee248, 8)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x77, 4), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x72, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4ee240, 8), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x72, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x72, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x7d, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x77, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x72, 4)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x7d, 4), (ram, 0x4ee240, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x7d, 4), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x77, 4), (ram, 0x4ee248, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x7d, 4), (ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x77, 4), (ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x72, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x7d, 4), (ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x77, 4), (ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x72, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x7d, 4), (ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x77, 4), (ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x7d, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x77, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x7d, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x77, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x72, 4)]
[ ---  CBRANCH (ram, 0x21943b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x17ee30, 8) , (unique, 0x10000161, 8) , (unique, 0x10000159, 8), (unique, 0x10000161, 8) COPY (const, 0x2b58ad, 8), (unique, 0x10000159, 8) COPY (const, 0x2b3893, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8c, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x94, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x8c, 4)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x94, 4), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x8c, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x94, 4), (ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x8c, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x94, 4), (ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x8c, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x94, 4), (ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x8c, 4)]
[(unique, 0x100001f8, 8) COPY (ram, 0x4ee240, 8), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x94, 4), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x8c, 4)]
[ ---  CBRANCH (ram, 0x219433, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8), (register, 0x0, 4) CALL (ram, 0x1877b0, 8) , (register, 0x0, 8)]
[(unique, 0x10000200, 8) COPY (ram, 0x4ee240, 8)]
[ ---  CBRANCH (ram, 0x219480, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000228, 8) , (const, 0x5ffffffffffffffe, 8), (unique, 0x10000228, 8) CAST (stack, 0xffffffffffffff68, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xca, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xca, 4)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0xca, 4)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0xca, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0xca, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0xca, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0xca, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xca, 4)]
[(unique, 0x10000208, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000230, 8), (unique, 0x10000230, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x219433, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000230, 8), (unique, 0x10000230, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (const, 0x3, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x110, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x110, 4)]
[(ram, 0x4ee240, 8) INDIRECT (unique, 0x10000208, 8) , (const, 0x110, 4)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x110, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x110, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x110, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x110, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x110, 4)]
[(unique, 0x10000190, 8) COPY (register, 0x0, 8)]
[(unique, 0x100001c0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000238, 8), (unique, 0x10000238, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x100000d8, 8) , (const, 0x8, 8), (unique, 0x100000d8, 8) INT_SDIV (stack, 0xffffffffffffff68, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x2195af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000238, 8), (unique, 0x10000238, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (unique, 0x100000d8, 8) , (const, 0x8, 8), (unique, 0x100000d8, 8) INT_SDIV (stack, 0xffffffffffffff68, 8) , (const, 0x3, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x218, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x218, 4)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x218, 4)]
[(ram, 0x4ee248, 8) INDIRECT (register, 0x0, 8) , (const, 0x218, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x218, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x218, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x218, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x218, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(ram, 0x4ee240, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x219433, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xb1, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0xb1, 4), (ram, 0x4ee240, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (unique, 0x10000200, 8) , (unique, 0x10000208, 8) , (ram, 0x4ee240, 8)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0xb1, 4), (ram, 0x4ee248, 8) MULTIEQUAL (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0xb1, 4), (ram, 0x4ee250, 8) MULTIEQUAL (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0xb1, 4), (ram, 0x4ee260, 8) MULTIEQUAL (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0xb1, 4), (ram, 0x4ee268, 8) MULTIEQUAL (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb1, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x17e250, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4ee248, 8) MULTIEQUAL (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8)]
[(ram, 0x4ee240, 8) MULTIEQUAL (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x2b3e9a, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000240, 8), (unique, 0x10000240, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee260, 8)]
[(ram, 0x4ee260, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3e9a, 8)]
[(ram, 0x4ee268, 8) COPY (const, 0x2b58b9, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100001c0, 8) , (unique, 0x100001c8, 8) , (unique, 0x100001d0, 8) , (unique, 0x100001d8, 8) , (unique, 0x100001e0, 8) , (unique, 0x100001e8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x139, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x139, 4), (ram, 0x4ee240, 8) MULTIEQUAL (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x139, 4), (ram, 0x4ee248, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x139, 4), (ram, 0x4ee250, 8) MULTIEQUAL (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8) , (ram, 0x4ee250, 8)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x139, 4), (ram, 0x4ee260, 8) MULTIEQUAL (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x139, 4), (ram, 0x4ee268, 8) MULTIEQUAL (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x139, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x10000188, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x139, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x219504, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a590, 8) , (register, 0x18, 8) , (register, 0x30, 4) , (register, 0x0, 8), (register, 0x30, 4) INT_SUB (unique, 0x10000131, 4) , (register, 0x0, 4), (unique, 0x10000131, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x10000129, 4) , (unique, 0x10000139, 4), (unique, 0x10000129, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (unique, 0x10000139, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000190, 8) , (unique, 0x10000218, 8) , (unique, 0x10000218, 8) , (unique, 0x10000218, 8) , (unique, 0x10000218, 8) , (unique, 0x100001b8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14b, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x14b, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x147, 4)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x14b, 4), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x147, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x14b, 4), (ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x147, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x14b, 4), (ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x147, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x14b, 4), (ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x147, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14b, 4)]
[ ---  CALL (ram, 0x17e250, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4ee248, 8), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x14b, 4), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x147, 4)]
[(unique, 0x10000210, 8) COPY (ram, 0x4ee248, 8), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x14b, 4), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x147, 4)]
[ ---  BRANCH (ram, 0x219470, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4ee268, 8) MULTIEQUAL (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8) , (ram, 0x4ee268, 8)]
[(ram, 0x4ee260, 8) MULTIEQUAL (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8) , (ram, 0x4ee260, 8)]
[(ram, 0x4ee250, 8) MULTIEQUAL (ram, 0x4ee250, 8) , (register, 0x10, 8) , (unique, 0x10000210, 8)]
[(ram, 0x4ee248, 8) MULTIEQUAL (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8) , (ram, 0x4ee248, 8)]
[(ram, 0x4ee240, 8) MULTIEQUAL (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8) , (ram, 0x4ee240, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21938f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) PTRADD (ram, 0x4ee250, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ee250, 8) MULTIEQUAL (ram, 0x4ee250, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2195c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000248, 8), (unique, 0x10000248, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4ee240, 8) COPY (ram, 0x4ee240, 8)]
[(ram, 0x4ee248, 8) COPY (ram, 0x4ee248, 8)]
[(ram, 0x4ee250, 8) COPY (ram, 0x4ee250, 8)]
[(ram, 0x4ee260, 8) COPY (ram, 0x4ee260, 8)]
[(ram, 0x4ee268, 8) COPY (ram, 0x4ee268, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6c, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x6c, 4)]
[(ram, 0x4ee240, 8) COPY (ram, 0x4ee240, 8), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x6c, 4)]
[(ram, 0x4ee248, 8) COPY (ram, 0x4ee248, 8), (ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x6c, 4)]
[(ram, 0x4ee250, 8) COPY (ram, 0x4ee250, 8), (ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x6c, 4)]
[(ram, 0x4ee260, 8) COPY (ram, 0x4ee260, 8), (ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x6c, 4)]
[(ram, 0x4ee268, 8) COPY (ram, 0x4ee268, 8), (ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x6c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x23, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000218, 8) COPY (ram, 0x4ee240, 8)]
[ ---  CBRANCH (ram, 0x219528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x219528, 1) , (unique, 0x10000142, 1), (unique, 0x10000142, 1) BOOL_NEGATE (register, 0x206, 1)]
[(unique, 0x100001d0, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x21951b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x23, 1)]
[(unique, 0x100001d8, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x21951b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100001e0, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x21951b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1af, 4)]
[(ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x1af, 4)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x1af, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x1af, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x1af, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x1af, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x219580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000258, 8), (unique, 0x10000258, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000250, 8), (unique, 0x10000250, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000188, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x21956e, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x219560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x219580, 1) , (unique, 0x10000155, 1), (unique, 0x10000155, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x23, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1cf, 4)]
[(ram, 0x4ee248, 8) INDIRECT (ram, 0x4ee248, 8) , (const, 0x1cf, 4)]
[(ram, 0x4ee250, 8) INDIRECT (ram, 0x4ee250, 8) , (const, 0x1cf, 4)]
[(ram, 0x4ee260, 8) INDIRECT (ram, 0x4ee260, 8) , (const, 0x1cf, 4)]
[(ram, 0x4ee268, 8) INDIRECT (ram, 0x4ee268, 8) , (const, 0x1cf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x0, 1), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x100001b8, 8) COPY (ram, 0x4ee240, 8), (ram, 0x4ee240, 8) INDIRECT (ram, 0x4ee240, 8) , (const, 0x1cf, 4)]
[(unique, 0x100001e8, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x21951b, 1)]
[(unique, 0x100001c8, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x219500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
