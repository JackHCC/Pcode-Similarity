[(register, 0xb8, 4) INT_AND (unique, 0x100000ca, 4) , (const, 0xff, 4), (unique, 0x100000ca, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ee078, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ee140, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x100000e6, 8) , (const, 0x1000000000000000, 8), (unique, 0x100000e6, 8) CAST (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) INT_MULT (unique, 0x10000197, 8) , (const, 0x2, 8), (unique, 0x10000197, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1ee140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_LEFT (unique, 0x100001a7, 8) , (const, 0x5, 4), (unique, 0x100001a7, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_LEFT (unique, 0x100001af, 8) , (const, 0x3, 4), (unique, 0x100001af, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ee140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_LEFT (unique, 0x100001af, 8) , (const, 0x3, 4), (unique, 0x100001af, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ee140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ee140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1ee140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1ee066, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100000e6, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1edff1, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (unique, 0x100001bf, 8) , (register, 0x30, 8), (unique, 0x100001bf, 8) CAST (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (unique, 0x100001b7, 8) , (const, 0x10, 8), (unique, 0x100001b7, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (unique, 0x100001bf, 8) , (register, 0x30, 8), (unique, 0x100001bf, 8) CAST (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (unique, 0x100001b7, 8) , (const, 0x10, 8), (unique, 0x100001b7, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cf, 8) , (register, 0x10, 4), (unique, 0x100001cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_AND (unique, 0x100000ca, 4) , (const, 0xfffc00ff, 4), (register, 0x0, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (unique, 0x100001bf, 8) , (register, 0x30, 8), (unique, 0x100001bf, 8) CAST (unique, 0xbd80, 8), (register, 0x30, 8) INT_MULT (unique, 0x100001b7, 8) , (const, 0x10, 8), (unique, 0x100001b7, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x1ee029, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x5, 4)]
[(unique, 0xd080, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001df, 8), (unique, 0x100001df, 8) INT_ADD (unique, 0x100001d7, 8) , (const, 0xa4, 8), (unique, 0x100001d7, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 1), (unique, 0x3100, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) INT_ADD (unique, 0x100001f7, 8) , (const, 0xa, 8), (unique, 0x100001f7, 8) CAST (register, 0x0, 8), (register, 0x10, 1) INT_OR (unique, 0x100000e2, 1) , (unique, 0x100000e3, 1), (unique, 0x100000e2, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xef, 1), (unique, 0x100000e3, 1) INT_LEFT (unique, 0x100000ee, 1) , (const, 0x4, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001ef, 8), (unique, 0x100001ef, 8) INT_ADD (unique, 0x100001e7, 8) , (const, 0xa, 8), (unique, 0x100001e7, 8) CAST (register, 0x0, 8), (unique, 0x100000ee, 1) MULTIEQUAL (register, 0x206, 1) , (unique, 0xd080, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (const, 0xffffffff, 4), (unique, 0x3b80, 8) CAST (unique, 0x10000217, 8), (unique, 0x10000217, 8) INT_ADD (unique, 0x1000020f, 8) , (unique, 0x3a80, 8), (unique, 0x1000020f, 8) CAST (register, 0x28, 8), (unique, 0x3a80, 8) INT_MULT (unique, 0x10000207, 8) , (const, 0x4, 8), (unique, 0x10000207, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 16), (unique, 0x3400, 8) CAST (unique, 0x10000227, 8), (unique, 0x10000227, 8) INT_ADD (unique, 0x1000021f, 8) , (register, 0x30, 8), (unique, 0x1000021f, 8) CAST (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 16), (register, 0x0, 8) CAST (unique, 0x1000023f, 8), (unique, 0x1000023f, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000237, 8), (unique, 0x10000237, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (unique, 0x1000022f, 8) , (const, 0x10, 8), (unique, 0x1000022f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000024f, 8), (unique, 0x1000024f, 8) INT_ADD (unique, 0x10000247, 8) , (const, 0x1, 8), (unique, 0x10000247, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
