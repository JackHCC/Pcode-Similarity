[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000112, 8), (unique, 0x10000112, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x47be20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x2, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000011a, 8), (unique, 0x1000011a, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x47bddb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x35, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x35, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x35, 4)]
[ ---  CBRANCH (ram, 0x47be38, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455f80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x90800, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47bddb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x48, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x48, 4)]
[ ---  CBRANCH (ram, 0x47be0e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455300, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47be00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff50, 4) , (const, 0xf000, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x14, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000122, 8), (unique, 0x10000122, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10e, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x47bddb, 1)]
[(unique, 0x10000102, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x8000, 8)]
[ ---  CBRANCH (ram, 0x47bd80, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7fff, 8) , (unique, 0x1000012a, 8), (unique, 0x1000012a, 8) CAST (stack, 0xffffffffffffff70, 8)]
[(unique, 0x1000010a, 8) COPY (stack, 0xffffffffffffff70, 8)]
[ ---  CBRANCH (ram, 0x47bd90, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x100000, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000102, 8) , (unique, 0x1000010a, 8)]
[(register, 0x18, 8) COPY (const, 0x100000, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x93, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x93, 4)]
[ ---  CBRANCH (ram, 0x47be42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000132, 8), (unique, 0x10000132, 8) CALL (ram, 0x426550, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x18, 8) COPY (const, 0x2000, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe1, 4)]
[ ---  CBRANCH (ram, 0x47bda5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) CALL (ram, 0x426550, 8) , (const, 0x2030, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf7, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0xbc80, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000142, 8), (unique, 0x10000142, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x47bddb, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000152, 8) , (register, 0x18, 8), (unique, 0x10000152, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015a, 8) , (const, 0x0, 8), (unique, 0x1000015a, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000162, 8) , (const, 0x0, 8), (unique, 0x10000162, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016a, 8) , (const, 0x0, 8), (unique, 0x1000016a, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47be3d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000172, 8), (unique, 0x10000172, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xda, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
