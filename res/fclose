[ ---  CBRANCH (ram, 0x17e308, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000084, 4) , (const, 0x0, 4), (unique, 0x10000084, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a1, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x2a1, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x2a1, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x2a1, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x2a1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2a1, 4)]
[ ---  CALL (ram, 0x18d5c0, 8)]
[ ---  CBRANCH (ram, 0x17e36e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ec, 4) , (const, 0x0, 4), (unique, 0x100000ec, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17e314, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x17e36a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000276, 8), (unique, 0x10000276, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026e, 8), (unique, 0x1000026e, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000266, 8), (unique, 0x10000266, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x17e342, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x29d, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x29d, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x29d, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x29d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x29d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x22c, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x22c, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x22c, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x22c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x22c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17e35d, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x280, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x280, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x280, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x280, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x280, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x280, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x238, 4), (ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x238, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x238, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x238, 4), (ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x238, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000286, 8) , (register, 0x80, 8), (unique, 0x10000286, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x240, 4), (ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x240, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x240, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x240, 4), (ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x240, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x17e270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000114, 4) , (const, 0x0, 4), (unique, 0x10000114, 4) INT_AND (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x263, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x263, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x263, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x263, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x263, 4)]
[(register, 0x0, 4) CALL (ram, 0x18c190, 8) , (register, 0x38, 8)]
[(register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000210, 8), (unique, 0x10000210, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x17e278, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) INT_SRIGHT (unique, 0x1000028e, 4) , (const, 0x1f, 4), (unique, 0x1000028e, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x1a, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17e28d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x85, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x85, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x85, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x85, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x85, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x17e3a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x88, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x1ac, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1ac, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1ac, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x1ac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000029a, 8) , (const, 0x0, 8), (unique, 0x1000029a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17e3b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ac, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x1e4, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1e4, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1e4, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x1e4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x1bc, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1bc, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1bc, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x1bc, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1bc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000229, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(unique, 0x10000231, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(unique, 0x10000239, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(unique, 0x10000241, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(unique, 0x10000245, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x17e3d2, 1) , (unique, 0x10000228, 1), (unique, 0x10000228, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ec840, 8) INDIRECT (unique, 0x10000229, 8) , (const, 0x1d6, 4)]
[(ram, 0x4ec848, 8) INDIRECT (unique, 0x10000231, 8) , (const, 0x1d6, 4)]
[(ram, 0x4ec850, 8) INDIRECT (unique, 0x10000239, 8) , (const, 0x1d6, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (unique, 0x10000241, 4) , (const, 0x1d6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000245, 4) , (const, 0x1d6, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x10000245, 4)]
[(ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (unique, 0x10000241, 4)]
[(ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (unique, 0x10000239, 8)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (unique, 0x10000231, 8)]
[(ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (unique, 0x10000229, 8)]
[ ---  CBRANCH (ram, 0x17e480, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002a2, 8), (unique, 0x100002a2, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x1a8, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x1a8, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x1a8, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x1a8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a8, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x17e2b4, 1)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0xc2, 4), (ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xc2, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xc2, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xc2, 4), (ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc2, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002aa, 8), (unique, 0x100002aa, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x17e3e0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[(unique, 0x10000252, 4) COPY (ram, 0x4f04e0, 4)]
[ ---  CBRANCH (ram, 0x17e2db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0xe5, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0xe5, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0xe5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe5, 4)]
[ ---  CALL (ram, 0x18de50, 8) , (unique, 0x100002b2, 8), (unique, 0x100002b2, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000256, 4) COPY (ram, 0x4f04e0, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0xe5, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0x98, 8)]
[ ---  CBRANCH (ram, 0x17e403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f04e0, 4) , (const, 0x0, 4)]
[(ram, 0x4f04e0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f04e0, 4) , (const, 0x0, 4)]
[(ram, 0x4f04e0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17e426, 1)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x18c, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x18c, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x18c, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x18c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18c, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f04e0, 8)]
[ ---  CALL (ram, 0x1238b0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002c2, 8), (unique, 0x100002c2, 8) INT_ADD (unique, 0x100002ba, 8) , (const, 0x48, 8), (unique, 0x100002ba, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x149, 4), (ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x143, 4), (ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x149, 4), (ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x143, 4), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x149, 4), (ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x143, 4), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x149, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x143, 4), (ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[ ---  CALL (ram, 0x1238b0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100002d2, 8), (unique, 0x100002d2, 8) INT_ADD (unique, 0x100002ca, 8) , (const, 0x88, 8), (unique, 0x100002ca, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x17e451, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x149, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x143, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000025e, 4) COPY (unique, 0x1000024b, 4), (unique, 0x1000024b, 4) INT_ADD (ram, 0x4f04e0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x17e473, 1) , (unique, 0x1000024f, 1), (unique, 0x1000024f, 1) INT_NOTEQUAL (unique, 0x1000024b, 4) , (const, 0x0, 4), (unique, 0x1000024b, 4) INT_ADD (ram, 0x4f04e0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x16d, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x16d, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x16d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x16d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000198, 8), (unique, 0x10000198, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f04e0, 8)]
[(unique, 0x1000025a, 4) COPY (ram, 0x4f04e0, 4), (ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x16d, 4), (ram, 0x4f04e0, 4) INT_ADD (ram, 0x4f04e0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(ram, 0x4f04e0, 4) COPY (unique, 0x10000262, 4), (unique, 0x10000262, 4) MULTIEQUAL (unique, 0x10000252, 4) , (unique, 0x10000256, 4) , (unique, 0x1000025a, 4) , (unique, 0x1000025e, 4)]
[ ---  CBRANCH (ram, 0x17e2fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002da, 8) , (register, 0x38, 8), (unique, 0x100002da, 8) CAST (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[ ---  CBRANCH (ram, 0x17e2fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002e2, 8) , (register, 0x38, 8), (unique, 0x100002e2, 8) CAST (ram, 0x4ec848, 8)]
[ ---  CBRANCH (ram, 0x17e2fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002ea, 8) , (register, 0x38, 8), (unique, 0x100002ea, 8) CAST (ram, 0x4ec840, 8)]
[(ram, 0x4ec840, 8) INDIRECT (ram, 0x4ec840, 8) , (const, 0x107, 4)]
[(ram, 0x4ec848, 8) INDIRECT (ram, 0x4ec848, 8) , (const, 0x107, 4)]
[(ram, 0x4ec850, 8) INDIRECT (ram, 0x4ec850, 8) , (const, 0x107, 4)]
[(ram, 0x4f04e0, 4) INDIRECT (ram, 0x4f04e0, 4) , (const, 0x107, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x107, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x38, 8)]
[(ram, 0x4ec840, 8) COPY (ram, 0x4ec840, 8), (ram, 0x4ec840, 8) MULTIEQUAL (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8) , (ram, 0x4ec840, 8)]
[(ram, 0x4ec848, 8) COPY (ram, 0x4ec848, 8), (ram, 0x4ec848, 8) MULTIEQUAL (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8) , (ram, 0x4ec848, 8)]
[(ram, 0x4ec850, 8) COPY (ram, 0x4ec850, 8), (ram, 0x4ec850, 8) MULTIEQUAL (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8) , (ram, 0x4ec850, 8)]
[(ram, 0x4f04e0, 4) COPY (ram, 0x4f04e0, 4), (ram, 0x4f04e0, 4) MULTIEQUAL (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4) , (ram, 0x4f04e0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x28, 4)]
