[(register, 0x30, 8) CAST (unique, 0x10000894, 8), (unique, 0x10000894, 8) INT_ADD (unique, 0x10000410, 8) , (register, 0x30, 4), (unique, 0x10000410, 8) INT_LEFT (unique, 0x10000408, 8) , (const, 0x20, 8), (unique, 0x10000408, 8) INT_SEXT (unique, 0x10000890, 4), (unique, 0x10000890, 4) CAST (register, 0x34, 4)]
[(register, 0x1240, 16) COPY (const, 0x0, 16)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1ab910, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0x31, 8), (register, 0x8, 8) INT_AND (unique, 0x1000089c, 8) , (const, 0x3f, 8), (unique, 0x1000089c, 8) CAST (register, 0x38, 8)]
[(register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_OR (unique, 0x10000018, 8) , (unique, 0x10000020, 8), (unique, 0x10000020, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000018, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x10, 4) , (register, 0x1260, 16), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x1260, 16) INT_ADD (unique, 0x100004e0, 16) , (register, 0x1260, 12), (unique, 0x100004e0, 16) INT_LEFT (unique, 0x100004d0, 16) , (const, 0x60, 16), (unique, 0x100004d0, 16) INT_SEXT (unique, 0x100008c4, 4), (unique, 0x100008c4, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001b4, 4) , (const, 0x0, 4), (register, 0x1260, 12) INT_ADD (unique, 0x100004c4, 12) , (register, 0x1260, 8), (unique, 0x100004c4, 12) INT_LEFT (unique, 0x100004b8, 12) , (const, 0x40, 12), (unique, 0x100004b8, 12) INT_SEXT (unique, 0x100008c0, 4), (unique, 0x100008c0, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001a8, 4) , (const, 0x0, 4), (register, 0x1260, 8) INT_SUB (unique, 0x100004b0, 8) , (unique, 0x90d00, 4), (unique, 0x100004b0, 8) INT_LEFT (unique, 0x100004a8, 8) , (const, 0x20, 8), (unique, 0x100004a8, 8) INT_SEXT (unique, 0x100008bc, 4), (unique, 0x100008bc, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000019c, 4) , (const, 0x0, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000198, 4) , (const, 0x0, 4), (unique, 0x100001b4, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b8, 8), (unique, 0x100001b8, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100001a8, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ac, 8), (unique, 0x100001ac, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000019c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000198, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100008b4, 8), (unique, 0x100008b4, 8) INT_AND (unique, 0x100008ac, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100008ac, 8) CAST (register, 0x38, 8), (register, 0x8, 8) INT_AND (unique, 0x100008a4, 8) , (const, 0xf, 8), (unique, 0x100008a4, 8) CAST (register, 0x38, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x38, 8) CAST (unique, 0x100008b4, 8), (unique, 0x100008b4, 8) INT_AND (unique, 0x100008ac, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100008ac, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ab950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_OR (unique, 0x10000028, 8) , (unique, 0x10000030, 8), (unique, 0x10000030, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000028, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff00000000, 8), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000528, 16) , (register, 0x1200, 12), (unique, 0x10000528, 16) INT_LEFT (unique, 0x10000518, 16) , (const, 0x60, 16), (unique, 0x10000518, 16) INT_SEXT (unique, 0x100008d0, 4), (unique, 0x100008d0, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001b4, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x1000050c, 12) , (register, 0x1200, 8), (unique, 0x1000050c, 12) INT_LEFT (unique, 0x10000500, 12) , (const, 0x40, 12), (unique, 0x10000500, 12) INT_SEXT (unique, 0x100008cc, 4), (unique, 0x100008cc, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001a8, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100004f8, 8) , (unique, 0x90d00, 4), (unique, 0x100004f8, 8) INT_LEFT (unique, 0x100004f0, 8) , (const, 0x20, 8), (unique, 0x100004f0, 8) INT_SEXT (unique, 0x100008c8, 4), (unique, 0x100008c8, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000019c, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000198, 4) , (register, 0x30, 4), (unique, 0x100001b4, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b8, 8), (unique, 0x100001b8, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100001a8, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ac, 8), (unique, 0x100001ac, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000019c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000198, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100008b4, 8), (unique, 0x100008b4, 8) INT_AND (unique, 0x100008ac, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100008ac, 8) CAST (register, 0x38, 8), (register, 0x8, 8) INT_AND (unique, 0x100008a4, 8) , (const, 0xf, 8), (unique, 0x100008a4, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1abaf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x100008dc, 8), (unique, 0x100008dc, 8) INT_ADD (unique, 0x100008d4, 8) , (register, 0x8, 8), (unique, 0x100008d4, 8) CAST (register, 0x38, 8)]
[(unique, 0x100007f8, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100008ec, 8), (unique, 0x100008ec, 8) INT_ADD (unique, 0x100008e4, 8) , (register, 0x8, 8), (unique, 0x100008e4, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000878, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100007f0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000870, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ab960, 1)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x8, 4) , (register, 0x1240, 16), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000450, 16) , (register, 0x1240, 12), (unique, 0x10000450, 16) INT_LEFT (unique, 0x10000440, 16) , (const, 0x60, 16), (unique, 0x10000440, 16) INT_SEXT (unique, 0x100008fc, 4), (unique, 0x100008fc, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000018c, 4) , (const, 0x0, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000434, 12) , (register, 0x1240, 8), (unique, 0x10000434, 12) INT_LEFT (unique, 0x10000428, 12) , (const, 0x40, 12), (unique, 0x10000428, 12) INT_SEXT (unique, 0x100008f8, 4), (unique, 0x100008f8, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000180, 4) , (const, 0x0, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000420, 8) , (unique, 0x90d00, 4), (unique, 0x10000420, 8) INT_LEFT (unique, 0x10000418, 8) , (const, 0x20, 8), (unique, 0x10000418, 8) INT_SEXT (unique, 0x100008f4, 4), (unique, 0x100008f4, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000174, 4) , (const, 0x0, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000170, 4) , (const, 0x0, 4), (unique, 0x1000018c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000190, 8), (unique, 0x10000190, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000180, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000184, 8), (unique, 0x10000184, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000174, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000178, 8), (unique, 0x10000178, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000170, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ab8f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000008, 8) , (unique, 0x10000010, 8), (unique, 0x10000010, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000008, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff00000000, 8), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x1200, 16) INT_ADD (unique, 0x10000498, 16) , (register, 0x1200, 12), (unique, 0x10000498, 16) INT_LEFT (unique, 0x10000488, 16) , (const, 0x60, 16), (unique, 0x10000488, 16) INT_SEXT (unique, 0x10000908, 4), (unique, 0x10000908, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000018c, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x1000047c, 12) , (register, 0x1200, 8), (unique, 0x1000047c, 12) INT_LEFT (unique, 0x10000470, 12) , (const, 0x40, 12), (unique, 0x10000470, 12) INT_SEXT (unique, 0x10000904, 4), (unique, 0x10000904, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000180, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x10000468, 8) , (unique, 0x90d00, 4), (unique, 0x10000468, 8) INT_LEFT (unique, 0x10000460, 8) , (const, 0x20, 8), (unique, 0x10000460, 8) INT_SEXT (unique, 0x10000900, 4), (unique, 0x10000900, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000174, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000170, 4) , (register, 0x30, 4), (unique, 0x1000018c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000190, 8), (unique, 0x10000190, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x10000180, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000184, 8), (unique, 0x10000184, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000174, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000178, 8), (unique, 0x10000178, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000170, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100007d0, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000850, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1abaf6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000850, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x100007d0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1abb30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000108, 8) , (const, 0x0, 8), (unique, 0x10000108, 8) INT_AND (register, 0x8, 8) , (const, 0xf, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100007d0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58b00, 8) , (const, 0x0, 8), (unique, 0x58b00, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1abb40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1abb50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000110, 8) , (const, 0x0, 8), (unique, 0x10000110, 8) INT_AND (register, 0x8, 8) , (const, 0xf00, 8)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1fff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x1, 1) SUBPIECE (unique, 0x100007c0, 8) , (const, 0x0, 4), (unique, 0x100007c0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1abb90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000118, 8) , (const, 0x0, 8), (unique, 0x10000118, 8) INT_AND (register, 0x0, 8) , (const, 0x1000, 8)]
[ ---  CBRANCH (ram, 0x1abb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000120, 8) , (const, 0x0, 8), (unique, 0x10000120, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1ff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1abb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x100007c8, 8) , (const, 0x0, 4), (unique, 0x100007c8, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000130, 8) , (const, 0x0, 8), (unique, 0x10000130, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1f, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000128, 8) , (const, 0x0, 8), (unique, 0x10000128, 8) INT_AND (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000914, 8), (unique, 0x10000914, 8) INT_AND (unique, 0x1000090c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000090c, 8) CAST (register, 0x38, 8)]
[(unique, 0x100007e8, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000868, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ab960, 1)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000924, 8), (unique, 0x10000924, 8) INT_AND (unique, 0x1000091c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000091c, 8) CAST (register, 0x38, 8)]
[(unique, 0x100007d8, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000858, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1ab960, 1)]
[(register, 0x80, 8) COPY (unique, 0x10000888, 8), (unique, 0x10000888, 8) MULTIEQUAL (unique, 0x10000858, 8) , (unique, 0x10000860, 8) , (unique, 0x10000868, 8) , (unique, 0x10000870, 8) , (unique, 0x10000878, 8) , (unique, 0x10000880, 8)]
[(register, 0x30, 8) COPY (unique, 0x10000808, 8), (unique, 0x10000808, 8) MULTIEQUAL (unique, 0x100007d8, 8) , (unique, 0x100007e0, 8) , (unique, 0x100007e8, 8) , (unique, 0x100007f0, 8) , (unique, 0x100007f8, 8) , (unique, 0x10000800, 8)]
[(unique, 0x10000828, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ab9e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x10000050, 8), (unique, 0x10000050, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x10000048, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff00000000, 8), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1200, 16), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_OR (unique, 0x10000038, 8) , (unique, 0x10000040, 8), (unique, 0x10000040, 8) INT_ZEXT (register, 0x8, 4), (unique, 0x10000038, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff00000000, 8), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x8, 4) , (register, 0x1240, 16), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x1200, 16) INT_ADD (unique, 0x100005e8, 16) , (register, 0x1200, 12), (unique, 0x100005e8, 16) INT_LEFT (unique, 0x100005d8, 16) , (const, 0x60, 16), (unique, 0x100005d8, 16) INT_SEXT (unique, 0x10000934, 4), (unique, 0x10000934, 4) CAST (register, 0x120c, 4), (register, 0x120c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x100001dc, 4) , (register, 0x30, 4), (register, 0x1200, 12) INT_ADD (unique, 0x100005cc, 12) , (register, 0x1200, 8), (unique, 0x100005cc, 12) INT_LEFT (unique, 0x100005c0, 12) , (const, 0x40, 12), (unique, 0x100005c0, 12) INT_SEXT (unique, 0x10000930, 4), (unique, 0x10000930, 4) CAST (register, 0x1208, 4), (register, 0x1208, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001d0, 4) , (register, 0x30, 4), (register, 0x1200, 8) INT_SUB (unique, 0x100005b8, 8) , (unique, 0x90d00, 4), (unique, 0x100005b8, 8) INT_LEFT (unique, 0x100005b0, 8) , (const, 0x20, 8), (unique, 0x100005b0, 8) INT_SEXT (unique, 0x1000092c, 4), (unique, 0x1000092c, 4) CAST (register, 0x1204, 4), (register, 0x1204, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001c4, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100001c0, 4) , (register, 0x30, 4), (register, 0x1240, 16) INT_ADD (unique, 0x100005a0, 16) , (register, 0x1240, 12), (unique, 0x100005a0, 16) INT_LEFT (unique, 0x10000590, 16) , (const, 0x60, 16), (unique, 0x10000590, 16) INT_SEXT (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x100001dc, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000584, 12) , (register, 0x1240, 8), (unique, 0x10000584, 12) INT_LEFT (unique, 0x10000578, 12) , (const, 0x40, 12), (unique, 0x10000578, 12) INT_SEXT (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (register, 0x124c, 4) SUBPIECE (unique, 0x10000568, 16) , (const, 0x0, 4), (unique, 0x10000568, 16) INT_RIGHT (register, 0x1240, 16) , (const, 0x60, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x100001d0, 4), (register, 0x1248, 4) SUBPIECE (unique, 0x10000548, 16) , (const, 0x0, 4), (unique, 0x10000548, 16) INT_RIGHT (register, 0x1240, 16) , (const, 0x40, 4), (register, 0x1240, 8) INT_ADD (unique, 0x10000560, 8) , (register, 0x1240, 4), (unique, 0x10000560, 8) INT_LEFT (unique, 0x10000558, 8) , (const, 0x20, 8), (unique, 0x10000558, 8) INT_SEXT (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x100001c4, 4), (register, 0x1244, 4) SUBPIECE (unique, 0x10000538, 16) , (const, 0x0, 4), (unique, 0x10000538, 16) INT_RIGHT (register, 0x1240, 16) , (const, 0x20, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x90d00, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x100001c0, 4), (register, 0x1240, 4) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (unique, 0x100001dc, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x100001d0, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d4, 8), (unique, 0x100001d4, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100001c4, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x100001c0, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 16) MULTIEQUAL (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16)]
[(unique, 0x10000830, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ab9e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x10000060, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x10000070, 8), (unique, 0x10000070, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1260, 16), (unique, 0x10000060, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1260, 16) INT_ADD (unique, 0x10000678, 16) , (register, 0x1260, 12), (unique, 0x10000678, 16) INT_LEFT (unique, 0x10000668, 16) , (const, 0x60, 16), (unique, 0x10000668, 16) INT_SEXT (unique, 0x10000940, 4), (unique, 0x10000940, 4) CAST (register, 0x126c, 4), (register, 0x126c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000204, 4) , (register, 0x30, 4), (register, 0x1260, 12) INT_ADD (unique, 0x1000065c, 12) , (register, 0x1260, 8), (unique, 0x1000065c, 12) INT_LEFT (unique, 0x10000650, 12) , (const, 0x40, 12), (unique, 0x10000650, 12) INT_SEXT (unique, 0x1000093c, 4), (unique, 0x1000093c, 4) CAST (register, 0x1268, 4), (register, 0x1268, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x100001f8, 4) , (register, 0x30, 4), (register, 0x1260, 8) INT_SUB (unique, 0x10000648, 8) , (unique, 0x90d00, 4), (unique, 0x10000648, 8) INT_LEFT (unique, 0x10000640, 8) , (const, 0x20, 8), (unique, 0x10000640, 8) INT_SEXT (unique, 0x10000938, 4), (unique, 0x10000938, 4) CAST (register, 0x1264, 4), (register, 0x1264, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x100001ec, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x100001e8, 4) , (register, 0x30, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000630, 16) , (register, 0x1240, 12), (unique, 0x10000630, 16) INT_LEFT (unique, 0x10000620, 16) , (const, 0x60, 16), (unique, 0x10000620, 16) INT_SEXT (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x10000204, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000614, 12) , (register, 0x1240, 8), (unique, 0x10000614, 12) INT_LEFT (unique, 0x10000608, 12) , (const, 0x40, 12), (unique, 0x10000608, 12) INT_SEXT (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x100001f8, 4), (register, 0x1240, 8) INT_ADD (unique, 0x10000600, 8) , (register, 0x1240, 4), (unique, 0x10000600, 8) INT_LEFT (unique, 0x100005f8, 8) , (const, 0x20, 8), (unique, 0x100005f8, 8) INT_SEXT (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x100001ec, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x90d00, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x100001e8, 4), (unique, 0x10000204, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000208, 8), (unique, 0x10000208, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x4, 8), (unique, 0x100001f8, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001fc, 8), (unique, 0x100001fc, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x100001ec, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0x100001e8, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000838, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ab9e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x10000080, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x10000090, 8), (unique, 0x10000090, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x1280, 16), (unique, 0x10000080, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x1280, 16) INT_ADD (unique, 0x10000708, 16) , (register, 0x1280, 12), (unique, 0x10000708, 16) INT_LEFT (unique, 0x100006f8, 16) , (const, 0x60, 16), (unique, 0x100006f8, 16) INT_SEXT (unique, 0x1000094c, 4), (unique, 0x1000094c, 4) CAST (register, 0x128c, 4), (register, 0x128c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x1000022c, 4) , (register, 0x30, 4), (register, 0x1280, 12) INT_ADD (unique, 0x100006ec, 12) , (register, 0x1280, 8), (unique, 0x100006ec, 12) INT_LEFT (unique, 0x100006e0, 12) , (const, 0x40, 12), (unique, 0x100006e0, 12) INT_SEXT (unique, 0x10000948, 4), (unique, 0x10000948, 4) CAST (register, 0x1288, 4), (register, 0x1288, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000220, 4) , (register, 0x30, 4), (register, 0x1280, 8) INT_SUB (unique, 0x100006d8, 8) , (unique, 0x90d00, 4), (unique, 0x100006d8, 8) INT_LEFT (unique, 0x100006d0, 8) , (const, 0x20, 8), (unique, 0x100006d0, 8) INT_SEXT (unique, 0x10000944, 4), (unique, 0x10000944, 4) CAST (register, 0x1284, 4), (register, 0x1284, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x10000214, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000210, 4) , (register, 0x30, 4), (register, 0x1240, 16) INT_ADD (unique, 0x100006c0, 16) , (register, 0x1240, 12), (unique, 0x100006c0, 16) INT_LEFT (unique, 0x100006b0, 16) , (const, 0x60, 16), (unique, 0x100006b0, 16) INT_SEXT (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x1000022c, 4), (register, 0x1240, 12) INT_ADD (unique, 0x100006a4, 12) , (register, 0x1240, 8), (unique, 0x100006a4, 12) INT_LEFT (unique, 0x10000698, 12) , (const, 0x40, 12), (unique, 0x10000698, 12) INT_SEXT (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x10000220, 4), (register, 0x1240, 8) INT_ADD (unique, 0x10000690, 8) , (register, 0x1240, 4), (unique, 0x10000690, 8) INT_LEFT (unique, 0x10000688, 8) , (const, 0x20, 8), (unique, 0x10000688, 8) INT_SEXT (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x10000214, 4), (register, 0x1240, 4) INT_2COMP (unique, 0x90d00, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x10000210, 4), (unique, 0x1000022c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000230, 8), (unique, 0x10000230, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x4, 8), (unique, 0x10000220, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000224, 8), (unique, 0x10000224, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0x10000214, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000218, 8), (unique, 0x10000218, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x4, 8), (unique, 0x10000210, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100007e0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000840, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x10000860, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1ab960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x100000a0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x10000048, 8) , (unique, 0x100000b0, 8), (unique, 0x100000b0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x0, 4) , (register, 0x12a0, 16), (unique, 0x100000a0, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (const, 0x0, 4) , (register, 0x1240, 16), (register, 0x12a0, 16) INT_ADD (unique, 0x10000798, 16) , (register, 0x12a0, 12), (unique, 0x10000798, 16) INT_LEFT (unique, 0x10000788, 16) , (const, 0x60, 16), (unique, 0x10000788, 16) INT_SEXT (unique, 0x10000964, 4), (unique, 0x10000964, 4) CAST (register, 0x12ac, 4), (register, 0x12ac, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (unique, 0x10000254, 4) , (register, 0x30, 4), (register, 0x12a0, 12) INT_ADD (unique, 0x1000077c, 12) , (register, 0x12a0, 8), (unique, 0x1000077c, 12) INT_LEFT (unique, 0x10000770, 12) , (const, 0x40, 12), (unique, 0x10000770, 12) INT_SEXT (unique, 0x10000960, 4), (unique, 0x10000960, 4) CAST (register, 0x12a8, 4), (register, 0x12a8, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (unique, 0x10000248, 4) , (register, 0x30, 4), (register, 0x12a0, 8) INT_SUB (unique, 0x10000768, 8) , (unique, 0x90d00, 4), (unique, 0x10000768, 8) INT_LEFT (unique, 0x10000760, 8) , (const, 0x20, 8), (unique, 0x10000760, 8) INT_SEXT (unique, 0x1000095c, 4), (unique, 0x1000095c, 4) CAST (register, 0x12a4, 4), (register, 0x12a4, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (unique, 0x1000023c, 4) , (register, 0x30, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (unique, 0x10000238, 4) , (register, 0x30, 4), (register, 0x1240, 16) INT_ADD (unique, 0x10000750, 16) , (register, 0x1240, 12), (unique, 0x10000750, 16) INT_LEFT (unique, 0x10000740, 16) , (const, 0x60, 16), (unique, 0x10000740, 16) INT_SEXT (unique, 0x10000958, 4), (unique, 0x10000958, 4) CAST (register, 0x124c, 4), (register, 0x124c, 4) INT_2COMP (unique, 0x91180, 4), (unique, 0x91180, 4) INT_ZEXT (unique, 0x91100, 1), (unique, 0x91100, 1) INT_EQUAL (register, 0x124c, 4) , (unique, 0x10000254, 4), (register, 0x1240, 12) INT_ADD (unique, 0x10000734, 12) , (register, 0x1240, 8), (unique, 0x10000734, 12) INT_LEFT (unique, 0x10000728, 12) , (const, 0x40, 12), (unique, 0x10000728, 12) INT_SEXT (unique, 0x10000954, 4), (unique, 0x10000954, 4) CAST (register, 0x1248, 4), (register, 0x1248, 4) INT_2COMP (unique, 0x91000, 4), (unique, 0x91000, 4) INT_ZEXT (unique, 0x90f80, 1), (unique, 0x90f80, 1) INT_EQUAL (register, 0x1248, 4) , (unique, 0x10000248, 4), (register, 0x1240, 8) INT_SUB (unique, 0x10000720, 8) , (unique, 0x90d00, 4), (unique, 0x10000720, 8) INT_LEFT (unique, 0x10000718, 8) , (const, 0x20, 8), (unique, 0x10000718, 8) INT_SEXT (unique, 0x10000950, 4), (unique, 0x10000950, 4) CAST (register, 0x1244, 4), (register, 0x1244, 4) INT_2COMP (unique, 0x90e80, 4), (unique, 0x90e80, 4) INT_ZEXT (unique, 0x90e00, 1), (unique, 0x90e00, 1) INT_EQUAL (register, 0x1244, 4) , (unique, 0x1000023c, 4), (unique, 0x90d00, 4) INT_ZEXT (unique, 0x90c80, 1), (unique, 0x90c80, 1) INT_EQUAL (register, 0x1240, 4) , (unique, 0x10000238, 4), (unique, 0x10000254, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000258, 8), (unique, 0x10000258, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x4, 8), (unique, 0x10000248, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8), (unique, 0x1000023c, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000240, 8), (unique, 0x10000240, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x10000238, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 16) MULTIEQUAL (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) COPY (unique, 0x10000848, 8), (unique, 0x10000848, 8) MULTIEQUAL (unique, 0x10000828, 8) , (unique, 0x10000830, 8) , (unique, 0x10000838, 8) , (unique, 0x10000840, 8)]
[ ---  CBRANCH (ram, 0x1aba20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000800, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000880, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1aba40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0x100000c8, 8) , (unique, 0x100000d0, 8), (unique, 0x100000d0, 8) INT_ZEXT (register, 0x8, 4), (unique, 0x100000c8, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff00000000, 8), (register, 0x8, 4) CALLOTHER (const, 0x8d, 4) , (register, 0x8, 4) , (register, 0x1240, 16), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[(register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1aba80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002dc, 4) , (const, 0x0, 4), (unique, 0x100002dc, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4)]
[ ---  CBRANCH (ram, 0x1ab9e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58b00, 8) , (const, 0x0, 8), (unique, 0x58b00, 8) INT_AND (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1abaa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1ab9e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1f, 8)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f8, 8) , (const, 0x0, 8), (unique, 0x100000f8, 8) INT_AND (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1abac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002e0, 4) , (const, 0x0, 4), (unique, 0x100002e0, 4) INT_AND (register, 0x8, 4) , (const, 0xf00, 4)]
[ ---  CBRANCH (ram, 0x1ab9e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1ff, 8)]
[ ---  CBRANCH (ram, 0x1abb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x1, 1) , (const, 0x0, 1), (register, 0x1, 1) SUBPIECE (unique, 0x100007b8, 8) , (const, 0x0, 4), (unique, 0x100007b8, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000100, 8) , (const, 0x0, 8), (unique, 0x10000100, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ab9e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0x1fff, 8)]
[(register, 0x1, 1) SUBPIECE (unique, 0x100007b0, 8) , (const, 0x0, 4), (unique, 0x100007b0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1abb90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e8, 8) , (const, 0x0, 8), (unique, 0x100000e8, 8) INT_AND (register, 0x0, 8) , (const, 0x1000, 8)]
[ ---  CBRANCH (ram, 0x1abb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f0, 8) , (const, 0x0, 8), (unique, 0x100000f0, 8) INT_AND (register, 0x0, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1abba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x1, 1) SUBPIECE (unique, 0x100007a8, 8) , (const, 0x0, 4), (unique, 0x100007a8, 8) INT_RIGHT (register, 0x80, 8) , (const, 0x8, 4)]
[(unique, 0x10000810, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1abb90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b8, 8) , (const, 0x0, 8), (unique, 0x100000b8, 8) INT_AND (register, 0x80, 8) , (const, 0xf000, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000810, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1abb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1, 1) , (const, 0x0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000810, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1abb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c0, 8) , (const, 0x0, 8), (unique, 0x100000c0, 8) INT_AND (register, 0x80, 8) , (const, 0xf0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000810, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
