[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003fa, 8), (unique, 0x100003fa, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12654e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001cc, 4) , (const, 0x0, 4), (unique, 0x100001cc, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000040a, 8), (unique, 0x1000040a, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x12654e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000402, 8), (unique, 0x10000402, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0xb0, 8) CAST (unique, 0x1000042a, 8), (unique, 0x1000042a, 8) INT_XOR (register, 0xb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000422, 8), (unique, 0x10000422, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xb0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x1000041a, 8) , (const, 0x2f, 4), (unique, 0x1000041a, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x10000412, 8) , (const, 0x11, 4), (unique, 0x10000412, 8) CAST (unique, 0xbd80, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x12686a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1268c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x45d, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001f5, 8) , (unique, 0x100001ed, 8) , (const, 0x19f, 4) , (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) COPY (const, 0x2bbb80, 8), (unique, 0x100001f5, 8) COPY (const, 0x2b39f4, 8), (unique, 0x100001ed, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000432, 8) , (const, 0x0, 8), (unique, 0x10000432, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x100003b6, 4) COPY (register, 0x98, 4), (register, 0x98, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1267b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000043a, 8), (unique, 0x1000043a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x44f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x44f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x41b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x44f, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x41b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x44f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x41b, 4)]
[(unique, 0x100003ba, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0xb0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x1267b5, 1)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(unique, 0x1000032e, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x126565, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x10000336, 8) COPY (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000032e, 8) , (unique, 0x10000336, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000031e, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x126589, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0x10000326, 8) COPY (unique, 0x3800, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000031e, 8) , (unique, 0x10000326, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x1266ab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003e6, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x126820, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x90, 4) COPY (const, 0x5, 4)]
[(unique, 0x10000306, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12660f, 1)]
[(unique, 0x100003de, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x126748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001dc, 4) , (const, 0x0, 4), (unique, 0x100001dc, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1266e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000265, 8) , (const, 0x1, 8), (unique, 0x10000265, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_RIGHT (unique, 0x10000452, 8) , (const, 0x2, 4), (unique, 0x10000452, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0x1000044a, 8) , (unique, 0x1000025d, 8), (unique, 0x1000044a, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000025d, 8) INT_SUB (const, 0xfffffffffffffffc, 8) , (unique, 0x10000442, 8), (unique, 0x10000442, 8) CAST (register, 0x80, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003de, 8) , (unique, 0x10000356, 8)]
[ ---  CBRANCH (ram, 0x126609, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000045a, 1) , (const, 0x0, 1), (unique, 0x1000045a, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x126810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000356, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x126700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8)]
[(register, 0x90, 4) COPY (const, 0x4, 4)]
[(unique, 0x1000039e, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x126777, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100002b8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x100002b0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x100002a8, 8)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (unique, 0x100002a4, 4)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003e6, 8) , (unique, 0x1000029c, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000039e, 8) , (unique, 0x100003a6, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000039e, 8) , (unique, 0x100003a6, 8)]
[ ---  CBRANCH (ram, 0x126760, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000045b, 1) , (const, 0x0, 1), (unique, 0x1000045b, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000039e, 8) , (unique, 0x100003a6, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 4)]
[(unique, 0x100003c6, 8) COPY (register, 0x8, 8)]
[(register, 0x90, 4) COPY (const, 0x6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x343, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x1000029c, 8) MULTIEQUAL (unique, 0x100003c6, 8) , (register, 0x30, 8)]
[(unique, 0x100002a4, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(unique, 0x100002a8, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100002b0, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100002b8, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000316, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1267a0, 1) , (unique, 0x1000029b, 1), (unique, 0x1000029b, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[(unique, 0x100003a6, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x126730, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000029c, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000023d, 8) , (const, 0x1, 8), (unique, 0x1000023d, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_RIGHT (unique, 0x1000046c, 8) , (const, 0x2, 4), (unique, 0x1000046c, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0x10000464, 8) , (unique, 0x10000235, 8), (unique, 0x10000464, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000235, 8) INT_SUB (const, 0xfffffffffffffffc, 8) , (unique, 0x1000045c, 8), (unique, 0x1000045c, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1265fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000033e, 8) , (unique, 0x100003de, 8)]
[ ---  CBRANCH (ram, 0x1267e0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000474, 1) , (const, 0x0, 1), (unique, 0x10000474, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x126810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000033e, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x126730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003de, 8) , (unique, 0x10000366, 8)]
[ ---  CBRANCH (ram, 0x1265e0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000475, 1) , (const, 0x0, 1), (unique, 0x10000475, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x90, 4) COPY (const, 0x6, 4)]
[(unique, 0x100002f6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000037e, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x126810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x90, 4) COPY (const, 0x4, 4)]
[(unique, 0x1000030e, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000366, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x126730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x100002b8, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x100002b0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100002a8, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x90, 4) COPY (const, 0x5, 4)]
[(unique, 0x100002fe, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (register, 0x0, 8) , (unique, 0x3a00, 8)]
[(unique, 0x10000386, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x1000029c, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x12660f, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x100002b8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x100002b0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100002a8, 8)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (unique, 0x100002a4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002f6, 8) , (unique, 0x100002fe, 8) , (unique, 0x10000306, 8) , (unique, 0x1000030e, 8) , (unique, 0x10000316, 8)]
[(unique, 0x100003ce, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000037e, 8) , (unique, 0x10000386, 8) , (unique, 0x100003e6, 8) , (register, 0x30, 8) , (unique, 0x1000029c, 8)]
[(unique, 0x100002c1, 8) MULTIEQUAL (unique, 0x100003ce, 8) , (unique, 0x100003d6, 8)]
[(unique, 0x100002c9, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x100002d1, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002dd, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100002e5, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100002ed, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100003ee, 4) COPY (unique, 0x100002d9, 4), (unique, 0x100002d9, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1266d0, 1) , (unique, 0x100002c0, 1), (unique, 0x100002c0, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0x100002c1, 8)]
[ ---  BRANCH (ram, 0x1267b5, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000047e, 8), (unique, 0x1000047e, 8) INT_ADD (unique, 0x10000476, 8) , (const, 0x14, 8), (unique, 0x10000476, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x126830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000486, 8), (unique, 0x10000486, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x100002c1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x100002dd, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x1267b5, 1)]
[ ---  CBRANCH (ram, 0x1267b2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x100002c1, 8) , (unique, 0x100002c9, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b7, 4), (register, 0x110, 8) INDIRECT (unique, 0x100002d1, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1b7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100002dd, 8) , (const, 0x193, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b7, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x193, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002ed, 8) , (const, 0x193, 4)]
[ ---  CBRANCH (ram, 0x1267a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (register, 0xb0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (unique, 0x100002c1, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4)]
[(unique, 0x100003c2, 4) COPY (unique, 0x100002d9, 4)]
[ ---  CBRANCH (ram, 0x126698, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002d9, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x126850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002c1, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x1000036e, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004ae, 8), (unique, 0x100004ae, 8) INT_ADD (unique, 0x100004a6, 8) , (const, 0x3, 8), (unique, 0x100004a6, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000049e, 8), (unique, 0x1000049e, 8) INT_SUB (unique, 0x1000048e, 8) , (unique, 0x10000496, 8), (unique, 0x10000496, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0x1000048e, 8) CAST (unique, 0x100002c1, 8)]
[ ---  CBRANCH (ram, 0x12685e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100004b6, 8), (unique, 0x100004b6, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x1000049e, 8), (unique, 0x1000049e, 8) INT_SUB (unique, 0x1000048e, 8) , (unique, 0x10000496, 8), (unique, 0x10000496, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0x1000048e, 8) CAST (unique, 0x100002c1, 8)]
[(unique, 0x10000376, 8) COPY (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000174, 8) , (const, 0x1, 8), (unique, 0x10000174, 8) INT_2COMP (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (unique, 0x100004be, 8) , (const, 0x2, 4), (unique, 0x100004be, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000036e, 8) , (unique, 0x10000376, 8)]
[ ---  BRANCH (ram, 0x126690, 1)]
[ ---  CBRANCH (ram, 0x1268df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100002e5, 8) , (unique, 0x100002e5, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x100002e5, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100002dd, 8) , (unique, 0x100002dd, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x100002dd, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x0, 4) COPY (register, 0x98, 4), (register, 0x98, 4) MULTIEQUAL (unique, 0x100003ee, 4) , (unique, 0x100003ee, 4) , (unique, 0x100003b6, 4) , (unique, 0x100003ba, 4) , (unique, 0x100003ee, 4) , (unique, 0x100003c2, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1268bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004c6, 8), (unique, 0x100004c6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x100002d1, 8) , (unique, 0x100002d1, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x100002d1, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100002ed, 8) , (unique, 0x100002ed, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x100002ed, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23f, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004ce, 8), (unique, 0x100004ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1265a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 4) COPY (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8)]
[(unique, 0x100003d6, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
