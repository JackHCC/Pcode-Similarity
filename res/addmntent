[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100004dd, 8), (unique, 0x100004dd, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x53, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004ed, 8), (unique, 0x100004ed, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x53, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004fd, 8), (unique, 0x100004fd, 8) INT_ADD (unique, 0x100004f5, 8) , (const, 0x24, 8), (unique, 0x100004f5, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x53, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004e5, 8), (unique, 0x100004e5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x218870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x187c60, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x218990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000505, 8), (unique, 0x10000505, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000049d, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x218567, 1) , (unique, 0x100001a9, 1), (unique, 0x100001a9, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[(unique, 0x100002cb, 8) MULTIEQUAL (unique, 0x1000049d, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x218567, 1) , (unique, 0x100002d3, 1), (unique, 0x100002d3, 1) INT_LESS (unique, 0x1000050d, 1) , (const, 0x2, 1), (unique, 0x1000050d, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x9, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x218990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000051e, 8), (unique, 0x1000051e, 8) CAST (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000516, 8), (unique, 0x10000516, 8) INT_ADD (unique, 0x1000050e, 8) , (const, 0x1, 8), (unique, 0x1000050e, 8) CAST (unique, 0x100002cb, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100003f5, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x2185d9, 1)]
[ ---  CBRANCH (ram, 0x218540, 1) , (unique, 0x10000331, 1), (unique, 0x10000331, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd9, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x10000223, 8) , (unique, 0x100000b6, 8) , (const, 0x1, 8), (unique, 0x10000223, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x100000b6, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000526, 8), (unique, 0x10000526, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000023b, 8) , (unique, 0x100000b6, 8) , (const, 0x1, 8), (unique, 0x1000023b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x100000b6, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000526, 8), (unique, 0x10000526, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000536, 8), (unique, 0x10000536, 8) INT_ADD (unique, 0x1000052e, 8) , (unique, 0x100000b6, 8), (unique, 0x1000052e, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x100000b6, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000526, 8), (unique, 0x10000526, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000039d, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000536, 8), (unique, 0x10000536, 8) INT_ADD (unique, 0x1000052e, 8) , (unique, 0x100000b6, 8), (unique, 0x1000052e, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8), (unique, 0x100000b6, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000526, 8), (unique, 0x10000526, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000042d, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x2185ba, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000039d, 8) , (unique, 0x100003a5, 8) , (unique, 0x100003ad, 8)]
[ ---  CBRANCH (ram, 0x218590, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000053e, 8), (unique, 0x1000053e, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000042d, 8) , (unique, 0x10000435, 8) , (unique, 0x1000043d, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000556, 8) , (const, 0x3034305c, 4), (unique, 0x10000556, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003a5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000566, 8), (unique, 0x10000566, 8) INT_ADD (unique, 0x1000055e, 8) , (const, 0x4, 8), (unique, 0x1000055e, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003e5, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000435, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x1000054e, 8), (unique, 0x1000054e, 8) INT_ADD (unique, 0x10000546, 8) , (const, 0x1, 8), (unique, 0x10000546, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x2185ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000056e, 8), (unique, 0x1000056e, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x2188b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000576, 8) , (const, 0x3131305c, 4), (unique, 0x10000576, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000586, 8), (unique, 0x10000586, 8) INT_ADD (unique, 0x1000057e, 8) , (const, 0x4, 8), (unique, 0x1000057e, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x2185ae, 1)]
[ ---  CBRANCH (ram, 0x218910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000058e, 8) , (const, 0x3231305c, 4), (unique, 0x1000058e, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000059e, 8), (unique, 0x1000059e, 8) INT_ADD (unique, 0x10000596, 8) , (const, 0x4, 8), (unique, 0x10000596, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x2185ae, 1)]
[ ---  CBRANCH (ram, 0x218920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[(register, 0x10, 8) CAST (unique, 0x100005ae, 8), (unique, 0x100005ae, 8) INT_ADD (unique, 0x100005a6, 8) , (const, 0x2, 8), (unique, 0x100005a6, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005b6, 8) , (const, 0x5c5c, 2), (unique, 0x100005b6, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x2185ae, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005be, 8) , (unique, 0xbb00, 1), (unique, 0x100005be, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x100005ce, 8), (unique, 0x100005ce, 8) INT_ADD (unique, 0x100005c6, 8) , (const, 0x1, 8), (unique, 0x100005c6, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003ad, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100003ed, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000043d, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x100005de, 8), (unique, 0x100005de, 8) INT_ADD (unique, 0x100005d6, 8) , (const, 0x1, 8), (unique, 0x100005d6, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x2185d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005e6, 8), (unique, 0x100005e6, 8) CAST (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003e5, 8) , (unique, 0x100003ed, 8) , (unique, 0x100003f5, 8)]
[ ---  CBRANCH (ram, 0x218980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005ee, 8), (unique, 0x100005ee, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100004a5, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x21862f, 1) , (unique, 0x100001b1, 1), (unique, 0x100001b1, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[(unique, 0x100002d4, 8) MULTIEQUAL (unique, 0x100004a5, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x21862f, 1) , (unique, 0x100002dc, 1), (unique, 0x100002dc, 1) INT_LESS (unique, 0x100005f6, 1) , (const, 0x2, 1), (unique, 0x100005f6, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x9, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x218980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000607, 8), (unique, 0x10000607, 8) CAST (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100005ff, 8), (unique, 0x100005ff, 8) INT_ADD (unique, 0x100005f7, 8) , (const, 0x1, 8), (unique, 0x100005f7, 8) CAST (unique, 0x100002d4, 8)]
[ ---  CBRANCH (ram, 0x218608, 1) , (unique, 0x10000338, 1), (unique, 0x10000338, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000060f, 8) , (const, 0x218637, 8), (unique, 0x1000060f, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1aa, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1aa, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1a9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1aa, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1a9, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1aa, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1a9, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1aa, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1a9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1aa, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a9, 4)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100000ea, 8) , (const, 0x1, 8), (unique, 0x100000ea, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000617, 8), (unique, 0x10000617, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100000ea, 8) , (const, 0x1, 8), (unique, 0x100000ea, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000617, 8), (unique, 0x10000617, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000385, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x10000627, 8), (unique, 0x10000627, 8) INT_AND (unique, 0x1000061f, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000061f, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000253, 8) , (const, 0x1, 8), (unique, 0x10000253, 8) INT_ADD (unique, 0x100000ea, 8) , (const, 0xf, 8), (unique, 0x100000ea, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000617, 8), (unique, 0x10000617, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000455, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x218681, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000385, 8) , (unique, 0x1000038d, 8) , (unique, 0x10000395, 8)]
[(unique, 0x100004d5, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x218658, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000062f, 8), (unique, 0x1000062f, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000455, 8) , (unique, 0x1000045d, 8) , (unique, 0x10000465, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000647, 8) , (const, 0x3034305c, 4), (unique, 0x10000647, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000038d, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000657, 8), (unique, 0x10000657, 8) INT_ADD (unique, 0x1000064f, 8) , (const, 0x4, 8), (unique, 0x1000064f, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003d5, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000045d, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x1000063f, 8), (unique, 0x1000063f, 8) INT_ADD (unique, 0x10000637, 8) , (const, 0x1, 8), (unique, 0x10000637, 8) CAST (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x218681, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000065f, 8), (unique, 0x1000065f, 8) CAST (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x2188c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000667, 8) , (const, 0x3131305c, 4), (unique, 0x10000667, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000677, 8), (unique, 0x10000677, 8) INT_ADD (unique, 0x1000066f, 8) , (const, 0x4, 8), (unique, 0x1000066f, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x218676, 1)]
[ ---  CBRANCH (ram, 0x2188e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000067f, 8) , (const, 0x3231305c, 4), (unique, 0x1000067f, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000068f, 8), (unique, 0x1000068f, 8) INT_ADD (unique, 0x10000687, 8) , (const, 0x4, 8), (unique, 0x10000687, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x218676, 1)]
[ ---  CBRANCH (ram, 0x218968, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[(register, 0x10, 8) CAST (unique, 0x1000069f, 8), (unique, 0x1000069f, 8) INT_ADD (unique, 0x10000697, 8) , (const, 0x2, 8), (unique, 0x10000697, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006a7, 8) , (const, 0x5c5c, 2), (unique, 0x100006a7, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x218676, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006af, 8) , (unique, 0xbb00, 1), (unique, 0x100006af, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x100006bf, 8), (unique, 0x100006bf, 8) INT_ADD (unique, 0x100006b7, 8) , (const, 0x1, 8), (unique, 0x100006b7, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000395, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100003dd, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000465, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x100006cf, 8), (unique, 0x100006cf, 8) INT_ADD (unique, 0x100006c7, 8) , (const, 0x1, 8), (unique, 0x100006c7, 8) CAST (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x21869f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006d7, 8), (unique, 0x100006d7, 8) CAST (register, 0xa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100004d5, 8) , (unique, 0x100004d5, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003d5, 8) , (unique, 0x100003dd, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x2189b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006df, 8), (unique, 0x100006df, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100004ad, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2186f7, 1) , (unique, 0x100001b9, 1), (unique, 0x100001b9, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[(unique, 0x100002dd, 8) MULTIEQUAL (unique, 0x100004ad, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2186f7, 1) , (unique, 0x100002e5, 1), (unique, 0x100002e5, 1) INT_LESS (unique, 0x100006e7, 1) , (const, 0x2, 1), (unique, 0x100006e7, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x9, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x2189b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006f8, 8), (unique, 0x100006f8, 8) CAST (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100006f0, 8), (unique, 0x100006f0, 8) INT_ADD (unique, 0x100006e8, 8) , (const, 0x1, 8), (unique, 0x100006e8, 8) CAST (unique, 0x100002dd, 8)]
[ ---  CBRANCH (ram, 0x2186d0, 1) , (unique, 0x1000033f, 1), (unique, 0x1000033f, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000700, 8) , (const, 0x2186ff, 8), (unique, 0x10000700, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x278, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x278, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x278, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x278, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x278, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x278, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x277, 4)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000011e, 8) , (const, 0x1, 8), (unique, 0x1000011e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000708, 8), (unique, 0x10000708, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000011e, 8) , (const, 0x1, 8), (unique, 0x1000011e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000708, 8), (unique, 0x10000708, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000036d, 8) COPY (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x10000718, 8), (unique, 0x10000718, 8) INT_AND (unique, 0x10000710, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000710, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000263, 8) , (const, 0x1, 8), (unique, 0x10000263, 8) INT_ADD (unique, 0x1000011e, 8) , (const, 0xf, 8), (unique, 0x1000011e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000708, 8), (unique, 0x10000708, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000485, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x218749, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (unique, 0x10000375, 8) , (unique, 0x1000037d, 8)]
[(unique, 0x100004bd, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x218720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000720, 8), (unique, 0x10000720, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000485, 8) , (unique, 0x1000048d, 8) , (unique, 0x10000495, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000738, 8) , (const, 0x3034305c, 4), (unique, 0x10000738, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000375, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000748, 8), (unique, 0x10000748, 8) INT_ADD (unique, 0x10000740, 8) , (const, 0x4, 8), (unique, 0x10000740, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003c5, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000048d, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x10000730, 8), (unique, 0x10000730, 8) INT_ADD (unique, 0x10000728, 8) , (const, 0x1, 8), (unique, 0x10000728, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x218749, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000750, 8), (unique, 0x10000750, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x2188d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000758, 8) , (const, 0x3131305c, 4), (unique, 0x10000758, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000768, 8), (unique, 0x10000768, 8) INT_ADD (unique, 0x10000760, 8) , (const, 0x4, 8), (unique, 0x10000760, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x21873e, 1)]
[ ---  CBRANCH (ram, 0x2188f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000770, 8) , (const, 0x3231305c, 4), (unique, 0x10000770, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000780, 8), (unique, 0x10000780, 8) INT_ADD (unique, 0x10000778, 8) , (const, 0x4, 8), (unique, 0x10000778, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x21873e, 1)]
[ ---  CBRANCH (ram, 0x218950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000790, 8), (unique, 0x10000790, 8) INT_ADD (unique, 0x10000788, 8) , (const, 0x2, 8), (unique, 0x10000788, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000798, 8) , (const, 0x5c5c, 2), (unique, 0x10000798, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x21873e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007a0, 8) , (unique, 0xbb00, 1), (unique, 0x100007a0, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x100007b0, 8), (unique, 0x100007b0, 8) INT_ADD (unique, 0x100007a8, 8) , (const, 0x1, 8), (unique, 0x100007a8, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000037d, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100003cd, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000495, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x100007c0, 8), (unique, 0x100007c0, 8) INT_ADD (unique, 0x100007b8, 8) , (const, 0x1, 8), (unique, 0x100007b8, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x218766, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007c8, 8), (unique, 0x100007c8, 8) CAST (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100004bd, 8) , (unique, 0x100004bd, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100003c5, 8) , (unique, 0x100003cd, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x2189a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007d0, 8), (unique, 0x100007d0, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100004b5, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2187b7, 1) , (unique, 0x100001c1, 1), (unique, 0x100001c1, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[(unique, 0x100002e6, 8) MULTIEQUAL (unique, 0x100004b5, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2187b7, 1) , (unique, 0x100002ee, 1), (unique, 0x100002ee, 1) INT_LESS (unique, 0x100007d8, 1) , (const, 0x2, 1), (unique, 0x100007d8, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x9, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x2189a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007e9, 8), (unique, 0x100007e9, 8) CAST (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100007e1, 8), (unique, 0x100007e1, 8) INT_ADD (unique, 0x100007d9, 8) , (const, 0x1, 8), (unique, 0x100007d9, 8) CAST (unique, 0x100002e6, 8)]
[ ---  CBRANCH (ram, 0x218790, 1) , (unique, 0x10000346, 1), (unique, 0x10000346, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007f9, 8) , (const, 0x2187c3, 8), (unique, 0x100007f9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x349, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x349, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x348, 4), (stack, 0xffffffffffffffa0, 8) COPY (unique, 0x100007f1, 8), (unique, 0x100007f1, 8) CAST (register, 0x80, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x349, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x348, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x349, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x348, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x349, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x348, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x349, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x348, 4)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000152, 8) , (const, 0x1, 8), (unique, 0x10000152, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000801, 8), (unique, 0x10000801, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000152, 8) , (const, 0x1, 8), (unique, 0x10000152, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000801, 8), (unique, 0x10000801, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000355, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x10000811, 8), (unique, 0x10000811, 8) INT_AND (unique, 0x10000809, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000809, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000273, 8) , (const, 0x1, 8), (unique, 0x10000273, 8) INT_ADD (unique, 0x10000152, 8) , (const, 0xf, 8), (unique, 0x10000152, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3580, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x1f, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x10000801, 8), (unique, 0x10000801, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000046d, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x218811, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000355, 8) , (unique, 0x1000035d, 8) , (unique, 0x10000365, 8)]
[(unique, 0x100004c5, 8) COPY (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100004cd, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x2187e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000819, 8), (unique, 0x10000819, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000046d, 8) , (unique, 0x10000475, 8) , (unique, 0x1000047d, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000831, 8) , (const, 0x3034305c, 4), (unique, 0x10000831, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000035d, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000841, 8), (unique, 0x10000841, 8) INT_ADD (unique, 0x10000839, 8) , (const, 0x4, 8), (unique, 0x10000839, 8) CAST (register, 0x10, 8)]
[(unique, 0x100003b5, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000475, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) CAST (unique, 0x10000829, 8), (unique, 0x10000829, 8) INT_ADD (unique, 0x10000821, 8) , (const, 0x1, 8), (unique, 0x10000821, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x218811, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000849, 8), (unique, 0x10000849, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x2188a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000851, 8) , (const, 0x3131305c, 4), (unique, 0x10000851, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000861, 8), (unique, 0x10000861, 8) INT_ADD (unique, 0x10000859, 8) , (const, 0x4, 8), (unique, 0x10000859, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x218806, 1)]
[ ---  CBRANCH (ram, 0x218900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000869, 8) , (const, 0x3231305c, 4), (unique, 0x10000869, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000879, 8), (unique, 0x10000879, 8) INT_ADD (unique, 0x10000871, 8) , (const, 0x4, 8), (unique, 0x10000871, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x218806, 1)]
[ ---  CBRANCH (ram, 0x218938, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5c, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000889, 8), (unique, 0x10000889, 8) INT_ADD (unique, 0x10000881, 8) , (const, 0x2, 8), (unique, 0x10000881, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000891, 8) , (const, 0x5c5c, 2), (unique, 0x10000891, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x218806, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000899, 8) , (unique, 0xbb00, 1), (unique, 0x10000899, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) CAST (unique, 0x100008a9, 8), (unique, 0x100008a9, 8) INT_ADD (unique, 0x100008a1, 8) , (const, 0x1, 8), (unique, 0x100008a1, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000365, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100003bd, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000047d, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) CAST (unique, 0x100008b9, 8), (unique, 0x100008b9, 8) INT_ADD (unique, 0x100008b1, 8) , (const, 0x1, 8), (unique, 0x100008b1, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x21882e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008c1, 8), (unique, 0x100008c1, 8) CAST (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008c9, 8) , (register, 0x0, 8), (unique, 0x100008c9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (stack, 0xffffffffffffffb4, 4), (register, 0x20, 8) MULTIEQUAL (unique, 0x100003b5, 8) , (unique, 0x100003bd, 8) , (register, 0x20, 8) , (register, 0x20, 8), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d1, 8) , (register, 0x0, 8), (unique, 0x100008d1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (stack, 0xffffffffffffffb0, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3ac, 4), (register, 0x20, 8) MULTIEQUAL (unique, 0x100003b5, 8) , (unique, 0x100003bd, 8) , (register, 0x20, 8) , (register, 0x20, 8), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d9, 8) , (const, 0x21884e, 8), (unique, 0x100008d9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100003b5, 8) , (unique, 0x100003bd, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3c0, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3bf, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3b3, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3ac, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3c0, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3bf, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3b3, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3ac, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3c0, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3bf, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3b3, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3ac, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3c0, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3bf, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3b3, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3ac, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3bf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ac, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x218870, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x164dc0, 8) , (register, 0x38, 8) , (unique, 0x100001d3, 8) , (unique, 0x1000034d, 8) , (register, 0xa0, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x100001d3, 8) COPY (const, 0x2b587e, 8), (unique, 0x1000034d, 8) COPY (stack, 0xffffffffffffffa8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100004c5, 8) , (unique, 0x100004c5, 8) , (register, 0x80, 8) , (register, 0x80, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100004cd, 8) , (unique, 0x100004cd, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e1, 8) , (const, 0x21885c, 8), (unique, 0x100008e1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d2, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3d2, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3d1, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3d2, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3d1, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3d2, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3d1, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3d2, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3d1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d1, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x17e7e0, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x218875, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x2189b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008e9, 8), (unique, 0x100008e9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008f1, 8) , (unique, 0x100001cb, 8), (unique, 0x100008f1, 8) CAST (register, 0x20, 8), (unique, 0x100001cb, 8) PTRSUB (const, 0x0, 8) , (const, 0x2189bd, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x404, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x404, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x404, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x403, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x404, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x403, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x404, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x403, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
