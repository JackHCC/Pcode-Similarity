[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x33, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x33, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x33, 4)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x33, 4)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x33, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x33, 4), (stack, 0xffffffffffffffb4, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x33, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x235c60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x245ec0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1cc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cc, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x1cc, 4)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x1cc, 4)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x1cc, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1cc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000216, 8) , (const, 0xffffffff, 4), (unique, 0x10000216, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100001d2, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x235bf1, 1)]
[ ---  CBRANCH (ram, 0x235a88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef368, 4) , (const, 0x0, 4)]
[(ram, 0x4ef368, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef368, 4) , (const, 0x0, 4)]
[(ram, 0x4ef368, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x235aab, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1af, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x1af, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1af, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x1af, 4)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x1af, 4)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x1af, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1af, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1af, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1af, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1af, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100001ab, 8), (unique, 0x100001ab, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef368, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef368, 4) MULTIEQUAL (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4)]
[(ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x235c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec938, 8) , (const, 0x0, 8), (ram, 0x4ec938, 8) MULTIEQUAL (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x196, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x196, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x196, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x196, 4)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x196, 4), (ram, 0x4ef360, 8) COPY (const, 0x400, 8)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x196, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x196, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x196, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x196, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x196, 4)]
[ ---  CBRANCH (ram, 0x235b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x92, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x92, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x92, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x92, 4), (ram, 0x4ec938, 8) MULTIEQUAL (ram, 0x4ec938, 8) , (register, 0x0, 8)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x92, 4), (ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x92, 4), (ram, 0x4ef368, 4) MULTIEQUAL (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x92, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x92, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x92, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x92, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x235ba6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24ab70, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (unique, 0x1000018b, 8) , (unique, 0x10000183, 8) , (unique, 0x1000019b, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (register, 0x30, 4) , (unique, 0x3800, 8), (unique, 0x1000019b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef360, 8), (unique, 0x1000018b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef340, 8), (unique, 0x10000183, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ec938, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(unique, 0x100001ea, 8) COPY (ram, 0x4ec938, 8)]
[ ---  CBRANCH (ram, 0x235b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec938, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xc8, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0xc8, 4), (ram, 0x4ec938, 8) COPY (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) MULTIEQUAL (unique, 0x100001ea, 8) , (unique, 0x100001f2, 8)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0xc8, 4), (ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0xc8, 4), (ram, 0x4ef368, 4) MULTIEQUAL (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xc8, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x235c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x235c80, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x10000193, 8) , (ram, 0x4ec938, 8) , (ram, 0x4ef360, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x10000193, 8) CAST (unique, 0x10000226, 8), (unique, 0x10000226, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef340, 8), (ram, 0x4ec938, 8) COPY (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) MULTIEQUAL (unique, 0x100001ea, 8) , (unique, 0x100001f2, 8), (ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[ ---  CBRANCH (ram, 0x235c20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x235ba6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec938, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xef, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xef, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xef, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0xef, 4)]
[(ram, 0x4ef360, 8) INDIRECT (unique, 0x10000171, 8) , (const, 0xef, 4), (unique, 0x10000171, 8) INT_MULT (ram, 0x4ef360, 8) , (const, 0x2, 8)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0xef, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xef, 4)]
[(unique, 0x100001f2, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000022e, 8), (unique, 0x1000022e, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec938, 8) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) INT_MULT (ram, 0x4ef360, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x235b18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000022e, 8), (unique, 0x1000022e, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec938, 8) , (unique, 0x10000171, 8), (unique, 0x10000171, 8) INT_MULT (ram, 0x4ef360, 8) , (const, 0x2, 8)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xff, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4ec938, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x104, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x104, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xff, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x104, 4), (ram, 0x4ec938, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x104, 4), (ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0xff, 4)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x104, 4), (ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0xff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x104, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000236, 8) , (const, 0xc, 4), (unique, 0x10000236, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xff, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef368, 4) MULTIEQUAL (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4)]
[(ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4ec938, 8) MULTIEQUAL (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8) , (register, 0x0, 8) , (ram, 0x4ec938, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4ef368, 4) MULTIEQUAL (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4)]
[(ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4ec938, 8) MULTIEQUAL (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x235bba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000206, 4) COPY (unique, 0x100001c3, 4), (unique, 0x100001c3, 4) INT_ADD (ram, 0x4ef368, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x235bdc, 1) , (unique, 0x100001c7, 1), (unique, 0x100001c7, 1) INT_NOTEQUAL (unique, 0x100001c3, 4) , (const, 0x0, 4), (unique, 0x100001c3, 4) INT_ADD (ram, 0x4ef368, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x172, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x172, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x172, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x172, 4)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x172, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x172, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100001a3, 8), (unique, 0x100001a3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef368, 8)]
[(unique, 0x10000202, 4) COPY (ram, 0x4ef368, 4), (ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x172, 4), (ram, 0x4ef368, 4) INT_ADD (ram, 0x4ef368, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x121, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x121, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x121, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x121, 4), (ram, 0x4ec938, 8) MULTIEQUAL (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x121, 4), (ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x121, 4), (ram, 0x4ef368, 4) COPY (unique, 0x1000020a, 4), (unique, 0x1000020a, 4) MULTIEQUAL (unique, 0x10000202, 4) , (unique, 0x10000206, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x121, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x121, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[(unique, 0x100001da, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x121, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x235c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x121, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x164, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x164, 4)]
[(ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x164, 4)]
[(ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x164, 4)]
[(ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x164, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x164, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023e, 8) , (stack, 0xffffffffffffffb4, 4), (unique, 0x1000023e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x235bec, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef368, 4) MULTIEQUAL (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4) , (ram, 0x4ef368, 4)]
[(ram, 0x4ef360, 8) MULTIEQUAL (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8) , (ram, 0x4ef360, 8)]
[(ram, 0x4ec938, 8) MULTIEQUAL (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8) , (ram, 0x4ec938, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100001d2, 8) , (unique, 0x100001da, 8) , (unique, 0x100001da, 8)]
[ ---  CBRANCH (ram, 0x235c75, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000246, 8), (unique, 0x10000246, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x15e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x15e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x15e, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15e, 4)]
[(ram, 0x4ec938, 8) COPY (ram, 0x4ec938, 8), (ram, 0x4ec938, 8) INDIRECT (ram, 0x4ec938, 8) , (const, 0x15e, 4)]
[(ram, 0x4ef360, 8) COPY (ram, 0x4ef360, 8), (ram, 0x4ef360, 8) INDIRECT (ram, 0x4ef360, 8) , (const, 0x15e, 4)]
[(ram, 0x4ef368, 4) COPY (ram, 0x4ef368, 4), (ram, 0x4ef368, 4) INDIRECT (ram, 0x4ef368, 4) , (const, 0x15e, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec938, 8) COPY (ram, 0x4ec938, 8)]
[(ram, 0x4ef360, 8) COPY (ram, 0x4ef360, 8)]
[(ram, 0x4ef368, 4) COPY (ram, 0x4ef368, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
