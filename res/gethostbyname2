[(stack, 0xffffffffffffffcc, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2195d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7288, 4) , (const, 0x0, 4)]
[(ram, 0x4c7288, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7288, 4) , (const, 0x0, 4)]
[(ram, 0x4c7288, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2195f6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x174, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x174, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x174, 4)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x174, 4)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0x174, 4)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x174, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x174, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x174, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x174, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000166, 8), (unique, 0x10000166, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7288, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7288, 4) MULTIEQUAL (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4)]
[(ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x219760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c47f8, 8) , (const, 0x0, 8), (ram, 0x4c47f8, 8) MULTIEQUAL (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15b, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x15b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x15b, 4)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x15b, 4)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0x15b, 4), (ram, 0x4c7280, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x15b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x15b, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x15b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x15b, 4)]
[ ---  CBRANCH (ram, 0x2196e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x74, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x74, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x74, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x74, 4), (ram, 0x4c47f8, 8) MULTIEQUAL (ram, 0x4c47f8, 8) , (register, 0x0, 8)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0x74, 4), (ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x74, 4), (ram, 0x4c7288, 4) MULTIEQUAL (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x74, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x74, 4), (stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x74, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x2196f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22a250, 8) , (register, 0x38, 8) , (unique, 0x1000014e, 8) , (unique, 0x1000013e, 8) , (unique, 0x10000156, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (register, 0x30, 4) , (unique, 0x3800, 8), (unique, 0x10000156, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7280, 8), (unique, 0x1000014e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7260, 8), (unique, 0x1000013e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c47f8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffcc, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(unique, 0x1000018c, 8) COPY (ram, 0x4c47f8, 8)]
[ ---  CBRANCH (ram, 0x21966a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c47f8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x10d, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x10d, 4), (ram, 0x4c47f8, 8) COPY (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) MULTIEQUAL (unique, 0x1000018c, 8) , (unique, 0x10000194, 8)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0x10d, 4), (ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x10d, 4), (ram, 0x4c7288, 4) MULTIEQUAL (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10d, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x10d, 4), (stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10d, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x219750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x219790, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (unique, 0x10000146, 8) , (ram, 0x4c47f8, 8) , (ram, 0x4c7280, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x10000146, 8) CAST (unique, 0x100001b8, 8), (unique, 0x100001b8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7260, 8), (ram, 0x4c47f8, 8) COPY (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) MULTIEQUAL (unique, 0x1000018c, 8) , (unique, 0x10000194, 8), (ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[ ---  CBRANCH (ram, 0x219750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffcc, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2196f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c47f8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x134, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x134, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x134, 4)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x134, 4)]
[(ram, 0x4c7280, 8) INDIRECT (unique, 0x1000012e, 8) , (const, 0x134, 4), (unique, 0x1000012e, 8) INT_MULT (ram, 0x4c7280, 8) , (const, 0x2, 8)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x134, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x134, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x134, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x134, 4)]
[(unique, 0x10000194, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c47f8, 8) , (unique, 0x1000012e, 8), (unique, 0x1000012e, 8) INT_MULT (ram, 0x4c7280, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x219660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c47f8, 8) , (unique, 0x1000012e, 8), (unique, 0x1000012e, 8) INT_MULT (ram, 0x4c7280, 8) , (const, 0x2, 8)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0x143, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (ram, 0x4c47f8, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x148, 4), (ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x143, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x148, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x143, 4)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0x148, 4), (ram, 0x4c47f8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0x148, 4), (ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0x143, 4)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x148, 4), (ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0x143, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x148, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x143, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c8, 8) , (const, 0xc, 4), (unique, 0x100001c8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x143, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7288, 4) MULTIEQUAL (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4)]
[(ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c47f8, 8) MULTIEQUAL (ram, 0x4c47f8, 8) , (register, 0x0, 8) , (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c7288, 4) MULTIEQUAL (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4)]
[(ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c47f8, 8) MULTIEQUAL (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21970c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100001a8, 4) COPY (unique, 0x1000017e, 4), (unique, 0x1000017e, 4) INT_ADD (ram, 0x4c7288, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21972e, 1) , (unique, 0x10000182, 1), (unique, 0x10000182, 1) INT_NOTEQUAL (unique, 0x1000017e, 4) , (const, 0x0, 4), (unique, 0x1000017e, 4) INT_ADD (ram, 0x4c7288, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe6, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xe6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe6, 4)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0xe6, 4)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0xe6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffcc, 4) INDIRECT (stack, 0xffffffffffffffcc, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe6, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7288, 8)]
[(unique, 0x100001a4, 4) COPY (ram, 0x4c7288, 4), (ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0xe6, 4), (ram, 0x4c7288, 4) INT_ADD (ram, 0x4c7288, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c47f8, 8) MULTIEQUAL (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7288, 4) COPY (unique, 0x100001ac, 4), (unique, 0x100001ac, 4) MULTIEQUAL (unique, 0x100001a4, 4) , (unique, 0x100001a8, 4)]
[ ---  CBRANCH (ram, 0x219740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffcc, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffcc, 4) MULTIEQUAL (stack, 0xffffffffffffffcc, 4) , (stack, 0xffffffffffffffcc, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xc2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc2, 4)]
[(ram, 0x4c47f8, 8) INDIRECT (ram, 0x4c47f8, 8) , (const, 0xc2, 4)]
[(ram, 0x4c7280, 8) INDIRECT (ram, 0x4c7280, 8) , (const, 0xc2, 4)]
[(ram, 0x4c7288, 4) INDIRECT (ram, 0x4c7288, 4) , (const, 0xc2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d0, 8) , (stack, 0xffffffffffffffcc, 4), (unique, 0x100001d0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e68, 8) COPY (ram, 0x4c2e68, 8), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47f8, 8) COPY (ram, 0x4c47f8, 8), (ram, 0x4c47f8, 8) MULTIEQUAL (ram, 0x4c47f8, 8) , (ram, 0x4c47f8, 8)]
[(ram, 0x4c7280, 8) COPY (ram, 0x4c7280, 8), (ram, 0x4c7280, 8) MULTIEQUAL (ram, 0x4c7280, 8) , (ram, 0x4c7280, 8)]
[(ram, 0x4c7288, 4) COPY (ram, 0x4c7288, 4), (ram, 0x4c7288, 4) MULTIEQUAL (ram, 0x4c7288, 4) , (ram, 0x4c7288, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffd0, 8)]
