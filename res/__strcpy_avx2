[(register, 0x0, 8) COPY (register, 0x38, 8)]
[(register, 0x1200, 32) INT_ZEXT (unique, 0xc8a80, 16), (unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (register, 0x1200, 16) SUBPIECE (register, 0x1200, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x44715b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 4) , (const, 0x41, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447196, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32)]
[ ---  CBRANCH (ram, 0x4471e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)]
[ ---  BRANCH (ram, 0x446fb0, 1)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447196, 1)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x447193, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 8) INT_OR (unique, 0x10000004, 8) , (unique, 0x1000000c, 8), (unique, 0x1000000c, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x10000004, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff00000000, 8), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x1f, 4), (register, 0x30, 8) CAST (unique, 0x100003ed, 8), (unique, 0x100003ed, 8) INT_AND (unique, 0x100003e5, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100003e5, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4471f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x30, 8) CAST (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) PTRADD (unique, 0x100001dd, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001dd, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x20, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x447199, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) PTRADD (unique, 0x100000ed, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100000ed, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000041d, 8), (unique, 0x1000041d, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (register, 0x38, 8) CAST (unique, 0x10000415, 8), (unique, 0x10000415, 8) INT_SUB (unique, 0x1000040d, 8) , (register, 0x8, 8), (unique, 0x1000040d, 8) CAST (register, 0x38, 8), (register, 0x30, 8) INT_AND (unique, 0x10000405, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000405, 8) CAST (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x447190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000425, 8), (unique, 0x10000425, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8), (register, 0x30, 8) INT_AND (unique, 0x10000405, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000405, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x60, 8)]
[ ---  CBRANCH (ram, 0x447190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000042d, 8), (unique, 0x1000042d, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x80, 8)]
[ ---  CBRANCH (ram, 0x447190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1280, 32), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000435, 8), (unique, 0x10000435, 8) INT_ADD (register, 0x30, 8) , (const, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1280, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x447190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000043d, 8), (unique, 0x1000043d, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x447190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000445, 8), (unique, 0x10000445, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0xe0, 8)]
[ ---  CBRANCH (ram, 0x447190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000044d, 8), (unique, 0x1000044d, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x20, 8)]
[(register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (register, 0x1220, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1260, 32) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x12a0, 32), (register, 0x12e0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000455, 8), (unique, 0x10000455, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x3a00, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8)]
[(unique, 0x100003c5, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000455, 8), (unique, 0x10000455, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x3a00, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8)]
[(unique, 0x100003d5, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x1000046d, 8), (unique, 0x1000046d, 8) INT_SUB (unique, 0x10000465, 8) , (register, 0x10, 8), (unique, 0x10000465, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SUB (register, 0x30, 8) , (unique, 0x1000045d, 8), (unique, 0x1000045d, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000455, 8), (unique, 0x10000455, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x3a00, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8)]
[(unique, 0x10000051, 8) MULTIEQUAL (unique, 0x100003c5, 8) , (unique, 0x100003cd, 8)]
[(unique, 0x10000059, 8) MULTIEQUAL (unique, 0x100003d5, 8) , (unique, 0x100003dd, 8)]
[(unique, 0x10000061, 32) MULTIEQUAL (register, 0x1280, 32) , (register, 0x1280, 32)]
[(unique, 0x10000081, 32) MULTIEQUAL (register, 0x12a0, 32) , (register, 0x12a0, 32)]
[(unique, 0x100000a1, 32) MULTIEQUAL (register, 0x12c0, 32) , (register, 0x12c0, 32)]
[(unique, 0x100000c1, 32) MULTIEQUAL (register, 0x12e0, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x447108, 1) , (unique, 0x100000e1, 1), (unique, 0x100000e1, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000059, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000061, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000081, 32), (unique, 0x3100, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100000a1, 32), (unique, 0x3100, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100000c1, 32), (unique, 0x3100, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (register, 0x1220, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1260, 32) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32), (register, 0x12e0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x7, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x6, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x5, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(unique, 0x100003cd, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(unique, 0x100003dd, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x447200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x10000061, 32)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  BRANCH (ram, 0x447199, 1)]
[ ---  CBRANCH (ram, 0x447210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x10000081, 32)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000059, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000061, 32)]
[(register, 0x30, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447199, 1)]
[ ---  CBRANCH (ram, 0x447230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x100000a1, 32)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000059, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000061, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000081, 32), (unique, 0x3100, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(register, 0x30, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447199, 1)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x100000c1, 32)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x8, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000059, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000061, 32)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x10000081, 32), (unique, 0x3100, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x100000a1, 32), (unique, 0x3100, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(register, 0x30, 8) PTRADD (unique, 0x10000051, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x10000059, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x447199, 1)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x38, 8) CAST (unique, 0x10000475, 8), (unique, 0x10000475, 8) PTRADD (unique, 0x100001b5, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001b5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000485, 8), (unique, 0x10000485, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x30, 8) INT_AND (unique, 0x1000047d, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x1000047d, 8) CAST (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x1a680, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1a900, 1), (unique, 0x1a900, 1) INT_EQUAL (unique, 0x1a880, 4) , (const, 0x0, 4), (unique, 0x1a880, 4) INT_AND (unique, 0x1a800, 4) , (const, 0x1, 4), (unique, 0x1a800, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(unique, 0x1a680, 4) INT_ADD (unique, 0x1a680, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x1a680, 4), (unique, 0x1a680, 4) MULTIEQUAL (unique, 0x1a680, 4) , (unique, 0x1a680, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x10000059, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0x10000051, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4472d0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 4) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5380, 32), (unique, 0x5380, 32) CALLOTHER (const, 0x14b, 4) , (register, 0x1260, 32), (unique, 0x3a00, 8) CAST (unique, 0x10000495, 8), (unique, 0x10000495, 8) PTRADD (unique, 0x100003b5, 8) , (unique, 0x100003a5, 8) , (const, 0x1, 8), (unique, 0x100003b5, 8) PTRSUB (unique, 0x100003ad, 8) , (const, 0x0, 8), (unique, 0x100003ad, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100003a5, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000048d, 8), (unique, 0x1000048d, 8) PTRADD (unique, 0x1000038d, 8) , (unique, 0x1000037d, 8) , (const, 0x1, 8), (unique, 0x1000038d, 8) PTRSUB (unique, 0x10000385, 8) , (const, 0x0, 8), (unique, 0x10000385, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x1000037d, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4472b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xf, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000345, 8) , (unique, 0x5300, 16), (unique, 0x10000345, 8) CAST (unique, 0x100004ad, 8), (unique, 0x100004ad, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xbb300, 16), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x10000315, 8), (unique, 0x10000315, 8) CAST (unique, 0x1000049d, 8), (unique, 0x1000049d, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x5300, 16), (unique, 0x5300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0xbb300, 16), (unique, 0x3a00, 8) CAST (unique, 0x100004b5, 8), (unique, 0x100004b5, 8) PTRADD (unique, 0x10000365, 8) , (unique, 0x10000355, 8) , (const, 0x1, 8), (unique, 0x10000365, 8) PTRSUB (unique, 0x1000035d, 8) , (const, 0x0, 8), (unique, 0x1000035d, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000355, 8) INT_ADD (register, 0x10, 8) , (const, 0x11, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100004a5, 8), (unique, 0x100004a5, 8) PTRADD (unique, 0x10000335, 8) , (unique, 0x10000325, 8) , (const, 0x1, 8), (unique, 0x10000335, 8) PTRSUB (unique, 0x1000032d, 8) , (const, 0x0, 8), (unique, 0x1000032d, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000325, 8) INT_ADD (register, 0x10, 8) , (const, 0x11, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447290, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004cd, 8) , (unique, 0xbd80, 8), (unique, 0x100004cd, 8) CAST (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004bd, 8), (unique, 0x100004bd, 8) CAST (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d5, 8) , (unique, 0xbd80, 8), (unique, 0x100004d5, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000305, 8) , (unique, 0x100002f5, 8) , (const, 0x1, 8), (unique, 0x10000305, 8) PTRSUB (unique, 0x100002fd, 8) , (const, 0x0, 8), (unique, 0x100002fd, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100002f5, 8) INT_ADD (register, 0x10, 8) , (const, 0x19, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004c5, 8), (unique, 0x100004c5, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002d5, 8) , (unique, 0x100002c5, 8) , (const, 0x1, 8), (unique, 0x100002d5, 8) PTRSUB (unique, 0x100002cd, 8) , (const, 0x0, 8), (unique, 0x100002cd, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x100002c5, 8) INT_ADD (register, 0x10, 8) , (const, 0x19, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x447280, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x447270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004e5, 8) , (unique, 0xbc80, 4), (unique, 0x100004e5, 8) CAST (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004dd, 8), (unique, 0x100004dd, 8) CAST (unique, 0x10000245, 8), (unique, 0x10000245, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x447260, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x447250, 1) , (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c5, 8) , (const, 0x0, 1), (unique, 0x100001c5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004f5, 8) , (unique, 0xbc00, 2), (unique, 0x100004f5, 8) CAST (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100004ed, 8), (unique, 0x100004ed, 8) CAST (unique, 0x10000215, 8), (unique, 0x10000215, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000505, 8) , (unique, 0xbc00, 2), (unique, 0x10000505, 8) CAST (unique, 0x1000022d, 8), (unique, 0x1000022d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100004fd, 8), (unique, 0x100004fd, 8) CAST (unique, 0x10000225, 8), (unique, 0x10000225, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (unique, 0x10000235, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10000235, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000515, 8) , (unique, 0xbc80, 4), (unique, 0x10000515, 8) CAST (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000050d, 8), (unique, 0x1000050d, 8) CAST (unique, 0x10000255, 8), (unique, 0x10000255, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000525, 8) , (unique, 0xbc80, 4), (unique, 0x10000525, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100002a5, 8) , (unique, 0x10000295, 8) , (const, 0x1, 8), (unique, 0x100002a5, 8) PTRSUB (unique, 0x1000029d, 8) , (const, 0x0, 8), (unique, 0x1000029d, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x10000295, 8) INT_ADD (register, 0x10, 8) , (const, 0x1d, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000051d, 8), (unique, 0x1000051d, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000027d, 8) , (unique, 0x1000026d, 8) , (const, 0x1, 8), (unique, 0x1000027d, 8) PTRSUB (unique, 0x10000275, 8) , (const, 0x0, 8), (unique, 0x10000275, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (unique, 0x1000026d, 8) INT_ADD (register, 0x10, 8) , (const, 0x1d, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
