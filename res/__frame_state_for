[(register, 0x88, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd78, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(unique, 0x100000a3, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd78, 8)]
[(register, 0x8, 8) COPY (const, 0x1e, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xfffffffffffffe48, 8) MULTIEQUAL (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000a3, 8) , (unique, 0x100000ab, 8)]
[(stack, 0xffffffffffffffd0, 2) SUBPIECE (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff98, 2) SUBPIECE (stack, 0xffffffffffffff98, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  CBRANCH (ram, 0x494c02, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (register, 0x88, 8) , (const, 0x3f, 4)]
[(stack, 0xfffffffffffffe38, 8) INDIRECT (stack, 0xfffffffffffffe38, 8) , (const, 0x3f, 4), (stack, 0xfffffffffffffe38, 8) COPY (const, 0x4000000000000000, 8)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffff98, 2) INDIRECT (stack, 0xffffffffffffff98, 2) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffd0, 2) INDIRECT (stack, 0xffffffffffffffd0, 2) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x494ce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4932c0, 8) , (register, 0x20, 8) , (unique, 0x3c80, 8)]
[ ---  CBRANCH (ram, 0x494ce0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x494c5f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3e80, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0x3e80, 8) CAST (unique, 0x100000bb, 8), (unique, 0x100000bb, 8) INT_ADD (unique, 0x3d00, 8) , (register, 0x0, 8), (unique, 0x3d00, 8) INT_ADD (register, 0x30, 8) , (const, 0xb4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000b3, 8), (unique, 0x100000b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3c80, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x494c73, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x1, 1), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000b3, 8), (unique, 0x100000b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3c80, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x494c48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x494c89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x100000cb, 8), (unique, 0x100000cb, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x494c5f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x3100, 8) CAST (unique, 0x100000d3, 8), (unique, 0x100000d3, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffff98, 2), (unique, 0x3200, 8) CAST (unique, 0x100000db, 8), (unique, 0x100000db, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffffd0, 2), (unique, 0x3200, 8) CAST (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) INT_ADD (register, 0x30, 8) , (const, 0xb2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xfffffffffffffe48, 8), (unique, 0x3100, 8) CAST (unique, 0x100000eb, 8), (unique, 0x100000eb, 8) INT_ADD (register, 0x30, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffe0, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f3, 8), (unique, 0x100000f3, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x33, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000ab, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x494bff, 1)]
