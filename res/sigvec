[(register, 0x20, 8) CAST (unique, 0x10000103, 8), (unique, 0x10000103, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[ ---  CBRANCH (ram, 0x135d88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x135d21, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000007b, 8), (unique, 0x1000007b, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x8, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x1000010b, 8), (unique, 0x1000010b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x100000c3, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000c3, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x18000000, 4), (register, 0x0, 4) INT_AND (unique, 0x1000001d, 4) , (const, 0xf8000000, 4), (unique, 0x1000001d, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0xc, 8)]
[(unique, 0x100000e3, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x8000000, 4), (register, 0x10, 4) INT_2COMP (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0xc, 8)]
[ ---  CBRANCH (ram, 0x135cf6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000029, 4) , (const, 0x0, 4), (unique, 0x10000029, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0xc, 8)]
[(unique, 0x100000e7, 4) COPY (register, 0x0, 4)]
[(register, 0x0, 4) INT_OR (unique, 0x1000002d, 4) , (const, 0x80000000, 4), (unique, 0x1000002d, 4) MULTIEQUAL (unique, 0x100000e3, 4) , (unique, 0x100000e7, 4)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(unique, 0x100000eb, 4) COPY (unique, 0x1000002d, 4), (unique, 0x1000002d, 4) MULTIEQUAL (unique, 0x100000e3, 4) , (unique, 0x100000e7, 4)]
[ ---  CBRANCH (ram, 0x135d08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x100000ef, 4) COPY (register, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100000eb, 4) , (unique, 0x100000ef, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x10000113, 4), (unique, 0x10000113, 4) CAST (unique, 0xbc80, 4)]
[(unique, 0x100000d3, 8) COPY (unique, 0x10000117, 8), (unique, 0x10000117, 8) CAST (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (register, 0x10, 4) , (stack, 0xffffffffffffffe0, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000d3, 8) , (unique, 0x100000db, 8)]
[ ---  CBRANCH (ram, 0x135d21, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xfffffffffffffeb8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0xc3, 4)]
[(stack, 0xfffffffffffffec0, 4) INDIRECT (stack, 0xfffffffffffffec0, 4) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xc3, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xc3, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xc3, 4), (stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)]
[ ---  CBRANCH (ram, 0x135d90, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x20, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3c80, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x135d7a, 1)]
[ ---  CBRANCH (ram, 0x135d78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x4, 4), (register, 0x10, 4) INT_SRIGHT (unique, 0x1000011f, 4) , (const, 0x1f, 4), (unique, 0x1000011f, 4) CAST (stack, 0xffffffffffffff40, 4)]
[(unique, 0x100000fb, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x10, 4) , (const, 0x4, 4), (register, 0x10, 4) INT_SRIGHT (unique, 0x1000011f, 4) , (const, 0x1f, 4), (unique, 0x1000011f, 4) CAST (stack, 0xffffffffffffff40, 4)]
[ ---  CBRANCH (ram, 0x135d58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0x8000000, 4)]
[(unique, 0x100000ff, 4) COPY (register, 0x10, 4)]
[(register, 0x10, 4) INT_OR (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100000fb, 4) , (unique, 0x100000ff, 4)]
[(unique, 0x100000f3, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100000fb, 4) , (unique, 0x100000ff, 4)]
[ ---  CBRANCH (ram, 0x135d66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0x10000000, 4)]
[(unique, 0x100000f7, 4) COPY (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x10, 8) , (const, 0xc, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0x100000f3, 4) , (unique, 0x100000f7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ab, 8) , (stack, 0xfffffffffffffeb8, 8), (unique, 0x100000ab, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xfffffffffffffec0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xbc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000db, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x135d1e, 1)]
