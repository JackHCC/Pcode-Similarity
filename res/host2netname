[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x258ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29b, 4)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x29b, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x29b, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x29b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x29b, 4)]
[ ---  CALL (ram, 0x216e30, 8) , (unique, 0x100002c0, 8) , (const, 0x40, 8), (unique, 0x100002c0, 8) CAST (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x258a29, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3b, 4)]
[ ---  CALL (ram, 0x1212a0, 8) , (unique, 0x100002c8, 8) , (register, 0x30, 8) , (const, 0x40, 8), (unique, 0x100002c8, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffff78, 1) COPY (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x43, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x43, 4), (stack, 0xffffffffffffff78, 1) MULTIEQUAL (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x43, 4), (stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x43, 4), (stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x43, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x100002d0, 8) , (const, 0x2e, 4), (unique, 0x100002d0, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x258b70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x258c00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x295, 4)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x295, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x295, 4), (stack, 0xffffffffffffff88, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x295, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x295, 4)]
[ ---  CALL (ram, 0x216f20, 8) , (unique, 0x3800, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[ ---  BRANCH (ram, 0x258a5f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x287, 4)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x287, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x287, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x287, 4)]
[ ---  CALL (ram, 0x1212a0, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (const, 0x40, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc8, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x258a5f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x56, 4)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x56, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x56, 4)]
[ ---  CALL (ram, 0x1212a0, 8) , (unique, 0x3800, 8) , (register, 0x10, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc8, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(stack, 0xffffffffffffff78, 1) MULTIEQUAL (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000230, 8) COPY (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(unique, 0x10000238, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) COPY (unique, 0x10000240, 8), (unique, 0x10000240, 8) MULTIEQUAL (unique, 0x10000230, 8) , (unique, 0x10000238, 8)]
[ ---  CBRANCH (ram, 0x258a62, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x80808080, 4), (register, 0x10, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000240, 8), (unique, 0x10000240, 8) MULTIEQUAL (unique, 0x10000230, 8) , (unique, 0x10000238, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x10, 4)]
[(unique, 0x100002a0, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x258a88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x10, 4) , (const, 0x8080, 4)]
[(unique, 0x100002a4, 4) COPY (register, 0x8, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100002a0, 4) , (unique, 0x100002a4, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (unique, 0x100002e0, 8) , (const, 0x6, 8), (unique, 0x100002e0, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000220, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x258a92, 1) , (register, 0x206, 1)]
[(unique, 0x10000228, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x258b42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100002f8, 8) , (unique, 0x10000182, 8), (unique, 0x100002f8, 8) CAST (register, 0x0, 8), (unique, 0x10000182, 8) INT_SUB (unique, 0x1000017a, 8) , (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (register, 0xa0, 8), (unique, 0x1000017a, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x10, 1) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000220, 8) , (unique, 0x10000228, 8)]
[ ---  CBRANCH (ram, 0x258bb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000019a, 8) , (unique, 0x10000192, 8) , (const, 0x1, 8), (unique, 0x1000019a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff84, 8), (unique, 0x10000192, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x271, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x271, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x271, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (unique, 0x100001fa, 8) , (unique, 0x100001f2, 8) , (const, 0x1, 8), (unique, 0x100001fa, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff84, 8), (unique, 0x100001f2, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(unique, 0x10000213, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(unique, 0x10000214, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(unique, 0x10000215, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x10000288, 8) COPY (unique, 0x10000300, 8), (unique, 0x10000300, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x258ab6, 1) , (unique, 0x10000212, 1), (unique, 0x10000212, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(unique, 0x10000290, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000280, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000298, 8), (unique, 0x10000298, 8) MULTIEQUAL (unique, 0x10000280, 8) , (unique, 0x10000288, 8) , (unique, 0x10000290, 8)]
[ ---  CBRANCH (ram, 0x258abe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000298, 8), (unique, 0x10000298, 8) MULTIEQUAL (unique, 0x10000280, 8) , (unique, 0x10000288, 8) , (unique, 0x10000290, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100002a8, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258ae2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100002ac, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100002a8, 4) , (unique, 0x100002ac, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ADD (unique, 0x10000308, 8) , (const, 0x6, 8), (unique, 0x10000308, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000270, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x258aec, 1) , (register, 0x206, 1)]
[(unique, 0x10000278, 8) COPY (unique, 0x3100, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000270, 8) , (unique, 0x10000278, 8)]
[(unique, 0x100001b2, 8) INT_SUB (unique, 0x100000c1, 8) , (unique, 0x12600, 8), (unique, 0x100000c1, 8) INT_2COMP (unique, 0x10000318, 8), (unique, 0x10000318, 8) CAST (register, 0xa0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x10000258, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000260, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) COPY (unique, 0x10000268, 8), (unique, 0x10000268, 8) MULTIEQUAL (unique, 0x10000258, 8) , (unique, 0x10000260, 8)]
[ ---  CBRANCH (ram, 0x258af9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x10000268, 8), (unique, 0x10000268, 8) MULTIEQUAL (unique, 0x10000258, 8) , (unique, 0x10000260, 8)]
[(register, 0x30, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100002b0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258b1d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100002b4, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100002b0, 4) , (unique, 0x100002b4, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_ADD (unique, 0x10000320, 8) , (const, 0x6, 8), (unique, 0x10000320, 8) CAST (register, 0x8, 8)]
[(unique, 0x10000248, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x258b27, 1) , (register, 0x206, 1)]
[(unique, 0x10000250, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x258bd0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (const, 0x100, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000340, 8) , (unique, 0x100001ba, 8), (unique, 0x10000340, 8) CAST (register, 0x10, 8), (unique, 0x100001ba, 8) INT_ADD (unique, 0x10000338, 8) , (unique, 0x100001da, 8), (unique, 0x10000338, 8) CAST (register, 0x8, 8), (unique, 0x100001da, 8) INT_ADD (unique, 0x100001b2, 8) , (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) INT_SUB (unique, 0x100001ca, 8) , (unique, 0x10000330, 8), (unique, 0x10000330, 8) CAST (register, 0x20, 8), (unique, 0x100001ca, 8) INT_SUB (const, 0x1, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000248, 8) , (unique, 0x10000250, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x261, 4)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x261, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (unique, 0x10000213, 1) , (const, 0x261, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (unique, 0x10000214, 1) , (const, 0x261, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x10000215, 8) , (const, 0x261, 4)]
[ ---  CALL (ram, 0x165000, 8) , (register, 0x38, 8) , (unique, 0x1000012a, 8) , (unique, 0x10000122, 8) , (register, 0x20, 8) , (register, 0xa0, 8), (unique, 0x1000012a, 8) COPY (const, 0x2b72ab, 8), (unique, 0x10000122, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b720e, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x258b44, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0x10000215, 8)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (unique, 0x10000214, 1)]
[(stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (unique, 0x10000213, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(stack, 0xffffffffffffff78, 1) MULTIEQUAL (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258c1c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000348, 8), (unique, 0x10000348, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x24d, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x24d, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x24d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x24d, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
