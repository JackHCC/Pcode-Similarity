[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x2370f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x281, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x281, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x281, 4)]
[ ---  CALL (ram, 0x1fcb80, 8) , (unique, 0x10000299, 8) , (const, 0x40, 8), (unique, 0x10000299, 8) CAST (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x236f56, 1)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x2b, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x2b, 4)]
[ ---  CALL (ram, 0x19eaf0, 8) , (register, 0x20, 8) , (register, 0x30, 8) , (const, 0x40, 8)]
[(stack, 0xffffffffffffff78, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x33, 4), (stack, 0xffffffffffffff78, 1) MULTIEQUAL (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x33, 4), (stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x33, 4), (stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(register, 0x0, 8) CAST (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) CALL (ram, 0x189080, 8) , (register, 0x20, 8) , (const, 0x2e, 8)]
[ ---  CBRANCH (ram, 0x2370b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x237108, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x27b, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x27b, 4), (stack, 0xffffffffffffff88, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x27b, 4)]
[ ---  CALL (ram, 0x1fcc40, 8) , (unique, 0x100002a9, 8) , (const, 0x40, 8), (unique, 0x100002a9, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[ ---  BRANCH (ram, 0x236f8c, 1)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x26d, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x26d, 4)]
[ ---  CALL (ram, 0x19eaf0, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (const, 0x40, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc8, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x236f8c, 1)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x46, 4)]
[ ---  CALL (ram, 0x19eaf0, 8) , (unique, 0x3800, 8) , (register, 0x10, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffc8, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(stack, 0xffffffffffffff78, 1) MULTIEQUAL (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1) , (stack, 0xffffffffffffff78, 1)]
[(unique, 0x10000211, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(unique, 0x10000219, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) COPY (unique, 0x10000221, 8), (unique, 0x10000221, 8) MULTIEQUAL (unique, 0x10000211, 8) , (unique, 0x10000219, 8)]
[ ---  CBRANCH (ram, 0x236f8f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x80808080, 4), (register, 0x10, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000221, 8), (unique, 0x10000221, 8) MULTIEQUAL (unique, 0x10000211, 8) , (unique, 0x10000219, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x10, 4)]
[(unique, 0x10000281, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x236fb5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x10, 4) , (const, 0x8080, 4)]
[(unique, 0x10000285, 4) COPY (register, 0x8, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000281, 4) , (unique, 0x10000285, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) INT_ADD (unique, 0x100002b1, 8) , (const, 0x6, 8), (unique, 0x100002b1, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000201, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x236fbf, 1) , (register, 0x206, 1)]
[(unique, 0x10000209, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x2370a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100002c9, 8) , (unique, 0x10000171, 8), (unique, 0x100002c9, 8) CAST (register, 0x0, 8), (unique, 0x10000171, 8) INT_SUB (unique, 0x10000169, 8) , (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) CAST (register, 0xa0, 8), (unique, 0x10000169, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x10, 1) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000201, 8) , (unique, 0x10000209, 8)]
[ ---  CBRANCH (ram, 0x2370e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000189, 8) , (unique, 0x10000181, 8) , (const, 0x1, 8), (unique, 0x10000189, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff84, 8), (unique, 0x10000181, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x259, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x259, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (unique, 0x100001e9, 8) , (unique, 0x100001e1, 8) , (const, 0x1, 8), (unique, 0x100001e9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff84, 8), (unique, 0x100001e1, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[ ---  BRANCH (ram, 0x236fde, 1)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(stack, 0xffffffffffffff88, 1) MULTIEQUAL (stack, 0xffffffffffffff88, 1) , (stack, 0xffffffffffffff88, 1)]
[(unique, 0x10000269, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x236fe7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(unique, 0x10000271, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000261, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000279, 8), (unique, 0x10000279, 8) MULTIEQUAL (unique, 0x10000261, 8) , (unique, 0x10000269, 8) , (unique, 0x10000271, 8)]
[ ---  CBRANCH (ram, 0x236fea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000279, 8), (unique, 0x10000279, 8) MULTIEQUAL (unique, 0x10000261, 8) , (unique, 0x10000269, 8) , (unique, 0x10000271, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000289, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23700e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000028d, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000289, 4) , (unique, 0x1000028d, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) INT_ADD (unique, 0x100002d1, 8) , (const, 0x6, 8), (unique, 0x100002d1, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000251, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x237018, 1) , (register, 0x206, 1)]
[(unique, 0x10000259, 8) COPY (unique, 0x3100, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000251, 8) , (unique, 0x10000259, 8)]
[(unique, 0x100001a1, 8) INT_SUB (unique, 0x100000b8, 8) , (unique, 0x12600, 8), (unique, 0x100000b8, 8) INT_2COMP (unique, 0x100002e1, 8), (unique, 0x100002e1, 8) CAST (register, 0xa0, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x10000239, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000241, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) COPY (unique, 0x10000249, 8), (unique, 0x10000249, 8) MULTIEQUAL (unique, 0x10000239, 8) , (unique, 0x10000241, 8)]
[ ---  CBRANCH (ram, 0x237025, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x10000249, 8), (unique, 0x10000249, 8) MULTIEQUAL (unique, 0x10000239, 8) , (unique, 0x10000241, 8)]
[(register, 0x30, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000291, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x237049, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x10000295, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000291, 4) , (unique, 0x10000295, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100002f1, 8), (unique, 0x100002f1, 8) INT_ADD (unique, 0x100002e9, 8) , (const, 0x6, 8), (unique, 0x100002e9, 8) CAST (register, 0x8, 8)]
[(unique, 0x10000229, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x237053, 1) , (register, 0x206, 1)]
[(unique, 0x10000231, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x2370a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3a00, 8) , (const, 0x100, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x10000309, 8) , (unique, 0x100001a9, 8), (unique, 0x10000309, 8) CAST (register, 0x10, 8), (unique, 0x100001a9, 8) INT_ADD (unique, 0x10000301, 8) , (unique, 0x100001c9, 8), (unique, 0x10000301, 8) CAST (register, 0x8, 8), (unique, 0x100001c9, 8) INT_ADD (unique, 0x100001a1, 8) , (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_SUB (unique, 0x100001b9, 8) , (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) CAST (register, 0x20, 8), (unique, 0x100001b9, 8) INT_SUB (const, 0x1, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000229, 8) , (unique, 0x10000231, 8)]
[(stack, 0xffffffffffffff78, 1) INDIRECT (stack, 0xffffffffffffff78, 1) , (const, 0x21d, 4)]
[(stack, 0xffffffffffffff88, 1) INDIRECT (stack, 0xffffffffffffff88, 1) , (const, 0x21d, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x21d, 4)]
[ ---  CALL (ram, 0x1558f0, 8) , (register, 0x38, 8) , (unique, 0x10000119, 8) , (unique, 0x10000111, 8) , (register, 0x20, 8) , (register, 0xa0, 8), (unique, 0x10000119, 8) COPY (const, 0x28f520, 8), (unique, 0x10000111, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f483, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
