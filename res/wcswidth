[ ---  CBRANCH (ram, 0x1b5baa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100000a5, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1b5ba8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1b5ba2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (unique, 0x100000b9, 4), (unique, 0x100000b9, 4) CAST (unique, 0xbc80, 4), (register, 0x0, 4) INT_RIGHT (unique, 0xbc80, 4) , (unique, 0x57100, 1), (unique, 0x57100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100000b1, 8), (unique, 0x100000b1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000a9, 8), (unique, 0x100000a9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2dd8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b5ba2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x0, 4) , (const, 0x5, 4)]
[(register, 0x30, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1b5b50, 1)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) INT_ADD (unique, 0x100000bd, 8) , (unique, 0x10000075, 8), (unique, 0x100000bd, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000075, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0xb0, 4) , (unique, 0xbc80, 4), (register, 0xb0, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x57100, 1), (unique, 0x57100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (register, 0x88, 8) INT_ZEXT (unique, 0xbc80, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1b5b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) INT_ADD (unique, 0x100000bd, 8) , (unique, 0x10000075, 8), (unique, 0x100000bd, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000075, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0xb0, 4) , (unique, 0xbc80, 4), (register, 0xb0, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x57100, 1), (unique, 0x57100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (register, 0x88, 8) INT_ZEXT (unique, 0xbc80, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1b5b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xff, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) INT_ADD (unique, 0x100000cd, 8) , (unique, 0x10000085, 8), (unique, 0x100000cd, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000085, 8) INT_ADD (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1b5ba2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x80, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b5ba2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000095, 8) , (const, 0x4, 8), (unique, 0x10000095, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b5b40, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x100000dd, 4) , (register, 0x88, 4), (unique, 0x100000dd, 4) CAST (unique, 0xbc80, 4), (register, 0x88, 4) INT_RIGHT (unique, 0xbc80, 4) , (unique, 0x57100, 1), (unique, 0x57100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b5b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x88, 4) , (const, 0x5, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c2dd8, 8) COPY (ram, 0x4c2dd8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000e1, 4), (unique, 0x100000e1, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100000a5, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
