[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x48ba8b, 1) , (unique, 0x1000004f, 1), (unique, 0x1000004f, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000079, 8), (unique, 0x10000079, 8) INT_ADD (unique, 0x10000071, 8) , (const, 0x18, 8), (unique, 0x10000071, 8) CAST (register, 0x38, 8)]
[(register, 0x8, 8) COPY (const, 0xe, 8)]
[(unique, 0x10000051, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000061, 8) COPY (unique, 0x10000081, 8), (unique, 0x10000081, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x4b5090, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000061, 8) , (unique, 0x10000069, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000051, 8) , (unique, 0x10000059, 8)]
[ ---  CBRANCH (ram, 0x48ba82, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000059, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000069, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x48ba80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x48bab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000033, 1) , (unique, 0x10000034, 1), (unique, 0x10000034, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x10000033, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(ram, 0x4c4fd0, 8) INDIRECT (ram, 0x4c4fd0, 8) , (const, 0x74, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x48ba8b, 1)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x48bac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4fd0, 8) , (const, 0x0, 8), (ram, 0x4c4fd0, 8) INDIRECT (ram, 0x4c4fd0, 8) , (const, 0x51, 4), (ram, 0x4c4fd0, 8) MULTIEQUAL (ram, 0x4c4fd0, 8) , (ram, 0x4c4fd0, 8) , (ram, 0x4c4fd0, 8)]
[(ram, 0x4c4fd0, 8) COPY (ram, 0x4c4fd0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c4fd0, 8) COPY (ram, 0x4c4fd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
