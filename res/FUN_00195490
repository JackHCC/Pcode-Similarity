[ ---  CBRANCH (ram, 0x195570, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x17, 8)]
[(unique, 0x10000170, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1954b7, 1)]
[(unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x1000016f, 1) MULTIEQUAL (unique, 0xc800, 1) , (unique, 0x10000170, 1)]
[ ---  CBRANCH (ram, 0x195630, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x10, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x195630, 1) , (unique, 0x1000016f, 1)]
[ ---  CBRANCH (ram, 0x195630, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) INT_SUB (unique, 0x10000086, 8) , (const, 0x21, 8), (unique, 0x10000086, 8) INT_2COMP (register, 0x30, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2be, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2be, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2be, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000247, 8) , (const, 0xc, 4), (unique, 0x10000247, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x19555a, 1)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x6e, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x6e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6e, 4)]
[ ---  CBRANCH (ram, 0x19555a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024f, 8), (unique, 0x1000024f, 8) CALL (ram, 0x1942d0, 8) , (register, 0x38, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[(unique, 0x1000022f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x10000257, 8) , (register, 0x30, 8), (unique, 0x10000257, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000237, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000277, 8), (unique, 0x10000277, 8) INT_ADD (unique, 0x1000026f, 8) , (register, 0x30, 8), (unique, 0x1000026f, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000267, 8), (unique, 0x10000267, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000025f, 8) , (unique, 0x100001df, 8), (unique, 0x1000025f, 8) CAST (register, 0x0, 8), (unique, 0x100001df, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1955a4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000028f, 8), (unique, 0x1000028f, 8) INT_SUB (unique, 0x1000027f, 8) , (unique, 0x10000287, 8), (unique, 0x10000287, 8) CAST (unique, 0x3100, 8), (unique, 0x1000027f, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000267, 8), (unique, 0x10000267, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000025f, 8) , (unique, 0x100001df, 8), (unique, 0x1000025f, 8) CAST (register, 0x0, 8), (unique, 0x100001df, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x1000023f, 8) COPY (register, 0x0, 8)]
[(register, 0xb8, 8) INT_SUB (register, 0xb8, 8) , (unique, 0x100002af, 8), (unique, 0x100002af, 8) CAST (register, 0x8, 8), (register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x8, 8) CAST (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) INT_SUB (unique, 0x10000297, 8) , (unique, 0x1000029f, 8), (unique, 0x1000029f, 8) CAST (unique, 0x3100, 8), (unique, 0x10000297, 8) CAST (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000237, 8) , (unique, 0x1000023f, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x195650, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000157, 8) , (const, 0x0, 8), (unique, 0x10000157, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb8, 8) INT_OR (register, 0xb8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (unique, 0x100002b7, 8) , (unique, 0xbd80, 8), (unique, 0x100002b7, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2af, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2ad, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2af, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2ad, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2af, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ad, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1955d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0xb8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002c7, 8), (unique, 0x100002c7, 8) INT_ADD (unique, 0x100002bf, 8) , (unique, 0x100001f7, 8), (unique, 0x100002bf, 8) CAST (register, 0xb0, 8), (unique, 0x100001f7, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) CAST (register, 0x8, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x20c, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x209, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1dd, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x20c, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x209, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1dd, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x209, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1dd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20c, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x195609, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x195670, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb8, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x195670, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x100002d7, 8) , (register, 0x30, 8), (unique, 0x100002d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  CBRANCH (ram, 0x1956aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002df, 8), (unique, 0x100002df, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000197, 8) , (unique, 0xbd80, 8) , (register, 0x8, 8) , (unique, 0x1000018f, 8) , (const, 0x1280, 8) , (unique, 0x100001a7, 8) , (unique, 0x10000187, 8) , (unique, 0x1000019f, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x100001a7, 8) COPY (const, 0x2b90d8, 8), (unique, 0x1000019f, 8) COPY (const, 0x2b8c98, 8), (unique, 0x10000197, 8) COPY (const, 0x2b8758, 8), (unique, 0x1000018f, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000187, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x27e, 4)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x290, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x28d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x27e, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x290, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x28d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x27e, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x290, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x19555a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000009e, 8) , (const, 0x0, 8), (unique, 0x1000009e, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000022f, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19555a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_ZEXT (register, 0x206, 1), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100001af, 8), (unique, 0x100001af, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100002ef, 8) , (register, 0x18, 8), (unique, 0x100002ef, 8) CAST (register, 0x30, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x130, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x12c, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x113, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x130, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x12c, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x113, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x130, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x113, 4)]
[ ---  CALL (ram, 0x192c60, 8) , (register, 0x38, 8) , (unique, 0x3400, 8) , (const, 0x1, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100002ef, 8) , (register, 0x18, 8), (unique, 0x100002ef, 8) CAST (register, 0x30, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
