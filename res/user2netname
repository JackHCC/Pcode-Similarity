[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[ ---  CBRANCH (ram, 0x236ef8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffe7, 1) INDIRECT (stack, 0xffffffffffffffe7, 1) , (const, 0x120, 4)]
[(unique, 0x10000118, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x236e54, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fcc40, 8) , (unique, 0x10000130, 8) , (const, 0x100, 8), (unique, 0x10000130, 8) CAST (register, 0x20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CALL (ram, 0x19eaf0, 8) , (register, 0x20, 8) , (register, 0x10, 8) , (const, 0xff, 8)]
[(stack, 0xffffffffffffffe7, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000110, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffe7, 1) MULTIEQUAL (stack, 0xffffffffffffffe7, 1) , (stack, 0xffffffffffffffe7, 1) , (stack, 0xffffffffffffffe7, 1)]
[(unique, 0x10000108, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000120, 8), (unique, 0x10000120, 8) MULTIEQUAL (unique, 0x10000108, 8) , (unique, 0x10000110, 8) , (unique, 0x10000118, 8)]
[ ---  CBRANCH (ram, 0x236e57, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000120, 8), (unique, 0x10000120, 8) MULTIEQUAL (unique, 0x10000108, 8) , (unique, 0x10000110, 8) , (unique, 0x10000118, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000128, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x236e7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000012c, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000128, 4) , (unique, 0x1000012c, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000140, 8), (unique, 0x10000140, 8) INT_ADD (unique, 0x10000138, 8) , (const, 0x6, 8), (unique, 0x10000138, 8) CAST (register, 0x10, 8)]
[(unique, 0x100000f8, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x236e85, 1) , (register, 0x206, 1)]
[(unique, 0x10000100, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x236eb0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xff, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0x10000150, 8) , (unique, 0x100000e4, 8), (unique, 0x10000150, 8) CAST (register, 0x10, 8), (unique, 0x100000e4, 8) INT_ADD (unique, 0x100000dc, 8) , (const, 0xf, 8), (unique, 0x100000dc, 8) INT_SUB (unique, 0x10000068, 8) , (unique, 0x12600, 8), (unique, 0x10000068, 8) INT_2COMP (unique, 0x10000148, 8), (unique, 0x10000148, 8) CAST (register, 0x20, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000f8, 8) , (unique, 0x10000100, 8)]
[ ---  CALL (ram, 0x1558f0, 8) , (register, 0x38, 8) , (unique, 0x1000009c, 8) , (unique, 0x10000094, 8) , (register, 0x30, 4) , (register, 0x20, 8), (unique, 0x1000009c, 8) COPY (const, 0x28f517, 8), (unique, 0x10000094, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f483, 8)]
[(stack, 0xffffffffffffffe7, 1) INDIRECT (stack, 0xffffffffffffffe7, 1) , (const, 0xf3, 4), (stack, 0xffffffffffffffe7, 1) INDIRECT (stack, 0xffffffffffffffe7, 1) , (const, 0xef, 4)]
[ ---  CBRANCH (ram, 0x236e9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x100000ec, 8) , (const, 0x1, 8), (unique, 0x100000ec, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
