[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000126, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000146, 8), (unique, 0x10000146, 8) CALL (ram, 0x1f80d0, 8)]
[ ---  CBRANCH (ram, 0x1fa4e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(unique, 0x1000012e, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000116, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000126, 8) , (unique, 0x1000012e, 8) , (unique, 0x10000136, 8) , (unique, 0x1000013e, 8)]
[ ---  CBRANCH (ram, 0x1fa5ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x2, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000116, 8) , (unique, 0x1000011e, 8)]
[(register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1fa4ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1fa5ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x9, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb0, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) CALL (ram, 0x1f80d0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1fa52c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1fa62b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x1f2ec0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1fa5e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa5e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000136, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1fa5e7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(unique, 0x1000013e, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa5f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xf, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1fa640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) CALL (ram, 0x1212c0, 8) , (const, 0x3c8, 8)]
[(register, 0x80, 4) COPY (const, 0x1, 4)]
[(register, 0x30, 8) COPY (const, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000176, 8), (unique, 0x10000176, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa569, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000017e, 8), (unique, 0x1000017e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x70, 8)]
[(register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8), (register, 0x30, 8) INT_MULT (register, 0x10, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_MULT (register, 0x10, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x80, 4), (unique, 0x3200, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x10, 1), (unique, 0x3a00, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (unique, 0x1000019e, 8) , (unique, 0x100000f5, 8), (unique, 0x1000019e, 8) CAST (register, 0x0, 8), (unique, 0x100000f5, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xba80, 1), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xf3, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) INT_ADD (unique, 0x100001ae, 8) , (const, 0x3a, 8), (unique, 0x100001ae, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001be, 8) , (const, 0xffffffff, 4), (unique, 0x100001be, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000cd, 8) , (const, 0x8, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000186, 8), (unique, 0x10000186, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000186, 8), (unique, 0x10000186, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1fa640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000186, 8), (unique, 0x10000186, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x1f2ec0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1f2ec0, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000011e, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1fa4f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x2, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xf7, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa5ce, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
