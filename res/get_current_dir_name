[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f, 4)]
[(stack, 0xfffffffffffffec8, 8) INDIRECT (stack, 0xfffffffffffffec8, 8) , (const, 0x1f, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x1f, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x1f, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x1f, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1f, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bb, 8), (unique, 0x100000bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x211367, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1426e0, 8) , (unique, 0x100000a3, 8), (unique, 0x100000a3, 8) COPY (const, 0x2b57da, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4)]
[(stack, 0xfffffffffffffec8, 8) INDIRECT (stack, 0xfffffffffffffec8, 8) , (const, 0x30, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x30, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x30, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x30, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x211390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (unique, 0x1000009b, 8) , (register, 0x20, 8), (unique, 0x1000009b, 8) COPY (const, 0x2b57d8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7b, 4)]
[(stack, 0xfffffffffffffec8, 8) INDIRECT (stack, 0xfffffffffffffec8, 8) , (const, 0x7b, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x7b, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x7b, 4)]
[ ---  CBRANCH (ram, 0x211367, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (register, 0x0, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x211367, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xfffffffffffffec8, 8)]
[ ---  CBRANCH (ram, 0x211367, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xfffffffffffffed0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xad, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xad, 4)]
[(register, 0x0, 8) CALL (ram, 0x19d9a0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x211370, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x51, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(register, 0x0, 8) CALL (ram, 0x210b50, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2113d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x72, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
