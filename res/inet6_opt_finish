[ ---  CBRANCH (ram, 0x241080, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 4) , (unique, 0x100000a6, 4), (unique, 0x100000a6, 4) CAST (register, 0x10, 4)]
[(unique, 0x3400, 4) INT_ADD (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_2COMP (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x24102d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3400, 4)]
[ ---  CBRANCH (ram, 0x241080, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x3400, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x241038, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x100000b2, 8), (unique, 0x100000b2, 8) INT_ADD (unique, 0x100000aa, 8) , (register, 0x10, 8), (unique, 0x100000aa, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000ba, 4), (unique, 0x100000ba, 4) COPY (unique, 0x3400, 4)]
[ ---  CBRANCH (ram, 0x24102d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100000be, 8), (unique, 0x100000be, 8) CAST (register, 0x38, 8), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x1, 1), (register, 0x10, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100000be, 8), (unique, 0x100000be, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x10000034, 4) INT_ADD (unique, 0x10000060, 4) , (const, 0x2, 4), (unique, 0x10000060, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) INT_ADD (register, 0x10, 8) , (unique, 0x100000be, 8), (unique, 0x100000be, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x241048, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ce, 8) , (const, 0x0, 8), (unique, 0x100000ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000de, 8) , (const, 0x0, 8), (unique, 0x100000de, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100000d6, 8) , (const, 0x1, 8), (unique, 0x100000d6, 8) CAST (unique, 0x10000072, 8), (unique, 0x10000072, 8) PTRADD (unique, 0x1000008e, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000008e, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffffa, 8)]
[(unique, 0x10000096, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x100000ee, 8), (unique, 0x100000ee, 8) INT_AND (unique, 0x100000e6, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100000e6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) INT_SUB (unique, 0x10000034, 4) , (unique, 0x1000003c, 4), (unique, 0x1000003c, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) CAST (unique, 0x100000ee, 8), (unique, 0x100000ee, 8) INT_AND (unique, 0x100000e6, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100000e6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000096, 8) , (unique, 0x1000009e, 8)]
[ ---  CBRANCH (ram, 0x241072, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000009e, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x24106f, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000f6, 4), (unique, 0x100000f6, 4) COPY (unique, 0x3400, 4)]
[ ---  CBRANCH (ram, 0x241090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000005c, 4) , (const, 0x0, 4), (unique, 0x1000005c, 4) INT_AND (register, 0x0, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000fa, 8) , (const, 0x0, 4), (unique, 0x100000fa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000102, 8) , (const, 0x0, 4), (unique, 0x10000102, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000082, 8) , (const, 0x1, 8), (unique, 0x10000082, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3400, 4)]
[ ---  CBRANCH (ram, 0x24102d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x24102d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000020, 4) , (const, 0x0, 4), (unique, 0x10000020, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010a, 8) , (const, 0x0, 2), (unique, 0x1000010a, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3400, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3400, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3400, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3400, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000112, 4), (unique, 0x10000112, 4) COPY (const, 0xffffffff, 4)]
