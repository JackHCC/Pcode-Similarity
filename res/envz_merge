[ ---  CBRANCH (ram, 0x196e9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x10, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000010b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000123, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x196def, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196e38, 1) , (unique, 0x10000066, 1), (unique, 0x10000066, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x8, 8) COPY (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) MULTIEQUAL (unique, 0x1000010b, 8) , (unique, 0x10000113, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000123, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x196e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[(unique, 0x100000fb, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196db4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x196db4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000113, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196d68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x196db1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196def, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(register, 0x80, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100000fb, 8) , (unique, 0x100000fb, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196e5d, 1) , (unique, 0x10000078, 1), (unique, 0x10000078, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x196dfb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196e12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CALL (ram, 0x196200, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x196dfb, 1)]
[(unique, 0x1000012b, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196def, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x100000e3, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100000eb, 8) MULTIEQUAL (unique, 0x1000012b, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196de5, 1) , (unique, 0x100000e2, 1), (unique, 0x100000e2, 1) INT_EQUAL (unique, 0x100000f4, 1) , (const, 0x0, 1), (unique, 0x100000f4, 1) MULTIEQUAL (register, 0x80, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) PTRADD (unique, 0x100000eb, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196de0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x100000eb, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x196d50, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xb0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x195f40, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0xb0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x100000de, 1) MULTIEQUAL (register, 0x206, 1) , (unique, 0x10000078, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x196e23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x196d46, 1) , (unique, 0x100000df, 1), (unique, 0x100000df, 1) BOOL_NEGATE (unique, 0x100000de, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
