[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1a1840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x8, 8)]
[(unique, 0x100000fe, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000012e, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1a179f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1a1740, 1) , (unique, 0x100000c8, 1), (unique, 0x100000c8, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x8, 8) COPY (unique, 0x10000116, 8), (unique, 0x10000116, 8) MULTIEQUAL (unique, 0x100000fe, 8) , (unique, 0x10000106, 8) , (unique, 0x1000010e, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (unique, 0x10000136, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1a1775, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[(unique, 0x100000ee, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1a1813, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1a1813, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000010e, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1a1800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1a1810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1a179f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(register, 0x80, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100000ee, 8) , (unique, 0x100000ee, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1a1843, 1) , (unique, 0x100000c2, 1), (unique, 0x100000c2, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000011e, 8) COPY (register, 0xb0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000011e, 8) , (unique, 0x10000126, 8)]
[ ---  CBRANCH (ram, 0x1a184e, 1) , (unique, 0xd900, 1), (unique, 0xd900, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x10000126, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100000d2, 8) , (const, 0x1, 8), (unique, 0x100000d2, 8) INT_ADD (unique, 0x100000a9, 8) , (const, 0x1, 8), (unique, 0x100000a9, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x1a184c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xb100, 1) , (const, 0x0, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) INT_NEGATE (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1a17ab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1a17c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x17d, 4)]
[ ---  CALL (ram, 0x1a0b30, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1a17ab, 1)]
[ ---  CBRANCH (ram, 0x1a1788, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x100000db, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100000e3, 8) MULTIEQUAL (unique, 0x1000013e, 8) , (unique, 0x100000ee, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1a1795, 1) , (unique, 0x100000da, 1), (unique, 0x100000da, 1) INT_NOTEQUAL (unique, 0x100000ec, 1) , (const, 0x0, 1), (unique, 0x100000ec, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (register, 0x80, 1)]
[(register, 0x8, 8) PTRADD (unique, 0x100000e3, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1a1790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100000db, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x1000013e, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000106, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000e3, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000136, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1a1730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100000db, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x95, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xb0, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x9e, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x1a0820, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0xb0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x100000c4, 1) MULTIEQUAL (register, 0x206, 1) , (unique, 0x100000c2, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1a17d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1a1720, 1) , (unique, 0x100000cd, 1), (unique, 0x100000cd, 1) BOOL_NEGATE (unique, 0x100000c4, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
