[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005c6, 8), (unique, 0x100005c6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005ce, 8), (unique, 0x100005ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2124b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005d6, 8), (unique, 0x100005d6, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005de, 8), (unique, 0x100005de, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff90, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x212188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005e6, 8), (unique, 0x100005e6, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005ee, 8), (unique, 0x100005ee, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x2122a0, 1)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5e, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x5e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x5e, 4)]
[ ---  CBRANCH (ram, 0x2123f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 8) COPY (const, 0x400, 8)]
[(unique, 0x100005b6, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x212222, 1)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100005b6, 8) , (unique, 0x100005be, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x7d, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x7d, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x7d, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2121b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1dfbe0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x554, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x554, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x554, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x554, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x554, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x554, 4)]
[(unique, 0x100005ae, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x21220b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x2, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x28, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x13, 8)]
[ ---  CBRANCH (ram, 0x2121ef, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000352, 8) , (const, 0x400, 8), (unique, 0x10000352, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(register, 0x0, 8) COPY (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x585, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x585, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x585, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x585, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x585, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x585, 4)]
[ ---  CBRANCH (ram, 0x2123f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000352, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x59c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x59c, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x59c, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x59c, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x59c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x59c, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CAST (unique, 0x10000606, 8), (unique, 0x10000606, 8) CALL (ram, 0x121230, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x100005fe, 8), (unique, 0x100005fe, 8) INT_ADD (unique, 0x100005f6, 8) , (register, 0x28, 8), (unique, 0x100005f6, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100005ae, 8) , (register, 0x0, 8)]
[(unique, 0x100005be, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100005ae, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x10000616, 8), (unique, 0x10000616, 8) INT_ADD (unique, 0x1000060e, 8) , (register, 0x28, 8), (unique, 0x1000060e, 8) CAST (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x93, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000626, 8), (unique, 0x10000626, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0xb8, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000061e, 8), (unique, 0x1000061e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2123f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000062e, 8), (unique, 0x1000062e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000061e, 8), (unique, 0x1000061e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb4, 4)]
[ ---  CALL (ram, 0x1dfbb0, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000636, 8), (unique, 0x10000636, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000646, 8), (unique, 0x10000646, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000063e, 8), (unique, 0x1000063e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000064e, 8) , (const, 0xffffffff, 4), (unique, 0x1000064e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000646, 8), (unique, 0x10000646, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000063e, 8), (unique, 0x1000063e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x1000063e, 8), (unique, 0x1000063e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212454, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff90, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2122a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000656, 8), (unique, 0x10000656, 8) CAST (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x51f, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x51f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x51f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x51f, 4)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2123f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20ffa0, 8) , (unique, 0xbc80, 4) , (register, 0x30, 8) , (const, 0x10800, 8), (register, 0x30, 8) PTRADD (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000065e, 8), (unique, 0x1000065e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x533, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x533, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x533, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x533, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x533, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x533, 4)]
[ ---  CBRANCH (ram, 0x2122d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1e0130, 8) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x546, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x546, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (register, 0x0, 8) , (const, 0x546, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x546, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x546, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x546, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x2122c8, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2122be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000666, 8), (unique, 0x10000666, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2122be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000066e, 8), (unique, 0x1000066e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x2b57d8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x102, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x102, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x102, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x102, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x102, 4)]
[(register, 0x0, 8) CALL (ram, 0x1df920, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2123f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x115, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x115, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x115, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) CALL (ram, 0x1e0120, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x3800, 8), (unique, 0x3400, 8) CAST (unique, 0x10000676, 8), (unique, 0x10000676, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x124, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x115, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212311, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x142, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x212342, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001d3, 4) , (const, 0x0, 4), (unique, 0x100001d3, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000067e, 8), (unique, 0x1000067e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (register, 0x0, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15f, 4)]
[ ---  CBRANCH (ram, 0x212500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (const, 0x1, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000686, 8), (unique, 0x10000686, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000068e, 8), (unique, 0x1000068e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2124e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001df, 4) , (const, 0x0, 4), (unique, 0x100001df, 4) INT_AND (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x488, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x488, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x48d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x488, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x48d, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x488, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x48d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x488, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x48d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x488, 4)]
[ ---  CBRANCH (ram, 0x21234a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e0120, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x18, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4a4, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x4a4, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4a4, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4a4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1dfbb0, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000069e, 8) , (unique, 0xbc80, 4), (unique, 0x1000069e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000058e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000696, 8), (unique, 0x10000696, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x1000058e, 8) COPY (ram, 0x4eae68, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4bb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4ad, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4a4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212544, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4cc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4d2, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x100006a6, 8), (unique, 0x100006a6, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x212424, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100006b6, 8), (unique, 0x100006b6, 8) INT_ADD (unique, 0x100006ae, 8) , (const, 0x2c, 8), (unique, 0x100006ae, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x183, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x19d, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x19d, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x19d, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2127a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006c6, 8), (unique, 0x100006c6, 8) CALL (ram, 0x121250, 8) , (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) CAST (unique, 0x100006be, 8), (unique, 0x100006be, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x480, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x480, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x480, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x480, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000038b, 8) , (unique, 0x100003a3, 8) , (const, 0x214, 4) , (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) COPY (const, 0x2b9d98, 8), (unique, 0x100003a3, 8) COPY (const, 0x2b9d70, 8), (unique, 0x1000038b, 8) COPY (const, 0x2b580e, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x480, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x21237a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2f, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x100006ce, 8), (unique, 0x100006ce, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cf, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006d6, 8) , (register, 0x0, 4), (unique, 0x100006d6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_SUB (unique, 0x10000204, 4) , (unique, 0x1000020c, 4), (unique, 0x10000204, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x1000020c, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x2123c5, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x212388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c6, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3c6, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3c6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3c6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c6, 4)]
[ ---  CBRANCH (ram, 0x2125b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1dfbe0, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x2123d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100005a6, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x212563, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x379, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x38b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x379, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x38b, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x379, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x38b, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x379, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x38b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x379, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x38b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x379, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100004db, 8) , (const, 0x1, 8), (unique, 0x100004db, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100005a6, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x212558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x211e10, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (register, 0xa8, 8) , (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100005a6, 8) , (unique, 0x3a00, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x21275e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[(unique, 0x10000375, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x212599, 1)]
[(unique, 0x10000376, 1) COPY (const, 0x0, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x212599, 1)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e2, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e2, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3d7, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3e2, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3d7, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3d7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d7, 4)]
[ ---  CBRANCH (ram, 0x212720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x211e10, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x13, 8)]
[ ---  CBRANCH (ram, 0x2125cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x212599, 1)]
[(unique, 0x10000374, 1) MULTIEQUAL (unique, 0x10000376, 1) , (register, 0x206, 1) , (unique, 0x10000375, 1) , (register, 0x206, 1)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x20d, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x210, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006e6, 8) , (unique, 0xbc80, 4), (unique, 0x100006e6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000596, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20d, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006de, 8), (unique, 0x100006de, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000596, 8) COPY (ram, 0x4eae68, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  BRANCH (ram, 0x212628, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x18, 4)]
[(unique, 0x1000059e, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006ee, 8), (unique, 0x100006ee, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x212789, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x45d, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x45d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x45d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x45d, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000393, 8) , (unique, 0x1000039b, 8) , (const, 0x22a, 4) , (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) COPY (const, 0x2b9d98, 8), (unique, 0x1000039b, 8) COPY (const, 0x2b9d70, 8), (unique, 0x10000393, 8) COPY (const, 0x2b5825, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x45d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x41e, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x41e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x41e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41e, 4)]
[ ---  CALL (ram, 0x1dfbb0, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006f6, 8) , (unique, 0xbc80, 4), (unique, 0x100006f6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000059e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x435, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x427, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x41e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212615, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x446, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x456, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x100006fe, 8), (unique, 0x100006fe, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000373, 1) MULTIEQUAL (unique, 0x10000374, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000716, 8), (unique, 0x10000716, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000706, 8), (unique, 0x10000706, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212648, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000070e, 8), (unique, 0x1000070e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2126e2, 1) , (unique, 0x10000377, 1), (unique, 0x10000377, 1) BOOL_NEGATE (unique, 0x10000373, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000726, 8), (unique, 0x10000726, 8) INT_ADD (unique, 0x1000071e, 8) , (const, 0x2c, 8), (unique, 0x1000071e, 8) CAST (register, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x255, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x240, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x234, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000072e, 8) , (unique, 0xbc80, 4), (unique, 0x1000072e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2126f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000073e, 8), (unique, 0x1000073e, 8) INT_ADD (unique, 0x10000736, 8) , (const, 0x2c, 8), (unique, 0x10000736, 8) CAST (register, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x375, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x369, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000746, 8) , (unique, 0xbc80, 4), (unique, 0x10000746, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x212740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000074e, 8), (unique, 0x1000074e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x33d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x33d, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x33d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x33d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x33d, 4)]
[(register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (const, 0x5, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000756, 8), (unique, 0x10000756, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x212662, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002de, 4) , (const, 0x0, 4), (unique, 0x100002de, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000075e, 8), (unique, 0x1000075e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x212757, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002e2, 4) , (const, 0x0, 4), (unique, 0x100002e2, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffd, 4), (register, 0x0, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x212697, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x2126b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ab, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ab, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2a6, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2ab, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2a6, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x2ab, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x2a6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ab, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ab, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a6, 4)]
[ ---  CBRANCH (ram, 0x212424, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e0120, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21276b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000766, 8), (unique, 0x10000766, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x307, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x307, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x307, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x307, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x307, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x307, 4)]
[(register, 0x0, 4) CALL (ram, 0x210af0, 8) , (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) COPY (const, 0x2b525a, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c7, 4)]
[(register, 0x0, 4) CALL (ram, 0x210af0, 8) , (unique, 0x10000383, 8), (unique, 0x10000383, 8) COPY (const, 0x2b57d7, 8)]
[(unique, 0x1000055c, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000564, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000056c, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000574, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(unique, 0x10000578, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000580, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x212424, 1) , (unique, 0x1000055b, 1), (unique, 0x1000055b, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x54e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x54e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x54e, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x54e, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x54e, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x54e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x2126d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xd, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000076e, 8), (unique, 0x1000076e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f1, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4f1, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x4f1, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4f1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f1, 4)]
[(register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (const, 0x2, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000776, 8), (unique, 0x10000776, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000580, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000578, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x10000574, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000056c, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x10000564, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x1000055c, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x212424, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000578, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (unique, 0x10000574, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000056c, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000564, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x0, 4) , (register, 0x18, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x212784, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000077e, 8), (unique, 0x1000077e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x1000055c, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000580, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x301, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x301, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x301, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x301, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x301, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
