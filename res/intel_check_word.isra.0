[ ---  CBRANCH (ram, 0x45331b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000276, 4) , (const, 0x0, 4), (unique, 0x10000276, 4) CAST (register, 0x30, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000166, 4) INT_MULT (unique, 0x10000066, 4) , (const, 0x3, 4), (unique, 0x10000066, 4) INT_SDIV (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffff47, 4)]
[ ---  CBRANCH (ram, 0x4532ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x100001ad, 4) , (unique, 0x10000166, 4)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x100001a9, 4) , (register, 0x38, 4)]
[(register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x100001a4, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x453240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x40, 1), (register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x100001a4, 4) , (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x4532ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45331e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xff, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x4532ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x4534e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x3, 4)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x2c100, 4) , (unique, 0x2c100, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x2c400, 4) , (unique, 0x2c400, 4)]
[ ---  CBRANCH (ram, 0x453502, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x453395, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x4534ee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4534a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x2c100, 4) , (unique, 0x2c100, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x2c400, 4) , (unique, 0x2c400, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x4534a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x4534d2, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x4534ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x453395, 1) , (unique, 0x1000024b, 1), (unique, 0x1000024b, 1) BOOL_NEGATE (register, 0x206, 1)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000028a, 8), (unique, 0x1000028a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000028a, 8), (unique, 0x1000028a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x4532ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000028a, 8), (unique, 0x1000028a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x2c100, 4) , (unique, 0x2c100, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x2c400, 4) , (unique, 0x2c400, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x453350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x453378, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x453382, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x453355, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x453429, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x453429, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x453438, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x453395, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x453355, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x453395, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0xc, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x0, 4) INT_SUB (unique, 0x3200, 4) , (register, 0x88, 4), (unique, 0x3200, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  CBRANCH (ram, 0x4533ee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3200, 4) , (register, 0x88, 4), (unique, 0x3200, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x18, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x18, 4) , (const, 0xfff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x16, 4), (register, 0x18, 4) INT_RIGHT (register, 0x18, 4) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x453450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45347c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xfff, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100001ce, 8) , (unique, 0x100001be, 8) , (const, 0xc0, 4) , (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) COPY (const, 0x49daf0, 8), (unique, 0x100001ce, 8) COPY (const, 0x49d76c, 8), (unique, 0x100001be, 8) COPY (const, 0x49d73f, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x16, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x4532ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000292, 8), (unique, 0x10000292, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x453296, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x49, 4)]
[ ---  CBRANCH (ram, 0x453296, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x453310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xf, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x453310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x6, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(register, 0x88, 4) COPY (const, 0x9, 4)]
[ ---  BRANCH (ram, 0x453296, 1)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffd, 4)]
[(register, 0x88, 4) COPY (const, 0x6, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) COPY (const, 0x44, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d6, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100001d6, 8) PTRSUB (const, 0x0, 8) , (const, 0x49d8c0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000191, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0x3100, 8)]
[(unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d6, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100001d6, 8) PTRSUB (const, 0x0, 8) , (const, 0x49d8c0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000191, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000024e, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000191, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000266, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000191, 8)]
[(unique, 0x10000187, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x1000018f, 1) MULTIEQUAL (unique, 0xba80, 1) , (unique, 0xba80, 1)]
[(unique, 0x10000191, 8) MULTIEQUAL (unique, 0x10000266, 8) , (unique, 0x1000026e, 8)]
[(unique, 0x1000017f, 8) COPY (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) MULTIEQUAL (unique, 0x1000024e, 8) , (unique, 0x10000256, 8)]
[ ---  CBRANCH (ram, 0x4532ca, 1) , (unique, 0x10000190, 1), (unique, 0x10000190, 1) INT_EQUAL (register, 0x30, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) MULTIEQUAL (unique, 0xba80, 1) , (unique, 0xba80, 1)]
[ ---  CBRANCH (ram, 0x4533c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x88, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000187, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_SUB (unique, 0x3200, 4) , (register, 0x88, 4), (unique, 0x3200, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  CBRANCH (ram, 0x453420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3200, 4) , (register, 0x88, 4), (unique, 0x3200, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000029a, 8), (unique, 0x1000029a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000187, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4533e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45345d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000187, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100001c6, 8) , (unique, 0x100001b6, 8) , (const, 0xf0, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) COPY (const, 0x49daf0, 8), (unique, 0x100001c6, 8) COPY (const, 0x49d76c, 8), (unique, 0x100001b6, 8) COPY (const, 0x49d73f, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000187, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45324e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x453300, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x1000018f, 1) , (register, 0x30, 1)]
[ ---  CBRANCH (ram, 0x4532a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x10000191, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x1000017f, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45324e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x1000017f, 8) , (register, 0x90, 8)]
[(unique, 0x100001a9, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x100001ad, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x453257, 1) , (unique, 0x100001a8, 1), (unique, 0x100001a8, 1) INT_EQUAL (unique, 0x100001a4, 4) , (const, 0x0, 4), (unique, 0x100001a4, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001de, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100001de, 8) PTRSUB (const, 0x0, 8) , (const, 0x49d8c0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x90, 8) , (unique, 0x1000017f, 8)]
[(unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001de, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100001de, 8) PTRSUB (const, 0x0, 8) , (const, 0x49d8c0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x90, 8) , (unique, 0x1000017f, 8)]
[(unique, 0x10000256, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x90, 8) , (unique, 0x1000017f, 8)]
[(unique, 0x1000026e, 8) COPY (unique, 0x1000017f, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
