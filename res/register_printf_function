[(register, 0x18, 8) INT_SEXT (unique, 0x10000075, 4), (unique, 0x10000075, 4) CAST (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x46e910, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 4) , (register, 0x38, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000079, 8), (unique, 0x10000079, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7f24, 4) COPY (ram, 0x4c7f24, 4), (ram, 0x4c7f24, 4) INDIRECT (ram, 0x4c7f24, 4) , (const, 0xe6, 4)]
[(ram, 0x4c8948, 8) COPY (ram, 0x4c8948, 8), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xe6, 4)]
[(ram, 0x4c8968, 8) COPY (ram, 0x4c8968, 8), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xe6, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x46e8e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000081, 8), (unique, 0x10000081, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f24, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f24, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe0, 4)]
[(ram, 0x4c7f24, 4) INDIRECT (ram, 0x4c7f24, 4) , (const, 0xe0, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xe0, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xe0, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000060, 8), (unique, 0x10000060, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7f24, 8)]
[ ---  BRANCH (ram, 0x46e839, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f24, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f24, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c7f24, 4) MULTIEQUAL (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x46e878, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8948, 8) , (const, 0x0, 8), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa6, 4)]
[(ram, 0x4c7f24, 4) INDIRECT (ram, 0x4c7f24, 4) , (const, 0xa6, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xa6, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xa6, 4)]
[ ---  CBRANCH (ram, 0x46e929, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427e50, 8) , (const, 0x100, 8) , (const, 0x10, 8)]
[(unique, 0x3200, 8) INT_ADD (unique, 0x10000089, 8) , (const, 0x800, 8), (unique, 0x10000089, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x46e84c, 1)]
[(register, 0x80, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x46e857, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x30, 8), (unique, 0x3400, 8) CAST (unique, 0x10000091, 8), (unique, 0x10000091, 8) INT_ADD (ram, 0x4c8948, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8), (ram, 0x4c8948, 8) MULTIEQUAL (unique, 0x3200, 8) , (ram, 0x4c8948, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7f24, 4) INDIRECT (ram, 0x4c7f24, 4) , (const, 0x54, 4), (ram, 0x4c7f24, 4) INDIRECT (ram, 0x4c7f24, 4) , (const, 0x46, 4), (ram, 0x4c7f24, 4) MULTIEQUAL (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x54, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x46, 4), (ram, 0x4c8948, 8) MULTIEQUAL (unique, 0x3200, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x54, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x46, 4), (ram, 0x4c8968, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100000a1, 8), (unique, 0x100000a1, 8) INT_ADD (unique, 0x10000099, 8) , (unique, 0x3300, 8), (unique, 0x10000099, 8) CAST (unique, 0x1000006d, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8), (unique, 0x1000006d, 8) COPY (ram, 0x4c8968, 8), (ram, 0x4c8968, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (register, 0x0, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000069, 4) COPY (ram, 0x4c7f24, 4), (ram, 0x4c7f24, 4) MULTIEQUAL (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4)]
[ ---  CBRANCH (ram, 0x46e8b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000a9, 8), (unique, 0x100000a9, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7f24, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46e86a, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000069, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x46e86a, 1)]
[(ram, 0x4c7f24, 4) INT_ADD (ram, 0x4c7f24, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7f24, 4) COPY (ram, 0x4c7f24, 4), (ram, 0x4c7f24, 4) MULTIEQUAL (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4) , (ram, 0x4c7f24, 4)]
[(ram, 0x4c8948, 8) COPY (ram, 0x4c8948, 8)]
[(ram, 0x4c8968, 8) COPY (ram, 0x4c8968, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
