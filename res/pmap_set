[(register, 0xa0, 8) INT_SEXT (register, 0x10, 4)]
[(register, 0x18, 8) INT_ZEXT (register, 0x8, 2)]
[(ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x28, 4)]
[(ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x28, 4)]
[(ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x28, 4)]
[(ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x28, 4)]
[ ---  CBRANCH (ram, 0x22c09b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[ ---  CALL (ram, 0x16a940, 8) , (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) COPY (const, 0x28f323, 8)]
[ ---  CALL (ram, 0x13a020, 8) , (const, 0x1, 4)]
[(ram, 0x293d00, 8) COPY (ram, 0x293d00, 8), (ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x178, 4), (ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x174, 4)]
[(ram, 0x293d08, 8) COPY (ram, 0x293d08, 8), (ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x178, 4), (ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x174, 4)]
[(ram, 0x293d10, 8) COPY (ram, 0x293d10, 8), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x178, 4), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x174, 4)]
[(ram, 0x293d18, 8) COPY (ram, 0x293d18, 8), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x178, 4), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x174, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100001e8, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000033d, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100001e5, 1) MULTIEQUAL (unique, 0x100001e5, 1) , (unique, 0x100001e8, 1) , (unique, 0x100001e7, 1)]
[ ---  CBRANCH (ram, 0x22c040, 1) , (unique, 0x1000028b, 1), (unique, 0x1000028b, 1) INT_EQUAL (unique, 0x1000028c, 8) , (const, 0x0, 8), (unique, 0x1000028c, 8) MULTIEQUAL (unique, 0x10000335, 8) , (unique, 0x1000033d, 8) , (unique, 0x10000345, 8)]
[ ---  CBRANCH (ram, 0x22c094, 1) , (unique, 0x100001e6, 1), (unique, 0x100001e6, 1) BOOL_NEGATE (unique, 0x100001e5, 1)]
[ ---  CALL (ram, 0x222820, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x293d00, 8) COPY (ram, 0x293d00, 8), (ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x16f, 4)]
[(ram, 0x293d08, 8) COPY (ram, 0x293d08, 8), (ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x16f, 4)]
[(ram, 0x293d10, 8) COPY (ram, 0x293d10, 8), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x16f, 4)]
[(ram, 0x293d18, 8) COPY (ram, 0x293d18, 8), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x16f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001e7, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000345, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x22bf25, 1)]
[ ---  CBRANCH (ram, 0x22bf40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000c1, 4) , (const, 0x0, 4), (unique, 0x100000c1, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000028c, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22bf40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000028c, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22bf40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22bf6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x22bf40, 1) , (unique, 0x100001e9, 1), (unique, 0x100001e9, 1) BOOL_NEGATE (unique, 0x100001e5, 1)]
[ ---  CALL (ram, 0x222820, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0xbd, 4), (ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0xac, 4)]
[(ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0xbd, 4), (ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0xac, 4)]
[(ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0xbd, 4), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0xac, 4)]
[(ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0xbd, 4), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0xac, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xbd, 4), (stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xac, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff98, 8) INT_OR (unique, 0x100001ea, 8) , (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) INT_ZEXT (stack, 0xffffffffffffff98, 4), (unique, 0x100001ea, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff00000000, 8), (stack, 0xffffffffffffff98, 4) INT_ADD (unique, 0x10000299, 4) , (stack, 0xffffffffffffff98, 2), (unique, 0x10000299, 4) INT_LEFT (unique, 0x10000295, 4) , (const, 0x10, 4), (unique, 0x10000295, 4) INT_SEXT (const, 0x6f00, 2), (stack, 0xffffffffffffff98, 2) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xac, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000319, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c02c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x235cb0, 8) , (unique, 0x3800, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x1000036d, 16) , (ram, 0x293d10, 8) , (register, 0x80, 4) , (register, 0x88, 4), (unique, 0x1000036d, 16) CAST (unique, 0x1000014d, 16), (register, 0x80, 4) SUBPIECE (ram, 0x293d18, 8) , (const, 0x0, 4), (unique, 0x1000014d, 16) INT_ADD (unique, 0x100002bf, 16) , (unique, 0x1000015d, 9), (unique, 0x100002bf, 16) INT_LEFT (unique, 0x100002af, 16) , (const, 0x48, 16), (unique, 0x100002af, 16) INT_SEXT (const, 0x1, 7), (unique, 0x1000015d, 9) INT_ADD (unique, 0x100002a6, 9) , (const, 0x190, 8), (unique, 0x100002a6, 9) INT_LEFT (unique, 0x1000029d, 9) , (const, 0x40, 9), (unique, 0x1000029d, 9) INT_SEXT (const, 0x90, 1), (register, 0x88, 4) INT_SUB (unique, 0x100001fa, 4) , (const, 0x70, 4), (unique, 0x100001fa, 4) SUBPIECE (register, 0x20, 8) , (const, 0x0, 4), (unique, 0x3800, 8) CAST (unique, 0x10000365, 8), (unique, 0x10000365, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0xac, 4), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0xac, 4)]
[(ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0xef, 4)]
[(ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0xef, 4)]
[(ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0xef, 4)]
[(ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10000325, 8) , (const, 0xef, 4), (unique, 0x10000325, 8) COPY (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) CAST (register, 0x38, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x1000032d, 8) , (const, 0xef, 4), (unique, 0x1000032d, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (register, 0xa0, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (register, 0x18, 8) , (const, 0xef, 4)]
[(unique, 0x1000017f, 8) INT_ADD (unique, 0x10000311, 8) , (stack, 0xffffffffffffff70, 1), (unique, 0x10000311, 8) INT_LEFT (unique, 0x10000309, 8) , (const, 0x8, 8), (unique, 0x10000309, 8) INT_SEXT (unique, 0x100003b5, 7), (unique, 0x100003b5, 7) CAST (stack, 0xffffffffffffff71, 7), (stack, 0xffffffffffffff71, 7) INDIRECT (stack, 0xffffffffffffff71, 7) , (const, 0xef, 4), (stack, 0xffffffffffffff70, 1) INDIRECT (stack, 0xffffffffffffff70, 1) , (const, 0xef, 4), (stack, 0xffffffffffffff71, 7) SUBPIECE (unique, 0x100002cf, 8) , (const, 0x0, 4), (unique, 0x100002cf, 8) INT_RIGHT (unique, 0x1000037d, 8) , (const, 0x8, 4), (unique, 0x1000037d, 8) CAST (ram, 0x293d08, 8), (stack, 0xffffffffffffff70, 1) SUBPIECE (ram, 0x293d08, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c04e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8) , (unique, 0x10000203, 8) , (unique, 0x10000395, 8) , (unique, 0x1000020b, 8) , (unique, 0x1000039d, 8) , (unique, 0x100003a5, 16), (unique, 0x100003a5, 16) CAST (unique, 0x10000166, 16), (unique, 0x1000039d, 8) CAST (unique, 0x3800, 8), (unique, 0x10000395, 8) CAST (unique, 0x3800, 8), (unique, 0x1000020b, 8) PTRSUB (const, 0x0, 8) , (const, 0x23a830, 8), (unique, 0x10000203, 8) PTRSUB (const, 0x0, 8) , (const, 0x22c3f0, 8), (unique, 0x10000166, 16) INT_ADD (unique, 0x100002f9, 16) , (unique, 0x10000176, 9), (unique, 0x100002f9, 16) INT_LEFT (unique, 0x100002e9, 16) , (const, 0x48, 16), (unique, 0x100002e9, 16) INT_SEXT (unique, 0x10000386, 7), (unique, 0x10000386, 7) CAST (stack, 0xffffffffffffff71, 7), (unique, 0x10000176, 9) INT_ADD (unique, 0x100002e0, 9) , (ram, 0x293d00, 8), (unique, 0x100002e0, 9) INT_LEFT (unique, 0x100002d7, 9) , (const, 0x40, 9), (unique, 0x100002d7, 9) INT_SEXT (unique, 0x10000385, 1), (unique, 0x10000385, 1) CAST (stack, 0xffffffffffffff70, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000263, 8), (unique, 0x10000263, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff94, 8), (stack, 0xffffffffffffff71, 7) SUBPIECE (unique, 0x100002cf, 8) , (const, 0x0, 4), (unique, 0x100002cf, 8) INT_RIGHT (unique, 0x1000037d, 8) , (const, 0x8, 4), (unique, 0x1000037d, 8) CAST (ram, 0x293d08, 8), (stack, 0xffffffffffffff70, 1) SUBPIECE (ram, 0x293d08, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x2344d0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003bc, 8), (unique, 0x100003bc, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000213, 8) , (unique, 0x10000223, 8) , (const, 0x5, 8) , (unique, 0x1000017f, 8), (unique, 0x10000223, 8) COPY (const, 0x28f33d, 8), (unique, 0x10000213, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x145, 4), (ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x136, 4), (ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x12e, 4)]
[(ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x145, 4), (ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x136, 4), (ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x12e, 4)]
[(ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x145, 4), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x136, 4), (ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x12e, 4)]
[(ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x145, 4), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x136, 4), (ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x145, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x136, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x145, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x136, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12e, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x10000321, 4) COPY (stack, 0xffffffffffffff94, 4), (stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x145, 4), (stack, 0xffffffffffffff94, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22c02c, 1)]
[(ram, 0x293d00, 8) INDIRECT (ram, 0x293d00, 8) , (const, 0x10a, 4)]
[(ram, 0x293d08, 8) INDIRECT (ram, 0x293d08, 8) , (const, 0x10a, 4)]
[(ram, 0x293d10, 8) INDIRECT (ram, 0x293d10, 8) , (const, 0x10a, 4)]
[(ram, 0x293d18, 8) INDIRECT (ram, 0x293d18, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10a, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x1000031d, 4) COPY (stack, 0xffffffffffffff94, 4), (stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x10a, 4)]
[(ram, 0x293d00, 8) COPY (ram, 0x293d00, 8), (ram, 0x293d00, 8) MULTIEQUAL (ram, 0x293d00, 8) , (ram, 0x293d00, 8) , (ram, 0x293d00, 8)]
[(ram, 0x293d08, 8) COPY (ram, 0x293d08, 8), (ram, 0x293d08, 8) MULTIEQUAL (ram, 0x293d08, 8) , (ram, 0x293d08, 8) , (ram, 0x293d08, 8)]
[(ram, 0x293d10, 8) COPY (ram, 0x293d10, 8), (ram, 0x293d10, 8) MULTIEQUAL (ram, 0x293d10, 8) , (ram, 0x293d10, 8) , (ram, 0x293d10, 8)]
[(ram, 0x293d18, 8) COPY (ram, 0x293d18, 8), (ram, 0x293d18, 8) MULTIEQUAL (ram, 0x293d18, 8) , (ram, 0x293d18, 8) , (ram, 0x293d18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100003c4, 4), (unique, 0x100003c4, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x10000319, 4) , (unique, 0x1000031d, 4) , (unique, 0x10000321, 4)]
[(unique, 0x10000335, 8) COPY (unique, 0x100003c8, 8), (unique, 0x100003c8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000028c, 8)]
