[(register, 0x18, 8) INT_ZEXT (register, 0x8, 2)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x39, 4)]
[(ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x39, 4)]
[(ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x39, 4)]
[(ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x39, 4)]
[(ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x39, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x39, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000376, 8), (unique, 0x10000376, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24ca62, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2401a0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[ ---  CALL (ram, 0x17b270, 8) , (unique, 0x10000252, 8), (unique, 0x10000252, 8) COPY (const, 0x2b70a9, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18b, 4)]
[ ---  CALL (ram, 0x143120, 8) , (const, 0x1, 4)]
[(ram, 0x2bc230, 8) COPY (ram, 0x2bc230, 8), (ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x18f, 4), (ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x18b, 4)]
[(ram, 0x2bc238, 8) COPY (ram, 0x2bc238, 8), (ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x18f, 4), (ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x18b, 4)]
[(ram, 0x2bc240, 8) COPY (ram, 0x2bc240, 8), (ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x18f, 4), (ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x18b, 4)]
[(ram, 0x2bc248, 8) COPY (ram, 0x2bc248, 8), (ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x18f, 4), (ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x18b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x24ca00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8)]
[(unique, 0x10000239, 1) COPY (const, 0x1, 1)]
[(unique, 0x10000346, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x10000236, 1) MULTIEQUAL (unique, 0x10000236, 1) , (unique, 0x10000239, 1) , (unique, 0x10000238, 1)]
[ ---  CBRANCH (ram, 0x24c8ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000147, 4) , (const, 0x0, 4), (unique, 0x10000147, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000033e, 8) , (unique, 0x10000346, 8) , (unique, 0x1000034e, 8)]
[ ---  CBRANCH (ram, 0x24c8ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000386, 8), (unique, 0x10000386, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24c918, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x24c922, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x24c8ff, 1) , (unique, 0x10000236, 1)]
[ ---  CALL (ram, 0x2401c0, 8) , (unique, 0x10000153, 8), (unique, 0x10000153, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x119, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x108, 4)]
[(ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x119, 4), (ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x108, 4)]
[(ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x119, 4), (ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x108, 4)]
[(ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x119, 4), (ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x108, 4)]
[(ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x119, 4), (ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x119, 4), (stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x119, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x119, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x119, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x108, 4), (stack, 0xffffffffffffffa8, 8) INT_OR (unique, 0x1000021d, 8) , (unique, 0x10000225, 8), (unique, 0x10000225, 8) INT_ZEXT (stack, 0xffffffffffffffa8, 4), (unique, 0x1000021d, 8) INT_AND (unique, 0x10000153, 8) , (const, 0xffffffff00000000, 8), (stack, 0xffffffffffffffa8, 4) INT_ADD (unique, 0x100002be, 4) , (stack, 0xffffffffffffffa8, 2), (unique, 0x100002be, 4) INT_LEFT (unique, 0x100002ba, 4) , (const, 0x10, 4), (unique, 0x100002ba, 4) INT_SEXT (const, 0x6f00, 2), (stack, 0xffffffffffffffa8, 2) SUBPIECE (unique, 0x10000153, 8) , (const, 0x0, 8), (unique, 0x10000153, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x119, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x1000015b, 8) , (const, 0x108, 4), (unique, 0x1000015b, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000163, 8), (unique, 0x10000163, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x119, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x108, 4)]
[ ---  CBRANCH (ram, 0x24ca05, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x257520, 8) , (unique, 0x3800, 8) , (const, 0x186a0, 8) , (const, 0x2, 8) , (unique, 0x1000039e, 16) , (ram, 0x2bc240, 8) , (register, 0x80, 4) , (register, 0x88, 4), (unique, 0x1000039e, 16) CAST (unique, 0x10000183, 16), (register, 0x80, 4) SUBPIECE (ram, 0x2bc248, 8) , (const, 0x0, 4), (unique, 0x10000183, 16) INT_ADD (unique, 0x100002e4, 16) , (unique, 0x10000193, 9), (unique, 0x100002e4, 16) INT_LEFT (unique, 0x100002d4, 16) , (const, 0x48, 16), (unique, 0x100002d4, 16) INT_SEXT (const, 0x1, 7), (unique, 0x10000193, 9) INT_ADD (unique, 0x100002cb, 9) , (const, 0x190, 8), (unique, 0x100002cb, 9) INT_LEFT (unique, 0x100002c2, 9) , (const, 0x40, 9), (unique, 0x100002c2, 9) INT_SEXT (const, 0x90, 1), (register, 0x88, 4) INT_SUB (unique, 0x1000022d, 4) , (const, 0x80, 4), (unique, 0x1000022d, 4) SUBPIECE (register, 0x20, 8) , (const, 0x0, 4), (unique, 0x3800, 8) CAST (unique, 0x10000396, 8), (unique, 0x10000396, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x108, 4), (ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x108, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15b, 4)]
[(ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x15b, 4)]
[(ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x15b, 4)]
[(ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x15b, 4)]
[(ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x15b, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x15b, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x1000035e, 8) , (const, 0x15b, 4), (unique, 0x1000035e, 8) COPY (unique, 0x100003be, 8), (unique, 0x100003be, 8) CAST (register, 0x38, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x10000366, 8) , (const, 0x15b, 4), (unique, 0x10000366, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (register, 0x0, 8) , (const, 0x15b, 4), (register, 0x0, 8) INT_SEXT (register, 0x10, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000036e, 8) , (const, 0x15b, 4), (unique, 0x1000036e, 8) COPY (register, 0x18, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x15b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x15b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15b, 4)]
[(unique, 0x100001b5, 8) INT_ADD (unique, 0x10000336, 8) , (stack, 0xffffffffffffff60, 1), (unique, 0x10000336, 8) INT_LEFT (unique, 0x1000032e, 8) , (const, 0x8, 8), (unique, 0x1000032e, 8) INT_SEXT (unique, 0x100003e6, 7), (unique, 0x100003e6, 7) CAST (stack, 0xffffffffffffff61, 7), (stack, 0xffffffffffffff61, 7) INDIRECT (stack, 0xffffffffffffff61, 7) , (const, 0x15b, 4), (stack, 0xffffffffffffff60, 1) INDIRECT (stack, 0xffffffffffffff60, 1) , (const, 0x15b, 4), (stack, 0xffffffffffffff61, 7) SUBPIECE (unique, 0x100002f4, 8) , (const, 0x0, 4), (unique, 0x100002f4, 8) INT_RIGHT (unique, 0x100003ae, 8) , (const, 0x8, 4), (unique, 0x100003ae, 8) CAST (ram, 0x2bc238, 8), (stack, 0xffffffffffffff60, 1) SUBPIECE (ram, 0x2bc238, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24ca30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8) , (unique, 0x1000023a, 8) , (unique, 0x100003c6, 8) , (unique, 0x10000242, 8) , (unique, 0x100003ce, 8) , (unique, 0x100003d6, 16), (unique, 0x100003d6, 16) CAST (unique, 0x1000019c, 16), (unique, 0x100003ce, 8) CAST (unique, 0x3800, 8), (unique, 0x100003c6, 8) CAST (unique, 0x3800, 8), (unique, 0x10000242, 8) PTRSUB (const, 0x0, 8) , (const, 0x25cc60, 8), (unique, 0x1000023a, 8) PTRSUB (const, 0x0, 8) , (const, 0x24cdc0, 8), (unique, 0x1000019c, 16) INT_ADD (unique, 0x1000031e, 16) , (unique, 0x100001ac, 9), (unique, 0x1000031e, 16) INT_LEFT (unique, 0x1000030e, 16) , (const, 0x48, 16), (unique, 0x1000030e, 16) INT_SEXT (unique, 0x100003b7, 7), (unique, 0x100003b7, 7) CAST (stack, 0xffffffffffffff61, 7), (unique, 0x100001ac, 9) INT_ADD (unique, 0x10000305, 9) , (ram, 0x2bc230, 8), (unique, 0x10000305, 9) INT_LEFT (unique, 0x100002fc, 9) , (const, 0x40, 9), (unique, 0x100002fc, 9) INT_SEXT (unique, 0x100003b6, 1), (unique, 0x100003b6, 1) CAST (stack, 0xffffffffffffff60, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000029a, 8), (unique, 0x1000029a, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff84, 8), (stack, 0xffffffffffffff61, 7) SUBPIECE (unique, 0x100002f4, 8) , (const, 0x0, 4), (unique, 0x100002f4, 8) INT_RIGHT (unique, 0x100003ae, 8) , (const, 0x8, 4), (unique, 0x100003ae, 8) CAST (ram, 0x2bc238, 8), (stack, 0xffffffffffffff60, 1) SUBPIECE (ram, 0x2bc238, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x183, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17e, 4)]
[(ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x183, 4), (ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x17e, 4)]
[(ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x183, 4), (ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x17e, 4)]
[(ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x183, 4), (ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x17e, 4)]
[(ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x183, 4), (ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x183, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x183, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x183, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x183, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x183, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17e, 4)]
[ ---  CALL (ram, 0x255b40, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003ed, 8), (unique, 0x100003ed, 8) CALL (ram, 0x130d70, 8) , (unique, 0x1000024a, 8) , (unique, 0x1000025a, 8) , (const, 0x5, 8) , (unique, 0x100001b5, 8), (unique, 0x1000025a, 8) COPY (const, 0x2b70c3, 8), (unique, 0x1000024a, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(stack, 0xffffffffffffff84, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x24c9e7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x173, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0x173, 4), (ram, 0x2bc230, 8) MULTIEQUAL (ram, 0x2bc230, 8) , (ram, 0x2bc230, 8)]
[(ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0x173, 4), (ram, 0x2bc238, 8) MULTIEQUAL (ram, 0x2bc238, 8) , (ram, 0x2bc238, 8)]
[(ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0x173, 4), (ram, 0x2bc240, 8) MULTIEQUAL (ram, 0x2bc240, 8) , (ram, 0x2bc240, 8)]
[(ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0x173, 4), (ram, 0x2bc248, 8) MULTIEQUAL (ram, 0x2bc248, 8) , (ram, 0x2bc248, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x173, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x173, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x173, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x173, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x173, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x173, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x173, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x1000035a, 4) COPY (stack, 0xffffffffffffff84, 4), (stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x173, 4), (stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[ ---  BRANCH (ram, 0x24ca07, 1)]
[(unique, 0x1000033e, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24c8e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ca00, 1) , (unique, 0x10000219, 1), (unique, 0x10000219, 1) BOOL_NEGATE (unique, 0x10000236, 1)]
[(unique, 0x10000238, 1) COPY (const, 0x0, 1)]
[(unique, 0x1000034e, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  BRANCH (ram, 0x24c8d9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaf, 4)]
[(ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0xaf, 4)]
[(ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0xaf, 4)]
[(ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0xaf, 4)]
[(ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaf, 4)]
[ ---  CALL (ram, 0x2401c0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(ram, 0x2bc248, 8) MULTIEQUAL (ram, 0x2bc248, 8) , (ram, 0x2bc248, 8)]
[(ram, 0x2bc240, 8) MULTIEQUAL (ram, 0x2bc240, 8) , (ram, 0x2bc240, 8)]
[(ram, 0x2bc238, 8) MULTIEQUAL (ram, 0x2bc238, 8) , (ram, 0x2bc238, 8)]
[(ram, 0x2bc230, 8) MULTIEQUAL (ram, 0x2bc230, 8) , (ram, 0x2bc230, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000356, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(ram, 0x2bc248, 8) MULTIEQUAL (ram, 0x2bc248, 8) , (ram, 0x2bc248, 8)]
[(ram, 0x2bc240, 8) MULTIEQUAL (ram, 0x2bc240, 8) , (ram, 0x2bc240, 8)]
[(ram, 0x2bc238, 8) MULTIEQUAL (ram, 0x2bc238, 8) , (ram, 0x2bc238, 8)]
[(ram, 0x2bc230, 8) MULTIEQUAL (ram, 0x2bc230, 8) , (ram, 0x2bc230, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000356, 4) , (unique, 0x1000035a, 4)]
[ ---  CBRANCH (ram, 0x24ca5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x2bc230, 8) COPY (ram, 0x2bc230, 8)]
[(ram, 0x2bc238, 8) COPY (ram, 0x2bc238, 8)]
[(ram, 0x2bc240, 8) COPY (ram, 0x2bc240, 8)]
[(ram, 0x2bc248, 8) COPY (ram, 0x2bc248, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2bc230, 8) COPY (ram, 0x2bc230, 8), (ram, 0x2bc230, 8) INDIRECT (ram, 0x2bc230, 8) , (const, 0xe4, 4)]
[(ram, 0x2bc238, 8) COPY (ram, 0x2bc238, 8), (ram, 0x2bc238, 8) INDIRECT (ram, 0x2bc238, 8) , (const, 0xe4, 4)]
[(ram, 0x2bc240, 8) COPY (ram, 0x2bc240, 8), (ram, 0x2bc240, 8) INDIRECT (ram, 0x2bc240, 8) , (const, 0xe4, 4)]
[(ram, 0x2bc248, 8) COPY (ram, 0x2bc248, 8), (ram, 0x2bc248, 8) INDIRECT (ram, 0x2bc248, 8) , (const, 0xe4, 4)]
[ ---  RETURN (const, 0x1, 4)]
