[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x22ec5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7e50, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb9, 4)]
[(ram, 0x4c7e48, 8) INDIRECT (ram, 0x4c7e48, 8) , (const, 0xb9, 4)]
[(ram, 0x4c7e50, 8) INDIRECT (ram, 0x4c7e50, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb9, 4)]
[ ---  CBRANCH (ram, 0x22ec89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x244440, 8) , (unique, 0x3800, 8) , (unique, 0x100000c1, 8) , (register, 0x20, 8), (unique, 0x100000c1, 8) COPY (const, 0x28f413, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e48, 8) COPY (ram, 0x4c7e48, 8)]
[(ram, 0x4c7e50, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) COPY (ram, 0x4c7e50, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (ram, 0x4c7e48, 8)]
[ ---  CBRANCH (ram, 0x22ec58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7e50, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e48, 8) COPY (ram, 0x4c7e48, 8)]
[(ram, 0x4c7e50, 8) COPY (ram, 0x4c7e50, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0xb0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100000f2, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100000fa, 8) COPY (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x22ec14, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4f, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e48, 8) INDIRECT (ram, 0x4c7e48, 8) , (const, 0x6d, 4), (ram, 0x4c7e48, 8) INDIRECT (ram, 0x4c7e48, 8) , (const, 0x4f, 4), (ram, 0x4c7e48, 8) MULTIEQUAL (unique, 0x100000f2, 8) , (ram, 0x4c7e48, 8)]
[(ram, 0x4c7e50, 8) INDIRECT (ram, 0x4c7e50, 8) , (const, 0x6d, 4), (ram, 0x4c7e50, 8) INDIRECT (ram, 0x4c7e50, 8) , (const, 0x4f, 4), (ram, 0x4c7e50, 8) MULTIEQUAL (unique, 0x100000fa, 8) , (ram, 0x4c7e50, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x22ec10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (register, 0xb0, 8) , (unique, 0x100000c9, 8) , (const, 0x0, 8) , (register, 0x20, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000c9, 8) COPY (const, 0x28f413, 8), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x18, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7e48, 8) COPY (ram, 0x4c7e48, 8)]
[(ram, 0x4c7e50, 8) COPY (ram, 0x4c7e50, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000102, 4), (unique, 0x10000102, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
