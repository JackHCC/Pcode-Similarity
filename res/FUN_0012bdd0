[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x22, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x22, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x22, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x22, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x22, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x22, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x12bef9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1426e0, 8) , (unique, 0x10000162, 8), (unique, 0x10000162, 8) COPY (const, 0x2b3a7b, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x50, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x50, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x50, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (register, 0x0, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x50, 4)]
[ ---  CBRANCH (ram, 0x12bef9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0x1000016a, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x1000016a, 8) COPY (const, 0x2b76c8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x64, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x64, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x64, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x64, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x64, 4)]
[ ---  CBRANCH (ram, 0x12bfa9, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x12bfa9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100001b8, 8) , (const, 0x10, 8), (unique, 0x100001b8, 8) CAST (stack, 0xffffffffffffff78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x98, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x98, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x98, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x98, 4)]
[(unique, 0x10000198, 8) COPY (ram, 0x4eca28, 8), (ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x98, 4), (ram, 0x4eca28, 8) COPY (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x12bf38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff78, 8) , (const, 0x1, 4) , (const, 0x1, 4) , (register, 0x0, 4) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x160, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x160, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x160, 4)]
[(ram, 0x4eca30, 8) INDIRECT (register, 0x0, 8) , (const, 0x160, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x160, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x160, 4)]
[ ---  CBRANCH (ram, 0x12bfa9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) CALL (ram, 0x1212c0, 8) , (ram, 0x4eca28, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001a0, 8) COPY (unique, 0x10000198, 8)]
[ ---  BRANCH (ram, 0x12bf7e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x18a, 4), (ram, 0x4eca20, 4) MULTIEQUAL (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x18a, 4), (ram, 0x4eca28, 8) MULTIEQUAL (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x18a, 4), (ram, 0x4eca30, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x18a, 4), (ram, 0x4f04f8, 8) MULTIEQUAL (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x12bf68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x210070, 8) , (register, 0x0, 4) , (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0xa0, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) INT_ADD (unique, 0x100001d0, 8) , (register, 0xa0, 8), (unique, 0x100001d0, 8) CAST (ram, 0x4eca30, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (unique, 0x100001a8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (ram, 0x4eca30, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4eca30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x199, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x199, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x199, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x199, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x199, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca30, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001a8, 8) COPY (ram, 0x4eca28, 8)]
[ ---  CBRANCH (ram, 0x12bfc0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (ram, 0x4eca28, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x0, 8)]
[(ram, 0x4eca20, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x12be7d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0xa8, 4), (ram, 0x4eca20, 4) MULTIEQUAL (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0xa8, 4), (ram, 0x4eca28, 8) MULTIEQUAL (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0xa8, 4), (ram, 0x4f04f8, 8) MULTIEQUAL (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa8, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x12bed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x20010324, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (ram, 0x4eca30, 8), (ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0xa8, 4), (ram, 0x4eca30, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4eca30, 8)]
[ ---  CBRANCH (ram, 0x12bed8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4eca28, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eca30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12bed8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (ram, 0x4eca28, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) INT_ADD (unique, 0x100001e8, 8) , (const, 0x6, 8), (unique, 0x100001e8, 8) CAST (ram, 0x4eca30, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eca30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12bed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eca30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12bed8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (ram, 0x4eca28, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12bed8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4eca28, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000208, 8), (unique, 0x10000208, 8) INT_ADD (unique, 0x10000200, 8) , (const, 0xa, 8), (unique, 0x10000200, 8) CAST (ram, 0x4eca30, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12befe, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (ram, 0x4eca28, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000210, 8), (unique, 0x10000210, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eca30, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12bf20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eca20, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x156, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x156, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x156, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x156, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x156, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x156, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca20, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x12beee, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x12c, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x12c, 4)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x12c, 4)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (ram, 0x4eca30, 8) , (ram, 0x4eca28, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4f04f8, 8) MULTIEQUAL (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8)]
[(ram, 0x4eca28, 8) MULTIEQUAL (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8)]
[(ram, 0x4eca20, 4) MULTIEQUAL (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eca30, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x19f, 4), (ram, 0x4eca20, 4) MULTIEQUAL (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4)]
[(ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x19f, 4), (ram, 0x4eca28, 8) MULTIEQUAL (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8)]
[(ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x19f, 4), (ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8) , (register, 0x0, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x19f, 4), (ram, 0x4f04f8, 8) MULTIEQUAL (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x19f, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x12befe, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4f04f8, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8)]
[(ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca28, 8) MULTIEQUAL (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8)]
[(ram, 0x4eca20, 4) MULTIEQUAL (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4f04f8, 8) MULTIEQUAL (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8) , (ram, 0x4f04f8, 8)]
[(ram, 0x4eca30, 8) MULTIEQUAL (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8) , (ram, 0x4eca30, 8)]
[(ram, 0x4eca28, 8) MULTIEQUAL (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8) , (ram, 0x4eca28, 8)]
[(ram, 0x4eca20, 4) MULTIEQUAL (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4) , (ram, 0x4eca20, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12bfcf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000218, 8), (unique, 0x10000218, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eca20, 4) COPY (ram, 0x4eca20, 4)]
[(ram, 0x4eca28, 8) COPY (ram, 0x4eca28, 8)]
[(ram, 0x4eca30, 8) COPY (ram, 0x4eca30, 8)]
[(ram, 0x4f04f8, 8) COPY (ram, 0x4f04f8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x151, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eca20, 4) COPY (ram, 0x4eca20, 4), (ram, 0x4eca20, 4) INDIRECT (ram, 0x4eca20, 4) , (const, 0x151, 4)]
[(ram, 0x4eca28, 8) COPY (ram, 0x4eca28, 8), (ram, 0x4eca28, 8) INDIRECT (ram, 0x4eca28, 8) , (const, 0x151, 4)]
[(ram, 0x4eca30, 8) COPY (ram, 0x4eca30, 8), (ram, 0x4eca30, 8) INDIRECT (ram, 0x4eca30, 8) , (const, 0x151, 4)]
[(ram, 0x4f04f8, 8) COPY (ram, 0x4f04f8, 8), (ram, 0x4f04f8, 8) INDIRECT (ram, 0x4f04f8, 8) , (const, 0x151, 4)]
[ ---  RETURN (const, 0x1, 4)]
