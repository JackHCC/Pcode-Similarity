[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13, 4)]
[(ram, 0x4eca00, 8) INDIRECT (ram, 0x4eca00, 8) , (const, 0x13, 4)]
[(ram, 0x4f04d0, 8) INDIRECT (ram, 0x4f04d0, 8) , (const, 0x13, 4)]
[ ---  CBRANCH (ram, 0x1212f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x266450, 8) , (unique, 0x10000066, 8) , (const, 0x80000002, 8), (unique, 0x10000066, 8) COPY (const, 0x2b37e6, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a, 4)]
[(ram, 0x4eca00, 8) INDIRECT (ram, 0x4eca00, 8) , (const, 0x2a, 4)]
[(ram, 0x4f04d0, 8) INDIRECT (ram, 0x4f04d0, 8) , (const, 0x2a, 4)]
[ ---  CBRANCH (ram, 0x1212ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x266520, 8) , (register, 0x0, 8) , (unique, 0x1000006e, 8), (unique, 0x1000006e, 8) COPY (const, 0x2b37f4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4)]
[(ram, 0x4eca00, 8) INDIRECT (ram, 0x4eca00, 8) , (const, 0x3a, 4)]
[(ram, 0x4f04d0, 8) INDIRECT (ram, 0x4f04d0, 8) , (const, 0x3a, 4)]
[ ---  CBRANCH (ram, 0x1212ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x266520, 8) , (register, 0x0, 8) , (unique, 0x10000076, 8), (unique, 0x10000076, 8) COPY (const, 0x2b3803, 8)]
[(ram, 0x4eca00, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000086, 8), (unique, 0x10000086, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)]
[(ram, 0x4f04d0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000008e, 8), (unique, 0x1000008e, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffe8, 8)]
[ ---  CALL (ram, 0x189910, 8) , (unique, 0x1000007e, 8), (unique, 0x1000007e, 8) COPY (const, 0x2b7518, 8)]
[(ram, 0x4eca00, 8) COPY (ram, 0x4eca00, 8), (ram, 0x4eca00, 8) INDIRECT (ram, 0x4eca00, 8) , (const, 0x22, 4), (ram, 0x4eca00, 8) MULTIEQUAL (ram, 0x4eca00, 8) , (ram, 0x4eca00, 8) , (ram, 0x4eca00, 8)]
[(ram, 0x4f04d0, 8) COPY (ram, 0x4f04d0, 8), (ram, 0x4f04d0, 8) INDIRECT (ram, 0x4f04d0, 8) , (const, 0x22, 4), (ram, 0x4f04d0, 8) MULTIEQUAL (ram, 0x4f04d0, 8) , (ram, 0x4f04d0, 8) , (ram, 0x4f04d0, 8)]
[ ---  RETURN (const, 0x1, 4)]
