[ ---  CBRANCH (ram, 0x1e9748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e96c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(unique, 0x27900, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0xa5, 1)]
[(unique, 0x1000003b, 4) COPY (register, 0x30, 4), (register, 0x30, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e96e6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5b, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 4) COPY (unique, 0x10000043, 4), (unique, 0x10000043, 4) MULTIEQUAL (unique, 0x1000003b, 4) , (unique, 0x1000003f, 4)]
[ ---  CBRANCH (ram, 0x1e96f8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1), (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x5b, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1), (unique, 0x27900, 1) MULTIEQUAL (unique, 0x27900, 1) , (unique, 0x27900, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1e9700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x2a, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e96d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x3f, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e9720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x5c, 1)]
[ ---  CBRANCH (ram, 0x1e96d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x5d, 1)]
[ ---  CBRANCH (ram, 0x1e9700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000017, 4) , (const, 0x0, 4), (unique, 0x10000017, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e9738, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x2, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x2, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1e96de, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1e9729, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000003f, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1e96c6, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1), (unique, 0x27900, 1) INT_ADD (register, 0x0, 1) , (const, 0xa5, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x4, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1e96de, 1)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x27900, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0xa5, 1)]
[ ---  CBRANCH (ram, 0x1e96b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5b, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1e9710, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x27900, 1) , (const, 0x0, 1), (register, 0x20b, 1) INT_SBORROW (register, 0x0, 1) , (const, 0x5b, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1), (unique, 0x27900, 1) MULTIEQUAL (unique, 0x27900, 1) , (unique, 0x27900, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1e9700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x2a, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e96a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x3f, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1e96a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x5c, 1)]
[ ---  CBRANCH (ram, 0x1e96a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x5d, 1)]
[ ---  CBRANCH (ram, 0x1e9700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000003, 4) , (const, 0x0, 4), (unique, 0x10000003, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1e9729, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000047, 4), (unique, 0x10000047, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1e9697, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x27900, 1) , (const, 0x0, 1), (unique, 0x27900, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0xa5, 1)]
[(register, 0x30, 4) INT_OR (register, 0x30, 4) , (const, 0x4, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1e96aa, 1)]
