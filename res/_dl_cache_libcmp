[(register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000075, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x1000005e, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000066, 4)]
[ ---  CBRANCH (ram, 0x487f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x10000071, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x8, 1) INT_SUB (unique, 0x1000004e, 1) , (const, 0x30, 1), (unique, 0x1000004e, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x487f50, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x1000008a, 1) , (const, 0xa, 1), (unique, 0x1000008a, 1) CAST (register, 0x80, 1), (register, 0x80, 1) INT_SUB (unique, 0x10000044, 1) , (const, 0x30, 1), (unique, 0x10000044, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x487fd2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 1) , (register, 0x8, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffd0, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffd0, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000075, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8)]
[(unique, 0x1000007e, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3a00, 4)]
[(unique, 0x10000071, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x487f8e, 1) , (unique, 0x1000007d, 1), (unique, 0x1000007d, 1) INT_LESS (unique, 0x1000008b, 1) , (const, 0xa, 1), (unique, 0x1000008b, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3a00, 4) INT_ADD (unique, 0x3880, 4) , (unique, 0x3900, 4), (unique, 0x3900, 4) INT_MULT (unique, 0x1000007e, 4) , (const, 0xa, 4), (unique, 0x3880, 4) INT_ADD (unique, 0x10000071, 4) , (const, 0xffffffd0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (unique, 0x10000075, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000082, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000005e, 8) MULTIEQUAL (unique, 0x10000082, 8) , (register, 0x30, 8)]
[(unique, 0x1000006b, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3a00, 4)]
[(unique, 0x10000066, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x487fba, 1) , (unique, 0x1000006a, 1), (unique, 0x1000006a, 1) INT_LESS (unique, 0x1000008c, 1) , (const, 0xa, 1), (unique, 0x1000008c, 1) CAST (unique, 0x1000006f, 1), (unique, 0x1000006f, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3a00, 4) INT_ADD (unique, 0x3880, 4) , (unique, 0x3900, 4), (unique, 0x3900, 4) INT_MULT (unique, 0x1000006b, 4) , (const, 0xa, 4), (unique, 0x3880, 4) INT_ADD (unique, 0x10000066, 4) , (const, 0xffffffd0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x1000005e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x487f0a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000007e, 4) , (unique, 0x1000006b, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x1000007e, 4) , (unique, 0x1000006b, 4)]
[ ---  CBRANCH (ram, 0x487fc9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 1) , (const, 0xa, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x487fcf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000044, 1) , (unique, 0x1000004e, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x487f0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4), (register, 0x0, 4) INT_SEXT (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
