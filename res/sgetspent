[ ---  CBRANCH (ram, 0x20afc9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6638, 4) , (const, 0x0, 4)]
[(ram, 0x4c6638, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c6638, 4) , (const, 0x0, 4)]
[(ram, 0x4c6638, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x20afec, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10e, 4)]
[(ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0x10e, 4)]
[(ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0x10e, 4)]
[(ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0x10e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10e, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100000df, 8), (unique, 0x100000df, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6638, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c6638, 4) MULTIEQUAL (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000010c, 8) COPY (ram, 0x4c6628, 8), (ram, 0x4c6628, 8) MULTIEQUAL (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8)]
[ ---  CBRANCH (ram, 0x20b100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c6630, 8) , (const, 0x0, 8), (ram, 0x4c6630, 8) MULTIEQUAL (ram, 0x4c6630, 8) , (ram, 0x4c6630, 8) , (ram, 0x4c6630, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xec, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xec, 4)]
[(ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0xec, 4), (ram, 0x4c6628, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0xec, 4)]
[(ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0xec, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xec, 4)]
[ ---  CBRANCH (ram, 0x20b131, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016c, 8), (unique, 0x1000016c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000011c, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  BRANCH (ram, 0x20b088, 1)]
[(register, 0x18, 8) COPY (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x20b003, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c6638, 4) MULTIEQUAL (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4)]
[(ram, 0x4c6628, 8) MULTIEQUAL (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000010c, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(unique, 0x10000144, 8) COPY (ram, 0x4c6630, 8), (ram, 0x4c6630, 8) MULTIEQUAL (ram, 0x4c6630, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x20b01a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x53, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0x53, 4), (ram, 0x4c6628, 8) MULTIEQUAL (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8)]
[(ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0x53, 4), (ram, 0x4c6638, 4) MULTIEQUAL (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x53, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x10000104, 8) COPY (ram, 0x4c6630, 8), (ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0x53, 4), (ram, 0x4c6630, 8) COPY (unique, 0x10000154, 8), (unique, 0x10000154, 8) MULTIEQUAL (unique, 0x10000144, 8) , (unique, 0x1000014c, 8)]
[ ---  CBRANCH (ram, 0x20b0e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x20c0b0, 8) , (register, 0x38, 8) , (unique, 0x100000cf, 8) , (ram, 0x4c6630, 8) , (register, 0x18, 8) , (unique, 0x3800, 8), (unique, 0x100000cf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c65e0, 8), (ram, 0x4c6630, 8) COPY (unique, 0x10000154, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3200, 8), (unique, 0x10000154, 8) MULTIEQUAL (unique, 0x10000144, 8) , (unique, 0x1000014c, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000174, 8), (unique, 0x10000174, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000124, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x20b091, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6630, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x68, 4)]
[(ram, 0x4c6628, 8) INDIRECT (unique, 0x1000013c, 8) , (const, 0x68, 4), (unique, 0x1000013c, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (ram, 0x4c6628, 8) , (const, 0x400, 8)]
[(ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0x68, 4)]
[(ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0x68, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x68, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x68, 4)]
[(unique, 0x100000fc, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x68, 4)]
[(unique, 0x1000014c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c6630, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (ram, 0x4c6628, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x20b010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c6630, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (ram, 0x4c6628, 8) , (const, 0x400, 8)]
[(ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0x7c, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x10000104, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x80, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x7c, 4)]
[(ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0x80, 4), (ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0x7c, 4)]
[(ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0x80, 4), (ram, 0x4c6630, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0x80, 4), (ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0x7c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x80, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x7c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000184, 8) , (unique, 0xbc80, 4), (unique, 0x10000184, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000fc, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000114, 8) COPY (unique, 0x100000fc, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c6638, 4) MULTIEQUAL (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4)]
[(ram, 0x4c6630, 8) MULTIEQUAL (ram, 0x4c6630, 8) , (register, 0x0, 8) , (ram, 0x4c6630, 8)]
[(ram, 0x4c6628, 8) MULTIEQUAL (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000012c, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000114, 8) , (unique, 0x1000011c, 8) , (unique, 0x10000124, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c6638, 4) MULTIEQUAL (ram, 0x4c6638, 4) , (ram, 0x4c6638, 4)]
[(ram, 0x4c6630, 8) MULTIEQUAL (ram, 0x4c6630, 8) , (ram, 0x4c6630, 8)]
[(ram, 0x4c6628, 8) MULTIEQUAL (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x1000012c, 8) , (unique, 0x10000124, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x20b0a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000160, 4) COPY (unique, 0x100000ef, 4), (unique, 0x100000ef, 4) INT_ADD (ram, 0x4c6638, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x20b0c7, 1) , (unique, 0x100000f3, 1), (unique, 0x100000f3, 1) INT_NOTEQUAL (unique, 0x100000ef, 4) , (const, 0x0, 4), (unique, 0x100000ef, 4) INT_ADD (ram, 0x4c6638, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc2, 4)]
[(ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0xc2, 4)]
[(ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0xc2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc2, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc2, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6638, 8)]
[(unique, 0x1000015c, 4) COPY (ram, 0x4c6638, 4), (ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0xc2, 4), (ram, 0x4c6638, 4) INT_ADD (ram, 0x4c6638, 4) , (const, 0xffffffff, 4)]
[(unique, 0x10000168, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0xc2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018c, 8) , (register, 0x10, 4), (unique, 0x1000018c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x28, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000168, 4) , (register, 0x10, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9e, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c6628, 8) COPY (ram, 0x4c6628, 8), (ram, 0x4c6628, 8) INDIRECT (ram, 0x4c6628, 8) , (const, 0x9e, 4), (ram, 0x4c6628, 8) MULTIEQUAL (ram, 0x4c6628, 8) , (ram, 0x4c6628, 8)]
[(ram, 0x4c6630, 8) COPY (ram, 0x4c6630, 8), (ram, 0x4c6630, 8) INDIRECT (ram, 0x4c6630, 8) , (const, 0x9e, 4), (ram, 0x4c6630, 8) MULTIEQUAL (ram, 0x4c6630, 8) , (ram, 0x4c6630, 8)]
[(ram, 0x4c6638, 4) COPY (ram, 0x4c6638, 4), (ram, 0x4c6638, 4) INDIRECT (ram, 0x4c6638, 4) , (const, 0x9e, 4), (ram, 0x4c6638, 4) COPY (unique, 0x10000164, 4), (unique, 0x10000164, 4) MULTIEQUAL (unique, 0x1000015c, 4) , (unique, 0x10000160, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x9e, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
