[ ---  CBRANCH (ram, 0x21b96e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7508, 4) , (const, 0x0, 4)]
[(ram, 0x4c7508, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7508, 4) , (const, 0x0, 4)]
[(ram, 0x4c7508, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x21b991, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x101, 4)]
[(ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0x101, 4)]
[(ram, 0x4c7500, 8) INDIRECT (ram, 0x4c7500, 8) , (const, 0x101, 4)]
[(ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0x101, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x101, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x101, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100000f0, 8), (unique, 0x100000f0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7508, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7508, 4) MULTIEQUAL (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000115, 8) COPY (ram, 0x4c7500, 8), (ram, 0x4c7500, 8) MULTIEQUAL (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8)]
[ ---  CBRANCH (ram, 0x21ba90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4838, 8) , (const, 0x0, 8), (ram, 0x4c4838, 8) MULTIEQUAL (ram, 0x4c4838, 8) , (ram, 0x4c4838, 8) , (ram, 0x4c4838, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe6, 4)]
[(ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0xe6, 4)]
[(ram, 0x4c7500, 8) INDIRECT (ram, 0x4c7500, 8) , (const, 0xe6, 4), (ram, 0x4c7500, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0xe6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe6, 4)]
[ ---  CBRANCH (ram, 0x21ba25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000149, 8), (unique, 0x10000149, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[(register, 0x18, 8) COPY (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x21b9a8, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7508, 4) MULTIEQUAL (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4)]
[(ram, 0x4c7500, 8) MULTIEQUAL (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000115, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(unique, 0x1000011d, 8) COPY (ram, 0x4c4838, 8), (ram, 0x4c4838, 8) MULTIEQUAL (ram, 0x4c4838, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x21b9ba, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x58, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x58, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7500, 8) INDIRECT (ram, 0x4c7500, 8) , (const, 0x58, 4), (ram, 0x4c7500, 8) MULTIEQUAL (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8)]
[(ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0x58, 4), (ram, 0x4c7508, 4) MULTIEQUAL (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x58, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x58, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x1000010d, 8) COPY (ram, 0x4c4838, 8), (ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0x58, 4), (ram, 0x4c4838, 8) COPY (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) MULTIEQUAL (unique, 0x1000011d, 8) , (unique, 0x10000125, 8)]
[ ---  CBRANCH (ram, 0x21ba80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x21bad0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x100000e0, 8) , (ram, 0x4c4838, 8) , (register, 0x18, 8) , (unique, 0x3800, 8), (unique, 0x100000e0, 8) CAST (unique, 0x10000151, 8), (unique, 0x10000151, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c74e0, 8), (ram, 0x4c4838, 8) COPY (unique, 0x1000012d, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x100000d2, 8), (unique, 0x1000012d, 8) MULTIEQUAL (unique, 0x1000011d, 8) , (unique, 0x10000125, 8)]
[ ---  CBRANCH (ram, 0x21ba2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4838, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6e, 4)]
[(ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0x6e, 4)]
[(ram, 0x4c7500, 8) INDIRECT (unique, 0x10000135, 8) , (const, 0x6e, 4), (unique, 0x10000135, 8) COPY (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) INT_MULT (ram, 0x4c7500, 8) , (const, 0x2, 8)]
[(ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0x6e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x6e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6e, 4)]
[(unique, 0x10000125, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000159, 8), (unique, 0x10000159, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c4838, 8) , (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) INT_MULT (ram, 0x4c7500, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x21b9b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000159, 8), (unique, 0x10000159, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c4838, 8) , (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) INT_MULT (ram, 0x4c7500, 8) , (const, 0x2, 8)]
[(ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0x7d, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x1000010d, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x82, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x7d, 4)]
[(ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0x82, 4), (ram, 0x4c4838, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7500, 8) INDIRECT (ram, 0x4c7500, 8) , (const, 0x82, 4), (ram, 0x4c7500, 8) INDIRECT (ram, 0x4c7500, 8) , (const, 0x7d, 4)]
[(ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0x82, 4), (ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0x7d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x82, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x7d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000161, 8) , (const, 0xc, 4), (unique, 0x10000161, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x7d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7d, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7508, 4) MULTIEQUAL (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4)]
[(ram, 0x4c7500, 8) MULTIEQUAL (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8)]
[(ram, 0x4c4838, 8) MULTIEQUAL (ram, 0x4c4838, 8) , (register, 0x0, 8) , (ram, 0x4c4838, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c7508, 4) MULTIEQUAL (ram, 0x4c7508, 4) , (ram, 0x4c7508, 4)]
[(ram, 0x4c7500, 8) MULTIEQUAL (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8)]
[(ram, 0x4c4838, 8) MULTIEQUAL (ram, 0x4c4838, 8) , (ram, 0x4c4838, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x21ba42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000141, 4) COPY (unique, 0x10000100, 4), (unique, 0x10000100, 4) INT_ADD (ram, 0x4c7508, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21ba64, 1) , (unique, 0x10000104, 1), (unique, 0x10000104, 1) INT_NOTEQUAL (unique, 0x10000100, 4) , (const, 0x0, 4), (unique, 0x10000100, 4) INT_ADD (ram, 0x4c7508, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc1, 4)]
[(ram, 0x4c4838, 8) INDIRECT (ram, 0x4c4838, 8) , (const, 0xc1, 4)]
[(ram, 0x4c7500, 8) INDIRECT (ram, 0x4c7500, 8) , (const, 0xc1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc1, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100000e8, 8), (unique, 0x100000e8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7508, 8)]
[(unique, 0x1000013d, 4) COPY (ram, 0x4c7508, 4), (ram, 0x4c7508, 4) INDIRECT (ram, 0x4c7508, 4) , (const, 0xc1, 4), (ram, 0x4c7508, 4) INT_ADD (ram, 0x4c7508, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c4838, 8) COPY (ram, 0x4c4838, 8), (ram, 0x4c4838, 8) MULTIEQUAL (ram, 0x4c4838, 8) , (ram, 0x4c4838, 8)]
[(ram, 0x4c7500, 8) COPY (ram, 0x4c7500, 8), (ram, 0x4c7500, 8) MULTIEQUAL (ram, 0x4c7500, 8) , (ram, 0x4c7500, 8)]
[(ram, 0x4c7508, 4) COPY (ram, 0x4c7508, 4), (ram, 0x4c7508, 4) COPY (unique, 0x10000145, 4), (unique, 0x10000145, 4) MULTIEQUAL (unique, 0x1000013d, 4) , (unique, 0x10000141, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
