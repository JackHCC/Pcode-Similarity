[ ---  CBRANCH (ram, 0x152f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1531a8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100004c6, 8) , (const, 0x8, 8), (unique, 0x100004c6, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x152f8a, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x152fb9, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[(unique, 0x100006f1, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000711, 8), (unique, 0x10000711, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005c1, 16) , (unique, 0xbd80, 8), (unique, 0x100005c1, 16) INT_LEFT (unique, 0x100005b1, 16) , (const, 0x40, 16), (unique, 0x100005b1, 16) INT_SEXT (unique, 0x10000719, 8), (unique, 0x10000719, 8) CAST (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005c1, 16) , (unique, 0xbd80, 8), (unique, 0x100005c1, 16) INT_LEFT (unique, 0x100005b1, 16) , (const, 0x40, 16), (unique, 0x100005b1, 16) INT_SEXT (unique, 0x10000719, 8), (unique, 0x10000719, 8) CAST (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100006f1, 8) , (unique, 0x100006f9, 8)]
[(unique, 0x100006f9, 8) COPY (register, 0x88, 8), (register, 0x88, 8) PTRADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100006f1, 8) , (unique, 0x100006f9, 8)]
[ ---  CBRANCH (ram, 0x152fa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x152fe3, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000729, 8), (unique, 0x10000729, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x100006a1, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000721, 8), (unique, 0x10000721, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_LEFT (unique, 0x100003f1, 16) , (const, 0x40, 4), (unique, 0x100003f1, 16) INT_ZEXT (register, 0x10, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100006a1, 8) , (unique, 0x100006a9, 8)]
[(unique, 0x100006a9, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100006a1, 8) , (unique, 0x100006a9, 8)]
[ ---  CBRANCH (ram, 0x152fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100006a1, 8) , (unique, 0x100006a9, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0xc780, 1)]
[ ---  CBRANCH (ram, 0x152e78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x152e70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x152e70, 1)]
[(unique, 0x3680, 8) INT_MULT (register, 0x88, 8) , (const, 0x8, 8)]
[(unique, 0x10000425, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x1000044e, 8) , (const, 0x8, 8), (unique, 0x1000044e, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x1000045e, 8) , (const, 0x8, 8), (unique, 0x1000045e, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000436, 8) , (const, 0x8, 8), (unique, 0x10000436, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1531e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x1000045e, 8) , (const, 0x8, 8), (unique, 0x1000045e, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000436, 8) , (const, 0x8, 8), (unique, 0x10000436, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x153203, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x152d00, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x152bd0, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x154850, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x10000424, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x152d00, 1)]
[(unique, 0x10000423, 1) MULTIEQUAL (unique, 0x10000425, 1) , (unique, 0x10000425, 1) , (unique, 0x10000424, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x152e5c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8), (register, 0x88, 8) INT_SUB (unique, 0x3400, 8) , (register, 0x88, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1530aa, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (register, 0x30, 8) , (register, 0xb0, 8)]
[(unique, 0x10000661, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1530b6, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x30, 8)]
[(unique, 0x10000669, 8) COPY (register, 0x30, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000661, 8) , (unique, 0x10000669, 8)]
[(unique, 0x10000701, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x100004fe, 8) , (const, 0x8, 8), (unique, 0x100004fe, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffd, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000701, 8) , (unique, 0x10000709, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0xa8, 8)]
[(register, 0xb8, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x153134, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000611, 16) , (unique, 0xbd80, 8), (unique, 0x10000611, 16) INT_LEFT (unique, 0x10000601, 16) , (const, 0x40, 16), (unique, 0x10000601, 16) INT_SEXT (unique, 0x10000731, 8), (unique, 0x10000731, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000611, 16) , (unique, 0xbd80, 8), (unique, 0x10000611, 16) INT_LEFT (unique, 0x10000601, 16) , (const, 0x40, 16), (unique, 0x10000601, 16) INT_SEXT (unique, 0x10000731, 8), (unique, 0x10000731, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x10000621, 16) , (const, 0x0, 4), (unique, 0x10000621, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000611, 16) , (unique, 0xbd80, 8), (unique, 0x10000611, 16) INT_LEFT (unique, 0x10000601, 16) , (const, 0x40, 16), (unique, 0x10000601, 16) INT_SEXT (unique, 0x10000731, 8), (unique, 0x10000731, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000611, 16) , (unique, 0xbd80, 8), (unique, 0x10000611, 16) INT_LEFT (unique, 0x10000601, 16) , (const, 0x40, 16), (unique, 0x10000601, 16) INT_SEXT (unique, 0x10000731, 8), (unique, 0x10000731, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x15311e, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x15312b, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x153134, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x153134, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x153110, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x10000317, 8), (unique, 0x10000317, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x153169, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x154900, 8) , (register, 0xa8, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x152a30, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000739, 8), (unique, 0x10000739, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb0, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000709, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1530d0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x0, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x3b80, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10000536, 8) , (const, 0x8, 8), (unique, 0x10000536, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x152d2b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0xb0, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x10000423, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3b80, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0xa8, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000671, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x152d43, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (const, 0xfffffffffffffffe, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffe, 8)]
[(unique, 0x10000679, 8) COPY (unique, 0x3680, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000749, 8), (unique, 0x10000749, 8) INT_ADD (unique, 0x10000741, 8) , (unique, 0x1000046e, 8), (unique, 0x10000741, 8) CAST (register, 0xa0, 8), (unique, 0x1000046e, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000671, 8) , (unique, 0x10000679, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000759, 8), (unique, 0x10000759, 8) INT_ADD (unique, 0x10000751, 8) , (unique, 0x10000476, 8), (unique, 0x10000751, 8) CAST (register, 0xa0, 8), (unique, 0x10000476, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000671, 8) , (unique, 0x10000679, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x28, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x152daf, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212b0, 8) , (unique, 0x3a00, 8) , (unique, 0x3a00, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x152e0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000561, 16) , (unique, 0xbd80, 8), (unique, 0x10000561, 16) INT_LEFT (unique, 0x10000551, 16) , (const, 0x40, 16), (unique, 0x10000551, 16) INT_SEXT (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000561, 16) , (unique, 0xbd80, 8), (unique, 0x10000561, 16) INT_LEFT (unique, 0x10000551, 16) , (const, 0x40, 16), (unique, 0x10000551, 16) INT_SEXT (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x10000571, 16) , (const, 0x0, 4), (unique, 0x10000571, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000561, 16) , (unique, 0xbd80, 8), (unique, 0x10000561, 16) INT_LEFT (unique, 0x10000551, 16) , (const, 0x40, 16), (unique, 0x10000551, 16) INT_SEXT (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000561, 16) , (unique, 0xbd80, 8), (unique, 0x10000561, 16) INT_LEFT (unique, 0x10000551, 16) , (const, 0x40, 16), (unique, 0x10000551, 16) INT_SEXT (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (register, 0x8, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x152df6, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x152e03, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x152e0c, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x152e0c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (unique, 0x1000047e, 8) , (const, 0x8, 8), (unique, 0x1000047e, 8) INT_ADD (register, 0x88, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x152de8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x152e41, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x154900, 8) , (register, 0xa0, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x152a30, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xb8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000769, 8), (unique, 0x10000769, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x152d80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0xffffffffffffffff, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x10000423, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x10000423, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(unique, 0x10000422, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000496, 8) , (const, 0x8, 8), (unique, 0x10000496, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000496, 8) , (const, 0x8, 8), (unique, 0x10000496, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x1531c0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000496, 8) , (const, 0x8, 8), (unique, 0x10000496, 8) INT_ADD (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x1531cb, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x152e9d, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x88, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000421, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x152e9d, 1)]
[(unique, 0x10000420, 1) MULTIEQUAL (unique, 0x10000422, 1) , (unique, 0x10000422, 1) , (unique, 0x10000421, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8)]
[(unique, 0x100006c1, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x152f43, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8)]
[ ---  CBRANCH (ram, 0x152feb, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (register, 0x30, 8) , (unique, 0x3a00, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x100006b1, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x152fff, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x100006b9, 8) COPY (register, 0xb8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100006b1, 8) , (unique, 0x100006b9, 8)]
[(register, 0xa0, 8) INT_2COMP (unique, 0xbd80, 8)]
[(unique, 0x10000681, 8) COPY (unique, 0x3a00, 8)]
[ ---  BRANCH (ram, 0x15302e, 1)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x8, 8) COPY (unique, 0x10000699, 8), (unique, 0x10000699, 8) MULTIEQUAL (unique, 0x10000681, 8) , (unique, 0x10000689, 8) , (unique, 0x10000691, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x153008, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x153090, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (unique, 0xbd80, 8)]
[(register, 0x88, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000641, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x153050, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) CAST (unique, 0x10000771, 8), (unique, 0x10000771, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (unique, 0x12080, 8), (unique, 0x12080, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x80, 8) INT_SUB (register, 0x88, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000691, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x153082, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005e1, 16) , (register, 0x88, 8), (unique, 0x100005e1, 16) INT_LEFT (unique, 0x100005d1, 16) , (const, 0x40, 16), (unique, 0x100005d1, 16) INT_SEXT (unique, 0x10000779, 8), (unique, 0x10000779, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005e1, 16) , (register, 0x88, 8), (unique, 0x100005e1, 16) INT_LEFT (unique, 0x100005d1, 16) , (const, 0x40, 16), (unique, 0x100005d1, 16) INT_SEXT (unique, 0x10000779, 8), (unique, 0x10000779, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x100005f1, 16) , (const, 0x0, 4), (unique, 0x100005f1, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005e1, 16) , (register, 0x88, 8), (unique, 0x100005e1, 16) INT_LEFT (unique, 0x100005d1, 16) , (const, 0x40, 16), (unique, 0x100005d1, 16) INT_SEXT (unique, 0x10000779, 8), (unique, 0x10000779, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(unique, 0x10000631, 8) COPY (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x100005e1, 16) , (register, 0x88, 8), (unique, 0x100005e1, 16) INT_LEFT (unique, 0x100005d1, 16) , (const, 0x40, 16), (unique, 0x100005d1, 16) INT_SEXT (unique, 0x10000779, 8), (unique, 0x10000779, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000631, 8) , (unique, 0x10000639, 8) , (unique, 0x10000641, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x15305c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x15306c, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x15306c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000639, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x153050, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x88, 8), (unique, 0x3400, 8) CAST (unique, 0x10000781, 8), (unique, 0x10000781, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x88, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x80, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x80, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x10000689, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x15302e, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x152eb4, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x8, 8)]
[(register, 0x28, 8) INT_2COMP (unique, 0xbd80, 8)]
[(unique, 0x100006d9, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x152eef, 1)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100006d9, 8) , (unique, 0x100006c9, 8) , (unique, 0x100006d1, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x152ec8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000591, 16) , (register, 0x88, 8), (unique, 0x10000591, 16) INT_LEFT (unique, 0x10000581, 16) , (const, 0x40, 16), (unique, 0x10000581, 16) INT_SEXT (unique, 0x10000789, 8), (unique, 0x10000789, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x2ed00, 16) , (const, 0x0, 4), (unique, 0x2ed00, 16) INT_REM (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000591, 16) , (register, 0x88, 8), (unique, 0x10000591, 16) INT_LEFT (unique, 0x10000581, 16) , (const, 0x40, 16), (unique, 0x10000581, 16) INT_SEXT (unique, 0x10000789, 8), (unique, 0x10000789, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x10, 8) SUBPIECE (unique, 0x100005a1, 16) , (const, 0x0, 4), (unique, 0x100005a1, 16) INT_RIGHT (unique, 0x3e200, 16) , (const, 0x40, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000591, 16) , (register, 0x88, 8), (unique, 0x10000591, 16) INT_LEFT (unique, 0x10000581, 16) , (const, 0x40, 16), (unique, 0x10000581, 16) INT_SEXT (unique, 0x10000789, 8), (unique, 0x10000789, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(unique, 0x10000649, 8) COPY (register, 0x0, 8), (register, 0x0, 8) SUBPIECE (unique, 0x3e200, 16) , (const, 0x0, 4), (unique, 0x3e200, 16) INT_MULT (unique, 0x3e080, 16) , (unique, 0x3e100, 16), (unique, 0x3e100, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x3e080, 16) INT_ZEXT (unique, 0xbd80, 8), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ADD (unique, 0x10000591, 16) , (register, 0x88, 8), (unique, 0x10000591, 16) INT_LEFT (unique, 0x10000581, 16) , (const, 0x40, 16), (unique, 0x10000581, 16) INT_SEXT (unique, 0x10000789, 8), (unique, 0x10000789, 8) CAST (register, 0x80, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0xbd80, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x152f50, 1) , (unique, 0x1000054e, 1), (unique, 0x1000054e, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x88, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3400, 8) CAST (unique, 0x10000791, 8), (unique, 0x10000791, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) INT_SUB (register, 0x88, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100006d1, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x152f43, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x88, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000659, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x152f10, 1)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000649, 8) , (unique, 0x10000651, 8) , (unique, 0x10000659, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x152f1c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x152f2c, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x152f2c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000651, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x152f10, 1) , (unique, 0xc580, 1), (unique, 0xc580, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x88, 8), (unique, 0x3400, 8) CAST (unique, 0x10000799, 8), (unique, 0x10000799, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) INT_SUB (unique, 0x12800, 8) , (unique, 0x12600, 8), (unique, 0x12800, 8) INT_SUB (register, 0x80, 8) , (register, 0x10, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x100006c9, 8) COPY (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x152eef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x88, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100006c1, 8) , (unique, 0x100006c9, 8) , (unique, 0x100006d1, 8) , (register, 0x88, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (unique, 0x10000420, 1)]
