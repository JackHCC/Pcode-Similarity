[ ---  CBRANCH (ram, 0x4541e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000287, 8) , (const, 0x0, 8), (unique, 0x10000287, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000027f, 8), (unique, 0x1000027f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x28, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000277, 8), (unique, 0x10000277, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000026f, 8), (unique, 0x1000026f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001ca, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100001ca, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c2820, 8)]
[ ---  CBRANCH (ram, 0x454158, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x100001ba, 8), (unique, 0x100001ba, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c28c0, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x21b, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21b, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x21b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x21b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21b, 4)]
[ ---  CALL (ram, 0x453d50, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000028f, 8), (unique, 0x1000028f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x28, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x454158, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000150, 8), (unique, 0x10000150, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000297, 8), (unique, 0x10000297, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000168, 8) , (unique, 0x10000158, 8), (unique, 0x10000168, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000158, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000160, 8), (unique, 0x10000160, 8) CAST (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) INT_ADD (unique, 0x1000029f, 8) , (const, 0x8, 8), (unique, 0x1000029f, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000170, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x10000170, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) INT_ADD (unique, 0x100002af, 8) , (const, 0x10, 8), (unique, 0x100002af, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x4a7, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x4a6, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x4a1, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x4a0, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000188, 8) , (unique, 0x10000178, 8), (unique, 0x10000188, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x10000178, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000180, 8), (unique, 0x10000180, 8) CAST (unique, 0x100002c7, 8), (unique, 0x100002c7, 8) INT_ADD (unique, 0x100002bf, 8) , (const, 0x18, 8), (unique, 0x100002bf, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x454210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c88b0, 4) , (const, 0x0, 4)]
[(ram, 0x4c88b0, 4) COPY (const, 0x1, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x20a, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20a, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x20a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x20a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x20a, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000150, 8) , (unique, 0x10000170, 8) , (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c88b0, 8)]
[ ---  BRANCH (ram, 0x454184, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c88b0, 4) , (const, 0x0, 4)]
[(ram, 0x4c88b0, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45419d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x20b, 1) INT_SCARRY (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x75, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002df, 8) , (register, 0x0, 4), (unique, 0x100002df, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x20b, 1)]
[ ---  CBRANCH (ram, 0x4541b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ef, 8) , (register, 0x0, 4), (unique, 0x100002ef, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x80, 1) CAST (unique, 0x100002f7, 1), (unique, 0x100002f7, 1) INT_OR (register, 0x80, 1) , (register, 0x20b, 1), (register, 0x20b, 1) INT_SCARRY (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[(unique, 0x10000263, 4) COPY (ram, 0x4c88b0, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x454240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c88b0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x10000263, 4)]
[ ---  CBRANCH (ram, 0x4541c9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000300, 4), (unique, 0x10000300, 4) CAST (unique, 0x10000263, 4)]
[(register, 0x30, 8) COPY (const, 0x81, 8)]
[(register, 0x0, 8) COPY (const, 0xca, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4541c9, 1)]
[(ram, 0x4c88b0, 4) INT_SUB (ram, 0x4c88b0, 4) , (const, 0x1, 4)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x454271, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x0, 1)]
[(ram, 0x4c88b0, 4) COPY (ram, 0x4c88b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0xd9, 4)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0xd9, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x49dc50, 8)]
[ ---  CALL (ram, 0x41b360, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x114, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd9, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x114, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x114, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x114, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x114, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd9, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x10000267, 8) , (const, 0x114, 4), (unique, 0x10000267, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x114, 4)]
[ ---  CBRANCH (ram, 0x454345, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x45cd90, 8) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) COPY (const, 0x49ef0c, 8)]
[ ---  CBRANCH (ram, 0x454340, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (stack, 0xffffffffffffffa8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_ADD (unique, 0x1000030c, 8) , (const, 0x8, 8), (unique, 0x1000030c, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x136, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x134, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000031c, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x1000031c, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x45437d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x454320, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x151, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x151, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x151, 4)]
[ ---  CBRANCH (ram, 0x45435d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x45cd90, 8) , (register, 0x30, 8) , (unique, 0x100001b2, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x100001b2, 8) COPY (const, 0x49ef0c, 8)]
[ ---  CBRANCH (ram, 0x454358, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b4, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1b4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1b4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1b4, 4)]
[ ---  CALL (ram, 0x45d0a0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1b7, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0x10000324, 8) , (const, 0x10, 8), (unique, 0x10000324, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (unique, 0x10000334, 8) , (const, 0x18, 8), (unique, 0x10000334, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x174, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x171, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (const, 0x10, 8), (unique, 0x10000344, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x454365, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1af, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1af, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1af, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1af, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1af, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x45d0a0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000364, 8), (unique, 0x10000364, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (unique, 0x10000354, 8) , (const, 0x8, 8), (unique, 0x10000354, 8) CAST (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x454320, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bc, 4)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1bc, 4)]
[ ---  CALL (ram, 0x45d0a0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1be, 4), (ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000036c, 8) , (const, 0x0, 8), (unique, 0x1000036c, 8) CAST (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x454320, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c88b0, 4) MULTIEQUAL (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4) , (ram, 0x4c88b0, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x454378, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000374, 8), (unique, 0x10000374, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1a5, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1a5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1a5, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c88b0, 4) COPY (ram, 0x4c88b0, 4), (ram, 0x4c88b0, 4) INDIRECT (ram, 0x4c88b0, 4) , (const, 0x1a5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c88b0, 4) COPY (ram, 0x4c88b0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
