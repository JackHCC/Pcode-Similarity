[ ---  CBRANCH (ram, 0x17ef10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) CALL (ram, 0x1212c0, 8) , (const, 0x228, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x17eebe, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000137, 8), (unique, 0x10000137, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x0, 8) , (const, 0x88, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100000c7, 8) , (const, 0x8, 8), (unique, 0x100000c7, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CALL (ram, 0x18eb50, 8) , (register, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3200, 8) , (unique, 0x100000b7, 8), (unique, 0x100000b7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8), (unique, 0x3200, 8) PTRSUB (unique, 0x100000d7, 8) , (const, 0x18, 8), (unique, 0x100000d7, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000013f, 8) , (unique, 0x100000bf, 8), (unique, 0x1000013f, 8) CAST (unique, 0x3200, 8), (unique, 0x100000bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e82a0, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CALL (ram, 0x18c110, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17ef30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18c4b0, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x18d5c0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x17eebe, 1)]
[(unique, 0x1000011f, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17eebe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000147, 8), (unique, 0x10000147, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x74, 8)]
[ ---  CBRANCH (ram, 0x17eed0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) CAST (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17ef18, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x0, 8) , (const, 0xc0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e8120, 8)]
[ ---  BRANCH (ram, 0x17eee4, 1)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7be0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000157, 8) , (register, 0x10, 8), (unique, 0x10000157, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0xd8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x100000af, 8), (unique, 0x100000af, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7be0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) INT_ADD (unique, 0x1000015f, 8) , (const, 0x130, 8), (unique, 0x1000015f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x0, 8) , (const, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x1000011f, 8) , (unique, 0x1000011f, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
