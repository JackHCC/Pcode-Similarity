[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x38, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000369, 8), (unique, 0x10000369, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000349, 8) COPY (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb8, 8)]
[ ---  CBRANCH (ram, 0x254bf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x24fbe0, 8) , (register, 0x38, 8) , (unique, 0x10000371, 8), (unique, 0x10000371, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbb8, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x254a66, 1)]
[(unique, 0x10000341, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x18, 8) COPY (unique, 0x10000351, 8), (unique, 0x10000351, 8) MULTIEQUAL (unique, 0x10000341, 8) , (unique, 0x10000349, 8)]
[ ---  CBRANCH (ram, 0x2549ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) COPY (unique, 0x10000351, 8), (unique, 0x10000351, 8) MULTIEQUAL (unique, 0x10000341, 8) , (unique, 0x10000349, 8)]
[(register, 0x10, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000359, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2549f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000035d, 4) COPY (register, 0x10, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000359, 4) , (unique, 0x1000035d, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000381, 8), (unique, 0x10000381, 8) INT_ADD (unique, 0x10000379, 8) , (const, 0x6, 8), (unique, 0x10000379, 8) CAST (register, 0x18, 8)]
[(unique, 0x10000331, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x254a01, 1) , (register, 0x206, 1)]
[(unique, 0x10000339, 8) COPY (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc1, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000391, 8), (unique, 0x10000391, 8) CALL (ram, 0x1211e0, 8) , (const, 0x488, 8) , (const, 0x1, 8)]
[(unique, 0x10000129, 4) INT_SUB (unique, 0x10000131, 4) , (unique, 0x10000141, 4), (unique, 0x10000141, 4) SUBPIECE (unique, 0x3c80, 8) , (const, 0x0, 4), (unique, 0x10000131, 4) INT_SUB (unique, 0x10000149, 4) , (unique, 0x10000151, 4), (unique, 0x10000151, 4) INT_ZEXT (register, 0x200, 1), (unique, 0x10000149, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000331, 8) , (unique, 0x10000339, 8)]
[ ---  CBRANCH (ram, 0x254a2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000389, 8), (unique, 0x10000389, 8) CALL (ram, 0x1212c0, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x254a98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254abb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (unique, 0x3200, 8) , (unique, 0x3c80, 8) , (register, 0x10, 8), (unique, 0x3200, 8) CAST (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) INT_ADD (unique, 0x10000399, 8) , (const, 0x84, 8), (unique, 0x10000399, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000129, 4) , (const, 0x2, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x174, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x174, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x170, 4)]
[(unique, 0x10000321, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffab8, 8)]
[ ---  CBRANCH (ram, 0x254ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258c30, 8) , (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffab8, 8)]
[(unique, 0x10000319, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000329, 8), (unique, 0x10000329, 8) MULTIEQUAL (unique, 0x10000319, 8) , (unique, 0x10000321, 8)]
[ ---  CBRANCH (ram, 0x254ad3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000329, 8), (unique, 0x10000329, 8) MULTIEQUAL (unique, 0x10000319, 8) , (unique, 0x10000321, 8)]
[(register, 0x30, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000361, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x254af7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x10000365, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000361, 4) , (unique, 0x10000365, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) INT_ADD (unique, 0x100003b1, 8) , (const, 0x6, 8), (unique, 0x100003b1, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000309, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x254b01, 1) , (register, 0x206, 1)]
[(unique, 0x10000311, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c1, 8) , (register, 0x10, 4), (unique, 0x100003c1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000309, 8) , (unique, 0x10000311, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000309, 8) , (unique, 0x10000311, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c9, 8) , (unique, 0x10000189, 4), (unique, 0x100003c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x10000189, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x222, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x219, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x222, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x219, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (unique, 0x10000189, 4) , (const, 0x1, 4), (unique, 0x10000189, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x254abb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_ADD (unique, 0x10000189, 4) , (const, 0x1, 4), (unique, 0x10000189, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x254abb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x251, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x251, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d9, 8), (unique, 0x100003d9, 8) INT_ADD (unique, 0x100003d1, 8) , (const, 0x34, 8), (unique, 0x100003d1, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254ba2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001d2, 4), (unique, 0x3100, 8) CAST (unique, 0x10000409, 8), (unique, 0x10000409, 8) INT_ADD (unique, 0x10000401, 8) , (const, 0x24, 8), (unique, 0x10000401, 8) CAST (register, 0x0, 8), (unique, 0x100001d2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003e1, 8), (unique, 0x100003e1, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000411, 8) , (unique, 0x100001d6, 4), (unique, 0x10000411, 8) CAST (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x100001d6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) CAST (unique, 0x100001da, 8), (unique, 0x100001da, 8) PTRADD (unique, 0x10000270, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10000270, 8) PTRSUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000202, 8) , (unique, 0x100001e2, 4), (unique, 0x10000202, 8) CAST (unique, 0x10000421, 8), (unique, 0x10000421, 8) INT_ADD (unique, 0x10000419, 8) , (const, 0x2c, 8), (unique, 0x10000419, 8) CAST (register, 0x0, 8), (unique, 0x100001e2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f1, 8), (unique, 0x100003f1, 8) CAST (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) PTRADD (unique, 0x10000288, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10000288, 8) PTRSUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000429, 8) , (unique, 0x100001ee, 4), (unique, 0x10000429, 8) CAST (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x100001ee, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) CAST (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) PTRADD (unique, 0x100002a0, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x100002a0, 8) PTRSUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000431, 8) , (register, 0x0, 4), (unique, 0x10000431, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) CAST (unique, 0x10000441, 8), (unique, 0x10000441, 8) INT_ADD (unique, 0x10000439, 8) , (const, 0x1c, 8), (unique, 0x10000439, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254bf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b3, 4)]
[ ---  CBRANCH (ram, 0x254bbb, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258550, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000301, 8) , (const, 0x3, 4), (unique, 0x10000301, 8) PTRSUB (unique, 0x100002d0, 8) , (const, 0x0, 8), (unique, 0x100002d0, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e0, 8) , (const, 0x3, 4), (unique, 0x100002e0, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000449, 8), (unique, 0x10000449, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000451, 8), (unique, 0x10000451, 8) CAST (unique, 0x10000220, 8), (unique, 0x10000220, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea460, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x254abb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x254860, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x164, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x164, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x254a37, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254a66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254a4d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x114, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x114, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x254a5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x124, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x124, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x132, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x132, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x254c0a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000459, 8), (unique, 0x10000459, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
