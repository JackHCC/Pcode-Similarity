[(unique, 0x100002c9, 8) COPY (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[ ---  CBRANCH (ram, 0x233467, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22ebc0, 8) , (register, 0x38, 8) , (unique, 0x100002e9, 8), (unique, 0x100002e9, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002c1, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x18, 8) COPY (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) MULTIEQUAL (unique, 0x100002c1, 8) , (unique, 0x100002c9, 8)]
[ ---  CBRANCH (ram, 0x2333cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) COPY (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) MULTIEQUAL (unique, 0x100002c1, 8) , (unique, 0x100002c9, 8)]
[(register, 0x10, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100002d9, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2333f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100002dd, 4) COPY (register, 0x10, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100002d9, 4) , (unique, 0x100002dd, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) INT_ADD (unique, 0x100002f1, 8) , (const, 0x6, 8), (unique, 0x100002f1, 8) CAST (register, 0x18, 8)]
[(unique, 0x100002b1, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2333ff, 1) , (register, 0x206, 1)]
[(unique, 0x100002b9, 8) COPY (unique, 0x3100, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000309, 8), (unique, 0x10000309, 8) CALL (ram, 0x11f870, 8) , (const, 0x488, 8) , (const, 0x1, 8)]
[(unique, 0x10000128, 4) INT_SUB (unique, 0x10000130, 4) , (unique, 0x10000140, 4), (unique, 0x10000140, 4) SUBPIECE (unique, 0x3c80, 8) , (const, 0x0, 4), (unique, 0x10000130, 4) INT_SUB (unique, 0x10000148, 4) , (unique, 0x10000150, 4), (unique, 0x10000150, 4) INT_ZEXT (register, 0x200, 1), (unique, 0x10000148, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x100002b1, 8) , (unique, 0x100002b9, 8)]
[ ---  CBRANCH (ram, 0x23342c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x233480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x233439, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3200, 8) , (unique, 0x3c80, 8) , (register, 0x10, 4), (unique, 0x3200, 8) INT_ADD (unique, 0x10000311, 8) , (const, 0x84, 8), (unique, 0x10000311, 8) CAST (register, 0x0, 8), (register, 0x10, 4) INT_ADD (unique, 0x10000128, 4) , (const, 0xfffffffe, 4)]
[(unique, 0x100002a1, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffac8, 8)]
[ ---  CBRANCH (ram, 0x233431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x237130, 8) , (unique, 0x10000319, 8), (unique, 0x10000319, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffac8, 8)]
[(unique, 0x10000299, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) MULTIEQUAL (unique, 0x10000299, 8) , (unique, 0x100002a1, 8)]
[ ---  CBRANCH (ram, 0x2334a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x38, 4), (register, 0x38, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) MULTIEQUAL (unique, 0x10000299, 8) , (unique, 0x100002a1, 8)]
[(register, 0x38, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100002e1, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2334ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100002e5, 4) COPY (register, 0x38, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100002e1, 4) , (unique, 0x100002e5, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000329, 8), (unique, 0x10000329, 8) INT_ADD (unique, 0x10000321, 8) , (const, 0x6, 8), (unique, 0x10000321, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000289, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2334d4, 1) , (register, 0x206, 1)]
[(unique, 0x10000291, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000331, 8) , (register, 0x10, 4), (unique, 0x10000331, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000289, 8) , (unique, 0x10000291, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000289, 8) , (unique, 0x10000291, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000339, 8) , (unique, 0x10000180, 4), (unique, 0x10000339, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x10000180, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_ADD (unique, 0x10000180, 4) , (const, 0x1, 4), (unique, 0x10000180, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x233431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xfffffffc, 4), (register, 0x10, 4) INT_SUB (unique, 0x12800, 4) , (unique, 0x12600, 4), (unique, 0x12800, 4) INT_SUB (register, 0x10, 4) , (register, 0x18, 4), (register, 0x18, 4) SUBPIECE (unique, 0x3800, 8) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000289, 8) , (unique, 0x10000291, 8)]
[ ---  CBRANCH (ram, 0x233431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x10, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000341, 8) , (const, 0x0, 4), (unique, 0x10000341, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000351, 8), (unique, 0x10000351, 8) INT_ADD (unique, 0x10000349, 8) , (const, 0x34, 8), (unique, 0x10000349, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2335df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000369, 8), (unique, 0x10000369, 8) INT_ADD (unique, 0x10000361, 8) , (const, 0x24, 8), (unique, 0x10000361, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000359, 8), (unique, 0x10000359, 8) CAST (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000381, 8), (unique, 0x10000381, 8) INT_ADD (unique, 0x10000379, 8) , (const, 0x2c, 8), (unique, 0x10000379, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000371, 8), (unique, 0x10000371, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x1000022e, 8) PTRSUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000389, 8) , (register, 0x0, 4), (unique, 0x10000389, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) CAST (unique, 0x10000399, 8), (unique, 0x10000399, 8) INT_ADD (unique, 0x10000391, 8) , (const, 0x1c, 8), (unique, 0x10000391, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2335e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23359b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x236b20, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027f, 8) , (const, 0x3, 4), (unique, 0x1000027f, 8) PTRSUB (unique, 0x1000024e, 8) , (const, 0x0, 8), (unique, 0x1000024e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000025e, 8) , (const, 0x3, 4), (unique, 0x1000025e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003a9, 8), (unique, 0x100003a9, 8) CAST (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1660, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x233431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x233280, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2335d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23344f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x23345d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
