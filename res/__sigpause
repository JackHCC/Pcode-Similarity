[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000058, 8) INT_ZEXT (unique, 0x10000174, 4), (unique, 0x10000174, 4) CAST (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x135ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x9e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x9e, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x9e, 4)]
[(register, 0x0, 4) CALL (ram, 0x214810, 8)]
[ ---  CBRANCH (ram, 0x135b18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10b, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x10b, 4)]
[ ---  CBRANCH (ram, 0x135b3b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x135710, 8) , (const, 0x0, 4) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x11b, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x11b, 4)]
[ ---  CBRANCH (ram, 0x135af1, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1360a0, 8) , (unique, 0x3800, 8) , (register, 0x38, 4)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x135af9, 1)]
[(unique, 0x1000014c, 8) COPY (unique, 0x10000180, 8), (unique, 0x10000180, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000014c, 8) , (unique, 0x10000154, 8)]
[(unique, 0x1000016c, 8) COPY (unique, 0x10000058, 8)]
[ ---  CBRANCH (ram, 0x135af1, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd3, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xd3, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000016c, 8) , (stack, 0xffffffffffffff68, 8)]
[(register, 0x0, 4) CALL (ram, 0x1357c0, 8) , (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x10000188, 8), (unique, 0x10000188, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xdb, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CALL (ram, 0x214870, 8) , (register, 0x0, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xdb, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000154, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000012c, 8) , (const, 0x8, 8), (unique, 0x1000012c, 8) INT_ADD (unique, 0x10000124, 8) , (const, 0x1, 8), (unique, 0x10000124, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x135aee, 1)]
[ ---  CBRANCH (ram, 0x135a90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x7b, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x7b, 4)]
[ ---  CBRANCH (ram, 0x135ab3, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x135710, 8) , (const, 0x0, 4) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000190, 8), (unique, 0x10000190, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x8b, 4)]
[ ---  CBRANCH (ram, 0x135a78, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1360a0, 8) , (unique, 0x3800, 8) , (register, 0x38, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x135a80, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x10000198, 4), (unique, 0x10000198, 4) CAST (register, 0x38, 4)]
[(unique, 0x1000015c, 8) COPY (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff70, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000015c, 8) , (unique, 0x10000164, 8)]
[ ---  CBRANCH (ram, 0x135a78, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff68, 8)]
[(register, 0x0, 4) CALL (ram, 0x1357c0, 8) , (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000164, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x135a75, 1)]
