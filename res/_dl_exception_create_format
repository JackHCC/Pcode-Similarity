[(unique, 0x10000387, 8) COPY (register, 0x8, 8)]
[(unique, 0x1000038f, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000397, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x487ea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff70, 8) COPY (const, 0x1, 8)]
[(register, 0x18, 8) COPY (const, 0x2, 8)]
[(register, 0xa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b0c15, 8)]
[ ---  BRANCH (ram, 0x487adc, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000387, 8) , (const, 0x35, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000038f, 8) , (const, 0x35, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000397, 8) , (const, 0x35, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x1000039f, 8), (unique, 0x1000039f, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000397, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000038f, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000387, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffff70, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x100003a7, 8), (unique, 0x100003a7, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff80, 4) COPY (const, 0x18, 4)]
[(unique, 0x100002db, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x487b91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0x3c80, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100002cb, 8) , (unique, 0x100002d3, 8) , (unique, 0x100002db, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100002cb, 8) , (unique, 0x100002d3, 8) , (unique, 0x100002db, 8)]
[ ---  CBRANCH (ram, 0x487b18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x25, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x0, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x487cba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x78, 1)]
[ ---  CBRANCH (ram, 0x487c98, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x78, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x487cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x7a, 1)]
[ ---  CBRANCH (ram, 0x487cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6c, 1)]
[ ---  CBRANCH (ram, 0x487e93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x78, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x10, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0x10000315, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x487b21, 1)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000314, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x487b21, 1)]
[ ---  CBRANCH (ram, 0x487c9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x73, 1)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000313, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x487b21, 1)]
[ ---  CBRANCH (ram, 0x487e80, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffff80, 4) , (const, 0x30, 4)]
[(unique, 0x10000293, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000031f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x487b6b, 1)]
[(register, 0x0, 4) INT_ADD (stack, 0xffffffffffffff80, 4) , (const, 0x8, 4)]
[(unique, 0x1000028b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100003b7, 8), (unique, 0x100003b7, 8) INT_ADD (unique, 0x100003af, 8) , (register, 0x10, 8), (unique, 0x100003af, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (register, 0x10, 8) INT_ZEXT (stack, 0xffffffffffffff80, 4)]
[(unique, 0x10000317, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000317, 8) , (unique, 0x1000031f, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcd, 4)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000028b, 8) , (unique, 0x10000293, 8)]
[(unique, 0x100002cb, 8) COPY (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x487b25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000316, 1) COPY (unique, 0xbb00, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x100002d3, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x487b88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0x10000313, 1) , (unique, 0x10000314, 1) , (unique, 0x10000315, 1) , (unique, 0x10000316, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x487e40, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100003bf, 8) , (const, 0x0, 8), (unique, 0x100003bf, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x487e40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c7, 8), (unique, 0x100003c7, 8) CALL (ram, 0x426550, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffff80, 4) COPY (const, 0x18, 4)]
[(register, 0x18, 8) PTRADD (register, 0x0, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019a, 8) , (register, 0x0, 8), (unique, 0x1000019a, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x100003cf, 8), (unique, 0x100003cf, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x10000252, 8) MULTIEQUAL (unique, 0x3c80, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x10000264, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000026c, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(unique, 0x10000270, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000278, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000280, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100002bb, 8) COPY (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x487c08, 1) , (unique, 0x1000025b, 1), (unique, 0x1000025b, 1) INT_NOTEQUAL (unique, 0x1000025a, 1) , (const, 0x0, 1), (unique, 0x1000025a, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000280, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000278, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000270, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000252, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (unique, 0x1000026c, 4) , (stack, 0xffffffffffffff80, 4)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000264, 8) , (unique, 0x3100, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100002bb, 8) , (unique, 0x100002c3, 8)]
[ ---  CBRANCH (ram, 0x487be8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x25, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0x1000025a, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x487eca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (register, 0x0, 1)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000030b, 8) COPY (register, 0xb0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x487db8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x73, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x487e30, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffff80, 4) , (const, 0x30, 4)]
[(unique, 0x100002b3, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000034f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x487dcf, 1)]
[(register, 0x0, 4) INT_ADD (stack, 0xffffffffffffff80, 4) , (const, 0x8, 4)]
[(unique, 0x100002ab, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100003df, 8), (unique, 0x100003df, 8) INT_ADD (unique, 0x100003d7, 8) , (register, 0x10, 8), (unique, 0x100003d7, 8) CAST (unique, 0x3800, 8), (register, 0x10, 8) INT_ZEXT (stack, 0xffffffffffffff80, 4)]
[(unique, 0x10000347, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000347, 8) , (unique, 0x1000034f, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x317, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x317, 4)]
[ ---  CBRANCH (ram, 0x487eca, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000182, 8) , (const, 0x1, 8), (unique, 0x10000182, 8) INT_2COMP (unique, 0x100003ef, 8), (unique, 0x100003ef, 8) CAST (register, 0x28, 8), (register, 0x0, 8) CAST (unique, 0x100003e7, 8), (unique, 0x100003e7, 8) CALL (ram, 0x401190, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x331, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x331, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x331, 4)]
[(register, 0x0, 8) CAST (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) CALL (ram, 0x401160, 8) , (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000303, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x487bfb, 1)]
[ ---  CBRANCH (ram, 0x487cd0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbb00, 1) , (const, 0x74, 1)]
[ ---  CBRANCH (ram, 0x487d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x78, 1)]
[ ---  CBRANCH (ram, 0x487d34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x7a, 1)]
[ ---  CBRANCH (ram, 0x487e00, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffff80, 4) , (const, 0x30, 4)]
[(unique, 0x100002a3, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000033f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x487cf3, 1)]
[(register, 0x0, 4) INT_ADD (stack, 0xffffffffffffff80, 4) , (const, 0x8, 4)]
[(unique, 0x1000029b, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000407, 8), (unique, 0x10000407, 8) INT_ADD (unique, 0x100003ff, 8) , (register, 0x10, 8), (unique, 0x100003ff, 8) CAST (unique, 0x3800, 8), (register, 0x10, 8) INT_ZEXT (stack, 0xffffffffffffff80, 4)]
[(unique, 0x10000337, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000337, 8) , (unique, 0x1000033f, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b5, 4)]
[ ---  CBRANCH (ram, 0x487ec2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x28, 8), (register, 0x0, 8) CAST (unique, 0x10000417, 8), (unique, 0x10000417, 8) CALL (ram, 0x46b290, 8) , (unique, 0xbc80, 4) , (unique, 0x3100, 8) , (const, 0x10, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000040f, 8), (unique, 0x1000040f, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000029b, 8) , (unique, 0x100002a3, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2cf, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2cf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2cf, 4)]
[ ---  CALL (ram, 0x401120, 8) , (register, 0x28, 8) , (const, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000123, 8) , (const, 0x1, 8), (unique, 0x10000123, 8) INT_2COMP (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) CAST (register, 0x28, 8)]
[(unique, 0x100002fb, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x487bfb, 1)]
[ ---  CBRANCH (ram, 0x487d30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x25, 1)]
[ ---  CBRANCH (ram, 0x487d94, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x6c, 1)]
[ ---  CBRANCH (ram, 0x487d94, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x78, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x485480, 8) , (const, 0x2, 8) , (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) COPY (const, 0x4b09a0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x268, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x264, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x268, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x264, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x268, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x264, 4)]
[ ---  CALL (ram, 0x454cb0, 8) , (const, 0x7f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x487e18, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffff80, 4) , (const, 0x30, 4)]
[(unique, 0x100002eb, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000032f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x487d56, 1)]
[(register, 0x0, 4) INT_ADD (stack, 0xffffffffffffff80, 4) , (const, 0x8, 4)]
[(unique, 0x100002e3, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) INT_ADD (unique, 0x10000427, 8) , (register, 0x38, 8), (unique, 0x10000427, 8) CAST (unique, 0x3800, 8), (register, 0x38, 8) INT_ZEXT (stack, 0xffffffffffffff80, 4)]
[(unique, 0x10000327, 8) COPY (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000327, 8) , (unique, 0x1000032f, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x21f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21f, 4)]
[ ---  CBRANCH (ram, 0x487d84, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x28, 8), (register, 0x0, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) CALL (ram, 0x46b290, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (const, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100002e3, 8) , (unique, 0x100002eb, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x238, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x238, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x238, 4)]
[ ---  CALL (ram, 0x401120, 8) , (register, 0x28, 8) , (const, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000153, 8) , (const, 0x1, 8), (unique, 0x10000153, 8) INT_2COMP (unique, 0x1000043f, 8), (unique, 0x1000043f, 8) CAST (register, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100002f3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x487bfb, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8) , (unique, 0x10000303, 8) , (unique, 0x1000030b, 8) , (unique, 0x3100, 8)]
[(unique, 0x100002c3, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x487c50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8) , (unique, 0x10000303, 8) , (unique, 0x1000030b, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x487eca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0x28, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (const, 0x25, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000280, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000278, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000270, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x487eca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x1000025c, 8) , (register, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x487eca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (stack, 0xffffffffffffff70, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (unique, 0x100000ea, 8) , (const, 0x1, 8), (unique, 0x100000ea, 8) INT_2COMP (unique, 0x10000447, 8), (unique, 0x10000447, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x155, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x155, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x155, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401060, 8) , (unique, 0x3100, 8) , (register, 0xa0, 8) , (stack, 0xffffffffffffff70, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x174, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x174, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x174, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x487990, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b0c15, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a2, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) COPY (const, 0x4b09d8, 8), (unique, 0x100001a2, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8)]
