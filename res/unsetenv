[ ---  CBRANCH (ram, 0x46ac10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x46ac10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0x30, 4)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x46ac10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4011a0, 8) , (register, 0x38, 8) , (const, 0x3d, 8)]
[(register, 0x80, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0x148, 4), (ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0x148, 4), (ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x46ab7b, 1)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0x3f, 4)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0x3f, 4)]
[(register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x46abb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000da, 8), (unique, 0x100000da, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f20, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f20, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x142, 4)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0x142, 4)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0x142, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000096, 8), (unique, 0x10000096, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7f20, 8)]
[ ---  BRANCH (ram, 0x46ab2d, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f20, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f20, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100000ca, 8) COPY (ram, 0x4c7cd8, 8), (ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[ ---  CBRANCH (ram, 0x46ab5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7cd8, 8) , (const, 0x0, 8), (ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[(ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[(ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x46ab40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100000ca, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe1, 4)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0xe1, 4)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0xe1, 4)]
[ ---  CBRANCH (ram, 0x46ab59, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4010d0, 8) , (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x0, 8)]
[(unique, 0x100000c2, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x46ab90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000e2, 8), (unique, 0x100000e2, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0x116, 4), (ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0x116, 4), (ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000ba, 8) , (unique, 0x100000c2, 8)]
[(unique, 0x100000ba, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000ba, 8) , (unique, 0x100000c2, 8)]
[ ---  CBRANCH (ram, 0x46ab98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000ba, 8) , (unique, 0x100000c2, 8)]
[(ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[(unique, 0x100000b6, 4) COPY (ram, 0x4c7f20, 4), (ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[ ---  CBRANCH (ram, 0x46abe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000ea, 8), (unique, 0x100000ea, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7f20, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46ab7b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x100000b6, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x46ab7b, 1)]
[(ram, 0x4c7f20, 4) INT_ADD (ram, 0x4c7f20, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7cd8, 8) COPY (ram, 0x4c7cd8, 8), (ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8)]
[(ram, 0x4c7f20, 4) COPY (ram, 0x4c7f20, 4), (ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x80, 4), (register, 0x80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
