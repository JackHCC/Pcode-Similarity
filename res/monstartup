[(ram, 0x4eb3b8, 8) COPY (const, 0x2, 8)]
[(ram, 0x4eb3c0, 8) COPY (const, 0x4, 8)]
[(register, 0x28, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x7, 8), (register, 0x8, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x1, 4), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (register, 0x38, 8), (register, 0x18, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x3, 8), (register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x223fe8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x32, 8), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x19, 8), (register, 0x10, 8) INT_RIGHT (unique, 0x1000004b, 8) , (const, 0x2, 4), (unique, 0x1000004b, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (register, 0x38, 8), (register, 0x18, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x3, 8), (register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x224010, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x100001, 8)]
[(register, 0xa8, 8) INT_MULT (register, 0x10, 8) , (const, 0x18, 8)]
[ ---  BRANCH (ram, 0x223f2d, 1)]
[(ram, 0x4eb398, 8) COPY (const, 0x100000, 8)]
[(register, 0xa8, 8) COPY (const, 0x1800000, 8)]
[ ---  BRANCH (ram, 0x223f2d, 1)]
[(ram, 0x4eb398, 8) COPY (const, 0x32, 8)]
[(register, 0xa8, 8) COPY (const, 0x4b0, 8)]
[(ram, 0x2bcb0c, 4) INDIRECT (ram, 0x2bcb0c, 4) , (const, 0xc6, 4)]
[(ram, 0x4eb360, 8) INDIRECT (ram, 0x4eb360, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb368, 8) INDIRECT (ram, 0x4eb368, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb370, 8) INDIRECT (unique, 0x10000106, 8) , (const, 0xc6, 4), (unique, 0x10000106, 8) COPY (register, 0x28, 8)]
[(ram, 0x4eb378, 8) INDIRECT (ram, 0x4eb378, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb380, 8) INDIRECT (register, 0x8, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb388, 8) INDIRECT (ram, 0x4eb388, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb390, 8) INDIRECT (unique, 0x10000116, 8) , (const, 0xc6, 4), (unique, 0x10000116, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(ram, 0x4eb398, 8) INDIRECT (ram, 0x4eb398, 8) , (const, 0xc6, 4), (ram, 0x4eb398, 8) MULTIEQUAL (ram, 0x4eb398, 8) , (ram, 0x4eb398, 8) , (register, 0x10, 8)]
[(ram, 0x4eb3a0, 8) INDIRECT (unique, 0x1000011e, 8) , (const, 0xc6, 4), (unique, 0x1000011e, 8) COPY (register, 0x38, 8)]
[(ram, 0x4eb3a8, 8) INDIRECT (unique, 0x10000126, 8) , (const, 0xc6, 4), (unique, 0x10000126, 8) COPY (register, 0x18, 8)]
[(ram, 0x4eb3b0, 8) INDIRECT (register, 0x0, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb3b8, 8) INDIRECT (ram, 0x4eb3b8, 8) , (const, 0xc6, 4)]
[(ram, 0x4eb3c0, 8) INDIRECT (ram, 0x4eb3c0, 8) , (const, 0xc6, 4)]
[(ram, 0x4ee438, 4) INDIRECT (ram, 0x4ee438, 4) , (const, 0xc6, 4)]
[ ---  CBRANCH (ram, 0x224048, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1211e0, 8) , (unique, 0x3400, 8) , (const, 0x1, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0xa8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x28, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(ram, 0x4eb360, 8) INDIRECT (ram, 0x4eb360, 8) , (const, 0x147, 4)]
[(ram, 0x4eb388, 8) INDIRECT (ram, 0x4eb388, 8) , (const, 0x147, 4)]
[ ---  CALL (ram, 0x2101e0, 8) , (const, 0x2, 8) , (unique, 0x100000fe, 8) , (const, 0x1a, 8), (unique, 0x100000fe, 8) COPY (const, 0x2b6645, 8)]
[(ram, 0x2bcb0c, 4) COPY (ram, 0x2bcb0c, 4), (ram, 0x2bcb0c, 4) INDIRECT (ram, 0x2bcb0c, 4) , (const, 0x147, 4)]
[(ram, 0x4eb360, 8) COPY (const, 0x2, 8)]
[(ram, 0x4eb368, 8) COPY (ram, 0x4eb368, 8), (ram, 0x4eb368, 8) INDIRECT (ram, 0x4eb368, 8) , (const, 0x147, 4)]
[(ram, 0x4eb370, 8) COPY (ram, 0x4eb370, 8), (ram, 0x4eb370, 8) INDIRECT (ram, 0x4eb370, 8) , (const, 0x147, 4)]
[(ram, 0x4eb378, 8) COPY (ram, 0x4eb378, 8), (ram, 0x4eb378, 8) INDIRECT (ram, 0x4eb378, 8) , (const, 0x147, 4)]
[(ram, 0x4eb380, 8) COPY (ram, 0x4eb380, 8), (ram, 0x4eb380, 8) INDIRECT (ram, 0x4eb380, 8) , (const, 0x147, 4)]
[(ram, 0x4eb388, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eb390, 8) COPY (ram, 0x4eb390, 8), (ram, 0x4eb390, 8) INDIRECT (ram, 0x4eb390, 8) , (const, 0x147, 4)]
[(ram, 0x4eb398, 8) COPY (ram, 0x4eb398, 8), (ram, 0x4eb398, 8) INDIRECT (ram, 0x4eb398, 8) , (const, 0x147, 4)]
[(ram, 0x4eb3a0, 8) COPY (ram, 0x4eb3a0, 8), (ram, 0x4eb3a0, 8) INDIRECT (ram, 0x4eb3a0, 8) , (const, 0x147, 4)]
[(ram, 0x4eb3a8, 8) COPY (ram, 0x4eb3a8, 8), (ram, 0x4eb3a8, 8) INDIRECT (ram, 0x4eb3a8, 8) , (const, 0x147, 4)]
[(ram, 0x4eb3b0, 8) COPY (ram, 0x4eb3b0, 8), (ram, 0x4eb3b0, 8) INDIRECT (ram, 0x4eb3b0, 8) , (const, 0x147, 4)]
[(ram, 0x4eb3b8, 8) COPY (ram, 0x4eb3b8, 8), (ram, 0x4eb3b8, 8) INDIRECT (ram, 0x4eb3b8, 8) , (const, 0x147, 4)]
[(ram, 0x4eb3c0, 8) COPY (ram, 0x4eb3c0, 8), (ram, 0x4eb3c0, 8) INDIRECT (ram, 0x4eb3c0, 8) , (const, 0x147, 4)]
[(ram, 0x4ee438, 4) COPY (ram, 0x4ee438, 4), (ram, 0x4ee438, 4) INDIRECT (ram, 0x4ee438, 4) , (const, 0x147, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x2bcb0c, 4) INDIRECT (ram, 0x2bcb0c, 4) , (const, 0xe1, 4)]
[(ram, 0x4eb360, 8) INDIRECT (ram, 0x4eb360, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb370, 8) INDIRECT (ram, 0x4eb370, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb380, 8) INDIRECT (ram, 0x4eb380, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb388, 8) INDIRECT (unique, 0x1000010e, 8) , (const, 0xe1, 4), (unique, 0x1000010e, 8) COPY (register, 0x0, 8)]
[(ram, 0x4eb390, 8) INDIRECT (ram, 0x4eb390, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb398, 8) INDIRECT (ram, 0x4eb398, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb3a0, 8) INDIRECT (ram, 0x4eb3a0, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb3a8, 8) INDIRECT (ram, 0x4eb3a8, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb3b0, 8) INDIRECT (ram, 0x4eb3b0, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb3b8, 8) INDIRECT (ram, 0x4eb3b8, 8) , (const, 0xe1, 4)]
[(ram, 0x4eb3c0, 8) INDIRECT (ram, 0x4eb3c0, 8) , (const, 0xe1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000146, 8), (unique, 0x10000146, 8) INT_ADD (unique, 0x1000013e, 8) , (const, 0x10, 8), (unique, 0x1000013e, 8) CAST (register, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x10000, 4)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x1000014e, 8) , (register, 0x28, 8), (unique, 0x1000014e, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000136, 8), (unique, 0x10000136, 8) INT_ADD (unique, 0x1000012e, 8) , (register, 0xa8, 8), (unique, 0x1000012e, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x223fb1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x28, 8) , (unique, 0x10000156, 8), (unique, 0x10000156, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0xa0, 4), (register, 0xa0, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x224028, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000015e, 8) , (const, 0x0, 8), (unique, 0x1000015e, 8) CAST (register, 0x28, 8)]
[(register, 0x1220, 4) FLOAT_ADD (register, 0x1200, 4) , (register, 0x1200, 4), (register, 0x1200, 4) INT2FLOAT (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x28, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x223f95, 1)]
[(register, 0x1220, 4) INT2FLOAT (register, 0x28, 8)]
[(register, 0x8, 4) TRUNC (register, 0x1200, 4), (register, 0x1200, 4) FLOAT_MULT (ram, 0x2bcb0c, 4) , (register, 0x1220, 4), (register, 0x1220, 4) FLOAT_DIV (register, 0x1220, 4) , (register, 0x1200, 4), (register, 0x1200, 4) INT2FLOAT (register, 0x18, 4), (register, 0x1220, 4) MULTIEQUAL (register, 0x1220, 4) , (register, 0x1220, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x223fd7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4eb360, 8) , (const, 0x2, 8)]
[(ram, 0x2bcb0c, 4) INDIRECT (ram, 0x2bcb0c, 4) , (const, 0x118, 4)]
[(ram, 0x4eb360, 8) INDIRECT (ram, 0x4eb360, 8) , (const, 0x118, 4)]
[(ram, 0x4eb368, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x118, 4)]
[(ram, 0x4eb370, 8) INDIRECT (ram, 0x4eb370, 8) , (const, 0x118, 4)]
[(ram, 0x4eb378, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x118, 4)]
[(ram, 0x4eb380, 8) INDIRECT (ram, 0x4eb380, 8) , (const, 0x118, 4)]
[(ram, 0x4eb388, 8) INDIRECT (ram, 0x4eb388, 8) , (const, 0x118, 4)]
[(ram, 0x4eb390, 8) INDIRECT (ram, 0x4eb390, 8) , (const, 0x118, 4)]
[(ram, 0x4eb398, 8) INDIRECT (ram, 0x4eb398, 8) , (const, 0x118, 4)]
[(ram, 0x4eb3a0, 8) INDIRECT (ram, 0x4eb3a0, 8) , (const, 0x118, 4)]
[(ram, 0x4eb3a8, 8) INDIRECT (ram, 0x4eb3a8, 8) , (const, 0x118, 4)]
[(ram, 0x4eb3b0, 8) INDIRECT (ram, 0x4eb3b0, 8) , (const, 0x118, 4)]
[(ram, 0x4eb3b8, 8) INDIRECT (ram, 0x4eb3b8, 8) , (const, 0x118, 4)]
[(ram, 0x4eb3c0, 8) INDIRECT (ram, 0x4eb3c0, 8) , (const, 0x118, 4)]
[(ram, 0x4ee438, 4) INDIRECT (register, 0x8, 4) , (const, 0x118, 4)]
[ ---  CALL (ram, 0x224290, 8) , (unique, 0x3400, 8) , (register, 0x28, 8) , (register, 0x38, 8) , (register, 0x8, 4)]
[(ram, 0x4eb360, 8) COPY (const, 0x0, 8)]
[(ram, 0x2bcb0c, 4) COPY (ram, 0x2bcb0c, 4), (ram, 0x2bcb0c, 4) MULTIEQUAL (ram, 0x2bcb0c, 4) , (ram, 0x2bcb0c, 4)]
[(ram, 0x4eb360, 8) COPY (ram, 0x4eb360, 8), (ram, 0x4eb360, 8) MULTIEQUAL (ram, 0x4eb360, 8) , (ram, 0x4eb360, 8)]
[(ram, 0x4eb368, 8) COPY (ram, 0x4eb368, 8), (ram, 0x4eb368, 8) MULTIEQUAL (unique, 0x3400, 8) , (ram, 0x4eb368, 8)]
[(ram, 0x4eb370, 8) COPY (ram, 0x4eb370, 8), (ram, 0x4eb370, 8) MULTIEQUAL (ram, 0x4eb370, 8) , (ram, 0x4eb370, 8)]
[(ram, 0x4eb378, 8) COPY (ram, 0x4eb378, 8), (ram, 0x4eb378, 8) MULTIEQUAL (unique, 0x3400, 8) , (ram, 0x4eb378, 8)]
[(ram, 0x4eb380, 8) COPY (ram, 0x4eb380, 8), (ram, 0x4eb380, 8) MULTIEQUAL (ram, 0x4eb380, 8) , (ram, 0x4eb380, 8)]
[(ram, 0x4eb388, 8) COPY (ram, 0x4eb388, 8), (ram, 0x4eb388, 8) MULTIEQUAL (ram, 0x4eb388, 8) , (ram, 0x4eb388, 8)]
[(ram, 0x4eb390, 8) COPY (ram, 0x4eb390, 8), (ram, 0x4eb390, 8) MULTIEQUAL (ram, 0x4eb390, 8) , (ram, 0x4eb390, 8)]
[(ram, 0x4eb398, 8) COPY (ram, 0x4eb398, 8), (ram, 0x4eb398, 8) MULTIEQUAL (ram, 0x4eb398, 8) , (ram, 0x4eb398, 8)]
[(ram, 0x4eb3a0, 8) COPY (ram, 0x4eb3a0, 8), (ram, 0x4eb3a0, 8) MULTIEQUAL (ram, 0x4eb3a0, 8) , (ram, 0x4eb3a0, 8)]
[(ram, 0x4eb3a8, 8) COPY (ram, 0x4eb3a8, 8), (ram, 0x4eb3a8, 8) MULTIEQUAL (ram, 0x4eb3a8, 8) , (ram, 0x4eb3a8, 8)]
[(ram, 0x4eb3b0, 8) COPY (ram, 0x4eb3b0, 8), (ram, 0x4eb3b0, 8) MULTIEQUAL (ram, 0x4eb3b0, 8) , (ram, 0x4eb3b0, 8)]
[(ram, 0x4eb3b8, 8) COPY (ram, 0x4eb3b8, 8), (ram, 0x4eb3b8, 8) MULTIEQUAL (ram, 0x4eb3b8, 8) , (ram, 0x4eb3b8, 8)]
[(ram, 0x4eb3c0, 8) COPY (ram, 0x4eb3c0, 8), (ram, 0x4eb3c0, 8) MULTIEQUAL (ram, 0x4eb3c0, 8) , (ram, 0x4eb3c0, 8)]
[(ram, 0x4ee438, 4) COPY (ram, 0x4ee438, 4), (ram, 0x4ee438, 4) MULTIEQUAL (register, 0x8, 4) , (ram, 0x4ee438, 4)]
[ ---  RETURN (const, 0x0, 8)]
