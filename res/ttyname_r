[(unique, 0x100001d6, 8) COPY (ram, 0x4c2e78, 8)]
[(stack, 0xfffffffffffffe44, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f7e10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001de, 8) , (const, 0x16, 4), (unique, 0x100001de, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x1f7e28, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 8) , (register, 0x10, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5e, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x5e, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x5e, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x5e, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x5e, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5e, 4)]
[ ---  CBRANCH (ram, 0x1f8010, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fbdc0, 8) , (register, 0x38, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x70, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x70, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x70, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x70, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x70, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x70, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x70, 4)]
[ ---  CBRANCH (ram, 0x1f8010, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6370, 8) , (const, 0x1, 4) , (register, 0x38, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffea8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d6, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CAST (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) CALL (ram, 0x14a740, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe56, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9f, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0xa4, 4), (stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0xa4, 4), (stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x9b, 4), (stack, 0xfffffffffffffe48, 8) COPY (const, 0x65732f636f72702f, 8)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0xa4, 4), (stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0x9b, 4), (stack, 0xfffffffffffffe50, 4) COPY (const, 0x662f666c, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0xa4, 4), (stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0x9b, 4), (stack, 0xfffffffffffffe54, 2) COPY (const, 0x2f64, 2)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0xa4, 4), (stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0x9b, 4), (stack, 0xfffffffffffffe56, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0xa4, 4), (stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x9b, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0xa4, 4), (stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x9b, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x9b, 4)]
[ ---  CBRANCH (ram, 0x1f8068, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x1f8170, 8) , (unique, 0x100001fe, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x100001fe, 8) CAST (unique, 0x3800, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe48, 8)]
[ ---  CBRANCH (ram, 0x1f7deb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x24, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000206, 8), (unique, 0x10000206, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d6, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020e, 8) , (const, 0x22, 4), (unique, 0x1000020e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d6, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x37, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x22, 4)]
[ ---  CBRANCH (ram, 0x1f7f00, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0xc0, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xc0, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xc0, 4)]
[ ---  CBRANCH (ram, 0x1f7f00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18e1c0, 8) , (register, 0x30, 8) , (unique, 0x10000157, 8) , (const, 0xd, 8), (unique, 0x10000157, 8) COPY (const, 0x28df35, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdb, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0xdb, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0xdb, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xdb, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xdb, 4)]
[ ---  CALL (ram, 0x18e5c0, 8) , (register, 0x30, 8) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xd, 8) , (const, 0x1, 8), (register, 0xa8, 8) INT_SUB (register, 0x0, 8) , (const, 0xd, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(stack, 0xfffffffffffffe56, 1) MULTIEQUAL (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1)]
[(stack, 0xfffffffffffffe54, 2) MULTIEQUAL (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2)]
[(stack, 0xfffffffffffffe50, 4) MULTIEQUAL (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4)]
[(stack, 0xfffffffffffffe48, 8) MULTIEQUAL (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8)]
[(stack, 0xfffffffffffffe44, 4) MULTIEQUAL (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (register, 0xa8, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0xa8, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[ ---  CBRANCH (ram, 0x1f8019, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bc, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x1bc, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x1bc, 4)]
[ ---  CBRANCH (ram, 0x1f7f16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6320, 8) , (const, 0x1, 4) , (register, 0x30, 8) , (unique, 0x3c80, 8)]
[ ---  CBRANCH (ram, 0x1f7f16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x2000, 4), (register, 0x10, 4) INT_AND (stack, 0xffffffffffffff50, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x1f7f16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xfffffffffffffed0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000216, 8) , (const, 0x7374702f7665642f, 8), (unique, 0x10000216, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000021e, 8) , (const, 0x2f, 2), (unique, 0x1000021e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xff, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xfa, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf5, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0xff, 4), (stack, 0xfffffffffffffe44, 4) MULTIEQUAL (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0xff, 4), (stack, 0xfffffffffffffe48, 8) MULTIEQUAL (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0xff, 4), (stack, 0xfffffffffffffe50, 4) MULTIEQUAL (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0xff, 4), (stack, 0xfffffffffffffe54, 2) MULTIEQUAL (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0xff, 4), (stack, 0xfffffffffffffe56, 1) MULTIEQUAL (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0xff, 4), (stack, 0xfffffffffffffeb0, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0xff, 4), (stack, 0xfffffffffffffed0, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xff, 4), (stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[ ---  CBRANCH (ram, 0x1f7f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6320, 8) , (const, 0x1, 4) , (register, 0x30, 8) , (register, 0xa8, 8), (register, 0xa8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[ ---  CBRANCH (ram, 0x1f7f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff50, 4) , (const, 0xf000, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000226, 8) , (unique, 0xbc80, 4), (unique, 0x10000226, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d6, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (stack, 0xfffffffffffffeb0, 8) , (const, 0x133, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (stack, 0xfffffffffffffed0, 8) , (const, 0x133, 4)]
[ ---  CBRANCH (ram, 0x1f8080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x243940, 8) , (register, 0x30, 8) , (unique, 0x3100, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffeb0, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe44, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001a0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x100001a4, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100001b0, 8) MULTIEQUAL (stack, 0xfffffffffffffe48, 8) , (stack, 0xfffffffffffffe48, 8)]
[(unique, 0x100001b8, 4) MULTIEQUAL (stack, 0xfffffffffffffe50, 4) , (stack, 0xfffffffffffffe50, 4)]
[(unique, 0x100001bc, 2) MULTIEQUAL (stack, 0xfffffffffffffe54, 2) , (stack, 0xfffffffffffffe54, 2)]
[(unique, 0x100001be, 1) MULTIEQUAL (stack, 0xfffffffffffffe56, 1) , (stack, 0xfffffffffffffe56, 1)]
[(unique, 0x100001bf, 8) MULTIEQUAL (stack, 0xfffffffffffffeb0, 8) , (stack, 0xfffffffffffffeb0, 8)]
[(unique, 0x100001c7, 8) MULTIEQUAL (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffed0, 8)]
[ ---  CBRANCH (ram, 0x1f7df8, 1) , (unique, 0x1000019f, 1), (unique, 0x1000019f, 1) INT_EQUAL (unique, 0x100001ac, 4) , (const, 0xffffffff, 4), (unique, 0x100001ac, 4) MULTIEQUAL (stack, 0xfffffffffffffe44, 4) , (stack, 0xfffffffffffffe44, 4)]
[(ram, 0x4c2e78, 8) COPY (unique, 0x100001a4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x100001a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x174, 4), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x100001a4, 8) , (const, 0x16c, 4)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (unique, 0x100001ac, 4) , (const, 0x174, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (unique, 0x100001b0, 8) , (const, 0x174, 4)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (unique, 0x100001b8, 4) , (const, 0x174, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (unique, 0x100001bc, 2) , (const, 0x174, 4)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (unique, 0x100001be, 1) , (const, 0x174, 4)]
[(stack, 0xfffffffffffffeb0, 8) INDIRECT (unique, 0x100001bf, 8) , (const, 0x174, 4)]
[(stack, 0xfffffffffffffed0, 8) INDIRECT (unique, 0x100001c7, 8) , (const, 0x174, 4)]
[ ---  CBRANCH (ram, 0x1f7f85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x243940, 8) , (register, 0x30, 8) , (register, 0x28, 8) , (unique, 0x100001c7, 8) , (unique, 0x100001bf, 8) , (unique, 0xbc80, 4) , (register, 0xa8, 8), (register, 0x28, 8) INT_SUB (register, 0x10, 8) , (const, 0x5, 8), (register, 0xa8, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe44, 8)]
[ ---  CBRANCH (ram, 0x1f7df8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffe44, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffe44, 4) INDIRECT (stack, 0xfffffffffffffe44, 4) , (const, 0x1a1, 4), (stack, 0xfffffffffffffe44, 4) COPY (const, 0x1, 4)]
[(stack, 0xfffffffffffffe48, 8) INDIRECT (stack, 0xfffffffffffffe48, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe50, 4) INDIRECT (stack, 0xfffffffffffffe50, 4) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe54, 2) INDIRECT (stack, 0xfffffffffffffe54, 2) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe56, 1) INDIRECT (stack, 0xfffffffffffffe56, 1) , (const, 0x1a1, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x197, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x243940, 8) , (register, 0x30, 8) , (register, 0x28, 8) , (stack, 0xfffffffffffffed0, 8) , (stack, 0xfffffffffffffeb0, 8) , (unique, 0xbc80, 4) , (register, 0xa8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
