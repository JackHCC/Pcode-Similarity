[ ---  CBRANCH (ram, 0x46acd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000050, 8), (unique, 0x10000050, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f20, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f20, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbc, 4)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0xbc, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0xbc, 4)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0xbc, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000044, 8), (unique, 0x10000044, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7f20, 8)]
[ ---  BRANCH (ram, 0x46ac54, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f20, 4) , (const, 0x0, 4)]
[(ram, 0x4c7f20, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x46ac69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f10, 8) , (ram, 0x4c7cd8, 8), (ram, 0x4c7cd8, 8) MULTIEQUAL (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8) , (ram, 0x4c7cd8, 8), (ram, 0x4c7f10, 8) MULTIEQUAL (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8)]
[ ---  CBRANCH (ram, 0x46ac90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7cd8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9a, 4)]
[(ram, 0x4c7cd8, 8) INDIRECT (ram, 0x4c7cd8, 8) , (const, 0x9a, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x9a, 4)]
[(ram, 0x4c7f20, 4) INDIRECT (ram, 0x4c7f20, 4) , (const, 0x9a, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (ram, 0x4c7cd8, 8)]
[(ram, 0x4c7f10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x46ac69, 1)]
[(ram, 0x4c7f10, 8) MULTIEQUAL (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8)]
[(unique, 0x1000004c, 4) COPY (ram, 0x4c7f20, 4), (ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[ ---  CBRANCH (ram, 0x46aca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000058, 8), (unique, 0x10000058, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7f20, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x46ac87, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x1000004c, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x46ac87, 1)]
[(ram, 0x4c7f20, 4) INT_ADD (ram, 0x4c7f20, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7cd8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7f10, 8) COPY (ram, 0x4c7f10, 8)]
[(ram, 0x4c7f20, 4) COPY (ram, 0x4c7f20, 4), (ram, 0x4c7f20, 4) MULTIEQUAL (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4) , (ram, 0x4c7f20, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
