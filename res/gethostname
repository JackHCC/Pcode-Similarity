[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2e, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000ca, 8), (unique, 0x100000ca, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x216ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e4540, 8) , (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe48, 8)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x216e94, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x48, 4)]
[(unique, 0x100000ba, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x216e8a, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x18, 8), (register, 0x18, 8) PTRSUB (unique, 0x100000a2, 8) , (const, 0x41, 8), (unique, 0x100000a2, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe48, 8)]
[(unique, 0x100000c2, 8) COPY (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5d, 4)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x38, 8) , (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000ba, 8) , (unique, 0x100000c2, 8)]
[ ---  CBRANCH (ram, 0x216ed0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3100, 8)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d2, 8) , (const, 0x24, 4), (unique, 0x100000d2, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x216e94, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x216ee6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000da, 8), (unique, 0x100000da, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x94, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x94, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xb0, 4)]
