[ ---  CBRANCH (ram, 0x228983, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2289a6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x368, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x368, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x368, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x368, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x368, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x368, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x368, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x1000022b, 8), (unique, 0x1000022b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x100002ea, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x368, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x100002ea, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2289f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2289c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000342, 4) COPY (unique, 0x100002ab, 4), (unique, 0x100002ab, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x2289e2, 1) , (unique, 0x100002af, 1), (unique, 0x100002af, 1) INT_NOTEQUAL (unique, 0x100002ab, 4) , (const, 0x0, 4), (unique, 0x100002ab, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x97, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x97, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x97, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x97, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x1000033e, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x97, 4), (ram, 0x4c7d60, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) COPY (ram, 0x4c7d50, 8), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) COPY (unique, 0x10000346, 4), (unique, 0x10000346, 4) MULTIEQUAL (unique, 0x1000033e, 4) , (unique, 0x10000342, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000322, 8) COPY (ram, 0x4c7d58, 8)]
[ ---  CBRANCH (ram, 0x228b1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d58, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e2, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1e2, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x1e2, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1e2, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1e2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1e2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e2, 4)]
[ ---  CBRANCH (ram, 0x228ced, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x16dd20, 8) , (unique, 0x10000213, 8) , (unique, 0x1000020b, 8), (unique, 0x10000213, 8) COPY (const, 0x28f263, 8), (unique, 0x1000020b, 8) COPY (const, 0x28bf73, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026b, 8) , (unique, 0xbd00, 4), (unique, 0x1000026b, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000263, 8), (unique, 0x10000263, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1ff, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1f2, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x1ff, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x1f2, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1ff, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1f2, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1ff, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1f2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ff, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1f2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ff, 4)]
[ ---  CBRANCH (ram, 0x228ce5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000037a, 8), (unique, 0x1000037a, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x211, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x20e, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x211, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x20e, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x211, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x20e, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x211, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x20e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x211, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x20e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x228baa, 1)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x22a, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x22a, 4), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x22a, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x22a, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x22a, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x22a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x228d00, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x16b260, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x228cd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000293, 8) , (const, 0x1, 8), (unique, 0x10000293, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x34f, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x34f, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x34f, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x34f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x34f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x228bd6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24c, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x24e, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x24c, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x24e, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x24c, 4), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x24e, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x24c, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x24e, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x24c, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x24e, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x24c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CALL (ram, 0x195d30, 8) , (stack, 0xffffffffffffffb8, 8) , (const, 0x23, 4)]
[(unique, 0x1000034a, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x228ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x24c, 4)]
[(unique, 0x100002f2, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x228c1e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000038a, 8), (unique, 0x1000038a, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000382, 8), (unique, 0x10000382, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x228c08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000392, 8), (unique, 0x10000392, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100002f2, 8) , (register, 0x30, 8)]
[(unique, 0x10000352, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x228ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x100002d2, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100002f2, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x228c34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x3a, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000035a, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x228ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100002e2, 8), (unique, 0x100002e2, 8) MULTIEQUAL (unique, 0x100002d2, 8) , (unique, 0x100002da, 8)]
[ ---  CBRANCH (ram, 0x228c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000039a, 8), (unique, 0x1000039a, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_SEXT (unique, 0xbb00, 1)]
[(unique, 0x100002da, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x228c4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(unique, 0x10000362, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x228ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x306, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fc, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x306, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2fc, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2f3, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x306, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x2fc, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x2f3, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x306, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2fc, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2f3, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x306, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2fc, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2f3, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x306, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2fc, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2f3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x306, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2fc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x306, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fc, 4)]
[(unique, 0x1000036a, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x228ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003a2, 8), (unique, 0x100003a2, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3100, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x324, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x324, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x31e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x324, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x31e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100003aa, 8), (unique, 0x100003aa, 8) CALL (ram, 0x2282b0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x32f, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x32a, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x324, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x31e, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x32f, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x32a, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x324, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x31e, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x32f, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x32a, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x324, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x31e, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x32f, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x32a, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x324, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x31e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x32f, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x32a, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x324, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x31e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x100002c2, 8) COPY (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x228d26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8)]
[(unique, 0x100002ca, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x228cc7, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x33b, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x33b, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x33b, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x33b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x33b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x100003b2, 8), (unique, 0x100003b2, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c2, 8) , (unique, 0x100002ca, 8)]
[(unique, 0x10000372, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x228ba0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x1000034a, 8) , (unique, 0x10000352, 8) , (unique, 0x1000035a, 8) , (unique, 0x10000362, 8) , (unique, 0x1000036a, 8) , (unique, 0x10000372, 8) , (stack, 0xffffffffffffff88, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x228d00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2b9, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2b5, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x2b9, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x2b5, 4), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2b9, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x2b5, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2b9, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2b5, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2b9, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2b5, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2b5, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b5, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x16d210, 8) , (register, 0x0, 8)]
[(unique, 0x1000032a, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x228a0b, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x357, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x357, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x357, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x357, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x357, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x357, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x357, 4)]
[ ---  CALL (ram, 0x16d210, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d58, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x228a73, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x100002ba, 8) COPY (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (unique, 0x10000322, 8) , (unique, 0x1000032a, 8)]
[ ---  CBRANCH (ram, 0x228a70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (unique, 0x10000322, 8) , (unique, 0x1000032a, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xc9, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0xc9, 4), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xc9, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xc9, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc9, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc9, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x228a2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xd9, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0xd9, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xd9, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xd9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x228a18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003c2, 8), (unique, 0x100003c2, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x228a73, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x228a73, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x228ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ba, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x10f, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x10f, 4), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x10f, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x10f, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x228a67, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x11f, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x11f, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x11f, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x11f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x11f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x228a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003ca, 8), (unique, 0x100003ca, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x228ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x10000302, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x28f247, 8)]
[ ---  CBRANCH (ram, 0x228ade, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x1000030a, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b7, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1c3, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1b7, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x1c3, 4), (ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x1b7, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1c3, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1b7, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1c3, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1b7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c3, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x2282b0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000302, 8) , (unique, 0x1000030a, 8)]
[ ---  CBRANCH (ram, 0x228a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x2282b0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000302, 8) , (unique, 0x1000030a, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1c8, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c8, 4)]
[ ---  CBRANCH (ram, 0x228a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003d2, 8), (unique, 0x100003d2, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x11, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003da, 8) , (const, 0x0, 1), (unique, 0x100003da, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1dc, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1d9, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1dc, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1d9, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1d6, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1dc, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1d9, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1d6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1dc, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d9, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d50, 8) COPY (unique, 0x1000031a, 8), (unique, 0x1000031a, 8) INDIRECT (unique, 0x10000312, 8) , (const, 0x1dc, 4), (unique, 0x10000312, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x228a78, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x228a8c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000336, 4) COPY (unique, 0x100002b0, 4), (unique, 0x100002b0, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x228aae, 1) , (unique, 0x100002b4, 1), (unique, 0x100002b4, 1) INT_NOTEQUAL (unique, 0x100002b0, 4) , (const, 0x0, 4), (unique, 0x100002b0, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x194, 4)]
[(ram, 0x4c7d50, 8) INDIRECT (ram, 0x4c7d50, 8) , (const, 0x194, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x194, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x194, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000223, 8), (unique, 0x10000223, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x10000332, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x194, 4), (ram, 0x4c7d60, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c7d50, 8) COPY (ram, 0x4c7d50, 8), (ram, 0x4c7d50, 8) MULTIEQUAL (ram, 0x4c7d50, 8) , (ram, 0x4c7d50, 8)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) COPY (unique, 0x1000033a, 4), (unique, 0x1000033a, 4) MULTIEQUAL (unique, 0x10000332, 4) , (unique, 0x10000336, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x1000017a, 4), (unique, 0x1000017a, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
