[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000411, 8), (unique, 0x10000411, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x248a51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4efeb0, 4) , (const, 0x0, 4)]
[(ram, 0x4efeb0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efeb0, 4) , (const, 0x0, 4)]
[(ram, 0x4efeb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x248a74, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x391, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x391, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x391, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x391, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x391, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x391, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x391, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[(unique, 0x10000361, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000361, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x248ad8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x248a8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100003c1, 4) COPY (unique, 0x10000326, 4), (unique, 0x10000326, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x248ab0, 1) , (unique, 0x1000032a, 1), (unique, 0x1000032a, 1) INT_NOTEQUAL (unique, 0x10000326, 4) , (const, 0x0, 4), (unique, 0x10000326, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb2, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xb2, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0xb2, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xb2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb2, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000296, 8), (unique, 0x10000296, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[(unique, 0x100003bd, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xb2, 4), (ram, 0x4efeb0, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4efeb0, 4) COPY (unique, 0x100003c5, 4), (unique, 0x100003c5, 4) MULTIEQUAL (unique, 0x100003bd, 4) , (unique, 0x100003c1, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100003a1, 8) COPY (ram, 0x4efea8, 8)]
[ ---  CBRANCH (ram, 0x248c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efea8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x212, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x212, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x212, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x212, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x212, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x212, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x212, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x212, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x212, 4)]
[ ---  CBRANCH (ram, 0x248e25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x17ee30, 8) , (unique, 0x1000028e, 8) , (unique, 0x10000286, 8), (unique, 0x1000028e, 8) COPY (const, 0x2b6fe9, 8), (unique, 0x10000286, 8) COPY (const, 0x2b3893, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e6, 8) , (unique, 0xbd00, 4), (unique, 0x100002e6, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002de, 8), (unique, 0x100002de, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22f, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x22f, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x222, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x22f, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x222, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x22f, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x222, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x22f, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x222, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x22f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x222, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x22f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x22f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22f, 4)]
[ ---  CBRANCH (ram, 0x248e1d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000419, 8), (unique, 0x10000419, 8) CALL (ram, 0x1212c0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x23f, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x23c, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x23f, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x23c, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x23f, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x23c, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x23f, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x23c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x23f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x23c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x25c, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x25c, 4), (ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x25c, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x25c, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25c, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x25c, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x25c, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x248d6a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x17bc50, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248ce2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000306, 8) , (const, 0x1, 8), (unique, 0x10000306, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x27d, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x27d, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x27d, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x27d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x284, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x286, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x284, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x286, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x284, 4), (ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x286, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x284, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x286, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x284, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x286, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x284, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CALL (ram, 0x121040, 8) , (stack, 0xffffffffffffffb0, 8) , (const, 0x23, 4)]
[(unique, 0x100003c9, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x248d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x284, 4)]
[(unique, 0x10000369, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x248d2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000421, 8), (unique, 0x10000421, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x248d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000431, 8), (unique, 0x10000431, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000369, 8) , (register, 0x30, 8)]
[(unique, 0x100003d1, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x248d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x10000349, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000369, 8) , (register, 0x30, 8)]
[(unique, 0x100003d9, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x248d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x3a, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x10000359, 8), (unique, 0x10000359, 8) MULTIEQUAL (unique, 0x10000349, 8) , (unique, 0x10000351, 8)]
[(unique, 0x100003e1, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x248d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x10000359, 8), (unique, 0x10000359, 8) MULTIEQUAL (unique, 0x10000349, 8) , (unique, 0x10000351, 8)]
[ ---  CBRANCH (ram, 0x248d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000439, 8), (unique, 0x10000439, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_SEXT (unique, 0xbb00, 1)]
[(unique, 0x10000351, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x248d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(unique, 0x100003e9, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x248d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x335, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x33f, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x335, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x32b, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x33f, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x335, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x32b, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x33f, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x335, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x32b, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x33f, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x335, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x32b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x33f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x335, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x32b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x33f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x335, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x33f, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x335, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x33f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x335, 4)]
[(unique, 0x100003f1, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x248d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000441, 8), (unique, 0x10000441, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x121160, 8) , (unique, 0x3100, 8) , (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x357, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x35d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x357, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x35d, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x357, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x35d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x357, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000449, 8), (unique, 0x10000449, 8) CALL (ram, 0x248310, 8) , (unique, 0x3100, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x368, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x363, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x35d, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x357, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x368, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x363, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x35d, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x357, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x368, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x363, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x35d, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x357, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x368, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x363, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x35d, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x357, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x368, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x363, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x35d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x357, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248e10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff80, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x37a, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x37a, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x37a, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x37a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x37a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x10000451, 8), (unique, 0x10000451, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000401, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x248d60, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x374, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x374, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x374, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x374, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x374, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffff80, 8) , (unique, 0x10000459, 8), (unique, 0x10000459, 8) CAST (register, 0x0, 8)]
[(unique, 0x100003f9, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x248d60, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x100003c9, 8) , (unique, 0x100003d1, 8) , (unique, 0x100003d9, 8) , (unique, 0x100003e1, 8) , (unique, 0x100003e9, 8) , (unique, 0x100003f1, 8) , (unique, 0x100003f9, 8) , (unique, 0x10000401, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x248cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000461, 8), (unique, 0x10000461, 8) CAST (unique, 0x1000030e, 8), (unique, 0x1000030e, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x300, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x300, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2fc, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x300, 4), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x2fc, 4), (ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x300, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x2fc, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x300, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x2fc, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x300, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2fc, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x300, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2fc, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x300, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2fc, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x300, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fc, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x17e250, 8) , (register, 0x0, 8)]
[(unique, 0x100003a9, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x248aeb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x382, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x382, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x382, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x382, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x382, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x382, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x382, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x382, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x382, 4)]
[ ---  CALL (ram, 0x17e250, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4efea8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x248bc7, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x10000389, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000469, 8), (unique, 0x10000469, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4efea8, 8), (ram, 0x4efea8, 8) MULTIEQUAL (unique, 0x100003a1, 8) , (unique, 0x100003a9, 8)]
[ ---  CBRANCH (ram, 0x248bc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000469, 8), (unique, 0x10000469, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4efea8, 8), (ram, 0x4efea8, 8) MULTIEQUAL (unique, 0x100003a1, 8) , (unique, 0x100003a9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xf2, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0xf2, 4), (ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xf2, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xf2, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf2, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x248b88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x38, 8) , (unique, 0x10000471, 8), (unique, 0x10000471, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000379, 8) , (unique, 0x10000381, 8) , (unique, 0x10000389, 8)]
[(unique, 0x10000381, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000479, 8), (unique, 0x10000479, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x248b08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000479, 8), (unique, 0x10000479, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x248b27, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x10d, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x10d, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x10d, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x10d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000379, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000481, 8), (unique, 0x10000481, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x248b08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000481, 8), (unique, 0x10000481, 8) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x248b33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x248ba8, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c7, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1c7, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x1c7, 4), (ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1c7, 4), (ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1c7, 4), (ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c7, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1c7, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1c7, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c7, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x248ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (register, 0x30, 8) , (unique, 0x10000489, 8), (unique, 0x10000489, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x248bc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000491, 8), (unique, 0x10000491, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1e2, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x1e2, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1e2, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1e2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x248ba8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000499, 8), (unique, 0x10000499, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x10000233, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000023b, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0x10000243, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(unique, 0x1000024b, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(unique, 0x10000253, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(unique, 0x10000257, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x1000025b, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000263, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x1000026b, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x248b3c, 1) , (unique, 0x10000232, 1), (unique, 0x10000232, 1) INT_EQUAL (unique, 0x10000277, 8) , (const, 0x0, 8), (unique, 0x10000277, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248be1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0xa8, 8) COPY (const, 0x2b6fcd, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000233, 8) , (const, 0x19b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x1000025b, 8) , (const, 0x19b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000263, 8) , (const, 0x19b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000026b, 8) , (const, 0x19b, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1a7, 4), (ram, 0x4eae00, 8) INDIRECT (unique, 0x1000023b, 8) , (const, 0x19b, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x1a7, 4), (ram, 0x4efea0, 8) INDIRECT (unique, 0x10000243, 8) , (const, 0x19b, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1a7, 4), (ram, 0x4efea8, 8) INDIRECT (unique, 0x1000024b, 8) , (const, 0x19b, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1a7, 4), (ram, 0x4efeb0, 4) INDIRECT (unique, 0x10000253, 4) , (const, 0x19b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a7, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000257, 4) , (const, 0x19b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004a1, 8), (unique, 0x100004a1, 8) CALL (ram, 0x248310, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x248b3c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004a1, 8), (unique, 0x100004a1, 8) CALL (ram, 0x248310, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ac, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1ac, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x1ac, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1ac, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1ac, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ac, 4)]
[ ---  CBRANCH (ram, 0x248b3c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004a9, 8), (unique, 0x100004a9, 8) CALL (ram, 0x1212c0, 8) , (const, 0x11, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b1, 8) , (const, 0x0, 1), (unique, 0x100004b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1c0, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1bd, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1ba, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1c0, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1bd, 4), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x1ba, 4)]
[(ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1c0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1bd, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x1ba, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1bd, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ba, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4efea0, 8) COPY (unique, 0x10000399, 8), (unique, 0x10000399, 8) INDIRECT (unique, 0x10000391, 8) , (const, 0x1c0, 4), (unique, 0x10000391, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x248b3c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000026b, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000263, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x1000025b, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (unique, 0x10000253, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (unique, 0x1000024b, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (unique, 0x10000243, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (unique, 0x1000023b, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000233, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x248b50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (unique, 0x10000257, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100003b5, 4) COPY (unique, 0x1000032b, 4), (unique, 0x1000032b, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x248b72, 1) , (unique, 0x1000032f, 1), (unique, 0x1000032f, 1) INT_NOTEQUAL (unique, 0x1000032b, 4) , (const, 0x0, 4), (unique, 0x1000032b, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x178, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x178, 4)]
[(ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0x178, 4)]
[(ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0x178, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x178, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x178, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x178, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x178, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000029e, 8), (unique, 0x1000029e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4efeb0, 8)]
[(unique, 0x100003b1, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0x178, 4), (ram, 0x4efeb0, 4) INT_ADD (ram, 0x4efeb0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4efeb0, 4) COPY (unique, 0x100003b9, 4), (unique, 0x100003b9, 4) MULTIEQUAL (unique, 0x100003b1, 4) , (unique, 0x100003b5, 4)]
[(register, 0x0, 4) INT_2COMP (unique, 0x1000017c, 4), (unique, 0x1000017c, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x248ab2, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efeb0, 4) MULTIEQUAL (ram, 0x4efeb0, 4) , (ram, 0x4efeb0, 4)]
[(ram, 0x4efea8, 8) MULTIEQUAL (ram, 0x4efea8, 8) , (ram, 0x4efea8, 8)]
[(ram, 0x4efea0, 8) MULTIEQUAL (ram, 0x4efea0, 8) , (ram, 0x4efea0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x248e35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004b9, 8), (unique, 0x100004b9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4efea0, 8) COPY (ram, 0x4efea0, 8)]
[(ram, 0x4efea8, 8) COPY (ram, 0x4efea8, 8)]
[(ram, 0x4efeb0, 4) COPY (ram, 0x4efeb0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xa3, 4)]
[(ram, 0x4efea0, 8) COPY (ram, 0x4efea0, 8), (ram, 0x4efea0, 8) INDIRECT (ram, 0x4efea0, 8) , (const, 0xa3, 4)]
[(ram, 0x4efea8, 8) COPY (ram, 0x4efea8, 8), (ram, 0x4efea8, 8) INDIRECT (ram, 0x4efea8, 8) , (const, 0xa3, 4)]
[(ram, 0x4efeb0, 4) COPY (ram, 0x4efeb0, 4), (ram, 0x4efeb0, 4) INDIRECT (ram, 0x4efeb0, 4) , (const, 0xa3, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa3, 4)]
[ ---  RETURN (const, 0x1, 4)]
