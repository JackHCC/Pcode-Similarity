[ ---  CBRANCH (ram, 0x427430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5788, 8) , (const, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x308, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) CALLIND (unique, 0x1000025b, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x100001da, 8), (unique, 0x1000025b, 8) CAST (ram, 0x4c5788, 8), (unique, 0x100001da, 8) INT_ADD (unique, 0x1000023c, 8) , (stack, 0x0, 1), (unique, 0x1000023c, 8) INT_LEFT (unique, 0x10000234, 8) , (const, 0x8, 8), (unique, 0x10000234, 8) INT_SEXT (unique, 0x10000254, 7), (unique, 0x10000254, 7) CAST (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x427290, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x427276, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (unique, 0x1000027b, 8) , (const, 0x10, 8), (unique, 0x1000027b, 8) CAST (register, 0x38, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (unique, 0x1000026b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000026b, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4272c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000d9, 8) , (const, 0x0, 8), (unique, 0x100000d9, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (unique, 0x1000026b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000026b, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x427458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x4272ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffd0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2eb, 4)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x2eb, 4)]
[ ---  CALL (ram, 0x424e50, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) INT_ADD (unique, 0x10000293, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000293, 8) CAST (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x4272ba, 1)]
[(ram, 0x4c5788, 8) MULTIEQUAL (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x4273b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000e9, 8) , (const, 0x0, 8), (unique, 0x100000e9, 8) INT_AND (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8)]
[ ---  BRANCH (ram, 0x4272c9, 1)]
[(ram, 0x4c5788, 8) MULTIEQUAL (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42758f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x3100, 8), (register, 0x10, 8) INT_2COMP (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x42758f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f1, 8) , (const, 0x0, 8), (unique, 0x100000f1, 8) INT_AND (unique, 0x3100, 8) , (const, 0xf, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000201, 8), (unique, 0x10000201, 8) COPY (const, 0x49b36f, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x2ca, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x427410, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100002ab, 8) , (const, 0x0, 8), (unique, 0x100002ab, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x2c5, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[(unique, 0x10000244, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x427304, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1f, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[(unique, 0x1000024c, 8) COPY (register, 0x30, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000244, 8) , (unique, 0x1000024c, 8)]
[ ---  CBRANCH (ram, 0x427340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000101, 8) , (const, 0x0, 8), (unique, 0x10000101, 8) INT_AND (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x427478, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x427567, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002c3, 8), (unique, 0x100002c3, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x2ab, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002d3, 8) , (const, 0x1, 4), (unique, 0x100002d3, 8) CAST (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x2b3, 4)]
[ ---  CALL (ram, 0x421390, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x427490, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002db, 8), (unique, 0x100002db, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x1d0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e3, 8) , (const, 0x1, 4), (unique, 0x100002e3, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x1d6, 4), (ram, 0x4c5788, 8) MULTIEQUAL (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8)]
[(register, 0x0, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) CALL (ram, 0x4252e0, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x42753e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f3, 8), (unique, 0x100002f3, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x26d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000303, 8) , (const, 0x0, 4), (unique, 0x10000303, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x4274b4, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002fb, 8), (unique, 0x100002fb, 8) CAST (register, 0x18, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4274b4, 1)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x1ed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000313, 8) , (unique, 0xbd00, 4), (unique, 0x10000313, 8) CAST (register, 0x18, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CAST (register, 0x18, 8)]
[(ram, 0x4c5788, 8) MULTIEQUAL (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8) , (ram, 0x4c5788, 8)]
[ ---  CBRANCH (ram, 0x427508, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x23d, 4)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x422d80, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (const, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x25e, 4), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x24f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000182, 8) , (const, 0x0, 8), (unique, 0x10000182, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000323, 8), (unique, 0x10000323, 8) INT_ADD (unique, 0x1000031b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000031b, 8) CAST (register, 0x0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x4274dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000018a, 8) , (const, 0x0, 8), (unique, 0x1000018a, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000333, 8), (unique, 0x10000333, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x1000032b, 8) , (const, 0x10, 8), (unique, 0x1000032b, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000211, 8) , (unique, 0x100001f9, 8) , (const, 0xca6, 8) , (unique, 0x10000221, 8), (unique, 0x10000221, 8) COPY (const, 0x49c238, 8), (unique, 0x10000211, 8) COPY (const, 0x49c0d0, 8), (unique, 0x100001f9, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x237, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x168, 4)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) CALL (ram, 0x4252e0, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000119, 8) , (const, 0x0, 8), (unique, 0x10000119, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000034b, 8), (unique, 0x1000034b, 8) INT_ADD (unique, 0x10000343, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000343, 8) CAST (register, 0x0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x427386, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000121, 8) , (const, 0x0, 8), (unique, 0x10000121, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000035b, 8), (unique, 0x1000035b, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x10000353, 8) , (const, 0x10, 8), (unique, 0x10000353, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000209, 8) , (unique, 0x100001f1, 8) , (const, 0xc9b, 8) , (unique, 0x10000219, 8), (unique, 0x10000219, 8) COPY (const, 0x49c238, 8), (unique, 0x10000209, 8) COPY (const, 0x49c0d0, 8), (unique, 0x100001f1, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x1aa, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x11b, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000363, 8), (unique, 0x10000363, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x421af0, 8) , (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4273c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x421af0, 8) , (unique, 0x3100, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x8, 8)]
[(ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x13c, 4)]
[ ---  CBRANCH (ram, 0x42732a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x421a50, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x152, 4), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x14e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x427448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x38, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x59, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c5788, 8) COPY (ram, 0x4c5788, 8), (ram, 0x4c5788, 8) INDIRECT (ram, 0x4c5788, 8) , (const, 0x55, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x30, 8)]
