[(unique, 0x10000329, 4) COPY (ram, 0x4c3150, 4)]
[ ---  CBRANCH (ram, 0x183e68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000345, 8), (unique, 0x10000345, 8) CAST (ram, 0x4c2fd0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3bd, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x3bd, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x3bd, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x3bd, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3bd, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (stack, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183c75, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183ee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x183a70, 8) , (register, 0x38, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ac, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x3ac, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x3ac, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x3ac, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3ac, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3a7, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x3a7, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x3a7, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x3a7, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3a7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x183550, 8) , (register, 0x30, 8)]
[(unique, 0x3100, 8) INT_SUB (unique, 0x10000365, 8) , (const, 0x10, 8), (unique, 0x10000365, 8) CAST (register, 0x38, 8)]
[(register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) INT_ADD (unique, 0x10000355, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000355, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000291, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) INT_ADD (unique, 0x10000355, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000355, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x183d10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000026b, 8) , (const, 0x0, 8), (unique, 0x1000026b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) INT_ADD (unique, 0x10000355, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000355, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x183fe0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) INT_2COMP (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x183fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000eb, 8) , (const, 0x0, 8), (unique, 0x100000eb, 8) INT_AND (unique, 0x3100, 8) , (const, 0xf, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183e40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000010b, 8) , (const, 0x0, 8), (unique, 0x1000010b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183ef0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) INT_2COMP (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x183ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a3, 8) , (const, 0x0, 8), (unique, 0x100001a3, 8) INT_AND (unique, 0x3100, 8) , (const, 0xf, 8)]
[(register, 0xa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  BRANCH (ram, 0x183d44, 1)]
[(register, 0xa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  BRANCH (ram, 0x183cb1, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8)]
[ ---  CBRANCH (ram, 0x183d39, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) INT_2COMP (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x183cb1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000011b, 8) , (const, 0x0, 8), (unique, 0x1000011b, 8) INT_AND (unique, 0x3100, 8) , (const, 0xf, 8)]
[ ---  CBRANCH (ram, 0x183d4a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x373, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x373, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x373, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x373, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x373, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(ram, 0x4c2fd0, 8) MULTIEQUAL (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x183ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) INT_AND (unique, 0x10000329, 4) , (const, 0x5, 4)]
[ ---  CALL (ram, 0x177450, 8) , (register, 0x38, 4) , (unique, 0x100002ba, 8) , (unique, 0x100002aa, 8), (unique, 0x100002ba, 8) COPY (const, 0x28eed2, 8), (unique, 0x100002aa, 8) COPY (const, 0x28d5a3, 8), (register, 0x38, 4) INT_AND (unique, 0x10000329, 4) , (const, 0x2, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x32a, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x32a, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x32a, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x32a, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x32a, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183f08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000127, 4) , (const, 0x0, 4), (unique, 0x10000127, 4) INT_AND (unique, 0x10000329, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x293, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x293, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x293, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x293, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffb8, 1) INDIRECT (stack, 0xffffffffffffffb8, 1) , (const, 0x293, 4), (stack, 0xffffffffffffffb8, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x183f53, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3800, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000375, 8), (unique, 0x10000375, 8) CALL (ram, 0x14a670, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x10, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2b9, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x2b9, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x2b9, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x2b9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2b9, 4)]
[(stack, 0xffffffffffffffb8, 1) INDIRECT (stack, 0xffffffffffffffb8, 1) , (const, 0x2b9, 4)]
[ ---  CALL (ram, 0x18e810, 8) , (unique, 0x3800, 8) , (const, 0x30, 8)]
[(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb8, 1) MULTIEQUAL (stack, 0xffffffffffffffb8, 1) , (stack, 0xffffffffffffffb8, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(ram, 0x4c2fd0, 8) MULTIEQUAL (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000335, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x28d44b, 8)]
[ ---  CBRANCH (ram, 0x183f7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(unique, 0x1000033d, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 1) INDIRECT (stack, 0xffffffffffffffb8, 1) , (const, 0x2fa, 4)]
[ ---  CALL (ram, 0x177450, 8) , (register, 0x38, 4) , (unique, 0x100002c2, 8) , (register, 0x10, 8) , (unique, 0x100002a2, 8) , (register, 0x18, 8), (unique, 0x100002c2, 8) COPY (const, 0x2906b0, 8), (unique, 0x100002a2, 8) COPY (const, 0x28d5a3, 8), (register, 0x38, 4) INT_AND (unique, 0x10000329, 4) , (const, 0x2, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000335, 8) , (unique, 0x1000033d, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2fa, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x2fa, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x2fa, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x2fa, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2fa, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x184011, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) INT_AND (unique, 0x10000329, 4) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x136eb0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27b, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x27b, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x27b, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x27b, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x27b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x183e80, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037d, 8) , (const, 0xc, 4), (unique, 0x1000037d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x247, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x247, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x247, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x247, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x247, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[ ---  CBRANCH (ram, 0x183cd3, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[(register, 0x10, 8) COPY (const, 0x20, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x183d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000291, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc7, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0xc7, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0xc7, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0xc7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc7, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000385, 8), (unique, 0x10000385, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x17d5e0, 8) , (unique, 0x3100, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x183e98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x17d5e0, 8) , (unique, 0x3100, 8) , (register, 0x10, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x183cfe, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x101, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x101, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x101, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x101, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x101, 4)]
[ ---  CBRANCH (ram, 0x183d6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x183550, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x17e300, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x118, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x114, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x118, 4), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x114, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x118, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x114, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x118, 4), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x114, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x118, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x114, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183d8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x238, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x238, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x238, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x238, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x238, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14e, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x14e, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x14e, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x14e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x14e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x183da8, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21b, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x21b, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x21b, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x21b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21b, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (register, 0xa0, 8)]
[(unique, 0x1000032d, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x21b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x158, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x158, 4), (ram, 0x4c2fd0, 8) MULTIEQUAL (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x158, 4), (ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x158, 4), (ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) CALL (ram, 0x182890, 8) , (register, 0xa0, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x1000032d, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x183dce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x158, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x204, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x204, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x204, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x204, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x204, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x169, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x169, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x169, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x169, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x169, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0x100002fb, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000303, 8) MULTIEQUAL (ram, 0x4c2fd0, 8) , (ram, 0x4c2fd0, 8)]
[(unique, 0x1000030b, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(unique, 0x1000030f, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(unique, 0x10000317, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x183deb, 1) , (unique, 0x100002fa, 1), (unique, 0x100002fa, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x100002fb, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (unique, 0x10000303, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c3150, 4) INDIRECT (unique, 0x1000030b, 4) , (const, 0x1f6, 4)]
[(ram, 0x4c8358, 8) INDIRECT (unique, 0x1000030f, 8) , (const, 0x1f6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000317, 4) , (const, 0x1f6, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0xa0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000317, 4)]
[(ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (unique, 0x1000030f, 8)]
[(ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (unique, 0x1000030b, 4)]
[(ram, 0x4c2fd0, 8) MULTIEQUAL (ram, 0x4c2fd0, 8) , (unique, 0x10000303, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100002fb, 8)]
[ ---  CBRANCH (ram, 0x183fa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1c6, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c6, 4)]
[ ---  CBRANCH (ram, 0x183cfe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x183550, 8) , (register, 0x30, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x17f960, 8) , (register, 0xa0, 8) , (unique, 0x3100, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x1e8, 4), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1e8, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1e8, 4), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e8, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183cfe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000017b, 8) , (const, 0x0, 8), (unique, 0x1000017b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) INT_ADD (unique, 0x10000395, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000395, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  CBRANCH (ram, 0x183e18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000183, 8) , (const, 0x0, 8), (unique, 0x10000183, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x100003a5, 8) , (const, 0x10, 8), (unique, 0x100003a5, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183cfe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0xa0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x100002ca, 8) , (unique, 0x1000029a, 8) , (const, 0xbea, 8) , (unique, 0x100002d2, 8), (unique, 0x100002d2, 8) COPY (const, 0x291120, 8), (unique, 0x100002ca, 8) COPY (const, 0x290cc8, 8), (unique, 0x1000029a, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c2fd0, 8) COPY (ram, 0x4c2fd0, 8), (ram, 0x4c2fd0, 8) INDIRECT (ram, 0x4c2fd0, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1b6, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b6, 4)]
[ ---  RETURN (const, 0x1, 4)]
