[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006d4, 8), (unique, 0x100006d4, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2141f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff00, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x611, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x611, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006dc, 8) , (const, 0x16, 4), (unique, 0x100006dc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x213e2d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x46, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x46, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x46, 4)]
[(unique, 0x10000618, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006e4, 8), (unique, 0x100006e4, 8) CALL (ram, 0x1211e0, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x213e2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006e4, 8), (unique, 0x100006e4, 8) CALL (ram, 0x1211e0, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x59, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x59, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(register, 0x0, 4) INT_OR (register, 0x30, 4) , (const, 0x4, 4)]
[(unique, 0x10000658, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x213b62, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002f2, 4) , (const, 0x0, 4), (unique, 0x100002f2, 4) INT_AND (register, 0x30, 4) , (const, 0x2, 4)]
[(unique, 0x1000065c, 4) COPY (register, 0x0, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x7f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006ec, 8) , (register, 0x18, 4), (unique, 0x100006ec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000658, 4) , (unique, 0x1000065c, 4)]
[ ---  CBRANCH (ram, 0x214208, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x1000, 8)]
[ ---  BRANCH (ram, 0x213ba5, 1)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000648, 8) COPY (register, 0x38, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000648, 8) , (register, 0xa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x90, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x90, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x90, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x90, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x90, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000608, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x213b84, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000610, 8) COPY (register, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000608, 8) , (unique, 0x10000610, 8)]
[ ---  CBRANCH (ram, 0x213b78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x213ba5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (const, 0x1000, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) COPY (const, 0x1000, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xe0, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) CAST (unique, 0x1000070c, 8), (unique, 0x1000070c, 8) INT_ADD (unique, 0x10000704, 8) , (const, 0x2c, 8), (unique, 0x10000704, 8) CAST (register, 0x0, 8), (register, 0x30, 4) INT_ADD (unique, 0x10000142, 4) , (unique, 0xbc80, 4), (unique, 0x10000142, 4) INT_ADD (unique, 0x1000014a, 4) , (const, 0x100, 4), (unique, 0x1000014a, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006fc, 8), (unique, 0x100006fc, 8) INT_ADD (unique, 0x100006f4, 8) , (const, 0x2c, 8), (unique, 0x100006f4, 8) CAST (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x213e10, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x30, 4) , (const, 0xffff, 4), (register, 0x30, 4) INT_ADD (unique, 0x10000142, 4) , (unique, 0xbc80, 4), (unique, 0x10000142, 4) INT_ADD (unique, 0x1000014a, 4) , (const, 0x100, 4), (unique, 0x1000014a, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006fc, 8), (unique, 0x100006fc, 8) INT_ADD (unique, 0x100006f4, 8) , (const, 0x2c, 8), (unique, 0x100006f4, 8) CAST (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5fd, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x601, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5fd, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x601, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5fd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000714, 8) , (const, 0x24, 4), (unique, 0x10000714, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5fd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5fd, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe7, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xe7, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xe7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe7, 4)]
[ ---  CBRANCH (ram, 0x214212, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x1000071c, 4), (unique, 0x1000071c, 4) CAST (register, 0x30, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5f9, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5f9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5f9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5f9, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x213e23, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xf7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x213e60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff10, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x213f00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000720, 8), (unique, 0x10000720, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c5, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x5c5, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5c5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5c5, 4)]
[ ---  CBRANCH (ram, 0x21410f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x117, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000730, 8), (unique, 0x10000730, 8) INT_ADD (unique, 0x10000728, 8) , (const, 0x70, 8), (unique, 0x10000728, 8) CAST (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5e4, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5d6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5e4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5d6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000748, 8), (unique, 0x10000748, 8) INT_ADD (unique, 0x10000740, 8) , (const, 0x68, 8), (unique, 0x10000740, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000738, 8) , (const, 0x81, 8), (unique, 0x10000738, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x213c0d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x111, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x111, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x111, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x111, 4)]
[ ---  CBRANCH (ram, 0x21410f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x78, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x121, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x121, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000758, 8), (unique, 0x10000758, 8) INT_ADD (unique, 0x10000750, 8) , (const, 0x70, 8), (unique, 0x10000750, 8) CAST (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000768, 8), (unique, 0x10000768, 8) INT_ADD (unique, 0x10000760, 8) , (const, 0x30, 8), (unique, 0x10000760, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000778, 8), (unique, 0x10000778, 8) INT_ADD (unique, 0x10000770, 8) , (const, 0x42, 8), (unique, 0x10000770, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000788, 8), (unique, 0x10000788, 8) INT_ADD (unique, 0x10000780, 8) , (const, 0x38, 8), (unique, 0x10000780, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x30000, 4), (unique, 0x3100, 8) CAST (unique, 0x10000798, 8), (unique, 0x10000798, 8) INT_ADD (unique, 0x10000790, 8) , (const, 0x64, 8), (unique, 0x10000790, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100007a8, 8), (unique, 0x100007a8, 8) INT_ADD (unique, 0x100007a0, 8) , (const, 0x18, 8), (unique, 0x100007a0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100007b8, 8), (unique, 0x100007b8, 8) INT_ADD (unique, 0x100007b0, 8) , (const, 0x20, 8), (unique, 0x100007b0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x14b, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x148, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x145, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x142, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x135, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x132, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x12f, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x148, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x145, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x142, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x135, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x132, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffff, 2), (unique, 0x3100, 8) CAST (unique, 0x100007c8, 8), (unique, 0x100007c8, 8) INT_ADD (unique, 0x100007c0, 8) , (const, 0x60, 8), (unique, 0x100007c0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(stack, 0xfffffffffffffef8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000660, 4) COPY (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x213d66, 1)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa0, 8)]
[(stack, 0xfffffffffffffef4, 4) COPY (unique, 0x10000668, 4), (unique, 0x10000668, 4) MULTIEQUAL (unique, 0x10000660, 4) , (unique, 0x10000664, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x158, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x158, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x158, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x158, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x158, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2140d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5c1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5c1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007d0, 8) , (const, 0x2, 4), (unique, 0x100007d0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0xb0, 2) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x213c58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bc, 4) , (const, 0x0, 4), (unique, 0x100001bc, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100007d8, 8), (unique, 0x100007d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x565, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x565, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x565, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x565, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x565, 4)]
[ ---  CBRANCH (ram, 0x214140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100007e0, 8), (unique, 0x100007e0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x117, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x578, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x578, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x578, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) CAST (unique, 0x100007f8, 8), (unique, 0x100007f8, 8) INT_ADD (unique, 0x100007f0, 8) , (unique, 0x1000035f, 8), (unique, 0x100007f0, 8) CAST (register, 0x0, 8), (unique, 0x1000035f, 8) INT_ADD (register, 0x0, 8) , (const, 0x70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000808, 8), (unique, 0x10000808, 8) INT_ADD (unique, 0x10000800, 8) , (const, 0x42, 8), (unique, 0x10000800, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000820, 8) , (const, 0x0, 4), (unique, 0x10000820, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x30000, 4), (unique, 0x3100, 8) CAST (unique, 0x10000830, 8), (unique, 0x10000830, 8) INT_ADD (unique, 0x10000828, 8) , (const, 0x64, 8), (unique, 0x10000828, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000838, 8), (unique, 0x10000838, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000840, 8), (unique, 0x10000840, 8) CAST (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10000818, 8), (unique, 0x10000818, 8) INT_AND (unique, 0x10000810, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000810, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000357, 8) , (const, 0x1, 8), (unique, 0x10000357, 8) INT_ADD (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) CAST (unique, 0x100007e8, 8), (unique, 0x100007e8, 8) CALL (ram, 0x121160, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000848, 8) , (const, 0x0, 2), (unique, 0x10000848, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000850, 8), (unique, 0x10000850, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5ba, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5b7, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5b4, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5b1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5ae, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5ab, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5a4, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x5a1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x59e, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x592, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x585, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x578, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5ba, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5b7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5b4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5b1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5ae, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5ab, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x59e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x592, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x585, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x578, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000858, 8), (unique, 0x10000858, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100007e8, 8), (unique, 0x100007e8, 8) CALL (ram, 0x121160, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17c, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x17c, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x17c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17c, 4)]
[ ---  CBRANCH (ram, 0x214140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000860, 8), (unique, 0x10000860, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x78, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x21414a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18f, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x18f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) CAST (unique, 0x10000878, 8), (unique, 0x10000878, 8) INT_ADD (unique, 0x10000870, 8) , (unique, 0x100003d7, 8), (unique, 0x10000870, 8) CAST (register, 0x0, 8), (unique, 0x100003d7, 8) INT_ADD (register, 0x0, 8) , (const, 0x70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000888, 8), (unique, 0x10000888, 8) INT_ADD (unique, 0x10000880, 8) , (const, 0x42, 8), (unique, 0x10000880, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000890, 8) , (const, 0x0, 4), (unique, 0x10000890, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x30000, 4), (unique, 0x3100, 8) CAST (unique, 0x100008a0, 8), (unique, 0x100008a0, 8) INT_ADD (unique, 0x10000898, 8) , (const, 0x64, 8), (unique, 0x10000898, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100008a8, 8), (unique, 0x100008a8, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008b0, 8) , (const, 0x0, 2), (unique, 0x100008b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100008b8, 8), (unique, 0x100008b8, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000868, 8), (unique, 0x10000868, 8) CALL (ram, 0x121160, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1c3, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1bd, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1ba, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1b7, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1b1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1ae, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1ab, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1a8, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1a5, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x198, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x18f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ba, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ae, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ab, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x198, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100008c0, 8), (unique, 0x100008c0, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000650, 8) COPY (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x213cda, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10000650, 8) , (register, 0x8, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100006cc, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x213f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x541, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x541, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x541, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x541, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x541, 4)]
[ ---  CBRANCH (ram, 0x213cfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f800, 8) , (const, 0x1, 4) , (register, 0x88, 8) , (unique, 0x100008c8, 8), (unique, 0x100008c8, 8) CAST (register, 0xb8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x553, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x553, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d8, 8) , (unique, 0xbc80, 4), (unique, 0x100008d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008d0, 8), (unique, 0x100008d0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d5, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x1d5, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d5, 4)]
[(unique, 0x100005f0, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d5, 4)]
[ ---  CBRANCH (ram, 0x214080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (register, 0x88, 8) , (register, 0xb8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008e8, 8), (unique, 0x100008e8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f7, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x4f7, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4f7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f7, 4)]
[ ---  CBRANCH (ram, 0x214130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f800, 8) , (const, 0x1, 4) , (unique, 0xbd80, 8) , (unique, 0x100008f0, 8), (unique, 0x100008f0, 8) CAST (register, 0xb8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100008e0, 8), (unique, 0x100008e0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x50d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x50d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008f8, 8) , (unique, 0xbc80, 4), (unique, 0x100008f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x213f8a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000447, 8) , (const, 0x0, 8), (unique, 0x10000447, 8) PTRSUB (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 8), (unique, 0x3200, 8) PTRADD (unique, 0x10000457, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x10000457, 8) PTRSUB (register, 0xb8, 8) , (const, 0x78, 8)]
[(unique, 0x10000638, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0xb8, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x11, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000638, 8) , (unique, 0x10000640, 8)]
[ ---  CBRANCH (ram, 0x213fb0, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000640, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000477, 8) , (const, 0x8, 8), (unique, 0x10000477, 8) INT_ADD (unique, 0x1000046f, 8) , (const, 0x1, 8), (unique, 0x1000046f, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x213fad, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x52f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x52f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xa, 2), (unique, 0x3100, 8) CAST (unique, 0x10000908, 8), (unique, 0x10000908, 8) INT_ADD (unique, 0x10000900, 8) , (const, 0x62, 8), (unique, 0x10000900, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x213d3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000910, 8) , (const, 0x0, 4), (unique, 0x10000910, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100005f0, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x509, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x505, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x509, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x505, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xd, 2), (unique, 0x3100, 8) CAST (unique, 0x10000920, 8), (unique, 0x10000920, 8) INT_ADD (unique, 0x10000918, 8) , (const, 0x62, 8), (unique, 0x10000918, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x213d2e, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x213ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xf000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0xb8, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000049f, 8), (unique, 0x1000049f, 8) PTRSUB (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0xb8, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x474, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x471, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x46e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x474, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x471, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x46e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xb, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0xb8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x214050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000928, 8), (unique, 0x10000928, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x214068, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000938, 8), (unique, 0x10000938, 8) INT_ADD (unique, 0x10000930, 8) , (const, 0x71, 8), (unique, 0x10000930, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x21400d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2e00, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000940, 8), (unique, 0x10000940, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000948, 8), (unique, 0x10000948, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100005af, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x21402b, 1) , (unique, 0x100005b7, 1), (unique, 0x100005b7, 1) INT_SLESS (const, 0xffff, 2) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) MULTIEQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2)]
[ ---  CBRANCH (ram, 0x214020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000950, 8), (unique, 0x10000950, 8) INT_ADD (unique, 0x100005af, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x214020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000958, 8), (unique, 0x10000958, 8) INT_ADD (unique, 0x100005af, 8) , (const, 0x50, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0x100005af, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4b1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4ae, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4b1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4ae, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2, 2), (unique, 0x3100, 8) CAST (unique, 0x10000968, 8), (unique, 0x10000968, 8) INT_ADD (unique, 0x10000960, 8) , (const, 0x62, 8), (unique, 0x10000960, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x213d2e, 1)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000978, 8), (unique, 0x10000978, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000970, 8), (unique, 0x10000970, 8) INT_ADD (unique, 0x100005af, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x48c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 2), (unique, 0x3100, 8) CAST (unique, 0x10000988, 8), (unique, 0x10000988, 8) INT_ADD (unique, 0x10000980, 8) , (const, 0x62, 8), (unique, 0x10000980, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x213d2e, 1)]
[ ---  CBRANCH (ram, 0x214120, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xa000, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x455, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x455, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xc, 2), (unique, 0x3100, 8) CAST (unique, 0x10000998, 8), (unique, 0x10000998, 8) INT_ADD (unique, 0x10000990, 8) , (const, 0x62, 8), (unique, 0x10000990, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x213d2e, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x216, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x216, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x100009a8, 8), (unique, 0x100009a8, 8) INT_ADD (unique, 0x100009a0, 8) , (const, 0x62, 8), (unique, 0x100009a0, 8) CAST (register, 0x18, 8), (register, 0x0, 2) INT_ADD (unique, 0x100002f6, 2) , (const, 0x3, 2), (unique, 0x100002f6, 2) INT_MULT (unique, 0x100002fa, 2) , (const, 0x5, 2), (unique, 0x100002fa, 2) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x213fc1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x22d, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100009b0, 8), (unique, 0x100009b0, 8) CAST (stack, 0xfffffffffffffef8, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x1000068c, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x43f, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x43f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x1000069c, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2140c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffef8, 8) , (const, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x449, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x449, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100009b8, 8), (unique, 0x100009b8, 8) CAST (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff20, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000674, 8) COPY (stack, 0xfffffffffffffef8, 8)]
[(unique, 0x10000694, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x213d48, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff20, 8) COPY (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) MULTIEQUAL (unique, 0x1000068c, 8) , (unique, 0x10000694, 8) , (unique, 0x1000069c, 8)]
[(stack, 0xfffffffffffffef8, 8) COPY (unique, 0x10000684, 8), (unique, 0x10000684, 8) MULTIEQUAL (unique, 0x100006cc, 8) , (unique, 0x10000674, 8) , (unique, 0x100006cc, 8)]
[(unique, 0x10000664, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (stack, 0xfffffffffffffef4, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x214150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x213e6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x213e6b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x100009c0, 4), (unique, 0x100009c0, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x100006b4, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100009cc, 8), (unique, 0x100009cc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x214220, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0x100009d4, 4), (unique, 0x100009d4, 4) CAST (unique, 0x3100, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009c4, 8), (unique, 0x100009c4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009d8, 8) , (register, 0x0, 4), (unique, 0x100009d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (stack, 0xfffffffffffffef4, 4) , (const, 0x29, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x413, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x413, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x40d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x413, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x40d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x413, 4)]
[ ---  CBRANCH (ram, 0x214253, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100009e4, 8), (unique, 0x100009e4, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100009e0, 4), (unique, 0x100009e0, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (stack, 0xfffffffffffffef4, 4) , (const, 0x29, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x428, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x428, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x42e, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x42b, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x428, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x42e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x42b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x428, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009ec, 8) , (const, 0x0, 4), (unique, 0x100009ec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x213e6b, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x421, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x421, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x100006bc, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x214179, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x28a, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28a, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x18, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000600, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(unique, 0x10000600, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000600, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x100006ac, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100006ac, 8) , (unique, 0x100006b4, 8) , (unique, 0x100006bc, 8)]
[ ---  CBRANCH (ram, 0x214180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100009f4, 8), (unique, 0x100009f4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a0, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2a0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2a0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a0, 4)]
[ ---  CALL (ram, 0x1426d0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x8, 8) , (unique, 0x10000a00, 8), (unique, 0x10000a00, 8) CAST (unique, 0xbd80, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100009fc, 4), (unique, 0x100009fc, 4) CAST (unique, 0x3100, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000a08, 8), (unique, 0x10000a08, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000537, 8) , (const, 0x8, 8), (unique, 0x10000537, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (stack, 0xfffffffffffffef4, 4) , (const, 0x1, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000a08, 8), (unique, 0x10000a08, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x100005f8, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000a08, 8), (unique, 0x10000a08, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2c7, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c7, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000a10, 8), (unique, 0x10000a10, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100005f8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2141b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100005f8, 8) , (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2e0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000567, 8) , (const, 0x8, 8), (unique, 0x10000567, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000a18, 4), (unique, 0x10000a18, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (stack, 0xfffffffffffffef4, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x213e6b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff10, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffef8, 8) , (unique, 0xbd80, 8) , (stack, 0xfffffffffffffef8, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x213f40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001f8, 4) , (const, 0x0, 4), (unique, 0x100001f8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a1c, 8), (unique, 0x10000a1c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e4, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3e4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e4, 4)]
[ ---  CBRANCH (ram, 0x214246, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x117, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000a34, 8), (unique, 0x10000a34, 8) INT_ADD (unique, 0x10000a2c, 8) , (const, 0x70, 8), (unique, 0x10000a2c, 8) CAST (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3ff, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3f3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ff, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a44, 8), (unique, 0x10000a44, 8) INT_ADD (unique, 0x10000a3c, 8) , (const, 0x68, 8), (unique, 0x10000a3c, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000a24, 8) , (const, 0x81, 8), (unique, 0x10000a24, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x213e94, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f6, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2f6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f6, 4)]
[ ---  CBRANCH (ram, 0x214246, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x78, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3a4, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2140e3, 1)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8) , (register, 0x0, 8)]
[(unique, 0x100005c1, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100005c9, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(unique, 0x100005cb, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100005d3, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x214101, 1) , (unique, 0x100005b8, 1), (unique, 0x100005b8, 1) INT_NOTEQUAL (unique, 0x100005b9, 8) , (const, 0x0, 8), (unique, 0x100005b9, 8) MULTIEQUAL (unique, 0x100006c4, 8) , (register, 0x18, 8) , (stack, 0xfffffffffffffef8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100005c1, 8) , (const, 0x3b8, 4)]
[(ram, 0x60, 2) INDIRECT (unique, 0x100005c9, 2) , (const, 0x3b8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100005cb, 8) , (const, 0x3b8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100005d3, 8) , (const, 0x3b8, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x100005b9, 8)]
[(unique, 0x100006c4, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000a4c, 8), (unique, 0x10000a4c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100005b9, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100005c1, 8) , (const, 0x3ca, 4)]
[(ram, 0x60, 2) INDIRECT (unique, 0x100005c9, 2) , (const, 0x3ca, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100005cb, 8) , (const, 0x3ca, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100005d3, 8) , (const, 0x3ca, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x303, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x303, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000a5c, 8), (unique, 0x10000a5c, 8) INT_ADD (unique, 0x10000a54, 8) , (const, 0x70, 8), (unique, 0x10000a54, 8) CAST (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000a6c, 8), (unique, 0x10000a6c, 8) INT_ADD (unique, 0x10000a64, 8) , (const, 0x42, 8), (unique, 0x10000a64, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a7c, 8), (unique, 0x10000a7c, 8) INT_ADD (unique, 0x10000a74, 8) , (const, 0x30, 8), (unique, 0x10000a74, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000a8c, 8), (unique, 0x10000a8c, 8) INT_ADD (unique, 0x10000a84, 8) , (const, 0x38, 8), (unique, 0x10000a84, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a9c, 8), (unique, 0x10000a9c, 8) INT_ADD (unique, 0x10000a94, 8) , (const, 0x18, 8), (unique, 0x10000a94, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000aac, 8), (unique, 0x10000aac, 8) INT_ADD (unique, 0x10000aa4, 8) , (const, 0x20, 8), (unique, 0x10000aa4, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000abc, 8), (unique, 0x10000abc, 8) INT_ADD (unique, 0x10000ab4, 8) , (const, 0x10, 8), (unique, 0x10000ab4, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x9, 4), (unique, 0x3100, 8) CAST (unique, 0x10000acc, 8), (unique, 0x10000acc, 8) INT_ADD (unique, 0x10000ac4, 8) , (const, 0x62, 8), (unique, 0x10000ac4, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x332, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x32f, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x32c, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x329, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x327, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x324, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x321, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x31e, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x31b, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x332, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x329, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x327, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x324, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x321, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 2), (unique, 0x3100, 8) CAST (unique, 0x10000adc, 8), (unique, 0x10000adc, 8) INT_ADD (unique, 0x10000ad4, 8) , (const, 0x66, 8), (unique, 0x10000ad4, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x213e2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x0, 4), (register, 0xa0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x356, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x362, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x356, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x362, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x356, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ae4, 8) , (register, 0x0, 4), (unique, 0x10000ae4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x1000030f, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x1000030f, 8) COPY (const, 0x2b57d8, 8)]
[ ---  CBRANCH (ram, 0x213e2d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x1000030f, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x1000030f, 8) COPY (const, 0x2b57d8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x36a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000af4, 8) , (unique, 0xbd00, 4), (unique, 0x10000af4, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000aec, 8), (unique, 0x10000aec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x213e2d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3d1, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x213e23, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e0, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3e0, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e0, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e0, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000618, 8) , (unique, 0x10000618, 8) , (unique, 0x10000618, 8) , (unique, 0x10000618, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x214270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000afc, 8), (unique, 0x10000afc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a0, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3a0, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a0, 4)]
[ ---  RETURN (const, 0x1, 4)]
