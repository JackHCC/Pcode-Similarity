[ ---  CBRANCH (ram, 0x1fa480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000107, 4) , (const, 0x0, 4), (unique, 0x10000107, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff00, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b4, 8) , (const, 0x16, 4), (unique, 0x100004b4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4e7, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4e7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x30, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x30, 4)]
[ ---  CBRANCH (ram, 0x1fa514, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) CALL (ram, 0x11f870, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000117, 4) , (const, 0x0, 4), (unique, 0x10000117, 4) INT_AND (register, 0x30, 4) , (const, 0x2, 4)]
[(register, 0x18, 4) INT_OR (register, 0x30, 4) , (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x1f9fa2, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x51, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x51, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004c4, 8) , (register, 0x18, 4), (unique, 0x100004c4, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1fa4df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x18, 8) COPY (const, 0x1000, 8)]
[ ---  BRANCH (ram, 0x1f9fed, 1)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000450, 8) COPY (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000450, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x6b, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6b, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000440, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1f9fcc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000448, 8) COPY (register, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000440, 8) , (unique, 0x10000448, 8)]
[ ---  CBRANCH (ram, 0x1f9fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f9fed, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (const, 0x1000, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) COPY (const, 0x1000, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xb8, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb8, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x30, 4), (unique, 0x3800, 8) CAST (unique, 0x100004e4, 8), (unique, 0x100004e4, 8) INT_ADD (unique, 0x100004dc, 8) , (const, 0x2c, 8), (unique, 0x100004dc, 8) CAST (register, 0x0, 8), (register, 0x30, 4) INT_ADD (unique, 0x10000127, 4) , (unique, 0xbc80, 4), (unique, 0x10000127, 4) INT_ADD (unique, 0x1000012f, 4) , (const, 0x100, 4), (unique, 0x1000012f, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100004d4, 8), (unique, 0x100004d4, 8) INT_ADD (unique, 0x100004cc, 8) , (const, 0x2c, 8), (unique, 0x100004cc, 8) CAST (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1fa220, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0xfffe, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_ADD (unique, 0x10000127, 4) , (unique, 0xbc80, 4), (unique, 0x10000127, 4) INT_ADD (unique, 0x1000012f, 4) , (const, 0x100, 4), (unique, 0x1000012f, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100004d4, 8), (unique, 0x100004d4, 8) INT_ADD (unique, 0x100004cc, 8) , (const, 0x2c, 8), (unique, 0x100004cc, 8) CAST (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4c1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4bd, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4c1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4bd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004ec, 8) , (const, 0x24, 4), (unique, 0x100004ec, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4bd, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4bd, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc2, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xc2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc2, 4)]
[ ---  CBRANCH (ram, 0x1fa524, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100004f4, 4), (unique, 0x100004f4, 4) CAST (register, 0x30, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xd2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa4a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000263, 4) , (const, 0x0, 4), (unique, 0x10000263, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004f8, 8), (unique, 0x100004f8, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000500, 8), (unique, 0x10000500, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xed, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xed, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xed, 4)]
[ ---  CBRANCH (ram, 0x1fa51c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x117, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000510, 8), (unique, 0x10000510, 8) INT_ADD (unique, 0x10000508, 8) , (const, 0x70, 8), (unique, 0x10000508, 8) CAST (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x113, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0xfe, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x113, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xfe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000528, 8), (unique, 0x10000528, 8) INT_ADD (unique, 0x10000520, 8) , (const, 0x68, 8), (unique, 0x10000520, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000518, 8) , (const, 0x81, 8), (unique, 0x10000518, 8) CAST (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x480, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x480, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x480, 4)]
[ ---  CBRANCH (ram, 0x1fa51c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x78, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x490, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x490, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000538, 8), (unique, 0x10000538, 8) INT_ADD (unique, 0x10000530, 8) , (const, 0x70, 8), (unique, 0x10000530, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa070, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000548, 8), (unique, 0x10000548, 8) INT_ADD (unique, 0x10000540, 8) , (const, 0x30, 8), (unique, 0x10000540, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000558, 8), (unique, 0x10000558, 8) INT_ADD (unique, 0x10000550, 8) , (const, 0x64, 8), (unique, 0x10000550, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000568, 8), (unique, 0x10000568, 8) INT_ADD (unique, 0x10000560, 8) , (const, 0x42, 8), (unique, 0x10000560, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000578, 8), (unique, 0x10000578, 8) INT_ADD (unique, 0x10000570, 8) , (const, 0x38, 8), (unique, 0x10000570, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 2), (unique, 0x3100, 8) CAST (unique, 0x10000588, 8), (unique, 0x10000588, 8) INT_ADD (unique, 0x10000580, 8) , (const, 0x66, 8), (unique, 0x10000580, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000598, 8), (unique, 0x10000598, 8) INT_ADD (unique, 0x10000590, 8) , (const, 0x18, 8), (unique, 0x10000590, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a8, 8), (unique, 0x100005a8, 8) INT_ADD (unique, 0x100005a0, 8) , (const, 0x20, 8), (unique, 0x100005a0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x14d, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x14a, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x147, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x144, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x141, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x13d, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x13a, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x12b, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x147, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x144, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x141, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x13d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x13a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12b, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffff, 2), (unique, 0x3100, 8) CAST (unique, 0x100005b8, 8), (unique, 0x100005b8, 8) INT_ADD (unique, 0x100005b0, 8) , (const, 0x60, 8), (unique, 0x100005b0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000458, 4) COPY (stack, 0xffffffffffffff9c, 4), (stack, 0xffffffffffffff9c, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1fa19b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0xa8, 8)]
[(stack, 0xffffffffffffff9c, 4) COPY (unique, 0x10000460, 4), (unique, 0x10000460, 4) MULTIEQUAL (unique, 0x10000458, 4) , (unique, 0x1000045c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x158, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x158, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x158, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1fa290, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x47a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x47a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005c0, 8) , (const, 0x2, 4), (unique, 0x100005c0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa0c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000019f, 4) , (const, 0x0, 4), (unique, 0x1000019f, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005c8, 8), (unique, 0x100005c8, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x45a, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x45a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x45a, 4)]
[ ---  CBRANCH (ram, 0x1fa258, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46d, 4)]
[(register, 0x0, 8) CALL (ram, 0x18e5c0, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x100005d0, 8) , (const, 0x70, 8), (unique, 0x100005d0, 8) CAST (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x472, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x46d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x472, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x46d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) CAST (unique, 0x100005e0, 8), (unique, 0x100005e0, 8) INT_ADD (unique, 0x100005d8, 8) , (unique, 0x100002eb, 8), (unique, 0x100005d8, 8) CAST (register, 0x0, 8), (unique, 0x100002eb, 8) INT_ADD (register, 0x0, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17d, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x17d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x17d, 4)]
[ ---  CBRANCH (ram, 0x1fa258, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x117, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x1fa262, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x190, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) CAST (unique, 0x100005f8, 8), (unique, 0x100005f8, 8) INT_ADD (unique, 0x100005f0, 8) , (unique, 0x1000030b, 8), (unique, 0x100005f0, 8) CAST (register, 0x0, 8), (unique, 0x1000030b, 8) INT_ADD (register, 0x0, 8) , (const, 0x70, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1a6, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x19a, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x190, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a6, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x19a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x190, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000608, 8), (unique, 0x10000608, 8) INT_ADD (unique, 0x10000600, 8) , (const, 0x68, 8), (unique, 0x10000600, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) CALL (ram, 0x18e5c0, 8) , (unique, 0x3100, 8) , (register, 0xb8, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x100005e8, 8) , (const, 0x70, 8), (unique, 0x100005e8, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa0f8, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 2), (register, 0x18, 2) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000618, 8), (unique, 0x10000618, 8) INT_ADD (unique, 0x10000610, 8) , (const, 0x42, 8), (unique, 0x10000610, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000628, 8), (unique, 0x10000628, 8) INT_ADD (unique, 0x10000620, 8) , (const, 0x38, 8), (unique, 0x10000620, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000638, 8), (unique, 0x10000638, 8) INT_ADD (unique, 0x10000630, 8) , (const, 0x64, 8), (unique, 0x10000630, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000648, 8), (unique, 0x10000648, 8) INT_ADD (unique, 0x10000640, 8) , (const, 0x30, 8), (unique, 0x10000640, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 2), (unique, 0x3100, 8) CAST (unique, 0x10000658, 8), (unique, 0x10000658, 8) INT_ADD (unique, 0x10000650, 8) , (const, 0x66, 8), (unique, 0x10000650, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000668, 8), (unique, 0x10000668, 8) INT_ADD (unique, 0x10000660, 8) , (const, 0x18, 8), (unique, 0x10000660, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000678, 8), (unique, 0x10000678, 8) INT_ADD (unique, 0x10000670, 8) , (const, 0x20, 8), (unique, 0x10000670, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000688, 8), (unique, 0x10000688, 8) INT_ADD (unique, 0x10000680, 8) , (const, 0x60, 8), (unique, 0x10000680, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000698, 8), (unique, 0x10000698, 8) INT_ADD (unique, 0x10000690, 8) , (const, 0x8, 8), (unique, 0x10000690, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) CAST (unique, 0x100006a8, 8), (unique, 0x100006a8, 8) INT_ADD (unique, 0x100006a0, 8) , (const, 0x28, 8), (unique, 0x100006a0, 8) CAST (register, 0xb0, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1f2, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1ef, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1ec, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1e9, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1e6, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1e1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1de, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1d7, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1d4, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1d1, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x1b7, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ef, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ec, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e9, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e6, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1de, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b7, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1fa160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 2) , (const, 0x5, 2), (register, 0x0, 2) CALL (ram, 0x1f9230, 8) , (unique, 0xbc80, 4) , (register, 0xb0, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 2) COPY (const, 0x1, 2)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x210, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x210, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x100006b8, 8), (unique, 0x100006b8, 8) INT_ADD (unique, 0x100006b0, 8) , (const, 0x62, 8), (unique, 0x100006b0, 8) CAST (register, 0xb0, 8), (register, 0x0, 2) MULTIEQUAL (register, 0x0, 2) , (register, 0x0, 2)]
[(unique, 0x100004ac, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1fa268, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x436, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x436, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100006c8, 8), (unique, 0x100006c8, 8) INT_ADD (unique, 0x100006c0, 8) , (const, 0x10, 8), (unique, 0x100006c0, 8) CAST (register, 0xb0, 8)]
[(unique, 0x10000494, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1fa4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffa0, 8) , (const, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x440, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x440, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) CAST (unique, 0x100006d8, 8), (unique, 0x100006d8, 8) INT_ADD (unique, 0x100006d0, 8) , (const, 0x10, 8), (unique, 0x100006d0, 8) CAST (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000046c, 8) COPY (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x1000048c, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x1fa17f, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x21a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3100, 8) CAST (unique, 0x100006e8, 8), (unique, 0x100006e8, 8) INT_ADD (unique, 0x100006e0, 8) , (const, 0x10, 8), (unique, 0x100006e0, 8) CAST (register, 0xb0, 8)]
[(unique, 0x10000484, 8) COPY (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0x1000049c, 8), (unique, 0x1000049c, 8) MULTIEQUAL (unique, 0x10000484, 8) , (unique, 0x1000048c, 8) , (unique, 0x10000494, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) MULTIEQUAL (unique, 0x100004ac, 8) , (unique, 0x1000046c, 8) , (unique, 0x100004ac, 8)]
[(unique, 0x1000045c, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (stack, 0xffffffffffffff9c, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1fa2e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa388, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1fa4e9, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x3100, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006f0, 8), (unique, 0x100006f0, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x10000430, 8) COPY (unique, 0x100006f8, 8), (unique, 0x100006f8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000700, 8) , (register, 0x0, 4), (unique, 0x10000700, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (stack, 0xffffffffffffff9c, 4) , (const, 0x29, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x40b, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x405, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x40b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x405, 4)]
[ ---  CBRANCH (ram, 0x1fa548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000708, 8), (unique, 0x10000708, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (stack, 0xffffffffffffff9c, 4) , (const, 0x29, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x425, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x422, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x41f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x425, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x422, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x41f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000710, 8) , (const, 0x0, 4), (unique, 0x10000710, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1fa388, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x418, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x418, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1fa310, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x276, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x276, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000430, 8) , (unique, 0x10000438, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000438, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000430, 8) , (unique, 0x10000438, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000720, 8), (unique, 0x10000720, 8) INT_ADD (unique, 0x10000718, 8) , (const, 0x10, 8), (unique, 0x10000718, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x28f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x28f, 4)]
[ ---  CALL (ram, 0x139750, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (const, 0x8, 8) , (unique, 0x10000728, 8), (unique, 0x10000728, 8) CAST (unique, 0xbd80, 8), (register, 0x30, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000420, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000730, 8), (unique, 0x10000730, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff9c, 4) , (const, 0x0, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000035b, 8) , (const, 0x8, 8), (unique, 0x1000035b, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (stack, 0xffffffffffffff9c, 4) , (const, 0x1, 4)]
[(unique, 0x10000428, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2c4, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c4, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000740, 8), (unique, 0x10000740, 8) INT_ADD (unique, 0x10000738, 8) , (const, 0x10, 8), (unique, 0x10000738, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000428, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000428, 8) , (register, 0x0, 8)]
[(unique, 0x10000418, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000383, 8) , (const, 0x8, 8), (unique, 0x10000383, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (stack, 0xffffffffffffff9c, 4) , (const, 0x1, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2dc, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2dc, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000750, 8), (unique, 0x10000750, 8) INT_ADD (unique, 0x10000748, 8) , (const, 0x10, 8), (unique, 0x10000748, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000418, 8) , (unique, 0x10000420, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1fa4a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000021f, 4) , (const, 0x0, 4), (unique, 0x1000021f, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000758, 8), (unique, 0x10000758, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3d7, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d7, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1fa533, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x117, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000770, 8), (unique, 0x10000770, 8) INT_ADD (unique, 0x10000768, 8) , (const, 0x70, 8), (unique, 0x10000768, 8) CAST (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3f2, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3e6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3f2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) CAST (unique, 0x10000780, 8), (unique, 0x10000780, 8) INT_ADD (unique, 0x10000778, 8) , (const, 0x68, 8), (unique, 0x10000778, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000760, 8) , (const, 0x81, 8), (unique, 0x10000760, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa3b3, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2f1, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1fa533, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x78, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x398, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x398, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa2a3, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (register, 0x0, 8)]
[(unique, 0x10000404, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(unique, 0x10000406, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x1fa2c1, 1) , (unique, 0x100003fb, 1), (unique, 0x100003fb, 1) INT_NOTEQUAL (unique, 0x100003fc, 8) , (const, 0x0, 8), (unique, 0x100003fc, 8) MULTIEQUAL (unique, 0x100004a4, 8) , (register, 0x18, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x60, 2) INDIRECT (unique, 0x10000404, 2) , (const, 0x3ac, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000406, 8) , (const, 0x3ac, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100003fc, 8)]
[(unique, 0x100004a4, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000790, 8), (unique, 0x10000790, 8) INT_ADD (unique, 0x10000788, 8) , (const, 0x10, 8), (unique, 0x10000788, 8) CAST (unique, 0x100003fc, 8)]
[(ram, 0x60, 2) INDIRECT (unique, 0x10000404, 2) , (const, 0x3be, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000406, 8) , (const, 0x3be, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x2fe, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2fe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x100007a0, 8), (unique, 0x100007a0, 8) INT_ADD (unique, 0x10000798, 8) , (const, 0x70, 8), (unique, 0x10000798, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x100007b0, 8), (unique, 0x100007b0, 8) INT_ADD (unique, 0x100007a8, 8) , (const, 0x42, 8), (unique, 0x100007a8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) CAST (unique, 0x100007c0, 8), (unique, 0x100007c0, 8) INT_ADD (unique, 0x100007b8, 8) , (const, 0x30, 8), (unique, 0x100007b8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100007d0, 8), (unique, 0x100007d0, 8) INT_ADD (unique, 0x100007c8, 8) , (const, 0x38, 8), (unique, 0x100007c8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x100007e0, 8), (unique, 0x100007e0, 8) INT_ADD (unique, 0x100007d8, 8) , (const, 0x64, 8), (unique, 0x100007d8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 2), (unique, 0x3100, 8) CAST (unique, 0x100007f0, 8), (unique, 0x100007f0, 8) INT_ADD (unique, 0x100007e8, 8) , (const, 0x66, 8), (unique, 0x100007e8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000800, 8), (unique, 0x10000800, 8) INT_ADD (unique, 0x100007f8, 8) , (const, 0x18, 8), (unique, 0x100007f8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000810, 8), (unique, 0x10000810, 8) INT_ADD (unique, 0x10000808, 8) , (const, 0x20, 8), (unique, 0x10000808, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000820, 8), (unique, 0x10000820, 8) INT_ADD (unique, 0x10000818, 8) , (const, 0x10, 8), (unique, 0x10000818, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x33b, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x338, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x335, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x333, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x330, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x32d, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x32a, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x327, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x324, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x321, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x33b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x338, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x335, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x333, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x330, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x32d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x32a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x327, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x324, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x321, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x9, 2), (unique, 0x3100, 8) CAST (unique, 0x10000830, 8), (unique, 0x10000830, 8) INT_ADD (unique, 0x10000828, 8) , (const, 0x62, 8), (unique, 0x10000828, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1fa243, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x4, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x36b, 4), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x35f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x36b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x35f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000838, 8) , (register, 0x0, 4), (unique, 0x10000838, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 4) CALL (ram, 0x1f6780, 8) , (unique, 0x100002b3, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100002b3, 8) COPY (const, 0x28df1b, 8)]
[ ---  CBRANCH (ram, 0x1fa243, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6780, 8) , (unique, 0x100002b3, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100002b3, 8) COPY (const, 0x28df1b, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000848, 8) , (unique, 0xbd00, 4), (unique, 0x10000848, 8) CAST (unique, 0x3800, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000840, 8), (unique, 0x10000840, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x373, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x373, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3c4, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c4, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1fa238, 1)]
[(ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x4b6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4b6, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1fa238, 1)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x60, 2) COPY (ram, 0x60, 2), (ram, 0x60, 2) INDIRECT (ram, 0x60, 2) , (const, 0x3d3, 4), (ram, 0x60, 2) MULTIEQUAL (ram, 0x60, 2) , (ram, 0x60, 2) , (ram, 0x60, 2)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d3, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
