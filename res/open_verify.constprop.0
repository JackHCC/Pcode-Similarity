[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x2c, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x2c, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x2c, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x2c, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x2c, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2c, 4)]
[ ---  CBRANCH (ram, 0x47cfdc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (register, 0x38, 8) , (const, 0x80000, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000052b, 8), (unique, 0x1000052b, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x4b, 4), (ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x47, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x4b, 4), (ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x47, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x4b, 4), (ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x47, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x4b, 4), (ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x47, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x4b, 4), (ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x47, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x4b, 4), (ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x47, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x6a, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x6a, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x6a, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x6a, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x6a, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x6a, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x47d39c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x456020, 8) , (register, 0x0, 4) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000533, 8), (unique, 0x10000533, 8) CAST (stack, 0xffffffffffffffc0, 8), (register, 0x10, 8) INT_SUB (const, 0x340, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x47ced1, 1)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x84, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x84, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x84, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x84, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x84, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x84, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47cea7, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0x40, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[ ---  CBRANCH (ram, 0x47d1e0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000053b, 8) , (const, 0x40, 8), (unique, 0x1000053b, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x88, 8) COPY (const, 0x4af494, 8)]
[(unique, 0x1000044f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47d1fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000543, 8), (unique, 0x10000543, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x88, 8) COPY (const, 0x4af4a3, 8)]
[(unique, 0x10000457, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000045f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47d218, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x10102464c457f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x10000513, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x1000045f, 8) , (unique, 0x10000467, 8)]
[ ---  CBRANCH (ram, 0x47d238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000054b, 8), (unique, 0x1000054b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47cf0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000055b, 8), (unique, 0x1000055b, 8) INT_ADD (unique, 0x10000553, 8) , (const, 0xf, 8), (unique, 0x10000553, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47cefc, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x47cff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (ram, 0x4afc69, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000056b, 8), (unique, 0x1000056b, 8) INT_ADD (unique, 0x10000563, 8) , (const, 0x11, 8), (unique, 0x10000563, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47cf0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb80, 2) , (ram, 0x4afc6d, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) INT_ADD (unique, 0x10000573, 8) , (const, 0x15, 8), (unique, 0x10000573, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47cf0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (ram, 0x4afc6f, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000058b, 8), (unique, 0x1000058b, 8) INT_ADD (unique, 0x10000583, 8) , (const, 0x17, 8), (unique, 0x10000583, 8) CAST (register, 0x30, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000051b, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47d377, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000059b, 8), (unique, 0x1000059b, 8) INT_ADD (unique, 0x10000593, 8) , (const, 0x1c, 8), (unique, 0x10000593, 8) CAST (register, 0x30, 8)]
[(register, 0x88, 8) COPY (const, 0x4af6d8, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[ ---  CBRANCH (ram, 0x47d388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x3e, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005ab, 8), (unique, 0x100005ab, 8) INT_ADD (unique, 0x100005a3, 8) , (const, 0x1a, 8), (unique, 0x100005a3, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47d390, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 2) , (unique, 0x100005bb, 2), (unique, 0x100005bb, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100005b3, 8), (unique, 0x100005b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) COPY (const, 0x4af6b0, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[ ---  CBRANCH (ram, 0x47d3a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x38, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c5, 8), (unique, 0x100005c5, 8) INT_ADD (unique, 0x100005bd, 8) , (const, 0x3e, 8), (unique, 0x100005bd, 8) CAST (register, 0x30, 8)]
[(register, 0x88, 8) COPY (const, 0x4af770, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[ ---  CBRANCH (ram, 0x47d2a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100005dd, 8) , (unique, 0xbd80, 8), (unique, 0x100005dd, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100005d5, 8), (unique, 0x100005d5, 8) INT_MULT (register, 0x8, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100005cd, 8), (unique, 0x100005cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000605, 8), (unique, 0x10000605, 8) INT_ADD (unique, 0x100005fd, 8) , (unique, 0x100001f9, 8), (unique, 0x100005fd, 8) CAST (register, 0x20, 8), (unique, 0x100001f9, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x100005f5, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x100005f5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005ed, 8), (unique, 0x100005ed, 8) INT_ADD (unique, 0x100005e5, 8) , (const, 0x17, 8), (unique, 0x100005e5, 8) CAST (register, 0x18, 8)]
[(unique, 0x10000219, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100005ed, 8), (unique, 0x100005ed, 8) INT_ADD (unique, 0x100005e5, 8) , (const, 0x17, 8), (unique, 0x100005e5, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47d2d4, 1) , (unique, 0x100002a2, 1), (unique, 0x100002a2, 1) INT_NOTEQUAL (register, 0x20, 8) , (unique, 0x1000060d, 8), (unique, 0x1000060d, 8) CAST (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000061d, 8), (unique, 0x1000061d, 8) INT_ADD (unique, 0x10000615, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000615, 8) CAST (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x1000062d, 8), (unique, 0x1000062d, 8) INT_ADD (unique, 0x10000625, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x10000625, 8) CAST (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x1000063d, 8), (unique, 0x1000063d, 8) INT_ADD (unique, 0x10000635, 8) , (unique, 0x10000221, 8), (unique, 0x10000635, 8) CAST (register, 0x20, 8), (unique, 0x10000221, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x10000219, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) CAST (unique, 0x1000064d, 8), (unique, 0x1000064d, 8) INT_ADD (unique, 0x10000645, 8) , (unique, 0x10000221, 8), (unique, 0x10000645, 8) CAST (register, 0x20, 8), (unique, 0x10000221, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x10000219, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47d2e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x10000219, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3880, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3880, 8), (unique, 0x3880, 8) CAST (unique, 0x1000065d, 8), (unique, 0x1000065d, 8) INT_ADD (unique, 0x10000655, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000655, 8) CAST (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47d306, 8), (register, 0x20, 8) CAST (unique, 0x10000685, 8), (unique, 0x10000685, 8) INT_ADD (unique, 0x1000067d, 8) , (unique, 0x100003ad, 8), (unique, 0x1000067d, 8) CAST (register, 0x20, 8), (unique, 0x100003ad, 8) INT_ADD (unique, 0x10000221, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x62d, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x62d, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x62d, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x62d, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x62d, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x62d, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x62d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x62d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x62d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x62d, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x10000675, 8), (unique, 0x10000675, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000066d, 8), (unique, 0x1000066d, 8) INT_ADD (unique, 0x10000665, 8) , (unique, 0x100003a5, 8), (unique, 0x10000665, 8) CAST (register, 0x20, 8), (unique, 0x100003a5, 8) INT_ADD (unique, 0x10000221, 8) , (const, 0xf, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x62d, 4)]
[ ---  CBRANCH (ram, 0x47d411, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) CAST (unique, 0x1000068d, 8), (unique, 0x1000068d, 8) CALL (ram, 0x48c220, 8) , (register, 0x0, 4) , (register, 0x88, 8) , (register, 0x18, 8), (register, 0x88, 8) CAST (unique, 0x10000675, 8), (unique, 0x10000675, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000066d, 8), (unique, 0x1000066d, 8) INT_ADD (unique, 0x10000665, 8) , (unique, 0x100003a5, 8), (unique, 0x10000665, 8) CAST (register, 0x20, 8), (unique, 0x100003a5, 8) INT_ADD (unique, 0x10000221, 8) , (const, 0xf, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000069d, 8), (unique, 0x1000069d, 8) INT_MULT (register, 0x8, 8) , (const, 0x38, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000695, 8), (unique, 0x10000695, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0x100003ef, 8) COPY (register, 0x20, 8)]
[(unique, 0x100004bf, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x47d07a, 1)]
[(unique, 0x100004b7, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100006ad, 8), (unique, 0x100006ad, 8) INT_ADD (unique, 0x100006a5, 8) , (unique, 0xbd80, 8), (unique, 0x100006a5, 8) CAST (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000513, 8) , (unique, 0x100003ef, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47d3b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x88, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006c5, 8), (unique, 0x100006c5, 8) INT_ADD (unique, 0x100006b5, 8) , (unique, 0x100006bd, 8), (unique, 0x100006bd, 8) CAST (register, 0x88, 8), (unique, 0x100006b5, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100004b7, 8) , (unique, 0x100004bf, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x100004af, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x47d0ac, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100004af, 8) , (register, 0x88, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47d090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47d090, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1f, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006cd, 8), (unique, 0x100006cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47d090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58b00, 8) , (const, 0x0, 8), (unique, 0x58b00, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffffb, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006d5, 8), (unique, 0x100006d5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47d330, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x200, 1) INT_LESS (unique, 0x100006f5, 8) , (unique, 0xbd80, 8), (unique, 0x100006f5, 8) CAST (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100006e5, 8) , (unique, 0x100006ed, 8), (unique, 0x100006ed, 8) CAST (unique, 0xbd80, 8), (unique, 0x100006e5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100006dd, 8), (unique, 0x100006dd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000070d, 8), (unique, 0x1000070d, 8) INT_ADD (unique, 0x100006fd, 8) , (unique, 0x10000705, 8), (unique, 0x10000705, 8) CAST (unique, 0xbd80, 8), (unique, 0x100006fd, 8) CAST (stack, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x47d166, 1)]
[(unique, 0x1000050b, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x47d340, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x10000, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47d357, 8), (register, 0x20, 8) CAST (unique, 0x1000071d, 8), (unique, 0x1000071d, 8) INT_ADD (unique, 0x10000715, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000715, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x574, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x574, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x574, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x574, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x574, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x574, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x574, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x574, 4), (stack, 0xffffffffffffffa8, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x574, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x574, 4), (stack, 0xffffffffffffffb8, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x574, 4)]
[(unique, 0x100004d7, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000072d, 8), (unique, 0x1000072d, 8) CALL (ram, 0x427240, 8) , (register, 0x90, 8) , (unique, 0x10000725, 8), (unique, 0x10000725, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x47d411, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000072d, 8), (unique, 0x1000072d, 8) CALL (ram, 0x427240, 8) , (register, 0x90, 8) , (unique, 0x10000725, 8), (unique, 0x10000725, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000755, 8), (unique, 0x10000755, 8) INT_ADD (unique, 0x1000074d, 8) , (unique, 0x1000016b, 8), (unique, 0x1000074d, 8) CAST (register, 0x20, 8), (unique, 0x1000016b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000745, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x10000745, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000073d, 8), (unique, 0x1000073d, 8) INT_ADD (unique, 0x10000735, 8) , (const, 0x17, 8), (unique, 0x10000735, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000018b, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x1000073d, 8), (unique, 0x1000073d, 8) INT_ADD (unique, 0x10000735, 8) , (const, 0x17, 8), (unique, 0x10000735, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100004e3, 8) COPY (unique, 0x1000075d, 8), (unique, 0x1000075d, 8) CAST (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47d11d, 1) , (unique, 0x100002bb, 1), (unique, 0x100002bb, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x38, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x100004e3, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000076d, 8) , (unique, 0xbe00, 8), (unique, 0x1000076d, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000765, 8), (unique, 0x10000765, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000775, 8), (unique, 0x10000775, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000193, 8) , (const, 0x1, 8), (unique, 0x10000193, 8) INT_2COMP (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0x1000018b, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x47d131, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0x1000018b, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000785, 8) , (unique, 0xbe00, 8), (unique, 0x10000785, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000077d, 8), (unique, 0x1000077d, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(unique, 0x100003cf, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100004a7, 8) COPY (register, 0x88, 8)]
[(unique, 0x100004cf, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x10000795, 8), (unique, 0x10000795, 8) INT_AND (unique, 0x1000078d, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000078d, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000365, 8) , (const, 0x1, 8), (unique, 0x10000365, 8) INT_ADD (unique, 0x10000193, 8) , (const, 0xf, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100004cf, 8) , (unique, 0x100004d7, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47d151, 8), (register, 0x20, 8) CAST (unique, 0x100007a5, 8), (unique, 0x100007a5, 8) INT_ADD (unique, 0x1000079d, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000079d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x407, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x407, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x407, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x407, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x407, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x407, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x407, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x407, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100003c7, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x407, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003cf, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100004f3, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x407, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x0, 8)]
[(unique, 0x10000503, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x407, 4), (stack, 0xffffffffffffffb0, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100004a7, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x47d409, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8), (register, 0x0, 8) CAST (unique, 0x100007ad, 8), (unique, 0x100007ad, 8) CALL (ram, 0x48c220, 8) , (register, 0x0, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x407, 4), (stack, 0xffffffffffffffb8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003cf, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47d411, 8), (register, 0x20, 8) CAST (unique, 0x100007bd, 8), (unique, 0x100007bd, 8) INT_ADD (unique, 0x100007b5, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100007b5, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x55f, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x55f, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x55f, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x55f, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x55f, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x55f, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x55f, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x55f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x55f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x55f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x55f, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000050b, 8) , (unique, 0x1000050b, 8) , (register, 0x18, 8)]
[(register, 0x88, 8) COPY (const, 0x4af4a3, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100007c5, 8), (unique, 0x100007c5, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000042f, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x20, 8) CAST (unique, 0x100007d5, 8), (unique, 0x100007d5, 8) INT_ADD (unique, 0x100007cd, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100007cd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x1000042f, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000044f, 8) , (unique, 0x10000457, 8)]
[(register, 0x20, 8) CAST (unique, 0x100007f5, 8), (unique, 0x100007f5, 8) INT_ADD (unique, 0x100007ed, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100007ed, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x1000042f, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000044f, 8) , (unique, 0x10000457, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x20, 8) CAST (unique, 0x100007e5, 8), (unique, 0x100007e5, 8) INT_ADD (unique, 0x100007dd, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100007dd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x1000042f, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000044f, 8) , (unique, 0x10000457, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47d212, 8), (register, 0x20, 8) CAST (unique, 0x10000805, 8), (unique, 0x10000805, 8) INT_ADD (unique, 0x100007fd, 8) , (const, 0xffffffffffffffe8, 8), (unique, 0x100007fd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x10000523, 8) , (unique, 0x1000042f, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000051b, 8) , (unique, 0x1000044f, 8) , (unique, 0x10000457, 8)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x197, 4), (register, 0x30, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x197, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x197, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x197, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x197, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x197, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x197, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x197, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x197, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x196, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x192, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x197, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x196, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x192, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x197, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x196, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x192, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x197, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x196, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x192, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x47cc10, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8), (register, 0x30, 8) INT_ZEXT (register, 0x0, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (unique, 0xbc80, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(unique, 0x10000467, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47ceef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x3010102464c457f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000523, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47d3fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x464c457f, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000080d, 8), (unique, 0x1000080d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x4af509, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[ ---  CBRANCH (ram, 0x47cfa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000081d, 8), (unique, 0x1000081d, 8) INT_ADD (unique, 0x10000815, 8) , (const, 0xc, 8), (unique, 0x10000815, 8) CAST (register, 0x30, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x227, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x227, 4)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x227, 4)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x227, 4)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x227, 4)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x227, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000825, 8) , (const, 0x1, 1), (unique, 0x10000825, 8) CAST (register, 0x18, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000497, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47d388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x3e, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000835, 8), (unique, 0x10000835, 8) INT_ADD (unique, 0x1000082d, 8) , (const, 0x1a, 8), (unique, 0x1000082d, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000497, 8) , (unique, 0x10000513, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47cfb0, 1)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x4af740, 8)]
[ ---  CBRANCH (ram, 0x47d1fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000845, 8), (unique, 0x10000845, 8) INT_ADD (unique, 0x1000083d, 8) , (const, 0xd, 8), (unique, 0x1000083d, 8) CAST (register, 0x30, 8)]
[(register, 0x88, 8) COPY (const, 0x4af708, 8)]
[ ---  CBRANCH (ram, 0x47d1fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000855, 8), (unique, 0x10000855, 8) INT_ADD (unique, 0x1000084d, 8) , (const, 0xe, 8), (unique, 0x1000084d, 8) CAST (register, 0x30, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000865, 8), (unique, 0x10000865, 8) INT_ADD (unique, 0x1000085d, 8) , (const, 0xf, 8), (unique, 0x1000085d, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47cf71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000865, 8), (unique, 0x10000865, 8) INT_ADD (unique, 0x1000085d, 8) , (const, 0xf, 8), (unique, 0x1000085d, 8) CAST (register, 0x30, 8)]
[(register, 0x88, 8) COPY (const, 0x4af4b9, 8)]
[ ---  CBRANCH (ram, 0x47d1fe, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x47d3b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000086d, 8), (unique, 0x1000086d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47cf8b, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x4, 1)]
[ ---  CBRANCH (ram, 0x47d3b8, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x47d3d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (ram, 0x4afc69, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000087d, 8), (unique, 0x1000087d, 8) INT_ADD (unique, 0x10000875, 8) , (const, 0x11, 8), (unique, 0x10000875, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47d3c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb80, 2) , (ram, 0x4afc6d, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000088d, 8), (unique, 0x1000088d, 8) INT_ADD (unique, 0x10000885, 8) , (const, 0x15, 8), (unique, 0x10000885, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47d3c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (ram, 0x4afc6f, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000089d, 8), (unique, 0x1000089d, 8) INT_ADD (unique, 0x10000895, 8) , (const, 0x17, 8), (unique, 0x10000895, 8) CAST (register, 0x30, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x4af4ee, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x4af51c, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(register, 0x88, 8) COPY (const, 0x4af4d1, 8)]
[ ---  BRANCH (ram, 0x47d1fe, 1)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100004fb, 8) , (unique, 0x10000503, 8) , (register, 0x88, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x100004eb, 8) , (unique, 0x100004f3, 8) , (register, 0x90, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100003bf, 8) , (unique, 0x100003c7, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x47d250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_XOR (unique, 0xbd80, 8) , (ram, 0x4afd58, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (ram, 0x4afd50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (unique, 0x3400, 8), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[ ---  CBRANCH (ram, 0x47d290, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x4, 8), (register, 0x30, 8) CAST (unique, 0x100008c5, 8), (unique, 0x100008c5, 8) INT_AND (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x30, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x98, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (register, 0x30, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xb, 8), (register, 0x98, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100008bd, 8), (unique, 0x100008bd, 8) INT_ADD (unique, 0x100008b5, 8) , (const, 0x4, 8), (unique, 0x100008b5, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008ad, 8), (unique, 0x100008ad, 8) CAST (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008a5, 8), (unique, 0x100008a5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(unique, 0x100003bf, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100008dd, 8), (unique, 0x100008dd, 8) INT_SUB (unique, 0x100008cd, 8) , (unique, 0x100008d5, 8), (unique, 0x100008d5, 8) CAST (register, 0x30, 8), (unique, 0x100008cd, 8) CAST (register, 0x10, 8)]
[(unique, 0x100004eb, 8) COPY (register, 0x90, 8)]
[(unique, 0x100004fb, 8) COPY (register, 0x88, 8)]
[(register, 0xa0, 8) CAST (unique, 0x100008f5, 8), (unique, 0x100008f5, 8) INT_ADD (unique, 0x100008e5, 8) , (unique, 0x100008ed, 8), (unique, 0x100008ed, 8) CAST (register, 0x30, 8), (unique, 0x100008e5, 8) CAST (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x47d170, 1)]
[ ---  CBRANCH (ram, 0x47d290, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47cfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008fd, 8), (unique, 0x100008fd, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47cfd4, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (ram, 0x4c8868, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x100, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000925, 8), (unique, 0x10000925, 8) INT_ADD (unique, 0x1000091d, 8) , (const, 0x1c, 8), (unique, 0x1000091d, 8) CAST (register, 0xa0, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_MULT (unique, 0x10000289, 4) , (const, 0x100, 4), (unique, 0x10000289, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000915, 8), (unique, 0x10000915, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000090d, 8), (unique, 0x1000090d, 8) INT_ADD (unique, 0x10000905, 8) , (const, 0x14, 8), (unique, 0x10000905, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x47cfd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8868, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47cfc2, 8), (register, 0x20, 8) CAST (unique, 0x10000935, 8), (unique, 0x10000935, 8) INT_ADD (unique, 0x1000092d, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000092d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x20b, 4), (ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x207, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x20b, 4), (ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x207, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x20b, 4), (ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x207, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x20b, 4), (ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x207, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x20b, 4), (ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x207, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x20b, 4), (ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x207, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x2, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000093d, 8), (unique, 0x1000093d, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x207, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100004c7, 8) COPY (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x207, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x206, 4), (stack, 0xffffffffffffffc0, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(unique, 0x100004df, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000945, 8), (unique, 0x10000945, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x47d090, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47cfd4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (register, 0x18, 8), (unique, 0x3400, 8) PTRADD (register, 0x88, 8) , (unique, 0x1000033d, 8) , (const, 0x4, 8), (unique, 0x1000033d, 8) INT_MULT (register, 0x8, 8) , (const, 0xe, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xe, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47cfd4, 1)]
[(register, 0xb8, 4) MULTIEQUAL (unique, 0x100004df, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x47cfdc, 8), (register, 0x20, 8) CAST (unique, 0x10000955, 8), (unique, 0x10000955, 8) INT_ADD (unique, 0x1000094d, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000094d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(ram, 0x4afc69, 4) INDIRECT (ram, 0x4afc69, 4) , (const, 0x212, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) INDIRECT (ram, 0x4afc6d, 2) , (const, 0x212, 4), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) INDIRECT (ram, 0x4afc6f, 1) , (const, 0x212, 4), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) INDIRECT (ram, 0x4afd50, 8) , (const, 0x212, 4), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) INDIRECT (ram, 0x4afd58, 8) , (const, 0x212, 4), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) INDIRECT (ram, 0x4c8868, 4) , (const, 0x212, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x212, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x100004c7, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8)]
[(ram, 0x4afc69, 4) COPY (ram, 0x4afc69, 4), (ram, 0x4afc69, 4) MULTIEQUAL (ram, 0x4afc69, 4) , (ram, 0x4afc69, 4)]
[(ram, 0x4afc6d, 2) COPY (ram, 0x4afc6d, 2), (ram, 0x4afc6d, 2) MULTIEQUAL (ram, 0x4afc6d, 2) , (ram, 0x4afc6d, 2)]
[(ram, 0x4afc6f, 1) COPY (ram, 0x4afc6f, 1), (ram, 0x4afc6f, 1) MULTIEQUAL (ram, 0x4afc6f, 1) , (ram, 0x4afc6f, 1)]
[(ram, 0x4afd50, 8) COPY (ram, 0x4afd50, 8), (ram, 0x4afd50, 8) MULTIEQUAL (ram, 0x4afd50, 8) , (ram, 0x4afd50, 8)]
[(ram, 0x4afd58, 8) COPY (ram, 0x4afd58, 8), (ram, 0x4afd58, 8) MULTIEQUAL (ram, 0x4afd58, 8) , (ram, 0x4afd58, 8)]
[(ram, 0x4c8868, 4) COPY (ram, 0x4c8868, 4), (ram, 0x4c8868, 4) MULTIEQUAL (ram, 0x4c8868, 4) , (ram, 0x4c8868, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb8, 4)]
