[(register, 0x18, 8) COPY (const, 0x10, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x37, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000194, 8), (unique, 0x10000194, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000174, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x49dce6, 8)]
[ ---  CBRANCH (ram, 0x454d6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) CALL (ram, 0x46ad00, 8) , (unique, 0x10000104, 8), (unique, 0x10000104, 8) COPY (const, 0x49dcf7, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x46, 4)]
[(register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x0, 8)]
[(unique, 0x1000017c, 8) COPY (register, 0x0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000174, 8) , (unique, 0x1000017c, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x30, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) INT_SUB (unique, 0x100001ac, 8) , (register, 0x0, 8), (unique, 0x100001ac, 8) CAST (unique, 0x10000134, 8), (unique, 0x10000134, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x38, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(unique, 0x100000af, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x38, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(unique, 0x10000184, 8) COPY (register, 0x20, 8)]
[(unique, 0x100000eb, 8) MULTIEQUAL (unique, 0x10000184, 8) , (unique, 0x1000018c, 8)]
[(unique, 0x100000f3, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x454dac, 1) , (unique, 0x100000e2, 1), (unique, 0x100000e2, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x30, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) CAST (unique, 0x100001c4, 8), (unique, 0x100001c4, 8) INT_ADD (unique, 0x100001bc, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x100001bc, 8) CAST (unique, 0x100000eb, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x100001e4, 8), (unique, 0x100001e4, 8) INT_ADD (unique, 0x100001dc, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001dc, 8) CAST (unique, 0x100000eb, 8)]
[(register, 0x20, 8) CAST (unique, 0x100001f4, 8), (unique, 0x100001f4, 8) INT_ADD (unique, 0x100001ec, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x100001ec, 8) CAST (unique, 0x100000eb, 8)]
[(unique, 0x1000018c, 8) COPY (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x100001d4, 8), (unique, 0x100001d4, 8) INT_ADD (unique, 0x100001cc, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x100001cc, 8) CAST (unique, 0x100000eb, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000204, 8), (unique, 0x10000204, 8) INT_ADD (unique, 0x100001fc, 8) , (unique, 0x100000b7, 8), (unique, 0x100001fc, 8) CAST (unique, 0x100000f3, 8), (unique, 0x100000b7, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000af, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) CAST (unique, 0x10000214, 8), (unique, 0x10000214, 8) INT_ADD (unique, 0x1000020c, 8) , (unique, 0x100000b7, 8), (unique, 0x1000020c, 8) CAST (unique, 0x100000f3, 8), (unique, 0x100000b7, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000af, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x454e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000af, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3880, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3880, 8), (unique, 0x3880, 8) CAST (unique, 0x10000224, 8), (unique, 0x10000224, 8) INT_ADD (unique, 0x1000021c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000021c, 8) CAST (unique, 0x100000f3, 8)]
[ ---  BRANCH (ram, 0x454dba, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x454dc8, 8), (register, 0x20, 8) CAST (unique, 0x10000234, 8), (unique, 0x10000234, 8) INT_ADD (unique, 0x1000022c, 8) , (unique, 0x10000144, 8), (unique, 0x1000022c, 8) CAST (unique, 0x100000f3, 8), (unique, 0x10000144, 8) INT_ADD (unique, 0x100000b7, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x565f5849534f502f, 8), (register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALL (ram, 0x401160, 8) , (register, 0x20, 8) , (register, 0xa0, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024c, 8) , (const, 0x5f36, 2), (unique, 0x1000024c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALL (ram, 0x401160, 8) , (register, 0x20, 8) , (register, 0xa0, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x454dee, 8), (register, 0x20, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (unique, 0x10000254, 8) , (unique, 0x1000014c, 8), (unique, 0x10000254, 8) CAST (unique, 0x100000f3, 8), (unique, 0x1000014c, 8) INT_ADD (unique, 0x100000b7, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALL (ram, 0x401060, 8) , (unique, 0x3100, 8) , (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000244, 8) , (const, 0xa, 8), (unique, 0x10000244, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALL (ram, 0x401160, 8) , (register, 0x20, 8) , (register, 0xa0, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x454e02, 8), (register, 0x20, 8) CAST (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) INT_ADD (unique, 0x10000264, 8) , (unique, 0x10000154, 8), (unique, 0x10000264, 8) CAST (unique, 0x100000f3, 8), (unique, 0x10000154, 8) INT_ADD (unique, 0x100000b7, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0xbc80, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000274, 8), (unique, 0x10000274, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xce, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbf, 4)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SRIGHT (register, 0x0, 8) , (const, 0x3f, 4), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4552a0, 8) , (const, 0x1, 4) , (register, 0x20, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x454e43, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xce, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xce, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbf, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x100000fc, 8), (unique, 0x100000fc, 8) PTRSUB (const, 0x0, 8) , (const, 0x454e48, 8), (register, 0x20, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) INT_ADD (unique, 0x10000284, 8) , (unique, 0x1000015c, 8), (unique, 0x10000284, 8) CAST (unique, 0x100000f3, 8), (unique, 0x1000015c, 8) INT_ADD (unique, 0x100000b7, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x129, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
