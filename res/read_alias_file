[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000604, 8), (unique, 0x10000604, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x18, 8) PTRADD (unique, 0x10000313, 8) , (unique, 0x100000d0, 8) , (const, 0x1, 8), (unique, 0x10000313, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8), (unique, 0x100000d0, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x25, 8), (register, 0x10, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x100000f0, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x25, 8), (register, 0x10, 8) INT_SEXT (register, 0x30, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[(unique, 0x10000583, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[(unique, 0x1000020e, 8) MULTIEQUAL (unique, 0x10000583, 8) , (unique, 0x1000058b, 8)]
[(unique, 0x10000216, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x40657a, 1) , (unique, 0x1000020d, 1), (unique, 0x1000020d, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x18, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000020e, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000614, 8) , (unique, 0xbe00, 8), (unique, 0x10000614, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000060c, 8), (unique, 0x1000060c, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x1000020e, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000020e, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x1000058b, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000020e, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x100000f8, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000f0, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x4069ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100000f0, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000624, 8) , (unique, 0xbe00, 8), (unique, 0x10000624, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000061c, 8), (unique, 0x1000061c, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x10000216, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x40658c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000063c, 8) , (const, 0x4065a0, 8), (unique, 0x1000063c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000032b, 8) , (const, 0x1, 8), (unique, 0x1000032b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (ram, 0x49a488, 8), (register, 0x0, 8) CAST (unique, 0x10000644, 8), (unique, 0x10000644, 8) CALL (ram, 0x401160, 8) , (register, 0xa0, 8) , (register, 0x38, 8), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xa7, 4), (register, 0xa0, 8) CAST (unique, 0x10000634, 8), (unique, 0x10000634, 8) INT_AND (unique, 0x1000062c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000062c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000323, 8) , (const, 0x1, 8), (unique, 0x10000323, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000064c, 8) , (ram, 0x49a490, 4), (unique, 0x1000064c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xac, 4), (register, 0x0, 8) CAST (unique, 0x10000644, 8), (unique, 0x10000644, 8) CALL (ram, 0x401160, 8) , (register, 0xa0, 8) , (register, 0x38, 8), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xa7, 4), (register, 0xa0, 8) CAST (unique, 0x10000634, 8), (unique, 0x10000634, 8) INT_AND (unique, 0x1000062c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000062c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000323, 8) , (const, 0x1, 8), (unique, 0x10000323, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (ram, 0x49a494, 2), (unique, 0x3100, 8) CAST (unique, 0x1000065c, 8), (unique, 0x1000065c, 8) INT_ADD (unique, 0x10000654, 8) , (const, 0xc, 8), (unique, 0x10000654, 8) CAST (register, 0x0, 8), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xb1, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xac, 4), (register, 0x0, 8) CAST (unique, 0x10000644, 8), (unique, 0x10000644, 8) CALL (ram, 0x401160, 8) , (register, 0xa0, 8) , (register, 0x38, 8), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xa7, 4), (register, 0xa0, 8) CAST (unique, 0x10000634, 8), (unique, 0x10000634, 8) INT_AND (unique, 0x1000062c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000062c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000323, 8) , (const, 0x1, 8), (unique, 0x10000323, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000664, 8) , (const, 0x4065cd, 8), (unique, 0x10000664, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000333, 8) , (const, 0x1, 8), (unique, 0x10000333, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb9, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xb9, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xb6, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xb1, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xac, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xa7, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xb9, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xb6, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xb1, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xac, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xa7, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xb9, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xb6, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xb1, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xac, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xa7, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xb9, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xb6, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xb1, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xac, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xa7, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xb9, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xb6, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xb1, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xac, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xa7, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xb9, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xb6, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xb1, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xac, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xa7, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xb9, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xb6, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xb1, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xac, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xa7, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xb9, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xb6, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xb1, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xac, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xa7, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xb9, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xb6, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xb1, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xac, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0xb9, 4), (stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0xa7, 4)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0xb9, 4), (stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa7, 4)]
[ ---  CBRANCH (ram, 0x4069b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x418840, 8) , (register, 0xa0, 8) , (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) COPY (const, 0x49a472, 8), (register, 0xa0, 8) CAST (unique, 0x10000634, 8), (unique, 0x10000634, 8) INT_AND (unique, 0x1000062c, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000062c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000323, 8) , (const, 0x1, 8), (unique, 0x10000323, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xf, 8)]
[(stack, 0xfffffffffffffe20, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4066a4, 1)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe28, 8)]
[(stack, 0xfffffffffffffe20, 8) COPY (const, 0x0, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xd9, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xd9, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xd9, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xd9, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xd9, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xd9, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xd9, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xd9, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xd9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c3, 8) , (register, 0x10, 4), (unique, 0x100003c3, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (register, 0x10, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x406a07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000130, 4) , (const, 0x0, 4), (unique, 0x10000130, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000066c, 8) , (const, 0x406a0f, 8), (unique, 0x1000066c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000033b, 8) , (const, 0x1, 8), (unique, 0x1000033b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x44f, 4)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x44f, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x44f, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x44f, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x44f, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x44f, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x44f, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x44f, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x44f, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x44f, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x44f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x44f, 4)]
[ ---  CALL (ram, 0x418330, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x4066a4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000674, 8) , (const, 0x406610, 8), (unique, 0x10000674, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000343, 8) , (const, 0x1, 8), (unique, 0x10000343, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xea, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xea, 4), (ram, 0x49a488, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xea, 4), (ram, 0x49a490, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xea, 4), (ram, 0x49a494, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xea, 4), (ram, 0x4c7798, 8) MULTIEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xea, 4), (ram, 0x4c77a0, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xea, 4), (ram, 0x4c77a8, 8) MULTIEQUAL (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xea, 4), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xea, 4), (ram, 0x4c8958, 8) MULTIEQUAL (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xea, 4), (ram, 0x4c8960, 8) MULTIEQUAL (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffde0, 8) MULTIEQUAL (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffde8, 8) MULTIEQUAL (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffdf0, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffdf8, 8) MULTIEQUAL (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffe00, 8) MULTIEQUAL (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffe10, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0xea, 4), (stack, 0xfffffffffffffe20, 8) MULTIEQUAL (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0xea, 4), (stack, 0xfffffffffffffe28, 1) MULTIEQUAL (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xea, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x406673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x41b3a0, 8) , (unique, 0x1000067c, 8) , (const, 0x190, 4) , (register, 0x0, 8), (unique, 0x1000067c, 8) CAST (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000684, 8) , (const, 0x406625, 8), (unique, 0x10000684, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000034b, 8) , (const, 0x1, 8), (unique, 0x1000034b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0xfa, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0xfa, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0xfa, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0xfa, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0xfa, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0xfa, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0xfa, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0xfa, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0xfa, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfa, 4)]
[(register, 0x0, 8) CALL (ram, 0x4011a0, 8) , (unique, 0x3200, 8) , (const, 0xa, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000694, 8), (unique, 0x10000694, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000068c, 8), (unique, 0x1000068c, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x10, 8) INT_ZEXT (stack, 0xfffffffffffffe28, 1), (stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0xfa, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfa, 4)]
[(unique, 0x10000593, 8) COPY (unique, 0x3200, 8)]
[(unique, 0x1000059b, 1) COPY (stack, 0xfffffffffffffe28, 1), (stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0xfa, 4)]
[(unique, 0x1000021e, 8) MULTIEQUAL (unique, 0x10000593, 8) , (register, 0xa0, 8)]
[(unique, 0x10000227, 1) MULTIEQUAL (unique, 0x1000059b, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x40665c, 1) , (unique, 0x10000226, 1), (unique, 0x10000226, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0xa0, 8) PTRADD (unique, 0x1000021e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000021e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005ac, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x406668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000227, 1) , (const, 0x0, 1)]
[(unique, 0x100005b4, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x406700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000227, 1) , (const, 0x23, 1)]
[(unique, 0x100005cc, 8) COPY (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000021e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005e4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000021e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000424, 8) MULTIEQUAL (unique, 0x100005e4, 8) , (unique, 0x100005ec, 8)]
[(unique, 0x1000041b, 8) COPY (unique, 0x100005dc, 8), (unique, 0x100005dc, 8) MULTIEQUAL (unique, 0x100005cc, 8) , (unique, 0x100005d4, 8)]
[ ---  CBRANCH (ram, 0x40671c, 1) , (unique, 0x10000423, 1), (unique, 0x10000423, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100005d4, 8) COPY (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100006c4, 8), (unique, 0x100006c4, 8) INT_ADD (unique, 0x100006bc, 8) , (const, 0x1, 8), (unique, 0x100006bc, 8) CAST (unique, 0x1000041b, 8)]
[(unique, 0x100005ec, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006b4, 8), (unique, 0x100006b4, 8) INT_ADD (unique, 0x100006ac, 8) , (const, 0x1, 8), (unique, 0x100006ac, 8) CAST (unique, 0x1000041b, 8)]
[ ---  CBRANCH (ram, 0x406718, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100006cc, 8), (unique, 0x100006cc, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (unique, 0x10000424, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x441, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006d4, 8) , (const, 0x0, 1), (unique, 0x100006d4, 8) CAST (unique, 0x1000041b, 8)]
[(unique, 0x1000049b, 8) COPY (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000049b, 8) , (unique, 0x1000041b, 8)]
[(register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x100005ec, 8) , (unique, 0x10000424, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100006dc, 8), (unique, 0x100006dc, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100005ec, 8) , (unique, 0x10000424, 8)]
[(unique, 0x10000228, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000022a, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x406752, 1) , (unique, 0x10000229, 1), (unique, 0x10000229, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) CAST (unique, 0x100006fc, 8), (unique, 0x100006fc, 8) INT_ADD (unique, 0x100006f4, 8) , (const, 0x1, 8), (unique, 0x100006f4, 8) CAST (unique, 0x1000022a, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000704, 8), (unique, 0x10000704, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006ec, 8), (unique, 0x100006ec, 8) INT_ADD (unique, 0x100006e4, 8) , (const, 0x1, 8), (unique, 0x100006e4, 8) CAST (unique, 0x1000022a, 8)]
[(unique, 0x100005bc, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x406668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000228, 1) , (const, 0x0, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000714, 8), (unique, 0x10000714, 8) INT_ADD (unique, 0x1000070c, 8) , (const, 0x1, 8), (unique, 0x1000070c, 8) CAST (unique, 0x1000022a, 8)]
[(unique, 0x100005f4, 8) COPY (unique, 0x1000022a, 8)]
[(unique, 0x1000042e, 8) MULTIEQUAL (unique, 0x100005f4, 8) , (unique, 0x100005fc, 8)]
[ ---  CBRANCH (ram, 0x40677c, 1) , (unique, 0x1000042d, 1), (unique, 0x1000042d, 1) INT_NOTEQUAL (unique, 0x1000042c, 1) , (const, 0x0, 1), (unique, 0x1000042c, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000724, 8), (unique, 0x10000724, 8) INT_ADD (unique, 0x1000071c, 8) , (const, 0x1, 8), (unique, 0x1000071c, 8) CAST (unique, 0x1000042e, 8)]
[ ---  CBRANCH (ram, 0x406770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000072c, 8), (unique, 0x1000072c, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ZEXT (unique, 0x1000042c, 1)]
[ ---  CBRANCH (ram, 0x406997, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000042c, 1) , (const, 0xa, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x409, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000734, 8) , (const, 0x0, 1), (unique, 0x10000734, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x406796, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x407, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0xa00, 2)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000073c, 8), (unique, 0x1000073c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000042e, 8) , (const, 0x1, 8) , (const, 0x2, 8)]
[(unique, 0x100005fc, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffe18, 8) COPY (ram, 0x4c77a0, 8)]
[(unique, 0x10000483, 8) COPY (register, 0x0, 8)]
[(unique, 0x100004e3, 8) COPY (ram, 0x4c7798, 8)]
[(unique, 0x100004fb, 8) COPY (ram, 0x4c8958, 8)]
[ ---  CBRANCH (ram, 0x406951, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c77a0, 8)]
[ ---  CBRANCH (ram, 0x40699f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7798, 8) , (const, 0x0, 8)]
[(unique, 0x100001d6, 8) INT_MULT (ram, 0x4c7798, 8) , (const, 0x2, 8)]
[(register, 0x0, 8) INT_LEFT (ram, 0x4c7798, 8) , (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x406961, 1)]
[(register, 0x30, 8) COPY (const, 0x640, 8)]
[(register, 0xa8, 8) COPY (const, 0x64, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000744, 8) , (const, 0x406974, 8), (unique, 0x10000744, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000353, 8) , (const, 0x1, 8), (unique, 0x10000353, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3af, 4)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x3af, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x3af, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x3af, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x3af, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x3af, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x3af, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x3af, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x3af, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x3af, 4)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x3af, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3af, 4)]
[(unique, 0x1000048b, 8) COPY (stack, 0xfffffffffffffe10, 8), (stack, 0xfffffffffffffe10, 8) INDIRECT (unique, 0x1000054b, 8) , (const, 0x3af, 4), (unique, 0x1000054b, 8) COPY (register, 0x0, 8)]
[(unique, 0x100004eb, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0x100001d6, 8)]
[(unique, 0x10000503, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000074c, 8), (unique, 0x1000074c, 8) CALL (ram, 0x427240, 8) , (ram, 0x4c8958, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x406673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000074c, 8), (unique, 0x1000074c, 8) CALL (ram, 0x427240, 8) , (ram, 0x4c8958, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000754, 8) , (const, 0x4067c6, 8), (unique, 0x10000754, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000035b, 8) , (const, 0x1, 8), (unique, 0x1000035b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffe10, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000764, 8) , (const, 0x4067d9, 8), (unique, 0x10000764, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000363, 8) , (const, 0x1, 8), (unique, 0x10000363, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x239, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x230, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x239, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x230, 4), (ram, 0x49a488, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x239, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x230, 4), (ram, 0x49a490, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x239, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x230, 4), (ram, 0x49a494, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x239, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x230, 4), (ram, 0x4c7798, 8) COPY (unique, 0x100004f3, 8), (unique, 0x100004f3, 8) MULTIEQUAL (unique, 0x100004e3, 8) , (unique, 0x100004eb, 8)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x239, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x230, 4), (ram, 0x4c77a0, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffde0, 8) MULTIEQUAL (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffde8, 8) MULTIEQUAL (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffdf0, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffdf8, 8) MULTIEQUAL (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x230, 4), (stack, 0xfffffffffffffe20, 8) MULTIEQUAL (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x239, 4), (stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x230, 4), (stack, 0xfffffffffffffe28, 1) MULTIEQUAL (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x239, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x230, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000443, 8) COPY (ram, 0x4c8960, 8), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x239, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x230, 4), (ram, 0x4c8960, 8) MULTIEQUAL (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8)]
[(unique, 0x10000463, 8) COPY (stack, 0xfffffffffffffe00, 8), (stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x239, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (unique, 0x1000053b, 8) , (const, 0x230, 4), (unique, 0x1000053b, 8) COPY (unique, 0x1000075c, 8), (unique, 0x1000075c, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000483, 8) , (unique, 0x1000048b, 8)]
[(unique, 0x10000493, 8) COPY (stack, 0xfffffffffffffe10, 8), (stack, 0xfffffffffffffe10, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x239, 4), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0x1000021e, 8)]
[(unique, 0x100004bb, 8) COPY (ram, 0x4c8958, 8), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x239, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x230, 4), (ram, 0x4c8958, 8) COPY (unique, 0x1000050b, 8), (unique, 0x1000050b, 8) MULTIEQUAL (unique, 0x100004fb, 8) , (unique, 0x10000503, 8)]
[(unique, 0x100004c3, 8) COPY (ram, 0x4c77b0, 8), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x239, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x230, 4), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(unique, 0x10000573, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x1000076c, 8) , (stack, 0xfffffffffffffe10, 8), (unique, 0x1000076c, 8) CAST (ram, 0x4c77b0, 8), (stack, 0xfffffffffffffe10, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x239, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x239, 4), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0x1000021e, 8), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x230, 4), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[ ---  CBRANCH (ram, 0x4068b9, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (ram, 0x4c77a8, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000774, 8), (unique, 0x10000774, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x3100, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x1000076c, 8) , (stack, 0xfffffffffffffe10, 8), (unique, 0x1000076c, 8) CAST (ram, 0x4c77b0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0x1000022a, 8), (stack, 0xfffffffffffffe10, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x239, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x239, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x239, 4), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (unique, 0x1000021e, 8), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x230, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x230, 4), (ram, 0x4c77a8, 8) MULTIEQUAL (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(stack, 0xfffffffffffffde8, 8) COPY (unique, 0x1000077c, 8), (unique, 0x1000077c, 8) CAST (stack, 0xfffffffffffffe00, 8)]
[(stack, 0xfffffffffffffde0, 8) COPY (ram, 0x4c77b0, 8)]
[ ---  CBRANCH (ram, 0x4068de, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (const, 0x400, 8), (unique, 0x3400, 8) INT_ADD (stack, 0xfffffffffffffe10, 8) , (unique, 0x3100, 8)]
[(register, 0x30, 8) COPY (const, 0x400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000794, 8) , (const, 0x4068ff, 8), (unique, 0x10000794, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000036b, 8) , (const, 0x1, 8), (unique, 0x1000036b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30f, 4)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x30f, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x30f, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x30f, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x30f, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x30f, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x30f, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x30f, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x30f, 4), (stack, 0xfffffffffffffdf8, 8) COPY (stack, 0xfffffffffffffe10, 8)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x30f, 4), (unique, 0x3400, 8) CAST (unique, 0x1000078c, 8), (unique, 0x1000078c, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000784, 8), (unique, 0x10000784, 8) CAST (ram, 0x4c77a8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x30, 8)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (register, 0x0, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (unique, 0x10000553, 8) , (const, 0x30f, 4), (unique, 0x10000553, 8) COPY (unique, 0x3400, 8)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x30f, 4)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30f, 4)]
[(unique, 0x1000043b, 8) COPY (ram, 0x4c8958, 8), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x30f, 4)]
[ ---  CBRANCH (ram, 0x406673, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427240, 8) , (ram, 0x4c8960, 8) , (unique, 0x1000079c, 8), (unique, 0x1000079c, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000078c, 8), (unique, 0x1000078c, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000784, 8), (unique, 0x10000784, 8) CAST (ram, 0x4c77a8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xfffffffffffffe00, 8)]
[(unique, 0x1000046b, 8) COPY (unique, 0x100007a4, 8), (unique, 0x100007a4, 8) CAST (stack, 0xfffffffffffffde8, 8)]
[(unique, 0x100004a3, 8) COPY (unique, 0x1000043b, 8)]
[(unique, 0x100004cb, 8) COPY (stack, 0xfffffffffffffde0, 8)]
[(unique, 0x10000513, 8) COPY (register, 0x0, 8)]
[(unique, 0x1000055b, 8) COPY (stack, 0xfffffffffffffe10, 8)]
[ ---  CBRANCH (ram, 0x4069c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x10000443, 8)]
[(unique, 0x100004ab, 8) COPY (unique, 0x1000043b, 8)]
[ ---  CBRANCH (ram, 0x40693e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffe18, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) CAST (unique, 0x100007bc, 8), (unique, 0x100007bc, 8) INT_SUB (unique, 0x100007ac, 8) , (unique, 0x100007b4, 8), (unique, 0x100007b4, 8) CAST (unique, 0x10000443, 8), (unique, 0x100007ac, 8) CAST (register, 0x0, 8)]
[(register, 0x38, 8) PTRADD (ram, 0x4c8958, 8) , (unique, 0x100003f3, 8) , (const, 0x8, 8), (unique, 0x100003f3, 8) INT_MULT (stack, 0xfffffffffffffe18, 8) , (const, 0x2, 8)]
[(unique, 0x1000044b, 8) COPY (ram, 0x4c8958, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x1200, 8), (register, 0x1200, 8) INT_ADD (unique, 0x100001de, 8) , (unique, 0x100007c4, 8), (unique, 0x100007c4, 8) CAST (register, 0x0, 8), (unique, 0x100001de, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000044b, 8) , (unique, 0x10000453, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x9e4, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x9e3, 4), (ram, 0x49a488, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x9e4, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x9e3, 4), (ram, 0x49a490, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x9e4, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x9e3, 4), (ram, 0x49a494, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x9e4, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x9e3, 4), (ram, 0x4c7798, 8) MULTIEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x9e4, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x9e3, 4), (ram, 0x4c77a0, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x9e4, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x9e3, 4), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x9e4, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x9e3, 4), (ram, 0x4c8958, 8) MULTIEQUAL (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f6, 8) , (register, 0x1208, 8), (unique, 0x100001f6, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x1208, 8) INT_ADD (unique, 0x100001e6, 8) , (unique, 0x100007cc, 8), (unique, 0x100007cc, 8) CAST (register, 0x0, 8), (unique, 0x100001e6, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001ee, 8), (unique, 0x100001ee, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000044b, 8) , (unique, 0x10000453, 8)]
[(unique, 0x10000453, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000044b, 8) , (unique, 0x10000453, 8)]
[(unique, 0x100004b3, 8) COPY (unique, 0x1000043b, 8)]
[ ---  CBRANCH (ram, 0x4069ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000044b, 8) , (unique, 0x10000453, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007e4, 8) , (const, 0x40685a, 8), (unique, 0x100007e4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000373, 8) , (const, 0x1, 8), (unique, 0x10000373, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401060, 8) , (unique, 0x3400, 8) , (unique, 0x1000021e, 8) , (unique, 0x1000052b, 8), (unique, 0x1000052b, 8) COPY (register, 0x10, 8), (register, 0xa8, 8) PTRADD (register, 0x30, 8) , (unique, 0x100003db, 8) , (const, 0x8, 8), (unique, 0x100003db, 8) INT_MULT (stack, 0xfffffffffffffe18, 8) , (const, 0x2, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100007d4, 8) , (unique, 0x100007dc, 8), (unique, 0x100007dc, 8) CAST (register, 0x98, 8), (unique, 0x100007d4, 8) CAST (ram, 0x4c8960, 8), (register, 0x10, 8) MULTIEQUAL (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (unique, 0x10000493, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100004a3, 8) , (unique, 0x100004ab, 8) , (unique, 0x100004b3, 8) , (unique, 0x100004bb, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x100004cb, 8) , (unique, 0x100004cb, 8) , (unique, 0x100004cb, 8) , (unique, 0x100004c3, 8), (ram, 0x4c8960, 8) MULTIEQUAL (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (ram, 0x4c8960, 8), (stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007fc, 8) , (const, 0x406881, 8), (unique, 0x100007fc, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000037b, 8) , (const, 0x1, 8), (unique, 0x1000037b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x2bf, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x2b2, 4), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x2a6, 4), (ram, 0x4c77a0, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x2bf, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x2b2, 4), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x2a6, 4), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffde0, 8) MULTIEQUAL (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffde8, 8) MULTIEQUAL (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffdf0, 8) INDIRECT (register, 0x90, 8) , (const, 0x2a6, 4), (register, 0x90, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (unique, 0x3100, 8)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (unique, 0x10000543, 8) , (const, 0x2a6, 4), (unique, 0x10000543, 8) COPY (ram, 0x4c8960, 8), (ram, 0x4c8960, 8) MULTIEQUAL (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (ram, 0x4c8960, 8)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffe10, 8) COPY (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) MULTIEQUAL (unique, 0x1000055b, 8) , (unique, 0x1000055b, 8) , (unique, 0x1000055b, 8) , (unique, 0x10000573, 8)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x2bf, 4), (stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x2a6, 4), (stack, 0xfffffffffffffe28, 1) MULTIEQUAL (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bf, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0xbe00, 8) INT_ADD (stack, 0xfffffffffffffe20, 8) , (const, 0x1, 8), (stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffe20, 8) MULTIEQUAL (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x2d6, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x2bf, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x2b2, 4), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x2a6, 4), (ram, 0x49a488, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x2d6, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x2bf, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x2b2, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x2a6, 4), (ram, 0x49a490, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x2d6, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x2bf, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x2b2, 4), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x2a6, 4), (ram, 0x49a494, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x2d6, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x2bf, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x2b2, 4), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x2a6, 4), (ram, 0x4c7798, 8) MULTIEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x2d6, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x2bf, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x2b2, 4), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x2a6, 4), (ram, 0x4c77a8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (ram, 0x4c77a8, 8)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x2d6, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x2bf, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x2b2, 4), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x2a6, 4), (ram, 0x4c8958, 8) MULTIEQUAL (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x2d6, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x2bf, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x2b2, 4), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x2a6, 4), (ram, 0x4c8960, 8) MULTIEQUAL (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (ram, 0x4c8960, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x401060, 8) , (register, 0x38, 8) , (unique, 0x1000022a, 8) , (stack, 0xfffffffffffffdf0, 8), (register, 0x38, 8) INT_ADD (stack, 0xfffffffffffffe10, 8) , (unique, 0x100007f4, 8), (unique, 0x100007f4, 8) CAST (stack, 0xfffffffffffffe00, 8), (stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffe00, 8) INDIRECT (unique, 0x10000543, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffdf0, 8) INDIRECT (register, 0x90, 8) , (const, 0x2a6, 4), (unique, 0x10000543, 8) COPY (ram, 0x4c8960, 8), (register, 0xa8, 8) PTRADD (register, 0x30, 8) , (unique, 0x100003db, 8) , (const, 0x8, 8), (unique, 0x100003db, 8) INT_MULT (stack, 0xfffffffffffffe18, 8) , (const, 0x2, 8), (stack, 0xfffffffffffffe10, 8) COPY (unique, 0x1000057b, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100004a3, 8) , (unique, 0x100004ab, 8) , (unique, 0x100004b3, 8) , (unique, 0x100004bb, 8), (register, 0x90, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (unique, 0x3100, 8), (ram, 0x4c8960, 8) MULTIEQUAL (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (unique, 0x10000513, 8) , (ram, 0x4c8960, 8), (unique, 0x1000057b, 8) MULTIEQUAL (unique, 0x1000055b, 8) , (unique, 0x1000055b, 8) , (unique, 0x1000055b, 8) , (unique, 0x10000573, 8), (stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(register, 0x18, 8) INT_ADD (stack, 0xfffffffffffffe18, 8) , (const, 0x1, 8), (stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(unique, 0x1000059c, 8) COPY (stack, 0xfffffffffffffe08, 8), (stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x2a6, 4), (stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (register, 0x0, 8)]
[(unique, 0x100005c4, 8) COPY (stack, 0xfffffffffffffdf8, 8), (stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x2bf, 4), (stack, 0xfffffffffffffdf8, 8) INDIRECT (unique, 0x10000533, 8) , (const, 0x2a6, 4), (unique, 0x10000533, 8) COPY (unique, 0x100007ec, 8), (unique, 0x100007ec, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000046b, 8) , (unique, 0x1000046b, 8) , (unique, 0x1000046b, 8) , (unique, 0x10000463, 8)]
[ ---  BRANCH (ram, 0x406668, 1)]
[(unique, 0x10000233, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000023b, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[(unique, 0x10000243, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(unique, 0x10000247, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(unique, 0x10000249, 8) MULTIEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8)]
[(unique, 0x10000251, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (register, 0x18, 8)]
[(unique, 0x10000259, 8) MULTIEQUAL (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8)]
[(unique, 0x10000261, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (unique, 0x1000059c, 8)]
[(unique, 0x10000269, 8) MULTIEQUAL (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8)]
[(unique, 0x10000271, 8) MULTIEQUAL (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8)]
[(unique, 0x10000279, 8) MULTIEQUAL (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8)]
[(unique, 0x10000281, 8) MULTIEQUAL (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8)]
[(unique, 0x10000289, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8)]
[(unique, 0x10000291, 8) MULTIEQUAL (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8)]
[(unique, 0x10000299, 8) MULTIEQUAL (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8)]
[(unique, 0x100002a1, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(unique, 0x100002a9, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[(unique, 0x100002b1, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(unique, 0x100002b9, 8) MULTIEQUAL (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (unique, 0xbe00, 8)]
[(unique, 0x100002c1, 1) MULTIEQUAL (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1) , (stack, 0xfffffffffffffe28, 1)]
[(unique, 0x100002c2, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x4066e2, 1) , (unique, 0x10000232, 1), (unique, 0x10000232, 1) INT_EQUAL (unique, 0x100002ca, 8) , (const, 0x0, 8), (unique, 0x100002ca, 8) MULTIEQUAL (unique, 0x100005a4, 8) , (unique, 0x100005ac, 8) , (unique, 0x100005b4, 8) , (unique, 0x100005bc, 8) , (unique, 0x100005c4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000804, 8) , (const, 0x4066f2, 8), (unique, 0x10000804, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000393, 8) , (const, 0x1, 8), (unique, 0x10000393, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000233, 8) , (const, 0x1a1, 4)]
[(ram, 0x49a488, 8) INDIRECT (unique, 0x1000023b, 8) , (const, 0x1a1, 4)]
[(ram, 0x49a490, 4) INDIRECT (unique, 0x10000243, 4) , (const, 0x1a1, 4)]
[(ram, 0x49a494, 2) INDIRECT (unique, 0x10000247, 2) , (const, 0x1a1, 4)]
[(ram, 0x4c7798, 8) INDIRECT (unique, 0x10000249, 8) , (const, 0x1a1, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (unique, 0x10000251, 8) , (const, 0x1a1, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (unique, 0x10000259, 8) , (const, 0x1a1, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (unique, 0x10000261, 8) , (const, 0x1a1, 4)]
[(ram, 0x4c8958, 8) INDIRECT (unique, 0x10000269, 8) , (const, 0x1a1, 4)]
[(ram, 0x4c8960, 8) INDIRECT (unique, 0x10000271, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (unique, 0x10000279, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (unique, 0x10000281, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (unique, 0x10000289, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (unique, 0x10000291, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (unique, 0x10000299, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (unique, 0x100002a1, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (unique, 0x100002a9, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (unique, 0x100002b1, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (unique, 0x100002b9, 8) , (const, 0x1a1, 4)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (unique, 0x100002c1, 1) , (const, 0x1a1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002c2, 8) , (const, 0x1a1, 4)]
[ ---  CBRANCH (ram, 0x4066d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x41b3a0, 8) , (unique, 0x1000080c, 8) , (const, 0x190, 4) , (register, 0x0, 8), (unique, 0x1000080c, 8) CAST (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000814, 8) , (const, 0x4066dd, 8), (unique, 0x10000814, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000039b, 8) , (const, 0x1, 8), (unique, 0x1000039b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b2, 4)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x1b2, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x1b2, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x1b2, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x1b2, 4)]
[(stack, 0xfffffffffffffe28, 1) INDIRECT (stack, 0xfffffffffffffe28, 1) , (const, 0x1b2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b2, 4)]
[(unique, 0x100005a4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4011a0, 8) , (unique, 0x3200, 8) , (const, 0xa, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100002c2, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffe28, 1) MULTIEQUAL (unique, 0x100002c1, 1) , (stack, 0xfffffffffffffe28, 1)]
[(stack, 0xfffffffffffffe20, 8) MULTIEQUAL (unique, 0x100002b9, 8) , (stack, 0xfffffffffffffe20, 8)]
[(stack, 0xfffffffffffffe18, 8) MULTIEQUAL (unique, 0x100002b1, 8) , (stack, 0xfffffffffffffe18, 8)]
[(stack, 0xfffffffffffffe10, 8) MULTIEQUAL (unique, 0x100002a9, 8) , (stack, 0xfffffffffffffe10, 8)]
[(stack, 0xfffffffffffffe08, 8) MULTIEQUAL (unique, 0x100002a1, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xfffffffffffffe00, 8) MULTIEQUAL (unique, 0x10000299, 8) , (stack, 0xfffffffffffffe00, 8)]
[(stack, 0xfffffffffffffdf8, 8) MULTIEQUAL (unique, 0x10000291, 8) , (stack, 0xfffffffffffffdf8, 8)]
[(stack, 0xfffffffffffffdf0, 8) MULTIEQUAL (unique, 0x10000289, 8) , (stack, 0xfffffffffffffdf0, 8)]
[(stack, 0xfffffffffffffde8, 8) MULTIEQUAL (unique, 0x10000281, 8) , (stack, 0xfffffffffffffde8, 8)]
[(stack, 0xfffffffffffffde0, 8) MULTIEQUAL (unique, 0x10000279, 8) , (stack, 0xfffffffffffffde0, 8)]
[(ram, 0x4c8960, 8) MULTIEQUAL (unique, 0x10000271, 8) , (ram, 0x4c8960, 8)]
[(ram, 0x4c8958, 8) MULTIEQUAL (unique, 0x10000269, 8) , (ram, 0x4c8958, 8)]
[(ram, 0x4c77b0, 8) MULTIEQUAL (unique, 0x10000261, 8) , (ram, 0x4c77b0, 8)]
[(ram, 0x4c77a8, 8) MULTIEQUAL (unique, 0x10000259, 8) , (ram, 0x4c77a8, 8)]
[(ram, 0x4c77a0, 8) MULTIEQUAL (unique, 0x10000251, 8) , (ram, 0x4c77a0, 8)]
[(ram, 0x4c7798, 8) MULTIEQUAL (unique, 0x10000249, 8) , (ram, 0x4c7798, 8)]
[(ram, 0x49a494, 2) MULTIEQUAL (unique, 0x10000247, 2) , (ram, 0x49a494, 2)]
[(ram, 0x49a490, 4) MULTIEQUAL (unique, 0x10000243, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a488, 8) MULTIEQUAL (unique, 0x1000023b, 8) , (ram, 0x49a488, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000233, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x406600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000081c, 8), (unique, 0x1000081c, 8) CAST (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000824, 8) , (const, 0x40667b, 8), (unique, 0x10000824, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000383, 8) , (const, 0x1, 8), (unique, 0x10000383, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x15d, 4), (ram, 0x49a488, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x15d, 4), (ram, 0x49a490, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x15d, 4), (ram, 0x49a494, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x15d, 4), (ram, 0x4c7798, 8) MULTIEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x15d, 4), (ram, 0x4c77a0, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x15d, 4), (ram, 0x4c77a8, 8) MULTIEQUAL (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x15d, 4), (ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x15d, 4), (ram, 0x4c8958, 8) MULTIEQUAL (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x15d, 4), (ram, 0x4c8960, 8) MULTIEQUAL (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffde0, 8) MULTIEQUAL (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffde8, 8) MULTIEQUAL (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffdf0, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffdf8, 8) MULTIEQUAL (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffe00, 8) MULTIEQUAL (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffe10, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15d, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x418330, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4066a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffe20, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffe20, 8) MULTIEQUAL (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000082c, 8) , (const, 0x4066a4, 8), (unique, 0x1000082c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x1000038b, 8) , (const, 0x1, 8), (unique, 0x1000038b, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x172, 4)]
[(ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x172, 4)]
[(ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x172, 4)]
[(ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x172, 4)]
[(ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x172, 4)]
[(ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x172, 4)]
[(ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x172, 4)]
[(ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x172, 4)]
[(ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x172, 4)]
[(ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x172, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x172, 4)]
[ ---  CALL (ram, 0x40ff50, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c77a0, 8) , (const, 0x10, 8) , (unique, 0x100002d3, 8), (unique, 0x100002d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x406500, 8)]
[(stack, 0xfffffffffffffe20, 8) MULTIEQUAL (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8) , (stack, 0xfffffffffffffe20, 8)]
[(stack, 0xfffffffffffffe18, 8) MULTIEQUAL (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8) , (stack, 0xfffffffffffffe18, 8)]
[(stack, 0xfffffffffffffe10, 8) MULTIEQUAL (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8) , (stack, 0xfffffffffffffe10, 8)]
[(stack, 0xfffffffffffffe08, 8) MULTIEQUAL (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8) , (stack, 0xfffffffffffffe08, 8)]
[(stack, 0xfffffffffffffe00, 8) MULTIEQUAL (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8) , (stack, 0xfffffffffffffe00, 8)]
[(stack, 0xfffffffffffffdf8, 8) MULTIEQUAL (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8) , (stack, 0xfffffffffffffdf8, 8)]
[(stack, 0xfffffffffffffdf0, 8) MULTIEQUAL (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8) , (stack, 0xfffffffffffffdf0, 8)]
[(stack, 0xfffffffffffffde8, 8) MULTIEQUAL (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8) , (stack, 0xfffffffffffffde8, 8)]
[(stack, 0xfffffffffffffde0, 8) MULTIEQUAL (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8) , (stack, 0xfffffffffffffde0, 8)]
[(ram, 0x4c8960, 8) MULTIEQUAL (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8) , (ram, 0x4c8960, 8)]
[(ram, 0x4c8958, 8) MULTIEQUAL (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8) , (ram, 0x4c8958, 8)]
[(ram, 0x4c77b0, 8) MULTIEQUAL (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8) , (ram, 0x4c77b0, 8)]
[(ram, 0x4c77a8, 8) MULTIEQUAL (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8) , (ram, 0x4c77a8, 8)]
[(ram, 0x4c77a0, 8) MULTIEQUAL (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8) , (ram, 0x4c77a0, 8)]
[(ram, 0x4c7798, 8) MULTIEQUAL (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8) , (ram, 0x4c7798, 8)]
[(ram, 0x49a494, 2) MULTIEQUAL (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2) , (ram, 0x49a494, 2)]
[(ram, 0x49a490, 4) MULTIEQUAL (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4) , (ram, 0x49a490, 4)]
[(ram, 0x49a488, 8) MULTIEQUAL (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8) , (ram, 0x49a488, 8)]
[ ---  CBRANCH (ram, 0x406a14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000834, 8), (unique, 0x10000834, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000083c, 8) , (unique, 0x100002db, 8), (unique, 0x1000083c, 8) CAST (register, 0x20, 8), (unique, 0x100002db, 8) PTRSUB (const, 0x0, 8) , (const, 0x406a19, 8), (register, 0x20, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x100003a3, 8) , (const, 0x1, 8), (unique, 0x100003a3, 8) INT_ADD (unique, 0x100000f8, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xfffffffffffffde0, 8) INDIRECT (stack, 0xfffffffffffffde0, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffde8, 8) INDIRECT (stack, 0xfffffffffffffde8, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffdf0, 8) INDIRECT (stack, 0xfffffffffffffdf0, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffdf8, 8) INDIRECT (stack, 0xfffffffffffffdf8, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffe00, 8) INDIRECT (stack, 0xfffffffffffffe00, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffe08, 8) INDIRECT (stack, 0xfffffffffffffe08, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffe10, 8) INDIRECT (stack, 0xfffffffffffffe10, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffe18, 8) INDIRECT (stack, 0xfffffffffffffe18, 8) , (const, 0x199, 4)]
[(stack, 0xfffffffffffffe20, 8) INDIRECT (stack, 0xfffffffffffffe20, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x199, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x49a488, 8) COPY (ram, 0x49a488, 8), (ram, 0x49a488, 8) INDIRECT (ram, 0x49a488, 8) , (const, 0x199, 4)]
[(ram, 0x49a490, 4) COPY (ram, 0x49a490, 4), (ram, 0x49a490, 4) INDIRECT (ram, 0x49a490, 4) , (const, 0x199, 4)]
[(ram, 0x49a494, 2) COPY (ram, 0x49a494, 2), (ram, 0x49a494, 2) INDIRECT (ram, 0x49a494, 2) , (const, 0x199, 4)]
[(ram, 0x4c7798, 8) COPY (ram, 0x4c7798, 8), (ram, 0x4c7798, 8) INDIRECT (ram, 0x4c7798, 8) , (const, 0x199, 4)]
[(ram, 0x4c77a0, 8) COPY (ram, 0x4c77a0, 8), (ram, 0x4c77a0, 8) INDIRECT (ram, 0x4c77a0, 8) , (const, 0x199, 4)]
[(ram, 0x4c77a8, 8) COPY (ram, 0x4c77a8, 8), (ram, 0x4c77a8, 8) INDIRECT (ram, 0x4c77a8, 8) , (const, 0x199, 4)]
[(ram, 0x4c77b0, 8) COPY (ram, 0x4c77b0, 8), (ram, 0x4c77b0, 8) INDIRECT (ram, 0x4c77b0, 8) , (const, 0x199, 4)]
[(ram, 0x4c8958, 8) COPY (ram, 0x4c8958, 8), (ram, 0x4c8958, 8) INDIRECT (ram, 0x4c8958, 8) , (const, 0x199, 4)]
[(ram, 0x4c8960, 8) COPY (ram, 0x4c8960, 8), (ram, 0x4c8960, 8) INDIRECT (ram, 0x4c8960, 8) , (const, 0x199, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x49a488, 8) COPY (ram, 0x49a488, 8)]
[(ram, 0x49a490, 4) COPY (ram, 0x49a490, 4)]
[(ram, 0x49a494, 2) COPY (ram, 0x49a494, 2)]
[(ram, 0x4c7798, 8) COPY (ram, 0x4c7798, 8)]
[(ram, 0x4c77a0, 8) COPY (ram, 0x4c77a0, 8)]
[(ram, 0x4c77a8, 8) COPY (ram, 0x4c77a8, 8)]
[(ram, 0x4c77b0, 8) COPY (ram, 0x4c77b0, 8)]
[(ram, 0x4c8958, 8) COPY (ram, 0x4c8958, 8)]
[(ram, 0x4c8960, 8) COPY (ram, 0x4c8960, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xfffffffffffffe20, 8)]
