[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008c1, 8), (unique, 0x100008c1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x423060, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) CAST (unique, 0x100008c9, 8), (unique, 0x100008c9, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x423060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000017a, 8) , (const, 0x0, 8), (unique, 0x1000017a, 8) INT_AND (unique, 0x100008d1, 8) , (const, 0xf, 8), (unique, 0x100008d1, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x978, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000553, 8), (unique, 0x10000553, 8) COPY (const, 0x49b23b, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x978, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x978, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x978, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x978, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x978, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x978, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x978, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x978, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x978, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x978, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x978, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x423070, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x423070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000018a, 8) , (const, 0x0, 8), (unique, 0x1000018a, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x972, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x1000055b, 8), (unique, 0x1000055b, 8) COPY (const, 0x49b253, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x972, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x972, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x972, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x972, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x972, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x972, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x972, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x972, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x972, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x972, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x972, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x422e23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008d9, 8), (unique, 0x100008d9, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x422e23, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4c5750, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x11, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x423478, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3e80, 8), (unique, 0x3e80, 8) CAST (unique, 0x100008e9, 8), (unique, 0x100008e9, 8) INT_ADD (unique, 0x3d00, 8) , (unique, 0x3d80, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x3d00, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008e1, 8), (unique, 0x100008e1, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x4234a4, 1) , (unique, 0x1000084b, 1), (unique, 0x1000084b, 1) INT_NOTEQUAL (unique, 0x10000843, 8) , (const, 0x0, 8), (unique, 0x10000843, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x423498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100008f1, 8) , (unique, 0x10000843, 8), (unique, 0x100008f1, 8) CAST (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x960, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000573, 8), (unique, 0x10000573, 8) COPY (const, 0x49b868, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x960, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x960, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x960, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x960, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x960, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x960, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x960, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x960, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x960, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x960, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x960, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100008f9, 8), (unique, 0x100008f9, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000843, 8)]
[ ---  CBRANCH (ram, 0x423038, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (ram, 0x4c5760, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000901, 8), (unique, 0x10000901, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000909, 8), (unique, 0x10000909, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) CAST (unique, 0x10000911, 8), (unique, 0x10000911, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x93c, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x93a, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x937, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x927, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x93c, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x93a, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x937, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x927, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x93c, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x93a, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x937, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x927, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x93c, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x93a, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x937, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x927, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x93c, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x93a, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x937, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x927, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x93c, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x93a, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x937, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x927, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x93c, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x93a, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x937, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x927, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x93c, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x93a, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x937, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x927, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x93c, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x93a, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x937, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x927, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x93c, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x93a, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x937, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x927, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x93c, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x93a, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x937, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x927, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x8, 2), (register, 0x8, 2) INT_ADD (unique, 0xbc00, 2) , (const, 0x1, 2)]
[ ---  BRANCH (ram, 0x422eb3, 1)]
[ ---  CBRANCH (ram, 0x422ee0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x18, 8) , (ram, 0x4c7cb8, 8)]
[ ---  CBRANCH (ram, 0x423080, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000921, 8), (unique, 0x10000921, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000919, 8) , (register, 0x18, 8), (unique, 0x10000919, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x423080, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000929, 8), (unique, 0x10000929, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x4230e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42313b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000931, 8), (unique, 0x10000931, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x36c, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x36c, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x36c, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x36c, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x36c, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x36c, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x36c, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x36c, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x36c, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x36c, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x36c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x371, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x371, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x371, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x371, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x371, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x371, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x371, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x371, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x371, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x371, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x371, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x371, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x371, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x371, 4)]
[ ---  CALL (ram, 0x421390, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x4230a1, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x2c8, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x2c8, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x2c8, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x2c8, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x2c8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000051e, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x4230c3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000939, 8), (unique, 0x10000939, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[(register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000941, 8), (unique, 0x10000941, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000051d, 1) MULTIEQUAL (unique, 0x1000051e, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x42359e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000949, 8), (unique, 0x10000949, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x336, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x336, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x336, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x336, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x336, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x336, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x336, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x336, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x336, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x336, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x336, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4230d7, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4230d7, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x30f, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x30f, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x30f, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x30f, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x30f, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x30f, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x30f, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x30f, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x30f, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x30f, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x30f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[ ---  CBRANCH (ram, 0x422e53, 1) , (unique, 0x1000051d, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x326, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) COPY (const, 0x49b898, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x326, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x326, 4), (ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x326, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x326, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x326, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x326, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x326, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x326, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x326, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x326, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x326, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x423380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7cb4, 4) , (const, 0x0, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x101010101010101, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (ram, 0x4c7cb4, 4) , (const, 0xff, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x28b, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x286, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x28b, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x286, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x28b, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x286, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x28b, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x286, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x28b, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x286, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x28b, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x286, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x28b, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x286, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x28b, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x286, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x28b, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x286, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x28b, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x286, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x28b, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x286, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000096d, 8), (unique, 0x1000096d, 8) INT_ADD (unique, 0x10000965, 8) , (unique, 0x100007cb, 8), (unique, 0x10000965, 8) CAST (register, 0x30, 8), (unique, 0x100007cb, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_AND (unique, 0x3100, 8) , (const, 0xffffffff, 8), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x101010101010101, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (ram, 0x4c7cb4, 4) , (const, 0xff, 4)]
[(unique, 0x1000087d, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000959, 8), (unique, 0x10000959, 8) INT_AND (unique, 0x10000951, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000951, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x10000961, 4) , (const, 0x3, 4), (unique, 0x10000961, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0x8, 4) INT_SUB (unique, 0x10000338, 4) , (unique, 0x10000340, 4), (unique, 0x10000340, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x10, 8), (register, 0x38, 8) CAST (unique, 0x10000959, 8), (unique, 0x10000959, 8) INT_AND (unique, 0x10000951, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000951, 8) CAST (unique, 0x3800, 8), (unique, 0x10000338, 4) INT_ADD (unique, 0x1000049b, 4) , (const, 0x10, 4), (unique, 0x1000049b, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000087d, 8) , (unique, 0x10000885, 8)]
[ ---  CBRANCH (ram, 0x4233ba, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x295, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x295, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x295, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x295, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x295, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x295, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x295, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x295, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x295, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x295, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x295, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8)]
[(unique, 0x10000885, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100007e3, 8) , (const, 0x8, 8), (unique, 0x100007e3, 8) INT_ADD (unique, 0x100007db, 8) , (const, 0x1, 8), (unique, 0x100007db, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4233b7, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x117, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x117, 4), (ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x117, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x117, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x117, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x117, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x117, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x117, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x117, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x117, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x117, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000975, 8), (unique, 0x10000975, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000064b, 8) , (const, 0x4, 8), (unique, 0x1000064b, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (unique, 0x100001bc, 4) , (const, 0x2, 4), (unique, 0x100001bc, 4) INT_AND (unique, 0x100004ca, 4) , (const, 0xfffffff, 4), (unique, 0x100004ca, 4) SUBPIECE (unique, 0x100001b4, 8) , (const, 0x0, 4), (unique, 0x100001b4, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x423160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000097d, 8), (unique, 0x1000097d, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000985, 8), (unique, 0x10000985, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000713, 8) , (const, 0x4, 8), (unique, 0x10000713, 8) INT_ADD (unique, 0x1000070b, 8) , (const, 0x4, 8), (unique, 0x1000070b, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8)]
[(unique, 0x10000865, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x423194, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[ ---  CBRANCH (ram, 0x423170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) COPY (unique, 0x10000875, 8), (unique, 0x10000875, 8) MULTIEQUAL (unique, 0x10000865, 8) , (unique, 0x1000086d, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1fa, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x1fa, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1fa, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x1fa, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x1000098d, 8), (unique, 0x1000098d, 8) CAST (register, 0x10, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x423184, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000995, 8), (unique, 0x10000995, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x21d, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x21d, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x21d, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x21d, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x21d, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x21d, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x21d, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x21d, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x21d, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x21d, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x21d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100009b5, 8), (unique, 0x100009b5, 8) INT_XOR (unique, 0x100009ad, 8) , (unique, 0x29f80, 8), (unique, 0x100009ad, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x1000099d, 8) , (unique, 0x100009a5, 8), (unique, 0x100009a5, 8) CAST (register, 0x30, 8), (unique, 0x1000099d, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[(unique, 0x1000086d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100009d5, 8), (unique, 0x100009d5, 8) INT_XOR (unique, 0x100009cd, 8) , (unique, 0x2a200, 8), (unique, 0x100009cd, 8) CAST (register, 0x10, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100009bd, 8) , (unique, 0x100009c5, 8), (unique, 0x100009c5, 8) CAST (unique, 0xbd80, 8), (unique, 0x100009bd, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x422e99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100009d5, 8), (unique, 0x100009d5, 8) INT_XOR (unique, 0x100009cd, 8) , (unique, 0x2a200, 8), (unique, 0x100009cd, 8) CAST (register, 0x10, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100009bd, 8) , (unique, 0x100009c5, 8), (unique, 0x100009c5, 8) CAST (unique, 0xbd80, 8), (unique, 0x100009bd, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x423199, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e5, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000583, 8), (unique, 0x10000583, 8) COPY (const, 0x49b8c0, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1e5, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x1e5, 4), (ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x1e5, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x1e5, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1e5, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x1e5, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1e5, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x1e5, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1e5, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x1e5, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1e5, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x100009dd, 8), (unique, 0x100009dd, 8) CAST (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x165, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x162, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x165, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x162, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x165, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x162, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x165, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x162, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x165, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x162, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x165, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x162, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x165, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x162, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x165, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x162, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x165, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x162, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x165, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x162, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x165, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x162, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009e5, 8) , (register, 0x30, 8), (unique, 0x100009e5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[ ---  CBRANCH (ram, 0x422eb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x422eb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x423100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001bc, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000048b, 4) , (const, 0xfffffff, 4), (unique, 0x1000048b, 4) SUBPIECE (unique, 0x100001cc, 8) , (const, 0x0, 4), (unique, 0x100001cc, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x4, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1df, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000563, 8), (unique, 0x10000563, 8) COPY (const, 0x49b268, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1df, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x1df, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x1df, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x1df, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1df, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x1df, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1df, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x1df, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1df, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x1df, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1df, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x423028, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009ed, 8), (unique, 0x100009ed, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x920, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x920, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x920, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x920, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x920, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x920, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x920, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x920, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x920, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x920, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x920, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x920, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x920, 4)]
[ ---  CALL (ram, 0x421a50, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x422eb3, 1)]
[ ---  CBRANCH (ram, 0x422f02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100009f5, 8), (unique, 0x100009f5, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x423562, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4), (register, 0xa8, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffa4, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4235c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100009fd, 8), (unique, 0x100009fd, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x913, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x913, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x913, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x913, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x913, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x913, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x913, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x913, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x913, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x913, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x913, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(stack, 0xffffffffffffffa4, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x422f0a, 1) , (unique, 0x100004e9, 1), (unique, 0x100004e9, 1) BOOL_NEGATE (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x91b, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x91b, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x91b, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x91b, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x91b, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x91b, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x91b, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x91b, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x91b, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x91b, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x91b, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x91b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x91b, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x91b, 4)]
[ ---  CALL (ram, 0x421390, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x422f0a, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x8f2, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x8f2, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8f2, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8f2, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x8f2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x10000a0d, 8) , (register, 0x18, 8), (unique, 0x10000a0d, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4234b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a05, 8), (unique, 0x10000a05, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8c7, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x1000058b, 8), (unique, 0x1000058b, 8) COPY (const, 0x49b8e8, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x8c7, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x8c7, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8c7, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8c7, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x8c7, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4234c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000a15, 8), (unique, 0x10000a15, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x422f25, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000a1d, 8) , (register, 0x10, 8), (unique, 0x10000a1d, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8c1, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000593, 8), (unique, 0x10000593, 8) COPY (const, 0x49b908, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x8c1, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x8c1, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8c1, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8c1, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x8c1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4234f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001e0, 8) , (const, 0x0, 8), (unique, 0x100001e0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a25, 8), (unique, 0x10000a25, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x89c, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x1000059b, 8), (unique, 0x1000059b, 8) COPY (const, 0x49b928, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x89c, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x89c, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x89c, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x89c, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x89c, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x89c, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x89c, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x89c, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x89c, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x89c, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x89c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xb0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x423370, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x423370, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a35, 8), (unique, 0x10000a35, 8) CAST (unique, 0x3200, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a2d, 8), (unique, 0x10000a2d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x896, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x100005a3, 8), (unique, 0x100005a3, 8) COPY (const, 0x49b950, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x896, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x896, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x896, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x896, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x896, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x896, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x896, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x896, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x896, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x896, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x896, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x423500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7cb4, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x891, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x891, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x891, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x891, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x891, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x891, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x891, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x891, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x891, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x891, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x891, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x891, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x891, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x891, 4)]
[ ---  CALL (ram, 0x401120, 8) , (unique, 0x3800, 8) , (ram, 0x4c7cb4, 4) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x422f5d, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x422f89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000a3d, 8), (unique, 0x10000a3d, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x423592, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) CAST (unique, 0x10000a4d, 8), (unique, 0x10000a4d, 8) INT_SUB (unique, 0x10000a45, 8) , (unique, 0xbd80, 8), (unique, 0x10000a45, 8) CAST (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x888, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x100005ab, 8), (unique, 0x100005ab, 8) COPY (const, 0x49b978, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x888, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x888, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x888, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x888, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x888, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x888, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x888, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x888, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x888, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x888, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x888, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x431, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x431, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x431, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x431, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x431, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x431, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x431, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x431, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x431, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x431, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x431, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x431, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x431, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x431, 4)]
[ ---  CALL (ram, 0x421e10, 8) , (register, 0xa0, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x423350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a55, 8), (unique, 0x10000a55, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0xb0, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x883, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x880, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x883, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x880, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x883, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x880, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x883, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x880, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x883, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x880, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x883, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x880, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x883, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x880, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x883, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x880, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x883, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x880, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x883, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x880, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x883, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x880, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a5d, 8) , (register, 0xa0, 8), (unique, 0x10000a5d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x422fef, 1)]
[ ---  CBRANCH (ram, 0x4233c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000a65, 8), (unique, 0x10000a65, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xb0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x869, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x869, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x869, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x869, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x869, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x869, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x869, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x869, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x869, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x869, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x869, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x869, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x869, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x869, 4)]
[ ---  CALL (ram, 0x421e10, 8) , (unique, 0x3400, 8)]
[ ---  BRANCH (ram, 0x422fa4, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x453, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x453, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x453, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x453, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x453, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x453, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x453, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x453, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x453, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x453, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x453, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a6d, 8), (unique, 0x10000a6d, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x423586, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a7d, 8), (unique, 0x10000a7d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a75, 8), (unique, 0x10000a75, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x85a, 4)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x100005b3, 8), (unique, 0x100005b3, 8) COPY (const, 0x49b9b0, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x85a, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x85a, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x85a, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x85a, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x85a, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x85a, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x85a, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x85a, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x85a, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x85a, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x85a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x134c, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x134b, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x134c, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x134b, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x134c, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x134b, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x134c, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x134b, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x134c, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x134b, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x134c, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x134b, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x134c, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x134b, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x134c, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x134b, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x134c, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x134b, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x134c, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x134b, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x134c, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x134b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004bf, 8) , (unique, 0x10000a85, 8), (unique, 0x10000a85, 8) CAST (unique, 0x3100, 8), (unique, 0x100004bf, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4230f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3ff, 8) , (register, 0x18, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x855, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x855, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x855, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x855, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x855, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x855, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x855, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x855, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x855, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x855, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x855, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 16), (unique, 0x3800, 8) CAST (unique, 0x10000a8d, 8), (unique, 0x10000a8d, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x422fd7, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a95, 8) , (register, 0xa0, 8), (unique, 0x10000a95, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a9d, 8), (unique, 0x10000a9d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x18, 8) , (const, 0x1, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x499, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x495, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x488, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x485, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x499, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x495, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x488, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x485, 4), (ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x499, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x495, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x488, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x485, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x499, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x495, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x488, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x485, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x499, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x495, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x488, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x485, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x499, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x495, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x488, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x485, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x499, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x495, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x488, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x485, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x499, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x495, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x488, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x485, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x499, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x495, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x488, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x485, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x499, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x495, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x488, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x485, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x499, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x495, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x488, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x485, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x18, 8), (unique, 0x3400, 8) CAST (unique, 0x10000aad, 8), (unique, 0x10000aad, 8) INT_ADD (unique, 0x10000aa5, 8) , (register, 0x18, 8), (unique, 0x10000aa5, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4231a8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffff, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x423528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x850, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x850, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x850, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x850, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x850, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x850, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x850, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x850, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x850, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x850, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x850, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x850, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x850, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x850, 4)]
[ ---  CALL (ram, 0x421ef0, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x4231b3, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000085d, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(unique, 0x10000855, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[ ---  CBRANCH (ram, 0x423538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x10000ab5, 8), (unique, 0x10000ab5, 8) CAST (unique, 0x1000061b, 8), (unique, 0x1000061b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (ram, 0x4c5700, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000abd, 8), (unique, 0x10000abd, 8) INT_ADD (ram, 0x4c5800, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x84b, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x84b, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x84b, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x84b, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x84b, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x84b, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x84b, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x84b, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x84b, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x84b, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x84b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x84b, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x84b, 4)]
[ ---  CALL (ram, 0x422cd0, 8) , (ram, 0x4c5708, 8)]
[ ---  BRANCH (ram, 0x422ffc, 1)]
[ ---  CBRANCH (ram, 0x42372b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) CAST (unique, 0x10000ad5, 8), (unique, 0x10000ad5, 8) INT_AND (unique, 0x10000acd, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000acd, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ac5, 8), (unique, 0x10000ac5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x82c, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x1000056b, 8) , (unique, 0x10000523, 8) , (const, 0x113d, 8) , (unique, 0x10000613, 8), (unique, 0x10000613, 8) COPY (const, 0x49c2b8, 8), (unique, 0x1000056b, 8) COPY (const, 0x49b285, 8), (unique, 0x10000523, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x82c, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x82c, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x82c, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x82c, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x82c, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x82c, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x82c, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x82c, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x82c, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x82c, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x82c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4233d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (ram, 0x4c6118, 8), (unique, 0x3880, 8) INT_ADD (ram, 0x4c5708, 8) , (const, 0x20, 8)]
[(register, 0x0, 8) INT_SUB (ram, 0x4c6118, 8) , (const, 0x1, 8)]
[(unique, 0x10000895, 8) COPY (register, 0xb0, 8)]
[(unique, 0x100008ad, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4232c6, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100008ad, 8) , (unique, 0x100008a5, 8)]
[ ---  CBRANCH (ram, 0x4236aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x10000afd, 8), (unique, 0x10000afd, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) CAST (unique, 0x10000aed, 8), (unique, 0x10000aed, 8) INT_SUB (unique, 0x10000ae5, 8) , (register, 0x30, 8), (unique, 0x10000ae5, 8) CAST (unique, 0x3100, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xf, 4), (register, 0x30, 4) INT_ADD (unique, 0x10000493, 4) , (unique, 0x10000497, 4), (unique, 0x10000497, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x10000493, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000add, 8), (unique, 0x10000add, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000895, 8) , (unique, 0x1000088d, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x820, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100005bb, 8) , (unique, 0x10000533, 8) , (const, 0x265, 8) , (unique, 0x100005f3, 8), (unique, 0x100005f3, 8) COPY (const, 0x49c2a8, 8), (unique, 0x100005bb, 8) COPY (const, 0x49b9d8, 8), (unique, 0x10000533, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x820, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x820, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x820, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x820, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x820, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x820, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x820, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x820, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x820, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x820, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x820, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x10000b15, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000b15, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x10000b0d, 8), (unique, 0x10000b0d, 8) INT_SUB (unique, 0x10000b05, 8) , (unique, 0xbd80, 8), (unique, 0x10000b05, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x42368b, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3e, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0xf, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_AND (unique, 0x10000b15, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000b15, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x10000b0d, 8), (unique, 0x10000b0d, 8) INT_SUB (unique, 0x10000b05, 8) , (unique, 0xbd80, 8), (unique, 0x10000b05, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x817, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100005c3, 8) , (unique, 0x1000052b, 8) , (const, 0x268, 8) , (unique, 0x100005eb, 8), (unique, 0x100005eb, 8) COPY (const, 0x49c2a8, 8), (unique, 0x100005c3, 8) COPY (const, 0x49ba08, 8), (unique, 0x1000052b, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x817, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x817, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x817, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x817, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x817, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x817, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x817, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x817, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x817, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x817, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x817, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x423220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100004b3, 8) , (const, 0x0, 8), (unique, 0x100004b3, 8) INT_AND (unique, 0x10000b1d, 8) , (const, 0x1, 8), (unique, 0x10000b1d, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x42370c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3fffffe, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_ADD (unique, 0x10000b25, 8) , (unique, 0x3100, 8), (unique, 0x10000b25, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x80e, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100005cb, 8) , (unique, 0x1000054b, 8) , (const, 0x26b, 8) , (unique, 0x1000060b, 8), (unique, 0x1000060b, 8) COPY (const, 0x49c2a8, 8), (unique, 0x100005cb, 8) COPY (const, 0x49ba38, 8), (unique, 0x1000054b, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x80e, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x80e, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x80e, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x80e, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x80e, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x80e, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x80e, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x80e, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x80e, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x80e, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x80e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x423518, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3a00, 8), (register, 0x0, 8) INT_ADD (register, 0x8, 8) , (register, 0xa0, 8), (register, 0x8, 8) INT_SUB (const, 0x4000000, 8) , (unique, 0x10000b2d, 8), (unique, 0x10000b2d, 8) CAST (unique, 0xbd80, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3100, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x4233d8, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x604, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x604, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x604, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x604, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x604, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x604, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x604, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x604, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x604, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x604, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b45, 8) , (unique, 0xbd80, 8), (unique, 0x10000b45, 8) CAST (unique, 0x3200, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x10000b3d, 8), (unique, 0x10000b3d, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000b35, 8), (unique, 0x10000b35, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x423340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c98, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0xb0, 8) , (const, 0x800000, 8) , (const, 0x8, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x604, 4)]
[(ram, 0x4c7c98, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x423276, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x61e, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x61e, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x61e, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x61e, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x61e, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x61e, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x61e, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x61e, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x61e, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x61e, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x61e, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x61e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x61e, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x61e, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0xb0, 8) , (const, 0x4000000, 8)]
[ ---  CBRANCH (ram, 0x423328, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000b4d, 8), (unique, 0x10000b4d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x7e4, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x7e4, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x7e4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7e4, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x7e4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7e4, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x7e4, 4)]
[ ---  CALL (ram, 0x421e10, 8) , (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x10000b65, 8), (unique, 0x10000b65, 8) INT_SUB (unique, 0x10000b55, 8) , (unique, 0x10000b5d, 8), (unique, 0x10000b5d, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000b55, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x42328e, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4236e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000b6d, 8) , (register, 0xa0, 8), (unique, 0x10000b6d, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7d2, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100005d3, 8) , (unique, 0x10000543, 8) , (const, 0x277, 8) , (unique, 0x10000603, 8), (unique, 0x10000603, 8) COPY (const, 0x49c2a8, 8), (unique, 0x100005d3, 8) COPY (const, 0x49ba68, 8), (unique, 0x10000543, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x7d2, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x7d2, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x7d2, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7d2, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x7d2, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4236c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000b75, 8) , (unique, 0x10000b7d, 8), (unique, 0x10000b7d, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000b75, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7c9, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x100005db, 8) , (unique, 0x1000053b, 8) , (const, 0x278, 8) , (unique, 0x100005fb, 8), (unique, 0x100005fb, 8) COPY (const, 0x49c2a8, 8), (unique, 0x100005db, 8) COPY (const, 0x49baa8, 8), (unique, 0x1000053b, 8) COPY (const, 0x49b1a1, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x7c9, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x7c9, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x7c9, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7c9, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x7c9, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b8d, 8) , (register, 0xb8, 8), (unique, 0x10000b8d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x662, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x65f, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x662, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x65f, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x662, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x65f, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x662, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x65f, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x662, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x65f, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x662, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x65f, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x662, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x65f, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x662, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x65f, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x662, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x65f, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x662, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x65f, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x662, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x65f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) CAST (unique, 0x10000b85, 8), (unique, 0x10000b85, 8) INT_OR (register, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0x1000088d, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100008a5, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x4233d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100008a5, 8) , (register, 0xb8, 8) , (unique, 0xbd80, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x1000088d, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000851, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (ram, 0x4c5700, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_AND (unique, 0x10000b95, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000b95, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x10000b9d, 8), (unique, 0x10000b9d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (const, 0x21, 8)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000855, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) INT_AND (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_2COMP (unique, 0x1000085d, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0x10000855, 8)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1f, 8) , (unique, 0x10000bb5, 8), (unique, 0x10000bb5, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x10000bad, 8), (unique, 0x10000bad, 8) INT_SUB (unique, 0x10000ba5, 8) , (register, 0xa0, 8), (unique, 0x10000ba5, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x423618, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000bbd, 4) , (const, 0x0, 4), (unique, 0x10000bbd, 4) CAST (ram, 0x4c56e0, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c4aa0, 4)]
[ ---  CBRANCH (ram, 0x423645, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4aa0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x76f, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x76f, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x76f, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x76f, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x76f, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x76f, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x76f, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x76f, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x76f, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x76f, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x76f, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x76f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x76f, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x76f, 4)]
[ ---  CBRANCH (ram, 0x423654, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0x100005e3, 8) , (const, 0x80000, 8), (unique, 0x100005e3, 8) COPY (const, 0x49bae0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x791, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x791, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x791, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x791, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x791, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x791, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x791, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x791, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x791, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x791, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x791, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x791, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x791, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x791, 4)]
[(unique, 0x100008bd, 4) COPY (unique, 0x10000851, 4)]
[ ---  CBRANCH (ram, 0x42367e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x456020, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbf, 8)]
[(unique, 0x10000443, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffbf, 1) , (const, 0x32, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x7c1, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (register, 0x8, 4) , (const, 0x7c1, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100008bd, 4) , (unique, 0x10000443, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x7c1, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7c1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x7c1, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x423645, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000bd1, 8), (unique, 0x10000bd1, 8) INT_ADD (unique, 0x10000bc1, 8) , (unique, 0x10000bc9, 8), (unique, 0x10000bc9, 8) CAST (register, 0xa8, 8), (unique, 0x10000bc1, 8) CAST (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x4235ef, 1) , (register, 0x0, 1), (register, 0x0, 1) INT_EQUAL (ram, 0x4c56e0, 4) , (const, 0x0, 4), (ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x741, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x741, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x741, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x741, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x741, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x741, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x741, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x741, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x741, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x741, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x741, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x741, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x741, 4)]
[ ---  CBRANCH (ram, 0x422ffc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4561f0, 8) , (unique, 0x3400, 8) , (register, 0xa0, 8) , (const, 0x0, 4) , (const, 0x32, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x74e, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x74e, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x74e, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x74e, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x74e, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x74e, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x74e, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x74e, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x74e, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x74e, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x74e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x423456, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x6f4, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x6f4, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x6f4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x6f4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x6f4, 4)]
[ ---  CALL (ram, 0x456300, 8) , (unique, 0x3400, 8) , (register, 0xa0, 8) , (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000be1, 8) , (unique, 0xbd80, 8), (unique, 0x10000be1, 8) CAST (unique, 0x3200, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bd9, 8), (unique, 0x10000bd9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x71d, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x708, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x6f7, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x71d, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x708, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x6f7, 4), (ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x71d, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x708, 4), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x6f7, 4), (ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x71d, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x708, 4), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x6f7, 4), (ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x71d, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x708, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x6f7, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x71d, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x708, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x6f7, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x71d, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x708, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x6f7, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x71d, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x708, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x6f7, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x71d, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x708, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x6f7, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x71d, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x708, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x6f7, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x71d, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x708, 4), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x6f7, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) CAST (unique, 0x10000be9, 8), (unique, 0x10000be9, 8) INT_OR (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x422ffc, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x422eb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa4, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x42310c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000bf1, 8), (unique, 0x10000bf1, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x4dc, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x4dc, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x4dc, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x4dc, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x4dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x422eb3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x422eb3, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x4ca, 4)]
[(ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x4ca, 4)]
[(ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x4ca, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x4ca, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x4ca, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x422eb3, 1)]
[(ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5708, 8) MULTIEQUAL (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8) , (ram, 0x4c5708, 8)]
[(ram, 0x4c5700, 8) MULTIEQUAL (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8) , (ram, 0x4c5700, 8)]
[(ram, 0x4c56e0, 4) MULTIEQUAL (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4) , (ram, 0x4c56e0, 4)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[ ---  CBRANCH (ram, 0x423707, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000bf9, 8), (unique, 0x10000bf9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d9, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c56e0, 4) COPY (ram, 0x4c56e0, 4), (ram, 0x4c56e0, 4) INDIRECT (ram, 0x4c56e0, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c5700, 8) COPY (ram, 0x4c5700, 8), (ram, 0x4c5700, 8) INDIRECT (ram, 0x4c5700, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c5708, 8) COPY (ram, 0x4c5708, 8), (ram, 0x4c5708, 8) INDIRECT (ram, 0x4c5708, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1d9, 4)]
[ ---  RETURN (const, 0x1, 4)]
