[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1d, 4)]
[ ---  CBRANCH (ram, 0x20bcd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) CALL (ram, 0x189080, 8) , (register, 0x38, 8) , (const, 0xa, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x29, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2b, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x20bcf7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x20bcec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x20bce8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x20bcf7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x20bfc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x5d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x0, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x20bfbf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x20bd10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) INT_AND (register, 0x10, 1) , (const, 0xfd, 1), (register, 0x10, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3da, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3d7, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3d4, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3d1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x63, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x20bd38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x20bd2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x20bd28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20bd38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x95, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaa, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xaa, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xaa, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3d0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xbe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20c03c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x38d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x20bd8a, 1)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x20c033, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0xa0, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x20bd9f, 1)]
[(unique, 0x10000295, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000295, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfd, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xfd, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3d0, 8) , (register, 0xa0, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x111, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20c052, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x37f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x20bdde, 1)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x20c049, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x18, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x20bdf1, 1)]
[(unique, 0x10000285, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000285, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x150, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x150, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x150, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3d0, 8) , (register, 0x18, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x161, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20c05f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (register, 0x18, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x371, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x20be2e, 1)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x10000275, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x20be45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x1000027d, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002cd, 8), (unique, 0x100002cd, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c5, 8), (unique, 0x100002c5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000275, 8) , (unique, 0x1000027d, 8)]
[(unique, 0x10000199, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000019b, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x20be70, 1) , (unique, 0x1000019a, 1), (unique, 0x1000019a, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002d5, 8), (unique, 0x100002d5, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (unique, 0x1000019b, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x20c001, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000199, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x358, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x355, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x351, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x34e, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1d3, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1d3, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3d0, 8) , (unique, 0x1000019b, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1e7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20c082, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0x1000019b, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x34a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x20beac, 1)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x20c098, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0xb0, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x20bec0, 1)]
[(unique, 0x1000029d, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000029d, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x226, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x226, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3d0, 8) , (register, 0xb0, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x23a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20bf02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x248, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x20c08f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0xa0, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x20bf17, 1)]
[(unique, 0x1000028d, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000028d, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x27d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x27d, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x13b3d0, 8) , (register, 0xa0, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x291, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x20bf56, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (register, 0xa0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x29f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x20c079, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x18, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x20bf65, 1)]
[(unique, 0x1000026d, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x20c06c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000026d, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x328, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2d4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2d4, 4)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CAST (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) CALL (ram, 0x13b3d0, 8) , (register, 0x18, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2e4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x20bfa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (register, 0x18, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2f5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x20bfb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
