[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefd8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefd8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025f, 8), (unique, 0x1000025f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x230c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef268, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x61, 4)]
[(ram, 0x4ef268, 8) INDIRECT (ram, 0x4ef268, 8) , (const, 0x61, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x61, 4)]
[ ---  CBRANCH (ram, 0x230d9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100001a5, 8) , (const, 0x0, 4), (unique, 0x100001a5, 8) COPY (const, 0x2b5921, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x75, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x75, 4)]
[(unique, 0x1000020f, 8) COPY (ram, 0x4ef268, 8), (ram, 0x4ef268, 8) INDIRECT (ram, 0x4ef268, 8) , (const, 0x75, 4)]
[ ---  CBRANCH (ram, 0x230d98, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000267, 8), (unique, 0x10000267, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210070, 8) , (register, 0x0, 4) , (register, 0x20, 8) , (const, 0x1000, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x89, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x89, 4)]
[(unique, 0x10000217, 8) COPY (ram, 0x4ef268, 8), (ram, 0x4ef268, 8) INDIRECT (ram, 0x4ef268, 8) , (const, 0x89, 4)]
[ ---  CBRANCH (ram, 0x230d98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026f, 8), (unique, 0x1000026f, 8) CALL (ram, 0x1a0400, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (unique, 0x100001ad, 8) , (const, 0x7, 8), (unique, 0x100001ad, 8) COPY (const, 0x2b6891, 8)]
[ ---  CBRANCH (ram, 0x230cb2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001d5, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffefd8, 8)]
[ ---  CBRANCH (ram, 0x230ca0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 1) , (unique, 0x10000277, 1), (unique, 0x10000277, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x230cbd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  CBRANCH (ram, 0x230db0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) COPY (const, 0x3, 4)]
[(unique, 0x10000117, 8) INT_MULT (ram, 0x4ef268, 8) , (const, 0x64, 8)]
[ ---  BRANCH (ram, 0x230d5d, 1)]
[ ---  CBRANCH (ram, 0x230dd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[(unique, 0x1000019f, 1) COPY (const, 0x0, 1)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000197, 1) COPY (const, 0x0, 1)]
[(unique, 0x100001e7, 8) COPY (ram, 0x4ef268, 8)]
[ ---  BRANCH (ram, 0x230d13, 1)]
[(unique, 0x1000019e, 1) MULTIEQUAL (unique, 0x1000019f, 1) , (unique, 0x1000019c, 1)]
[(unique, 0x10000192, 1) MULTIEQUAL (unique, 0x10000197, 1) , (unique, 0x10000196, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100001e7, 8) , (register, 0x80, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3100, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x230ce0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000278, 1) , (const, 0xa, 1), (unique, 0x10000278, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000019d, 1) COPY (const, 0x1, 1)]
[(unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0xa, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffd0, 4)]
[(unique, 0x100001ef, 4) COPY (register, 0x38, 4)]
[(unique, 0x100001f7, 4) COPY (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x230d02, 1) , (unique, 0x10000192, 1)]
[(unique, 0x100001f3, 4) COPY (unique, 0x3100, 4)]
[(unique, 0x100001fb, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x38, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x230d26, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x10000195, 1) COPY (const, 0x1, 1)]
[(unique, 0x1000019c, 1) MULTIEQUAL (unique, 0x1000019d, 1) , (unique, 0x1000019d, 1) , (unique, 0x1000019e, 1) , (unique, 0x1000019e, 1)]
[(register, 0x90, 4) MULTIEQUAL (unique, 0x100001f7, 4) , (unique, 0x100001fb, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(unique, 0x10000196, 1) MULTIEQUAL (unique, 0x10000192, 1) , (unique, 0x10000192, 1) , (unique, 0x10000192, 1) , (unique, 0x10000195, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x100001ef, 4) , (unique, 0x100001f3, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x230d30, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x230d30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x100001ff, 8) COPY (ram, 0x4ef268, 8)]
[ ---  CBRANCH (ram, 0x230df9, 1) , (unique, 0x1000019c, 1)]
[(unique, 0x10000207, 8) COPY (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x230d39, 1)]
[(unique, 0x1000021f, 8) COPY (ram, 0x4ef268, 8), (ram, 0x4ef268, 8) MULTIEQUAL (unique, 0x100001ff, 8) , (unique, 0x10000207, 8)]
[ ---  CBRANCH (ram, 0x230d98, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0x6, 4)]
[(unique, 0x1000023f, 8) COPY (unique, 0x10000163, 8), (unique, 0x10000163, 8) INT_MULT (ram, 0x4ef268, 8) , (const, 0xa, 8)]
[ ---  CBRANCH (ram, 0x230d8d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x90, 4) , (const, 0x6, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x90, 4) , (const, 0x2, 4)]
[(unique, 0x10000247, 8) COPY (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) INT_MULT (ram, 0x4ef268, 8) , (const, 0x64, 8)]
[ ---  CBRANCH (ram, 0x230d8d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x4, 4) , (register, 0x90, 4)]
[(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x10, 4)]
[(unique, 0x1000024f, 8) COPY (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) INT_MULT (register, 0x0, 8) , (const, 0xa, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100000c7, 8) , (unique, 0x10000117, 8)]
[ ---  CBRANCH (ram, 0x230d8d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x10, 4) , (const, 0x6, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x10, 4)]
[(register, 0x8, 4) COPY (const, 0x4, 4)]
[(unique, 0x1000012f, 8) INT_MULT (ram, 0x4ef268, 8) , (const, 0x3e8, 8)]
[ ---  BRANCH (ram, 0x230d6c, 1)]
[(unique, 0x10000227, 8) COPY (unique, 0x1000016b, 8), (unique, 0x1000016b, 8) INT_MULT (register, 0x0, 8) , (const, 0xa, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000012f, 8) , (unique, 0x100000e3, 8)]
[ ---  CBRANCH (ram, 0x230d8d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x8, 4) , (const, 0x6, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(unique, 0x1000022f, 8) COPY (unique, 0x10000153, 8), (unique, 0x10000153, 8) INT_MULT (register, 0x0, 8) , (const, 0x64, 8)]
[ ---  CBRANCH (ram, 0x230d8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x4, 4)]
[(unique, 0x10000237, 8) COPY (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) INT_MULT (register, 0x0, 8) , (const, 0x3e8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf7, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ef268, 8) INDIRECT (ram, 0x4ef268, 8) , (const, 0xf7, 4), (ram, 0x4ef268, 8) COPY (unique, 0x10000257, 8), (unique, 0x10000257, 8) MULTIEQUAL (unique, 0x1000020f, 8) , (unique, 0x10000217, 8) , (unique, 0x1000021f, 8) , (unique, 0x10000227, 8) , (unique, 0x1000022f, 8) , (unique, 0x10000237, 8) , (unique, 0x1000023f, 8) , (unique, 0x10000247, 8) , (unique, 0x1000024f, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf7, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(register, 0x0, 8) MULTIEQUAL (ram, 0x4ef268, 8) , (ram, 0x4ef268, 8) , (ram, 0x4ef268, 8)]
[ ---  CBRANCH (ram, 0x230df4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000279, 8), (unique, 0x10000279, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4ef268, 8) COPY (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x51, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ef268, 8) COPY (ram, 0x4ef268, 8), (ram, 0x4ef268, 8) INDIRECT (register, 0x0, 8) , (const, 0x51, 4)]
[ ---  RETURN (const, 0x1, 4)]
