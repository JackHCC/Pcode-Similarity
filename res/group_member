[(register, 0x18, 4) COPY (const, 0x10000, 4)]
[(stack, 0xffffffffffffffd0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bc, 8), (unique, 0x100000bc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100000a4, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  BRANCH (ram, 0x1e5ac2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d4, 8) , (const, 0x1e5ae7, 8), (unique, 0x100000d4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000008a, 8) , (const, 0x1, 8), (unique, 0x1000008a, 8) INT_ADD (unique, 0x1000003a, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000003a, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4), (register, 0x20, 8) COPY (unique, 0x100000b4, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x1000006a, 4), (unique, 0x100000b4, 8) MULTIEQUAL (unique, 0x100000a4, 8) , (unique, 0x100000ac, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x50, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x1000006a, 4) INT_MULT (register, 0x18, 4) , (const, 0x2, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x1000006a, 4)]
[(unique, 0x100000ac, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x1000003a, 8) , (const, 0x1, 8), (unique, 0x1000003a, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4), (register, 0x20, 8) COPY (unique, 0x100000b4, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x1000006a, 4), (unique, 0x100000b4, 8) MULTIEQUAL (unique, 0x100000a4, 8) , (unique, 0x100000ac, 8)]
[ ---  CBRANCH (ram, 0x1e5ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e5940, 8) , (register, 0x18, 4) , (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x100000cc, 8), (unique, 0x100000cc, 8) INT_AND (unique, 0x100000c4, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100000c4, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000082, 8) , (const, 0x1, 8), (unique, 0x10000082, 8) INT_ADD (unique, 0x1000003a, 8) , (const, 0xf, 8), (unique, 0x1000003a, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4), (register, 0x20, 8) COPY (unique, 0x100000b4, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (unique, 0x1000006a, 4), (unique, 0x100000b4, 8) MULTIEQUAL (unique, 0x100000a4, 8) , (unique, 0x100000ac, 8)]
[(register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x1e5b02, 1)]
[ ---  CBRANCH (ram, 0x1e5af8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e5b28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x38, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1e5b08, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1e5b2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000dc, 8), (unique, 0x100000dc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000e4, 8) , (unique, 0x10000072, 8), (unique, 0x100000e4, 8) CAST (register, 0x20, 8), (unique, 0x10000072, 8) PTRSUB (const, 0x0, 8) , (const, 0x1e5b34, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000092, 8) , (const, 0x1, 8), (unique, 0x10000092, 8) INT_ADD (unique, 0x1000003a, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x97, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x96, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
