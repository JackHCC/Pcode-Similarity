[ ---  CBRANCH (ram, 0x425228, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000ab, 8), (unique, 0x100000ab, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10f, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x10f, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x1000008e, 8), (unique, 0x1000008e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  BRANCH (ram, 0x4251bd, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000009f, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x3a, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  CBRANCH (ram, 0x4252c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x421460, 8) , (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000086, 8), (unique, 0x10000086, 8) COPY (const, 0x49b23b, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0xed, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4251f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000b3, 8), (unique, 0x100000b3, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x425260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bb, 8), (unique, 0x100000bb, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4251ec, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x100000c3, 4), (unique, 0x100000c3, 4) CAST (unique, 0x1000009f, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4251ec, 1)]
[(ram, 0x4c57a0, 4) INT_SUB (ram, 0x4c57a0, 4) , (const, 0x1, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x6d, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x421a50, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x422d80, 8) , (unique, 0x10000096, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000096, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(unique, 0x100000a3, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x9e, 4)]
[ ---  CBRANCH (ram, 0x425298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9e, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x425223, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x100000cf, 4), (unique, 0x100000cf, 4) CAST (unique, 0x100000a3, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xca, 8)]
[(ram, 0x4c57a0, 4) INT_SUB (ram, 0x4c57a0, 4) , (const, 0x1, 4)]
[(unique, 0x100000a7, 4) COPY (unique, 0xbc80, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000007d, 4), (unique, 0x1000007d, 4) MULTIEQUAL (unique, 0x100000a7, 4) , (unique, 0x100000a3, 4)]
