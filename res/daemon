[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x28, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x1000015f, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e4a50, 8)]
[ ---  CBRANCH (ram, 0x21b8ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1e4a50, 8)]
[ ---  CBRANCH (ram, 0x21b8d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x13d, 4)]
[ ---  CALL (ram, 0x1e4dd0, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x42, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x42, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x42, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x42, 4)]
[ ---  CBRANCH (ram, 0x21b9b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1e5c00, 8)]
[ ---  CBRANCH (ram, 0x21b970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x210af0, 8) , (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) COPY (const, 0x2b525a, 8)]
[ ---  BRANCH (ram, 0x21b8aa, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000163, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21b8e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa2, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xa2, 4), (stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa2, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x21b9b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0x10000146, 8) , (const, 0x2, 8) , (const, 0x0, 8), (unique, 0x10000146, 8) COPY (const, 0x2b37dc, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb5, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xb5, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xb5, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb5, 4)]
[ ---  CBRANCH (ram, 0x21b9b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x127, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x127, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x127, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x21b99d, 1)]
[ ---  CBRANCH (ram, 0x21b988, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff60, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x21b988, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff70, 8) , (const, 0x103, 8)]
[ ---  CALL (ram, 0x2109a0, 8) , (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CALL (ram, 0x2109a0, 8) , (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x105, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xff, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x105, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xf9, 4)]
[ ---  CALL (ram, 0x2109a0, 8) , (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x21b8ae, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x2, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x116, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x116, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x116, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x21b8ae, 1)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x11c, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x120, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016f, 8) , (const, 0x13, 4), (unique, 0x1000016f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x21b8ae, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x1000015f, 4) , (unique, 0x10000163, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x18, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21b9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000177, 8), (unique, 0x10000177, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000017f, 4), (unique, 0x1000017f, 4) COPY (register, 0x18, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x87, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x87, 4)]
[ ---  RETURN (const, 0x1, 4)]
