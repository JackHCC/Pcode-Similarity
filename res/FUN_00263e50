[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x26407d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb430, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x209, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001a0, 8) , (unique, 0x10000198, 8) , (const, 0x13c, 4) , (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) COPY (const, 0x2bb790, 8), (unique, 0x100001a0, 8) COPY (const, 0x2b745a, 8), (unique, 0x10000198, 8) COPY (const, 0x2b7445, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x209, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x209, 4)]
[(ram, 0x4f02e0, 2) COPY (ram, 0x4f02e0, 2), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x209, 4)]
[(ram, 0x4f02e2, 6) COPY (ram, 0x4f02e2, 6), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x209, 4)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x209, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x209, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x26406a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0460, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x200, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x200, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x200, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x200, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x200, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x200, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x264027, 1)]
[(unique, 0x3c80, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x54, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x54, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x54, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x54, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x54, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x54, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x54, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x54, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe68, 8)]
[(stack, 0xfffffffffffffe88, 8) PTRSUB (const, 0x0, 8) , (const, 0x263ac0, 8)]
[(register, 0x18, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[(unique, 0x100002c0, 8) COPY (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000260, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000260, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002c0, 8) , (unique, 0x100002c8, 8)]
[ ---  CBRANCH (ram, 0x263ee6, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3800, 8) , (unique, 0x3c80, 8)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0xa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x88, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xa4, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x8c, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x88, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x88, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xa4, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x8c, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x88, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0xa4, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x8c, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x88, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0xa4, 4), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x8c, 4), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x88, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xa4, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x8c, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x88, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xa4, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x8c, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x88, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xa4, 4), (stack, 0xfffffffffffffe68, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xa4, 4), (stack, 0xfffffffffffffe78, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xa4, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x8c, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x8c, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x88, 4)]
[ ---  CBRANCH (ram, 0x264050, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2106c0, 8) , (const, 0x0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (unique, 0x3800, 8), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x8c, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x88, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fd, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1fd, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1fd, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x1fd, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1fd, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1fd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x264000, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb5, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xb5, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb5, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xb5, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0xb5, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0xb5, 4), (ram, 0x4f02e2, 6) MULTIEQUAL (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xb5, 4), (ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xb5, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xb5, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xb5, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xb5, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xb5, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x263fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x180, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (ram, 0x4eb430, 4) , (unique, 0x100001b8, 8) , (const, 0x180, 8), (unique, 0x100001b8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e0, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002f8, 8) , (const, 0x3, 4), (unique, 0x100002f8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f9, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1fb, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1f9, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1fb, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1f9, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x1fb, 4), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x1f9, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1fb, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1f9, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1fb, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1f9, 4), (ram, 0x4f0460, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x4f0460, 8) INT_ADD (ram, 0x4f0460, 8) , (const, 0x180, 8)]
[ ---  CBRANCH (ram, 0x263f28, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 2) , (unique, 0x10000300, 2), (unique, 0x10000300, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (ram, 0x4f02e0, 2) , (const, 0x6, 2)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe9, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xe9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe9, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xe9, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0xe9, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0xe9, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xe9, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xe9, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0xe9, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0xe9, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe9, 4)]
[ ---  CBRANCH (ram, 0x263f28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (register, 0x18, 8) , (unique, 0x100001c0, 8) , (const, 0x20, 8), (unique, 0x100001c0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) INT_ADD (unique, 0x10000278, 8) , (ram, 0x4f02e0, 2), (unique, 0x10000278, 8) INT_LEFT (unique, 0x10000270, 8) , (const, 0x10, 8), (unique, 0x10000270, 8) INT_SEXT (unique, 0x10000302, 6), (unique, 0x10000302, 6) CAST (ram, 0x4f02e2, 6)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xfc, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x10b, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xfc, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x10b, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0xfc, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x10b, 4), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0xfc, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x10b, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xfc, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x10b, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xfc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (ram, 0x4f0458, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2f, 8) , (const, 0x8, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xfc, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x180, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_SUB (unique, 0x10000318, 8) , (unique, 0x10000320, 8), (unique, 0x10000320, 8) CAST (register, 0x38, 8), (unique, 0x10000318, 8) CAST (register, 0x30, 8), (register, 0x38, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_AND (unique, 0x10000308, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000308, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100002a0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_SUB (unique, 0x10000330, 8) , (unique, 0x10000338, 8), (unique, 0x10000338, 8) CAST (register, 0x0, 8), (unique, 0x10000330, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e0, 8), (register, 0x0, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_SUB (unique, 0x10000318, 8) , (unique, 0x10000320, 8), (unique, 0x10000320, 8) CAST (register, 0x38, 8), (unique, 0x10000318, 8) CAST (register, 0x30, 8), (register, 0x38, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_AND (unique, 0x10000308, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000308, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100002b0, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_AND (unique, 0x10000308, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000308, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e2, 6) MULTIEQUAL (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002b0, 8) , (unique, 0x100002b8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100002a0, 8) , (unique, 0x100002a8, 8)]
[ ---  CBRANCH (ram, 0x263fb8, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x163, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x163, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x163, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x163, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x163, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x163, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000348, 8), (unique, 0x10000348, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x263fe1, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x179, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x179, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x179, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x179, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x179, 4), (ram, 0x4f02e2, 6) MULTIEQUAL (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x179, 4), (ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x179, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x179, 4), (stack, 0xfffffffffffffe68, 16) INT_ADD (unique, 0x10000290, 16) , (const, 0x2, 2), (unique, 0x10000290, 16) INT_LEFT (unique, 0x10000280, 16) , (const, 0x10, 16), (unique, 0x10000280, 16) INT_SEXT (stack, 0xfffffffffffffe6a, 14), (stack, 0xfffffffffffffe6a, 14) SUBPIECE (stack, 0xfffffffffffffe68, 16) , (const, 0x2, 8), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x179, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x179, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x179, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x179, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2106c0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (unique, 0x3800, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x195, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x186, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x195, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x186, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x195, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x186, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x195, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x186, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x195, 4), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x186, 4), (ram, 0x4f02e2, 6) MULTIEQUAL (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x195, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x186, 4), (ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x195, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x186, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x195, 4), (stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x186, 4), (stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x195, 4), (stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x186, 4), (stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x195, 4), (stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x186, 4), (stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x195, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x186, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x195, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x186, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3c80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x264060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f3, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1f3, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1f3, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x1f3, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1f3, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1f3, 4)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x1f3, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x1f3, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x1f3, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x1f3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f3, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x26401b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e2, 6) MULTIEQUAL (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) INT_2COMP (unique, 0x1000016d, 4), (unique, 0x1000016d, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xfffffffffffffe88, 8) MULTIEQUAL (stack, 0xfffffffffffffe88, 8) , (stack, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffe78, 16) MULTIEQUAL (stack, 0xfffffffffffffe78, 16) , (stack, 0xfffffffffffffe78, 16)]
[(stack, 0xfffffffffffffe68, 16) MULTIEQUAL (stack, 0xfffffffffffffe68, 16) , (stack, 0xfffffffffffffe68, 16)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e2, 6) MULTIEQUAL (ram, 0x4f02e2, 6) , (ram, 0x4f02e2, 6)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x264078, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffffe68, 16) INDIRECT (stack, 0xfffffffffffffe68, 16) , (const, 0x1ec, 4)]
[(stack, 0xfffffffffffffe78, 16) INDIRECT (stack, 0xfffffffffffffe78, 16) , (const, 0x1ec, 4)]
[(stack, 0xfffffffffffffe88, 8) INDIRECT (stack, 0xfffffffffffffe88, 8) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ec, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ec, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1ec, 4)]
[(ram, 0x4f02e0, 2) COPY (ram, 0x4f02e0, 2), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1ec, 4)]
[(ram, 0x4f02e2, 6) COPY (ram, 0x4f02e2, 6), (ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x1ec, 4)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x1ec, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1ec, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 2) COPY (ram, 0x4f02e0, 2)]
[(ram, 0x4f02e2, 6) COPY (ram, 0x4f02e2, 6)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x160, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x160, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x160, 4)]
[(ram, 0x4f02e2, 6) INDIRECT (ram, 0x4f02e2, 6) , (const, 0x160, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x160, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x160, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100002a8, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000248, 8) , (const, 0x8, 8), (unique, 0x10000248, 8) INT_ADD (unique, 0x10000240, 8) , (const, 0x1, 8), (unique, 0x10000240, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x100002b8, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000228, 8) , (const, 0x8, 8), (unique, 0x10000228, 8) INT_ADD (unique, 0x10000220, 8) , (const, 0x1, 8), (unique, 0x10000220, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x263fb5, 1)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x83, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x83, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100002c8, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001f8, 8) , (const, 0x8, 8), (unique, 0x100001f8, 8) INT_ADD (unique, 0x100001f0, 8) , (const, 0x1, 8), (unique, 0x100001f0, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x263ee3, 1)]
