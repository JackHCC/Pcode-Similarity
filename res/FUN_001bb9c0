[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[ ---  CBRANCH (ram, 0x1bba10, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x38, 4) , (const, 0xc5, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000041, 4) , (const, 0x80000005, 4), (unique, 0x10000041, 4) INT_ZEXT (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0xbe, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1bba10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x2bf80, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000041, 4) , (const, 0x80000005, 4), (unique, 0x10000041, 4) INT_ZEXT (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0xbe, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2af00, 1), (unique, 0x2af00, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x29, 4) , (const, 0x0, 4)]
[ ---  BRANCH (const, 0x1f, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2af80, 1), (unique, 0x2af80, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0x1d, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b000, 1), (unique, 0x2b000, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x2b, 4) , (const, 0x2, 4)]
[ ---  BRANCH (const, 0x1b, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b080, 1), (unique, 0x2b080, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x3, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x2c, 4) , (const, 0x3, 4)]
[ ---  BRANCH (const, 0x19, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b100, 1), (unique, 0x2b100, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x4, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  BRANCH (const, 0x17, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b180, 1), (unique, 0x2b180, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x5, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x2e, 4) , (const, 0x5, 4)]
[ ---  BRANCH (const, 0x15, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b200, 1), (unique, 0x2b200, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x6, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x2f, 4) , (const, 0x6, 4)]
[ ---  BRANCH (const, 0x13, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b280, 1), (unique, 0x2b280, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x7, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x30, 4) , (const, 0x7, 4)]
[ ---  BRANCH (const, 0x11, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b300, 1), (unique, 0x2b300, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x9, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x31, 4) , (const, 0x9, 4)]
[ ---  BRANCH (const, 0xf, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b380, 1), (unique, 0x2b380, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x32, 4) , (const, 0xa, 4)]
[ ---  BRANCH (const, 0xd, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b400, 1), (unique, 0x2b400, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xb, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  BRANCH (const, 0xb, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b480, 1), (unique, 0x2b480, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xd, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[ ---  BRANCH (const, 0x9, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b500, 1), (unique, 0x2b500, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xf, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x35, 4) , (const, 0xf, 4)]
[ ---  BRANCH (const, 0x7, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b580, 1), (unique, 0x2b580, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x80000002, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x36, 4) , (const, 0x80000002, 4)]
[ ---  BRANCH (const, 0x5, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b600, 1), (unique, 0x2b600, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x80000003, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x37, 4) , (const, 0x80000003, 4)]
[ ---  BRANCH (const, 0x3, 1)]
[ ---  CBRANCH (const, 0x21, 1) , (unique, 0x2b680, 1), (unique, 0x2b680, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x80000004, 4)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x38, 4) , (const, 0x80000004, 4)]
[ ---  BRANCH (const, 0x1, 1)]
[(unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (register, 0x10, 4)]
[ ---  BRANCH (const, 0x21, 1)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) CAST (unique, 0x100003c2, 8), (unique, 0x100003c2, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x8, 8), (unique, 0x2ae80, 8) MULTIEQUAL (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8)]
[(unique, 0x100003aa, 4) COPY (unique, 0x2c400, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x100003ca, 8), (unique, 0x100003ca, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) MULTIEQUAL (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8) , (unique, 0x2ae80, 8)]
[ ---  CBRANCH (ram, 0x1bba18, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x38, 4) , (const, 0xbc, 4)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x3, 4)]
[(unique, 0x100003ae, 4) COPY (unique, 0x2c280, 4)]
[ ---  BRANCH (ram, 0x1bb9f1, 1)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x100003aa, 4) , (unique, 0x100003ae, 4)]
[ ---  BRANCHIND (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000019a, 8) , (unique, 0x10000192, 8) , (const, 0x1b1, 4) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) COPY (const, 0x2b93f8, 8), (unique, 0x1000019a, 8) COPY (const, 0x2b50cb, 8), (unique, 0x10000192, 8) COPY (const, 0x2b50b0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8)]
[ ---  CBRANCH (ram, 0x1bba4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000017d, 4) , (const, 0x0, 4), (unique, 0x1000017d, 4) INT_AND (unique, 0x2c280, 4) , (const, 0xf000, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000012d, 4) , (const, 0xf, 4), (unique, 0x1000012d, 4) INT_RIGHT (unique, 0x2c280, 4) , (const, 0xc, 4)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x1000012d, 4) , (const, 0xf, 4), (unique, 0x1000012d, 4) INT_RIGHT (unique, 0x2c280, 4) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_AND (unique, 0x1000016d, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x1000016d, 16) INT_ADD (unique, 0x1000038a, 16) , (unique, 0x2e500, 8), (unique, 0x1000038a, 16) INT_LEFT (unique, 0x1000037a, 16) , (const, 0x40, 16), (unique, 0x1000037a, 16) INT_SEXT (unique, 0x100003d2, 8), (unique, 0x100003d2, 8) CAST (unique, 0x2e680, 8), (unique, 0x2e680, 8) INT_REM (unique, 0x2e300, 8) , (register, 0x8, 8), (unique, 0x2e500, 8) INT_DIV (unique, 0x2e300, 8) , (register, 0x8, 8), (unique, 0x2e300, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000189, 4) , (const, 0x7ff80000, 4), (register, 0x8, 8) INT_AND (register, 0x10, 8) , (const, 0xff, 8), (unique, 0x10000189, 4) INT_MULT (unique, 0x2c280, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bba12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000139, 4) , (const, 0x0, 4), (unique, 0x10000139, 4) INT_AND (unique, 0x2c280, 4) , (const, 0xf000, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x100000f1, 12), (unique, 0x100000f1, 12) INT_ADD (unique, 0x10000256, 12) , (register, 0x0, 8), (unique, 0x10000256, 12) INT_LEFT (unique, 0x1000024a, 12) , (const, 0x40, 12), (unique, 0x1000024a, 12) INT_SEXT (unique, 0x100003da, 4), (unique, 0x100003da, 4) CAST (unique, 0x2c280, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000185, 4) , (const, 0x7ff80000, 4), (unique, 0x10000185, 4) INT_MULT (unique, 0x2c280, 4) , (const, 0x2, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)]
[(unique, 0x1000039a, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bbadf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000155, 4) , (const, 0x0, 4), (unique, 0x10000155, 4) INT_AND (register, 0x8, 4) , (const, 0xf000, 4)]
[(unique, 0x100003a2, 8) COPY (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x100000c1, 12), (unique, 0x100000c1, 12) INT_AND (unique, 0x100000cd, 12) , (const, 0xffffffffffffffff, 12), (unique, 0x100000cd, 12) INT_ADD (unique, 0x1000023e, 12) , (register, 0x0, 8), (unique, 0x1000023e, 12) INT_LEFT (unique, 0x10000232, 12) , (const, 0x40, 12), (unique, 0x10000232, 12) INT_SEXT (unique, 0x100003de, 4), (unique, 0x100003de, 4) CAST (register, 0x8, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000039a, 8) , (unique, 0x100003a2, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)]
[ ---  BRANCHIND (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xc, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_AND (unique, 0x1000015d, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x1000015d, 16) INT_ADD (unique, 0x10000352, 16) , (unique, 0x2e500, 8), (unique, 0x10000352, 16) INT_LEFT (unique, 0x10000342, 16) , (const, 0x40, 16), (unique, 0x10000342, 16) INT_SEXT (unique, 0x100003e2, 8), (unique, 0x100003e2, 8) CAST (unique, 0x2e680, 8), (unique, 0x2e680, 8) INT_REM (unique, 0x2e400, 8) , (unique, 0x2e180, 8), (unique, 0x2e500, 8) INT_DIV (unique, 0x2e400, 8) , (unique, 0x2e180, 8), (unique, 0x2e400, 8) INT_AND (unique, 0x1000013d, 8) , (const, 0xffffffff03fffc00, 8), (unique, 0x1000013d, 8) INT_ZEXT (register, 0x10, 4), (unique, 0x2e180, 8) INT_ZEXT (register, 0x8, 4), (register, 0x10, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x6, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000272, 16) , (const, 0x80, 8), (unique, 0x10000272, 16) INT_LEFT (unique, 0x10000262, 16) , (const, 0x40, 16), (unique, 0x10000262, 16) INT_SEXT (unique, 0x100003ea, 8), (unique, 0x100003ea, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000312, 16) , (const, 0x60, 8), (unique, 0x10000312, 16) INT_LEFT (unique, 0x10000302, 16) , (const, 0x40, 16), (unique, 0x10000302, 16) INT_SEXT (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000332, 16) , (const, 0x40, 8), (unique, 0x10000332, 16) INT_LEFT (unique, 0x10000322, 16) , (const, 0x40, 16), (unique, 0x10000322, 16) INT_SEXT (unique, 0x100003fa, 8), (unique, 0x100003fa, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100002d2, 16) , (const, 0x30, 8), (unique, 0x100002d2, 16) INT_LEFT (unique, 0x100002c2, 16) , (const, 0x40, 16), (unique, 0x100002c2, 16) INT_SEXT (unique, 0x10000402, 8), (unique, 0x10000402, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100002f2, 16) , (const, 0x20, 8), (unique, 0x100002f2, 16) INT_LEFT (unique, 0x100002e2, 16) , (const, 0x40, 16), (unique, 0x100002e2, 16) INT_SEXT (unique, 0x1000040a, 8), (unique, 0x1000040a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100002b2, 16) , (const, 0x10, 8), (unique, 0x100002b2, 16) INT_LEFT (unique, 0x100002a2, 16) , (const, 0x40, 16), (unique, 0x100002a2, 16) INT_SEXT (unique, 0x10000412, 8), (unique, 0x10000412, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x10000292, 16) , (const, 0x8, 8), (unique, 0x10000292, 16) INT_LEFT (unique, 0x10000282, 16) , (const, 0x40, 16), (unique, 0x10000282, 16) INT_SEXT (unique, 0x1000041a, 8), (unique, 0x1000041a, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x100000fd, 12), (unique, 0x100000fd, 12) INT_AND (unique, 0x10000109, 12) , (const, 0xffffffffffffffff, 12), (unique, 0x10000109, 12) INT_ADD (unique, 0x1000036e, 12) , (register, 0x10, 8), (unique, 0x1000036e, 12) INT_LEFT (unique, 0x10000362, 12) , (const, 0x40, 12), (unique, 0x10000362, 12) INT_SEXT (unique, 0x10000422, 4), (unique, 0x10000422, 4) CAST (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bba12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000ad, 4) , (const, 0x0, 4), (unique, 0x100000ad, 4) INT_AND (register, 0x8, 4) , (const, 0xf000, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x100000b1, 12), (unique, 0x100000b1, 12) INT_ADD (unique, 0x10000226, 12) , (register, 0x0, 8), (unique, 0x10000226, 12) INT_LEFT (unique, 0x1000021a, 12) , (const, 0x40, 12), (unique, 0x1000021a, 12) INT_SEXT (unique, 0x10000426, 4), (unique, 0x10000426, 4) CAST (unique, 0x2c280, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3fffc00, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x6, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100001c2, 16) , (register, 0x0, 8), (unique, 0x100001c2, 16) INT_LEFT (unique, 0x100001b2, 16) , (const, 0x40, 16), (unique, 0x100001b2, 16) INT_SEXT (unique, 0x1000042a, 8), (unique, 0x1000042a, 8) CAST (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x10000099, 12), (unique, 0x10000099, 12) INT_ADD (unique, 0x1000020e, 12) , (register, 0x0, 8), (unique, 0x1000020e, 12) INT_LEFT (unique, 0x10000202, 12) , (const, 0x40, 12), (unique, 0x10000202, 12) INT_SEXT (unique, 0x10000432, 4), (unique, 0x10000432, 4) CAST (unique, 0x2c280, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4)]
[(register, 0x8, 4) INT_LEFT (unique, 0x10000151, 4) , (const, 0x2, 4), (unique, 0x10000151, 4) INT_AND (register, 0x0, 4) , (const, 0xff00, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)]
[(unique, 0x100003b2, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1bba87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xff, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x10, 4)]
[(unique, 0x100003b6, 4) COPY (register, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x10000081, 12), (unique, 0x10000081, 12) INT_AND (unique, 0x1000008d, 12) , (const, 0xffffffffffffffff, 12), (unique, 0x1000008d, 12) INT_ADD (unique, 0x100001f6, 12) , (register, 0x0, 8), (unique, 0x100001f6, 12) INT_LEFT (unique, 0x100001ea, 12) , (const, 0x40, 12), (unique, 0x100001ea, 12) INT_SEXT (unique, 0x10000436, 4), (unique, 0x10000436, 4) CAST (register, 0x0, 4), (register, 0x0, 8) INT_ZEXT (unique, 0x10000181, 4), (unique, 0x10000181, 4) MULTIEQUAL (unique, 0x100003b2, 4) , (unique, 0x100003b6, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ZEXT (unique, 0x10000071, 12), (unique, 0x10000071, 12) INT_ADD (unique, 0x100001de, 12) , (register, 0x0, 8), (unique, 0x100001de, 12) INT_LEFT (unique, 0x100001d2, 12) , (const, 0x40, 12), (unique, 0x100001d2, 12) INT_SEXT (unique, 0x1000043a, 4), (unique, 0x1000043a, 4) CAST (unique, 0x2c280, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3fc00, 4), (register, 0x0, 4) INT_RIGHT (register, 0x8, 4) , (const, 0xe, 4)]
