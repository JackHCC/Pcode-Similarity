[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000094, 8), (unique, 0x10000094, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000009c, 8) , (unique, 0x3800, 8), (unique, 0x1000009c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x3800, 8) CAST (unique, 0x10000084, 8), (unique, 0x10000084, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x46, 4)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x46, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x1000007c, 8) , (const, 0x46, 4), (unique, 0x1000007c, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x46, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff14, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x46, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000008c, 8), (unique, 0x1000008c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x267320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13eb70, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x9a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000a4, 8) , (unique, 0xbd80, 8), (unique, 0x100000a4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x267302, 1)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5c, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x5c, 4)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000ac, 8) , (unique, 0xbd80, 8), (unique, 0x100000ac, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eada8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x5c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 16)]
[(ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x6b, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x68, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x63, 4), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x5c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000b4, 8) , (const, 0x0, 8), (unique, 0x100000b4, 8) CAST (unique, 0x10000070, 8), (unique, 0x10000070, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10000078, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4eada8, 8) MULTIEQUAL (ram, 0x4eada8, 8) , (ram, 0x4eada8, 8)]
[(register, 0x0, 4) COPY (unique, 0x1000004b, 4), (unique, 0x1000004b, 4) MULTIEQUAL (unique, 0x10000078, 4) , (stack, 0xffffffffffffff14, 4)]
[ ---  CBRANCH (ram, 0x267335, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bc, 8), (unique, 0x100000bc, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x8e, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x8e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eada8, 8) COPY (ram, 0x4eada8, 8), (ram, 0x4eada8, 8) INDIRECT (ram, 0x4eada8, 8) , (const, 0x8e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eada8, 8) COPY (ram, 0x4eada8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
