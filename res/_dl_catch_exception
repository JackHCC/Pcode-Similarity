[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000099, 8), (unique, 0x10000099, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000a1, 8), (unique, 0x100000a1, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x489540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x0, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000a9, 8), (unique, 0x100000a9, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff8, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xb2, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xb2, 4)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0xbd80, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000b1, 8), (unique, 0x100000b1, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb2, 4)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x48951b, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0x3800, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3800, 8) CAST (unique, 0x100000b9, 8), (unique, 0x100000b9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0x1000008d, 8) , (const, 0x50, 4), (unique, 0x1000008d, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x3800, 8) , (const, 0x50, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff14, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x50, 4)]
[ ---  CBRANCH (ram, 0x489568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4692a0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0xbd80, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  BRANCH (ram, 0x48951b, 1)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x66, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x66, 4)]
[ ---  CALLIND (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0xbd80, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000d1, 8), (unique, 0x100000d1, 8) INT_ADD (register, 0x110, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x66, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d9, 8) , (const, 0x0, 8), (unique, 0x100000d9, 8) CAST (unique, 0x10000085, 8), (unique, 0x10000085, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 16)]
[(unique, 0x10000095, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x10000095, 4) , (stack, 0xffffffffffffff14, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x48957f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000e1, 8), (unique, 0x100000e1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x98, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x98, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa0, 4)]
