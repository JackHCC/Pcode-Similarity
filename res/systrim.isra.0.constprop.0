[ ---  CBRANCH (ram, 0x422d1b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x21, 8), (register, 0x18, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000a8, 8), (unique, 0x100000a8, 8) INT_ADD (ram, 0x4c5800, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x422d1b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_2COMP (ram, 0x4c6118, 8), (register, 0x0, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x38, 8)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x4d, 4)]
[(ram, 0x4c6038, 8) INDIRECT (ram, 0x4c6038, 8) , (const, 0x4d, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x4d, 4)]
[(ram, 0x4c7c70, 8) INDIRECT (ram, 0x4c7c70, 8) , (const, 0x4d, 4)]
[ ---  CBRANCH (ram, 0x422d28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (ram, 0x4c5800, 8) , (register, 0x18, 8), (register, 0x0, 8) CALLIND (unique, 0x100000b0, 8) , (const, 0x0, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x4d, 4), (unique, 0x100000b0, 8) CAST (ram, 0x4c6038, 8)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x82, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x82, 4)]
[(ram, 0x4c6038, 8) INDIRECT (ram, 0x4c6038, 8) , (const, 0x82, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x82, 4)]
[ ---  CALLIND (unique, 0x100000b8, 8) , (register, 0x38, 8), (unique, 0x100000b8, 8) CAST (ram, 0x4c6038, 8), (register, 0x38, 8) INT_2COMP (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x422d78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7c70, 8) , (const, 0x0, 8), (ram, 0x4c7c70, 8) INDIRECT (ram, 0x4c7c70, 8) , (const, 0x82, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0xd3, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0xd3, 4)]
[(ram, 0x4c6038, 8) INDIRECT (ram, 0x4c6038, 8) , (const, 0xd3, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xd3, 4)]
[(ram, 0x4c7c70, 8) INDIRECT (ram, 0x4c7c70, 8) , (const, 0xd3, 4)]
[ ---  CALLIND (ram, 0x4c7c70, 8)]
[ ---  BRANCH (ram, 0x422d40, 1)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x9b, 4), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x9b, 4), (ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6038, 8) INDIRECT (ram, 0x4c6038, 8) , (const, 0x9b, 4), (ram, 0x4c6038, 8) MULTIEQUAL (ram, 0x4c6038, 8) , (ram, 0x4c6038, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x9b, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c70, 8) INDIRECT (ram, 0x4c7c70, 8) , (const, 0x9b, 4), (ram, 0x4c7c70, 8) MULTIEQUAL (ram, 0x4c7c70, 8) , (ram, 0x4c7c70, 8)]
[ ---  CBRANCH (ram, 0x422d1b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0x100000c0, 8) , (const, 0x0, 8), (unique, 0x100000c0, 8) CAST (ram, 0x4c6038, 8), (ram, 0x4c6038, 8) MULTIEQUAL (ram, 0x4c6038, 8) , (ram, 0x4c6038, 8)]
[ ---  CBRANCH (ram, 0x422d1b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_SUB (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c8, 8), (unique, 0x100000c8, 8) INT_ADD (ram, 0x4c5800, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x28, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0xce, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0xce, 4), (ram, 0x4c6028, 8) INT_SUB (ram, 0x4c6028, 8) , (register, 0x28, 8)]
[(ram, 0x4c6038, 8) COPY (ram, 0x4c6038, 8), (ram, 0x4c6038, 8) INDIRECT (ram, 0x4c6038, 8) , (const, 0xce, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xce, 4)]
[(ram, 0x4c7c70, 8) COPY (ram, 0x4c7c70, 8), (ram, 0x4c7c70, 8) INDIRECT (ram, 0x4c7c70, 8) , (const, 0xce, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c6038, 8) COPY (ram, 0x4c6038, 8), (ram, 0x4c6038, 8) MULTIEQUAL (ram, 0x4c6038, 8) , (ram, 0x4c6038, 8) , (ram, 0x4c6038, 8) , (ram, 0x4c6038, 8) , (ram, 0x4c6038, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c70, 8) COPY (ram, 0x4c7c70, 8), (ram, 0x4c7c70, 8) MULTIEQUAL (ram, 0x4c7c70, 8) , (ram, 0x4c7c70, 8) , (ram, 0x4c7c70, 8) , (ram, 0x4c7c70, 8) , (ram, 0x4c7c70, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
