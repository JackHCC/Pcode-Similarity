[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x24, 4)]
[(unique, 0x100001f4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021c, 8), (unique, 0x1000021c, 8) CALL (ram, 0x130d70, 8) , (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x5, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000214, 8), (unique, 0x10000214, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22b900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000224, 8), (unique, 0x10000224, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x43, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x3b, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) CALLIND (unique, 0xbd80, 8) , (const, 0x2000003, 8) , (register, 0x0, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000234, 8), (unique, 0x10000234, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8), (register, 0x0, 8) CALL (ram, 0x22ffe0, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000022c, 8), (unique, 0x1000022c, 8) INT_ADD (register, 0x10, 8) , (const, 0x20, 8)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22b917, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100001f4, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000244, 8), (unique, 0x10000244, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22b940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22b96d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22bae8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000026c, 8), (unique, 0x1000026c, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000264, 8), (unique, 0x10000264, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x2a2, 4)]
[ ---  CBRANCH (ram, 0x22b964, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229b20, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000274, 8), (unique, 0x10000274, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x22b959, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0xc5, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0xc3, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0xa, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000284, 8), (unique, 0x10000284, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0x100001d4, 4) COPY (ram, 0x4eb3f8, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22bb68, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (unique, 0x100000ef, 8) , (const, 0x1, 8), (unique, 0x100000ef, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x29c, 4)]
[ ---  CALL (ram, 0x229560, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x22b981, 1)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x22b990, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b4, 8), (unique, 0x100002b4, 8) INT_ADD (register, 0x18, 8) , (const, 0x28, 8)]
[(register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[(register, 0x28, 4) INT_SUB (unique, 0x100001d4, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x22b9a6, 1)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22b9e0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x0, 8) INT_SEXT (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22bb10, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000119, 8) , (const, 0x1, 8), (unique, 0x10000119, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002cc, 8), (unique, 0x100002cc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x229560, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100001d8, 4) COPY (ram, 0x4eb3f8, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x258, 4)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x27a, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x258, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22bb75, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000197, 8) , (const, 0x1, 8), (unique, 0x10000197, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_SEXT (unique, 0x100001d8, 4)]
[(unique, 0x100001ec, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x22ba08, 1)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x289, 4)]
[ ---  CALL (ram, 0x229560, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) INT_SEXT (unique, 0x100001d8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0x100001e4, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x22ba08, 1)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x172, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x100001dc, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000020c, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001dc, 8) , (unique, 0x100001e4, 8) , (unique, 0x100001ec, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (register, 0xb8, 8) , (const, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000020c, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x17a, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x176, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22ba58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x22ba76, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3b80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8), (unique, 0x3b80, 8) PTRADD (register, 0x28, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x209, 4)]
[ ---  CBRANCH (ram, 0x22ba88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229b20, 8) , (register, 0x18, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000344, 8), (unique, 0x10000344, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)]
[ ---  CALL (ram, 0x121160, 8) , (register, 0x28, 8) , (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x224, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x21c, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22ba2c, 1) , (unique, 0x100001c4, 1), (unique, 0x100001c4, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037c, 8), (unique, 0x1000037c, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000374, 8), (unique, 0x10000374, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000036c, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000015d, 8) , (const, 0x1, 8), (unique, 0x1000015d, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000364, 8), (unique, 0x10000364, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000354, 8), (unique, 0x10000354, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22baa1, 1) , (unique, 0x100001bd, 1), (unique, 0x100001bd, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000394, 8), (unique, 0x10000394, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000038c, 8), (unique, 0x1000038c, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8), (register, 0x0, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000133, 8) , (const, 0x1, 8), (unique, 0x10000133, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x18, 8) , (const, 0x30, 8)]
[ ---  CALL (ram, 0x229560, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x1ef, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x1d9, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) INT_ADD (register, 0x18, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22ba3e, 1) , (unique, 0x100001c7, 1), (unique, 0x100001c7, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003bc, 8), (unique, 0x100003bc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003a4, 8), (unique, 0x100003a4, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x1b5, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100001fc, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22bac4, 1) , (unique, 0x100001c0, 1), (unique, 0x100001c0, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) INT_ADD (register, 0xb8, 8) , (const, 0x40, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x1c7, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22ba4a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229b20, 8) , (register, 0xb8, 8) , (const, 0x1, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001fc, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) INT_ADD (register, 0xb8, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x22ba3e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003fc, 8), (unique, 0x100003fc, 8) INT_ADD (register, 0xb8, 8) , (const, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001fc, 8) , (register, 0xb8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x1be, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x1bc, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (const, 0xa, 1), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x22b910, 1)]
[ ---  CBRANCH (ram, 0x22b998, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (register, 0x18, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x12b, 4)]
[ ---  CBRANCH (ram, 0x22b9a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229b20, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x22b998, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000424, 8), (unique, 0x10000424, 8) INT_ADD (register, 0x18, 8) , (const, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x140, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x13e, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x20, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x62, 4), (ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042c, 8) , (const, 0x1, 4), (unique, 0x1000042c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eb3f8, 4) MULTIEQUAL (ram, 0x4eb3f8, 4) , (ram, 0x4eb3f8, 4)]
[ ---  CBRANCH (ram, 0x22b9d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[(ram, 0x4eb3f8, 4) COPY (ram, 0x4eb3f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xb0, 8)]
[(ram, 0x4eb3f8, 4) COPY (ram, 0x4eb3f8, 4), (ram, 0x4eb3f8, 4) INDIRECT (ram, 0x4eb3f8, 4) , (const, 0x83, 4)]
[ ---  RETURN (const, 0x0, 8)]
