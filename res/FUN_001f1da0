[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000215, 8), (unique, 0x10000215, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000021d, 8), (unique, 0x1000021d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1f1e58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000225, 8), (unique, 0x10000225, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f1e58, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x38, 4) , (unique, 0xbc80, 4), (register, 0x38, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000235, 8), (unique, 0x10000235, 8) INT_ADD (unique, 0x1000022d, 8) , (const, 0x2c, 8), (unique, 0x1000022d, 8) CAST (register, 0x30, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1f1e58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000245, 8), (unique, 0x10000245, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000024d, 4), (unique, 0x1000024d, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[(unique, 0x100001f9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1f1e13, 1)]
[(register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0x1000006e, 4), (unique, 0x1000006e, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001f9, 8) , (unique, 0x10000201, 8)]
[ ---  CBRANCH (ram, 0x1f1e08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001f9, 8) , (unique, 0x10000201, 8)]
[(unique, 0x10000201, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f1e1d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000251, 8) , (register, 0x80, 4), (unique, 0x10000251, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000259, 8) , (register, 0x8, 4), (unique, 0x10000259, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f1e98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x1a, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xfb, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f1e98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1c, 1)]
[ ---  CBRANCH (ram, 0x1f1fe0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000261, 8), (unique, 0x10000261, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f1ed1, 1)]
[(register, 0x80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100000e2, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f1f48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x1e, 1), (register, 0x38, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f1edd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) INT_ADD (unique, 0x10000269, 8) , (const, 0x63, 8), (unique, 0x10000269, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000279, 8) , (register, 0x0, 4), (unique, 0x10000279, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f200a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) INT_ADD (unique, 0x10000289, 8) , (const, 0x64, 8), (unique, 0x10000289, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a1, 8) , (register, 0x0, 4), (unique, 0x100002a1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000299, 8), (unique, 0x10000299, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f1eeb, 1)]
[(unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f1f7a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) INT_ADD (unique, 0x100002b1, 8) , (const, 0x2c, 8), (unique, 0x100002b1, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1f2021, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f2021, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ea, 1) , (const, 0x0, 1), (unique, 0x100000ea, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e1, 8) , (register, 0x0, 4), (unique, 0x100002e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002e9, 8), (unique, 0x100002e9, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1f1eeb, 1)]
[ ---  CBRANCH (ram, 0x1f1fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002f1, 8), (unique, 0x100002f1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f1fd0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f1fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8)]
[(unique, 0x10000209, 4) COPY (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x1f1fc9, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1f1fb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x8, 4), (register, 0x8, 4) COPY (unique, 0x10000211, 4), (unique, 0x10000211, 4) MULTIEQUAL (unique, 0x10000209, 4) , (unique, 0x1000020d, 4)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[(unique, 0x1000020d, 4) COPY (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f1fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000309, 8) , (register, 0x0, 4), (unique, 0x10000309, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  BRANCH (ram, 0x1f1eeb, 1)]
[(register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1f1fe0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESSEQUAL (register, 0x80, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f1eb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0x10, 1)]
[ ---  CBRANCH (ram, 0x1f1eb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000311, 8), (unique, 0x10000311, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000321, 8) , (register, 0x0, 4), (unique, 0x10000321, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x10000329, 8), (unique, 0x10000329, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100000e2, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000319, 8), (unique, 0x10000319, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f203f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1c, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x2, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f1e30, 1)]
[ ---  CBRANCH (ram, 0x1f2031, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x4, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f1e30, 1)]
[ ---  CBRANCH (ram, 0x1f1e2e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x1a, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x3, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f1e30, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (unique, 0x3400, 8) CAST (unique, 0x10000339, 8), (unique, 0x10000339, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x88, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000331, 8), (unique, 0x10000331, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1f1fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x20, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000341, 8), (unique, 0x10000341, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000349, 8), (unique, 0x10000349, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x7, 8)]
[ ---  BRANCH (ram, 0x1f1e30, 1)]
[ ---  CBRANCH (ram, 0x1f1e7f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x16, 1)]
[ ---  CBRANCH (ram, 0x1f1fea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(register, 0x98, 8) INDIRECT (register, 0x38, 8) , (const, 0x147, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x147, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x147, 4)]
[ ---  CALL (ram, 0x1edb40, 8) , (register, 0x20, 8) , (register, 0x30, 8) , (register, 0x80, 8)]
[(register, 0x0, 8) COPY (const, 0xb, 8)]
[ ---  CBRANCH (ram, 0x1f1e7f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 1) , (const, 0x15, 1), (stack, 0xffffffffffffffc0, 1) INDIRECT (stack, 0xffffffffffffffc0, 1) , (const, 0x147, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x98, 8) , (const, 0x0, 4), (register, 0x98, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000351, 8) , (unique, 0xbb00, 1), (unique, 0x10000351, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x98, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x98, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1f1e30, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f204d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000359, 8), (unique, 0x10000359, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xcd, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
