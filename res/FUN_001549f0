[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_RIGHT (unique, 0x10000000, 4) , (const, 0x1f, 4), (unique, 0x10000000, 4) SUBPIECE (unique, 0x10000053, 16) , (const, 0x0, 4), (unique, 0x10000053, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x20, 4)]
[(unique, 0x10000030, 16) INT_AND (register, 0x1200, 16) , (const, 0xfffffffffffff, 16)]
[(unique, 0x10000040, 16) INT_AND (register, 0x1200, 16) , (const, 0xfffffffffffff, 16)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x3ff, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7ff, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x10000000, 4) , (const, 0x14, 4), (unique, 0x10000000, 4) SUBPIECE (unique, 0x10000053, 16) , (const, 0x0, 4), (unique, 0x10000053, 16) INT_RIGHT (register, 0x1200, 16) , (const, 0x20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (const, 0xfffffffffffff, 8), (register, 0x30, 8) SUBPIECE (register, 0x1200, 16) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x154a48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000000c, 8) , (const, 0x0, 8), (unique, 0x1000000c, 8) INT_AND (register, 0x0, 8) , (const, 0x7ff0, 8), (register, 0x0, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x30, 4), (register, 0x30, 8) SUBPIECE (register, 0x1200, 16) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_OR (register, 0x30, 8) , (const, 0x10000000000000, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x154a60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000030, 16) , (const, 0x0, 16)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000040, 16) , (const, 0x0, 16)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x1b500, 8) , (const, 0x0, 8), (unique, 0x1b500, 8) INT_RIGHT (register, 0x30, 8) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0xb, 4), (register, 0x8, 4) INT_XOR (unique, 0x10000024, 4) , (const, 0x3f, 4), (unique, 0x10000024, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (const, 0xfffffc02, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0xb, 4), (register, 0x8, 4) INT_XOR (unique, 0x10000024, 4) , (const, 0x3f, 4), (unique, 0x10000024, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(unique, 0x1b380, 8) INT_ADD (unique, 0x1b380, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
