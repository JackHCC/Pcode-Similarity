[(register, 0x0, 8) INT_2COMP (unique, 0x10000140, 8), (unique, 0x10000140, 8) INT_SRIGHT (unique, 0x100001a8, 8) , (const, 0x1f, 4), (unique, 0x100001a8, 8) INT_SEXT (unique, 0x100001dc, 4), (unique, 0x100001dc, 4) CAST (register, 0x120c, 4)]
[(register, 0x98, 8) INT_AND (unique, 0x10000182, 8) , (const, 0xffffffffffff, 8), (unique, 0x10000182, 8) INT_ADD (unique, 0x100001c0, 8) , (register, 0x1208, 4), (unique, 0x100001c0, 8) INT_LEFT (unique, 0x100001b8, 8) , (const, 0x20, 8), (unique, 0x100001b8, 8) INT_SEXT (unique, 0x100001d8, 4), (unique, 0x100001d8, 4) CAST (register, 0x120c, 4)]
[(register, 0x8, 8) INT_AND (unique, 0x10000192, 8) , (const, 0xffffffffffff, 8), (unique, 0x10000192, 8) INT_ADD (unique, 0x100001d0, 8) , (register, 0x1228, 4), (unique, 0x100001d0, 8) INT_LEFT (unique, 0x100001c8, 8) , (const, 0x20, 8), (unique, 0x100001c8, 8) INT_SEXT (unique, 0x100001e0, 4), (unique, 0x100001e0, 4) CAST (register, 0x122c, 4)]
[(register, 0x0, 8) INT_2COMP (unique, 0x10000148, 8), (unique, 0x10000148, 8) INT_SRIGHT (unique, 0x100001b0, 8) , (const, 0x1f, 4), (unique, 0x100001b0, 8) INT_SEXT (unique, 0x100001e4, 4), (unique, 0x100001e4, 4) CAST (register, 0x122c, 4)]
[(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7fff, 4), (register, 0x10, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x299860, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x7fff, 4), (register, 0x38, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x2998b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x90, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x29987e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x299810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[(unique, 0x10000138, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x29981c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x7fff, 4)]
[(register, 0x90, 1) MULTIEQUAL (unique, 0x10000138, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x299920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x299810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x2998e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[(register, 0x90, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x299807, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x1000013c, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[ ---  BRANCH (ram, 0x299821, 1)]
[(register, 0x90, 1) COPY (const, 0x2, 1)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x299821, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x299920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[(register, 0x90, 1) INT_OR (register, 0x90, 1) , (const, 0x1, 1), (register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (unique, 0x10000138, 1)]
[ ---  CBRANCH (ram, 0x299897, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x2998c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2998ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x299948, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2998ce, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x10, 4) , (register, 0x38, 4)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (unique, 0x1000013c, 1)]
[(register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x299838, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x299910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x299997, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2998ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x299980, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESSEQUAL (register, 0x10, 4) , (register, 0x38, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2998ce, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x29996b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x2998ce, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x299980, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x299990, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x1220, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x299990, 1) , (register, 0x206, 1), (register, 0x206, 1) BOOL_NEGATE (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x29984c, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x10000118, 8) , (const, 0x1, 8), (unique, 0x10000118, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x29984c, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x10000031, 8) , (const, 0x1, 8), (unique, 0x10000031, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x29984c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x100000a5, 4) , (const, 0x2, 4), (unique, 0x100000a5, 4) INT_2COMP (unique, 0x100000a9, 4), (unique, 0x100000a9, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x29984c, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x299929, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 1) , (const, 0x0, 1), (register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x299bb0, 8) , (register, 0x90, 1), (register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
