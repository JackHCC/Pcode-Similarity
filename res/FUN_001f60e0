[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) INT_ADD (register, 0x38, 8) , (const, 0x78, 8)]
[ ---  CBRANCH (ram, 0x1f6160, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000238, 4), (unique, 0x10000238, 4) CAST (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f6458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000244, 8), (unique, 0x10000244, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1f64e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000024c, 8), (unique, 0x1000024c, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  BRANCH (ram, 0x1f6481, 1)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000254, 8), (unique, 0x10000254, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  BRANCH (ram, 0x1f6196, 1)]
[ ---  CBRANCH (ram, 0x1f61e0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025c, 8), (unique, 0x1000025c, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000270, 8), (unique, 0x10000270, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x1000026c, 4), (unique, 0x1000026c, 4) CAST (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000278, 8), (unique, 0x10000278, 8) INT_ADD (unique, 0x3a00, 8) , (unique, 0x10000031, 8), (unique, 0x10000031, 8) INT_MULT (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x38, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x38, 8) INT_SEXT (unique, 0x1000026c, 4), (unique, 0x1000026c, 4) CAST (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000264, 8), (unique, 0x10000264, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x1f6131, 1)]
[ ---  CBRANCH (ram, 0x1f6128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f6285, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000280, 8) INT_ADD (register, 0x38, 8) , (const, 0x66, 8)]
[ ---  CBRANCH (ram, 0x1f62b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x224eb0, 8) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f6142, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x5f, 4)]
[ ---  CBRANCH (ram, 0x1f620d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x1f6160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000288, 8), (unique, 0x10000288, 8) INT_ADD (register, 0x38, 8) , (const, 0x4c, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000290, 8), (unique, 0x10000290, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1f6398, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000062, 4) , (const, 0x0, 4), (unique, 0x10000062, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f6478, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f6332, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100001e9, 8) , (const, 0x4, 8), (unique, 0x100001e9, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1f649d, 1)]
[(register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000298, 8), (unique, 0x10000298, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000109, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000298, 8), (unique, 0x10000298, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000109, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c8, 4) , (const, 0x0, 4), (unique, 0x100000c8, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x20, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f6229, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000141, 8) , (const, 0x4, 8), (unique, 0x10000141, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1f61a9, 1)]
[(register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a8, 8), (unique, 0x100002a8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100000fd, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a8, 8), (unique, 0x100002a8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f61a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000fd, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f6500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100001c1, 8) , (const, 0x4, 8), (unique, 0x100001c1, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f63d5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(unique, 0x100000e1, 4) INT_AND (register, 0x30, 4) , (const, 0x3ff, 4), (register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f63c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e1, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100000e5, 4) INT_AND (register, 0x30, 4) , (const, 0x3ff, 4), (register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1f6420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e5, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f5, 4) , (const, 0x0, 4), (unique, 0x100000f5, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f62c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000209, 8) , (const, 0x4, 8), (unique, 0x10000209, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1f6525, 1)]
[(register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(unique, 0x100000eb, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6518, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000eb, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6518, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f9, 4) , (const, 0x0, 4), (unique, 0x100000f9, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2000, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f62b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (unique, 0xbd80, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000006f, 1), (unique, 0x1000006f, 1) INT_RIGHT (unique, 0xbb00, 1) , (const, 0x6, 4), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100002f0, 4), (unique, 0x100002f0, 4) CAST (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f614b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1)]
[ ---  CBRANCH (ram, 0x1f614b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) INT_ADD (register, 0x38, 8) , (const, 0x65, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000161, 8) , (const, 0x4, 8), (unique, 0x10000161, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1f6245, 1)]
[(register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000101, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000101, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000007b, 4) , (const, 0x0, 4), (unique, 0x1000007b, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f6328, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100001a1, 8) , (const, 0x4, 8), (unique, 0x100001a1, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1f634d, 1)]
[(register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000105, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000334, 8), (unique, 0x10000334, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000105, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000a5, 4) , (const, 0x0, 4), (unique, 0x100000a5, 4) INT_AND (register, 0x30, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1f6340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000a9, 4) , (const, 0x0, 4), (unique, 0x100000a9, 4) INT_AND (register, 0x30, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x1f6340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000344, 8), (unique, 0x10000344, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000181, 8) , (const, 0x4, 8), (unique, 0x10000181, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1f62dd, 1)]
[(register, 0x30, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100000d7, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x3ff00, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f62d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000354, 8), (unique, 0x10000354, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1f6155, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000d7, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f62d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1f62d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000db, 4) , (const, 0x0, 4), (unique, 0x100000db, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2000, 4)]
[ ---  CBRANCH (ram, 0x1f62d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f1, 4) , (const, 0x0, 4), (unique, 0x100000f1, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1f6153, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0x3a00, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
