[(unique, 0x1000007f, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x144d84, 1)]
[ ---  CBRANCH (ram, 0x144d80, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000087, 1) , (const, 0x1a, 1), (unique, 0x10000087, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_ADD (unique, 0x10000041, 1) , (const, 0xbf, 1), (unique, 0x10000041, 1) INT_AND (unique, 0xbb00, 1) , (const, 0xdf, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000007f, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x144d80, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000088, 1) , (const, 0xa, 1), (unique, 0x10000088, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1)]
[ ---  CBRANCH (ram, 0x144d80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x144db9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0x10, 1)]
[(ram, 0x29455c, 4) INDIRECT (ram, 0x29455c, 4) , (const, 0x97, 4)]
[ ---  CALL (ram, 0x13b8d0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x1000006f, 8), (unique, 0x1000006f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c1b60, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(ram, 0x29455c, 4) MULTIEQUAL (ram, 0x29455c, 4) , (ram, 0x29455c, 4)]
[ ---  CBRANCH (ram, 0x144db2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x29455c, 4) INDIRECT (ram, 0x29455c, 4) , (const, 0x6d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8)]
[(ram, 0x29455c, 4) COPY (ram, 0x29455c, 4), (ram, 0x29455c, 4) MULTIEQUAL (ram, 0x29455c, 4) , (ram, 0x29455c, 4)]
[ ---  RETURN (const, 0x0, 8)]
