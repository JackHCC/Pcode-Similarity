[ ---  CBRANCH (ram, 0x197e91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000bae, 8), (unique, 0x10000bae, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x40, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000636, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x10000636, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x197f2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x197f2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000bb6, 4), (unique, 0x10000bb6, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x10000499, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0x10000499, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bba, 8), (unique, 0x10000bba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bc2, 8), (unique, 0x10000bc2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bca, 8), (unique, 0x10000bca, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x58, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bda, 8), (unique, 0x10000bda, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x68, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197f10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004c3, 8) , (const, 0x0, 8), (unique, 0x100004c3, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bd2, 8), (unique, 0x10000bd2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x50, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000616, 8) , (unique, 0x1000060e, 8) , (const, 0x113, 4) , (unique, 0x1000062e, 8), (unique, 0x1000062e, 8) COPY (const, 0x291300, 8), (unique, 0x10000616, 8) COPY (const, 0x291290, 8), (unique, 0x1000060e, 8) COPY (const, 0x28d8ae, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x197eb6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004cb, 8) , (const, 0x0, 8), (unique, 0x100004cb, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x1000061e, 8) , (unique, 0x100005fe, 8) , (const, 0x116, 4) , (unique, 0x10000626, 8), (unique, 0x10000626, 8) COPY (const, 0x291300, 8), (unique, 0x1000061e, 8) COPY (const, 0x2912c8, 8), (unique, 0x100005fe, 8) COPY (const, 0x28d8ae, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc6, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff20, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc6, 1) MULTIEQUAL (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff88, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff40, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 4) SUBPIECE (stack, 0xffffffffffffff68, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0xbe00, 8)]
[(register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000be2, 8), (unique, 0x10000be2, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (stack, 0xffffffffffffff68, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff18, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000aa1, 8) COPY (unique, 0x10000bea, 8), (unique, 0x10000bea, 8) CAST (unique, 0x10000a99, 8), (unique, 0x10000a99, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000ab9, 8) COPY (unique, 0x10000bf2, 8), (unique, 0x10000bf2, 8) CAST (register, 0x38, 8)]
[(stack, 0xffffffffffffffc6, 1) MULTIEQUAL (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x10000aa1, 8) , (unique, 0x10000aa9, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x38, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff48, 8) COPY (stack, 0xffffffffffffff70, 8), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x10000ab9, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffc6, 1) MULTIEQUAL (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0xb8, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (register, 0xb8, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (unique, 0x100004f3, 4)]
[(register, 0x10, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff10, 8), (stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffff50, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xbe00, 8)]
[(unique, 0x10000baa, 4) COPY (stack, 0xffffffffffffff88, 4)]
[ ---  CBRANCH (ram, 0x1978da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff10, 8) , (const, 0xffffffffffffffff, 8), (stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0x90, 4) INT_ZEXT (stack, 0xffffffffffffffc6, 1)]
[(unique, 0x10000797, 8) COPY (register, 0x10, 8)]
[(unique, 0x100007df, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000b35, 4) COPY (register, 0xa0, 4)]
[(unique, 0x10000b3d, 4) COPY (register, 0xa0, 4)]
[ ---  BRANCH (ram, 0x19793e, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x30, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0x3100, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000b35, 4) , (unique, 0x10000b39, 4)]
[(register, 0xa0, 4) COPY (unique, 0x10000b45, 4), (unique, 0x10000b45, 4) MULTIEQUAL (unique, 0x10000b3d, 4) , (unique, 0x10000b41, 4)]
[(register, 0x28, 8) COPY (unique, 0x100007ef, 8), (unique, 0x100007ef, 8) MULTIEQUAL (unique, 0x100007df, 8) , (unique, 0x100007e7, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000797, 8) , (unique, 0x1000079f, 8)]
[ ---  CBRANCH (ram, 0x197b5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000797, 8) , (unique, 0x1000079f, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197900, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000c02, 4), (unique, 0x10000c02, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000bfa, 8), (unique, 0x10000bfa, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000c06, 8), (unique, 0x10000c06, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8) , (register, 0x30, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000c0e, 8), (unique, 0x10000c0e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8) , (register, 0x30, 8)]
[(unique, 0x10000552, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x10000549, 8) INT_ADD (unique, 0x10000c1a, 8) , (const, 0x5, 8), (unique, 0x10000c1a, 8) CAST (unique, 0x1000055a, 8), (unique, 0x1000055a, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000541, 8) INT_SEXT (unique, 0x10000c22, 4), (unique, 0x10000c22, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1979d3, 1) , (unique, 0x10000551, 1), (unique, 0x10000551, 1) INT_SLESS (unique, 0x10000c16, 4) , (const, 0x0, 4), (unique, 0x10000c16, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x197b43, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000552, 8) , (const, 0x0, 8)]
[(unique, 0x10000847, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000096f, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c2e, 8), (unique, 0x10000c2e, 8) INT_ADD (unique, 0x10000c26, 8) , (const, 0x5, 8), (unique, 0x10000c26, 8) CAST (unique, 0x1000055a, 8)]
[(unique, 0x10000974, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197a08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c2e, 8), (unique, 0x10000c2e, 8) INT_ADD (unique, 0x10000c26, 8) , (const, 0x5, 8), (unique, 0x10000c26, 8) CAST (unique, 0x1000055a, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0x10000552, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000847, 8) , (unique, 0x1000084f, 8)]
[ ---  CBRANCH (ram, 0x1979f8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x10000552, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000847, 8) , (unique, 0x1000084f, 8)]
[ ---  CBRANCH (ram, 0x197b43, 1) , (register, 0x206, 1)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000552, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c36, 8), (unique, 0x10000c36, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x10000541, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  BRANCH (ram, 0x197903, 1)]
[(unique, 0x1000096d, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c3e, 8), (unique, 0x10000c3e, 8) INT_ADD (unique, 0x10000549, 8) , (register, 0x30, 8)]
[(unique, 0x10000972, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x1000084f, 8) COPY (register, 0x30, 8)]
[(unique, 0x1000096e, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c46, 8), (unique, 0x10000c46, 8) INT_ADD (unique, 0x10000549, 8) , (register, 0x30, 8)]
[(unique, 0x10000973, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000706, 8) , (const, 0x1, 8), (unique, 0x10000706, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x197a22, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000706, 8) , (const, 0x1, 8), (unique, 0x10000706, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c46, 8), (unique, 0x10000c46, 8) INT_ADD (unique, 0x10000549, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x197abe, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x88, 1) , (register, 0x80, 1), (register, 0x80, 1) MULTIEQUAL (unique, 0x10000972, 1) , (unique, 0x10000973, 1) , (unique, 0x10000974, 1), (register, 0x88, 1) MULTIEQUAL (unique, 0x1000096d, 1) , (unique, 0x1000096e, 1) , (unique, 0x1000096f, 1)]
[(unique, 0x10000971, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197ab6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c4e, 8), (unique, 0x10000c4e, 8) INT_ADD (unique, 0x10000549, 8) , (unique, 0x10000552, 8)]
[(unique, 0x10000807, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x197a50, 1)]
[ ---  CBRANCH (ram, 0x197a40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000552, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000807, 8) , (unique, 0x1000080f, 8)]
[(unique, 0x1000080f, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000970, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000070e, 8) , (const, 0x1, 8), (unique, 0x1000070e, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x197ab9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000070e, 8) , (const, 0x1, 8), (unique, 0x1000070e, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197a59, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x88, 1) , (register, 0x80, 1), (register, 0x88, 1) MULTIEQUAL (unique, 0x10000970, 1) , (unique, 0x10000971, 1), (register, 0x80, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100008bf, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100008c7, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008bf, 8) , (unique, 0x100008c7, 8)]
[ ---  CBRANCH (ram, 0x197a68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c56, 8), (unique, 0x10000c56, 8) INT_ADD (unique, 0x10000549, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000716, 8) , (const, 0x1, 8), (unique, 0x10000716, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008bf, 8) , (unique, 0x100008c7, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_SEXT (unique, 0x10000c66, 4), (unique, 0x10000c66, 4) CAST (register, 0x98, 4), (register, 0x98, 4) INT_SUB (register, 0x98, 4) , (register, 0x88, 4), (register, 0x98, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x88, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (const, 0x100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000071e, 8) , (const, 0x1, 8), (unique, 0x1000071e, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c5e, 8), (unique, 0x10000c5e, 8) INT_ADD (unique, 0x10000549, 8) , (register, 0x80, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x197a80, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (unique, 0x10000552, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000552, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c6a, 8), (unique, 0x10000c6a, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x10000541, 8)]
[ ---  BRANCH (ram, 0x197903, 1)]
[(register, 0x30, 8) CAST (unique, 0x10000c72, 8), (unique, 0x10000c72, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000549, 8), (register, 0x30, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000038e, 4) , (const, 0x1, 4), (unique, 0x1000038e, 4) SUBPIECE (unique, 0x10000386, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x10000386, 8) , (const, 0x4, 8), (unique, 0x10000386, 8) INT_MULT (unique, 0x10000552, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x197968, 1)]
[ ---  CBRANCH (ram, 0x197ad7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000552, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1979ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c82, 8), (unique, 0x10000c82, 8) INT_ADD (unique, 0x10000c7a, 8) , (const, 0x5, 8), (unique, 0x10000c7a, 8) CAST (unique, 0x1000055a, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000827, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19799a, 1)]
[ ---  CBRANCH (ram, 0x197990, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x10000552, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000827, 8) , (unique, 0x1000082f, 8)]
[(unique, 0x1000082f, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1979a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c8a, 8), (unique, 0x10000c8a, 8) INT_ADD (unique, 0x10000549, 8) , (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006f6, 8) , (const, 0x1, 8), (unique, 0x100006f6, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x197ad9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000552, 8) , (register, 0x30, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x197903, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000c92, 8), (unique, 0x10000c92, 8) INT_ADD (unique, 0x10000549, 8) , (unique, 0x10000552, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000329, 4) , (const, 0x1, 4), (unique, 0x10000329, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197968, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000329, 4) , (const, 0x1, 4), (unique, 0x10000329, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000ca2, 8), (unique, 0x10000ca2, 8) INT_ADD (unique, 0x10000c9a, 8) , (register, 0x18, 8), (unique, 0x10000c9a, 8) CAST (unique, 0x3400, 8), (register, 0x18, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000caa, 8), (unique, 0x10000caa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) CAST (unique, 0x10000ca2, 8), (unique, 0x10000ca2, 8) INT_ADD (unique, 0x10000c9a, 8) , (register, 0x18, 8), (unique, 0x10000c9a, 8) CAST (unique, 0x3400, 8), (register, 0x18, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8) , (unique, 0x3b80, 8) , (unique, 0x3100, 8)]
[(register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0xffffff, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) INT_SRIGHT (unique, 0x10000cb2, 4) , (const, 0x18, 4), (unique, 0x10000cb2, 4) CAST (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x10000965, 4) COPY (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x19791e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(unique, 0x10000969, 4) COPY (register, 0x0, 4)]
[(register, 0x90, 4) MULTIEQUAL (unique, 0x10000965, 4) , (unique, 0x10000969, 4)]
[(unique, 0x1000079f, 8) COPY (register, 0x10, 8)]
[(unique, 0x100007e7, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000b39, 4) COPY (register, 0xa0, 4)]
[(unique, 0x10000b41, 4) COPY (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x197c84, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cba, 8), (unique, 0x10000cba, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000cb6, 4), (unique, 0x10000cb6, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x18, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4)]
[(register, 0x90, 1) SUBPIECE (register, 0x90, 4) , (const, 0x0, 4)]
[(unique, 0x100007cf, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000917, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000b49, 4) COPY (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x197b70, 1)]
[(register, 0x90, 1) SUBPIECE (register, 0x90, 4) , (const, 0x0, 4)]
[(unique, 0x100007d7, 8) COPY (register, 0x28, 8)]
[(stack, 0xffffffffffffffc6, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x10000b49, 4) , (register, 0xa0, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100007cf, 8) , (unique, 0x100007d7, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000079f, 8) , (register, 0x10, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000b39, 4) , (register, 0x8, 4)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x197c39, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (stack, 0xffffffffffffff28, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000917, 8) , (register, 0x30, 8)]
[(unique, 0x100009b9, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10000af1, 4) COPY (stack, 0xffffffffffffffc0, 4)]
[(unique, 0x10000b25, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x197cd6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (register, 0x28, 8)]
[(unique, 0x10000af5, 4) COPY (register, 0xa0, 4)]
[(unique, 0x10000b29, 4) COPY (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x197dae, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffff28, 8), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (unique, 0x10000af1, 4) , (unique, 0x10000af5, 4)]
[(register, 0xa0, 4) COPY (unique, 0x10000b2d, 4), (unique, 0x10000b2d, 4) MULTIEQUAL (unique, 0x10000b25, 4) , (unique, 0x10000b29, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff18, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x100009b9, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff10, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000a21, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000a71, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x197316, 1)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff48, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000a19, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000a69, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000b21, 4) COPY (register, 0x8, 4)]
[ ---  BRANCH (ram, 0x197316, 1)]
[(unique, 0x10000999, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000a41, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197e0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (register, 0x28, 8)]
[(unique, 0x10000a29, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000a49, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197e0c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (stack, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x197b16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0x18, 8) INT_SUB (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000777, 8) COPY (stack, 0xffffffffffffff80, 8)]
[ ---  CBRANCH (ram, 0x197d0a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000767, 8) , (unique, 0x1000076f, 8) , (unique, 0x10000777, 8)]
[ ---  CBRANCH (ram, 0x197140, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000cca, 4), (unique, 0x10000cca, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000cc2, 8), (unique, 0x10000cc2, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000767, 8) , (unique, 0x1000076f, 8) , (unique, 0x10000777, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000cce, 8), (unique, 0x10000cce, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8) , (register, 0x30, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000cd6, 8), (unique, 0x10000cd6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8) , (register, 0x30, 8)]
[(unique, 0x10000573, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000056a, 8) INT_ADD (unique, 0x10000ce2, 8) , (const, 0x5, 8), (unique, 0x10000ce2, 8) CAST (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000562, 8) INT_SEXT (unique, 0x10000cea, 4), (unique, 0x10000cea, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1971e5, 1) , (unique, 0x10000572, 1), (unique, 0x10000572, 1) INT_SLESS (unique, 0x10000cde, 4) , (const, 0x0, 4), (unique, 0x10000cde, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x197ae3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000573, 8) , (const, 0x0, 8)]
[(unique, 0x10000837, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000941, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cf6, 8), (unique, 0x10000cf6, 8) INT_ADD (unique, 0x10000cee, 8) , (const, 0x5, 8), (unique, 0x10000cee, 8) CAST (unique, 0x1000057b, 8)]
[(unique, 0x10000985, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cf6, 8), (unique, 0x10000cf6, 8) INT_ADD (unique, 0x10000cee, 8) , (const, 0x5, 8), (unique, 0x10000cee, 8) CAST (unique, 0x1000057b, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0x10000573, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000837, 8) , (unique, 0x1000083f, 8)]
[ ---  CBRANCH (ram, 0x197210, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x10000573, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000837, 8) , (unique, 0x1000083f, 8)]
[ ---  CBRANCH (ram, 0x197ae3, 1) , (register, 0x206, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1972cf, 1)]
[(unique, 0x1000093f, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cfe, 8), (unique, 0x10000cfe, 8) INT_ADD (unique, 0x1000056a, 8) , (register, 0x30, 8)]
[(unique, 0x10000983, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x1000083f, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000940, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d06, 8), (unique, 0x10000d06, 8) INT_ADD (unique, 0x1000056a, 8) , (register, 0x30, 8)]
[(unique, 0x10000984, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000065e, 8) , (const, 0x1, 8), (unique, 0x1000065e, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x197239, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000065e, 8) , (const, 0x1, 8), (unique, 0x1000065e, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d06, 8), (unique, 0x10000d06, 8) INT_ADD (unique, 0x1000056a, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x19766f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x88, 1) , (register, 0x80, 1), (register, 0x88, 1) MULTIEQUAL (unique, 0x1000093f, 1) , (unique, 0x10000940, 1) , (unique, 0x10000941, 1), (register, 0x80, 1) MULTIEQUAL (unique, 0x10000983, 1) , (unique, 0x10000984, 1) , (unique, 0x10000985, 1)]
[(unique, 0x1000095a, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d0e, 8), (unique, 0x10000d0e, 8) INT_ADD (unique, 0x1000056a, 8) , (unique, 0x10000573, 8)]
[(unique, 0x1000097f, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d0e, 8), (unique, 0x10000d0e, 8) INT_ADD (unique, 0x1000056a, 8) , (unique, 0x10000573, 8)]
[(unique, 0x100007f7, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x197274, 1)]
[ ---  CBRANCH (ram, 0x197260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000573, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100007f7, 8) , (unique, 0x100007ff, 8)]
[(unique, 0x100007ff, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000959, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x1000097e, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000666, 8) , (const, 0x1, 8), (unique, 0x10000666, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x197666, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000666, 8) , (const, 0x1, 8), (unique, 0x10000666, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10000975, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197280, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 1) , (register, 0x90, 1), (register, 0x90, 1) MULTIEQUAL (unique, 0x10000959, 1) , (unique, 0x1000095a, 1), (register, 0x80, 1) MULTIEQUAL (unique, 0x1000097e, 1) , (unique, 0x1000097f, 1)]
[(unique, 0x100008a7, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1972a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0xa0, 1), (register, 0xa0, 1) MULTIEQUAL (unique, 0x10000975, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000089f, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x1000089f, 8) , (unique, 0x100008a7, 8)]
[ ---  CBRANCH (ram, 0x197290, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d16, 8), (unique, 0x10000d16, 8) INT_ADD (unique, 0x1000056a, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000066e, 8) , (const, 0x1, 8), (unique, 0x1000066e, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x1000089f, 8) , (unique, 0x100008a7, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (register, 0x30, 8), (register, 0x88, 8) INT_SEXT (unique, 0x10000d26, 4), (unique, 0x10000d26, 4) CAST (register, 0x90, 4), (register, 0x90, 4) INT_SUB (register, 0x90, 4) , (register, 0x88, 4), (register, 0x90, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x88, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x30, 8) INT_MULT (register, 0x88, 8) , (const, 0x100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d1e, 8), (unique, 0x10000d1e, 8) INT_ADD (unique, 0x1000056a, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000676, 8) , (const, 0x1, 8), (unique, 0x10000676, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1972a8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (unique, 0x10000573, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d2a, 8), (unique, 0x10000d2a, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x10000562, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x88, 8)]
[(unique, 0x10000767, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000573, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000d32, 8), (unique, 0x10000d32, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000056a, 8), (register, 0x30, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000223, 4) , (const, 0x1, 4), (unique, 0x10000223, 4) SUBPIECE (unique, 0x1000021b, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x1000021b, 8) , (const, 0x4, 8), (unique, 0x1000021b, 8) INT_MULT (unique, 0x10000573, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x197170, 1)]
[ ---  CBRANCH (ram, 0x197688, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000573, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1971be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d42, 8), (unique, 0x10000d42, 8) INT_ADD (unique, 0x10000d3a, 8) , (const, 0x5, 8), (unique, 0x10000d3a, 8) CAST (unique, 0x1000057b, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000817, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1971ac, 1)]
[ ---  CBRANCH (ram, 0x1971a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x10000573, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000817, 8) , (unique, 0x1000081f, 8)]
[(unique, 0x1000081f, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1971b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d4a, 8), (unique, 0x10000d4a, 8) INT_ADD (unique, 0x1000056a, 8) , (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000064e, 8) , (const, 0x1, 8), (unique, 0x1000064e, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x19768a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000573, 8) , (register, 0x30, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x197143, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000d52, 8), (unique, 0x10000d52, 8) INT_ADD (unique, 0x1000056a, 8) , (unique, 0x10000573, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x100000c6, 4) , (const, 0x1, 4), (unique, 0x100000c6, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x100000c6, 4) , (const, 0x1, 4), (unique, 0x100000c6, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000d62, 8), (unique, 0x10000d62, 8) INT_ADD (unique, 0x10000d5a, 8) , (register, 0x8, 8), (unique, 0x10000d5a, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000d6a, 8), (unique, 0x10000d6a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) CAST (unique, 0x10000d62, 8), (unique, 0x10000d62, 8) INT_ADD (unique, 0x10000d5a, 8) , (register, 0x8, 8), (unique, 0x10000d5a, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000076f, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1972eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x8, 4) INT_AND (register, 0x38, 4) , (const, 0xffffff, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x38, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff18, 8) , (const, 0x1, 8)]
[(unique, 0x100007af, 8) COPY (stack, 0xffffffffffffff48, 8)]
[(unique, 0x10000a09, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000af9, 4) COPY (stack, 0xffffffffffffffc0, 4)]
[(unique, 0x10000b19, 4) COPY (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x197ee3, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff18, 8) COPY (stack, 0xffffffffffffff10, 8)]
[(stack, 0xffffffffffffff10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000a11, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000afd, 4) COPY (stack, 0xffffffffffffffc0, 4)]
[(unique, 0x10000b1d, 4) COPY (stack, 0xffffffffffffffc0, 4)]
[ ---  BRANCH (ram, 0x197316, 1)]
[(stack, 0xffffffffffffffc6, 1) MULTIEQUAL (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (unique, 0x10000af9, 4) , (unique, 0x10000afd, 4) , (unique, 0x10000af5, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (unique, 0x10000a69, 8) , (unique, 0x10000a71, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (unique, 0x10000a09, 8) , (unique, 0x10000a11, 8) , (unique, 0x10000a19, 8) , (unique, 0x10000a21, 8) , (unique, 0x10000a29, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff18, 8) , (unique, 0x3100, 8) , (unique, 0xbe00, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100007af, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d76, 8), (unique, 0x10000d76, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000d72, 4), (unique, 0x10000d72, 4) CAST (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000b19, 4) , (unique, 0x10000b1d, 4) , (unique, 0x10000b21, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0x10000b4d, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000b19, 4) , (unique, 0x10000b1d, 4) , (unique, 0x10000b21, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x197348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d7e, 8), (unique, 0x10000d7e, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x30, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0x30, 4)]
[(unique, 0x10000b51, 4) COPY (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x30, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x197330, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0x18, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x100004f3, 4) MULTIEQUAL (unique, 0x10000b4d, 4) , (unique, 0x10000b51, 4)]
[(unique, 0x100009a9, 8) COPY (stack, 0xffffffffffffff10, 8)]
[(unique, 0x10000a51, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000ad1, 4) COPY (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1970d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000991, 8) COPY (stack, 0xffffffffffffff10, 8)]
[(unique, 0x100009c9, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000a39, 8) COPY (stack, 0xffffffffffffff28, 8)]
[ ---  BRANCH (ram, 0x197377, 1)]
[(stack, 0xffffffffffffffc6, 1) MULTIEQUAL (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1) , (stack, 0xffffffffffffffc6, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xbe00, 8) , (unique, 0xbe00, 8) , (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x100009c1, 8) , (unique, 0x100009c9, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (unique, 0x100004f3, 4)]
[(stack, 0xffffffffffffff88, 4) COPY (unique, 0x10000ad5, 4), (unique, 0x10000ad5, 4) MULTIEQUAL (unique, 0x10000ac1, 4) , (unique, 0x10000baa, 4) , (unique, 0x10000baa, 4) , (unique, 0x10000baa, 4) , (unique, 0x10000ad1, 4)]
[(stack, 0xffffffffffffff28, 8) COPY (unique, 0x10000a59, 8), (unique, 0x10000a59, 8) MULTIEQUAL (unique, 0x10000a31, 8) , (unique, 0x10000a39, 8) , (unique, 0x10000a41, 8) , (unique, 0x10000a49, 8) , (unique, 0x10000a51, 8)]
[(stack, 0xffffffffffffff10, 8) COPY (unique, 0x100009b1, 8), (unique, 0x100009b1, 8) MULTIEQUAL (unique, 0x10000989, 8) , (unique, 0x10000991, 8) , (unique, 0x10000999, 8) , (unique, 0x10000999, 8) , (unique, 0x100009a9, 8)]
[(stack, 0xffffffffffffff48, 8) COPY (const, 0x0, 8)]
[(unique, 0x100007b7, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x10000aa9, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x197602, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(unique, 0xbe00, 8) CAST (unique, 0x10000d8e, 8), (unique, 0x10000d8e, 8) INT_ADD (unique, 0x10000d86, 8) , (const, 0x1, 8), (unique, 0x10000d86, 8) CAST (stack, 0xffffffffffffff48, 8), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x1000077f, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100007bf, 8) , (unique, 0x100007b7, 8)]
[(unique, 0x10000927, 8) COPY (stack, 0xffffffffffffff20, 8), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000b05, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (unique, 0x10000515, 4) , (register, 0xa8, 4)]
[(unique, 0x10000b0d, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (unique, 0x10000515, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x1976c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff38, 8) , (const, 0xffffffffffffffff, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000b05, 4) , (unique, 0x10000b09, 4)]
[(register, 0x30, 4) COPY (unique, 0x10000b15, 4), (unique, 0x10000b15, 4) MULTIEQUAL (unique, 0x10000b0d, 4) , (unique, 0x10000b11, 4)]
[(register, 0xb8, 8) COPY (unique, 0x10000937, 8), (unique, 0x10000937, 8) MULTIEQUAL (unique, 0x10000927, 8) , (unique, 0x1000092f, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000077f, 8) , (unique, 0x10000787, 8)]
[(unique, 0x10000b66, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x197b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000077f, 8) , (unique, 0x10000787, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1976e8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000d9e, 4), (unique, 0x10000d9e, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d96, 8), (unique, 0x10000d96, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x80, 8) CAST (unique, 0x10000da2, 8), (unique, 0x10000da2, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3400, 8) , (register, 0x80, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000daa, 8), (unique, 0x10000daa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3400, 8) , (register, 0x80, 8)]
[(unique, 0x100005b5, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100005ac, 8) INT_ADD (unique, 0x10000db6, 8) , (const, 0x5, 8), (unique, 0x10000db6, 8) CAST (unique, 0x100005bd, 8), (unique, 0x100005bd, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0x100005a4, 8) INT_SEXT (unique, 0x10000dbe, 4), (unique, 0x10000dbe, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1977b6, 1) , (unique, 0x100005b4, 1), (unique, 0x100005b4, 1) INT_SLESS (unique, 0x10000db2, 4) , (const, 0x0, 4), (unique, 0x10000db2, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x197b3b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005b5, 8) , (const, 0x0, 8)]
[(unique, 0x100008df, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000095f, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000963, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dca, 8), (unique, 0x10000dca, 8) INT_ADD (unique, 0x10000dc2, 8) , (const, 0x5, 8), (unique, 0x10000dc2, 8) CAST (unique, 0x100005bd, 8)]
[ ---  CBRANCH (ram, 0x1977f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dca, 8), (unique, 0x10000dca, 8) INT_ADD (unique, 0x10000dc2, 8) , (const, 0x5, 8), (unique, 0x10000dc2, 8) CAST (unique, 0x100005bd, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0x100005b5, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008df, 8) , (unique, 0x100008e7, 8)]
[ ---  CBRANCH (ram, 0x1977e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x100005b5, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008df, 8) , (unique, 0x100008e7, 8)]
[ ---  CBRANCH (ram, 0x197b3b, 1) , (register, 0x206, 1)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x197899, 1)]
[(unique, 0x1000095d, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (register, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0x10000961, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dd2, 8), (unique, 0x10000dd2, 8) INT_ADD (unique, 0x100005ac, 8) , (register, 0x80, 8)]
[(unique, 0x100008e7, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000095e, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006ce, 8) , (const, 0x1, 8), (unique, 0x100006ce, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8)]
[(unique, 0x10000962, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dda, 8), (unique, 0x10000dda, 8) INT_ADD (unique, 0x100005ac, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x19780a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006ce, 8) , (const, 0x1, 8), (unique, 0x100006ce, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dda, 8), (unique, 0x10000dda, 8) INT_ADD (unique, 0x100005ac, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1978b4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x90, 1) , (register, 0x18, 1), (register, 0x18, 1) MULTIEQUAL (unique, 0x1000095d, 1) , (unique, 0x1000095e, 1) , (unique, 0x1000095f, 1), (register, 0x90, 1) MULTIEQUAL (unique, 0x10000961, 1) , (unique, 0x10000962, 1) , (unique, 0x10000963, 1)]
[(unique, 0x10000964, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000de2, 8), (unique, 0x10000de2, 8) INT_ADD (unique, 0x100005ac, 8) , (unique, 0x100005b5, 8)]
[(unique, 0x10000982, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1978af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000de2, 8), (unique, 0x10000de2, 8) INT_ADD (unique, 0x100005ac, 8) , (unique, 0x100005b5, 8)]
[(unique, 0x100008af, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x197840, 1)]
[ ---  CBRANCH (ram, 0x197830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005b5, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008af, 8) , (unique, 0x100008b7, 8)]
[(unique, 0x100008b7, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1978af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006d6, 8) , (const, 0x1, 8), (unique, 0x100006d6, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0x10000960, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x19784f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x88, 1) , (register, 0x90, 1), (register, 0x90, 1) MULTIEQUAL (unique, 0x10000964, 1) , (unique, 0xbb00, 1), (register, 0x88, 1) MULTIEQUAL (unique, 0x10000982, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100008f7, 8) COPY (register, 0x88, 8), (register, 0x88, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0xa8, 1), (register, 0xa8, 1) MULTIEQUAL (unique, 0x10000960, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100008ef, 8) COPY (register, 0x88, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100008ef, 8) , (unique, 0x100008f7, 8)]
[ ---  CBRANCH (ram, 0x197860, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dea, 8), (unique, 0x10000dea, 8) INT_ADD (unique, 0x100005ac, 8) , (register, 0x88, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006de, 8) , (const, 0x1, 8), (unique, 0x100006de, 8) INT_ADD (register, 0x88, 8) , (const, 0x2, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100008ef, 8) , (unique, 0x100008f7, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_SEXT (unique, 0x10000dfa, 4), (unique, 0x10000dfa, 4) CAST (register, 0x18, 4), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (register, 0x90, 4), (register, 0x90, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x18, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x80, 8) INT_MULT (register, 0x80, 8) , (const, 0x100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006e6, 8) , (const, 0x1, 8), (unique, 0x100006e6, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000df2, 8), (unique, 0x10000df2, 8) INT_ADD (unique, 0x100005ac, 8) , (register, 0x88, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x197878, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x88, 8) , (unique, 0x100005b5, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100005b5, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dfe, 8), (unique, 0x10000dfe, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_SUB (register, 0x80, 8) , (unique, 0x100005a4, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1976eb, 1)]
[(register, 0x80, 8) CAST (unique, 0x10000e06, 8), (unique, 0x10000e06, 8) INT_ADD (register, 0x80, 8) , (unique, 0x100005ac, 8), (register, 0x80, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x100002e7, 4) , (const, 0x1, 4), (unique, 0x100002e7, 4) SUBPIECE (unique, 0x100002df, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x100002df, 8) , (const, 0x4, 8), (unique, 0x100002df, 8) INT_MULT (unique, 0x100005b5, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x197740, 1)]
[ ---  CBRANCH (ram, 0x1978cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005b5, 8) , (const, 0x0, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19778e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e16, 8), (unique, 0x10000e16, 8) INT_ADD (unique, 0x10000e0e, 8) , (const, 0x5, 8), (unique, 0x10000e0e, 8) CAST (unique, 0x100005bd, 8)]
[(unique, 0x100008cf, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19777c, 1)]
[ ---  CBRANCH (ram, 0x197770, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x100005b5, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008cf, 8) , (unique, 0x100008d7, 8)]
[(unique, 0x100008d7, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x197785, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e1e, 8), (unique, 0x10000e1e, 8) INT_ADD (unique, 0x100005ac, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006be, 8) , (const, 0x1, 8), (unique, 0x100006be, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1978d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005b5, 8) , (register, 0x80, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1976eb, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000e26, 8), (unique, 0x10000e26, 8) INT_ADD (unique, 0x100005ac, 8) , (unique, 0x100005b5, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000285, 4) , (const, 0x1, 4), (unique, 0x10000285, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000285, 4) , (const, 0x1, 4), (unique, 0x10000285, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x10000e36, 8), (unique, 0x10000e36, 8) INT_ADD (unique, 0x10000e2e, 8) , (register, 0x18, 8), (unique, 0x10000e2e, 8) CAST (unique, 0x3400, 8), (register, 0x18, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000e3e, 8), (unique, 0x10000e3e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) CAST (unique, 0x10000e36, 8), (unique, 0x10000e36, 8) INT_ADD (unique, 0x10000e2e, 8) , (register, 0x18, 8), (unique, 0x10000e2e, 8) CAST (unique, 0x3400, 8), (register, 0x18, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(unique, 0x10000787, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000092f, 8) COPY (unique, 0x1000091f, 8), (unique, 0x1000091f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
[(unique, 0x10000b09, 4) COPY (register, 0x30, 4)]
[(unique, 0x10000b5e, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10000b76, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
[(unique, 0x10000b82, 4) COPY (unique, 0x10000b11, 4), (unique, 0x10000b11, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x38, 4) , (const, 0xffffff, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x197bd3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e4a, 8), (unique, 0x10000e4a, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000e46, 4), (unique, 0x10000e46, 4) CAST (unique, 0x3400, 4), (unique, 0x3400, 4) INT_ADD (register, 0x38, 4) , (register, 0x18, 4), (register, 0x38, 4) INT_MULT (register, 0x38, 4) , (unique, 0xbc80, 4), (register, 0x38, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x18, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000584, 8) MULTIEQUAL (unique, 0x10000787, 8) , (register, 0x10, 8)]
[(unique, 0x10000594, 8) MULTIEQUAL (unique, 0x10000b76, 8) , (register, 0xb8, 8)]
[(unique, 0x1000059c, 4) MULTIEQUAL (unique, 0x10000b09, 4) , (register, 0xa8, 4)]
[(unique, 0x10000b86, 4) COPY (unique, 0x100005a0, 4), (unique, 0x100005a0, 4) MULTIEQUAL (unique, 0x10000b82, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x197bf7, 1) , (unique, 0x10000583, 1), (unique, 0x10000583, 1) INT_LESS (stack, 0xffffffffffffff20, 8) , (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) COPY (unique, 0x10000b6e, 8), (unique, 0x10000b6e, 8) MULTIEQUAL (unique, 0x10000b5e, 8) , (unique, 0x10000b66, 8)]
[(unique, 0x10000a61, 8) COPY (unique, 0x1000058c, 8)]
[(unique, 0x10000ad9, 4) COPY (stack, 0xffffffffffffffac, 4)]
[ ---  CBRANCH (ram, 0x197ca8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x1000058c, 8) , (unique, 0x10000594, 8)]
[(unique, 0x1000097a, 4) COPY (unique, 0x1000059c, 4)]
[(unique, 0x10000add, 4) COPY (unique, 0x100005a0, 4)]
[ ---  CBRANCH (ram, 0x197ea7, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff20, 8), (register, 0x0, 8) INT_SUB (unique, 0x1000058c, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff30, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (unique, 0x10000a61, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(unique, 0x1000094d, 4) COPY (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x10000b86, 4) , (unique, 0x1000097a, 4)]
[(unique, 0x100009e1, 8) COPY (unique, 0x10000594, 8)]
[(unique, 0x10000a89, 8) COPY (unique, 0x10000584, 8)]
[(unique, 0x10000ae9, 4) COPY (stack, 0xffffffffffffffac, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (unique, 0x10000ad9, 4) , (unique, 0x10000add, 4)]
[ ---  BRANCH (ram, 0x1975bc, 1)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(unique, 0x100009e9, 8) COPY (unique, 0x10000594, 8)]
[(unique, 0x10000a91, 8) COPY (unique, 0x10000584, 8)]
[ ---  BRANCH (ram, 0x197bc9, 1)]
[(unique, 0x100008ff, 8) COPY (unique, 0x10000594, 8)]
[ ---  CBRANCH (ram, 0x197ed5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000058c, 8) , (unique, 0x10000594, 8)]
[(unique, 0x10000907, 8) COPY (unique, 0x10000594, 8)]
[(unique, 0x100009f1, 8) COPY (unique, 0x10000594, 8)]
[ ---  CBRANCH (ram, 0x197ed5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x1000058c, 8) , (stack, 0xffffffffffffff20, 8)]
[ ---  CBRANCH (ram, 0x197af1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff38, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) INT_SUB (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff38, 8)]
[(unique, 0x1000075f, 8) COPY (stack, 0xffffffffffffff60, 8)]
[ ---  CBRANCH (ram, 0x1975b1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000074f, 8) , (unique, 0x10000757, 8) , (unique, 0x1000075f, 8)]
[ ---  CBRANCH (ram, 0x1973f0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000e5a, 4), (unique, 0x10000e5a, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10000e52, 8), (unique, 0x10000e52, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000074f, 8) , (unique, 0x10000757, 8) , (unique, 0x1000075f, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000e5e, 8), (unique, 0x10000e5e, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8) , (register, 0x38, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000e66, 8), (unique, 0x10000e66, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8) , (register, 0x38, 8)]
[(unique, 0x100005d6, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100005cd, 8) INT_ADD (unique, 0x10000e72, 8) , (const, 0x5, 8), (unique, 0x10000e72, 8) CAST (unique, 0x100005de, 8), (unique, 0x100005de, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x100005c5, 8) INT_SEXT (unique, 0x10000e7a, 4), (unique, 0x10000e7a, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x197495, 1) , (unique, 0x100005d5, 1), (unique, 0x100005d5, 1) INT_SLESS (unique, 0x10000e6e, 4) , (const, 0x0, 4), (unique, 0x10000e6e, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x197aea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005d6, 8) , (const, 0x0, 8)]
[(unique, 0x10000877, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000944, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e86, 8), (unique, 0x10000e86, 8) INT_ADD (unique, 0x10000e7e, 8) , (const, 0x5, 8), (unique, 0x10000e7e, 8) CAST (unique, 0x100005de, 8)]
[(unique, 0x10000988, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1974d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e86, 8), (unique, 0x10000e86, 8) INT_ADD (unique, 0x10000e7e, 8) , (const, 0x5, 8), (unique, 0x10000e7e, 8) CAST (unique, 0x100005de, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0x100005d6, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000877, 8) , (unique, 0x1000087f, 8)]
[ ---  CBRANCH (ram, 0x1974c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x100005d6, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000877, 8) , (unique, 0x1000087f, 8)]
[ ---  CBRANCH (ram, 0x197aea, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19757f, 1)]
[(unique, 0x10000942, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e8e, 8), (unique, 0x10000e8e, 8) INT_ADD (unique, 0x100005cd, 8) , (register, 0x38, 8)]
[(unique, 0x10000986, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x1000087f, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000943, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e96, 8), (unique, 0x10000e96, 8) INT_ADD (unique, 0x100005cd, 8) , (register, 0x38, 8)]
[(unique, 0x10000987, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000696, 8) , (const, 0x1, 8), (unique, 0x10000696, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1974e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000696, 8) , (const, 0x1, 8), (unique, 0x10000696, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e96, 8), (unique, 0x10000e96, 8) INT_ADD (unique, 0x100005cd, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1976a2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x88, 1) , (register, 0x80, 1), (register, 0x88, 1) MULTIEQUAL (unique, 0x10000942, 1) , (unique, 0x10000943, 1) , (unique, 0x10000944, 1), (register, 0x80, 1) MULTIEQUAL (unique, 0x10000986, 1) , (unique, 0x10000987, 1) , (unique, 0x10000988, 1)]
[(unique, 0x1000095c, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e9e, 8), (unique, 0x10000e9e, 8) INT_ADD (unique, 0x100005cd, 8) , (unique, 0x100005d6, 8)]
[(unique, 0x10000981, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197693, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e9e, 8), (unique, 0x10000e9e, 8) INT_ADD (unique, 0x100005cd, 8) , (unique, 0x100005d6, 8)]
[(unique, 0x10000857, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x197524, 1)]
[ ---  CBRANCH (ram, 0x197510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005d6, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000857, 8) , (unique, 0x1000085f, 8)]
[(unique, 0x1000085f, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000095b, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x10000980, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000069e, 8) , (const, 0x1, 8), (unique, 0x1000069e, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x197699, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000069e, 8) , (const, 0x1, 8), (unique, 0x1000069e, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x10000b55, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197530, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 1) , (register, 0x90, 1), (register, 0x90, 1) MULTIEQUAL (unique, 0x1000095b, 1) , (unique, 0x1000095c, 1), (register, 0x80, 1) MULTIEQUAL (unique, 0x10000980, 1) , (unique, 0x10000981, 1)]
[(unique, 0x10000897, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0xa0, 1), (register, 0xa0, 1) MULTIEQUAL (unique, 0x10000b55, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000088f, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x1000088f, 8) , (unique, 0x10000897, 8)]
[ ---  CBRANCH (ram, 0x197540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ea6, 8), (unique, 0x10000ea6, 8) INT_ADD (unique, 0x100005cd, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006a6, 8) , (const, 0x1, 8), (unique, 0x100006a6, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x1000088f, 8) , (unique, 0x10000897, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (register, 0x38, 8), (register, 0x88, 8) INT_SEXT (unique, 0x10000eb6, 4), (unique, 0x10000eb6, 4) CAST (register, 0x90, 4), (register, 0x90, 4) INT_SUB (register, 0x90, 4) , (register, 0x88, 4), (register, 0x90, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x88, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x38, 8) INT_MULT (register, 0x88, 8) , (const, 0x100, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000eae, 8), (unique, 0x10000eae, 8) INT_ADD (unique, 0x100005cd, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x100006ae, 8) , (const, 0x1, 8), (unique, 0x100006ae, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x197558, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (unique, 0x100005d6, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000eba, 8), (unique, 0x10000eba, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SUB (register, 0x38, 8) , (unique, 0x100005c5, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x88, 8)]
[(unique, 0x1000074f, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100005d6, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000ec2, 8), (unique, 0x10000ec2, 8) INT_ADD (register, 0x38, 8) , (unique, 0x100005cd, 8), (register, 0x38, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000243, 4) , (const, 0x1, 4), (unique, 0x10000243, 4) SUBPIECE (unique, 0x1000023b, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (unique, 0x1000023b, 8) , (const, 0x4, 8), (unique, 0x1000023b, 8) INT_MULT (unique, 0x100005d6, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x197420, 1)]
[ ---  CBRANCH (ram, 0x1976bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005d6, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19746e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ed2, 8), (unique, 0x10000ed2, 8) INT_ADD (unique, 0x10000eca, 8) , (const, 0x5, 8), (unique, 0x10000eca, 8) CAST (unique, 0x100005de, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000867, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19745c, 1)]
[ ---  CBRANCH (ram, 0x197450, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (unique, 0x100005d6, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000867, 8) , (unique, 0x1000086f, 8)]
[(unique, 0x1000086f, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x197465, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000eda, 8), (unique, 0x10000eda, 8) INT_ADD (unique, 0x100005cd, 8) , (register, 0x38, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x10000686, 8) , (const, 0x1, 8), (unique, 0x10000686, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1976bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100005d6, 8) , (register, 0x38, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1973f3, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000ee2, 8), (unique, 0x10000ee2, 8) INT_ADD (unique, 0x100005cd, 8) , (unique, 0x100005d6, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000018f, 4) , (const, 0x1, 4), (unique, 0x1000018f, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x197420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000018f, 4) , (const, 0x1, 4), (unique, 0x1000018f, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000ef2, 8), (unique, 0x10000ef2, 8) INT_ADD (unique, 0x10000eea, 8) , (register, 0x8, 8), (unique, 0x10000eea, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000efa, 8), (unique, 0x10000efa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) CAST (unique, 0x10000ef2, 8), (unique, 0x10000ef2, 8) INT_ADD (unique, 0x10000eea, 8) , (register, 0x8, 8), (unique, 0x10000eea, 8) CAST (unique, 0x3400, 8), (register, 0x8, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000757, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x19759b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x30, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff30, 8) , (const, 0x1, 8)]
[(unique, 0x1000078f, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10000945, 4) COPY (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x30, 4)]
[(unique, 0x100009d1, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000a79, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10000ae1, 4) COPY (stack, 0xffffffffffffffac, 4)]
[(unique, 0x1000090f, 8) COPY (stack, 0xffffffffffffff20, 8)]
[ ---  CBRANCH (ram, 0x197e3b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff40, 8)]
[(unique, 0x10000a01, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100008ff, 8) , (unique, 0x10000907, 8) , (unique, 0x1000090f, 8)]
[ ---  CBRANCH (ram, 0x197e5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff88, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffff38, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000949, 4) COPY (stack, 0xffffffffffffffac, 4)]
[(unique, 0x100009d9, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000a81, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10000ae5, 4) COPY (stack, 0xffffffffffffffac, 4)]
[ ---  BRANCH (ram, 0x1975bc, 1)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (unique, 0x10000ae1, 4) , (unique, 0x10000ae5, 4) , (unique, 0x10000ae9, 4) , (unique, 0x10000add, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x10000a79, 8) , (unique, 0x10000a81, 8) , (unique, 0x10000a89, 8) , (unique, 0x10000a91, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (unique, 0x1000058c, 8) , (unique, 0x1000058c, 8) , (unique, 0x1000058c, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff30, 8) , (unique, 0xbe00, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0x100009d1, 8) , (unique, 0x100009d9, 8) , (unique, 0x100009e1, 8) , (unique, 0x100009e9, 8) , (unique, 0x100009f1, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000078f, 8) , (register, 0x10, 8) , (unique, 0x10000584, 8) , (unique, 0x10000584, 8) , (unique, 0x10000584, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x10000945, 4) , (unique, 0x10000949, 4) , (unique, 0x1000094d, 4) , (unique, 0x1000097a, 4) , (unique, 0x10000b86, 4)]
[(register, 0xb8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000f06, 8), (unique, 0x10000f06, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x10000f02, 4), (unique, 0x10000f02, 4) CAST (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x10000945, 4) , (unique, 0x10000949, 4) , (unique, 0x1000094d, 4) , (unique, 0x1000097a, 4) , (unique, 0x10000b86, 4)]
[ ---  CBRANCH (ram, 0x1975f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xb8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xb8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000f0e, 8), (unique, 0x10000f0e, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0xb8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x1975d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0x18, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000515, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4)]
[(unique, 0x100007bf, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19739e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (unique, 0x10000515, 4)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100007b7, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x197dbe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff88, 4) , (const, 0x0, 4)]
[(unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffff20, 8)]
[ ---  CBRANCH (ram, 0x197e87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0x100009f9, 8) , (unique, 0x10000a01, 8)]
[ ---  CBRANCH (ram, 0x197e65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x197dde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (stack, 0xffffffffffffffc6, 1)]
[ ---  CBRANCH (ram, 0x197001, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x197d12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000f16, 8) , (stack, 0xffffffffffffff48, 8), (unique, 0x10000f16, 8) CAST (stack, 0xffffffffffffff50, 8)]
[ ---  CBRANCH (ram, 0x197d12, 1) , (register, 0x206, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (unique, 0x10000213, 4) , (const, 0x2, 4), (unique, 0x10000213, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff50, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000f26, 8), (unique, 0x10000f26, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (unique, 0x10000f1e, 4), (unique, 0x10000f1e, 4) CAST (register, 0xa0, 4)]
[(unique, 0x10000887, 8) COPY (register, 0x98, 8), (register, 0x98, 8) INT_SEXT (unique, 0x10000f22, 4), (unique, 0x10000f22, 4) CAST (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x197d43, 1)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x0, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (register, 0x0, 4)]
[(register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000887, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x197d28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000726, 8) , (const, 0x1, 8), (unique, 0x10000726, 8) INT_SUB (register, 0x98, 8) , (register, 0x80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)]
[(register, 0xb8, 4) INT_SUB (register, 0xb8, 4) , (const, 0x1, 4)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197d98, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000f2e, 4), (unique, 0x10000f2e, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x197d98, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0x10000f32, 4), (unique, 0x10000f32, 4) CAST (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x197d6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x197d6c, 1) , (register, 0x206, 1)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0xb8, 4)]
[ ---  BRANCH (ram, 0x197d64, 1)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x197644, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0x10000aa9, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19709f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff88, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000989, 8) COPY (stack, 0xffffffffffffff10, 8)]
[(unique, 0x100009c1, 8) COPY (stack, 0xffffffffffffff18, 8)]
[(unique, 0x10000a31, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000ac1, 4) COPY (stack, 0xffffffffffffff88, 4)]
[ ---  BRANCH (ram, 0x197377, 1)]
