[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003c2, 8), (unique, 0x100003c2, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18ec87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18ece0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003ca, 8), (unique, 0x100003ca, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x35a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x35a, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x35a, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d2, 8) , (const, 0x0, 8), (unique, 0x100003d2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x360, 4), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x35d, 4), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x35a, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x360, 4), (ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x35d, 4), (ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x35a, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x360, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x35d, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x35a, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x360, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x35d, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x35a, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x360, 4), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x35d, 4), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x35a, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x360, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x35d, 4), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x35a, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x360, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x35d, 4), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x35a, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x360, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x35d, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x35a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x360, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x35d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x35a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003da, 8) , (const, 0x0, 8), (unique, 0x100003da, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18ec87, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003e2, 8), (unique, 0x100003e2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x1000018f, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x10000197, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(unique, 0x1000019f, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(unique, 0x100001a3, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x100001a7, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(unique, 0x100001af, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(unique, 0x100001b7, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(unique, 0x100001bf, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x100001c3, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18eca0, 1) , (unique, 0x1000018e, 1), (unique, 0x1000018e, 1) INT_NOTEQUAL (unique, 0x10000186, 8) , (const, 0x0, 8), (unique, 0x10000186, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (unique, 0x1000018f, 8) , (const, 0x47, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x10000197, 8) , (const, 0x47, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (unique, 0x1000019f, 4) , (const, 0x47, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (unique, 0x100001a3, 4) , (const, 0x47, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (unique, 0x100001a7, 8) , (const, 0x47, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (unique, 0x100001af, 8) , (const, 0x47, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (unique, 0x100001b7, 8) , (const, 0x47, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x100001bf, 4) , (const, 0x47, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100001c3, 4) , (const, 0x47, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000186, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003ea, 8), (unique, 0x100003ea, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000186, 8)]
[ ---  CBRANCH (ram, 0x18ecb6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x64, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x67, 4), (ram, 0x4ec660, 8) INDIRECT (unique, 0x1000018f, 8) , (const, 0x64, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x67, 4), (ram, 0x4ed890, 8) INDIRECT (unique, 0x10000197, 8) , (const, 0x64, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x67, 4), (ram, 0x4ed8a0, 4) INDIRECT (unique, 0x1000019f, 4) , (const, 0x64, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x67, 4), (ram, 0x4ed8a4, 4) INDIRECT (unique, 0x100001a3, 4) , (const, 0x64, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x67, 4), (ram, 0x4ed8a8, 8) INDIRECT (unique, 0x100001a7, 8) , (const, 0x64, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x67, 4), (ram, 0x4f08a8, 8) INDIRECT (unique, 0x100001af, 8) , (const, 0x64, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x67, 4), (ram, 0x4f08b0, 8) INDIRECT (unique, 0x100001b7, 8) , (const, 0x64, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x67, 4), (ram, 0x4f08e8, 4) INDIRECT (unique, 0x100001bf, 4) , (const, 0x64, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x67, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x100001c3, 4) , (const, 0x64, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003fa, 8) , (const, 0x0, 8), (unique, 0x100003fa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (unique, 0x100001c3, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (unique, 0x100001b7, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (unique, 0x100001af, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (unique, 0x100001a7, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (unique, 0x100001a3, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (unique, 0x1000019f, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x10000197, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (unique, 0x1000018f, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000030e, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (unique, 0x100001bf, 4) , (ram, 0x4f08e8, 4)]
[ ---  CBRANCH (ram, 0x18ed00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000402, 8), (unique, 0x10000402, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18ef6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8)]
[ ---  BRANCH (ram, 0x18ed30, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd3, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0xd3, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0xd3, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0xd3, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0xd3, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0xd3, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0xd3, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0xd3, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xd3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xd3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd3, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xd3, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x100001cb, 8) , (const, 0x0, 8), (unique, 0x100001cb, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8), (register, 0x0, 8) CAST (unique, 0x10000412, 8), (unique, 0x10000412, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000040a, 8), (unique, 0x1000040a, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x10000362, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18ed88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4ed8a8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000041a, 8), (unique, 0x1000041a, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18ed5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000037a, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000036a, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18ed81, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x337, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x337, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x337, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x337, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x337, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x337, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x337, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x337, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x337, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x337, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x337, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x337, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x337, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x10000372, 8) COPY (unique, 0x1000035a, 8), (unique, 0x1000035a, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x337, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (unique, 0x10000362, 8) , (unique, 0x1000036a, 8) , (unique, 0x10000372, 8) , (unique, 0x1000037a, 8)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4ed8a4, 4) , (const, 0x1, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x100003aa, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18ef00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000031a, 8) COPY (unique, 0x10000422, 8), (unique, 0x10000422, 8) CAST (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18ef60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec660, 8) , (const, 0x0, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x329, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x329, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x329, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x329, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x329, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x329, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x329, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff7f, 4)]
[ ---  BRANCH (ram, 0x18ee7c, 1)]
[ ---  CBRANCH (ram, 0x18ee08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043a, 8), (unique, 0x1000043a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000432, 8), (unique, 0x10000432, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000042a, 8), (unique, 0x1000042a, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18edd9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x312, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100003aa, 8) , (const, 0x312, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x312, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x312, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x312, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x312, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x312, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x312, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x312, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x15c, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100003aa, 8) , (const, 0x15c, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x15c, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x15c, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x15c, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x15c, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x15c, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x15c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18edf4, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2f5, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f5, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2f5, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100003aa, 8) , (const, 0x2f5, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2f5, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x2f5, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2f5, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2f5, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2f5, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2f5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2f5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2f5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f5, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x2f5, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x16a, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x16a, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x16a, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x16a, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x16a, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x16a, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x16a, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x16a, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x16a, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000044a, 8) , (register, 0x80, 8), (unique, 0x1000044a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000442, 8), (unique, 0x10000442, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x17d, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x17d, 4), (ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x100003aa, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x17d, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x17d, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x17d, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x17d, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x17d, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x17d, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000312, 8) COPY (unique, 0x10000306, 8), (unique, 0x10000306, 8) COPY (unique, 0x10000452, 8), (unique, 0x10000452, 8) CAST (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18ef0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000306, 8) , (const, 0x0, 8), (unique, 0x10000306, 8) COPY (unique, 0x10000452, 8), (unique, 0x10000452, 8) CAST (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (register, 0x10, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (unique, 0x100003aa, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18ef40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000312, 8) , (unique, 0x1000031a, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000045a, 8), (unique, 0x1000045a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18ee20, 1)]
[(unique, 0x10000382, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000462, 8), (unique, 0x10000462, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(unique, 0x1000039a, 8) COPY (register, 0x38, 8)]
[(unique, 0x100002fd, 8) MULTIEQUAL (unique, 0x1000039a, 8) , (unique, 0x100003a2, 8)]
[ ---  CBRANCH (ram, 0x18ee20, 1) , (unique, 0x100002fc, 1), (unique, 0x100002fc, 1) INT_NOTEQUAL (unique, 0x100002f4, 8) , (const, 0x0, 8), (unique, 0x100002f4, 8) COPY (unique, 0x10000392, 8), (unique, 0x10000392, 8) MULTIEQUAL (unique, 0x10000382, 8) , (unique, 0x1000038a, 8)]
[ ---  CBRANCH (ram, 0x18ef30, 1) , (unique, 0x100002e5, 1), (unique, 0x100002e5, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x100002f4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2bf, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x2bf, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2bf, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2bf, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2bf, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2bf, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2bf, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2bf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000472, 8) , (unique, 0xbd80, 8), (unique, 0x10000472, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000046a, 8), (unique, 0x1000046a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x8, 8) PTRADD (unique, 0x100002fd, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18ee20, 1)]
[(unique, 0x100003a2, 8) COPY (unique, 0x100002f4, 8)]
[(unique, 0x1000038a, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000047a, 8), (unique, 0x1000047a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002f4, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1a5, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1a5, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1a5, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1a5, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1a5, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1a5, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1a5, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1a5, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a5, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff7f, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x18ee76, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1c4, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1c4, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1c4, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1c4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1c4, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1c4, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1c4, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1c4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000482, 8), (unique, 0x10000482, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18ee7c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000482, 8), (unique, 0x10000482, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1cb, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1cb, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1cb, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1cb, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1cb, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1cb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000048a, 8) , (const, 0x0, 8), (unique, 0x1000048a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18ee5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1cb, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x28a, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x28a, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x28a, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x28a, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x28a, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x28a, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x28a, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x28a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x28a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1db, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1db, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1db, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1db, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1db, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1db, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1db, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1db, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1db, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000029c, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x100002a4, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(unique, 0x100002ac, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(unique, 0x100002b0, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x100002b4, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(unique, 0x100002bc, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(unique, 0x100002c4, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(unique, 0x100002cc, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x100002d0, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18ee76, 1) , (unique, 0x1000029b, 1), (unique, 0x1000029b, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27c, 4)]
[(ram, 0x4ec660, 8) INDIRECT (unique, 0x1000029c, 8) , (const, 0x27c, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002a4, 8) , (const, 0x27c, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (unique, 0x100002ac, 4) , (const, 0x27c, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (unique, 0x100002b0, 4) , (const, 0x27c, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (unique, 0x100002b4, 8) , (const, 0x27c, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (unique, 0x100002bc, 8) , (const, 0x27c, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (unique, 0x100002c4, 8) , (const, 0x27c, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x100002cc, 4) , (const, 0x27c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100002d0, 4) , (const, 0x27c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x27c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x27c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x100002d0, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (unique, 0x100002cc, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (unique, 0x100002c4, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (unique, 0x100002bc, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (unique, 0x100002b4, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0x1000029c, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed890, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000034a, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (unique, 0x100002ac, 4)]
[ ---  CBRANCH (ram, 0x18eed5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (register, 0x10, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (unique, 0x100002b0, 4)]
[(ram, 0x4ed8a8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18eeb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000352, 4) COPY (unique, 0x100002d4, 4), (unique, 0x100002d4, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x18eed5, 1) , (unique, 0x100002d8, 1), (unique, 0x100002d8, 1) INT_NOTEQUAL (unique, 0x100002d4, 4) , (const, 0x0, 4), (unique, 0x100002d4, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25d, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x25d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x25d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x25d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x25d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x25d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100001d3, 8), (unique, 0x100001d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x1000034e, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x25d, 4), (ram, 0x4ed8a0, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4ed8a4, 4) , (register, 0x10, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed8a0, 4) COPY (unique, 0x10000356, 4), (unique, 0x10000356, 4) MULTIEQUAL (unique, 0x1000034a, 4) , (unique, 0x1000034e, 4) , (unique, 0x10000352, 4)]
[ ---  CBRANCH (ram, 0x18ecbb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000030e, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24f, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x24f, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x24f, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x24f, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x24f, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x24f, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x24f, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x24f, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x24f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x24f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x24f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24f, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x24f, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000049a, 8), (unique, 0x1000049a, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000492, 8), (unique, 0x10000492, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x18ecbb, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18ef8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004a2, 8), (unique, 0x100004a2, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x96, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x96, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x96, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x96, 4)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8), (ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x96, 4)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x96, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x96, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x96, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x96, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x96, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x96, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x96, 4)]
[ ---  RETURN (const, 0x1, 4)]
