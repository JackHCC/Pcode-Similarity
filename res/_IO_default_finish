[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x17bb5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17bd68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) CAST (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x356, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b3, 8) , (const, 0x0, 8), (unique, 0x100003b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x35c, 4), (ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x359, 4), (ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x356, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x35c, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x359, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x356, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x35c, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x359, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x356, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x35c, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x359, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x356, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x35c, 4), (ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x359, 4), (ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x356, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x35c, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x359, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x356, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x35c, 4), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x359, 4), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x356, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x35c, 4), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x359, 4), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x356, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x35c, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x359, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x356, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x35c, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x359, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x356, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003bb, 8) , (const, 0x0, 8), (unique, 0x100003bb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17bb5b, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x1000017d, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x10000185, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x1000018d, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(unique, 0x10000191, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(unique, 0x10000195, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x10000199, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100001a1, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(unique, 0x100001a9, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(unique, 0x100001b1, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(unique, 0x100001b5, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x17bb78, 1) , (unique, 0x1000017c, 1), (unique, 0x1000017c, 1) INT_NOTEQUAL (unique, 0x10000174, 8) , (const, 0x0, 8), (unique, 0x10000174, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (unique, 0x1000017d, 8) , (const, 0x37, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000185, 8) , (const, 0x37, 4)]
[(ram, 0x4c5758, 4) INDIRECT (unique, 0x1000018d, 4) , (const, 0x37, 4)]
[(ram, 0x4c5760, 4) INDIRECT (unique, 0x10000191, 4) , (const, 0x37, 4)]
[(ram, 0x4c5764, 4) INDIRECT (unique, 0x10000195, 4) , (const, 0x37, 4)]
[(ram, 0x4c5768, 8) INDIRECT (unique, 0x10000199, 8) , (const, 0x37, 4)]
[(ram, 0x4c8750, 8) INDIRECT (unique, 0x100001a1, 8) , (const, 0x37, 4)]
[(ram, 0x4c8758, 8) INDIRECT (unique, 0x100001a9, 8) , (const, 0x37, 4)]
[(ram, 0x4c8790, 4) INDIRECT (unique, 0x100001b1, 4) , (const, 0x37, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001b5, 4) , (const, 0x37, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000174, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000174, 8)]
[ ---  CBRANCH (ram, 0x17bb8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x54, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x54, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x57, 4), (ram, 0x4c4520, 8) INDIRECT (unique, 0x1000017d, 8) , (const, 0x54, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x57, 4), (ram, 0x4c5750, 8) INDIRECT (unique, 0x10000185, 8) , (const, 0x54, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x57, 4), (ram, 0x4c5758, 4) INDIRECT (unique, 0x1000018d, 4) , (const, 0x54, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x57, 4), (ram, 0x4c5760, 4) INDIRECT (unique, 0x10000191, 4) , (const, 0x54, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x57, 4), (ram, 0x4c5764, 4) INDIRECT (unique, 0x10000195, 4) , (const, 0x54, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x57, 4), (ram, 0x4c5768, 8) INDIRECT (unique, 0x10000199, 8) , (const, 0x54, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x57, 4), (ram, 0x4c8750, 8) INDIRECT (unique, 0x100001a1, 8) , (const, 0x54, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x57, 4), (ram, 0x4c8758, 8) INDIRECT (unique, 0x100001a9, 8) , (const, 0x54, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x57, 4), (ram, 0x4c8790, 4) INDIRECT (unique, 0x100001b1, 4) , (const, 0x54, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x57, 4), (ram, 0x4c87a0, 4) INDIRECT (unique, 0x100001b5, 4) , (const, 0x54, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003db, 8) , (const, 0x0, 8), (unique, 0x100003db, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x100001b5, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (unique, 0x100001a9, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (unique, 0x100001a1, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (unique, 0x10000199, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (unique, 0x10000195, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (unique, 0x10000191, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (unique, 0x1000018d, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x10000185, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (unique, 0x1000017d, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002ff, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (unique, 0x100001b1, 4) , (ram, 0x4c8790, 4)]
[ ---  CBRANCH (ram, 0x17bba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17be20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x352, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x352, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x352, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x352, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x352, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x352, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x352, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x352, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x352, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x352, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x352, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x352, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x352, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x100001bb, 8) , (const, 0x0, 8), (unique, 0x100001bb, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8), (register, 0x0, 8) CAST (unique, 0x100003f3, 8), (unique, 0x100003f3, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003eb, 8), (unique, 0x100003eb, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8750, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8750, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x17bbc2, 1)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc8, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x1000034b, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17bc1a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c5768, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003fb, 8), (unique, 0x100003fb, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17bbf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000363, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000353, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x17bc13, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30a, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x30a, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x30a, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x30a, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x30a, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x30a, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x30a, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x30a, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x30a, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x30a, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x30a, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x30a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x30a, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100001cb, 8), (unique, 0x100001cb, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x1000035b, 8) COPY (unique, 0x10000343, 8), (unique, 0x10000343, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x30a, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (unique, 0x1000034b, 8) , (unique, 0x10000353, 8) , (unique, 0x1000035b, 8) , (unique, 0x10000363, 8)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4c5764, 4) , (const, 0x1, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x10000393, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17bd88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17bdda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000413, 8), (unique, 0x10000413, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000040b, 8), (unique, 0x1000040b, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000403, 8), (unique, 0x10000403, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17bdb4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2fc, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000393, 8) , (const, 0x2fc, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2fc, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2fc, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x2fc, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2fc, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2fc, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2fc, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2fc, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2fc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x29c, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000393, 8) , (const, 0x29c, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x29c, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x29c, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x29c, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x29c, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x29c, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x29c, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x29c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x29c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17bdcf, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2df, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2df, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2df, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000393, 8) , (const, 0x2df, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2df, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2df, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x2df, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2df, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2df, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2df, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2df, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2df, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x2df, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2df, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2a5, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2a5, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2a5, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2a5, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x2a5, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2a5, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2a5, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2a5, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2a5, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2a5, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000423, 8) , (register, 0x80, 8), (unique, 0x10000423, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000041b, 8), (unique, 0x1000041b, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2b1, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2b1, 4), (ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x10000393, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2b1, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2b1, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x2b1, 4), (ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2b1, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2b1, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2b1, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2b1, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2b1, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17bc4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002f7, 8) , (const, 0x0, 8), (unique, 0x100002f7, 8) COPY (unique, 0x1000042b, 8), (unique, 0x1000042b, 8) CAST (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x10000303, 8) COPY (unique, 0x10000433, 8), (unique, 0x10000433, 8) CAST (ram, 0x4c4520, 8)]
[ ---  CBRANCH (ram, 0x17be5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4520, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x10000393, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17be47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000303, 8) , (unique, 0x100002f7, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043b, 8), (unique, 0x1000043b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(ram, 0x4c5758, 4) INT_ADD (ram, 0x4c5758, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17bc85, 1)]
[(unique, 0x1000036b, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000443, 8), (unique, 0x10000443, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(unique, 0x10000383, 8) COPY (register, 0x38, 8)]
[(unique, 0x100002ed, 8) MULTIEQUAL (unique, 0x10000383, 8) , (unique, 0x1000038b, 8)]
[ ---  CBRANCH (ram, 0x17bc85, 1) , (unique, 0x100002ec, 1), (unique, 0x100002ec, 1) INT_NOTEQUAL (unique, 0x100002e4, 8) , (const, 0x0, 8), (unique, 0x100002e4, 8) COPY (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) MULTIEQUAL (unique, 0x1000036b, 8) , (unique, 0x10000373, 8)]
[ ---  CBRANCH (ram, 0x17bc7c, 1) , (unique, 0x100002d8, 1), (unique, 0x100002d8, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x100002e4, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x119, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x119, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x119, 4), (ram, 0x4c5758, 4) INT_ADD (ram, 0x4c5758, 4) , (const, 0x1, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x119, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x119, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x119, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x119, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x119, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x119, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x119, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000453, 8) , (unique, 0xbd80, 8), (unique, 0x10000453, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000044b, 8), (unique, 0x1000044b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x8, 8) PTRADD (unique, 0x100002ed, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17bc85, 1)]
[(unique, 0x1000038b, 8) COPY (unique, 0x100002e4, 8)]
[(unique, 0x10000373, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000045b, 8), (unique, 0x1000045b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002e4, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x12e, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (unique, 0xbd80, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x12e, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x12e, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x12e, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x12e, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x12e, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x12e, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x12e, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x12e, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x12e, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff7f, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x17bcdb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x14d, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x14d, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x14d, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x14d, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x14d, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x14d, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x14d, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x14d, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x14d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x14d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000463, 8), (unique, 0x10000463, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17bce1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000463, 8), (unique, 0x10000463, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x154, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x154, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x154, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x154, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x154, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x154, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x154, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x154, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x154, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000046b, 8) , (const, 0x0, 8), (unique, 0x1000046b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17bcc1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x154, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x222, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x222, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x222, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x222, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x222, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x222, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x222, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x222, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x222, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x222, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x164, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x164, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x164, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x164, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x164, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x164, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x164, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x164, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x164, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x164, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000028c, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x10000294, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x1000029c, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(unique, 0x100002a0, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(unique, 0x100002a4, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x100002a8, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100002b0, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(unique, 0x100002b8, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(unique, 0x100002c0, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(unique, 0x100002c4, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x17bcdb, 1) , (unique, 0x1000028b, 1), (unique, 0x1000028b, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x214, 4)]
[(ram, 0x4c4520, 8) INDIRECT (unique, 0x1000028c, 8) , (const, 0x214, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x10000294, 8) , (const, 0x214, 4)]
[(ram, 0x4c5758, 4) INDIRECT (unique, 0x1000029c, 4) , (const, 0x214, 4)]
[(ram, 0x4c5760, 4) INDIRECT (unique, 0x100002a0, 4) , (const, 0x214, 4)]
[(ram, 0x4c5764, 4) INDIRECT (unique, 0x100002a4, 4) , (const, 0x214, 4)]
[(ram, 0x4c5768, 8) INDIRECT (unique, 0x100002a8, 8) , (const, 0x214, 4)]
[(ram, 0x4c8750, 8) INDIRECT (unique, 0x100002b0, 8) , (const, 0x214, 4)]
[(ram, 0x4c8758, 8) INDIRECT (unique, 0x100002b8, 8) , (const, 0x214, 4)]
[(ram, 0x4c8790, 4) INDIRECT (unique, 0x100002c0, 4) , (const, 0x214, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100002c4, 4) , (const, 0x214, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x214, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x214, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x267, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x267, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x267, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x267, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x267, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x267, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x267, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x267, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff7f, 4)]
[ ---  BRANCH (ram, 0x17bce1, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x100002c4, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (unique, 0x100002c0, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (unique, 0x100002b8, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (unique, 0x100002b0, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (unique, 0x100002a8, 8)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (unique, 0x1000029c, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (unique, 0x1000028c, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000333, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (unique, 0x100002a0, 4)]
[ ---  CBRANCH (ram, 0x17bd3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (register, 0x10, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (unique, 0x100002a4, 4)]
[(ram, 0x4c5768, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17bd18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000033b, 4) COPY (unique, 0x100002c8, 4), (unique, 0x100002c8, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x17bd3a, 1) , (unique, 0x100002cc, 1), (unique, 0x100002cc, 1) INT_NOTEQUAL (unique, 0x100002c8, 4) , (const, 0x0, 4), (unique, 0x100002c8, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1f5, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1f5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1f5, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1f5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1f5, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x10000337, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1f5, 4), (ram, 0x4c5760, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4) , (register, 0x10, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5760, 4) COPY (unique, 0x1000033f, 4), (unique, 0x1000033f, 4) MULTIEQUAL (unique, 0x10000333, 4) , (unique, 0x10000337, 4) , (unique, 0x1000033b, 4)]
[ ---  CBRANCH (ram, 0x17bb93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002ff, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1d8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1d8, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000047b, 8), (unique, 0x1000047b, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000473, 8), (unique, 0x10000473, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8758, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8758, 8) , (const, 0x11, 4)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1d8, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1d8, 4)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1d8, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1d8, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4), (ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1d8, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1d8, 4)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1d8, 4)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1d8, 4)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1d8, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
