[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005a7, 8), (unique, 0x100005a7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x214748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x214748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000039b, 4) , (const, 0x0, 4), (unique, 0x1000039b, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x200, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005af, 8), (unique, 0x100005af, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 2), (unique, 0x3100, 8) CAST (unique, 0x100005cf, 8), (unique, 0x100005cf, 8) INT_ADD (unique, 0x100005c7, 8) , (const, 0x66, 8), (unique, 0x100005c7, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2145e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005bf, 8), (unique, 0x100005bf, 8) INT_ADD (unique, 0x100005b7, 8) , (const, 0x66, 8), (unique, 0x100005b7, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x622, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x622, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x625, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x622, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x100005df, 8), (unique, 0x100005df, 8) INT_ADD (unique, 0x100005d7, 8) , (const, 0x62, 8), (unique, 0x100005d7, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 2) CALL (ram, 0x212d70, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005ef, 8), (unique, 0x100005ef, 8) INT_ADD (unique, 0x100005e7, 8) , (const, 0x62, 8), (unique, 0x100005e7, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x214490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x2, 2)]
[ ---  CBRANCH (ram, 0x214500, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100005f7, 2) , (const, 0x2, 2), (unique, 0x100005f7, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0xc, 2)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5ad, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x5ad, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5b9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5ad, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) INT_ADD (unique, 0x100005f9, 8) , (const, 0x62, 8), (unique, 0x100005f9, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 2) CALL (ram, 0x212d70, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x214460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 2) , (const, 0x1, 2), (register, 0x0, 2) CALL (ram, 0x212d70, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x214460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000609, 8), (unique, 0x10000609, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5ea, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5ea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) INT_ADD (unique, 0x10000611, 8) , (const, 0x3c, 8), (unique, 0x10000611, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100003da, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100003da, 8) COPY (const, 0x2b57d8, 8)]
[(unique, 0x100004e7, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5f6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5ea, 4)]
[ ---  CBRANCH (ram, 0x21498b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100003da, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100003da, 8) COPY (const, 0x2b57d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x7, 2), (unique, 0x3100, 8) CAST (unique, 0x10000629, 8), (unique, 0x10000629, 8) INT_ADD (unique, 0x10000621, 8) , (const, 0x62, 8), (unique, 0x10000621, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x613, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x60c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) CAST (unique, 0x10000641, 8), (unique, 0x10000641, 8) INT_ADD (unique, 0x10000639, 8) , (const, 0x38, 8), (unique, 0x10000639, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000631, 8), (unique, 0x10000631, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100004e7, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5fd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) INT_OR (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000651, 8), (unique, 0x10000651, 8) INT_ADD (unique, 0x10000649, 8) , (const, 0x64, 8), (unique, 0x10000649, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[ ---  CBRANCH (ram, 0x214400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x1, 2)]
[(unique, 0x10000577, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x214400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x1, 2)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2143d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000661, 8), (unique, 0x10000661, 8) INT_ADD (unique, 0x10000659, 8) , (const, 0x10, 8), (unique, 0x10000659, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000577, 8) , (unique, 0x1000059f, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000671, 8), (unique, 0x10000671, 8) INT_ADD (unique, 0x10000669, 8) , (const, 0x8, 8), (unique, 0x10000669, 8) CAST (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bc, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2bc, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b9, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x2bc, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x2bc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bc, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x214937, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0xffff, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000681, 8), (unique, 0x10000681, 8) INT_ADD (unique, 0x10000679, 8) , (const, 0x60, 8), (unique, 0x10000679, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000671, 8), (unique, 0x10000671, 8) INT_ADD (unique, 0x10000669, 8) , (const, 0x8, 8), (unique, 0x10000669, 8) CAST (register, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x467, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000689, 8) , (const, 0x0, 4), (unique, 0x10000689, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x467, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x467, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x46d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x46b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x467, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000567, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x100006a9, 8), (unique, 0x100006a9, 8) INT_ADD (unique, 0x100006a1, 8) , (register, 0x0, 8), (unique, 0x100006a1, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000699, 8), (unique, 0x10000699, 8) INT_ADD (unique, 0x10000691, 8) , (const, 0x40, 8), (unique, 0x10000691, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2146d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006b9, 8), (unique, 0x100006b9, 8) INT_ADD (unique, 0x100006b1, 8) , (const, 0x60, 8), (unique, 0x100006b1, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2147b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100003b3, 2) , (const, 0x0, 2), (unique, 0x100003b3, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006c9, 8), (unique, 0x100006c9, 8) INT_ADD (unique, 0x100006c1, 8) , (const, 0x64, 8), (unique, 0x100006c1, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006e1, 8), (unique, 0x100006e1, 8) INT_ADD (unique, 0x100006d9, 8) , (const, 0x3c, 8), (unique, 0x100006d9, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2147cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006d1, 8), (unique, 0x100006d1, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41d, 4)]
[(unique, 0x100004f7, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x41d, 4)]
[ ---  CBRANCH (ram, 0x2149c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x43c, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006f1, 8), (unique, 0x100006f1, 8) INT_ADD (unique, 0x100006e9, 8) , (const, 0x3c, 8), (unique, 0x100006e9, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000709, 8) , (unique, 0xbd00, 4), (unique, 0x10000709, 8) CAST (unique, 0x3800, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x200, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000701, 8), (unique, 0x10000701, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x44e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x442, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x43c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000711, 8) , (unique, 0xbc80, 4), (unique, 0x10000711, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100004f7, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x43c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006f9, 8), (unique, 0x100006f9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000055f, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000721, 8), (unique, 0x10000721, 8) INT_ADD (unique, 0x10000719, 8) , (const, 0x3c, 8), (unique, 0x10000719, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x42f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x214448, 1)]
[ ---  CBRANCH (ram, 0x214448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000278, 2) , (const, 0x0, 2), (unique, 0x10000278, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x1, 2)]
[ ---  CBRANCH (ram, 0x214448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000729, 8), (unique, 0x10000729, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000739, 8), (unique, 0x10000739, 8) INT_ADD (unique, 0x10000731, 8) , (const, 0x8, 8), (unique, 0x10000731, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x391, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x391, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x391, 4)]
[ ---  CBRANCH (ram, 0x214739, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100003d2, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100003d2, 8) COPY (const, 0x2b57d7, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a4, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x3a4, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x3a4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a4, 4)]
[(unique, 0x100004ef, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a4, 4)]
[ ---  CBRANCH (ram, 0x21495c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x2149ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000741, 8), (unique, 0x10000741, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8)]
[ ---  CBRANCH (ram, 0x21496a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000749, 8), (unique, 0x10000749, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000751, 8) , (const, 0x2, 4), (unique, 0x10000751, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d4, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000759, 8) , (const, 0x2, 4), (unique, 0x10000759, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100004ef, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d4, 4)]
[ ---  BRANCH (ram, 0x214739, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3fb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ef, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x407, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3fb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000769, 8) , (unique, 0xbc80, 4), (unique, 0x10000769, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000517, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3fb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000761, 8), (unique, 0x10000761, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x10000517, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ef, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ef, 4)]
[ ---  CBRANCH (ram, 0x214448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3b8, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3bb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3b8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000779, 8) , (unique, 0xbc80, 4), (unique, 0x10000779, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100004ef, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000771, 8), (unique, 0x10000771, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x21487a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000781, 8), (unique, 0x10000781, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x31e, 4)]
[ ---  CBRANCH (ram, 0x214448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000789, 8), (unique, 0x10000789, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x317, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x100007a9, 8), (unique, 0x100007a9, 8) INT_ADD (unique, 0x100007a1, 8) , (const, 0x62, 8), (unique, 0x100007a1, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 2) INT_ADD (unique, 0x100003a5, 2) , (const, 0x6, 2), (unique, 0x100003a5, 2) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000799, 8), (unique, 0x10000799, 8) INT_ADD (unique, 0x10000791, 8) , (const, 0x38, 8), (unique, 0x10000791, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000054f, 8) COPY (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x474, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x474, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x470, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x474, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x474, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x474, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x28, 8)]
[(unique, 0x1000059f, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2145f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007b9, 8), (unique, 0x100007b9, 8) INT_ADD (unique, 0x100007b1, 8) , (const, 0x60, 8), (unique, 0x100007b1, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x214612, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007c1, 8), (unique, 0x100007c1, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x525, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x525, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x525, 4)]
[ ---  CBRANCH (ram, 0x214739, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100007c9, 8), (unique, 0x100007c9, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007d9, 8) , (unique, 0xbd00, 4), (unique, 0x100007d9, 8) CAST (unique, 0x3800, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x200, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100007d1, 8), (unique, 0x100007d1, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000557, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc00, 2), (unique, 0x3100, 8) CAST (unique, 0x10000809, 8), (unique, 0x10000809, 8) INT_ADD (unique, 0x10000801, 8) , (const, 0x40, 8), (unique, 0x10000801, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007e9, 8), (unique, 0x100007e9, 8) INT_ADD (unique, 0x100007e1, 8) , (const, 0x42, 8), (unique, 0x100007e1, 8) CAST (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x1212b0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x100007f9, 8), (unique, 0x100007f9, 8) INT_ADD (unique, 0x100007f1, 8) , (const, 0x70, 8), (unique, 0x100007f1, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007e9, 8), (unique, 0x100007e9, 8) INT_ADD (unique, 0x100007e1, 8) , (const, 0x42, 8), (unique, 0x100007e1, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x547, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x542, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x547, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x542, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x53f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x547, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x542, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x21466f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121270, 8) , (unique, 0x3100, 8) , (const, 0x2f, 4), (unique, 0x3100, 8) CAST (unique, 0x100007f9, 8), (unique, 0x100007f9, 8) INT_ADD (unique, 0x100007f1, 8) , (const, 0x70, 8), (unique, 0x100007f1, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x2147d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21464a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000819, 8), (unique, 0x10000819, 8) INT_ADD (unique, 0x10000811, 8) , (const, 0x71, 8), (unique, 0x10000811, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x56b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x561, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x56b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x561, 4)]
[ ---  CALL (ram, 0x1212b0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000254, 4) , (const, 0x1, 4), (unique, 0x10000254, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x56e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x56b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x561, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 2), (register, 0xb0, 2) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000829, 8), (unique, 0x10000829, 8) INT_ADD (unique, 0x10000821, 8) , (const, 0x42, 8), (unique, 0x10000821, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000839, 8), (unique, 0x10000839, 8) INT_ADD (unique, 0x10000831, 8) , (const, 0x30, 8), (unique, 0x10000831, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000849, 8), (unique, 0x10000849, 8) INT_ADD (unique, 0x10000841, 8) , (const, 0x28, 8), (unique, 0x10000841, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x57e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x578, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x575, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000859, 8), (unique, 0x10000859, 8) INT_ADD (unique, 0x10000851, 8) , (const, 0x50, 8), (unique, 0x10000851, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[ ---  CBRANCH (ram, 0x214690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x4, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000869, 8), (unique, 0x10000869, 8) INT_ADD (unique, 0x10000861, 8) , (const, 0x66, 8), (unique, 0x10000861, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x214580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x2, 2)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4a6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4b2, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4a6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) CAST (unique, 0x10000881, 8), (unique, 0x10000881, 8) INT_ADD (unique, 0x10000879, 8) , (const, 0x62, 8), (unique, 0x10000879, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 2) CALL (ram, 0x212d70, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000871, 8), (unique, 0x10000871, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2148c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 2) , (const, 0x1, 2), (register, 0x0, 2) CALL (ram, 0x212d70, 8) , (unique, 0xbc80, 4) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000871, 8), (unique, 0x10000871, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2146ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000889, 8), (unique, 0x10000889, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4e7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000899, 8), (unique, 0x10000899, 8) INT_ADD (unique, 0x10000891, 8) , (const, 0x3c, 8), (unique, 0x10000891, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100003e2, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100003e2, 8) COPY (const, 0x2b57d8, 8)]
[(unique, 0x10000507, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f3, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4e7, 4)]
[ ---  CBRANCH (ram, 0x2149a8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100003e2, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0x100003e2, 8) COPY (const, 0x2b57d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x7, 2), (unique, 0x3100, 8) CAST (unique, 0x100008a9, 8), (unique, 0x100008a9, 8) INT_ADD (unique, 0x100008a1, 8) , (const, 0x62, 8), (unique, 0x100008a1, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x510, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x509, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) CAST (unique, 0x100008c1, 8), (unique, 0x100008c1, 8) INT_ADD (unique, 0x100008b9, 8) , (const, 0x38, 8), (unique, 0x100008b9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008b1, 8), (unique, 0x100008b1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000507, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2146ba, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) INT_OR (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008d1, 8), (unique, 0x100008d1, 8) INT_ADD (unique, 0x100008c9, 8) , (const, 0x64, 8), (unique, 0x100008c9, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x2146ba, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4b7, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 2), (unique, 0x3100, 8) CAST (unique, 0x100008e1, 8), (unique, 0x100008e1, 8) INT_ADD (unique, 0x100008d9, 8) , (const, 0x66, 8), (unique, 0x100008d9, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x214580, 1)]
[ ---  CBRANCH (ram, 0x2144a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x4, 2)]
[ ---  CBRANCH (ram, 0x214550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100003af, 4) , (const, 0x0, 4), (unique, 0x100003af, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x40, 4)]
[ ---  CBRANCH (ram, 0x214550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100008f1, 8), (unique, 0x100008f1, 8) INT_ADD (unique, 0x100008e9, 8) , (const, 0x50, 8), (unique, 0x100008e9, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2147f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000901, 8), (unique, 0x10000901, 8) INT_ADD (unique, 0x100008f9, 8) , (const, 0x64, 8), (unique, 0x100008f9, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe7, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000911, 8), (unique, 0x10000911, 8) INT_ADD (unique, 0x10000909, 8) , (const, 0x3c, 8), (unique, 0x10000909, 8) CAST (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x2144c6, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000587, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2144ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000587, 8) , (unique, 0x1000058f, 8)]
[(unique, 0x1000058f, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000921, 8), (unique, 0x10000921, 8) INT_ADD (unique, 0x10000919, 8) , (const, 0x10, 8), (unique, 0x10000919, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000587, 8) , (unique, 0x1000058f, 8)]
[ ---  CBRANCH (ram, 0x2144d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000921, 8), (unique, 0x10000921, 8) INT_ADD (unique, 0x10000919, 8) , (const, 0x10, 8), (unique, 0x10000919, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000587, 8) , (unique, 0x1000058f, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xad, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x6, 2), (unique, 0x3100, 8) CAST (unique, 0x10000931, 8), (unique, 0x10000931, 8) INT_ADD (unique, 0x10000929, 8) , (const, 0x62, 8), (unique, 0x10000929, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000052f, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[ ---  CBRANCH (ram, 0x21477d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x214750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x100, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x262, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000939, 8) , (register, 0x38, 4), (unique, 0x10000939, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffeff, 4)]
[(unique, 0x1000051f, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000051f, 8) , (unique, 0x10000527, 8)]
[(unique, 0x10000527, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000949, 8), (unique, 0x10000949, 8) INT_ADD (unique, 0x10000941, 8) , (const, 0x10, 8), (unique, 0x10000941, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000051f, 8) , (unique, 0x10000527, 8)]
[ ---  CBRANCH (ram, 0x214760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000949, 8), (unique, 0x10000949, 8) INT_ADD (unique, 0x10000941, 8) , (const, 0x10, 8), (unique, 0x10000941, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000051f, 8) , (unique, 0x10000527, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000951, 8), (unique, 0x10000951, 8) CALL (ram, 0x212f60, 8) , (register, 0x38, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x214573, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000951, 8), (unique, 0x10000951, 8) CALL (ram, 0x212f60, 8) , (register, 0x38, 8) , (const, 0x3, 8)]
[(unique, 0x1000053f, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x214460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000961, 8), (unique, 0x10000961, 8) INT_ADD (unique, 0x10000959, 8) , (const, 0x41, 8), (unique, 0x10000959, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000547, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[ ---  CBRANCH (ram, 0x2147fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x19a, 4)]
[ ---  CBRANCH (ram, 0x214a30, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0xbd80, 8) , (const, 0x0, 4) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000971, 8), (unique, 0x10000971, 8) INT_ADD (unique, 0x10000969, 8) , (const, 0x28, 8), (unique, 0x10000969, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000979, 8), (unique, 0x10000979, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x21483f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ad, 4)]
[(unique, 0x100004ff, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ad, 4)]
[ ---  CBRANCH (ram, 0x214891, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x2148f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000989, 8), (unique, 0x10000989, 8) INT_ADD (unique, 0x10000981, 8) , (const, 0x50, 8), (unique, 0x10000981, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x21489b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000999, 8), (unique, 0x10000999, 8) INT_ADD (unique, 0x10000991, 8) , (const, 0x48, 8), (unique, 0x10000991, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009a1, 8) , (const, 0x2, 4), (unique, 0x100009a1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x215, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x218, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x215, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x212, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009a9, 8) , (const, 0x2, 4), (unique, 0x100009a9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100004ff, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x215, 4)]
[(register, 0xa8, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x21483f, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x231, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x249, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x231, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009b9, 8) , (unique, 0xbc80, 4), (unique, 0x100009b9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000050f, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23d, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009b1, 8), (unique, 0x100009b1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x1000050f, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x231, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x231, 4)]
[ ---  CBRANCH (ram, 0x21483f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210b20, 8) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x214573, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c1, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009c9, 8) , (unique, 0xbc80, 4), (unique, 0x100009c9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100004ff, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009c1, 8), (unique, 0x100009c1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) INT_OR (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009d9, 8), (unique, 0x100009d9, 8) INT_ADD (unique, 0x100009d1, 8) , (const, 0x64, 8), (unique, 0x100009d1, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1cd, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 4), (unique, 0x3100, 8) CAST (unique, 0x100009e9, 8), (unique, 0x100009e9, 8) INT_ADD (unique, 0x100009e1, 8) , (const, 0x38, 8), (unique, 0x100009e1, 8) CAST (unique, 0xbd80, 8), (register, 0xa8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xa8, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000597, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100004db, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x214573, 1) , (unique, 0x100004da, 1), (unique, 0x100004da, 1) INT_NOTEQUAL (unique, 0x100004d2, 8) , (const, 0x0, 8), (unique, 0x100004d2, 8) MULTIEQUAL (unique, 0x10000597, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100004db, 8) , (const, 0x1ed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a11, 8), (unique, 0x10000a11, 8) INT_ADD (unique, 0x10000a09, 8) , (const, 0x28, 8), (unique, 0x10000a09, 8) CAST (unique, 0x100004d2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a01, 8), (unique, 0x10000a01, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009f9, 8), (unique, 0x100009f9, 8) INT_ADD (unique, 0x100009f1, 8) , (const, 0x8, 8), (unique, 0x100009f1, 8) CAST (unique, 0x100004d2, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a21, 8), (unique, 0x10000a21, 8) INT_ADD (unique, 0x10000a19, 8) , (const, 0x10, 8), (unique, 0x10000a19, 8) CAST (unique, 0x100004d2, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x129, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100004db, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2145a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000a49, 8), (unique, 0x10000a49, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a41, 8), (unique, 0x10000a41, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a39, 8), (unique, 0x10000a39, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a31, 8), (unique, 0x10000a31, 8) INT_ADD (unique, 0x10000a29, 8) , (const, 0x8, 8), (unique, 0x10000a29, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) INT_SEXT (unique, 0x10000a51, 4), (unique, 0x10000a51, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x2f, 1), (register, 0x38, 8) CAST (unique, 0x10000a5d, 8), (unique, 0x10000a5d, 8) INT_ADD (unique, 0x10000a55, 8) , (register, 0x10, 8), (unique, 0x10000a55, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x175, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x175, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x163, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x175, 4)]
[ ---  CALL (ram, 0x1212b0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a7d, 8), (unique, 0x10000a7d, 8) INT_ADD (unique, 0x10000a75, 8) , (const, 0x42, 8), (unique, 0x10000a75, 8) CAST (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a6d, 8), (unique, 0x10000a6d, 8) INT_ADD (unique, 0x10000a65, 8) , (const, 0x70, 8), (unique, 0x10000a65, 8) CAST (register, 0x18, 8), (register, 0x38, 8) CAST (unique, 0x10000a5d, 8), (unique, 0x10000a5d, 8) INT_ADD (unique, 0x10000a55, 8) , (register, 0x10, 8), (unique, 0x10000a55, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000537, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x214460, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x1000052f, 8) , (unique, 0x10000537, 8) , (unique, 0x1000053f, 8) , (unique, 0x10000547, 8) , (unique, 0x1000054f, 8) , (unique, 0x10000557, 8) , (unique, 0x1000055f, 8) , (unique, 0x10000567, 8) , (unique, 0x1000059f, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x214a2b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a85, 8), (unique, 0x10000a85, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xde, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xde, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
