[ ---  CBRANCH (ram, 0x28a2e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000090, 8), (unique, 0x10000090, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x10, 4) INT_AND (unique, 0x1000004d, 4) , (const, 0xf, 4), (unique, 0x1000004d, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x28a280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000061, 8) , (const, 0x0, 8), (unique, 0x10000061, 8) INT_AND (unique, 0x100000d0, 8) , (const, 0xf, 8), (unique, 0x100000d0, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x28a1d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_SUB (const, 0x10, 4) , (register, 0x10, 4), (register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x3a, 8), (register, 0x1200, 16) CALLOTHER (const, 0x92, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100000ec, 8), (unique, 0x100000ec, 8) PTRADD (unique, 0x10000080, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000080, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af900, 8), (register, 0x80, 8) CAST (unique, 0x100000e4, 8), (unique, 0x100000e4, 8) INT_AND (unique, 0x100000dc, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100000dc, 8) CAST (register, 0x30, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100000d8, 4), (unique, 0x100000d8, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x28a2f2, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x3a, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x28a1d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x28a1d7, 1)]
[ ---  CBRANCH (ram, 0x28a2e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x10, 4), (register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x3a, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x28a1d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000c8, 8), (unique, 0x100000c8, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000f4, 8), (unique, 0x100000f4, 8) CALL (ram, 0x1bb2f0, 8)]
[(register, 0x1260, 16) MULTIEQUAL (unique, 0x5300, 16) , (unique, 0x5300, 16) , (register, 0x1200, 16) , (register, 0x1200, 16) , (unique, 0x5300, 16)]
[(unique, 0x10000060, 1) COPY (const, 0x0, 1)]
[(register, 0x10, 4) INT_AND (unique, 0x10000055, 4) , (const, 0xf, 4), (unique, 0x10000055, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x28a21e, 1) , (unique, 0x10000072, 1), (unique, 0x10000072, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000069, 8) , (const, 0x0, 8), (unique, 0x10000069, 8) INT_AND (unique, 0x100000fc, 8) , (const, 0xf, 8), (unique, 0x100000fc, 8) CAST (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0xe4, 4) , (register, 0x1260, 16) , (register, 0x1220, 16) , (const, 0x2, 8), (register, 0x1220, 16) CALLOTHER (const, 0x92, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000118, 8), (unique, 0x10000118, 8) PTRADD (unique, 0x10000078, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000078, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af900, 8), (register, 0x30, 8) CAST (unique, 0x10000110, 8), (unique, 0x10000110, 8) INT_AND (unique, 0x10000108, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000108, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000104, 4), (unique, 0x10000104, 4) CAST (register, 0x10, 4)]
[(register, 0x200, 1) INT_LESS (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_SUB (const, 0x10, 4) , (register, 0x10, 4), (register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (register, 0x1220, 16) , (register, 0x1220, 16) , (const, 0x3a, 8), (register, 0x1220, 16) CALLOTHER (const, 0x92, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000118, 8), (unique, 0x10000118, 8) PTRADD (unique, 0x10000078, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000078, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af900, 8), (register, 0x30, 8) CAST (unique, 0x10000110, 8), (unique, 0x10000110, 8) INT_AND (unique, 0x10000108, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000108, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000104, 4), (unique, 0x10000104, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x28a2e0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) BOOL_AND (unique, 0xcf00, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESSEQUAL (unique, 0x10000120, 4) , (unique, 0x10000124, 4), (unique, 0x10000124, 4) CAST (register, 0x0, 4), (unique, 0x10000120, 4) CAST (register, 0x8, 4), (unique, 0xcf00, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_SUB (const, 0x10, 4) , (register, 0x10, 4), (register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (register, 0x1220, 16) , (register, 0x1220, 16) , (const, 0x3a, 8), (register, 0x1220, 16) CALLOTHER (const, 0x92, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000118, 8), (unique, 0x10000118, 8) PTRADD (unique, 0x10000078, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000078, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af900, 8), (register, 0x30, 8) CAST (unique, 0x10000110, 8), (unique, 0x10000110, 8) INT_AND (unique, 0x10000108, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000108, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000104, 4), (unique, 0x10000104, 4) CAST (register, 0x10, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x1000002b, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (register, 0x1260, 16) , (unique, 0x5300, 16) , (const, 0x2, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x28a26f, 1) , (unique, 0x1000005f, 1), (unique, 0x1000005f, 1) MULTIEQUAL (unique, 0x10000060, 1) , (register, 0x200, 1)]
[ ---  CBRANCH (ram, 0x28a250, 1) , (unique, 0x10000028, 1), (unique, 0x10000028, 1) BOOL_NEGATE (unique, 0x1000002b, 1)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 4) CALLOTHER (const, 0xe4, 4) , (register, 0x1260, 16) , (unique, 0x5300, 16) , (const, 0x2, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a248, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000088, 8) , (register, 0x38, 8), (unique, 0x10000088, 8) CAST (unique, 0x10000128, 8), (unique, 0x10000128, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffef, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100000a8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000a8, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x28a2e0, 1) , (register, 0x206, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
