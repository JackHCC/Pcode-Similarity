[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000073a, 8), (unique, 0x1000073a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45e9b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000092, 4) , (const, 0x0, 4), (unique, 0x10000092, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000742, 8), (unique, 0x10000742, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000074a, 8), (unique, 0x1000074a, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x45e9b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000752, 8), (unique, 0x10000752, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0xb8, 8) CAST (unique, 0x10000772, 8), (unique, 0x10000772, 8) INT_XOR (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000076a, 8), (unique, 0x1000076a, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xb8, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000762, 8) , (const, 0x2f, 4), (unique, 0x10000762, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000075a, 8) , (const, 0x11, 4), (unique, 0x1000075a, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x45eef1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f0f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x949, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000375, 8) , (unique, 0x10000365, 8) , (const, 0x1a4, 4) , (unique, 0x100003b5, 8), (unique, 0x100003b5, 8) COPY (const, 0x49f880, 8), (unique, 0x10000375, 8) COPY (const, 0x49f46e, 8), (unique, 0x10000365, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000077a, 8) , (const, 0x0, 8), (unique, 0x1000077a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45eb8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000782, 8), (unique, 0x10000782, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (stack, 0xffffffffffffff50, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x93b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x907, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x93b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x907, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x93b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x907, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x93b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x907, 4)]
[(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff50, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x45eb8d, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100005ea, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x45e9d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x100005f2, 8) COPY (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ea, 8) , (unique, 0x100005f2, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100005da, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45e9fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0x100005e2, 8) COPY (unique, 0x3800, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100005da, 8) , (unique, 0x100005e2, 8)]
[ ---  CBRANCH (ram, 0x45ed20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45ea07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f0ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8d0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x8d0, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x1000036d, 8) , (unique, 0x1000035d, 8) , (const, 0x234, 4) , (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) COPY (const, 0x49f880, 8), (unique, 0x1000036d, 8) COPY (const, 0x49f46e, 8), (unique, 0x1000035d, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100005b2, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x10000692, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_SEXT (unique, 0x1000078a, 4), (unique, 0x1000078a, 4) CAST (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x45f084, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45f099, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001b0, 4) , (const, 0x0, 4), (unique, 0x100001b0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000796, 8), (unique, 0x10000796, 8) INT_ADD (unique, 0x1000078e, 8) , (const, 0x1, 8), (unique, 0x1000078e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100007ae, 8), (unique, 0x100007ae, 8) INT_ADD (unique, 0x100007a6, 8) , (unique, 0x10000465, 8), (unique, 0x100007a6, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000465, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000079e, 8), (unique, 0x1000079e, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100005aa, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000796, 8), (unique, 0x10000796, 8) INT_ADD (unique, 0x1000078e, 8) , (const, 0x1, 8), (unique, 0x1000078e, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000068a, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45eecb, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000796, 8), (unique, 0x10000796, 8) INT_ADD (unique, 0x1000078e, 8) , (const, 0x1, 8), (unique, 0x1000078e, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000582, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000662, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x45edb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007be, 8), (unique, 0x100007be, 8) INT_ADD (unique, 0x100007b6, 8) , (const, 0x2, 8), (unique, 0x100007b6, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100007de, 8), (unique, 0x100007de, 8) INT_ADD (unique, 0x100007d6, 8) , (unique, 0x1000046d, 8), (unique, 0x100007d6, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000046d, 8) INT_ADD (register, 0x18, 8) , (const, 0x5, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007ce, 8), (unique, 0x100007ce, 8) INT_ADD (unique, 0x100007c6, 8) , (const, 0x1, 8), (unique, 0x100007c6, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45eec8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007be, 8), (unique, 0x100007be, 8) INT_ADD (unique, 0x100007b6, 8) , (const, 0x2, 8), (unique, 0x100007b6, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000059a, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100005aa, 8) , (unique, 0x100005b2, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000067a, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000068a, 8) , (unique, 0x10000692, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x45edb9, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000068a, 8) , (unique, 0x10000692, 8) , (unique, 0x3100, 8)]
[(register, 0xa8, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (register, 0x98, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x98, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4)]
[ ---  BRANCH (ram, 0x45eb8d, 1)]
[ ---  CBRANCH (ram, 0x45f08f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x3, 8)]
[(unique, 0x10000592, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000672, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x45edb9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007ee, 8), (unique, 0x100007ee, 8) INT_ADD (unique, 0x100007e6, 8) , (const, 0x3, 8), (unique, 0x100007e6, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000080e, 8), (unique, 0x1000080e, 8) INT_ADD (unique, 0x10000806, 8) , (const, 0x7, 8), (unique, 0x10000806, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007fe, 8), (unique, 0x100007fe, 8) INT_ADD (unique, 0x100007f6, 8) , (const, 0x2, 8), (unique, 0x100007f6, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000058a, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007ee, 8), (unique, 0x100007ee, 8) INT_ADD (unique, 0x100007e6, 8) , (const, 0x3, 8), (unique, 0x100007e6, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x1000066a, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x4, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000662, 8) , (unique, 0x1000066a, 8) , (unique, 0x10000672, 8) , (unique, 0x1000067a, 8) , (unique, 0x10000692, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000582, 8) , (unique, 0x1000058a, 8) , (unique, 0x10000592, 8) , (unique, 0x1000059a, 8) , (unique, 0x100005b2, 8)]
[ ---  CBRANCH (ram, 0x45f068, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbb00, 1) , (const, 0x81, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000816, 8), (unique, 0x10000816, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45edee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002cb, 4) , (const, 0x0, 4), (unique, 0x100002cb, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0xa8, 4) COPY (const, 0x6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10000826, 8), (unique, 0x10000826, 8) INT_ADD (unique, 0x1000081e, 8) , (register, 0x18, 8), (unique, 0x1000081e, 8) CAST (register, 0x8, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x45eb8d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000083e, 8) , (unique, 0xbb00, 1), (unique, 0x1000083e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000836, 8), (unique, 0x10000836, 8) INT_ADD (unique, 0x1000082e, 8) , (const, 0x7, 8), (unique, 0x1000082e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbb00, 1), (unique, 0x3800, 8) CAST (unique, 0x1000085e, 8), (unique, 0x1000085e, 8) INT_ADD (unique, 0x10000856, 8) , (const, 0x1, 8), (unique, 0x10000856, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000084e, 8), (unique, 0x1000084e, 8) INT_ADD (unique, 0x10000846, 8) , (const, 0x6, 8), (unique, 0x10000846, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbb00, 1), (unique, 0x3800, 8) CAST (unique, 0x1000087e, 8), (unique, 0x1000087e, 8) INT_ADD (unique, 0x10000876, 8) , (const, 0x2, 8), (unique, 0x10000876, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000086e, 8), (unique, 0x1000086e, 8) INT_ADD (unique, 0x10000866, 8) , (const, 0x5, 8), (unique, 0x10000866, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbb00, 1), (unique, 0x3800, 8) CAST (unique, 0x10000896, 8), (unique, 0x10000896, 8) INT_ADD (unique, 0x1000088e, 8) , (const, 0x3, 8), (unique, 0x1000088e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000886, 8), (unique, 0x10000886, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100006aa, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100006aa, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000089e, 8), (unique, 0x1000089e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0xfffffff8, 4), (register, 0x98, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x45ea07, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x10000712, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x45ea2c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) INT_ADD (stack, 0xffffffffffffffb0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0x10000712, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100005ca, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100008ce, 8), (unique, 0x100008ce, 8) INT_SUB (unique, 0x100008be, 8) , (unique, 0x100008c6, 8), (unique, 0x100008c6, 8) CAST (register, 0xa0, 8), (unique, 0x100008be, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ea46, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (unique, 0x100008d6, 8) , (unique, 0x100008de, 8), (unique, 0x100008de, 8) CAST (register, 0x10, 8), (unique, 0x100008d6, 8) CAST (register, 0x98, 8), (register, 0x10, 8) CAST (unique, 0x100008ce, 8), (unique, 0x100008ce, 8) INT_SUB (unique, 0x100008be, 8) , (unique, 0x100008c6, 8), (unique, 0x100008c6, 8) CAST (register, 0xa0, 8), (unique, 0x100008be, 8) CAST (unique, 0xbd80, 8), (register, 0x98, 8) CAST (unique, 0x100008b6, 8), (unique, 0x100008b6, 8) INT_SUB (unique, 0x100008a6, 8) , (unique, 0x100008ae, 8), (unique, 0x100008ae, 8) CAST (unique, 0xbd80, 8), (unique, 0x100008a6, 8) CAST (register, 0x8, 8)]
[(unique, 0x100005d2, 8) COPY (register, 0x98, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100008f6, 8), (unique, 0x100008f6, 8) INT_ADD (unique, 0x100008ee, 8) , (const, 0x3, 8), (unique, 0x100008ee, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ca, 8) , (unique, 0x100005d2, 8)]
[(unique, 0x100005ba, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ca, 8) , (unique, 0x100005d2, 8)]
[ ---  CBRANCH (ram, 0x45ea51, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100008e6, 8) , (const, 0x0, 8), (unique, 0x100008e6, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ca, 8) , (unique, 0x100005d2, 8)]
[(unique, 0x100005c2, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000062a, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100006d2, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45eee9, 1) , (unique, 0x13280, 1), (unique, 0x13280, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SRIGHT (unique, 0x100008fe, 8) , (const, 0x2, 4), (unique, 0x100008fe, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ba, 8) , (unique, 0x100005c2, 8)]
[ ---  CBRANCH (ram, 0x45ebc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c4, 4) , (const, 0x0, 4), (unique, 0x100000c4, 4) INT_AND (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x45ef54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x45ef78, 1)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100006d2, 8) , (register, 0xb0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x45ef60, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000906, 4) , (const, 0x0, 4), (unique, 0x10000906, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000062a, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x0, 4)]
[(unique, 0x10000622, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100006ca, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45ec04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x45ebe0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100006d2, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x45ebd0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000090a, 4), (unique, 0x1000090a, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x0, 4)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45ec00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x71d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x71d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x71d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45ebe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000061a, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x100006c2, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000642, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100006f2, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45ea90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100006d2, 8) , (register, 0xb0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x45ea78, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000090e, 4) , (const, 0x0, 4), (unique, 0x1000090e, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000062a, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x30, 8)]
[(register, 0xa8, 4) COPY (const, 0x6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x0, 4)]
[(unique, 0x10000612, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100006ba, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45ec04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100006ea, 8) , (unique, 0x100006f2, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x45eb50, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000912, 4) , (const, 0x0, 4), (unique, 0x10000912, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000063a, 8) , (unique, 0x10000642, 8)]
[(register, 0xa8, 4) COPY (const, 0x6, 4)]
[(unique, 0x1000070a, 8) COPY (unique, 0x10000702, 8), (unique, 0x10000702, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45eaad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x0, 4)]
[(unique, 0x1000060a, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x1000063a, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100006b2, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100006ea, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45ec04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100006b2, 8) , (unique, 0x100006ba, 8) , (unique, 0x100006c2, 8) , (unique, 0x100006ca, 8) , (unique, 0x100006d2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000060a, 8) , (unique, 0x10000612, 8) , (unique, 0x1000061a, 8) , (unique, 0x10000622, 8) , (unique, 0x1000062a, 8)]
[(register, 0xa8, 4) COPY (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x45eaa1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000060a, 8) , (unique, 0x10000612, 8) , (unique, 0x1000061a, 8) , (unique, 0x10000622, 8) , (unique, 0x1000062a, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x7, 4), (register, 0xa8, 4) INT_AND (unique, 0x10000158, 4) , (const, 0xfffffffe, 4), (unique, 0x10000158, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x45eaa1, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x45eb85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000702, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000091e, 8), (unique, 0x1000091e, 8) INT_ADD (unique, 0x10000916, 8) , (const, 0x14, 8), (unique, 0x10000916, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45edfd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000926, 8), (unique, 0x10000926, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(unique, 0x10000722, 4) COPY (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x45ec42, 1)]
[(unique, 0x1000071a, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x45ec42, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (register, 0xa0, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (stack, 0xffffffffffffff50, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21a, 4)]
[(unique, 0x10000512, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x21a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45ec38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff50, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0xb0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4)]
[(unique, 0x1000071e, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x45eb35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x45ee0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0xb0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45ee18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x45eeba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (stack, 0xffffffffffffff60, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (stack, 0xffffffffffffffb0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000094e, 8), (unique, 0x1000094e, 8) INT_SUB (unique, 0x10000946, 8) , (register, 0x8, 8), (unique, 0x10000946, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x8, 8) CAST (unique, 0x1000093e, 8), (unique, 0x1000093e, 8) INT_SUB (unique, 0x1000092e, 8) , (unique, 0x10000936, 8), (unique, 0x10000936, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0x1000092e, 8) CAST (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x45eb2d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000956, 8), (unique, 0x10000956, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x1000069a, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x45ee3b, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESSEQUAL (unique, 0x10000976, 8) , (unique, 0x1000097e, 8), (unique, 0x1000097e, 8) CAST (register, 0x98, 8), (unique, 0x10000976, 8) CAST (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000096e, 8), (unique, 0x1000096e, 8) INT_SUB (unique, 0x1000095e, 8) , (unique, 0x10000966, 8), (unique, 0x10000966, 8) CAST (register, 0xa0, 8), (unique, 0x1000095e, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100006a2, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000652, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000996, 8), (unique, 0x10000996, 8) INT_ADD (unique, 0x1000098e, 8) , (const, 0x3, 8), (unique, 0x1000098e, 8) CAST (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x1000069a, 8) , (unique, 0x100006a2, 8)]
[ ---  CBRANCH (ram, 0x45ee46, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x10000986, 8), (unique, 0x10000986, 8) CAST (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x1000069a, 8) , (unique, 0x100006a2, 8)]
[(unique, 0x1000065a, 8) COPY (register, 0x98, 8)]
[(unique, 0x1000053a, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45f02d, 1) , (unique, 0x13280, 1), (unique, 0x13280, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_SRIGHT (unique, 0x1000099e, 8) , (const, 0x2, 4), (unique, 0x1000099e, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000652, 8) , (unique, 0x1000065a, 8)]
[ ---  CBRANCH (ram, 0x45ef85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000054a, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45efb3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x1000053a, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45efa0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100009a6, 4) , (const, 0x0, 4), (unique, 0x100009a6, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5ae, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5ae, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5ae, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x45efa6, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f062, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x4, 8)]
[(unique, 0x10000532, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x45f030, 1)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000542, 8) , (unique, 0x1000054a, 8)]
[(unique, 0x10000732, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45f010, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100009aa, 4) , (const, 0x0, 4), (unique, 0x100009aa, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x1000052a, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000542, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45f030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000055a, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45ee87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x1000053a, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45ee70, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100009ae, 4) , (const, 0x0, 4), (unique, 0x100009ae, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000522, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45f030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000552, 8) , (unique, 0x1000055a, 8)]
[(unique, 0x1000072a, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x45efc3, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100009b2, 4) , (const, 0x0, 4), (unique, 0x100009b2, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x1000051a, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000552, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45f030, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x1000051a, 8) , (unique, 0x10000522, 8) , (unique, 0x1000052a, 8) , (unique, 0x10000532, 8) , (unique, 0x1000053a, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ee92, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (register, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ee92, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0x10000512, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000324, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000032c, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000334, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x45efe7, 1) , (unique, 0x10000323, 1), (unique, 0x10000323, 1) INT_EQUAL (unique, 0x10000512, 8) , (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) MULTIEQUAL (unique, 0x1000072a, 8) , (unique, 0x10000732, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000324, 8) , (const, 0x473, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000032c, 8) , (const, 0x473, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000334, 8) , (const, 0x473, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x1000038d, 8) , (unique, 0x10000345, 8) , (const, 0x2eb, 4) , (unique, 0x10000395, 8), (unique, 0x10000395, 8) COPY (const, 0x49f880, 8), (unique, 0x1000038d, 8) COPY (const, 0x49f500, 8), (unique, 0x10000345, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45efe7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000512, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x46a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000324, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x46a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x46a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000334, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x1000037d, 8) , (unique, 0x1000034d, 8) , (const, 0x2ea, 4) , (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) COPY (const, 0x49f880, 8), (unique, 0x1000037d, 8) COPY (const, 0x49f482, 8), (unique, 0x1000034d, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45eb2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000512, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009be, 8), (unique, 0x100009be, 8) INT_ADD (unique, 0x100009b6, 8) , (const, 0x14, 8), (unique, 0x100009b6, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x45eb2d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000726, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f0e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x45eb8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x7, 4), (register, 0xa8, 4) MULTIEQUAL (unique, 0x1000071a, 4) , (unique, 0x1000071e, 4) , (unique, 0x10000722, 4) , (unique, 0x10000726, 4)]
[ ---  CBRANCH (ram, 0x45eb8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f0ab, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100009d6, 8), (unique, 0x100009d6, 8) INT_SUB (unique, 0x100009c6, 8) , (unique, 0x100009ce, 8), (unique, 0x100009ce, 8) CAST (unique, 0xbd80, 8), (unique, 0x100009c6, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x395, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x395, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x395, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000385, 8) , (unique, 0x10000355, 8) , (const, 0x31e, 4) , (unique, 0x100003a5, 8), (unique, 0x100003a5, 8) COPY (const, 0x49f880, 8), (unique, 0x10000385, 8) COPY (const, 0x49f493, 8), (unique, 0x10000355, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45f0a4, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x45ed0c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009e6, 8), (unique, 0x100009e6, 8) INT_ADD (unique, 0x100009de, 8) , (const, 0x1, 8), (unique, 0x100009de, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009f6, 8) , (unique, 0xbb00, 1), (unique, 0x100009f6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100009ee, 8), (unique, 0x100009ee, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ed04, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x100009e6, 8), (unique, 0x100009e6, 8) INT_ADD (unique, 0x100009de, 8) , (const, 0x1, 8), (unique, 0x100009de, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a06, 8), (unique, 0x10000a06, 8) INT_ADD (unique, 0x100009fe, 8) , (const, 0x2, 8), (unique, 0x100009fe, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000a26, 8), (unique, 0x10000a26, 8) INT_ADD (unique, 0x10000a1e, 8) , (const, 0x5, 8), (unique, 0x10000a1e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a16, 8), (unique, 0x10000a16, 8) INT_ADD (unique, 0x10000a0e, 8) , (const, 0x1, 8), (unique, 0x10000a0e, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ed04, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a06, 8), (unique, 0x10000a06, 8) INT_ADD (unique, 0x100009fe, 8) , (const, 0x2, 8), (unique, 0x100009fe, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a36, 8), (unique, 0x10000a36, 8) INT_ADD (unique, 0x10000a2e, 8) , (const, 0x3, 8), (unique, 0x10000a2e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000a56, 8), (unique, 0x10000a56, 8) INT_ADD (unique, 0x10000a4e, 8) , (const, 0x6, 8), (unique, 0x10000a4e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a46, 8), (unique, 0x10000a46, 8) INT_ADD (unique, 0x10000a3e, 8) , (const, 0x2, 8), (unique, 0x10000a3e, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ed04, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a36, 8), (unique, 0x10000a36, 8) INT_ADD (unique, 0x10000a2e, 8) , (const, 0x3, 8), (unique, 0x10000a2e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000a76, 8), (unique, 0x10000a76, 8) INT_ADD (unique, 0x10000a6e, 8) , (const, 0x7, 8), (unique, 0x10000a6e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a66, 8), (unique, 0x10000a66, 8) INT_ADD (unique, 0x10000a5e, 8) , (const, 0x3, 8), (unique, 0x10000a5e, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45ed04, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a86, 8), (unique, 0x10000a86, 8) INT_ADD (unique, 0x10000a7e, 8) , (const, 0x5, 8), (unique, 0x10000a7e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a96, 8) , (unique, 0xbb00, 1), (unique, 0x10000a96, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000a8e, 8), (unique, 0x10000a8e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x45ed04, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a86, 8), (unique, 0x10000a86, 8) INT_ADD (unique, 0x10000a7e, 8) , (const, 0x5, 8), (unique, 0x10000a7e, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000572, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100005fa, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000aa6, 8), (unique, 0x10000aa6, 8) INT_ADD (unique, 0x10000a9e, 8) , (const, 0x9, 8), (unique, 0x10000a9e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10000ab6, 8), (unique, 0x10000ab6, 8) INT_ADD (unique, 0x10000aae, 8) , (const, 0x1, 8), (unique, 0x10000aae, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000572, 8) , (unique, 0x1000057a, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000abe, 8), (unique, 0x10000abe, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000572, 8) , (unique, 0x1000057a, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100005fa, 8) , (unique, 0x10000602, 8)]
[(unique, 0x1000057a, 8) COPY (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10000ab6, 8), (unique, 0x10000ab6, 8) INT_ADD (unique, 0x10000aae, 8) , (const, 0x1, 8), (unique, 0x10000aae, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000572, 8) , (unique, 0x1000057a, 8)]
[(unique, 0x10000602, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100005fa, 8) , (unique, 0x10000602, 8)]
[ ---  CBRANCH (ram, 0x45ecea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10000ab6, 8), (unique, 0x10000ab6, 8) INT_ADD (unique, 0x10000aae, 8) , (const, 0x1, 8), (unique, 0x10000aae, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000572, 8) , (unique, 0x1000057a, 8)]
[(register, 0x8, 4) INT_SUB (stack, 0xffffffffffffff58, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff58, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x45eb8d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000ac6, 8), (unique, 0x10000ac6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x45ea1c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000070a, 8) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45f0f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000ace, 8), (unique, 0x10000ace, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1de, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa8, 4)]
