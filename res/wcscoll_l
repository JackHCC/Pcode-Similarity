[ ---  CBRANCH (ram, 0x1b683f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c87, 8), (unique, 0x10000c87, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x40, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000539, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x10000539, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1aa580, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6874, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1b6874, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) INT_SUB (unique, 0x10000329, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0x10000329, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x1b605d, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c8f, 8), (unique, 0x10000c8f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c9f, 8), (unique, 0x10000c9f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x90, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ca7, 8), (unique, 0x10000ca7, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x98, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000caf, 8), (unique, 0x10000caf, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6855, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000092, 8) , (const, 0x0, 8), (unique, 0x10000092, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c97, 8), (unique, 0x10000c97, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x100004f9, 8) , (unique, 0x100004d9, 8) , (const, 0x113, 4) , (unique, 0x10000519, 8), (unique, 0x10000519, 8) COPY (const, 0x2915f0, 8), (unique, 0x100004f9, 8) COPY (const, 0x291290, 8), (unique, 0x100004d9, 8) COPY (const, 0x28d8a4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b68c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000009a, 8) , (const, 0x0, 8), (unique, 0x1000009a, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000509, 8) , (unique, 0x100004f1, 8) , (const, 0x114, 4) , (unique, 0x10000531, 8), (unique, 0x10000531, 8) COPY (const, 0x2915f0, 8), (unique, 0x10000509, 8) COPY (const, 0x291580, 8), (unique, 0x100004f1, 8) COPY (const, 0x28d8a4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b68a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000353, 8) , (const, 0x0, 8), (unique, 0x10000353, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000511, 8) , (unique, 0x100004e9, 8) , (const, 0x115, 4) , (unique, 0x10000529, 8), (unique, 0x10000529, 8) COPY (const, 0x2915f0, 8), (unique, 0x10000511, 8) COPY (const, 0x2915b8, 8), (unique, 0x100004e9, 8) COPY (const, 0x28d8a4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b688a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000035b, 8) , (const, 0x0, 8), (unique, 0x1000035b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000501, 8) , (unique, 0x100004e1, 8) , (const, 0x116, 4) , (unique, 0x10000521, 8), (unique, 0x10000521, 8) COPY (const, 0x2915f0, 8), (unique, 0x10000501, 8) COPY (const, 0x2912c8, 8), (unique, 0x100004e1, 8) COPY (const, 0x28d8a4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffff60, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff93, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffff93, 1) MULTIEQUAL (stack, 0xffffffffffffff93, 1) , (stack, 0xffffffffffffff93, 1)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff4c, 4) COPY (const, 0x0, 4)]
[(unique, 0x100004b7, 4) SUBPIECE (stack, 0xffffffffffffff60, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0xbe00, 8)]
[(register, 0xb0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff70, 8) COPY (const, 0x0, 8)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cb7, 8), (unique, 0x10000cb7, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (stack, 0xffffffffffffff60, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (stack, 0xffffffffffffff28, 8), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff10, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff20, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff08, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000bd7, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000bdf, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff93, 1) MULTIEQUAL (stack, 0xffffffffffffff93, 1) , (stack, 0xffffffffffffff93, 1)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000bdf, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(stack, 0xffffffffffffff08, 8) MULTIEQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(stack, 0xffffffffffffff40, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff50, 8) COPY (stack, 0xffffffffffffff68, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x10000bd7, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff93, 1) MULTIEQUAL (stack, 0xffffffffffffff93, 1) , (stack, 0xffffffffffffff93, 1)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff08, 8) MULTIEQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (register, 0x18, 8)]
[(unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffff40, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (unique, 0xbe00, 8)]
[(unique, 0x10000c6f, 4) COPY (stack, 0xffffffffffffff4c, 4)]
[ ---  CBRANCH (ram, 0x1b6321, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff20, 8) , (const, 0xffffffffffffffff, 8), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000c67, 8) COPY (stack, 0xffffffffffffff18, 8)]
[ ---  CBRANCH (ram, 0x1b64c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000a1f, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000a37, 8) COPY (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x1b5e47, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff08, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000a17, 8) , (unique, 0x10000a1f, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000a2f, 8) , (unique, 0x10000a37, 8)]
[ ---  CBRANCH (ram, 0x1b5db0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000cbf, 4) , (const, 0x0, 4), (unique, 0x10000cbf, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (unique, 0xbd80, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000a2f, 8) , (unique, 0x10000a37, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000cc7, 8), (unique, 0x10000cc7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000cc3, 4), (unique, 0x10000cc3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000468, 8) INT_SEXT (unique, 0x10000cd3, 4), (unique, 0x10000cd3, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000460, 8) PTRADD (unique, 0x10000471, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000471, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b6086, 1) , (unique, 0x10000470, 1), (unique, 0x10000470, 1) INT_SLESS (unique, 0x10000ccf, 4) , (const, 0x0, 4), (unique, 0x10000ccf, 4) CAST (unique, 0x1000045c, 4), (unique, 0x1000045c, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x10000468, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b60b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000468, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b60e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000471, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000997, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b60ab, 1)]
[ ---  CBRANCH (ram, 0x1b60a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000997, 8) , (unique, 0x1000099f, 8)]
[(unique, 0x1000099f, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b60e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000460, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000611, 8) , (const, 0x4, 8), (unique, 0x10000611, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b60e0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10000cd7, 4), (unique, 0x10000cd7, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000468, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000471, 8) , (unique, 0x10000631, 8) , (const, 0x4, 8), (unique, 0x10000631, 8) INT_ADD (unique, 0x10000468, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10000460, 8) , (unique, 0x10000679, 8) , (const, 0x4, 8), (unique, 0x10000679, 8) INT_MULT (unique, 0x10000468, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b5de0, 1)]
[ ---  CBRANCH (ram, 0x1b60e9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000cdb, 4) , (unique, 0xbc80, 4), (unique, 0x10000cdb, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000471, 8) , (unique, 0x10000659, 8) , (const, 0x4, 8), (unique, 0x10000659, 8) INT_ADD (unique, 0x10000651, 8) , (const, 0x1, 8), (unique, 0x10000651, 8) INT_MULT (unique, 0x10000468, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10000460, 8) , (unique, 0x10000669, 8) , (const, 0x4, 8), (unique, 0x10000669, 8) INT_MULT (unique, 0x10000468, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b5de0, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000468, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ce7, 8), (unique, 0x10000ce7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000ce3, 4), (unique, 0x10000ce3, 4) CAST (register, 0x38, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000cdf, 4), (unique, 0x10000cdf, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x1000045c, 4), (register, 0x38, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b5db3, 1)]
[ ---  CBRANCH (ram, 0x1b6106, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000468, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000471, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100009b7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b5e1d, 1)]
[ ---  CBRANCH (ram, 0x1b5e10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000468, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009b7, 8) , (unique, 0x100009bf, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x100009bf, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000460, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000579, 8) , (const, 0x4, 8), (unique, 0x10000579, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000460, 8) , (unique, 0x10000468, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000460, 8) , (unique, 0x10000468, 8) , (const, 0x4, 8)]
[(unique, 0x10000965, 4) MULTIEQUAL (unique, 0x1000045c, 4) , (unique, 0x1000045c, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(unique, 0x10000a17, 8) COPY (unique, 0x10000954, 8), (unique, 0x10000954, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000a2f, 8) COPY (unique, 0x1000095d, 8), (unique, 0x1000095d, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b5dc0, 1) , (unique, 0x1000095c, 1), (unique, 0x1000095c, 1) INT_LESS (unique, 0x10000954, 8) , (stack, 0xffffffffffffff08, 8), (unique, 0x10000954, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_AND (unique, 0x10000965, 4) , (const, 0xffffff, 4)]
[(register, 0x30, 8) INT_SEXT (unique, 0x10000cef, 4), (unique, 0x10000cef, 4) CAST (unique, 0x100000fa, 4), (unique, 0x100000fa, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x0, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff08, 8) , (const, 0x1, 8)]
[(unique, 0x10000a87, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(unique, 0x10000bff, 4) COPY (stack, 0xffffffffffffffac, 4)]
[ ---  CBRANCH (ram, 0x1b67dd, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (stack, 0xffffffffffffff18, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff08, 8)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000b2f, 8) COPY (stack, 0xffffffffffffff18, 8)]
[ ---  BRANCH (ram, 0x1b5ea9, 1)]
[(register, 0x30, 8) INT_SEXT (unique, 0x10000cf3, 4), (unique, 0x10000cf3, 4) CAST (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff20, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000c03, 4) COPY (stack, 0xffffffffffffffac, 4)]
[ ---  BRANCH (ram, 0x1b5e52, 1)]
[(register, 0xb0, 4) INT_ZEXT (stack, 0xffffffffffffff93, 1)]
[(unique, 0x10000a5f, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000ac7, 8) COPY (stack, 0xffffffffffffff18, 8)]
[(unique, 0x10000adf, 4) COPY (register, 0xa8, 4)]
[(unique, 0x10000b0f, 4) COPY (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x1b6393, 1)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000b0f, 4) , (unique, 0x10000b13, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3100, 8)]
[(register, 0xa8, 4) COPY (unique, 0x10000ae7, 4), (unique, 0x10000ae7, 4) MULTIEQUAL (unique, 0x10000adf, 4) , (unique, 0x10000ae3, 4)]
[(register, 0xb8, 8) COPY (unique, 0x10000ad7, 8), (unique, 0x10000ad7, 8) MULTIEQUAL (unique, 0x10000ac7, 8) , (unique, 0x10000acf, 8)]
[ ---  CBRANCH (ram, 0x1b6529, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000a5f, 8) , (unique, 0x10000a67, 8)]
[(register, 0xb0, 1) SUBPIECE (register, 0xb0, 4) , (const, 0x0, 4)]
[(unique, 0x10000c27, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000c3f, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000c47, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10000c57, 4) COPY (register, 0xa8, 4)]
[(unique, 0x10000c5f, 4) COPY (register, 0xa8, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b6358, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000cf7, 4) , (const, 0x0, 4), (unique, 0x10000cf7, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000cff, 8), (unique, 0x10000cff, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000cfb, 4), (unique, 0x10000cfb, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x1000044b, 8) INT_SEXT (unique, 0x10000d0b, 4), (unique, 0x10000d0b, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000443, 8) PTRADD (unique, 0x10000454, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10000454, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b6412, 1) , (unique, 0x10000453, 1), (unique, 0x10000453, 1) INT_SLESS (unique, 0x10000d07, 4) , (const, 0x0, 4), (unique, 0x10000d07, 4) CAST (unique, 0x1000043f, 4), (unique, 0x1000043f, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x1000044b, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6444, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000044b, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000454, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100009c7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b643b, 1)]
[ ---  CBRANCH (ram, 0x1b6430, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009c7, 8) , (unique, 0x100009cf, 8)]
[(unique, 0x100009cf, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000443, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x100008a9, 8) , (const, 0x4, 8), (unique, 0x100008a9, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b6470, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10000d0f, 4), (unique, 0x10000d0f, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x1000044b, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000454, 8) , (unique, 0x100008c9, 8) , (const, 0x4, 8), (unique, 0x100008c9, 8) INT_ADD (unique, 0x1000044b, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10000443, 8) , (unique, 0x10000911, 8) , (const, 0x4, 8), (unique, 0x10000911, 8) INT_MULT (unique, 0x1000044b, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b63bc, 1)]
[ ---  CBRANCH (ram, 0x1b6479, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000d13, 4) , (unique, 0xbc80, 4), (unique, 0x10000d13, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000454, 8) , (unique, 0x100008f1, 8) , (const, 0x4, 8), (unique, 0x100008f1, 8) INT_ADD (unique, 0x100008e9, 8) , (const, 0x1, 8), (unique, 0x100008e9, 8) INT_MULT (unique, 0x1000044b, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10000443, 8) , (unique, 0x10000901, 8) , (const, 0x4, 8), (unique, 0x10000901, 8) INT_MULT (unique, 0x1000044b, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b63bc, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x1000044b, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d1f, 8), (unique, 0x10000d1f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000d1b, 4), (unique, 0x10000d1b, 4) CAST (register, 0x38, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000d17, 4), (unique, 0x10000d17, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x1000043f, 4), (register, 0x38, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b635b, 1)]
[ ---  CBRANCH (ram, 0x1b6496, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000044b, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000454, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100009d7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b63e9, 1)]
[ ---  CBRANCH (ram, 0x1b63e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000044b, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009d7, 8) , (unique, 0x100009df, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b635b, 1)]
[(unique, 0x100009df, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000443, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000861, 8) , (const, 0x4, 8), (unique, 0x10000861, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000443, 8) , (unique, 0x1000044b, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000443, 8) , (unique, 0x1000044b, 8) , (const, 0x4, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000043f, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0x1000043f, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_SRIGHT (unique, 0x10000d27, 4) , (const, 0x18, 4), (unique, 0x10000d27, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000043f, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0x1000043f, 4)]
[(unique, 0x10000aff, 4) COPY (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x1b6373, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(unique, 0x10000b03, 4) COPY (register, 0x30, 4)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x10000aff, 4) , (unique, 0x10000b03, 4)]
[(unique, 0x10000a67, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000acf, 8) COPY (unique, 0x10000abf, 8), (unique, 0x10000abf, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000ae3, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000b13, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x1b6578, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d2f, 8), (unique, 0x10000d2f, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (unique, 0x10000d2b, 4), (unique, 0x10000d2b, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (unique, 0x100004b7, 4), (register, 0x30, 4) INT_MULT (register, 0x30, 4) , (unique, 0xbc80, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)]
[(register, 0xb0, 1) SUBPIECE (register, 0xb0, 4) , (const, 0x0, 4)]
[(unique, 0x10000c2f, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10000c4f, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000421, 1) MULTIEQUAL (register, 0xb0, 1) , (register, 0xb0, 1)]
[(unique, 0x1000042b, 8) MULTIEQUAL (unique, 0x10000c3f, 8) , (register, 0x28, 8)]
[(unique, 0x10000433, 8) MULTIEQUAL (unique, 0x10000c47, 8) , (unique, 0x10000c4f, 8)]
[(unique, 0x1000043b, 4) MULTIEQUAL (unique, 0x10000c57, 4) , (unique, 0x10000b13, 4)]
[(unique, 0x10000419, 8) INT_SEXT (unique, 0x10000d37, 4), (unique, 0x10000d37, 4) CAST (unique, 0x100004b3, 4), (unique, 0x100004b3, 4) MULTIEQUAL (unique, 0x10000c5f, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b659f, 1) , (unique, 0x10000422, 1), (unique, 0x10000422, 1) INT_LESS (stack, 0xffffffffffffff18, 8) , (unique, 0x10000423, 8), (unique, 0x10000423, 8) COPY (unique, 0x10000c37, 8), (unique, 0x10000c37, 8) MULTIEQUAL (unique, 0x10000c27, 8) , (unique, 0x10000c2f, 8)]
[(unique, 0x10000b1f, 8) COPY (unique, 0x10000423, 8)]
[ ---  CBRANCH (ram, 0x1b668b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000423, 8) , (unique, 0x10000433, 8)]
[(unique, 0x10000c83, 4) COPY (unique, 0x100004b3, 4)]
[ ---  CBRANCH (ram, 0x1b6763, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffff18, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x10000423, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(register, 0x30, 8) INT_SEXT (unique, 0x10000d3b, 4), (unique, 0x10000d3b, 4) CAST (unique, 0x1000043b, 4)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff18, 8)]
[(unique, 0x10000b57, 8) COPY (unique, 0x10000433, 8)]
[(unique, 0x10000bcf, 8) COPY (unique, 0x1000042b, 8)]
[ ---  BRANCH (ram, 0x1b656e, 1)]
[(register, 0x30, 8) INT_SEXT (unique, 0x10000d3f, 4), (unique, 0x10000d3f, 4) CAST (unique, 0x1000043b, 4)]
[ ---  BRANCH (ram, 0x1b6690, 1)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x10000419, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff08, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff08, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x10000b1f, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff18, 8)]
[(unique, 0x10000b4f, 8) COPY (unique, 0x10000433, 8)]
[(unique, 0x10000bc7, 8) COPY (unique, 0x1000042b, 8)]
[(unique, 0x10000c07, 4) COPY (stack, 0xffffffffffffffac, 4), (stack, 0xffffffffffffffac, 4) MULTIEQUAL (unique, 0x10000c83, 4) , (stack, 0xffffffffffffffac, 4)]
[ ---  BRANCH (ram, 0x1b5e52, 1)]
[ ---  CBRANCH (ram, 0x1b680e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000423, 8) , (unique, 0x10000433, 8)]
[(unique, 0x10000b5f, 8) COPY (unique, 0x10000433, 8)]
[ ---  CBRANCH (ram, 0x1b680e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000423, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) COPY (stack, 0xffffffffffffff18, 8)]
[(unique, 0x10000b37, 8) COPY (unique, 0x10000433, 8)]
[ ---  BRANCH (ram, 0x1b5ea9, 1)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (unique, 0x10000bff, 4) , (unique, 0x10000c03, 4) , (unique, 0x10000c07, 4) , (unique, 0x10000c83, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff93, 1) MULTIEQUAL (stack, 0xffffffffffffff93, 1) , (stack, 0xffffffffffffff93, 1) , (unique, 0x10000421, 1) , (unique, 0x10000421, 1) , (unique, 0x10000421, 1)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (unique, 0x10000bc7, 8) , (unique, 0x10000bcf, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff08, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff08, 8) , (unique, 0xbe00, 8) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff08, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000a87, 8) , (register, 0xa0, 8) , (unique, 0x1000042b, 8) , (unique, 0x1000042b, 8) , (unique, 0x1000042b, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (unique, 0x10000423, 8) , (unique, 0x10000423, 8) , (unique, 0x10000423, 8)]
[(stack, 0xffffffffffffff18, 8) COPY (unique, 0x10000b67, 8), (unique, 0x10000b67, 8) MULTIEQUAL (unique, 0x10000c67, 8) , (unique, 0x10000c67, 8) , (unique, 0x10000b4f, 8) , (unique, 0x10000b57, 8) , (unique, 0x10000b5f, 8)]
[(register, 0xa8, 4) INT_ADD (unique, 0x100000fe, 4) , (const, 0x1, 4), (unique, 0x100000fe, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0x10000419, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d43, 8), (unique, 0x10000d43, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (unique, 0x10000419, 8)]
[ ---  CBRANCH (ram, 0x1b5e7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004b7, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d4b, 8), (unique, 0x10000d4b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1b5e68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (unique, 0x100004b7, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4)]
[(unique, 0x10000baf, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1b5d5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffff93, 1) MULTIEQUAL (stack, 0xffffffffffffff93, 1) , (unique, 0x10000421, 1) , (stack, 0xffffffffffffff93, 1)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x10000423, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x1000042b, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x10000b2f, 8) , (unique, 0x10000b37, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff08, 8) MULTIEQUAL (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8) , (stack, 0xffffffffffffff08, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (unique, 0x100004b3, 4) , (register, 0xa8, 4)]
[(stack, 0xffffffffffffff4c, 4) COPY (unique, 0x10000bb3, 4), (unique, 0x10000bb3, 4) MULTIEQUAL (unique, 0x10000c6f, 4) , (unique, 0x10000c6f, 4) , (unique, 0x10000baf, 4)]
[ ---  CBRANCH (ram, 0x1b6730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(stack, 0xffffffffffffff50, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (register, 0xa0, 8)]
[(stack, 0xfffffffffffffef8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb0, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (register, 0xb0, 8)]
[(unique, 0xbe00, 8) INT_ADD (stack, 0xfffffffffffffef8, 8) , (const, 0x1, 8), (stack, 0xfffffffffffffef8, 8) MULTIEQUAL (stack, 0xfffffffffffffef8, 8) , (unique, 0xbe00, 8)]
[(unique, 0x10000a4f, 8) COPY (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10000a6f, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0x18, 8)]
[(unique, 0x10000c0f, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0xb0, 4) , (unique, 0x10000393, 4)]
[(unique, 0x10000c1b, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0xb0, 4) , (unique, 0x10000393, 4)]
[ ---  CBRANCH (ram, 0x1b61b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff30, 8) , (const, 0xffffffffffffffff, 8), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000c1b, 4) , (unique, 0x10000c1f, 4)]
[(register, 0x38, 8) COPY (unique, 0x10000a7f, 8), (unique, 0x10000a7f, 8) MULTIEQUAL (unique, 0x10000a6f, 8) , (unique, 0x10000a77, 8)]
[(unique, 0x10000b1b, 4) COPY (register, 0xa8, 4), (register, 0xa8, 4) COPY (unique, 0x10000c17, 4), (unique, 0x10000c17, 4) MULTIEQUAL (unique, 0x10000c0f, 4) , (unique, 0x10000c13, 4)]
[(unique, 0x10000b77, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000a4f, 8) , (unique, 0x10000a57, 8)]
[ ---  CBRANCH (ram, 0x1b6631, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb8, 8)]
[(unique, 0x10000aa7, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b61e0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000d53, 4) , (const, 0x0, 4), (unique, 0x10000d53, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000d5b, 8), (unique, 0x10000d5b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000d57, 4), (unique, 0x10000d57, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000485, 8) INT_SEXT (unique, 0x10000d67, 4), (unique, 0x10000d67, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000047d, 8) PTRADD (unique, 0x1000048e, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x1000048e, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b6292, 1) , (unique, 0x1000048d, 1), (unique, 0x1000048d, 1) INT_SLESS (unique, 0x10000d63, 4) , (const, 0x0, 4), (unique, 0x10000d63, 4) CAST (unique, 0x10000479, 4), (unique, 0x10000479, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x10000485, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b62c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000485, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b62f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000048e, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100009e7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b62bb, 1)]
[ ---  CBRANCH (ram, 0x1b62b0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009e7, 8) , (unique, 0x100009ef, 8)]
[(unique, 0x100009ef, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b62f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000047d, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x100007b1, 8) , (const, 0x4, 8), (unique, 0x100007b1, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b62f0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10000d6b, 4), (unique, 0x10000d6b, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10000485, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000048e, 8) , (unique, 0x100007d1, 8) , (const, 0x4, 8), (unique, 0x100007d1, 8) INT_ADD (unique, 0x10000485, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x1000047d, 8) , (unique, 0x10000819, 8) , (const, 0x4, 8), (unique, 0x10000819, 8) INT_MULT (unique, 0x10000485, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b623a, 1)]
[ ---  CBRANCH (ram, 0x1b62f9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000d6f, 4) , (unique, 0xbc80, 4), (unique, 0x10000d6f, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000048e, 8) , (unique, 0x100007f9, 8) , (const, 0x4, 8), (unique, 0x100007f9, 8) INT_ADD (unique, 0x100007f1, 8) , (const, 0x1, 8), (unique, 0x100007f1, 8) INT_MULT (unique, 0x10000485, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x1000047d, 8) , (unique, 0x10000809, 8) , (const, 0x4, 8), (unique, 0x10000809, 8) INT_MULT (unique, 0x10000485, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b623a, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d7b, 8), (unique, 0x10000d7b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000d77, 4), (unique, 0x10000d77, 4) CAST (register, 0x38, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000d73, 4), (unique, 0x10000d73, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000479, 4), (register, 0x38, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10000a9f, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x10000485, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b61e3, 1)]
[(unique, 0x10000aaf, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b6316, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000485, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000048e, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100009f7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b626a, 1)]
[ ---  CBRANCH (ram, 0x1b6260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000485, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009f7, 8) , (unique, 0x100009ff, 8)]
[(unique, 0x10000a97, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b61e3, 1)]
[(unique, 0x100009ff, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000047d, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10000769, 8) , (const, 0x4, 8), (unique, 0x10000769, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000047d, 8) , (unique, 0x10000485, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000047d, 8) , (unique, 0x10000485, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) COPY (unique, 0x10000ab7, 8), (unique, 0x10000ab7, 8) MULTIEQUAL (unique, 0x10000a97, 8) , (unique, 0x10000a9f, 8) , (unique, 0x10000aa7, 8) , (unique, 0x10000aaf, 8)]
[(unique, 0x10000a27, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000a57, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x10000a77, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x10000b6f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x10000c13, 4) COPY (unique, 0x10000b17, 4), (unique, 0x10000b17, 4) COPY (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000479, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0x10000479, 4)]
[(unique, 0x10000c1f, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x1b64e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d87, 8), (unique, 0x10000d87, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000d83, 4), (unique, 0x10000d83, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x0, 4) , (unique, 0x100004b7, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x18, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000479, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0x10000479, 4)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (unique, 0x10000b6f, 8) , (unique, 0x10000b77, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000c1f, 4) , (register, 0x8, 4)]
[(unique, 0x10000c63, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000b17, 4) , (unique, 0x10000b1b, 4)]
[ ---  CBRANCH (ram, 0x1b65e4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (stack, 0xffffffffffffff38, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000a27, 8) , (register, 0x38, 8)]
[(unique, 0x10000b27, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000be7, 4) COPY (stack, 0xffffffffffffffa8, 4)]
[ ---  CBRANCH (ram, 0x1b6658, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000b0b, 4) COPY (register, 0xa8, 4)]
[(unique, 0x10000beb, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b67a6, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffff38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (unique, 0x10000be7, 4) , (unique, 0x10000beb, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff10, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff10, 8) MULTIEQUAL (unique, 0x10000b27, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffff58, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff30, 8) COPY (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10000af7, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000c63, 4) , (unique, 0x10000b0b, 4)]
[(unique, 0x10000b97, 8) COPY (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000bbf, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x1b5fd2, 1)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10000b8f, 8) COPY (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) COPY (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000bb7, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x1b5fd2, 1)]
[(unique, 0xbd80, 8) COPY (stack, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x1b6772, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000b9f, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1b6772, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (stack, 0xffffffffffffff38, 8)]
[ ---  CBRANCH (ram, 0x1b64a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff30, 8)]
[(unique, 0x10000a0f, 8) COPY (stack, 0xffffffffffffff30, 8)]
[(unique, 0x10000a47, 8) COPY (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x1b5fc7, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000a07, 8) , (unique, 0x10000a0f, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000a3f, 8) , (unique, 0x10000a47, 8)]
[ ---  CBRANCH (ram, 0x1b5f30, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000d8f, 4) , (const, 0x0, 4), (unique, 0x10000d8f, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000d97, 8), (unique, 0x10000d97, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000d93, 4), (unique, 0x10000d93, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100004a2, 8) INT_SEXT (unique, 0x10000da3, 4), (unique, 0x10000da3, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000049a, 8) PTRADD (unique, 0x100004ab, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100004ab, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b612e, 1) , (unique, 0x100004aa, 1), (unique, 0x100004aa, 1) INT_SLESS (unique, 0x10000d9f, 4) , (const, 0x0, 4), (unique, 0x10000d9f, 4) CAST (unique, 0x10000496, 4), (unique, 0x10000496, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100004a2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b615c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004a2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100004ab, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10000987, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b6153, 1)]
[ ---  CBRANCH (ram, 0x1b6148, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000987, 8) , (unique, 0x1000098f, 8)]
[(unique, 0x1000098f, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000049a, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x100006b9, 8) , (const, 0x4, 8), (unique, 0x100006b9, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b6188, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10000da7, 4), (unique, 0x10000da7, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x100004a2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100004ab, 8) , (unique, 0x100006d9, 8) , (const, 0x4, 8), (unique, 0x100006d9, 8) INT_ADD (unique, 0x100004a2, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x1000049a, 8) , (unique, 0x10000721, 8) , (const, 0x4, 8), (unique, 0x10000721, 8) INT_MULT (unique, 0x100004a2, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b5f60, 1)]
[ ---  CBRANCH (ram, 0x1b6191, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000dab, 4) , (unique, 0xbc80, 4), (unique, 0x10000dab, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100004ab, 8) , (unique, 0x10000701, 8) , (const, 0x4, 8), (unique, 0x10000701, 8) INT_ADD (unique, 0x100006f9, 8) , (const, 0x1, 8), (unique, 0x100006f9, 8) INT_MULT (unique, 0x100004a2, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x1000049a, 8) , (unique, 0x10000711, 8) , (const, 0x4, 8), (unique, 0x10000711, 8) INT_MULT (unique, 0x100004a2, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b5f60, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100004a2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000db7, 8), (unique, 0x10000db7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000db3, 4), (unique, 0x10000db3, 4) CAST (register, 0x38, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000daf, 4), (unique, 0x10000daf, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000496, 4), (register, 0x38, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b5f33, 1)]
[ ---  CBRANCH (ram, 0x1b61ae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100004a2, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6118, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100004ab, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100009a7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b5f9d, 1)]
[ ---  CBRANCH (ram, 0x1b5f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100004a2, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100009a7, 8) , (unique, 0x100009af, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x100009af, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6118, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000049a, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x28, 8) , (unique, 0x100005c9, 8) , (const, 0x4, 8), (unique, 0x100005c9, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000049a, 8) , (unique, 0x100004a2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000049a, 8) , (unique, 0x100004a2, 8) , (const, 0x4, 8)]
[(unique, 0x1000097a, 4) MULTIEQUAL (unique, 0x10000496, 4) , (unique, 0x10000496, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(unique, 0x10000a07, 8) COPY (unique, 0x10000969, 8), (unique, 0x10000969, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000a3f, 8) COPY (unique, 0x10000972, 8), (unique, 0x10000972, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b5f40, 1) , (unique, 0x10000971, 1), (unique, 0x10000971, 1) INT_LESS (unique, 0x10000969, 8) , (stack, 0xffffffffffffff10, 8), (unique, 0x10000969, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_AND (unique, 0x1000097a, 4) , (const, 0xffffff, 4)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffff10, 8) , (const, 0x1, 8)]
[(unique, 0x10000a8f, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(unique, 0x10000aeb, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x0, 4)]
[(unique, 0x10000b7f, 8) COPY (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10000bef, 4) COPY (stack, 0xffffffffffffffa8, 4)]
[ ---  CBRANCH (ram, 0x1b6772, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffff28, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[ ---  CBRANCH (ram, 0x1b67d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff4c, 4) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b67b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100004b7, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b677e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1aa580, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (stack, 0xffffffffffffff93, 1)]
[ ---  CBRANCH (ram, 0x1b5c8b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffff60, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000aef, 4) COPY (stack, 0xffffffffffffffa8, 4)]
[(unique, 0x10000b87, 8) COPY (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10000bf3, 4) COPY (stack, 0xffffffffffffffa8, 4)]
[ ---  BRANCH (ram, 0x1b5fd2, 1)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (unique, 0x10000bef, 4) , (unique, 0x10000bf3, 4) , (unique, 0x10000beb, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (unique, 0x10000bb7, 8) , (unique, 0x10000bbf, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (unique, 0x10000b7f, 8) , (unique, 0x10000b87, 8) , (unique, 0x10000b8f, 8) , (unique, 0x10000b97, 8) , (unique, 0x10000b9f, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff10, 8) , (unique, 0x3100, 8) , (unique, 0xbe00, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000a8f, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000aeb, 4) , (unique, 0x10000aef, 4) , (unique, 0x10000b0b, 4) , (unique, 0x10000af7, 4) , (unique, 0x10000c63, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dc3, 8), (unique, 0x10000dc3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000dbf, 4), (unique, 0x10000dbf, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000aeb, 4) , (unique, 0x10000aef, 4) , (unique, 0x10000b0b, 4) , (unique, 0x10000af7, 4) , (unique, 0x10000c63, 4)]
[ ---  CBRANCH (ram, 0x1b5ffe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100004b7, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000dcb, 8), (unique, 0x10000dcb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1b5fe8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (unique, 0x100004b7, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000393, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1b5edd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1b6745, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff4c, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (register, 0x18, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x10000393, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x18, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1b66bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffef8, 8) , (stack, 0xffffffffffffff40, 8), (stack, 0xfffffffffffffef8, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xfffffffffffffef8, 8), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[ ---  CBRANCH (ram, 0x1b66bc, 1) , (register, 0x206, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (unique, 0x1000016b, 4) , (const, 0x2, 4), (unique, 0x1000016b, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xfffffffffffffef8, 8) , (stack, 0xffffffffffffff40, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000ddb, 8), (unique, 0x10000ddb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000dd3, 4), (unique, 0x10000dd3, 4) CAST (register, 0xa8, 4)]
[(register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8), (register, 0x30, 8) INT_SEXT (unique, 0x10000dd7, 4), (unique, 0x10000dd7, 4) CAST (register, 0xb0, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000dd3, 4), (unique, 0x10000dd3, 4) CAST (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x1b66e9, 1)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x8, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1b66cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x10, 8)]
[(register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0xffffffff, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b6750, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1b6750, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1b6703, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1b6703, 1) , (register, 0x206, 1)]
[(register, 0x0, 4) INT_SUB (register, 0x8, 4) , (register, 0x18, 4)]
[ ---  BRANCH (ram, 0x1b66fb, 1)]
[(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1b605d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1b5d2b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff4c, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(stack, 0xffffffffffffff40, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b5eb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff10, 8) MULTIEQUAL (stack, 0xffffffffffffff10, 8) , (stack, 0xffffffffffffff10, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (register, 0xa0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(stack, 0xfffffffffffffef8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b602a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff4c, 4) , (const, 0x0, 4), (stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1b605d, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
