[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000179, 8), (unique, 0x10000179, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18ab00, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000171, 8), (unique, 0x10000171, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1be, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18a9d4, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x57, 4), (stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x57, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x57, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x18a9f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000181, 8), (unique, 0x10000181, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18aa70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x18a9f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff58, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18aa94, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0xbd80, 8) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) CAST (stack, 0xffffffffffffff58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18a9f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4)]
[ ---  CBRANCH (ram, 0x18a9f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff58, 8) , (const, 0x1, 4) , (const, 0x1, 4) , (unique, 0xbc80, 4) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x14b, 4)]
[ ---  CBRANCH (ram, 0x18ab0a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff58, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (unique, 0xbc80, 4) , (stack, 0xffffffffffffff58, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x14b, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x172, 4)]
[ ---  CALL (ram, 0x18e2a0, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100001a9, 8) , (register, 0x0, 8), (unique, 0x100001a9, 8) CAST (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[(unique, 0x10000161, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_ADD (unique, 0x100001c9, 8) , (unique, 0xbd80, 8), (unique, 0x100001c9, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18ab3f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(unique, 0x10000169, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000161, 8) , (unique, 0x10000169, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x3200, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e81e0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) CAST (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0xb8, 8) INT_ADD (unique, 0x100001e1, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x100001e1, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18ab63, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7ca0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000149, 8), (unique, 0x10000149, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7ca0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000209, 8), (unique, 0x10000209, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x130, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000201, 8), (unique, 0x10000201, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  BRANCH (ram, 0x18aa24, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15c, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3200, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  BRANCH (ram, 0x18a9f5, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e82a0, 8)]
[ ---  CBRANCH (ram, 0x18aa0f, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000219, 8), (unique, 0x10000219, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000151, 8), (unique, 0x10000151, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8), (unique, 0x3200, 8) CAST (unique, 0x10000231, 8), (unique, 0x10000231, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x130, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000229, 8), (unique, 0x10000229, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18aaf0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000239, 8), (unique, 0x10000239, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe8, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18aa3a, 1)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x18ab7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
