[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffee8, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x1e, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x1e, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0x1e, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x1e, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x1e, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x1e, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x1e, 4)]
[ ---  CBRANCH (ram, 0x176760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x64, 8)]
[(ram, 0x4c2e48, 8) COPY (ram, 0x4c2e48, 8)]
[(ram, 0x4c2f98, 8) COPY (ram, 0x4c2f98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CALL (ram, 0x17ba60, 8) , (register, 0x20, 8) , (const, 0x8000, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x17cf00, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (const, 0x64, 8) , (register, 0x0, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x6d, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x51, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x46, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x6d, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x51, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x46, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x6d, 4), (unique, 0xbc80, 4) INT_AND (stack, 0xfffffffffffffee8, 4) , (const, 0xfffffffe, 4), (stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0x51, 4), (stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x51, 4), (stack, 0xffffffffffffff08, 8) INDIRECT (stack, 0xffffffffffffff08, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x51, 4), (stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x51, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x51, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x51, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x46, 4), (stack, 0xffffffffffffff70, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x51, 4), (stack, 0xffffffffffffffc0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c27a0, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffc8, 8) COPY (ram, 0x4c2e48, 8), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x51, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x46, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6d, 4), (stack, 0xffffffffffffffd0, 8) COPY (ram, 0x4c2f98, 8), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x51, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x46, 4)]
[ ---  CBRANCH (ram, 0x176750, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x14d130, 8) , (register, 0x20, 8) , (register, 0x30, 8) , (register, 0x10, 8)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0x110, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x110, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x110, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x110, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x110, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffff20, 8)]
[(ram, 0x4c2e48, 8) COPY (ram, 0x4c2e48, 8), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0x110, 4)]
[(ram, 0x4c2f98, 8) COPY (ram, 0x4c2f98, 8), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0x110, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x176710, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000154, 8), (unique, 0x10000154, 8) INT_RIGHT (unique, 0x1000014c, 8) , (const, 0x1, 4), (unique, 0x1000014c, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) PTRADD (stack, 0xffffffffffffff18, 8) , (unique, 0x100000b9, 8) , (const, 0x1, 8), (unique, 0x100000b9, 8) INT_2COMP (unique, 0x10000144, 8), (unique, 0x10000144, 8) CAST (stack, 0xffffffffffffff08, 8), (register, 0x28, 8) PTRADD (stack, 0xffffffffffffff10, 8) , (unique, 0x100000b1, 8) , (const, 0x1, 8), (unique, 0x100000b1, 8) INT_2COMP (unique, 0x1000013c, 8), (unique, 0x1000013c, 8) CAST (stack, 0xffffffffffffff08, 8)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xe4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe4, 4)]
[(unique, 0x10000124, 8) COPY (stack, 0xffffffffffffff20, 8), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xe4, 4)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xef, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xe4, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xef, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xe4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x1000015c, 8), (unique, 0x1000015c, 8) CAST (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1766de, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x1000015c, 8), (unique, 0x1000015c, 8) CAST (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff20, 8) , (register, 0x28, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xfd, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xf9, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xfd, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xf9, 4)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xfd, 4), (stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xfd, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xfd, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xfd, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xfd, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf9, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x10000124, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xfffffffffffffee8, 4) INDIRECT (stack, 0xfffffffffffffee8, 4) , (const, 0xb2, 4), (stack, 0xfffffffffffffee8, 4) MULTIEQUAL (stack, 0xfffffffffffffee8, 4) , (stack, 0xfffffffffffffee8, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb2, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xbd, 4), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xb2, 4), (ram, 0x4c2e48, 8) MULTIEQUAL (ram, 0x4c2e48, 8) , (ram, 0x4c2e48, 8)]
[(ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xbd, 4), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xb2, 4), (ram, 0x4c2f98, 8) MULTIEQUAL (ram, 0x4c2f98, 8) , (ram, 0x4c2f98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000174, 8), (unique, 0x10000174, 8) CALL (ram, 0x11f7f0, 8) , (stack, 0xffffffffffffff20, 8) , (unique, 0x1000016c, 8), (unique, 0x1000016c, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x100000f3, 8) MULTIEQUAL (ram, 0x4c2e48, 8) , (ram, 0x4c2e48, 8)]
[(unique, 0x100000fb, 8) MULTIEQUAL (ram, 0x4c2f98, 8) , (ram, 0x4c2f98, 8)]
[(unique, 0x10000103, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x1000012c, 8) COPY (unique, 0x100000ea, 8), (unique, 0x100000ea, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1766f4, 1) , (unique, 0x100000f2, 1), (unique, 0x100000f2, 1) INT_EQUAL (unique, 0x100000ea, 8) , (const, 0x0, 8), (unique, 0x100000ea, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c2e48, 8) INDIRECT (unique, 0x100000f3, 8) , (const, 0xdf, 4)]
[(ram, 0x4c2f98, 8) INDIRECT (unique, 0x100000fb, 8) , (const, 0xdf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000103, 8)]
[(unique, 0x10000134, 8) COPY (unique, 0x10000103, 8)]
[ ---  BRANCH (ram, 0x1766f4, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000017c, 8) , (const, 0x1, 8), (unique, 0x1000017c, 8) CAST (register, 0x28, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000012c, 8) , (unique, 0x10000134, 8)]
[(ram, 0x4c2e48, 8) COPY (ram, 0x4c2e48, 8), (ram, 0x4c2e48, 8) INDIRECT (ram, 0x4c2e48, 8) , (const, 0xc2, 4), (ram, 0x4c2e48, 8) MULTIEQUAL (unique, 0x100000f3, 8) , (ram, 0x4c2e48, 8)]
[(ram, 0x4c2f98, 8) COPY (ram, 0x4c2f98, 8), (ram, 0x4c2f98, 8) INDIRECT (ram, 0x4c2f98, 8) , (const, 0xc2, 4), (ram, 0x4c2f98, 8) MULTIEQUAL (unique, 0x100000fb, 8) , (ram, 0x4c2f98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
