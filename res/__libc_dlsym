[(unique, 0x10000097, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000009f, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8340, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000097, 8) , (const, 0xa2, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x1000009f, 8) , (const, 0xa2, 4)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xa2, 4)]
[(ram, 0x4c8340, 8) COPY (ram, 0x4c8340, 8), (ram, 0x4c8340, 8) INDIRECT (ram, 0x4c8340, 8) , (const, 0xa2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000a7, 8), (unique, 0x100000a7, 8) INT_ADD (ram, 0x4c8340, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x2c, 4)]
[(ram, 0x4c8340, 8) INDIRECT (ram, 0x4c8340, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffc7, 1) INDIRECT (stack, 0xffffffffffffffc7, 1) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2c, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000097, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x1000009f, 8) , (const, 0x2c, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x2c, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x2c, 4)]
[ ---  CBRANCH (ram, 0x242f60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x1000004f, 8) , (unique, 0x3800, 8), (unique, 0x1000004f, 8) PTRSUB (const, 0x0, 8) , (const, 0x242df0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000af, 8), (unique, 0x100000af, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x118, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc7, 8)]
[ ---  CBRANCH (ram, 0x242f60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc7, 1) , (const, 0x0, 1)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x9c, 4)]
[(ram, 0x4c8340, 8) INDIRECT (ram, 0x4c8340, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x9c, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  BRANCH (ram, 0x242f67, 1)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c8340, 8) COPY (ram, 0x4c8340, 8), (ram, 0x4c8340, 8) MULTIEQUAL (ram, 0x4c8340, 8) , (ram, 0x4c8340, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242f48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe8, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100000b7, 8), (unique, 0x100000b7, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffe8, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8)]
[(ram, 0x4c8340, 8) COPY (ram, 0x4c8340, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100000c7, 8) , (unique, 0xbd80, 8), (unique, 0x100000c7, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) INT_ADD (stack, 0xfffffffffffffff0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (stack, 0xffffffffffffffe8, 8) , (unique, 0xbd80, 8)]
