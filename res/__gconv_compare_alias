[ ---  CALL (ram, 0x45e080, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x30, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x29, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x30, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x29, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x30, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x29, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000103, 8), (unique, 0x10000103, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x45cd10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4667f0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x74, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100000f3, 8) , (const, 0x74, 4), (unique, 0x100000f3, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x74, 4)]
[(unique, 0x100000db, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45cd46, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000113, 8), (unique, 0x10000113, 8) CALL (ram, 0x4568a0, 8) , (unique, 0x3800, 8) , (unique, 0x1000010b, 8) , (unique, 0x10000093, 8), (unique, 0x1000010b, 8) CAST (unique, 0x100000a3, 8), (unique, 0x100000a3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c88b8, 8), (unique, 0x10000093, 8) PTRSUB (const, 0x0, 8) , (const, 0x45bf30, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x100000e3, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45cd46, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x100000eb, 8) COPY (register, 0x30, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100000db, 8) , (unique, 0x100000e3, 8) , (unique, 0x100000eb, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100000fb, 8) , (const, 0x98, 4), (unique, 0x100000fb, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x98, 4)]
[(unique, 0x100000c3, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x45cd77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) CALL (ram, 0x4568a0, 8) , (unique, 0x3800, 8) , (unique, 0x10000123, 8) , (unique, 0x1000009b, 8), (unique, 0x10000123, 8) CAST (unique, 0x100000ab, 8), (unique, 0x100000ab, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c88b8, 8), (unique, 0x1000009b, 8) PTRSUB (const, 0x0, 8) , (const, 0x45bf30, 8)]
[(unique, 0x100000cb, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000133, 8), (unique, 0x10000133, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45cd77, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000133, 8), (unique, 0x10000133, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x100000d3, 8) COPY (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb8, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb8, 4)]
[(register, 0x0, 8) CALL (ram, 0x401140, 8) , (register, 0x38, 8) , (register, 0xa0, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100000c3, 8) , (unique, 0x100000cb, 8) , (unique, 0x100000d3, 8)]
[ ---  BRANCH (ram, 0x45ccf1, 1)]
[(register, 0x0, 8) INT_ZEXT (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45cd84, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000013b, 8), (unique, 0x1000013b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x66, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
