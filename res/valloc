[ ---  CBRANCH (ram, 0x427950, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c56e4, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x261, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x261, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x261, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x261, 4)]
[(stack, 0x0, 1) INDIRECT (stack, 0x0, 1) , (const, 0x261, 4)]
[(stack, 0x1, 7) INDIRECT (stack, 0x1, 7) , (const, 0x261, 4)]
[ ---  CALL (ram, 0x425560, 8)]
[ ---  BRANCH (ram, 0x42787a, 1)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000016d, 8) INT_ADD (unique, 0x100001d4, 8) , (stack, 0x0, 1), (unique, 0x100001d4, 8) INT_LEFT (unique, 0x100001cc, 8) , (const, 0x8, 8), (unique, 0x100001cc, 8) INT_SEXT (unique, 0x100001f4, 7), (unique, 0x100001f4, 7) CAST (stack, 0x1, 7), (stack, 0x0, 1) MULTIEQUAL (stack, 0x0, 1) , (stack, 0x0, 1), (stack, 0x1, 7) MULTIEQUAL (stack, 0x1, 7) , (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x427980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5780, 8) , (const, 0x0, 8), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x25e, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x25e, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x25e, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000203, 8), (unique, 0x10000203, 8) CALLIND (unique, 0x100001fb, 8) , (ram, 0x4c6118, 8) , (register, 0x38, 8) , (unique, 0x1000016d, 8), (unique, 0x100001fb, 8) CAST (ram, 0x4c5780, 8)]
[ ---  CBRANCH (ram, 0x427960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (ram, 0x4c6118, 8) , (const, 0x11, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x255, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x255, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x255, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x427910, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (ram, 0x4c6118, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x427a48, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (ram, 0x4c6118, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000020b, 8), (unique, 0x1000020b, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x24c, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x24c, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x24c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001ec, 8) COPY (ram, 0x4c6118, 8)]
[ ---  CBRANCH (ram, 0x427b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (ram, 0x4c6118, 8), (unique, 0x3100, 8) INT_SUB (ram, 0x4c6118, 8) , (const, 0x1, 8)]
[(unique, 0x100001e4, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4278ab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c6118, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x427940, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000cd, 8) , (ram, 0x4c6118, 8), (unique, 0x100000cd, 8) INT_MULT (register, 0x28, 8) , (const, 0x2, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x100000cd, 8)]
[(unique, 0x100001dc, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x20, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100001dc, 8) , (unique, 0x100001e4, 8) , (unique, 0x100001ec, 8) , (unique, 0x100000cd, 8)]
[ ---  CBRANCH (ram, 0x427990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000213, 8), (unique, 0x10000213, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x52, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x52, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x52, 4)]
[ ---  CBRANCH (ram, 0x427970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) CALL (ram, 0x424fb0, 8) , (unique, 0x100001b6, 8) , (register, 0x28, 8) , (register, 0x38, 8), (unique, 0x100001b6, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4278ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a5, 8) , (const, 0x0, 8), (unique, 0x100000a5, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000022b, 8), (unique, 0x1000022b, 8) INT_ADD (unique, 0x10000223, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000223, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4278ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ad, 8) , (const, 0x0, 8), (unique, 0x100000ad, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x427b19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100001ae, 8), (unique, 0x100001ae, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x10000233, 8) , (const, 0x10, 8), (unique, 0x10000233, 8) CAST (register, 0x0, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x1000018e, 8) , (unique, 0x10000186, 8) , (const, 0xce8, 8) , (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) COPY (const, 0x49c228, 8), (unique, 0x1000018e, 8) COPY (const, 0x49c018, 8), (unique, 0x10000186, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xa0, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xa0, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xa0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x427a80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000243, 8), (unique, 0x10000243, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001be, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100001be, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1c8, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1c8, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1c8, 4)]
[ ---  CBRANCH (ram, 0x4279be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) CALL (ram, 0x421c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ec, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e5, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1ec, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1e5, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1ec, 4), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1e5, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1ec, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1e5, 4)]
[ ---  CBRANCH (ram, 0x427ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) CALL (ram, 0x424fb0, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x10000253, 8), (unique, 0x10000253, 8) CALL (ram, 0x422050, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x38, 8), (unique, 0x3880, 8) INT_ADD (register, 0x28, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4279ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x427a5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1bf, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1bf, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c4, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1c4, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1c4, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1c4, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4279be, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xe8, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xe8, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xe8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xee, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xee, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xee, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xee, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[ ---  CBRANCH (ram, 0x427ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) CALL (ram, 0x424fb0, 8) , (register, 0xa8, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x193, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x193, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x18c, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x193, 4), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x18c, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x193, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x18c, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) CALL (ram, 0x424fb0, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) CALL (ram, 0x4225f0, 8) , (register, 0xa8, 8) , (register, 0x38, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4279ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x427aee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x169, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x169, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x169, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4279ed, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4279ed, 1)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x10f, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x10f, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x10f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x427970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4278ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000fd, 8) , (const, 0x0, 8), (unique, 0x100000fd, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000293, 8), (unique, 0x10000293, 8) INT_ADD (unique, 0x1000028b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000028b, 8) CAST (register, 0x80, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x427a1a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000105, 8) , (const, 0x0, 8), (unique, 0x10000105, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x1000029b, 8) , (const, 0x10, 8), (unique, 0x1000029b, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4278ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002ab, 8) , (register, 0xa8, 8), (unique, 0x100002ab, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000196, 8) , (unique, 0x1000017e, 8) , (const, 0xcfb, 8) , (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) COPY (const, 0x49c228, 8), (unique, 0x10000196, 8) COPY (const, 0x49c078, 8), (unique, 0x1000017e, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x159, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x159, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x159, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
