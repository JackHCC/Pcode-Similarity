[ ---  CBRANCH (ram, 0x1326a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c2f10, 8) COPY (ram, 0x4c2f10, 8)]
[(ram, 0x4c35f0, 8) COPY (ram, 0x4c35f0, 8)]
[(ram, 0x4c8728, 8) COPY (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) COPY (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (ram, 0x4c35f0, 8)]
[ ---  CBRANCH (ram, 0x1326e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10c, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x10c, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0x10c, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x10c, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x10c, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x10c, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000b2, 8), (unique, 0x100000b2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4aa0, 8), (register, 0x0, 8) CAST (unique, 0x1000010e, 8), (unique, 0x1000010e, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000106, 8), (unique, 0x10000106, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8728, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8728, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x132643, 1)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100000be, 8) COPY (ram, 0x4c35f0, 8), (ram, 0x4c35f0, 8) MULTIEQUAL (ram, 0x4c35f0, 8) , (ram, 0x4c35f0, 8)]
[ ---  CBRANCH (ram, 0x1326b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa9, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xa9, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0xa9, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xa9, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xa9, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xa9, 4)]
[ ---  CBRANCH (ram, 0x13264f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x100000a2, 8), (unique, 0x100000a2, 8) COPY (const, 0x28fa80, 8)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100000ee, 8) COPY (ram, 0x4c35f0, 8), (ram, 0x4c35f0, 8) COPY (const, 0x28fa80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb8, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xb8, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0xb8, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xb8, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xb8, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x132710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (register, 0x38, 8) , (unique, 0x100000be, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xda, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xda, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0xda, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xda, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xda, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xda, 4)]
[(unique, 0x100000f6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18aa40, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x13267f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18aa40, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x42, 4), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0x42, 4), (ram, 0x4c35f0, 8) COPY (unique, 0x100000fe, 8), (unique, 0x100000fe, 8) MULTIEQUAL (unique, 0x100000ee, 8) , (unique, 0x100000f6, 8)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x42, 4), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x42, 4), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x42, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000011e, 8) , (unique, 0xbd00, 4), (unique, 0x1000011e, 8) CAST (ram, 0x4c2f10, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000116, 8), (unique, 0x10000116, 8) CAST (ram, 0x4c2f10, 8), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(unique, 0x100000ce, 8) COPY (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) COPY (ram, 0x4c35f0, 8), (ram, 0x4c35f0, 8) COPY (unique, 0x100000fe, 8), (unique, 0x100000fe, 8) MULTIEQUAL (unique, 0x100000ee, 8) , (unique, 0x100000f6, 8)]
[ ---  CBRANCH (ram, 0x13267f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000be, 8) , (unique, 0x1000009a, 8), (unique, 0x1000009a, 8) COPY (const, 0x28fa80, 8)]
[(unique, 0x100000d6, 8) COPY (unique, 0x100000c6, 8)]
[ ---  CBRANCH (ram, 0x13267f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000be, 8) , (unique, 0x100000c6, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x63, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0x63, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x63, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x63, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x63, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100000be, 8)]
[(unique, 0x100000de, 8) COPY (unique, 0x100000c6, 8)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0xcc, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0xcc, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0xcc, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0xcc, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xcc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000012e, 8) , (unique, 0xbd00, 4), (unique, 0x1000012e, 8) CAST (ram, 0x4c2f10, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000126, 8), (unique, 0x10000126, 8) CAST (ram, 0x4c2f10, 8)]
[(unique, 0x100000e6, 8) COPY (unique, 0x100000be, 8)]
[ ---  BRANCH (ram, 0x13267f, 1)]
[(ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c35f0, 8) MULTIEQUAL (ram, 0x4c35f0, 8) , (ram, 0x4c35f0, 8) , (ram, 0x4c35f0, 8) , (ram, 0x4c35f0, 8) , (ram, 0x4c35f0, 8)]
[(ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100000ce, 8) , (unique, 0x100000d6, 8) , (unique, 0x100000de, 8) , (unique, 0x100000e6, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1326a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c2f10, 8) INDIRECT (ram, 0x4c2f10, 8) , (const, 0x93, 4)]
[(ram, 0x4c35f0, 8) INDIRECT (ram, 0x4c35f0, 8) , (const, 0x93, 4)]
[(ram, 0x4c8728, 8) INDIRECT (ram, 0x4c8728, 8) , (const, 0x93, 4)]
[(ram, 0x4c8730, 8) INDIRECT (ram, 0x4c8730, 8) , (const, 0x93, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x93, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000aa, 8), (unique, 0x100000aa, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4aa0, 8), (register, 0x0, 8) CAST (unique, 0x1000013e, 8), (unique, 0x1000013e, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000136, 8), (unique, 0x10000136, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8730, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8730, 8) , (const, 0x11, 4)]
[(ram, 0x4c2f10, 8) COPY (ram, 0x4c2f10, 8), (ram, 0x4c2f10, 8) MULTIEQUAL (ram, 0x4c2f10, 8) , (ram, 0x4c2f10, 8)]
[(ram, 0x4c35f0, 8) COPY (ram, 0x4c35f0, 8), (ram, 0x4c35f0, 8) MULTIEQUAL (ram, 0x4c35f0, 8) , (ram, 0x4c35f0, 8)]
[(ram, 0x4c8728, 8) COPY (ram, 0x4c8728, 8), (ram, 0x4c8728, 8) MULTIEQUAL (ram, 0x4c8728, 8) , (ram, 0x4c8728, 8)]
[(ram, 0x4c8730, 8) COPY (ram, 0x4c8730, 8), (ram, 0x4c8730, 8) MULTIEQUAL (ram, 0x4c8730, 8) , (ram, 0x4c8730, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8)]
