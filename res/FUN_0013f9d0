[(register, 0x20, 8) CAST (unique, 0x100000ad, 8), (unique, 0x100000ad, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(stack, 0xffffffffffffff40, 4) COPY (const, 0xe0000000, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000b5, 8), (unique, 0x100000b5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3c80, 8) CAST (unique, 0x100000bd, 8), (unique, 0x100000bd, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(unique, 0x10000095, 8) COPY (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000075, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000075, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000095, 8) , (unique, 0x1000009d, 8)]
[ ---  CBRANCH (ram, 0x13fa16, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36, 4)]
[(stack, 0xfffffffffffffeb8, 8) INDIRECT (unique, 0x100000a5, 8) , (const, 0x36, 4), (unique, 0x100000a5, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x36, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x36, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x36, 4)]
[(unique, 0x10000085, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x13fa31, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13f110, 8) , (register, 0x38, 4) , (register, 0x20, 8) , (unique, 0x3c80, 8)]
[(unique, 0x1000008d, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(register, 0x0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000085, 8) , (unique, 0x1000008d, 8)]
[ ---  CBRANCH (ram, 0x13fa4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000cd, 8), (unique, 0x100000cd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffffeb8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x64, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x64, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x30, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x30, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000009d, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x13fa13, 1)]
