[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x255bda, 1)]
[ ---  CBRANCH (ram, 0x255bd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000051, 8) , (unique, 0x10000091, 8) , (const, 0x4, 8), (unique, 0x10000091, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x10000051, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3480, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x255c18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x12, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000071, 8) , (unique, 0x10000089, 8) , (const, 0x5, 8), (unique, 0x10000089, 8) COPY (const, 0x2b7213, 8), (unique, 0x10000071, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[ ---  BRANCH (ram, 0x255bfe, 1)]
[(register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000069, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x10000069, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (register, 0x30, 8) PTRADD (unique, 0x10000061, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0x10000061, 8) COPY (const, 0x2b3520, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x100000b1, 4), (unique, 0x100000b1, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000059, 8) , (unique, 0x100000a1, 8) , (const, 0x4, 8), (unique, 0x100000a1, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x10000059, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3484, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000081, 8) , (register, 0x0, 8), (unique, 0x10000081, 8) COPY (const, 0x2b6796, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8)]
