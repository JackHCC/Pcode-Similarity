[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000373, 8), (unique, 0x10000373, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x124fb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x124fb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000383, 8), (unique, 0x10000383, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0x0, 8) CAST (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003a3, 8), (unique, 0x100003a3, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x1000039b, 8) , (const, 0x2f, 4), (unique, 0x1000039b, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x10000393, 8) , (const, 0x11, 4), (unique, 0x10000393, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12524d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1253ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x55e, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000259, 8) , (unique, 0x10000249, 8) , (const, 0x19f, 4) , (unique, 0x10000279, 8), (unique, 0x10000279, 8) COPY (const, 0x2bbc60, 8), (unique, 0x10000259, 8) COPY (const, 0x2b39f4, 8), (unique, 0x10000249, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1251e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003bb, 8), (unique, 0x100003bb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffff88, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x550, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x550, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x51c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x550, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x51c, 4)]
[(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x1251e3, 1)]
[(unique, 0x10000313, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x124fd2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x1000031b, 8) COPY (register, 0x30, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000303, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000313, 8) , (unique, 0x1000031b, 8)]
[ ---  CBRANCH (ram, 0x125087, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125087, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003d3, 8), (unique, 0x100003d3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x125389, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4ed, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000251, 8) , (unique, 0x10000241, 8) , (const, 0x22f, 4) , (unique, 0x10000271, 8), (unique, 0x10000271, 8) COPY (const, 0x2bbc60, 8), (unique, 0x10000251, 8) COPY (const, 0x2b39f4, 8), (unique, 0x10000241, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x10000363, 8) COPY (register, 0x38, 8), (register, 0x38, 8) INT_SEXT (unique, 0x100003e3, 4), (unique, 0x100003e3, 4) CAST (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x125234, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003db, 8), (unique, 0x100003db, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x125064, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x80, 4) , (const, 0x4, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100003e7, 8), (unique, 0x100003e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) INT_ADD (unique, 0x100003ef, 8) , (unique, 0x100002a1, 8), (unique, 0x100003ef, 8) CAST (unique, 0xbd80, 8), (unique, 0x100002a1, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125231, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125064, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100003ff, 8), (unique, 0x100003ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x1000040f, 8), (unique, 0x1000040f, 8) INT_ADD (unique, 0x10000407, 8) , (unique, 0x100002a9, 8), (unique, 0x10000407, 8) CAST (unique, 0xbd80, 8), (unique, 0x100002a9, 8) INT_ADD (register, 0x38, 8) , (const, 0x5, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125234, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125064, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000363, 8) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0xa0, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x38, 4), (register, 0x38, 4) INT_OR (register, 0x38, 4) , (register, 0x8, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4)]
[ ---  BRANCH (ram, 0x1251e3, 1)]
[ ---  CBRANCH (ram, 0x125064, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000417, 8), (unique, 0x10000417, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000427, 8), (unique, 0x10000427, 8) INT_ADD (unique, 0x1000041f, 8) , (const, 0x7, 8), (unique, 0x1000041f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) INT_ADD (unique, 0x1000042f, 8) , (const, 0x7, 8), (unique, 0x1000042f, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (unique, 0x1000043f, 8) , (const, 0x6, 8), (unique, 0x1000043f, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000457, 8), (unique, 0x10000457, 8) INT_ADD (unique, 0x1000044f, 8) , (const, 0x5, 8), (unique, 0x1000044f, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000045f, 8), (unique, 0x1000045f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000303, 8) , (unique, 0x10000303, 8) , (register, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000333, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x8, 8) , (unique, 0x100000c0, 8) , (const, 0x1, 8), (unique, 0x100000c0, 8) INT_2COMP (unique, 0x10000477, 8), (unique, 0x10000477, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000467, 8), (unique, 0x10000467, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1250a7, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESSEQUAL (unique, 0x1000047f, 8) , (unique, 0x10000487, 8), (unique, 0x10000487, 8) CAST (register, 0x10, 8), (unique, 0x1000047f, 8) CAST (register, 0x18, 8), (register, 0x10, 8) PTRADD (register, 0x8, 8) , (unique, 0x100000c0, 8) , (const, 0x1, 8), (unique, 0x100000c0, 8) INT_2COMP (unique, 0x10000477, 8), (unique, 0x10000477, 8) CAST (unique, 0xbd80, 8), (register, 0x18, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000b8, 8) , (const, 0x1, 8), (unique, 0x100000b8, 8) INT_2COMP (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000467, 8), (unique, 0x10000467, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000033b, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000353, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000333, 8) , (unique, 0x1000033b, 8)]
[ ---  CBRANCH (ram, 0x1250b2, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x1000048f, 8), (unique, 0x1000048f, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000333, 8) , (unique, 0x1000033b, 8)]
[(unique, 0x1000035b, 8) COPY (register, 0x10, 8)]
[(unique, 0x1000034b, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x125210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SRIGHT (unique, 0x10000497, 8) , (const, 0x2, 4), (unique, 0x10000497, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000353, 8) , (unique, 0x1000035b, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a7, 8) , (register, 0x8, 4), (unique, 0x100004a7, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x8, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000049f, 8), (unique, 0x1000049f, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1250c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x10000343, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x0, 8) , (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000343, 8) , (unique, 0x1000034b, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004af, 8), (unique, 0x100004af, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1251a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000237, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 4) COPY (const, 0x4, 4)]
[(register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x7, 4), (register, 0xa0, 4) INT_AND (unique, 0x100000f6, 4) , (const, 0xfffffffe, 4), (unique, 0x100000f6, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(unique, 0x10000236, 1) MULTIEQUAL (unique, 0x10000237, 1) , (register, 0x200, 1)]
[(unique, 0x10000230, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x125112, 1) , (unique, 0x1000022e, 1), (unique, 0x1000022e, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x1251e3, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004bf, 8), (unique, 0x100004bf, 8) INT_ADD (unique, 0x100004b7, 8) , (const, 0x14, 8), (unique, 0x100004b7, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x125220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100004c7, 8), (unique, 0x100004c7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x1251d0, 1)]
[ ---  CBRANCH (ram, 0x1251d0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x266330, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x307, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e0, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x307, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2e0, 4), (unique, 0xbd80, 8) CAST (unique, 0x100004cf, 8), (unique, 0x100004cf, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x307, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e0, 4)]
[ ---  CBRANCH (ram, 0x1251c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x18, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4)]
[(unique, 0x1000036b, 4) COPY (unique, 0x10000230, 4)]
[ ---  CBRANCH (ram, 0x12518d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000230, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x125226, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100004df, 8), (unique, 0x100004df, 8) CAST (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000014e, 8) , (const, 0x1, 8), (unique, 0x1000014e, 8) INT_2COMP (unique, 0x100004d7, 8), (unique, 0x100004d7, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x125185, 1)]
[(unique, 0x1000036f, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x125381, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x7, 4), (register, 0xa0, 4) MULTIEQUAL (unique, 0x1000036b, 4) , (unique, 0x1000036f, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0x10000230, 4) , (register, 0xa0, 4) , (unique, 0x10000230, 4)]
[(unique, 0x10000234, 1) MULTIEQUAL (unique, 0x10000236, 1) , (register, 0x206, 1) , (unique, 0x10000236, 1)]
[ ---  CBRANCH (ram, 0x1251e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1252a7, 1) , (unique, 0x10000234, 1)]
[ ---  CBRANCH (ram, 0x125362, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 8) , (unique, 0x100004f7, 8), (unique, 0x100004f7, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x8, 8) , (unique, 0x100001a6, 8) , (const, 0x1, 8), (unique, 0x100001a6, 8) INT_2COMP (unique, 0x100004ef, 8), (unique, 0x100004ef, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004e7, 8), (unique, 0x100004e7, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x47e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x47e, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000261, 8) , (unique, 0x10000239, 8) , (const, 0x309, 4) , (unique, 0x10000269, 8), (unique, 0x10000269, 8) COPY (const, 0x2bbc60, 8), (unique, 0x10000261, 8) COPY (const, 0x2b3a08, 8), (unique, 0x10000239, 8) COPY (const, 0x2b39e0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100004ff, 8), (unique, 0x100004ff, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12535e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x12534a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000507, 8), (unique, 0x10000507, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000050f, 8) , (unique, 0xbb00, 1), (unique, 0x1000050f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x125344, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000517, 8), (unique, 0x10000517, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000527, 8), (unique, 0x10000527, 8) INT_ADD (unique, 0x1000051f, 8) , (const, 0x5, 8), (unique, 0x1000051f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125344, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000052f, 8), (unique, 0x1000052f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000053f, 8), (unique, 0x1000053f, 8) INT_ADD (unique, 0x10000537, 8) , (const, 0x6, 8), (unique, 0x10000537, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125344, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000547, 8), (unique, 0x10000547, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000557, 8), (unique, 0x10000557, 8) INT_ADD (unique, 0x1000054f, 8) , (const, 0x7, 8), (unique, 0x1000054f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125344, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000055f, 8), (unique, 0x1000055f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000567, 8) , (unique, 0xbb00, 1), (unique, 0x10000567, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x125344, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x100002f3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000577, 8), (unique, 0x10000577, 8) INT_ADD (unique, 0x1000056f, 8) , (const, 0x9, 8), (unique, 0x1000056f, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000323, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000057f, 8), (unique, 0x1000057f, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000323, 8) , (unique, 0x1000032b, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000323, 8) , (unique, 0x1000032b, 8)]
[(unique, 0x100002fb, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8)]
[(unique, 0x1000032b, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000323, 8) , (unique, 0x1000032b, 8)]
[ ---  CBRANCH (ram, 0x12532c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000323, 8) , (unique, 0x1000032b, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000212, 4) , (const, 0x1, 4), (unique, 0x10000212, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[(register, 0xa0, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x1251e3, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (unique, 0x10000230, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1253a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000587, 8), (unique, 0x10000587, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x387, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x387, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000058f, 8), (unique, 0x1000058f, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x125091, 1)]
