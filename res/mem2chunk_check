[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000000, 8) , (const, 0x0, 8), (unique, 0x10000000, 8) INT_AND (register, 0x38, 8) , (const, 0xf, 8)]
[(register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000e4, 8), (unique, 0x100000e4, 8) INT_SUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x421497, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 1) , (const, 0x1, 1), (register, 0x88, 1) INT_XOR (unique, 0x100000aa, 1) , (unique, 0x100000ab, 1), (unique, 0x100000ab, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x100000aa, 1) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4), (register, 0x88, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x0, 1) COPY (const, 0x2, 1)]
[(unique, 0x10000011, 1) MULTIEQUAL (register, 0x88, 1) , (register, 0x0, 1)]
[(register, 0x8, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x421570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000009, 8) , (const, 0x0, 8), (unique, 0x10000009, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x421597, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (ram, 0x4c57a4, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x421560, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (ram, 0x4c5748, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_ADD (ram, 0x4c5748, 8) , (ram, 0x4c6028, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000005f, 8) , (const, 0x0, 8), (unique, 0x1000005f, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100000ec, 8), (unique, 0x100000ec, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_SUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4215cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a2, 8) , (const, 0x0, 8), (unique, 0x100000a2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000067, 8) , (const, 0x0, 8), (unique, 0x10000067, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xf, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f4, 8), (unique, 0x100000f4, 8) INT_SUB (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x421630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4215c2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (ram, 0x4c5748, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000fc, 8), (unique, 0x100000fc, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000104, 8), (unique, 0x10000104, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x7, 8)]
[(unique, 0x100000be, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100000c6, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x421604, 1) , (unique, 0x100000cf, 1), (unique, 0x100000cf, 1) INT_NOTEQUAL (unique, 0x10000011, 1) , (unique, 0x100000ce, 1), (unique, 0x100000ce, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x4215e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100000ce, 1)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000be, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000010c, 8), (unique, 0x1000010c, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x100000be, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x3100, 8) , (const, 0xffffffffffffffef, 8), (unique, 0x3100, 8) INT_SUB (register, 0x90, 8) , (const, 0x10, 8), (register, 0x90, 8) INT_AND (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (ram, 0x4c6118, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x421500, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1ffe, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x90, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x421500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x3100, 8) , (const, 0xffffffffffffffbf, 8), (unique, 0x3100, 8) INT_SUB (register, 0x90, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x421500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffffffeff, 8), (unique, 0x3200, 8) INT_SUB (register, 0x90, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x421640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffffffbff, 8), (unique, 0x3200, 8) INT_SUB (register, 0x90, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x421500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x1000, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x421560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x8, 8) , (register, 0x38, 8), (register, 0x8, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x38, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000114, 8), (unique, 0x10000114, 8) INT_SUB (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000011c, 8), (unique, 0x1000011c, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x100000d0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x100000d8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x421554, 1) , (unique, 0x100000e1, 1), (unique, 0x100000e1, 1) INT_NOTEQUAL (unique, 0x10000011, 1) , (unique, 0x100000e0, 1), (unique, 0x100000e0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x421538, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100000e0, 1)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421560, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000d0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000124, 8), (unique, 0x10000124, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0x100000d0, 8) , (register, 0x10, 8)]
[(ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x133, 4)]
[(ram, 0x4c57a4, 4) INDIRECT (ram, 0x4c57a4, 4) , (const, 0x133, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x133, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x133, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 1), (register, 0x0, 1) INT_NEGATE (unique, 0x10000011, 1), (register, 0x8, 8) MULTIEQUAL (unique, 0x100000d8, 8) , (unique, 0x100000c6, 8)]
[ ---  CBRANCH (ram, 0x421563, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x8, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x13f, 4)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4), (ram, 0x4c57a4, 4) INDIRECT (ram, 0x4c57a4, 4) , (const, 0x13f, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x13f, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x13f, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8)]
[(ram, 0x4c57a4, 4) COPY (ram, 0x4c57a4, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
