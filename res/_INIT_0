[(unique, 0x1000022e, 8) COPY (ram, 0x4eae58, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000286, 8), (unique, 0x10000286, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0xb8, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000028e, 8), (unique, 0x1000028e, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0xc0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x12156a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x68, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000296, 8), (unique, 0x10000296, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x6c, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) CALL (ram, 0x1bbe80, 8) , (const, 0xbc, 8)]
[(register, 0x0, 8) CALL (ram, 0x1bbe80, 8) , (const, 0xbf, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x381, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x37b, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x376, 4)]
[(ram, 0x4eb2f8, 8) INDIRECT (ram, 0x4eb2f8, 8) , (const, 0x381, 4), (ram, 0x4eb2f8, 8) INDIRECT (ram, 0x4eb2f8, 8) , (const, 0x37b, 4), (ram, 0x4eb2f8, 8) INDIRECT (ram, 0x4eb2f8, 8) , (const, 0x376, 4)]
[(ram, 0x4eb300, 8) INDIRECT (ram, 0x4eb300, 8) , (const, 0x381, 4), (ram, 0x4eb300, 8) INDIRECT (ram, 0x4eb300, 8) , (const, 0x37b, 4), (ram, 0x4eb300, 8) INDIRECT (ram, 0x4eb300, 8) , (const, 0x376, 4)]
[(ram, 0x4eb308, 8) INDIRECT (ram, 0x4eb308, 8) , (const, 0x381, 4), (ram, 0x4eb308, 8) INDIRECT (ram, 0x4eb308, 8) , (const, 0x37b, 4), (ram, 0x4eb308, 8) INDIRECT (ram, 0x4eb308, 8) , (const, 0x376, 4)]
[(ram, 0x4eb310, 8) INDIRECT (ram, 0x4eb310, 8) , (const, 0x381, 4), (ram, 0x4eb310, 8) INDIRECT (ram, 0x4eb310, 8) , (const, 0x37b, 4), (ram, 0x4eb310, 8) INDIRECT (ram, 0x4eb310, 8) , (const, 0x376, 4)]
[(ram, 0x4eb318, 8) INDIRECT (ram, 0x4eb318, 8) , (const, 0x381, 4), (ram, 0x4eb318, 8) INDIRECT (ram, 0x4eb318, 8) , (const, 0x37b, 4), (ram, 0x4eb318, 8) INDIRECT (ram, 0x4eb318, 8) , (const, 0x376, 4)]
[(ram, 0x4eb320, 8) INDIRECT (ram, 0x4eb320, 8) , (const, 0x381, 4), (ram, 0x4eb320, 8) INDIRECT (ram, 0x4eb320, 8) , (const, 0x37b, 4), (ram, 0x4eb320, 8) INDIRECT (ram, 0x4eb320, 8) , (const, 0x376, 4)]
[(ram, 0x4eb328, 8) INDIRECT (ram, 0x4eb328, 8) , (const, 0x381, 4), (ram, 0x4eb328, 8) INDIRECT (ram, 0x4eb328, 8) , (const, 0x37b, 4), (ram, 0x4eb328, 8) INDIRECT (ram, 0x4eb328, 8) , (const, 0x376, 4)]
[(ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x381, 4), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x37b, 4), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x376, 4)]
[(ram, 0x4f0678, 8) INDIRECT (ram, 0x4f0678, 8) , (const, 0x381, 4), (ram, 0x4f0678, 8) INDIRECT (ram, 0x4f0678, 8) , (const, 0x37b, 4), (ram, 0x4f0678, 8) INDIRECT (ram, 0x4f0678, 8) , (const, 0x376, 4)]
[(ram, 0x4f0680, 4) INDIRECT (ram, 0x4f0680, 4) , (const, 0x381, 4), (ram, 0x4f0680, 4) INDIRECT (ram, 0x4f0680, 4) , (const, 0x37b, 4), (ram, 0x4f0680, 4) INDIRECT (ram, 0x4f0680, 4) , (const, 0x376, 4)]
[ ---  CBRANCH (ram, 0x121646, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000029e, 8) , (const, 0x1, 8), (unique, 0x1000029e, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1bbe80, 8)]
[(register, 0x98, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc4, 4) COPY (const, 0x2, 4)]
[(unique, 0x1000023e, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x1215af, 1)]
[(register, 0x98, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc4, 4) COPY (const, 0x3, 4)]
[(unique, 0x10000236, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000236, 8) , (unique, 0x1000023e, 8)]
[(register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x10000000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0x7c, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x12169d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x10000000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0x7c, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x12165b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(register, 0x38, 4) COPY (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x121764, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 4) , (const, 0x0, 4)]
[(register, 0x38, 4) COPY (const, 0x1, 4)]
[(register, 0x98, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1215d9, 1)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x121616, 1)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002ae, 8), (unique, 0x100002ae, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x121663, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f6, 4) , (const, 0x0, 4), (unique, 0x100000f6, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002ae, 8), (unique, 0x100002ae, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1215eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x12160b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x121613, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ee, 4) , (const, 0x0, 4), (unique, 0x100000ee, 4) INT_AND (register, 0x38, 4) , (const, 0x2, 4)]
[(register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffffd, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xe, 4)]
[(register, 0x30, 4) INT_AND (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x2c280, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x121613, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000fe, 4) , (const, 0x0, 4), (unique, 0x100000fe, 4) INT_AND (register, 0x38, 4) , (const, 0x1, 4)]
[(register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffffe, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xe, 4)]
[ ---  BRANCH (ram, 0x12160b, 1)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x0, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x121772, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x121811, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xa, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[(unique, 0x100001df, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xd080, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0x3, 4), (unique, 0xd080, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1217aa, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100002b6, 4) , (const, 0x1, 4), (unique, 0x100002b6, 4) CAST (register, 0x98, 4)]
[(unique, 0x100001e0, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xd080, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0x2, 4)]
[(register, 0x88, 1) INT_OR (unique, 0x100001d1, 1) , (unique, 0x100001df, 1), (unique, 0x100001d1, 1) INT_MULT (register, 0x0, 1) , (const, 0x2, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0x100001e0, 1)]
[ ---  BRANCH (ram, 0x1217c4, 1)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x121811, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 1) , (const, 0x0, 1), (register, 0x88, 1) MULTIEQUAL (register, 0x88, 1) , (register, 0x88, 1) , (register, 0x88, 1) , (register, 0x88, 1) , (register, 0x88, 1) , (register, 0x88, 1)]
[(register, 0x8, 4) INT_AND (unique, 0x2c400, 4) , (const, 0xff00, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x100002c2, 8), (unique, 0x100002c2, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x121811, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0x2c100, 4) , (const, 0xff, 4), (unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) CAST (unique, 0x100002ba, 8), (unique, 0x100002ba, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x121811, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4) , (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x12181a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4), (register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x90, 4) INT_ADD (register, 0x90, 4) , (const, 0x1, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1218c3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100002ca, 4) , (const, 0x1, 4), (unique, 0x100002ca, 4) CAST (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x121832, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0x2, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12167f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x121669, 1)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x121669, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0x2, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ce, 8), (unique, 0x100002ce, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d6, 8), (unique, 0x100002d6, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0xa4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1218e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x121669, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x121669, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x121669, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x27, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x37, 4)]
[(register, 0x38, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x12188d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x10, 8) , (const, 0x4800480001, 8), (register, 0x10, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x90, 4)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x121699, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1217b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x100, 4)]
[ ---  CBRANCH (ram, 0x121892, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x200, 4)]
[ ---  CBRANCH (ram, 0x1217c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a7, 1) , (const, 0x0, 1), (unique, 0x100001a7, 1) INT_AND (register, 0x88, 1) , (const, 0x2, 1)]
[(register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1218f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc4, 4) , (const, 0x2, 4)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x90, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x90, 4) INT_AND (register, 0x90, 4) , (register, 0x18, 4), (register, 0x90, 4) INT_NEGATE (register, 0x90, 4), (register, 0x90, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) INT_ADD (unique, 0x100001d9, 1) , (const, 0x1, 1), (unique, 0x100001d9, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  BRANCH (ram, 0x1218ba, 1)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x98, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x98, 4) INT_AND (register, 0x98, 4) , (register, 0x18, 4), (register, 0x98, 4) INT_NEGATE (register, 0x98, 4), (register, 0x98, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) INT_ADD (unique, 0x100001d7, 1) , (const, 0x1, 1), (unique, 0x100001d7, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 1) INT_AND (register, 0x88, 1) , (const, 0xfd, 1)]
[ ---  BRANCH (ram, 0x1217c1, 1)]
[ ---  CBRANCH (ram, 0x1217c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000185, 1) , (const, 0x0, 1), (unique, 0x10000185, 1) INT_AND (register, 0x88, 1) , (const, 0x1, 1)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x90, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x88, 1) INT_AND (register, 0x88, 1) , (const, 0xfe, 1)]
[(register, 0x90, 4) INT_AND (register, 0x90, 4) , (register, 0x18, 4), (register, 0x90, 4) INT_NEGATE (register, 0x90, 4), (register, 0x90, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4), (register, 0x8, 1) INT_ADD (unique, 0x100001d5, 1) , (const, 0x1, 1), (unique, 0x100001d5, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  BRANCH (ram, 0x1217c1, 1)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x100002de, 1), (unique, 0x100002de, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0x76, 8) , (const, 0x1, 8)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x12167f, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100002df, 8), (unique, 0x100002df, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x12167f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_SDIV (unique, 0x100002e7, 8) , (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) CAST (register, 0x38, 8), (unique, 0x100002e7, 8) CAST (register, 0x28, 8)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x12169d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x0, 1), (register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1)]
[ ---  CBRANCH (ram, 0x121699, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_SDIV (unique, 0x100002fb, 8) , (register, 0x90, 8), (unique, 0x100002fb, 8) CAST (register, 0x0, 8), (register, 0x90, 8) INT_SEXT (unique, 0x100002f7, 4), (unique, 0x100002f7, 4) CAST (register, 0x90, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (stack, 0xffffffffffffffb8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1216ab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) CALL (ram, 0x1bb9c0, 8) , (const, 0xbc, 8)]
[(register, 0x0, 8) CALL (ram, 0x1bb9c0, 8) , (const, 0xbf, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x128, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x123, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb2f8, 8) INDIRECT (ram, 0x4eb2f8, 8) , (const, 0x128, 4), (ram, 0x4eb2f8, 8) INDIRECT (ram, 0x4eb2f8, 8) , (const, 0x123, 4), (ram, 0x4eb2f8, 8) INDIRECT (ram, 0x4eb2f8, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb300, 8) INDIRECT (ram, 0x4eb300, 8) , (const, 0x128, 4), (ram, 0x4eb300, 8) INDIRECT (ram, 0x4eb300, 8) , (const, 0x123, 4), (ram, 0x4eb300, 8) INDIRECT (ram, 0x4eb300, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb308, 8) INDIRECT (ram, 0x4eb308, 8) , (const, 0x128, 4), (ram, 0x4eb308, 8) INDIRECT (ram, 0x4eb308, 8) , (const, 0x123, 4), (ram, 0x4eb308, 8) INDIRECT (ram, 0x4eb308, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb310, 8) INDIRECT (ram, 0x4eb310, 8) , (const, 0x128, 4), (ram, 0x4eb310, 8) INDIRECT (ram, 0x4eb310, 8) , (const, 0x123, 4), (ram, 0x4eb310, 8) INDIRECT (ram, 0x4eb310, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb318, 8) INDIRECT (ram, 0x4eb318, 8) , (const, 0x128, 4), (ram, 0x4eb318, 8) INDIRECT (ram, 0x4eb318, 8) , (const, 0x123, 4), (ram, 0x4eb318, 8) INDIRECT (ram, 0x4eb318, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb320, 8) INDIRECT (ram, 0x4eb320, 8) , (const, 0x128, 4), (ram, 0x4eb320, 8) INDIRECT (ram, 0x4eb320, 8) , (const, 0x123, 4), (ram, 0x4eb320, 8) INDIRECT (ram, 0x4eb320, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb328, 8) INDIRECT (ram, 0x4eb328, 8) , (const, 0x128, 4), (ram, 0x4eb328, 8) INDIRECT (ram, 0x4eb328, 8) , (const, 0x123, 4), (ram, 0x4eb328, 8) INDIRECT (ram, 0x4eb328, 8) , (const, 0x11e, 4)]
[(ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x128, 4), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x123, 4), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x11e, 4)]
[(ram, 0x4f0678, 8) INDIRECT (ram, 0x4f0678, 8) , (const, 0x128, 4), (ram, 0x4f0678, 8) INDIRECT (ram, 0x4f0678, 8) , (const, 0x123, 4), (ram, 0x4f0678, 8) INDIRECT (ram, 0x4f0678, 8) , (const, 0x11e, 4)]
[(ram, 0x4f0680, 4) INDIRECT (ram, 0x4f0680, 4) , (const, 0x128, 4), (ram, 0x4f0680, 4) INDIRECT (ram, 0x4f0680, 4) , (const, 0x123, 4), (ram, 0x4f0680, 4) INDIRECT (ram, 0x4f0680, 4) , (const, 0x11e, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000303, 8), (unique, 0x10000303, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[ ---  CBRANCH (ram, 0x121733, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x1bb9c0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x12170f, 1)]
[ ---  CBRANCH (ram, 0x121737, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x2bf80, 4) , (const, 0x80000008, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x2c280, 4) , (const, 0x10000000, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x12170c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2c280, 4) , (const, 0x10000000, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000030b, 8), (unique, 0x1000030b, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(register, 0x38, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4), (register, 0x18, 4) INT_RIGHT (unique, 0x2c100, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x12170c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4), (register, 0x18, 4) INT_RIGHT (unique, 0x2c100, 4) , (const, 0x10, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000008, 4)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x1000031b, 4), (unique, 0x1000031b, 4) CAST (register, 0x38, 4), (register, 0x38, 4) INT_LEFT (const, 0x1, 4) , (register, 0x8, 1), (register, 0x8, 1) INT_AND (unique, 0x100001cf, 1) , (const, 0xf, 1), (unique, 0x100001cf, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x2c400, 4) , (const, 0xc, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000313, 8), (unique, 0x10000313, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000008, 4)]
[(register, 0x80, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[(register, 0x0, 8) INT_SDIV (register, 0x0, 8) , (unique, 0x1000031f, 8), (unique, 0x1000031f, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12169d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x80000000, 4) , (register, 0x80, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (unique, 0x2bf80, 4)]
[(unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) CAST (unique, 0x10000327, 8), (unique, 0x10000327, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x8, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[ ---  CBRANCH (ram, 0x12175a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001db, 4) , (const, 0x0, 4), (unique, 0x100001db, 4) INT_AND (unique, 0x2c400, 4) , (const, 0x100, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) CAST (unique, 0x1000032f, 8), (unique, 0x1000032f, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0xc, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[ ---  CBRANCH (ram, 0x12169d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x2c280, 4) , (const, 0x0, 4)]
[(ram, 0x4f0680, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x12169d, 1)]
[(ram, 0x4f0680, 4) MULTIEQUAL (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8)]
[(ram, 0x4eb318, 8) MULTIEQUAL (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8)]
[(ram, 0x4eb310, 8) MULTIEQUAL (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8)]
[(ram, 0x4eb308, 8) MULTIEQUAL (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eb300, 8) MULTIEQUAL (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8)]
[(ram, 0x4eb2f8, 8) MULTIEQUAL (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1214be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x121561, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4f0680, 4) MULTIEQUAL (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8)]
[(ram, 0x4eb318, 8) MULTIEQUAL (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8)]
[(ram, 0x4eb310, 8) MULTIEQUAL (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8)]
[(ram, 0x4eb308, 8) MULTIEQUAL (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eb300, 8) MULTIEQUAL (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8)]
[(ram, 0x4eb2f8, 8) MULTIEQUAL (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x10000256, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4f0680, 4) MULTIEQUAL (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8)]
[(ram, 0x4eb310, 8) MULTIEQUAL (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8)]
[(ram, 0x4eb308, 8) MULTIEQUAL (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eb300, 8) MULTIEQUAL (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8)]
[(ram, 0x4eb2f8, 8) MULTIEQUAL (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x1000026e, 8) COPY (ram, 0x4eb318, 8), (ram, 0x4eb318, 8) MULTIEQUAL (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8)]
[ ---  CBRANCH (ram, 0x1214ee, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000337, 8), (unique, 0x10000337, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000256, 8) , (register, 0xa8, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x1000033f, 8) , (const, 0x1, 4), (unique, 0x1000033f, 8) CAST (register, 0xa8, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x10000347, 8) , (const, 0x1, 4), (unique, 0x10000347, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) INT_AND (register, 0xa8, 8) , (const, 0xffffffffffffff00, 8)]
[(unique, 0x10000276, 8) COPY (register, 0xa8, 8)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (register, 0x0, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (register, 0xa8, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (register, 0x0, 8)]
[(ram, 0x4eb318, 8) MULTIEQUAL (unique, 0x1000026e, 8) , (unique, 0x10000276, 8)]
[(unique, 0x10000246, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1214f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1214f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4f0680, 4) MULTIEQUAL (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8)]
[(ram, 0x4eb318, 8) MULTIEQUAL (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8)]
[(ram, 0x4eb310, 8) MULTIEQUAL (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8)]
[(ram, 0x4eb308, 8) MULTIEQUAL (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eb300, 8) MULTIEQUAL (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8)]
[(ram, 0x4eb2f8, 8) MULTIEQUAL (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1000024e, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4f0680, 4) MULTIEQUAL (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8)]
[(ram, 0x4eb318, 8) MULTIEQUAL (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8)]
[(ram, 0x4eb310, 8) MULTIEQUAL (ram, 0x4eb310, 8) , (ram, 0x4eb310, 8)]
[(ram, 0x4eb308, 8) MULTIEQUAL (ram, 0x4eb308, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eb300, 8) MULTIEQUAL (ram, 0x4eb300, 8) , (ram, 0x4eb300, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x1000025e, 8) COPY (ram, 0x4eb2f8, 8), (ram, 0x4eb2f8, 8) MULTIEQUAL (ram, 0x4eb2f8, 8) , (ram, 0x4eb2f8, 8)]
[ ---  CBRANCH (ram, 0x121526, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000246, 8) , (unique, 0x1000024e, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x10000357, 8) , (const, 0x1, 4), (unique, 0x10000357, 8) CAST (register, 0x28, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x1000035f, 8) , (const, 0x1, 4), (unique, 0x1000035f, 8) CAST (register, 0x28, 8), (register, 0x28, 8) INT_AND (register, 0x28, 8) , (const, 0xffffffffffffff00, 8)]
[(unique, 0x10000266, 8) COPY (register, 0x28, 8)]
[(ram, 0x4f0680, 4) MULTIEQUAL (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4) , (ram, 0x4f0680, 4)]
[(ram, 0x4eb330, 8) MULTIEQUAL (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8) , (ram, 0x4eb330, 8)]
[(ram, 0x4eb328, 8) MULTIEQUAL (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8) , (ram, 0x4eb328, 8)]
[(ram, 0x4eb320, 8) MULTIEQUAL (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8) , (ram, 0x4eb320, 8)]
[(ram, 0x4eb318, 8) MULTIEQUAL (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8) , (ram, 0x4eb318, 8)]
[(ram, 0x4eb310, 8) MULTIEQUAL (ram, 0x4eb310, 8) , (register, 0x0, 8) , (ram, 0x4eb310, 8)]
[(ram, 0x4eb308, 8) MULTIEQUAL (ram, 0x4eb308, 8) , (register, 0x28, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eb300, 8) MULTIEQUAL (ram, 0x4eb300, 8) , (register, 0x0, 8) , (ram, 0x4eb300, 8)]
[(ram, 0x4eb2f8, 8) MULTIEQUAL (unique, 0x1000025e, 8) , (unique, 0x10000266, 8) , (ram, 0x4eb2f8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x12154b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000367, 8), (unique, 0x10000367, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x1000022e, 8) , (const, 0xc8, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_SDIV (unique, 0x1000036f, 8) , (const, 0x4, 8), (unique, 0x1000036f, 8) CAST (unique, 0x1000009e, 8), (unique, 0x1000009e, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_MULT (register, 0x38, 8) , (ram, 0x4eb308, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4eb2f8, 8) COPY (ram, 0x4eb2f8, 8)]
[(ram, 0x4eb300, 8) COPY (ram, 0x4eb300, 8)]
[(ram, 0x4eb308, 8) COPY (ram, 0x4eb308, 8)]
[(ram, 0x4eb310, 8) COPY (ram, 0x4eb310, 8)]
[(ram, 0x4eb318, 8) COPY (ram, 0x4eb318, 8)]
[(ram, 0x4eb320, 8) COPY (ram, 0x4eb320, 8)]
[(ram, 0x4eb328, 8) COPY (ram, 0x4eb328, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[(ram, 0x4f0678, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4f0680, 4) COPY (ram, 0x4f0680, 4)]
[ ---  RETURN (const, 0x0, 8)]
