[(unique, 0x100001e8, 8) COPY (ram, 0x4c2e70, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000260, 8), (unique, 0x10000260, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x70, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1202ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000260, 8), (unique, 0x10000260, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x70, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000268, 8), (unique, 0x10000268, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x74, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) CALL (ram, 0x1aa030, 8) , (const, 0xbc, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x2ee, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31c0, 8) INDIRECT (ram, 0x4c31c0, 8) , (const, 0x2ee, 4), (ram, 0x4c31c0, 8) INDIRECT (ram, 0x4c31c0, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31c8, 8) INDIRECT (ram, 0x4c31c8, 8) , (const, 0x2ee, 4), (ram, 0x4c31c8, 8) INDIRECT (ram, 0x4c31c8, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31d0, 8) INDIRECT (ram, 0x4c31d0, 8) , (const, 0x2ee, 4), (ram, 0x4c31d0, 8) INDIRECT (ram, 0x4c31d0, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31d8, 8) INDIRECT (ram, 0x4c31d8, 8) , (const, 0x2ee, 4), (ram, 0x4c31d8, 8) INDIRECT (ram, 0x4c31d8, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31e0, 8) INDIRECT (ram, 0x4c31e0, 8) , (const, 0x2ee, 4), (ram, 0x4c31e0, 8) INDIRECT (ram, 0x4c31e0, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31e8, 8) INDIRECT (ram, 0x4c31e8, 8) , (const, 0x2ee, 4), (ram, 0x4c31e8, 8) INDIRECT (ram, 0x4c31e8, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31f0, 8) INDIRECT (ram, 0x4c31f0, 8) , (const, 0x2ee, 4), (ram, 0x4c31f0, 8) INDIRECT (ram, 0x4c31f0, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c31f8, 8) INDIRECT (ram, 0x4c31f8, 8) , (const, 0x2ee, 4), (ram, 0x4c31f8, 8) INDIRECT (ram, 0x4c31f8, 8) , (const, 0x2e7, 4)]
[(ram, 0x4c84e0, 4) INDIRECT (ram, 0x4c84e0, 4) , (const, 0x2ee, 4), (ram, 0x4c84e0, 4) INDIRECT (ram, 0x4c84e0, 4) , (const, 0x2e7, 4)]
[(register, 0x38, 4) COPY (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x120546, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000270, 8) , (const, 0x1, 8), (unique, 0x10000270, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1aa030, 8) , (const, 0xc2, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31c0, 8) INDIRECT (ram, 0x4c31c0, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31c8, 8) INDIRECT (ram, 0x4c31c8, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31d0, 8) INDIRECT (ram, 0x4c31d0, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31d8, 8) INDIRECT (ram, 0x4c31d8, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31e0, 8) INDIRECT (ram, 0x4c31e0, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31e8, 8) INDIRECT (ram, 0x4c31e8, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31f0, 8) INDIRECT (ram, 0x4c31f0, 8) , (const, 0x57c, 4)]
[(ram, 0x4c31f8, 8) INDIRECT (ram, 0x4c31f8, 8) , (const, 0x57c, 4)]
[(ram, 0x4c84e0, 4) INDIRECT (ram, 0x4c84e0, 4) , (const, 0x57c, 4)]
[(register, 0x0, 8) CALL (ram, 0x1aa030, 8) , (const, 0xbf, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x12031c, 1)]
[(ram, 0x4c84e0, 4) MULTIEQUAL (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4)]
[(ram, 0x4c31f8, 8) MULTIEQUAL (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8)]
[(ram, 0x4c31f0, 8) MULTIEQUAL (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8)]
[(ram, 0x4c31e8, 8) MULTIEQUAL (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8)]
[(ram, 0x4c31e0, 8) MULTIEQUAL (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8)]
[(ram, 0x4c31d8, 8) MULTIEQUAL (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8)]
[(ram, 0x4c31d0, 8) MULTIEQUAL (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8)]
[(ram, 0x4c31c8, 8) MULTIEQUAL (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8)]
[(ram, 0x4c31c0, 8) MULTIEQUAL (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x100001f0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12035e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000278, 8), (unique, 0x10000278, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100001e8, 8) , (const, 0xa8, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000280, 8), (unique, 0x10000280, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100001e8, 8) , (const, 0xac, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x120352, 1)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000288, 8), (unique, 0x10000288, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x120340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000144, 4) , (const, 0x0, 4), (unique, 0x10000144, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000288, 8), (unique, 0x10000288, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x100001f0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x10000290, 1), (unique, 0x10000290, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001e8, 8) , (const, 0x7e, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x120498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0x5, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xe, 4)]
[ ---  CBRANCH (ram, 0x120363, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xe, 4)]
[ ---  CBRANCH (ram, 0x1204f6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xa, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[(register, 0x8, 4) INT_AND (unique, 0x2c400, 4) , (const, 0xff0, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x1204f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0x2c100, 4) , (const, 0xff, 4), (unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) CALLOTHER (const, 0x33, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x1204f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1204bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x200, 4)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_ADD (unique, 0x1b080, 4) , (const, 0xffffffff, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x18, 4), (register, 0x0, 4) INT_NEGATE (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (const, 0xffffffff, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x18, 4) INT_SUB (register, 0x18, 4) , (const, 0x1, 4), (register, 0x8, 1) INT_ADD (unique, 0x1000014a, 1) , (const, 0x1, 1), (unique, 0x1000014a, 1) SUBPIECE (unique, 0x1b080, 4) , (const, 0x0, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) INT_OR (unique, 0x10000124, 8) , (unique, 0x1000012c, 8), (unique, 0x1000012c, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x10000124, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffffffffff00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x2, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x120363, 1) , (unique, 0x59000, 1), (unique, 0x59000, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x2, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x120363, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x120363, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0x27, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x37, 4)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x120541, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (const, 0x4900480001, 8), (register, 0x0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4)]
[(register, 0x10, 8) COPY (const, 0x2, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000210, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x120379, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000299, 8), (unique, 0x10000299, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000218, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x120379, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) INT_SREM (unique, 0x100002b1, 8) , (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) CAST (register, 0x10, 8), (unique, 0x100002b1, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000220, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SDIV (unique, 0x100002a1, 8) , (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) CAST (register, 0x10, 8), (unique, 0x100002a1, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1203e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) CALL (ram, 0x1aa150, 8) , (const, 0xbc, 8)]
[(register, 0x0, 8) CALL (ram, 0x1aa150, 8) , (const, 0xbf, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x42, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x3d, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x38, 4)]
[(ram, 0x4c31c0, 8) INDIRECT (ram, 0x4c31c0, 8) , (const, 0x42, 4), (ram, 0x4c31c0, 8) INDIRECT (ram, 0x4c31c0, 8) , (const, 0x3d, 4), (ram, 0x4c31c0, 8) INDIRECT (ram, 0x4c31c0, 8) , (const, 0x38, 4)]
[(ram, 0x4c31c8, 8) INDIRECT (ram, 0x4c31c8, 8) , (const, 0x42, 4), (ram, 0x4c31c8, 8) INDIRECT (ram, 0x4c31c8, 8) , (const, 0x3d, 4), (ram, 0x4c31c8, 8) INDIRECT (ram, 0x4c31c8, 8) , (const, 0x38, 4)]
[(ram, 0x4c31d0, 8) INDIRECT (ram, 0x4c31d0, 8) , (const, 0x42, 4), (ram, 0x4c31d0, 8) INDIRECT (ram, 0x4c31d0, 8) , (const, 0x3d, 4), (ram, 0x4c31d0, 8) INDIRECT (ram, 0x4c31d0, 8) , (const, 0x38, 4)]
[(ram, 0x4c31d8, 8) INDIRECT (ram, 0x4c31d8, 8) , (const, 0x42, 4), (ram, 0x4c31d8, 8) INDIRECT (ram, 0x4c31d8, 8) , (const, 0x3d, 4), (ram, 0x4c31d8, 8) INDIRECT (ram, 0x4c31d8, 8) , (const, 0x38, 4)]
[(ram, 0x4c31e0, 8) INDIRECT (ram, 0x4c31e0, 8) , (const, 0x42, 4), (ram, 0x4c31e0, 8) INDIRECT (ram, 0x4c31e0, 8) , (const, 0x3d, 4), (ram, 0x4c31e0, 8) INDIRECT (ram, 0x4c31e0, 8) , (const, 0x38, 4)]
[(ram, 0x4c31e8, 8) INDIRECT (ram, 0x4c31e8, 8) , (const, 0x42, 4), (ram, 0x4c31e8, 8) INDIRECT (ram, 0x4c31e8, 8) , (const, 0x3d, 4), (ram, 0x4c31e8, 8) INDIRECT (ram, 0x4c31e8, 8) , (const, 0x38, 4)]
[(ram, 0x4c31f0, 8) INDIRECT (ram, 0x4c31f0, 8) , (const, 0x42, 4), (ram, 0x4c31f0, 8) INDIRECT (ram, 0x4c31f0, 8) , (const, 0x3d, 4), (ram, 0x4c31f0, 8) INDIRECT (ram, 0x4c31f0, 8) , (const, 0x38, 4)]
[(ram, 0x4c31f8, 8) INDIRECT (ram, 0x4c31f8, 8) , (const, 0x42, 4), (ram, 0x4c31f8, 8) INDIRECT (ram, 0x4c31f8, 8) , (const, 0x3d, 4), (ram, 0x4c31f8, 8) INDIRECT (ram, 0x4c31f8, 8) , (const, 0x38, 4)]
[(ram, 0x4c84e0, 4) INDIRECT (ram, 0x4c84e0, 4) , (const, 0x42, 4), (ram, 0x4c84e0, 4) INDIRECT (ram, 0x4c84e0, 4) , (const, 0x3d, 4), (ram, 0x4c84e0, 4) INDIRECT (ram, 0x4c84e0, 4) , (const, 0x38, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000000, 4)]
[ ---  CBRANCH (ram, 0x120442, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1aa150, 8) , (const, 0xc2, 8)]
[ ---  CBRANCH (ram, 0x120469, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x2bf80, 4) , (const, 0x80000008, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000008, 4)]
[(register, 0x0, 4) INT_LEFT (const, 0x1, 4) , (register, 0x8, 1), (register, 0x8, 1) INT_AND (unique, 0x10000148, 1) , (const, 0xf, 1), (unique, 0x10000148, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x2c400, 4) , (const, 0xc, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000008, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x2c280, 4) , (const, 0x10000000, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(unique, 0x10000228, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12043f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2c280, 4) , (const, 0x10000000, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(unique, 0x10000230, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x120481, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x18, 4) , (const, 0xff, 4), (register, 0x18, 4) INT_RIGHT (unique, 0x2c100, 4) , (const, 0x10, 4)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[(register, 0x10, 8) INT_SREM (unique, 0x100002f1, 8) , (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) CAST (register, 0x8, 8), (unique, 0x100002f1, 8) CAST (register, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000150, 4), (unique, 0x10000150, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[(unique, 0x10000238, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SDIV (unique, 0x100002e1, 8) , (unique, 0x100002e9, 8), (unique, 0x100002e9, 8) CAST (register, 0x8, 8), (unique, 0x100002e1, 8) CAST (register, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000150, 4), (unique, 0x10000150, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x12043f, 1)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000228, 8) , (unique, 0x10000230, 8) , (unique, 0x10000238, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001f8, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x120379, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x80000000, 4) , (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (register, 0x30, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x2c280, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[ ---  CBRANCH (ram, 0x12048e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000014c, 4) , (const, 0x0, 4), (unique, 0x1000014c, 4) INT_AND (unique, 0x2c400, 4) , (const, 0x100, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) CALLOTHER (const, 0x28, 4) , (const, 0x80000001, 4)]
[(unique, 0x10000208, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x120379, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000309, 4) , (const, 0x0, 4), (unique, 0x10000309, 4) CAST (unique, 0x2c280, 4)]
[(ram, 0x4c84e0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x10000200, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x120379, 1)]
[(ram, 0x4c84e0, 4) MULTIEQUAL (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4)]
[(ram, 0x4c31f0, 8) MULTIEQUAL (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8)]
[(ram, 0x4c31e8, 8) MULTIEQUAL (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8)]
[(ram, 0x4c31d8, 8) MULTIEQUAL (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8)]
[(ram, 0x4c31d0, 8) MULTIEQUAL (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8)]
[(ram, 0x4c31c8, 8) MULTIEQUAL (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8)]
[(ram, 0x4c31c0, 8) MULTIEQUAL (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (unique, 0x10000200, 8) , (unique, 0x10000208, 8) , (unique, 0x10000210, 8) , (unique, 0x10000218, 8) , (unique, 0x10000220, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000240, 8) COPY (ram, 0x4c31e0, 8), (ram, 0x4c31e0, 8) MULTIEQUAL (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8)]
[(unique, 0x10000250, 8) COPY (ram, 0x4c31f8, 8), (ram, 0x4c31f8, 8) MULTIEQUAL (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8)]
[ ---  CBRANCH (ram, 0x1203aa, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_SRIGHT (unique, 0x10000315, 8) , (const, 0x1, 4), (unique, 0x10000315, 8) CAST (register, 0xa0, 8)]
[(unique, 0x10000248, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000258, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x1000031d, 8) , (const, 0x1, 4), (unique, 0x1000031d, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) INT_AND (register, 0xa0, 8) , (const, 0xffffffffffffff00, 8)]
[(ram, 0x4c31f8, 8) MULTIEQUAL (unique, 0x10000250, 8) , (unique, 0x10000258, 8)]
[(ram, 0x4c31f0, 8) MULTIEQUAL (ram, 0x4c31f0, 8) , (register, 0xa0, 8)]
[(ram, 0x4c31e8, 8) MULTIEQUAL (ram, 0x4c31e8, 8) , (register, 0x0, 8)]
[(ram, 0x4c31e0, 8) MULTIEQUAL (unique, 0x10000240, 8) , (unique, 0x10000248, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1202e1, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000325, 8), (unique, 0x10000325, 8) CAST (register, 0x28, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8)]
[(ram, 0x4c31c0, 8) COPY (register, 0x28, 8)]
[(ram, 0x4c31c8, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x1000032d, 8) , (const, 0x1, 4), (unique, 0x1000032d, 8) CAST (register, 0x28, 8)]
[(ram, 0x4c31d0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) INT_AND (register, 0x28, 8) , (const, 0xffffffffffffff00, 8)]
[(ram, 0x4c31d8, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x10000335, 8) , (const, 0x1, 4), (unique, 0x10000335, 8) CAST (register, 0x28, 8), (register, 0x28, 8) INT_AND (register, 0x28, 8) , (const, 0xffffffffffffff00, 8)]
[(ram, 0x4c31e0, 8) COPY (ram, 0x4c31e0, 8)]
[(ram, 0x4c31e8, 8) COPY (ram, 0x4c31e8, 8)]
[(ram, 0x4c31f0, 8) COPY (ram, 0x4c31f0, 8)]
[(ram, 0x4c31f8, 8) COPY (ram, 0x4c31f8, 8)]
[(ram, 0x4c84e0, 4) COPY (ram, 0x4c84e0, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100001d8, 16) , (register, 0x0, 8), (unique, 0x100001d8, 16) INT_LEFT (unique, 0x100001c8, 16) , (const, 0x40, 16), (unique, 0x100001c8, 16) INT_SEXT (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CAST (register, 0x10, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x10000335, 8) , (const, 0x1, 4), (unique, 0x10000335, 8) CAST (register, 0x28, 8), (register, 0x28, 8) INT_AND (register, 0x28, 8) , (const, 0xffffffffffffff00, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c31c0, 8) COPY (ram, 0x4c31c0, 8), (ram, 0x4c31c0, 8) MULTIEQUAL (ram, 0x4c31c0, 8) , (ram, 0x4c31c0, 8)]
[(ram, 0x4c31c8, 8) COPY (ram, 0x4c31c8, 8), (ram, 0x4c31c8, 8) MULTIEQUAL (ram, 0x4c31c8, 8) , (ram, 0x4c31c8, 8)]
[(ram, 0x4c31d0, 8) COPY (ram, 0x4c31d0, 8), (ram, 0x4c31d0, 8) MULTIEQUAL (ram, 0x4c31d0, 8) , (ram, 0x4c31d0, 8)]
[(ram, 0x4c31d8, 8) COPY (ram, 0x4c31d8, 8), (ram, 0x4c31d8, 8) MULTIEQUAL (ram, 0x4c31d8, 8) , (ram, 0x4c31d8, 8)]
[(ram, 0x4c31e0, 8) COPY (ram, 0x4c31e0, 8), (ram, 0x4c31e0, 8) MULTIEQUAL (ram, 0x4c31e0, 8) , (ram, 0x4c31e0, 8)]
[(ram, 0x4c31e8, 8) COPY (ram, 0x4c31e8, 8), (ram, 0x4c31e8, 8) MULTIEQUAL (ram, 0x4c31e8, 8) , (ram, 0x4c31e8, 8)]
[(ram, 0x4c31f0, 8) COPY (ram, 0x4c31f0, 8), (ram, 0x4c31f0, 8) MULTIEQUAL (ram, 0x4c31f0, 8) , (ram, 0x4c31f0, 8)]
[(ram, 0x4c31f8, 8) COPY (ram, 0x4c31f8, 8), (ram, 0x4c31f8, 8) MULTIEQUAL (ram, 0x4c31f8, 8) , (ram, 0x4c31f8, 8)]
[(ram, 0x4c84e0, 4) COPY (ram, 0x4c84e0, 4), (ram, 0x4c84e0, 4) MULTIEQUAL (ram, 0x4c84e0, 4) , (ram, 0x4c84e0, 4)]
[ ---  RETURN (const, 0x0, 8) , (VARIABLE, 0x0, 4), (VARIABLE, 0x0, 4) INT_ADD (unique, 0x100001b8, 16) , (register, 0x0, 8), (unique, 0x100001b8, 16) INT_LEFT (unique, 0x100001a8, 16) , (const, 0x40, 16), (unique, 0x100001a8, 16) INT_SEXT (unique, 0x10000345, 8), (unique, 0x10000345, 8) CAST (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
