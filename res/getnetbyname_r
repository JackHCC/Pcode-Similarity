[ ---  CBRANCH (ram, 0x21ade0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7400, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x218, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x218, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x218, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x218, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x218, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x218, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x218, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x218, 4)]
[ ---  CBRANCH (ram, 0x21ae4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22aa90, 8) , (unique, 0x3800, 8) , (unique, 0x1000017f, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x1000017f, 8) COPY (const, 0x28ed50, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x257, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x257, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x257, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x257, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x257, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x257, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x257, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x257, 4)]
[ ---  CBRANCH (ram, 0x21ae99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x228080, 8) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) INT_ADD (unique, 0x100001d7, 8) , (unique, 0x100001df, 8), (unique, 0x100001df, 8) CAST (ram, 0x4c2fe8, 8), (unique, 0x100001d7, 8) CAST (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ad, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2ad, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c73f0, 8) COPY (ram, 0x4c73f0, 8), (ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x2ad, 4), (ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c73f8, 8) COPY (ram, 0x4c73f8, 8), (ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x2ad, 4), (ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c7400, 1) COPY (ram, 0x4c7400, 1), (ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x2ad, 4), (ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x2a8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) INT_ADD (unique, 0x100001ef, 8) , (unique, 0x100001f7, 8), (unique, 0x100001f7, 8) CAST (ram, 0x4c2e78, 8), (unique, 0x100001ef, 8) CAST (register, 0x110, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ad, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2a8, 4)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0x10000207, 8) , (unique, 0xbd80, 8), (unique, 0x10000207, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x21ae1a, 1)]
[(register, 0x0, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c73f8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c73f0, 8) MULTIEQUAL (ram, 0x4c73f0, 8) , (register, 0x0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7400, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x21ac6e, 1)]
[(register, 0x0, 8) CAST (unique, 0x1000020f, 8), (unique, 0x1000020f, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c73f0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c73f0, 8) , (const, 0x11, 4)]
[(unique, 0x10000132, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c73f8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c73f8, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c7400, 1) MULTIEQUAL (ram, 0x4c7400, 1) , (ram, 0x4c7400, 1)]
[(ram, 0x4c73f8, 8) MULTIEQUAL (ram, 0x4c73f8, 8) , (ram, 0x4c73f8, 8)]
[(ram, 0x4c73f0, 8) MULTIEQUAL (ram, 0x4c73f0, 8) , (ram, 0x4c73f0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001cf, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x21ad9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0x0, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x10000132, 4) , (register, 0x0, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x1ec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ec, 4)]
[ ---  CBRANCH (ram, 0x21adca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000227, 8), (unique, 0x10000227, 8) INT_ADD (unique, 0x10000217, 8) , (unique, 0x1000021f, 8), (unique, 0x1000021f, 8) CAST (ram, 0x4c2e78, 8), (unique, 0x10000217, 8) CAST (register, 0x110, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x204, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x204, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x204, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x204, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x204, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x3, 4)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x21ad7c, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x200, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x200, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x200, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x200, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x200, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0xffffffff, 4)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x21ad7c, 1)]
[(stack, 0xffffffffffffffa8, 8) COPY (unique, 0x100001cf, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xb8, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x21acce, 1)]
[ ---  CALL (ram, 0x242d60, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc3, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb6, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0xc3, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0xb6, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0xc3, 4), (ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0xb6, 4), (ram, 0x4c73f0, 8) MULTIEQUAL (ram, 0x4c73f0, 8) , (ram, 0x4c73f0, 8)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0xc3, 4), (ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0xb6, 4), (ram, 0x4c73f8, 8) MULTIEQUAL (ram, 0x4c73f8, 8) , (ram, 0x4c73f8, 8)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0xc3, 4), (ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0xb6, 4), (ram, 0x4c7400, 1) MULTIEQUAL (ram, 0x4c7400, 1) , (ram, 0x4c7400, 1)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xc3, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x21aca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0xb8, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x21aca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x21aca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x22, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000023f, 8), (unique, 0x1000023f, 8) INT_ADD (unique, 0x1000022f, 8) , (unique, 0x10000237, 8), (unique, 0x10000237, 8) CAST (unique, 0x100001cf, 8), (unique, 0x1000022f, 8) CAST (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf5, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0xf5, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0xf5, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0xf5, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0xf5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000257, 8), (unique, 0x10000257, 8) INT_ADD (unique, 0x10000247, 8) , (unique, 0x1000024f, 8), (unique, 0x1000024f, 8) CAST (unique, 0x100001cf, 8), (unique, 0x10000247, 8) CAST (register, 0x110, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a3, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1a3, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x1a3, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x1a3, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a3, 4)]
[ ---  CBRANCH (ram, 0x21ad60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (unique, 0x3800, 8) , (unique, 0x10000177, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x10000177, 8) COPY (const, 0x28ed50, 8)]
[ ---  CBRANCH (ram, 0x21ae30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x1dd, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x1dd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x30, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bd, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1bd, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x1bd, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x1bd, 4)]
[(ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x1bd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21aeb6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x21ae35, 1)]
[(ram, 0x4c7400, 1) MULTIEQUAL (ram, 0x4c7400, 1) , (ram, 0x4c7400, 1) , (ram, 0x4c7400, 1)]
[(ram, 0x4c73f8, 8) MULTIEQUAL (ram, 0x4c73f8, 8) , (ram, 0x4c73f8, 8) , (ram, 0x4c73f8, 8)]
[(ram, 0x4c73f0, 8) MULTIEQUAL (ram, 0x4c73f0, 8) , (ram, 0x4c73f0, 8) , (ram, 0x4c73f0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026f, 8), (unique, 0x1000026f, 8) INT_ADD (unique, 0x1000025f, 8) , (unique, 0x10000267, 8), (unique, 0x10000267, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x1000025f, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000142, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000014a, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0x0, 4)]
[(unique, 0x1000014e, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000156, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(unique, 0x1000015e, 8) MULTIEQUAL (ram, 0x4c73f0, 8) , (ram, 0x4c73f0, 8)]
[(unique, 0x10000166, 8) MULTIEQUAL (ram, 0x4c73f8, 8) , (ram, 0x4c73f8, 8)]
[(unique, 0x1000016e, 1) MULTIEQUAL (ram, 0x4c7400, 1) , (ram, 0x4c7400, 1)]
[(unique, 0x1000016f, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x100001cf, 8)]
[ ---  CBRANCH (ram, 0x21ad28, 1) , (unique, 0x10000141, 1), (unique, 0x10000141, 1) INT_EQUAL (unique, 0x1000013d, 4) , (const, 0x22, 4), (unique, 0x1000013d, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x10, 4) COPY (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x21ae35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000014a, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (register, 0x10, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000287, 8), (unique, 0x10000287, 8) INT_ADD (unique, 0x10000277, 8) , (unique, 0x1000027f, 8), (unique, 0x1000027f, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x10000277, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x10000142, 8) , (register, 0x110, 8) , (register, 0x110, 8), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000016f, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x147, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000014e, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x147, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (unique, 0x10000156, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c73f0, 8) COPY (ram, 0x4c73f0, 8), (ram, 0x4c73f0, 8) INDIRECT (ram, 0x4c73f0, 8) , (const, 0x147, 4), (ram, 0x4c73f0, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (ram, 0x4c73f0, 8) , (ram, 0x4c73f0, 8)]
[(ram, 0x4c73f8, 8) COPY (ram, 0x4c73f8, 8), (ram, 0x4c73f8, 8) INDIRECT (ram, 0x4c73f8, 8) , (const, 0x147, 4), (ram, 0x4c73f8, 8) MULTIEQUAL (unique, 0x10000166, 8) , (ram, 0x4c73f8, 8) , (ram, 0x4c73f8, 8)]
[(ram, 0x4c7400, 1) COPY (ram, 0x4c7400, 1), (ram, 0x4c7400, 1) INDIRECT (ram, 0x4c7400, 1) , (const, 0x147, 4), (ram, 0x4c7400, 1) MULTIEQUAL (unique, 0x1000016e, 1) , (ram, 0x4c7400, 1) , (ram, 0x4c7400, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x21ad37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000014a, 4) , (const, 0xfffffffe, 4)]
[(ram, 0x4c2e78, 8) COPY (unique, 0x1000014e, 8)]
[(ram, 0x4c2fe8, 8) COPY (unique, 0x10000156, 8)]
[(ram, 0x4c73f0, 8) COPY (unique, 0x1000015e, 8)]
[(ram, 0x4c73f8, 8) COPY (unique, 0x10000166, 8)]
[(ram, 0x4c7400, 1) COPY (unique, 0x1000016e, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x1000013d, 4)]
[ ---  CBRANCH (ram, 0x21ad4b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(register, 0x10, 4) COPY (const, 0xb, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x1000014e, 8) , (const, 0x127, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (unique, 0x10000156, 8) , (const, 0x127, 4)]
[(ram, 0x4c73f0, 8) INDIRECT (unique, 0x1000015e, 8) , (const, 0x127, 4)]
[(ram, 0x4c73f8, 8) INDIRECT (unique, 0x10000166, 8) , (const, 0x127, 4)]
[(ram, 0x4c7400, 1) INDIRECT (unique, 0x1000016e, 1) , (const, 0x127, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xb, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000029f, 8), (unique, 0x1000029f, 8) INT_ADD (unique, 0x1000028f, 8) , (unique, 0x10000297, 8), (unique, 0x10000297, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000028f, 8) CAST (unique, 0x10000142, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000014e, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) MULTIEQUAL (unique, 0x10000156, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c73f0, 8) COPY (ram, 0x4c73f0, 8), (ram, 0x4c73f0, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (ram, 0x4c73f0, 8)]
[(ram, 0x4c73f8, 8) COPY (ram, 0x4c73f8, 8), (ram, 0x4c73f8, 8) MULTIEQUAL (unique, 0x10000166, 8) , (ram, 0x4c73f8, 8)]
[(ram, 0x4c7400, 1) COPY (ram, 0x4c7400, 1), (ram, 0x4c7400, 1) MULTIEQUAL (unique, 0x1000016e, 1) , (ram, 0x4c7400, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000013d, 4) , (register, 0x10, 4)]
