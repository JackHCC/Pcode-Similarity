[(unique, 0x10000288, 4) COPY (ram, 0x4f08e8, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18f3b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8)]
[ ---  BRANCH (ram, 0x18f137, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6b, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x6b, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x6b, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x6b, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x6b, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x6b, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x6b, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x6b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x6b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x6b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x6b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x6b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6b, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (unique, 0x100001ac, 8) , (const, 0x0, 8), (unique, 0x100001ac, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8), (register, 0x0, 8) CAST (unique, 0x10000314, 8), (unique, 0x10000314, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000030c, 8), (unique, 0x1000030c, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x100002dc, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18f18f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18f165, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002f4, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002e4, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18f188, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x318, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x318, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x318, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x318, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x318, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x318, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x318, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x318, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x318, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x318, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x318, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x318, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x318, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x100002ec, 8) COPY (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x318, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (unique, 0x100002dc, 8) , (unique, 0x100002e4, 8) , (unique, 0x100002ec, 8) , (unique, 0x100002f4, 8)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 4) INT_ADD (ram, 0x4ed8a4, 4) , (const, 0x1, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[ ---  CBRANCH (ram, 0x18f306, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec660, 8) , (const, 0x0, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000324, 8), (unique, 0x10000324, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[(unique, 0x1000028c, 8) COPY (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) CAST (ram, 0x4ec660, 8)]
[ ---  BRANCH (ram, 0x18f278, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x100002b4, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000028c, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18f2da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18f2da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x18f2d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033c, 8), (unique, 0x1000033c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000334, 8), (unique, 0x10000334, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f2b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x30a, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002b4, 8) , (const, 0x30a, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x30a, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x30a, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x30a, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x30a, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x30a, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x30a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x30a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x11d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002b4, 8) , (const, 0x11d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x11d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x11d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x11d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x11d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x11d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x11d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18f2cb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ed, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2ed, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x100002b4, 8) , (const, 0x2ed, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2ed, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2ed, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2ed, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2ed, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2ed, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2ed, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ed, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2ed, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2ed, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ed, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x126, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x126, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x126, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x126, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x126, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x126, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x126, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x126, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x126, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000034c, 8) , (unique, 0xbd80, 8), (unique, 0x1000034c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000344, 8), (unique, 0x10000344, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x12e, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x12e, 4), (ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x100002b4, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x12e, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x12e, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x12e, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x12e, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x12e, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x12e, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12e, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x100002b4, 8) , (unique, 0x100002b4, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18f1d0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x10000354, 4) , (const, 0x1, 4), (unique, 0x10000354, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f20d, 1) , (unique, 0x10000199, 1), (unique, 0x10000199, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000368, 8), (unique, 0x10000368, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000358, 8), (unique, 0x10000358, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f1e1, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000380, 8), (unique, 0x10000380, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000378, 8), (unique, 0x10000378, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000370, 8), (unique, 0x10000370, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f3a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000388, 8), (unique, 0x10000388, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c7, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2c7, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x2c7, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2c7, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2c7, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2c7, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2c7, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2c7, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2c7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c7, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18f1f7, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2b3, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x2b3, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2b3, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2b3, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2b3, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2b3, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2b3, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2b3, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b3, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x18f20d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000390, 8), (unique, 0x10000390, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x18f260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18f260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x17d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x17d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x17d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x17d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x17d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x17d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x17d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x17d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000398, 8), (unique, 0x10000398, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000398, 8), (unique, 0x10000398, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x18, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x18b, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x18b, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x18b, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x18b, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x18b, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x18b, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x18b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x18b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a0, 8) , (const, 0x0, 8), (unique, 0x100003a0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18f23f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18b, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x28a, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x28a, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x28a, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x28a, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x28a, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x28a, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x28a, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x28a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x28a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x19b, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x19b, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x19b, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x19b, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x19b, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x19b, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x19b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x19b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x19b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000245, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x1000024d, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(unique, 0x10000255, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(unique, 0x10000259, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x1000025d, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(unique, 0x10000265, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(unique, 0x1000026d, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(unique, 0x10000275, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x10000279, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18f259, 1) , (unique, 0x10000244, 1), (unique, 0x10000244, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x27c, 4)]
[(ram, 0x4ec660, 8) INDIRECT (unique, 0x10000245, 8) , (const, 0x27c, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x1000024d, 8) , (const, 0x27c, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (unique, 0x10000255, 4) , (const, 0x27c, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (unique, 0x10000259, 4) , (const, 0x27c, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (unique, 0x1000025d, 8) , (const, 0x27c, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (unique, 0x10000265, 8) , (const, 0x27c, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (unique, 0x1000026d, 8) , (const, 0x27c, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x10000275, 4) , (const, 0x27c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000279, 4) , (const, 0x27c, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x27c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x27c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x10000279, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (unique, 0x10000275, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (unique, 0x1000026d, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (unique, 0x10000265, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (unique, 0x1000025d, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (unique, 0x10000259, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (unique, 0x10000255, 4)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0x10000245, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed890, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18f300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x100002c4, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[ ---  CBRANCH (ram, 0x18f354, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18f332, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100002cc, 4) COPY (unique, 0x1000027d, 4), (unique, 0x1000027d, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x18f354, 1) , (unique, 0x10000281, 1), (unique, 0x10000281, 1) INT_NOTEQUAL (unique, 0x1000027d, 4) , (const, 0x0, 4), (unique, 0x1000027d, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25d, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x25d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x25d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x0, 4) , (const, 0x25d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x25d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x100002c8, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x25d, 4), (ram, 0x4ed8a0, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4ed8a4, 4) , (register, 0x0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed8a0, 4) COPY (unique, 0x100002d0, 4), (unique, 0x100002d0, 4) MULTIEQUAL (unique, 0x100002c4, 4) , (unique, 0x100002c8, 4) , (unique, 0x100002cc, 4)]
[ ---  CBRANCH (ram, 0x18f379, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000288, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x221, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x221, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x221, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x221, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x221, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x221, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x221, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x221, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x221, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x221, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x221, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x221, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x221, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b8, 8), (unique, 0x100003b8, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x0, 4) COPY (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x18f3d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x24e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x24e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x24e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x24e, 4)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8), (ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x24e, 4)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x24e, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x24e, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x24e, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x24e, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x24e, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x24e, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x24e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
