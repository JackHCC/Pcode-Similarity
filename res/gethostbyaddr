[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x235138, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ef2c8, 4) , (const, 0x0, 4)]
[(ram, 0x4ef2c8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ef2c8, 4) , (const, 0x0, 4)]
[(ram, 0x4ef2c8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x23515b, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x15c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15c, 4)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0x15c, 4)]
[(ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0x15c, 4)]
[(ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0x15c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x15c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x15c, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef2c8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef2c8, 4) MULTIEQUAL (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000170, 8) COPY (ram, 0x4ef2c0, 8), (ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[ ---  CBRANCH (ram, 0x235298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec928, 8) , (const, 0x0, 8), (ram, 0x4ec928, 8) MULTIEQUAL (ram, 0x4ec928, 8) , (ram, 0x4ec928, 8) , (ram, 0x4ec928, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x140, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x140, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x140, 4)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0x140, 4)]
[(ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0x140, 4), (ram, 0x4ef2c0, 8) COPY (const, 0x400, 8)]
[(ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0x140, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x140, 4)]
[(register, 0x88, 8) COPY (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x235172, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001ac, 8), (unique, 0x100001ac, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef2c8, 4) MULTIEQUAL (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4)]
[(ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000170, 8) , (register, 0x88, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x10000178, 8) COPY (ram, 0x4ec928, 8), (ram, 0x4ec928, 8) MULTIEQUAL (ram, 0x4ec928, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x235187, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x70, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x70, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x70, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0x70, 4), (ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[(ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0x70, 4), (ram, 0x4ef2c8, 4) MULTIEQUAL (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x70, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x70, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000168, 8) COPY (ram, 0x4ec928, 8), (ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0x70, 4), (ram, 0x4ec928, 8) COPY (unique, 0x10000188, 8), (unique, 0x10000188, 8) MULTIEQUAL (unique, 0x10000178, 8) , (unique, 0x10000180, 8)]
[ ---  CBRANCH (ram, 0x235288, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x2352d0, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (unique, 0x1000012f, 8) , (ram, 0x4ec928, 8) , (register, 0x88, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x1000012f, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef2a0, 8), (ram, 0x4ec928, 8) COPY (unique, 0x10000188, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (unique, 0x10000116, 8), (unique, 0x10000188, 8) MULTIEQUAL (unique, 0x10000178, 8) , (unique, 0x10000180, 8)]
[ ---  CBRANCH (ram, 0x235288, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x235215, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec928, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x9c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x9c, 4)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0x9c, 4)]
[(ram, 0x4ef2c0, 8) INDIRECT (unique, 0x10000190, 8) , (const, 0x9c, 4), (unique, 0x10000190, 8) COPY (unique, 0x10000116, 8), (unique, 0x10000116, 8) INT_MULT (ram, 0x4ef2c0, 8) , (const, 0x2, 8)]
[(ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0x9c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9c, 4)]
[(unique, 0x10000180, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec928, 8) , (unique, 0x10000116, 8), (unique, 0x10000116, 8) INT_MULT (ram, 0x4ef2c0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x235180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec928, 8) , (unique, 0x10000116, 8), (unique, 0x10000116, 8) INT_MULT (ram, 0x4ef2c0, 8) , (const, 0x2, 8)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaf, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x10000168, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xb4, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xaf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0xb4, 4), (ram, 0x4ec928, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0xb4, 4), (ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0xaf, 4)]
[(ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0xb4, 4), (ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0xaf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb4, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xaf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c4, 8) , (const, 0xc, 4), (unique, 0x100001c4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaf, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef2c8, 4) MULTIEQUAL (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4)]
[(ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[(ram, 0x4ec928, 8) MULTIEQUAL (ram, 0x4ec928, 8) , (register, 0x0, 8) , (ram, 0x4ec928, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4ef2c8, 4) MULTIEQUAL (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4)]
[(ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[(ram, 0x4ec928, 8) MULTIEQUAL (ram, 0x4ec928, 8) , (ram, 0x4ec928, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x235229, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000019c, 4) COPY (unique, 0x10000157, 4), (unique, 0x10000157, 4) INT_ADD (ram, 0x4ef2c8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x23524b, 1) , (unique, 0x1000015b, 1), (unique, 0x1000015b, 1) INT_NOTEQUAL (unique, 0x10000157, 4) , (const, 0x0, 4), (unique, 0x10000157, 4) INT_ADD (ram, 0x4ef2c8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11c, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x11c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x11c, 4)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0x11c, 4)]
[(ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0x11c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000137, 8), (unique, 0x10000137, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef2c8, 8)]
[(unique, 0x10000198, 4) COPY (ram, 0x4ef2c8, 4), (ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0x11c, 4), (ram, 0x4ef2c8, 4) INT_ADD (ram, 0x4ef2c8, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[(ram, 0x4ec928, 8) MULTIEQUAL (ram, 0x4ec928, 8) , (ram, 0x4ec928, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ef2c8, 4) COPY (unique, 0x100001a0, 4), (unique, 0x100001a0, 4) MULTIEQUAL (unique, 0x10000198, 4) , (unique, 0x1000019c, 4)]
[ ---  CBRANCH (ram, 0x23525d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xdf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xdf, 4)]
[(ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0xdf, 4)]
[(ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0xdf, 4)]
[(ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0xdf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xdf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cc, 8) , (stack, 0xffffffffffffffb4, 4), (unique, 0x100001cc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ef2c8, 4) MULTIEQUAL (ram, 0x4ef2c8, 4) , (ram, 0x4ef2c8, 4)]
[(ram, 0x4ef2c0, 8) MULTIEQUAL (ram, 0x4ef2c0, 8) , (ram, 0x4ef2c0, 8)]
[(ram, 0x4ec928, 8) MULTIEQUAL (ram, 0x4ec928, 8) , (ram, 0x4ec928, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x0, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x2352cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001d4, 8), (unique, 0x100001d4, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10d, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x10d, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10d, 4)]
[(ram, 0x4ec928, 8) COPY (ram, 0x4ec928, 8), (ram, 0x4ec928, 8) INDIRECT (ram, 0x4ec928, 8) , (const, 0x10d, 4)]
[(ram, 0x4ef2c0, 8) COPY (ram, 0x4ef2c0, 8), (ram, 0x4ef2c0, 8) INDIRECT (ram, 0x4ef2c0, 8) , (const, 0x10d, 4)]
[(ram, 0x4ef2c8, 4) COPY (ram, 0x4ef2c8, 4), (ram, 0x4ef2c8, 4) INDIRECT (ram, 0x4ef2c8, 4) , (const, 0x10d, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec928, 8) COPY (ram, 0x4ec928, 8)]
[(ram, 0x4ef2c0, 8) COPY (ram, 0x4ef2c0, 8)]
[(ram, 0x4ef2c8, 4) COPY (ram, 0x4ef2c8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
