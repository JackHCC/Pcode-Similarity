[(stack, 0xffffffffffffffbc, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x218e6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c71e8, 4) , (const, 0x0, 4)]
[(ram, 0x4c71e8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c71e8, 4) , (const, 0x0, 4)]
[(ram, 0x4c71e8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x218e90, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x140, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x140, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x140, 4)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0x140, 4)]
[(ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0x140, 4)]
[(ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0x140, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x140, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x140, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000124, 8), (unique, 0x10000124, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c71e8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c71e8, 4) MULTIEQUAL (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000152, 8) COPY (ram, 0x4c71e0, 8), (ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[ ---  CBRANCH (ram, 0x218fb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c47e8, 8) , (const, 0x0, 8), (ram, 0x4c47e8, 8) MULTIEQUAL (ram, 0x4c47e8, 8) , (ram, 0x4c47e8, 8) , (ram, 0x4c47e8, 8)]
[(register, 0x28, 8) COPY (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x125, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x125, 4)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0x125, 4)]
[(ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0x125, 4), (ram, 0x4c71e0, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0x125, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x125, 4)]
[ ---  CBRANCH (ram, 0x218ea7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000186, 8), (unique, 0x10000186, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c71e8, 4) MULTIEQUAL (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4)]
[(ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000152, 8) , (register, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x1000015a, 8) COPY (ram, 0x4c47e8, 8), (ram, 0x4c47e8, 8) MULTIEQUAL (ram, 0x4c47e8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x218ec2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x6f, 4), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6f, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0x6f, 4), (ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[(ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0x6f, 4), (ram, 0x4c71e8, 4) MULTIEQUAL (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x6f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x6f, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000014a, 8) COPY (ram, 0x4c47e8, 8), (ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0x6f, 4), (ram, 0x4c47e8, 8) COPY (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) MULTIEQUAL (unique, 0x1000015a, 8) , (unique, 0x10000162, 8)]
[ ---  CBRANCH (ram, 0x218fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x218ff0, 8) , (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 4) , (unique, 0x10000114, 8) , (ram, 0x4c47e8, 8) , (register, 0x28, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x10000114, 8) CAST (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c71c0, 8), (ram, 0x4c47e8, 8) COPY (unique, 0x1000016a, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x10000105, 8), (unique, 0x1000016a, 8) MULTIEQUAL (unique, 0x1000015a, 8) , (unique, 0x10000162, 8)]
[ ---  CBRANCH (ram, 0x218fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffbc, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x218f49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c47e8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x98, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0x98, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x98, 4)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0x98, 4)]
[(ram, 0x4c71e0, 8) INDIRECT (unique, 0x10000172, 8) , (const, 0x98, 4), (unique, 0x10000172, 8) COPY (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_MULT (ram, 0x4c71e0, 8) , (const, 0x2, 8)]
[(ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0x98, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x98, 4)]
[(unique, 0x10000162, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c47e8, 8) , (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_MULT (ram, 0x4c71e0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x218eb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000196, 8), (unique, 0x10000196, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c47e8, 8) , (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_MULT (ram, 0x4c71e0, 8) , (const, 0x2, 8)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xa7, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x1000014a, 8)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xac, 4), (ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xa7, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xac, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa7, 4)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0xac, 4), (ram, 0x4c47e8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0xac, 4), (ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0xa7, 4)]
[(ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0xac, 4), (ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0xa7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xac, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xa7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019e, 8) , (const, 0xc, 4), (unique, 0x1000019e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c71e8, 4) MULTIEQUAL (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4)]
[(ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[(ram, 0x4c47e8, 8) MULTIEQUAL (ram, 0x4c47e8, 8) , (register, 0x0, 8) , (ram, 0x4c47e8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4c71e8, 4) MULTIEQUAL (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4)]
[(ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[(ram, 0x4c47e8, 8) MULTIEQUAL (ram, 0x4c47e8, 8) , (ram, 0x4c47e8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x218f5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000017e, 4) COPY (unique, 0x1000013c, 4), (unique, 0x1000013c, 4) INT_ADD (ram, 0x4c71e8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x218f7f, 1) , (unique, 0x10000140, 1), (unique, 0x10000140, 1) INT_NOTEQUAL (unique, 0x1000013c, 4) , (const, 0x0, 4), (unique, 0x1000013c, 4) INT_ADD (ram, 0x4c71e8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xff, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xff, 4)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0xff, 4)]
[(ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0xff, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xff, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x1000011c, 8), (unique, 0x1000011c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c71e8, 8)]
[(unique, 0x1000017a, 4) COPY (ram, 0x4c71e8, 4), (ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0xff, 4), (ram, 0x4c71e8, 4) INT_ADD (ram, 0x4c71e8, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[(ram, 0x4c47e8, 8) MULTIEQUAL (ram, 0x4c47e8, 8) , (ram, 0x4c47e8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c71e8, 4) COPY (unique, 0x10000182, 4), (unique, 0x10000182, 4) MULTIEQUAL (unique, 0x1000017a, 4) , (unique, 0x1000017e, 4)]
[ ---  CBRANCH (ram, 0x218f91, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffbc, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(ram, 0x4c2e68, 8) INDIRECT (ram, 0x4c2e68, 8) , (const, 0xd7, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd7, 4)]
[(ram, 0x4c47e8, 8) INDIRECT (ram, 0x4c47e8, 8) , (const, 0xd7, 4)]
[(ram, 0x4c71e0, 8) INDIRECT (ram, 0x4c71e0, 8) , (const, 0xd7, 4)]
[(ram, 0x4c71e8, 4) INDIRECT (ram, 0x4c71e8, 4) , (const, 0xd7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a6, 8) , (stack, 0xffffffffffffffbc, 4), (unique, 0x100001a6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e68, 8) COPY (ram, 0x4c2e68, 8), (ram, 0x4c2e68, 8) MULTIEQUAL (ram, 0x4c2e68, 8) , (ram, 0x4c2e68, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c47e8, 8) COPY (ram, 0x4c47e8, 8), (ram, 0x4c47e8, 8) MULTIEQUAL (ram, 0x4c47e8, 8) , (ram, 0x4c47e8, 8)]
[(ram, 0x4c71e0, 8) COPY (ram, 0x4c71e0, 8), (ram, 0x4c71e0, 8) MULTIEQUAL (ram, 0x4c71e0, 8) , (ram, 0x4c71e0, 8)]
[(ram, 0x4c71e8, 4) COPY (ram, 0x4c71e8, 4), (ram, 0x4c71e8, 4) MULTIEQUAL (ram, 0x4c71e8, 4) , (ram, 0x4c71e8, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffc0, 8)]
