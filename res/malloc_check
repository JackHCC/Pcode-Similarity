[(register, 0x30, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4258ad, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xfffffffffffffffe, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000125, 8), (unique, 0x10000125, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x210, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x210, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x210, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x210, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x210, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425838, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fe, 4)]
[(ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x1fe, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x1fe, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x1fe, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1fe, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x1fe, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  BRANCH (ram, 0x425725, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c57a0, 4) , (const, 0x0, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[(ram, 0x4c57a4, 1) MULTIEQUAL (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c5748, 8) MULTIEQUAL (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x425782, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5800, 8) , (const, 0x4c5800, 8), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[ ---  CBRANCH (ram, 0x4258a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000037, 8) , (const, 0x0, 8), (unique, 0x10000037, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000135, 8), (unique, 0x10000135, 8) INT_ADD (ram, 0x4c5800, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4258a1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (const, 0x20, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x4258a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000a8, 8) , (const, 0x0, 8), (unique, 0x100000a8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x425782, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c57a4, 1) , (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x4258a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (ram, 0x4c6028, 8) , (ram, 0x4c5748, 8), (register, 0x0, 8) INT_ADD (ram, 0x4c5800, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x100000e9, 8) , (register, 0x30, 8), (unique, 0x100000e9, 8) COPY (const, 0x49b352, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x1d9, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x1d9, 4)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x1d9, 4)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x1d9, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5748, 8) INDIRECT (ram, 0x4c5748, 8) , (const, 0x9d, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (ram, 0x4c57a4, 1) , (const, 0x9d, 4)]
[(ram, 0x4c5800, 8) INDIRECT (ram, 0x4c5800, 8) , (const, 0x9d, 4)]
[(ram, 0x4c6028, 8) INDIRECT (ram, 0x4c6028, 8) , (const, 0x9d, 4)]
[(register, 0x0, 8) CALL (ram, 0x423fd0, 8) , (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(unique, 0x10000101, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) INDIRECT (ram, 0x4c57a0, 4) , (const, 0x9d, 4)]
[ ---  CBRANCH (ram, 0x425870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9d, 4)]
[(ram, 0x4c57a0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4257a8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x10000101, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4257a8, 1)]
[(ram, 0x4c57a0, 4) INT_ADD (ram, 0x4c57a0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[ ---  CBRANCH (ram, 0x425828, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000145, 8), (unique, 0x10000145, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x4257d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x1, 1), (register, 0x8, 1) INT_XOR (unique, 0x100000b8, 1) , (unique, 0x100000b9, 1), (unique, 0x100000b9, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x100000b8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x3, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xb, 4), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8)]
[(register, 0x0, 1) COPY (const, 0x2, 1)]
[(unique, 0x1000005c, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x0, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x10000105, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x4257e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b0, 8) , (const, 0x0, 8), (unique, 0x100000b0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(unique, 0x1000010d, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x1000005c, 1)]
[(register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000105, 8) , (unique, 0x1000010d, 8)]
[(unique, 0x100000cc, 8) MULTIEQUAL (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8)]
[(unique, 0x100000d4, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(unique, 0x100000d8, 1) MULTIEQUAL (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1)]
[(unique, 0x100000d9, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(unique, 0x100000e1, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[ ---  CBRANCH (ram, 0x425824, 1) , (unique, 0x100000cb, 1), (unique, 0x100000cb, 1) INT_LESS (register, 0x38, 8) , (unique, 0x100000c3, 8), (unique, 0x100000c3, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425811, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xff, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0x100000c3, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) COPY (const, 0xff, 8)]
[(unique, 0x10000115, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x425818, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000011d, 8) COPY (unique, 0x3100, 8)]
[(ram, 0x4c5748, 8) INDIRECT (unique, 0x100000cc, 8) , (const, 0x185, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (unique, 0x100000d4, 4) , (const, 0x185, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (unique, 0x100000d8, 1) , (const, 0x185, 4)]
[(ram, 0x4c5800, 8) INDIRECT (unique, 0x100000d9, 8) , (const, 0x185, 4)]
[(ram, 0x4c6028, 8) INDIRECT (unique, 0x100000e1, 8) , (const, 0x185, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x1000014d, 8), (unique, 0x1000014d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x100000c3, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000115, 8) , (unique, 0x1000011d, 8)]
[(register, 0x0, 8) INT_SUB (unique, 0x100000c3, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000115, 8) , (unique, 0x1000011d, 8)]
[(ram, 0x4c5748, 8) INDIRECT (unique, 0x100000cc, 8) , (const, 0x19c, 4)]
[(ram, 0x4c57a0, 4) INDIRECT (unique, 0x100000d4, 4) , (const, 0x19c, 4)]
[(ram, 0x4c57a4, 1) INDIRECT (unique, 0x100000d8, 1) , (const, 0x19c, 4)]
[(ram, 0x4c5800, 8) INDIRECT (unique, 0x100000d9, 8) , (const, 0x19c, 4)]
[(ram, 0x4c6028, 8) INDIRECT (unique, 0x100000e1, 8) , (const, 0x19c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x1000005c, 1), (unique, 0x3400, 8) CAST (unique, 0x10000155, 8), (unique, 0x10000155, 8) INT_ADD (register, 0x0, 8) , (register, 0x38, 8)]
[(ram, 0x4c5748, 8) COPY (ram, 0x4c5748, 8), (ram, 0x4c5748, 8) MULTIEQUAL (ram, 0x4c5748, 8) , (ram, 0x4c5748, 8)]
[(ram, 0x4c57a0, 4) COPY (ram, 0x4c57a0, 4), (ram, 0x4c57a0, 4) MULTIEQUAL (ram, 0x4c57a0, 4) , (ram, 0x4c57a0, 4)]
[(ram, 0x4c57a4, 1) COPY (ram, 0x4c57a4, 1), (ram, 0x4c57a4, 1) MULTIEQUAL (ram, 0x4c57a4, 1) , (ram, 0x4c57a4, 1)]
[(ram, 0x4c5800, 8) COPY (ram, 0x4c5800, 8), (ram, 0x4c5800, 8) MULTIEQUAL (ram, 0x4c5800, 8) , (ram, 0x4c5800, 8)]
[(ram, 0x4c6028, 8) COPY (ram, 0x4c6028, 8), (ram, 0x4c6028, 8) MULTIEQUAL (ram, 0x4c6028, 8) , (ram, 0x4c6028, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
