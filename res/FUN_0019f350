[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x38, 4)]
[(stack, 0xfffffffffffff7b0, 8) INDIRECT (stack, 0xfffffffffffff7b0, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x38, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CALL (ram, 0x19f200, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b0, 8)]
[(unique, 0x3c80, 8) PTRADD (unique, 0x1000025c, 8) , (const, 0x100, 8) , (const, 0x8, 8), (unique, 0x1000025c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000018e, 8) , (register, 0x8, 8), (unique, 0x1000018e, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f3c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3c80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (stack, 0xfffffffffffff7b0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19f5c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4c5, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x4c5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4c5, 4)]
[ ---  CBRANCH (ram, 0x19f760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x1000038c, 8) , (unique, 0x10000394, 8) , (register, 0x0, 8), (unique, 0x10000394, 8) CAST (unique, 0x3400, 8), (unique, 0x1000038c, 8) CAST (register, 0x10, 8)]
[(register, 0xb0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a4, 8), (unique, 0x100003a4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100002e4, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x10000324, 8) COPY (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000324, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001df, 8) , (register, 0x8, 8) , (const, 0x8, 8), (unique, 0x100001df, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002e4, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000324, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19f400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002e4, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xac, 4)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0xac, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xac, 4)]
[ ---  CBRANCH (ram, 0x19f5f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x100003b4, 8) , (unique, 0x100003bc, 8) , (register, 0x0, 8), (unique, 0x100003bc, 8) CAST (unique, 0x3400, 8), (unique, 0x100003b4, 8) CAST (register, 0x10, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) PTRADD (register, 0x10, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_SUB (register, 0x8, 8) , (stack, 0xfffffffffffff7b0, 8)]
[(register, 0x0, 8) INT_SUB (const, 0x1, 8) , (register, 0x0, 8)]
[(unique, 0x1000032c, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000364, 8) COPY (register, 0x90, 8), (register, 0x90, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19f4a1, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000364, 8) , (unique, 0x1000036c, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x131, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x131, 4), (ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x131, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (register, 0x38, 8) , (const, 0x0, 4) , (register, 0x10, 8), (register, 0x38, 8) CAST (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) INT_ADD (register, 0x38, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_SUB (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x28, 8) , (register, 0x28, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000032c, 8) , (unique, 0x10000374, 8) , (unique, 0x10000374, 8)]
[ ---  CBRANCH (ram, 0x19f760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x19f760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000374, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x19f488, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001ff, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100001ff, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003d4, 8), (unique, 0x100003d4, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3400, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000294, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19f498, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (stack, 0xfffffffffffff7b0, 8)]
[(unique, 0x1000029c, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19f498, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[(unique, 0x100002a4, 8) COPY (register, 0x0, 8)]
[(unique, 0x100002c4, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f4f1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8)]
[(unique, 0x100002cc, 8) COPY (register, 0xa0, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c4, 8) , (unique, 0x100002cc, 8)]
[(register, 0x10, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x28, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c4, 8) , (unique, 0x100002cc, 8)]
[ ---  CBRANCH (ram, 0x19f53d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c4, 8) , (unique, 0x100002cc, 8)]
[ ---  CBRANCH (ram, 0x19f798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3b80, 8) INT_ADD (register, 0x38, 8) , (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x19f534, 1)]
[ ---  CBRANCH (ram, 0x19f520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003fc, 8), (unique, 0x100003fc, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) INT_ADD (unique, 0x3b80, 8) , (register, 0x0, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x0, 8)]
[(unique, 0x1000028c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19f498, 1)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000028c, 8) , (unique, 0x10000294, 8) , (unique, 0x1000029c, 8) , (unique, 0x100002a4, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) CAST (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x28, 8)]
[(unique, 0x10000314, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f7a2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f7a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000041c, 8), (unique, 0x1000041c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(unique, 0x3800, 8) INT_SUB (register, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0x100002ec, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x19f59f, 1)]
[(unique, 0x10000304, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) MULTIEQUAL (unique, 0x100002ec, 8) , (unique, 0x100002f4, 8)]
[ ---  CBRANCH (ram, 0x19f588, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) MULTIEQUAL (unique, 0x100002ec, 8) , (unique, 0x100002f4, 8)]
[(unique, 0x100002f4, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000030c, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x19f5a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000042c, 8), (unique, 0x1000042c, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000424, 8), (unique, 0x10000424, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x88, 8) , (unique, 0x10000217, 8) , (const, 0x1, 8), (unique, 0x10000217, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x1000020f, 8), (unique, 0x1000020f, 8) INT_SUB (const, 0x1, 8) , (register, 0x0, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19f7aa, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000304, 8) , (unique, 0x1000030c, 8) , (unique, 0x10000314, 8) , (unique, 0x10000314, 8)]
[(unique, 0x3b80, 8) INT_ADD (register, 0x38, 8) , (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x19f762, 1)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (stack, 0xfffffffffffff7b0, 8)]
[(unique, 0x1000036c, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19f49e, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x100002d4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f608, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x8, 8) , (register, 0x0, 8)]
[(unique, 0x100002dc, 8) COPY (register, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002d4, 8) , (unique, 0x100002dc, 8)]
[(register, 0x0, 8) PTRADD (register, 0x10, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_SUB (const, 0x1, 8) , (register, 0x0, 8)]
[(unique, 0x10000344, 8) COPY (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x19f65e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x37a, 4), (ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x37a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x19f760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1210c0, 8) , (register, 0x38, 8) , (const, 0x0, 4) , (register, 0x10, 8), (register, 0x38, 8) CAST (unique, 0x10000434, 8), (unique, 0x10000434, 8) INT_ADD (register, 0x38, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_SUB (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0xa8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000344, 8) , (unique, 0x1000037c, 8) , (unique, 0x1000037c, 8) , (unique, 0x1000037c, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xa8, 8) , (unique, 0x3400, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19f760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3400, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000037c, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x19f658, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000022f, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x1000022f, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7b8, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000444, 8), (unique, 0x10000444, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000043c, 8), (unique, 0x1000043c, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3400, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000044c, 8), (unique, 0x1000044c, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19f6ea, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0xb0, 8)]
[(unique, 0x100002b4, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19f748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000045c, 8), (unique, 0x1000045c, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000454, 8), (unique, 0x10000454, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x19f6e1, 1)]
[ ---  CBRANCH (ram, 0x19f6d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0xb0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002b4, 8) , (register, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000464, 8), (unique, 0x10000464, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x38, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19f73c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x19f787, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000474, 8), (unique, 0x10000474, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000046c, 8), (unique, 0x1000046c, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x100002ac, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x19f732, 1)]
[ ---  CBRANCH (ram, 0x19f720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002ac, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x19f762, 1)]
[(ram, 0x4eaf20, 8) MULTIEQUAL (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8) , (ram, 0x4eaf20, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3b80, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x19f7b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x266, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8), (ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x266, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x19f787, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000048c, 8), (unique, 0x1000048c, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000484, 8), (unique, 0x10000484, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000247, 8) , (const, 0x1, 8), (unique, 0x10000247, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000023f, 8), (unique, 0x1000023f, 8) INT_SUB (const, 0x1, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19f65b, 1)]
[ ---  CBRANCH (ram, 0x19f748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004a4, 8), (unique, 0x100004a4, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000049c, 8), (unique, 0x1000049c, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000494, 8), (unique, 0x10000494, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x10, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002b4, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x19f65b, 1)]
