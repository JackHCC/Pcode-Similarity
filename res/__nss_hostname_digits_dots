[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x26, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x26, 4)]
[ ---  CBRANCH (ram, 0x24a748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x245ec0, 8)]
[ ---  CBRANCH (ram, 0x24a761, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x4be, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4be, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x4be, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0xffffffff, 4)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x24a838, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0xfffffffe, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x4d3, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4d3, 4)]
[(ram, 0x4eafe8, 8) COPY (ram, 0x4eafe8, 8), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x4d3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x4cd, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4cd, 4)]
[(ram, 0x4eafe8, 8) COPY (ram, 0x4eafe8, 8), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x4cd, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x24a720, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24a5b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000345, 8), (unique, 0x10000345, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x24a5b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x24a5d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[(register, 0xb0, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x24a790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x10, 4), (register, 0xb0, 4) INT_AND (unique, 0x10000136, 4) , (const, 0xfffffff4, 4), (unique, 0x10000136, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x100001c7, 8) , (const, 0x0, 8), (unique, 0x100001c7, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eafe8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd00, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xa, 4), (unique, 0xbc80, 4) INT_AND (unique, 0x1000013e, 4) , (const, 0xfffffff8, 4), (unique, 0x1000013e, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x100001cf, 8) , (const, 0x0, 8), (unique, 0x100001cf, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eafe8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x24a5d3, 1)]
[(stack, 0x10, 4) MULTIEQUAL (stack, 0x10, 4) , (stack, 0x10, 4) , (unique, 0xbd00, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6f, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x6f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6f, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x6f, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x29, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24a850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24a958, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (unique, 0x3100, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x24a5f6, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x405, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x405, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x405, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x24a97c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x40b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x40b, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x40b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0xffffffff, 4)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x410, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x410, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x410, 4), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035d, 8) , (const, 0x22, 4), (unique, 0x1000035d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  BRANCH (ram, 0x24a712, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x24a928, 1) , (unique, 0x100002d3, 1), (unique, 0x100002d3, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b0, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3b0, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3a9, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3b0, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3a9, 4)]
[(unique, 0x100002dd, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3b0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a9, 4)]
[ ---  CBRANCH (ram, 0x24aa58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3c0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c0, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x24a5f6, 1)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3df, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3dc, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3da, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3cb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3df, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3dc, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3da, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3cb, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3df, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3dc, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3da, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3cb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000036d, 8) , (unique, 0xbc80, 4), (unique, 0x1000036d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002dd, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3cb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x24a81f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3e5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e5, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3e5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x24a81f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x99, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x99, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x99, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x99, 4), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  CALL (ram, 0x1211f0, 8) , (register, 0x38, 8) , (const, 0x0, 4) , (unique, 0x3100, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000375, 8), (unique, 0x10000375, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000375, 8), (unique, 0x10000375, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000375, 8), (unique, 0x10000375, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x24a660, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100002e5, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24a868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x24a868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100002ed, 8) , (unique, 0x100002f5, 8) , (unique, 0x100002e5, 8)]
[(unique, 0x100002ed, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24a640, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1)]
[(unique, 0x100002f5, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24a640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[ ---  CBRANCH (ram, 0x24a660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100002e5, 8) , (register, 0x8, 8)]
[(unique, 0x10000335, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x24a7d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 2) , (const, 0x0, 2), (register, 0xa8, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x1000, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000385, 8), (unique, 0x10000385, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x125, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x125, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x125, 4)]
[ ---  CBRANCH (ram, 0x24a7d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (register, 0x38, 8) , (const, 0x3a, 4)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x24a710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[ ---  CBRANCH (ram, 0x24a808, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x24a6c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x24a808, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x24a7ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x24a6b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000395, 8), (unique, 0x10000395, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x9, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eafe8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x24a994, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x24a6d8, 1) , (unique, 0x100001be, 1), (unique, 0x100001be, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[ ---  CBRANCH (ram, 0x24a710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 2) , (const, 0x0, 2)]
[(unique, 0x10000305, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000315, 8) , (unique, 0x1000031d, 8) , (unique, 0x10000335, 8) , (unique, 0x10000335, 8)]
[ ---  CBRANCH (ram, 0x24a9a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000315, 8) , (unique, 0x1000031d, 8) , (unique, 0x10000335, 8) , (unique, 0x10000335, 8)]
[(unique, 0x10000315, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x24a6e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1)]
[(unique, 0x1000031d, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x24a6e0, 1) , (unique, 0x100001c3, 1), (unique, 0x100001c3, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x24a710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000305, 8) , (unique, 0x10000335, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x20a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20a, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x20a, 4)]
[ ---  CBRANCH (ram, 0x24a808, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2434b0, 8) , (const, 0xa, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121170, 8) , (unique, 0x100003a5, 8) , (register, 0x38, 8), (unique, 0x100003a5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003ad, 8), (unique, 0x100003ad, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003b5, 8), (unique, 0x100003b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x100000000a, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x24a, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x245, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x241, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x23e, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x23b, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x235, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x232, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x22b, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x21d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x245, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x241, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x235, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x232, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x21d, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x24a, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x245, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x241, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x23e, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x23b, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x235, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x232, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x22b, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x21d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24aaa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x24ab45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001f0, 8) , (unique, 0x100001e8, 8) , (const, 0xa6, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) COPY (const, 0x2bbd20, 8), (unique, 0x100001f0, 8) COPY (const, 0x2b7037, 8), (unique, 0x100001e8, 8) COPY (const, 0x2b7029, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x343, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x343, 4)]
[(ram, 0x4eafe8, 8) COPY (ram, 0x4eafe8, 8), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x343, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2e3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e3, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x2e3, 4)]
[ ---  CBRANCH (ram, 0x24a808, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x2434b0, 8) , (const, 0xa, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121170, 8) , (unique, 0x100003bd, 8) , (register, 0x38, 8), (unique, 0x100003bd, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003c5, 8), (unique, 0x100003c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x311, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x30e, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x30b, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x305, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x302, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2fb, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2f6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x311, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x305, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x302, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f6, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x311, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x30e, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x30b, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x305, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x302, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x2fb, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x2f6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003cd, 8), (unique, 0x100003cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34a, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x34a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x34a, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x34a, 4)]
[ ---  CBRANCH (ram, 0x24a808, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x242810, 8) , (register, 0x38, 8) , (unique, 0x100003d5, 8), (unique, 0x100003d5, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x269, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x269, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x269, 4), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x24aa40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x26f, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x26f, 4), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x24a712, 1)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x276, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x276, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x276, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x24a712, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121170, 8) , (unique, 0x100003dd, 8) , (register, 0x38, 8), (unique, 0x100003dd, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003e5, 8), (unique, 0x100003e5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x376, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x373, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x370, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x36a, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x367, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x360, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x35b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x376, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x373, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x370, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x367, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x360, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003ed, 8), (unique, 0x100003ed, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x24a8de, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x9, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eafe8, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x376, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x373, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x370, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x36a, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x367, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x360, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x35b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 4), (unique, 0x3100, 8) CAST (unique, 0x1000040d, 8), (unique, 0x1000040d, 8) INT_ADD (unique, 0x10000405, 8) , (const, 0x14, 8), (unique, 0x10000405, 8) CAST (register, 0x30, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x31e, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x31b, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x31e, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x31b, 4), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000415, 8) , (stack, 0x10, 4), (unique, 0x10000415, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000425, 8) , (const, 0x0, 2), (unique, 0x10000425, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffff, 2), (unique, 0x3100, 8) CAST (unique, 0x10000435, 8), (unique, 0x10000435, 8) INT_ADD (unique, 0x1000042d, 8) , (const, 0xa, 8), (unique, 0x1000042d, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) CAST (unique, 0x10000445, 8), (unique, 0x10000445, 8) INT_ADD (unique, 0x1000043d, 8) , (const, 0xc, 8), (unique, 0x1000043d, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000041d, 8), (unique, 0x1000041d, 8) CAST (unique, 0xbd80, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3a6, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3a0, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x39d, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x39a, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x397, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x39d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x39a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x397, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3a6, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x3a0, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x39d, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x39a, 4), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x397, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x100000000a, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x24a8ee, 1)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x24a907, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x331, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x331, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x331, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0x0, 4)]
[(unique, 0x100002b5, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0x100002bd, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002c5, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  CBRANCH (ram, 0x24a910, 1) , (unique, 0x100002b4, 1), (unique, 0x100002b4, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(ram, 0x4eae00, 8) INDIRECT (unique, 0x100002b5, 8) , (const, 0x253, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100002bd, 8) , (const, 0x253, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (unique, 0x100002c5, 8) , (const, 0x253, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0x1000044d, 8), (unique, 0x1000044d, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x24a712, 1)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(ram, 0x4eae00, 8) INDIRECT (unique, 0x100002b5, 8) , (const, 0x25a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100002bd, 8) , (const, 0x25a, 4)]
[(ram, 0x4eafe8, 8) INDIRECT (unique, 0x100002c5, 8) , (const, 0x25a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x24a712, 1)]
[(ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0x0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1db, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1db, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eafe8, 8) COPY (ram, 0x4eafe8, 8), (ram, 0x4eafe8, 8) INDIRECT (ram, 0x4eafe8, 8) , (const, 0x1db, 4), (ram, 0x4eafe8, 8) MULTIEQUAL (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8) , (ram, 0x4eafe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
