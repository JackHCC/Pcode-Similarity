[(unique, 0x100002e6, 8) COPY (ram, 0x4c2fe8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x34, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x34, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x34, 4)]
[ ---  CBRANCH (ram, 0x22a488, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x228080, 8) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000336, 8), (unique, 0x10000336, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2fe8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x22a49d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4d4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4d4, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x4d4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0xffffffff, 4)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x22a6c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0xfffffffe, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4fd, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4fd, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x4fd, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4e0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4e0, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x4e0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22a2d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22a2d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000346, 8), (unique, 0x10000346, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033e, 8), (unique, 0x1000033e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x22a2d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x22a31b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[(register, 0xb0, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x22a31b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[(register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x10, 4), (register, 0xb0, 4) INT_AND (unique, 0x100000de, 4) , (const, 0xfffffff4, 4), (unique, 0x100000de, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x100001c5, 8) , (const, 0x0, 8), (unique, 0x100001c5, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034e, 8), (unique, 0x1000034e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002e6, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbd00, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xa, 4), (unique, 0xbc80, 4) INT_AND (unique, 0x100000e6, 4) , (const, 0xfffffff8, 4), (unique, 0x100000e6, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x100001cd, 8) , (const, 0x0, 8), (unique, 0x100001cd, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2000, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034e, 8), (unique, 0x1000034e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002e6, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0x10, 4) MULTIEQUAL (stack, 0x10, 4) , (stack, 0x10, 4) , (unique, 0xbd00, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x133, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x133, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x133, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x133, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x29, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22a4c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22a33a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x80, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4b5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4b5, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x4b5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x22a4ef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4bb, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4bb, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x4bb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000035e, 8) , (const, 0x22, 4), (unique, 0x1000035e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4bf, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4bf, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x4bf, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x22a580, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x45e, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x45e, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x457, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x45e, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x457, 4)]
[(unique, 0x100002de, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x45e, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x457, 4)]
[ ---  CBRANCH (ram, 0x22a74d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x48d, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x48a, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x488, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x479, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x48d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x48a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x488, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x479, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x48d, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x48a, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x488, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x479, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000036e, 8) , (unique, 0xbc80, 4), (unique, 0x1000036e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002de, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x479, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000366, 8), (unique, 0x10000366, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x22a55f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x493, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x493, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x493, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x22a55f, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x46d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x46d, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x46d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x22a33e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x15b, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x15b, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x15b, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[ ---  CALL (ram, 0x18e810, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (unique, 0x3100, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000376, 8), (unique, 0x10000376, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000376, 8), (unique, 0x10000376, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000376, 8), (unique, 0x10000376, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22a39f, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100002ee, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22a510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x22a510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100002ee, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22a380, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x22a380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[ ---  CBRANCH (ram, 0x22a39f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100002ee, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22a6ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f3, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3f3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3f3, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3f3, 4)]
[ ---  CBRANCH (ram, 0x22a548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x224b80, 8) , (register, 0x38, 8) , (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x41d, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x41a, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x417, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x411, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x40e, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x408, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x404, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x41d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x41a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x417, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x411, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x40e, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x408, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x404, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x41d, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x41a, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x417, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x411, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x40e, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x408, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x404, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22a797, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x9, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000386, 8), (unique, 0x10000386, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002e6, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x404, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000039e, 8) , (const, 0x0, 2), (unique, 0x1000039e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xff, 1), (unique, 0x3100, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) INT_ADD (unique, 0x100003a6, 8) , (const, 0xa, 8), (unique, 0x100003a6, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xff, 1), (unique, 0x3100, 8) CAST (unique, 0x100003be, 8), (unique, 0x100003be, 8) INT_ADD (unique, 0x100003b6, 8) , (const, 0xb, 8), (unique, 0x100003b6, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) CAST (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) INT_ADD (unique, 0x100003c6, 8) , (const, 0xc, 8), (unique, 0x100003c6, 8) CAST (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000396, 8), (unique, 0x10000396, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d6, 8) , (const, 0xa, 4), (unique, 0x100003d6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x452, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x44f, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x44a, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x447, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x444, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x441, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x43e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x452, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x44f, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x44a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x447, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x444, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x441, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x43e, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x452, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x44f, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x44a, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x447, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x444, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x441, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x43e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x10, 4), (unique, 0x3100, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) INT_ADD (unique, 0x100003de, 8) , (const, 0x14, 8), (unique, 0x100003de, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x22a692, 1)]
[ ---  CBRANCH (ram, 0x22a7cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000210, 8) , (unique, 0x10000208, 8) , (const, 0x97, 4) , (unique, 0x10000218, 8), (unique, 0x10000218, 8) COPY (const, 0x2933d0, 8), (unique, 0x10000210, 8) COPY (const, 0x28f2b1, 8), (unique, 0x10000208, 8) COPY (const, 0x28f2a3, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3ec, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ec, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3ec, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x390, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x390, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x390, 4)]
[ ---  CBRANCH (ram, 0x22a64a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x225a10, 8) , (const, 0xa, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3bd, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3ba, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3b7, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3b1, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3ae, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3a8, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3a4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3bd, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ba, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ae, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3a8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3a4, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3bd, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3ba, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3b7, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3b1, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3ae, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3a8, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3a4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 4), (unique, 0x3100, 8) CAST (unique, 0x100003f6, 8), (unique, 0x100003f6, 8) INT_ADD (unique, 0x100003ee, 8) , (const, 0x14, 8), (unique, 0x100003ee, 8) CAST (register, 0x30, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3c8, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3c5, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c5, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3c8, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3c5, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003fe, 8) , (stack, 0x10, 4), (unique, 0x100003fe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x22a6ab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x18, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3db, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3db, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x3db, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0x0, 4)]
[(unique, 0x1000032e, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22a460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 2) , (const, 0x0, 2), (register, 0xb0, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x1000, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000040e, 8), (unique, 0x1000040e, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000406, 8), (unique, 0x10000406, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e8, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x1e8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e8, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x1e8, 4)]
[ ---  CBRANCH (ram, 0x22a460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x189080, 8) , (register, 0x38, 8) , (const, 0x3a, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x22a2b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22a548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x22a410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x22a548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x22a407, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0xa, 4)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x22a548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000041e, 8), (unique, 0x1000041e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x9, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000416, 8), (unique, 0x10000416, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002e6, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x22a5af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x22a42c, 1) , (register, 0x206, 1), (register, 0x206, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[ ---  CBRANCH (ram, 0x22a2b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 2) , (const, 0x0, 2)]
[(unique, 0x100002fe, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000030e, 8) , (unique, 0x10000316, 8) , (unique, 0x1000032e, 8) , (unique, 0x1000032e, 8)]
[ ---  CBRANCH (ram, 0x22a5b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000030e, 8) , (unique, 0x10000316, 8) , (unique, 0x1000032e, 8) , (unique, 0x1000032e, 8)]
[(unique, 0x1000030e, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22a430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000426, 8), (unique, 0x10000426, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1)]
[(unique, 0x10000316, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22a430, 1) , (unique, 0x100001c1, 1), (unique, 0x100001c1, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[ ---  CBRANCH (ram, 0x22a2b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002fe, 8) , (unique, 0x1000032e, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2b4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2b4, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2b4, 4)]
[ ---  CBRANCH (ram, 0x22a548, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x225a10, 8) , (const, 0xa, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042e, 8) , (const, 0xa, 4), (unique, 0x1000042e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x10, 4), (unique, 0x3100, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) INT_ADD (unique, 0x10000436, 8) , (const, 0x14, 8), (unique, 0x10000436, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2f4, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2ef, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2ec, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2e9, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2e6, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2e3, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2dd, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2da, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2d4, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x2c7, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ef, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ec, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e9, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e6, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2e3, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2dd, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2da, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2d4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c7, 4)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2f4, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2ef, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2ec, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2e9, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2e6, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2e3, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2dd, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2da, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2d4, 4), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x2c7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0x0, 4)]
[(unique, 0x100001ef, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x100001f7, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100001ff, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[ ---  CBRANCH (ram, 0x22a635, 1) , (unique, 0x100001ee, 1), (unique, 0x100001ee, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x1, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (unique, 0x100001ef, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x100001f7, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (unique, 0x100001ff, 8) , (const, 0x2fb, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (register, 0x30, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (unique, 0x100001ef, 8) , (const, 0x301, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x100001f7, 8) , (const, 0x301, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (unique, 0x100001ff, 8) , (const, 0x301, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x311, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x311, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x311, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x18, 8) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x22a6d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x8, 8) , (const, 0x0, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x332, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x332, 4)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x332, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x314, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x314, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2fe8, 8) COPY (ram, 0x4c2fe8, 8), (ram, 0x4c2fe8, 8) INDIRECT (ram, 0x4c2fe8, 8) , (const, 0x314, 4), (ram, 0x4c2fe8, 8) MULTIEQUAL (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8) , (ram, 0x4c2fe8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
