[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33, 4)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x33, 4)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x33, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x33, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x33, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x88, 8) INDIRECT (register, 0x88, 8) , (const, 0x33, 4)]
[ ---  CBRANCH (ram, 0x41aef1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (const, 0x64, 8)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x41ae75, 1)]
[ ---  CALL (ram, 0x41f850, 8) , (unique, 0x3800, 8) , (const, 0x8000, 8) , (const, 0xffffffff, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (ram, 0x4c4f40, 8) , (ram, 0x4c4fe0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[ ---  CALL (ram, 0x421100, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (const, 0x64, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x88, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x61, 4)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x88, 4), (ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x6c, 4), (ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x61, 4)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x88, 4), (ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x6c, 4), (ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x61, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (unique, 0xbc80, 4) , (const, 0x88, 4), (unique, 0xbc80, 4) INT_AND (stack, 0xfffffffffffffec8, 4) , (const, 0xfffffffe, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x6c, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x61, 4)]
[(stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x88, 4), (stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x6c, 4), (stack, 0xfffffffffffffee8, 8) INDIRECT (stack, 0xfffffffffffffee8, 8) , (const, 0x61, 4)]
[(stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x88, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x6c, 4), (stack, 0xfffffffffffffef0, 8) INDIRECT (stack, 0xfffffffffffffef0, 8) , (const, 0x61, 4)]
[(stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x88, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x6c, 4), (stack, 0xfffffffffffffef8, 8) INDIRECT (stack, 0xfffffffffffffef8, 8) , (const, 0x61, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x88, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x61, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x88, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffffa0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c70a0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0x88, 4), (stack, 0xfffffffffffffeb8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0x6c, 4), (stack, 0xfffffffffffffeb8, 8) INDIRECT (unique, 0x100001b2, 8) , (const, 0x61, 4), (unique, 0x100001b2, 8) COPY (ram, 0x4c4f40, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x88, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (stack, 0xfffffffffffffec0, 8) , (const, 0x6c, 4), (stack, 0xfffffffffffffec0, 8) INDIRECT (unique, 0x100001ba, 8) , (const, 0x61, 4), (unique, 0x100001ba, 8) COPY (ram, 0x4c4fe0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x88, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x61, 4)]
[(unique, 0x1000019a, 8) COPY (stack, 0xffffffffffffff00, 8), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x88, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x61, 4)]
[ ---  CBRANCH (ram, 0x41aee0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x413f80, 8) , (stack, 0xfffffffffffffeb8, 8) , (unique, 0x3800, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 4), (stack, 0xfffffffffffffeb8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0x6c, 4), (stack, 0xfffffffffffffeb8, 8) INDIRECT (unique, 0x100001b2, 8) , (const, 0x61, 4), (unique, 0x100001b2, 8) COPY (ram, 0x4c4f40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x143, 4)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x143, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x143, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (stack, 0xffffffffffffff00, 8)]
[ ---  BRANCH (ram, 0x41ae75, 1)]
[ ---  CBRANCH (ram, 0x41aea0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x100001ca, 8) , (const, 0x1, 4), (unique, 0x100001ca, 8) CAST (register, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) INT_SUB (stack, 0xfffffffffffffef0, 8) , (stack, 0xfffffffffffffee8, 8), (register, 0x8, 8) INT_SUB (stack, 0xfffffffffffffef8, 8) , (stack, 0xfffffffffffffee8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11a, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11a, 4)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x11c, 4), (ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x11a, 4)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x11c, 4), (ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x11a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x41ae5e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (unique, 0x3100, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x0, 8) , (unique, 0x1000019a, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x130, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x130, 4), (ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x12c, 4)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x130, 4), (ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x12c, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x130, 4), (stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x130, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x130, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x130, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x130, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x130, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x130, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0x1000019a, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0xd1, 4), (stack, 0xfffffffffffffec8, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0xd3, 4), (ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0xd1, 4), (ram, 0x4c4f40, 8) MULTIEQUAL (ram, 0x4c4f40, 8) , (ram, 0x4c4f40, 8)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0xd3, 4), (ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0xd1, 4), (ram, 0x4c4fe0, 8) MULTIEQUAL (ram, 0x4c4fe0, 8) , (ram, 0x4c4fe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427240, 8) , (unique, 0x1000019a, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000145, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000014d, 8) MULTIEQUAL (ram, 0x4c4f40, 8) , (ram, 0x4c4f40, 8)]
[(unique, 0x10000155, 8) MULTIEQUAL (ram, 0x4c4fe0, 8) , (ram, 0x4c4fe0, 8)]
[(unique, 0x1000015d, 4) MULTIEQUAL (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(unique, 0x10000161, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(unique, 0x10000169, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(unique, 0x10000171, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000179, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000181, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000189, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100001a2, 8) COPY (unique, 0x1000013c, 8), (unique, 0x1000013c, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41ae71, 1) , (unique, 0x10000144, 1), (unique, 0x10000144, 1) INT_EQUAL (unique, 0x1000013c, 8) , (const, 0x0, 8), (unique, 0x1000013c, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c4f40, 8) INDIRECT (unique, 0x1000014d, 8) , (const, 0x115, 4)]
[(ram, 0x4c4fe0, 8) INDIRECT (unique, 0x10000155, 8) , (const, 0x115, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000161, 8)]
[(unique, 0x100001aa, 8) COPY (unique, 0x10000161, 8)]
[ ---  BRANCH (ram, 0x41ae71, 1)]
[(ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0xe1, 4), (ram, 0x4c4f40, 8) MULTIEQUAL (unique, 0x1000014d, 8) , (ram, 0x4c4f40, 8)]
[(ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0xe1, 4), (ram, 0x4c4fe0, 8) MULTIEQUAL (unique, 0x10000155, 8) , (ram, 0x4c4fe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x100001da, 8), (unique, 0x100001da, 8) INT_ADD (unique, 0x100001d2, 8) , (register, 0x28, 8), (unique, 0x100001d2, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001a2, 8) , (unique, 0x100001aa, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000181, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000179, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x10000171, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (unique, 0x10000169, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xfffffffffffffec8, 4) MULTIEQUAL (unique, 0x1000015d, 4) , (stack, 0xfffffffffffffec8, 4) , (stack, 0xfffffffffffffec8, 4)]
[(ram, 0x4c4fe0, 8) MULTIEQUAL (ram, 0x4c4fe0, 8) , (ram, 0x4c4fe0, 8) , (ram, 0x4c4fe0, 8)]
[(ram, 0x4c4f40, 8) MULTIEQUAL (ram, 0x4c4f40, 8) , (ram, 0x4c4f40, 8) , (ram, 0x4c4f40, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x41aeec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e2, 8), (unique, 0x100001e2, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x10000145, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000189, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c4f40, 8) COPY (ram, 0x4c4f40, 8)]
[(ram, 0x4c4fe0, 8) COPY (ram, 0x4c4fe0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa0, 4)]
[(stack, 0xfffffffffffffec8, 4) INDIRECT (stack, 0xfffffffffffffec8, 4) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10e, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c4f40, 8) COPY (ram, 0x4c4f40, 8), (ram, 0x4c4f40, 8) INDIRECT (ram, 0x4c4f40, 8) , (const, 0x10e, 4)]
[(ram, 0x4c4fe0, 8) COPY (ram, 0x4c4fe0, 8), (ram, 0x4c4fe0, 8) INDIRECT (ram, 0x4c4fe0, 8) , (const, 0x10e, 4)]
[ ---  RETURN (const, 0x1, 4)]
