[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000c98, 8), (unique, 0x10000c98, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x192fd0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x8, 8) CAST (unique, 0x10000ca0, 8), (unique, 0x10000ca0, 8) INT_2COMP (register, 0xa8, 8), (register, 0xa8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x192fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000157, 8) , (const, 0x0, 8), (unique, 0x10000157, 8) INT_AND (unique, 0x10000ca8, 8) , (const, 0xf, 8), (unique, 0x10000ca8, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xd30, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000777, 8), (unique, 0x10000777, 8) COPY (const, 0x2b4d88, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xd30, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd30, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd30, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xd30, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd30, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xd30, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xd30, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xd30, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xd30, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xd30, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xd30, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xd30, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xd30, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd30, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xd30, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x192fe0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa8, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x192fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000167, 8) , (const, 0x0, 8), (unique, 0x10000167, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xd2a, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x1000077f, 8), (unique, 0x1000077f, 8) COPY (const, 0x2b4da0, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xd2a, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xd2a, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xd2a, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xd2a, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xd2a, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xd2a, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd2a, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xd2a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x192d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000cb0, 8), (unique, 0x10000cb0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x192d40, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (ram, 0x4eb2d0, 8), (register, 0x8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x192d40, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000cc0, 8) , (ram, 0x4eb2e0, 8), (unique, 0x10000cc0, 8) CAST (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000cb8, 8), (unique, 0x10000cb8, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193100, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cc8, 8), (unique, 0x10000cc8, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x40, 8), (register, 0xa0, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cd0, 8), (unique, 0x10000cd0, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x40, 8), (register, 0xa0, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xee, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xea, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xe7, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xee, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xea, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xe7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xee, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xea, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xe7, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xee, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xea, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xe7, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xee, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xea, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xe7, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xee, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xea, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xe7, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xee, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xea, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xe7, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xee, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xea, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xe7, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xee, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xea, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xe7, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xee, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xea, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xe7, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xee, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xea, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xe7, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xee, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xea, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xe7, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xee, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xea, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xe7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xee, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xea, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe7, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xee, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xea, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xe7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x38, 1), (unique, 0x3400, 8) CAST (unique, 0x10000cd8, 8), (unique, 0x10000cd8, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x38, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0x1, 1)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb71, 8)]
[ ---  CBRANCH (ram, 0x19312c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ce0, 8), (unique, 0x10000ce0, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b4db5, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b90b8, 8)]
[(register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x192df0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (ram, 0x4ed940, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x192fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c1, 8) , (const, 0x0, 8), (unique, 0x100001c1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd25, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xd25, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd25, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd25, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xd25, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd25, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xd25, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xd25, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xd25, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xd25, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xd25, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xd25, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xd25, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xd25, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd25, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xd25, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xd25, 4)]
[ ---  CALL (ram, 0x1920a0, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x192d18, 1)]
[ ---  CBRANCH (ram, 0x192e0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1934f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000069d, 8) , (const, 0x0, 8), (unique, 0x1000069d, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x100006c3, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x193508, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xd20, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd20, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd20, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xd20, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd20, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xd20, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xd20, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xd20, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xd20, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xd20, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xd20, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xd20, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xd20, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd20, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xd20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xce8, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xce8, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xce8, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xce8, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xce8, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xce8, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xce8, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xce8, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xce8, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xce8, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xce8, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xce8, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xce8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xce8, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xce8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x193523, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd03, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xd03, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xd03, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd03, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xd03, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd03, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xd03, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xd03, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xd03, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xd03, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xd03, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xd03, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xd03, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xd03, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd03, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0xd03, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xd03, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xd03, 4)]
[ ---  CALL (ram, 0x230690, 8) , (register, 0x38, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100006c2, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x192e13, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(unique, 0x100006c1, 1) MULTIEQUAL (unique, 0x100006c3, 1) , (unique, 0x100006c2, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x10000cf0, 8) , (register, 0xa8, 8), (unique, 0x10000cf0, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1932c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ce8, 8), (unique, 0x10000ce8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcbc, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100007af, 8), (unique, 0x100007af, 8) COPY (const, 0x2b8850, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xcbc, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xcbc, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xcbc, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xcbc, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xcbc, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xcbc, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcbc, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xcbc, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1932d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000cf8, 8), (unique, 0x10000cf8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x192e2e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000d00, 8) , (register, 0x10, 8), (unique, 0x10000d00, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcb6, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100007b7, 8), (unique, 0x100007b7, 8) COPY (const, 0x2b8870, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xcb6, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xcb6, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xcb6, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xcb6, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xcb6, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xcb6, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcb6, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xcb6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1932f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001d1, 8) , (const, 0x0, 8), (unique, 0x100001d1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d08, 8), (unique, 0x10000d08, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc91, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100007bf, 8), (unique, 0x100007bf, 8) COPY (const, 0x2b8890, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc91, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc91, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc91, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc91, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc91, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc91, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc91, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc91, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc91, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc91, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc91, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc91, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc91, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc91, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc91, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x193268, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x193268, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d18, 8), (unique, 0x10000d18, 8) CAST (unique, 0x3200, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0xb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d10, 8), (unique, 0x10000d10, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc8b, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100007c7, 8), (unique, 0x100007c7, 8) COPY (const, 0x2b88b8, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc8b, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc8b, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc8b, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc8b, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc8b, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc8b, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc8b, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc8b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x193300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed92c, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc86, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc86, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc86, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc86, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc86, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc86, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc86, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc86, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc86, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc86, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc86, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc86, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc86, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc86, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc86, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0xc86, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc86, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc86, 4)]
[ ---  CALL (ram, 0x1211f0, 8) , (unique, 0x3800, 8) , (ram, 0x4ed92c, 4) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x192e66, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x192f00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000d20, 8), (unique, 0x10000d20, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x193313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000d40, 8), (unique, 0x10000d40, 8) INT_ADD (unique, 0x10000d38, 8) , (register, 0x0, 8), (unique, 0x10000d38, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) CAST (unique, 0x10000d30, 8), (unique, 0x10000d30, 8) INT_SUB (unique, 0x10000d28, 8) , (unique, 0xbd80, 8), (unique, 0x10000d28, 8) CAST (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1930f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d48, 8), (unique, 0x10000d48, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1930f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d50, 8), (unique, 0x10000d50, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d58, 8), (unique, 0x10000d58, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x527, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x524, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x527, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x524, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x527, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x524, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x527, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x524, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x527, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x524, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x527, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x524, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x527, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x524, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x527, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x524, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x527, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x524, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x527, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x524, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x527, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x524, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x527, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x524, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x527, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x524, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x527, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x524, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x527, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x524, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d60, 8), (unique, 0x10000d60, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x192f00, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x192f00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000d68, 8), (unique, 0x10000d68, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193704, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000d70, 8), (unique, 0x10000d70, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193704, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d78, 8), (unique, 0x10000d78, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d80, 8), (unique, 0x10000d80, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x193843, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d88, 8), (unique, 0x10000d88, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc7e, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc7e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc7e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc7e, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc7e, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc7e, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc7b, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc7e, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc7e, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc7e, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc7b, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc7e, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc7b, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc7e, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc7b, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc7e, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc7b, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc7e, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc7b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc7e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc7b, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc7e, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc7b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d90, 8), (unique, 0x10000d90, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x192f00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d98, 8), (unique, 0x10000d98, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000da0, 8), (unique, 0x10000da0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000da8, 8), (unique, 0x10000da8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc77, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc71, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc6e, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc68, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc77, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc71, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc6e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc68, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc77, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc71, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc6e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc68, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc77, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc71, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc6e, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc68, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc77, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc71, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc6e, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc68, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc77, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc71, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc6e, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc68, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc77, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc71, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc6e, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc68, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc77, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc71, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc6e, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc68, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc77, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc71, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc6e, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc68, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc77, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc71, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc6e, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc68, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc77, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc71, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc6e, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc68, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc77, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc71, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc6e, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc68, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc77, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc71, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc6e, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc68, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc77, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc71, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc6e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc68, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc77, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc71, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc6e, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc68, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000db0, 8), (unique, 0x10000db0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x192f00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x56e, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x568, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x56e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x568, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x56e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x568, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x56e, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x568, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x56e, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x568, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x56e, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x568, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x56e, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x568, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x56e, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x568, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x56e, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x568, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x56e, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x568, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x56e, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x568, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x56e, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x568, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x56e, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x568, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x56e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x568, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x56e, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x568, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000db8, 8), (unique, 0x10000db8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1931d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000dc0, 8), (unique, 0x10000dc0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0xa8, 8) , (const, 0x1, 8), (register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (register, 0xb8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc5a, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc57, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc5a, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc57, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc5a, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc57, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc5a, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc57, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc5a, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc57, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc5a, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc57, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc5a, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc57, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc5a, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc57, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc5a, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc57, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc5a, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc57, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc5a, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc57, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc5a, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc57, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc5a, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc57, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc5a, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc57, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc5a, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc57, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000dc8, 8) , (register, 0xa0, 8), (unique, 0x10000dc8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x192f74, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dd8, 8), (unique, 0x10000dd8, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000dd0, 8), (unique, 0x10000dd0, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xb8, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000de0, 8), (unique, 0x10000de0, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000df0, 8), (unique, 0x10000df0, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1930f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000df8, 8), (unique, 0x10000df8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000de8, 8), (unique, 0x10000de8, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1930f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e00, 8), (unique, 0x10000e00, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e08, 8), (unique, 0x10000e08, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xbca, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xbca, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xbca, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xbca, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xbca, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xbca, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xbc7, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xbca, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xbca, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xbca, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xbc7, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xbca, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xbc7, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xbca, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xbc7, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xbca, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xbc7, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xbca, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xbc7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbca, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbc7, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xbca, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xbc7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e10, 8), (unique, 0x10000e10, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1930c2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1935f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e18, 8), (unique, 0x10000e18, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x193704, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e20, 8), (unique, 0x10000e20, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x193704, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e30, 8), (unique, 0x10000e30, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e28, 8), (unique, 0x10000e28, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x193821, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e38, 8), (unique, 0x10000e38, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x193850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e40, 8), (unique, 0x10000e40, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc40, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc40, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc40, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc40, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc40, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc40, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc3d, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc40, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc40, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc40, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc3d, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc40, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc3d, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc40, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc3d, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc40, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc3d, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc40, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc3d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc40, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc3d, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc40, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc3d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e48, 8), (unique, 0x10000e48, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1930c2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e50, 8), (unique, 0x10000e50, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e60, 8), (unique, 0x10000e60, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e68, 8), (unique, 0x10000e68, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e58, 8), (unique, 0x10000e58, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x20, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc39, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc33, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc30, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc39, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc33, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc30, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc39, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc33, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc30, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc39, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc33, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc30, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc39, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc33, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc30, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc39, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc33, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc30, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc2a, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc39, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc33, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc30, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc39, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc33, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc30, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc39, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc33, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc30, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc2a, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc39, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc33, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc30, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc2a, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc39, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc33, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc30, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc2a, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc39, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc33, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc30, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc2a, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc39, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc33, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc30, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc2a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc39, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc33, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc30, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc2a, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc39, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc33, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc30, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc2a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e78, 8), (unique, 0x10000e78, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e70, 8), (unique, 0x10000e70, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x1930c2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e80, 8), (unique, 0x10000e80, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc1c, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xc16, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc1c, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xc16, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc1c, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xc16, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc1c, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xc16, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc1c, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xc16, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc1c, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xc16, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc1c, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xc16, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc1c, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xc16, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc1c, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xc16, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc1c, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xc16, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc1c, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xc16, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc1c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xc16, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc1c, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xc16, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc1c, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc16, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc1c, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xc16, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e90, 8), (unique, 0x10000e90, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e88, 8), (unique, 0x10000e88, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x1930c2, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x192f22, 1)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x599, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x599, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x599, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x599, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x599, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x599, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x599, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x599, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x599, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x599, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x599, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x599, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x599, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x599, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x599, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e98, 8), (unique, 0x10000e98, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19355c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ea8, 8), (unique, 0x10000ea8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ea0, 8), (unique, 0x10000ea0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb7b, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100007cf, 8), (unique, 0x100007cf, 8) COPY (const, 0x2b88e0, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xb7b, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xb7b, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xb7b, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xb7b, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xb7b, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xb7b, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb7b, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xb7b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5bb, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5bb, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5bb, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5bb, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5bb, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5bb, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5b8, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5bb, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5bb, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5bb, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5b8, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5bb, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5b8, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5bb, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5b8, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5bb, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5b8, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5bb, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5b8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5bb, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5b8, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5bb, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5b8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x10000eb0, 8), (unique, 0x10000eb0, 8) CAST (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x192f5c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5c3, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5c3, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5c3, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5c3, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5c3, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5c3, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5c0, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5c3, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5c3, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5c3, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5c0, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5c3, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5c0, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5c3, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5c0, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5c3, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5c0, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5c3, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5c0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c3, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c0, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5c3, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000eb8, 8) , (register, 0xa0, 8), (unique, 0x10000eb8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1c, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ec0, 8), (unique, 0x10000ec0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0xa8, 8) , (const, 0x1, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5da, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5d6, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5c9, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x5c6, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5da, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5d6, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5c9, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x5c6, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5da, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5d6, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5c9, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x5c6, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5da, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5d6, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5c9, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x5c6, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5da, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5d6, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5c9, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5c6, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5da, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5d6, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5c9, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x5c6, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5da, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5d6, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5c9, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x5c6, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5da, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5d6, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5c9, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x5c6, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5da, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5d6, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5c9, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x5c6, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5da, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5d6, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5c9, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x5c6, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5da, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5d6, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5c9, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x5c6, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5da, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5d6, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5c9, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x5c6, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5da, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5d6, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5c9, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x5c6, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5da, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5d6, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c9, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c6, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5da, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5d6, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5c9, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5c6, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000ed0, 8), (unique, 0x10000ed0, 8) INT_ADD (unique, 0x10000ec8, 8) , (register, 0xa8, 8), (unique, 0x10000ec8, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[ ---  CBRANCH (ram, 0x1931f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffff, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x19331f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb76, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xb76, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xb76, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xb76, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xb76, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xb76, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xb76, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xb76, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xb76, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xb76, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xb76, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xb76, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xb76, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xb76, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb76, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0xb76, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb76, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xb76, 4)]
[ ---  CALL (ram, 0x190910, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1931fb, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000bf4, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[ ---  CBRANCH (ram, 0x193532, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x100007df, 8), (unique, 0x100007df, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (ram, 0x4eb280, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000ed8, 8), (unique, 0x10000ed8, 8) INT_ADD (ram, 0x4ebca0, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb71, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xb71, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xb71, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xb71, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xb71, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xb71, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xb71, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xb71, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xb71, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xb71, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xb71, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xb71, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xb71, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xb71, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb71, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb71, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xb71, 4)]
[ ---  CALL (ram, 0x191310, 8) , (ram, 0x4eb288, 8)]
[ ---  BRANCH (ram, 0x192f81, 1)]
[ ---  CBRANCH (ram, 0x19332c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x90, 8), (register, 0x90, 8) CAST (unique, 0x10000ef0, 8), (unique, 0x10000ef0, 8) INT_AND (unique, 0x10000ee8, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000ee8, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ee0, 8), (unique, 0x10000ee0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x1117, 8)]
[ ---  CBRANCH (ram, 0x193251, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ef8, 8), (unique, 0x10000ef8, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b4deb, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b9088, 8)]
[ ---  BRANCH (ram, 0x19313a, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x2b4cf8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000f00, 8), (unique, 0x10000f00, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000c34, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000c64, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19377b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000f28, 8), (unique, 0x10000f28, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10000f20, 8), (unique, 0x10000f20, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CAST (unique, 0x10000f18, 8), (unique, 0x10000f18, 8) INT_SUB (unique, 0x10000f10, 8) , (register, 0x10, 8), (unique, 0x10000f10, 8) CAST (unique, 0x3100, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000675, 4) , (unique, 0x10000679, 4), (unique, 0x10000679, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x10000675, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000f08, 8), (unique, 0x10000f08, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (ram, 0x4eb288, 8) , (const, 0x20, 8)]
[(unique, 0x10000c4c, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000c7c, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10000c7c, 8) , (unique, 0x10000c84, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000c4c, 8) , (unique, 0x10000c44, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1935ae, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3e, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xf, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x10000f40, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000f40, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000f38, 8), (unique, 0x10000f38, 8) INT_SUB (unique, 0x10000f30, 8) , (unique, 0xbd80, 8), (unique, 0x10000f30, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x267, 8)]
[(register, 0x80, 8) COPY (const, 0x2b4d01, 8)]
[ ---  CBRANCH (ram, 0x1935e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000f48, 8), (unique, 0x10000f48, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b8938, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b9078, 8)]
[ ---  BRANCH (ram, 0x193141, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1933b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100006ad, 8) , (const, 0x0, 8), (unique, 0x100006ad, 8) INT_AND (unique, 0x10000f50, 8) , (const, 0x1, 8), (unique, 0x10000f50, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x18, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x10000f58, 8), (unique, 0x10000f58, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x193628, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3fffffe, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x26a, 8)]
[(register, 0x80, 8) COPY (const, 0x2b4d01, 8)]
[ ---  CBRANCH (ram, 0x19365b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000f60, 8), (unique, 0x10000f60, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b8968, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b9078, 8)]
[ ---  BRANCH (ram, 0x193141, 1)]
[(unique, 0x10000c3c, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000c6c, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x193773, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x10000f70, 8), (unique, 0x10000f70, 8) CAST (unique, 0x3a00, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x18, 8), (register, 0x0, 8) INT_SUB (const, 0x4000000, 8) , (unique, 0x10000f68, 8), (unique, 0x10000f68, 8) CAST (register, 0x38, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x767, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x767, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x767, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x767, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x767, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x767, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x767, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x767, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x767, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x767, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x767, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x767, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x767, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x767, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000f88, 8) , (unique, 0xbd80, 8), (unique, 0x10000f88, 8) CAST (unique, 0x3200, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x10000f80, 8), (unique, 0x10000f80, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000f78, 8), (unique, 0x10000f78, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x222, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed910, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x90, 8) , (const, 0x800000, 8) , (const, 0x8, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x767, 4)]
[(ram, 0x4ed910, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1933fb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x78a, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x78a, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x78a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x78a, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x78a, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x78a, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x78a, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x78a, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x78a, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x78a, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x78a, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x78a, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x78a, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x78a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x78a, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x78a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x78a, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x78a, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x90, 8) , (const, 0x4000000, 8)]
[(unique, 0x10000c5c, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x193485, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000f90, 8), (unique, 0x10000f90, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000fc0, 8), (unique, 0x10000fc0, 8) INT_ADD (unique, 0x10000fb8, 8) , (register, 0x0, 8), (unique, 0x10000fb8, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000fb0, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000fb0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) CAST (unique, 0x10000fa8, 8), (unique, 0x10000fa8, 8) INT_SUB (unique, 0x10000f98, 8) , (unique, 0x10000fa0, 8), (unique, 0x10000fa0, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000f98, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaf4, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000767, 8), (unique, 0x10000767, 8) COPY (const, 0x2b4c9d, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xaf4, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xaf4, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xaf4, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xaf4, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xaf4, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xaf4, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xaf4, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xaf4, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xaf4, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xaf4, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xaf4, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xaf4, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xaf4, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xaf4, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xaf4, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1930f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000fc8, 8), (unique, 0x10000fc8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1930f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000fd0, 8), (unique, 0x10000fd0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaee, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) COPY (const, 0x2b4cba, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xaee, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xaee, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xaee, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xaee, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xaee, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xaee, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xaee, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xaee, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xaee, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xaee, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xaee, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xaee, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xaee, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xaee, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xaee, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fd8, 8) , (unique, 0xbd80, 8), (unique, 0x10000fd8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x7fc, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x7fc, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x7fc, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x7fc, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x7fc, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x7fc, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x7f9, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x7fc, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x7fc, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x7fc, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x7f9, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x7fc, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x7f9, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x7fc, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x7f9, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x7fc, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x7f9, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x7fc, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x7f9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7fc, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7f9, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x7fc, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x7f9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fe0, 8) , (unique, 0xbd80, 8), (unique, 0x10000fe0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x193485, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x19385d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000fe8, 8), (unique, 0x10000fe8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193704, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0x10000ff0, 8), (unique, 0x10000ff0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193704, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ff8, 8), (unique, 0x10000ff8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xae8, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x1000078f, 8), (unique, 0x1000078f, 8) COPY (const, 0x2b8420, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xae8, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xae8, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xae8, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xae8, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xae8, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xae8, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xae8, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xae8, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xae8, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xae8, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xae8, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xae8, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xae8, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xae8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xae8, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x19388f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001000, 8), (unique, 0x10001000, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x19398a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001008, 8) , (unique, 0xbd80, 8), (unique, 0x10001008, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xae3, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xae0, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xae3, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xae0, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xae3, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xae0, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xae3, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xae0, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xae3, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xae0, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xae3, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xae0, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xae3, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xae0, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xae3, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xae0, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xae3, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xae0, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xae3, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xae0, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xae3, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xae0, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xae3, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xae0, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xae3, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xae0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xae3, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xae0, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xae3, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xae0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001010, 8) , (unique, 0xbd80, 8), (unique, 0x10001010, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x193485, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001018, 8) , (unique, 0xbd80, 8), (unique, 0x10001018, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001020, 8) , (unique, 0xbd80, 8), (unique, 0x10001020, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001028, 8) , (unique, 0xbd80, 8), (unique, 0x10001028, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xadc, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xad6, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xad3, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xacd, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xadc, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xad6, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xad3, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xacd, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xadc, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xad6, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xad3, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xacd, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xadc, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xad6, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xad3, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xacd, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xadc, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xad6, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xad3, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xacd, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xadc, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xad6, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xad3, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xacd, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xadc, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xad6, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xad3, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xacd, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xadc, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xad6, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xad3, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xacd, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xadc, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xad6, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xad3, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xacd, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xadc, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xad6, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xad3, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xacd, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xadc, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xad6, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xad3, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xacd, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xadc, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xad6, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xad3, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xacd, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xadc, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xad6, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xad3, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xacd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xadc, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xad6, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xad3, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xacd, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xadc, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xad6, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xad3, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xacd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001030, 8) , (unique, 0xbd80, 8), (unique, 0x10001030, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x193485, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xabf, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xab9, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xabf, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xab9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xabf, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xab9, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xabf, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xab9, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xabf, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xab9, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xabf, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xab9, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xabf, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xab9, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xabf, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xab9, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xabf, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xab9, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xabf, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xab9, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xabf, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xab9, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xabf, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xab9, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xabf, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xab9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xabf, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xab9, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xabf, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xab9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001038, 8) , (unique, 0xbd80, 8), (unique, 0x10001038, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x193485, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[ ---  CBRANCH (ram, 0x1936c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10001040, 8) , (register, 0x18, 8), (unique, 0x10001040, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000c5c, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x193760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001048, 8), (unique, 0x10001048, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x1936dd, 1)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x88, 8) COPY (const, 0x276, 8)]
[(register, 0x80, 8) COPY (const, 0x2b4d01, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b8998, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b9078, 8)]
[ ---  BRANCH (ram, 0x193141, 1)]
[ ---  CBRANCH (ram, 0x19366e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0x10001050, 8) , (unique, 0x10001058, 8), (unique, 0x10001058, 8) CAST (register, 0xa8, 8), (unique, 0x10001050, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x19374d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001060, 8), (unique, 0x10001060, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x1934c1, 1)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x88, 8) COPY (const, 0x277, 8)]
[(register, 0x80, 8) COPY (const, 0x2b4d01, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b89d8, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b9078, 8)]
[ ---  BRANCH (ram, 0x193141, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001070, 8) , (register, 0xa0, 8), (unique, 0x10001070, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x86f, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x86c, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x86f, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x86c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x86f, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x86c, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x86f, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x86c, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x86f, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x86c, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x86f, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x86c, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x86f, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x86c, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x86f, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x86c, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x86f, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x86c, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x86f, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x86c, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x86f, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x86c, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x86f, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x86c, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x86f, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x86c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x86f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x86c, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x86f, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x86c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x18, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) CAST (unique, 0x10001068, 8), (unique, 0x10001068, 8) INT_OR (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000c44, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000c74, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1938b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x10000c84, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10001078, 8), (unique, 0x10001078, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x193568, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10001098, 8), (unique, 0x10001098, 8) INT_ADD (register, 0x0, 8) , (unique, 0x10001090, 8), (unique, 0x10001090, 8) CAST (unique, 0xbd80, 8), (register, 0x0, 8) CAST (unique, 0x10001088, 8), (unique, 0x10001088, 8) INT_SUB (unique, 0x10001080, 8) , (register, 0x0, 8), (unique, 0x10001080, 8) CAST (unique, 0x3100, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000067d, 4) , (unique, 0x10000681, 4), (unique, 0x10000681, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x1000067d, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10001078, 8), (unique, 0x10001078, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x264, 8)]
[(register, 0x80, 8) COPY (const, 0x2b4d01, 8)]
[ ---  CBRANCH (ram, 0x19359b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100010a0, 8), (unique, 0x100010a0, 8) CAST (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (const, 0x2b8908, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x2b9078, 8)]
[ ---  BRANCH (ram, 0x193141, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000797, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffff68, 8) , (unique, 0x1000075f, 8) , (stack, 0xffffffffffffff78, 8), (unique, 0x10000797, 8) COPY (const, 0x2b8758, 8), (unique, 0x1000075f, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100010a8, 8), (unique, 0x100010a8, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x15e, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x170, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x170, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x16d, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x15e, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x170, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x16d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x15e, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x170, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x16d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x15e, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x170, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x16d, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x15e, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x170, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x16d, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x15e, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x170, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x16d, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x15e, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x170, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x16d, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x15e, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x170, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x16d, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x15e, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x170, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x16d, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x15e, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x170, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x16d, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x15e, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x170, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x16d, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x15e, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x170, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x16d, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x15e, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x170, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x16d, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x15e, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x170, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x16d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15e, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x170, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x16d, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x15e, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x10000c34, 8) , (unique, 0x10000c3c, 8) , (unique, 0x10000c44, 8)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (ram, 0x4eb280, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x100010b0, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100010b0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000c64, 8) , (unique, 0x10000c6c, 8) , (unique, 0x10000c74, 8), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100010b8, 8), (unique, 0x100010b8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x21, 8)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000bf4, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) INT_AND (register, 0xa8, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_2COMP (unique, 0xbd80, 8), (register, 0xa8, 8) INT_SUB (register, 0x0, 8) , (unique, 0x10000bf4, 8)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1f, 8) , (unique, 0x100010d0, 8), (unique, 0x100010d0, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x100010c8, 8), (unique, 0x100010c8, 8) INT_SUB (unique, 0x100010c0, 8) , (register, 0xa8, 8), (unique, 0x100010c0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1938f2, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100010d8, 4) , (const, 0x0, 4), (unique, 0x100010d8, 4) CAST (ram, 0x4eb260, 4)]
[(unique, 0x10000c90, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010dc, 8), (unique, 0x100010dc, 8) CAST (ram, 0x4eae20, 8)]
[ ---  CBRANCH (ram, 0x19392a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010dc, 8), (unique, 0x100010dc, 8) CAST (ram, 0x4eae20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9f7, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eb260, 4) INDIRECT (unique, 0x10000c90, 4) , (const, 0x9f7, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x9f7, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x9f7, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x9f7, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x9f7, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x9f7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9f7, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x9f7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9f7, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x9f7, 4)]
[ ---  CBRANCH (ram, 0x193939, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0x100007d7, 8) , (const, 0x80000, 8), (unique, 0x100007d7, 8) COPY (const, 0x2b8a10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1f, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0xa1f, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xa1f, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xa1f, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xa1f, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xa1f, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xa1f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa1f, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0xa1f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa1f, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xa1f, 4)]
[(unique, 0x10000c94, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x193970, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210110, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbf, 8)]
[(unique, 0x1000064b, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffbf, 1) , (const, 0x32, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa57, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xa57, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xa57, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xa57, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0xa57, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xa57, 4)]
[(ram, 0x4eb260, 4) INDIRECT (register, 0x8, 4) , (const, 0xa57, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000c94, 4) , (unique, 0x1000064b, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0xa57, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0xa57, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xa57, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0xa57, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0xa57, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0xa57, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0xa57, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa57, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa57, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xa57, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x19392a, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100010f4, 8), (unique, 0x100010f4, 8) INT_ADD (unique, 0x100010e4, 8) , (unique, 0x100010ec, 8), (unique, 0x100010ec, 8) CAST (register, 0xb8, 8), (unique, 0x100010e4, 8) CAST (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x1938c4, 1) , (register, 0x0, 1), (register, 0x0, 1) INT_EQUAL (ram, 0x4eb260, 4) , (const, 0x0, 4), (ram, 0x4eb260, 4) MULTIEQUAL (unique, 0x10000c90, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c1, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x9c1, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x9c1, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x9c1, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x9c1, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x9c1, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x9c1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9c1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9c1, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x9c1, 4)]
[ ---  CBRANCH (ram, 0x192f81, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (unique, 0x3400, 8) , (register, 0xa8, 8) , (const, 0x0, 4) , (const, 0x32, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x9d1, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x9d1, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x9d1, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x9d1, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x9d1, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x9d1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x9d1, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x9d1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1937ff, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x96e, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x96e, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x96e, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x96e, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x96e, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x96e, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x96e, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x96e, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x96e, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x96e, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x96e, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x96e, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x96e, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x96e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x96e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x96e, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x96e, 4)]
[ ---  CALL (ram, 0x21bbb0, 8) , (unique, 0x3400, 8) , (register, 0xa8, 8) , (const, 0x4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001104, 8) , (unique, 0xbd80, 8), (unique, 0x10001104, 8) CAST (unique, 0x3200, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100010fc, 8), (unique, 0x100010fc, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x222, 8) , (const, 0x4, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x99d, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x97f, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x974, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x99d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x97f, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x974, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x99d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x97f, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x974, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x99d, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x97f, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x974, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x99d, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x97f, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x974, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x99d, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x97f, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x974, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x99d, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x97f, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x974, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x99d, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x97f, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x974, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x99d, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x97f, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x974, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x99d, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x97f, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x974, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x99d, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x97f, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x974, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x99d, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x97f, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x974, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x99d, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x97f, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x974, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x99d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x97f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x974, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x99d, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x97f, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x974, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x1000110c, 8), (unique, 0x1000110c, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x192f81, 1)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x192d18, 1) , (unique, 0x10000b7d, 1), (unique, 0x10000b7d, 1) BOOL_NEGATE (unique, 0x100006c1, 1)]
[ ---  CBRANCH (ram, 0x192f99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x629, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x629, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x629, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x629, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x629, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x629, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x629, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x629, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x629, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x629, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x629, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x629, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x629, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x629, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x629, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x601, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x601, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x601, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x601, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x601, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x601, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x601, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x601, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x601, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x601, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x601, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x601, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x601, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x601, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x601, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000b85, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(unique, 0x10000b8d, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x10000b95, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x10000b9d, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(unique, 0x10000ba5, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(unique, 0x10000bad, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(unique, 0x10000bb1, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(unique, 0x10000bb9, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(unique, 0x10000bc1, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(unique, 0x10000bc9, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(unique, 0x10000bd1, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(unique, 0x10000bd9, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(unique, 0x10000bdd, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(unique, 0x10000be5, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x10000be9, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  CBRANCH (ram, 0x192fb3, 1) , (unique, 0x10000b84, 1), (unique, 0x10000b84, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x61b, 4)]
[(ram, 0x4ead78, 8) INDIRECT (unique, 0x10000b85, 8) , (const, 0x61b, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000b8d, 8) , (const, 0x61b, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x10000b95, 8) , (const, 0x61b, 4)]
[(ram, 0x4eae20, 8) INDIRECT (unique, 0x10000b9d, 8) , (const, 0x61b, 4)]
[(ram, 0x4eae58, 8) INDIRECT (unique, 0x10000ba5, 8) , (const, 0x61b, 4)]
[(ram, 0x4eb260, 4) INDIRECT (unique, 0x10000bad, 4) , (const, 0x61b, 4)]
[(ram, 0x4eb280, 8) INDIRECT (unique, 0x10000bb1, 8) , (const, 0x61b, 4)]
[(ram, 0x4eb288, 8) INDIRECT (unique, 0x10000bb9, 8) , (const, 0x61b, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (unique, 0x10000bc1, 8) , (const, 0x61b, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (unique, 0x10000bc9, 8) , (const, 0x61b, 4)]
[(ram, 0x4ed910, 8) INDIRECT (unique, 0x10000bd1, 8) , (const, 0x61b, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (unique, 0x10000bd9, 4) , (const, 0x61b, 4)]
[(ram, 0x4ed940, 8) INDIRECT (unique, 0x10000bdd, 8) , (const, 0x61b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000be5, 4) , (const, 0x61b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x61b, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (unique, 0x10000be9, 8) , (const, 0x61b, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x192ff0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000111c, 8), (unique, 0x1000111c, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10001114, 8) , (register, 0xa8, 8), (unique, 0x10001114, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x192ff0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001124, 8), (unique, 0x10001124, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x19306c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x19300c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x436, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x436, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x436, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x436, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x436, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x436, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x436, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x436, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x436, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x436, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x436, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x436, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x436, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x436, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x436, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x385, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x385, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x385, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x385, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x385, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x385, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x385, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x385, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x385, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x385, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x385, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x385, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x385, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x385, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x385, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x193027, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0x3400, 8) , (const, 0x419, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x419, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x419, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x419, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x419, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x419, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x419, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x419, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x419, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x419, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x419, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x419, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x419, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x419, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x419, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x419, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x419, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x419, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x419, 4)]
[ ---  CALL (ram, 0x230690, 8) , (register, 0x38, 8)]
[(unique, 0x10000c04, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x419, 4)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000c04, 8) , (register, 0x10, 8)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1930d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000112c, 8), (unique, 0x1000112c, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x80, 8) , (unique, 0x3400, 8)]
[(register, 0x30, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001134, 8), (unique, 0x10001134, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x222, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  BRANCH (ram, 0x19303a, 1)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x19304a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x3df, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3df, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3df, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x3df, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x3df, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x3df, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x3df, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x3df, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x3df, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x3df, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x3df, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x3df, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x3df, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3df, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x3df, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x3a8, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x3a8, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x3a8, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x3a8, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x3a8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3a8, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x3a8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000b10, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(unique, 0x10000b18, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x10000b20, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x10000b28, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(unique, 0x10000b30, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(unique, 0x10000b38, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(unique, 0x10000b3c, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(unique, 0x10000b44, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(unique, 0x10000b4c, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(unique, 0x10000b54, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(unique, 0x10000b5c, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(unique, 0x10000b64, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(unique, 0x10000b68, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(unique, 0x10000b70, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x10000b74, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  CBRANCH (ram, 0x193064, 1) , (unique, 0x10000b0f, 1), (unique, 0x10000b0f, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x30, 4) INDIRECT (register, 0x30, 4) , (const, 0x3d1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d1, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3d1, 4)]
[(ram, 0x4ead78, 8) INDIRECT (unique, 0x10000b10, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000b18, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x10000b20, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eae20, 8) INDIRECT (unique, 0x10000b28, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eae58, 8) INDIRECT (unique, 0x10000b30, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eb260, 4) INDIRECT (unique, 0x10000b38, 4) , (const, 0x3d1, 4)]
[(ram, 0x4eb280, 8) INDIRECT (unique, 0x10000b3c, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eb288, 8) INDIRECT (unique, 0x10000b44, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (unique, 0x10000b4c, 8) , (const, 0x3d1, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (unique, 0x10000b54, 8) , (const, 0x3d1, 4)]
[(ram, 0x4ed910, 8) INDIRECT (unique, 0x10000b5c, 8) , (const, 0x3d1, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (unique, 0x10000b64, 4) , (const, 0x3d1, 4)]
[(ram, 0x4ed940, 8) INDIRECT (unique, 0x10000b68, 8) , (const, 0x3d1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000b70, 4) , (const, 0x3d1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d1, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (unique, 0x10000b74, 8) , (const, 0x3d1, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0x38, 8)]
[(unique, 0x10000bfc, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x3d1, 4)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (unique, 0x10000b74, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000b70, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (unique, 0x10000b68, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (unique, 0x10000b64, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (unique, 0x10000b5c, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (unique, 0x10000b54, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (unique, 0x10000b4c, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (unique, 0x10000b44, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (unique, 0x10000b3c, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (unique, 0x10000b38, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (unique, 0x10000b30, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (unique, 0x10000b28, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x10000b20, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x10000b18, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (unique, 0x10000b10, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000bfc, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x192d70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x1000079f, 8), (unique, 0x1000079f, 8) COPY (const, 0x2b8800, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x3c2, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3c2, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3c2, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x3c2, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x3c2, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x3c2, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x3c2, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x3c2, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x3c2, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x3c2, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x3c2, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x3c2, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x3c2, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3c2, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x3c2, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x193278, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed92c, 4) , (const, 0x0, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x101010101010101, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (ram, 0x4ed92c, 4) , (const, 0xff, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x308, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x303, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x308, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x303, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x308, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x303, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x308, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x303, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x308, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x303, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x308, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x303, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x308, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x303, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x308, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x303, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x308, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x303, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x308, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x303, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x308, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x303, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x308, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x303, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x308, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x303, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x308, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x303, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x308, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x303, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x10001144, 8), (unique, 0x10001144, 8) INT_ADD (unique, 0x1000113c, 8) , (unique, 0x1000093f, 8), (unique, 0x1000113c, 8) CAST (register, 0x30, 8), (unique, 0x1000093f, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_AND (unique, 0x3100, 8) , (const, 0xffffffff, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x101010101010101, 8), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (ram, 0x4ed92c, 4) , (const, 0xff, 4)]
[(unique, 0x10000c24, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10001154, 8), (unique, 0x10001154, 8) INT_AND (unique, 0x1000114c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000114c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x1000115c, 4) , (const, 0x3, 4), (unique, 0x1000115c, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0x100003af, 4) , (unique, 0x100003b7, 4), (unique, 0x100003b7, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) CAST (unique, 0x10001154, 8), (unique, 0x10001154, 8) INT_AND (unique, 0x1000114c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000114c, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x8, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x100003af, 4) INT_ADD (unique, 0x1000066d, 4) , (const, 0x10, 4), (unique, 0x1000066d, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x10, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000c24, 8) , (unique, 0x10000c2c, 8)]
[ ---  CBRANCH (ram, 0x1932b2, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x356, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x356, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x356, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x356, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x356, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x356, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x356, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x356, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x356, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x356, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x356, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x356, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x356, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x356, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x356, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8)]
[(unique, 0x10000c2c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000095f, 8) , (const, 0x8, 8), (unique, 0x1000095f, 8) INT_ADD (unique, 0x10000957, 8) , (const, 0x1, 8), (unique, 0x10000957, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1932af, 1)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x1b7, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1b7, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1b7, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x1b7, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x1b7, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x1b7, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x1b7, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x1b7, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x1b7, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x1b7, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x1b7, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x1b7, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x1b7, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x1b7, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001160, 8), (unique, 0x10001160, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000807, 8) , (const, 0x4, 8), (unique, 0x10000807, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0x10000199, 4) , (const, 0x2, 4), (unique, 0x10000199, 4) INT_AND (unique, 0x1000065d, 4) , (const, 0xfffffff, 4), (unique, 0x1000065d, 4) SUBPIECE (unique, 0x10000191, 8) , (const, 0x0, 4), (unique, 0x10000191, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x193170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b7, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x1931c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3a00, 8) CAST (unique, 0x10001168, 8), (unique, 0x10001168, 8) PTRADD (register, 0x38, 8) , (unique, 0x100008f7, 8) , (const, 0x4, 8), (unique, 0x100008f7, 8) INT_ADD (unique, 0x100008ef, 8) , (const, 0x4, 8), (unique, 0x100008ef, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x275, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x275, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x275, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x275, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x275, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x275, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x275, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x275, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x275, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x275, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x275, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x275, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x275, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x275, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x275, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x10001170, 8), (unique, 0x10001170, 8) CAST (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x19318e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10001178, 8), (unique, 0x10001178, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x298, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x298, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x298, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x298, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x298, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x298, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x298, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x298, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x298, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x298, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x298, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x298, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x298, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x298, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x298, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10001198, 8), (unique, 0x10001198, 8) INT_XOR (unique, 0x10001190, 8) , (unique, 0x29f80, 8), (unique, 0x10001190, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x10001180, 8) , (unique, 0x10001188, 8), (unique, 0x10001188, 8) CAST (register, 0x30, 8), (unique, 0x10001180, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[(unique, 0x10000c0c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100011b8, 8), (unique, 0x100011b8, 8) INT_XOR (unique, 0x100011b0, 8) , (unique, 0x2a200, 8), (unique, 0x100011b0, 8) CAST (unique, 0xbd80, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100011a0, 8) , (unique, 0x100011a8, 8), (unique, 0x100011a8, 8) CAST (unique, 0xbd80, 8), (unique, 0x100011a0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x1931c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) CAST (unique, 0x100011b8, 8), (unique, 0x100011b8, 8) INT_XOR (unique, 0x100011b0, 8) , (unique, 0x2a200, 8), (unique, 0x100011b0, 8) CAST (unique, 0xbd80, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100011a0, 8) , (unique, 0x100011a8, 8), (unique, 0x100011a8, 8) CAST (unique, 0xbd80, 8), (unique, 0x100011a0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[ ---  CBRANCH (ram, 0x1931a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x30, 8) COPY (unique, 0x10000c1c, 8), (unique, 0x10000c1c, 8) MULTIEQUAL (unique, 0x10000c0c, 8) , (unique, 0x10000c14, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x2b9, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2b9, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x2b9, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x2b9, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x2b9, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x2b9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b9, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x2b9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x100011c0, 8), (unique, 0x100011c0, 8) CAST (register, 0x30, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1931b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100011c8, 8), (unique, 0x100011c8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x2dc, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2dc, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x2dc, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x2dc, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x2dc, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x2dc, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2dc, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x2dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100011e8, 8), (unique, 0x100011e8, 8) INT_XOR (unique, 0x100011e0, 8) , (unique, 0x29f80, 8), (unique, 0x100011e0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100011d0, 8) , (unique, 0x100011d8, 8), (unique, 0x100011d8, 8) CAST (register, 0x30, 8), (unique, 0x100011d0, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[(unique, 0x10000c14, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10001208, 8), (unique, 0x10001208, 8) INT_XOR (unique, 0x10001200, 8) , (unique, 0x2a200, 8), (unique, 0x10001200, 8) CAST (register, 0x30, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100011f0, 8) , (unique, 0x100011f8, 8), (unique, 0x100011f8, 8) CAST (unique, 0xbd80, 8), (unique, 0x100011f0, 8) CAST (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x19352a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10001208, 8), (unique, 0x10001208, 8) INT_XOR (unique, 0x10001200, 8) , (unique, 0x2a200, 8), (unique, 0x10001200, 8) CAST (register, 0x30, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100011f0, 8) , (unique, 0x100011f8, 8), (unique, 0x100011f8, 8) CAST (unique, 0xbd80, 8), (unique, 0x100011f0, 8) CAST (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x1931c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x262, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x100007a7, 8), (unique, 0x100007a7, 8) COPY (const, 0x2b8828, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x262, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x262, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x262, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x262, 4), (ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x262, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x262, 4), (ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x262, 4), (ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x262, 4), (ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x262, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x262, 4), (ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x262, 4), (ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x262, 4), (ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x262, 4), (ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x262, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x262, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x10001210, 8), (unique, 0x10001210, 8) CAST (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x206, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x203, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x206, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x203, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x206, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x203, 4)]
[(ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x206, 4), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x203, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x206, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x203, 4)]
[(ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x206, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x203, 4)]
[(ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x206, 4), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x203, 4)]
[(ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x206, 4), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x203, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x206, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x203, 4)]
[(ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x206, 4), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x203, 4)]
[(ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x206, 4), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x203, 4)]
[(ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x206, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x203, 4)]
[(ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x206, 4), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x203, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x206, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x203, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x206, 4), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x203, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001218, 8) , (register, 0x30, 8), (unique, 0x10001218, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[ ---  CBRANCH (ram, 0x192d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x192d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000695, 8) , (const, 0x0, 8), (unique, 0x10000695, 8) INT_AND (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x192d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0x30, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (unique, 0x10000665, 4) , (const, 0xfffffff, 4), (unique, 0x10000665, 4) SUBPIECE (unique, 0x100001a9, 8) , (const, 0x0, 4), (unique, 0x100001a9, 8) INT_RIGHT (unique, 0x10001220, 8) , (const, 0x4, 4), (unique, 0x10001220, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25c, 4)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000787, 8), (unique, 0x10000787, 8) COPY (const, 0x2b4dce, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x25c, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x25c, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x25c, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x25c, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x25c, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x25c, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x25c, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x25c, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x25c, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x25c, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x25c, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x25c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x25c, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x25c, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x25c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (unique, 0x10000be9, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x10000be5, 4)]
[(ram, 0x4ed940, 8) MULTIEQUAL (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (ram, 0x4ed940, 8) , (unique, 0x10000bdd, 8)]
[(ram, 0x4ed92c, 4) MULTIEQUAL (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (ram, 0x4ed92c, 4) , (unique, 0x10000bd9, 4)]
[(ram, 0x4ed910, 8) MULTIEQUAL (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (ram, 0x4ed910, 8) , (unique, 0x10000bd1, 8)]
[(ram, 0x4eb2e0, 8) MULTIEQUAL (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (ram, 0x4eb2e0, 8) , (unique, 0x10000bc9, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (unique, 0x10000bc1, 8)]
[(ram, 0x4eb288, 8) MULTIEQUAL (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (ram, 0x4eb288, 8) , (unique, 0x10000bb9, 8)]
[(ram, 0x4eb280, 8) MULTIEQUAL (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (ram, 0x4eb280, 8) , (unique, 0x10000bb1, 8)]
[(ram, 0x4eb260, 4) MULTIEQUAL (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (ram, 0x4eb260, 4) , (unique, 0x10000bad, 4)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (unique, 0x10000ba5, 8)]
[(ram, 0x4eae20, 8) MULTIEQUAL (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (ram, 0x4eae20, 8) , (unique, 0x10000b9d, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (unique, 0x10000b95, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (unique, 0x10000b8d, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (unique, 0x10000b85, 8)]
[ ---  CBRANCH (ram, 0x193748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10001228, 8), (unique, 0x10001228, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x119, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x119, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x119, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x119, 4)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8), (ram, 0x4eae20, 8) INDIRECT (ram, 0x4eae20, 8) , (const, 0x119, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x119, 4)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4), (ram, 0x4eb260, 4) INDIRECT (ram, 0x4eb260, 4) , (const, 0x119, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8), (ram, 0x4eb280, 8) INDIRECT (ram, 0x4eb280, 8) , (const, 0x119, 4)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8), (ram, 0x4eb288, 8) INDIRECT (ram, 0x4eb288, 8) , (const, 0x119, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x119, 4)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8), (ram, 0x4eb2e0, 8) INDIRECT (ram, 0x4eb2e0, 8) , (const, 0x119, 4)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8), (ram, 0x4ed910, 8) INDIRECT (ram, 0x4ed910, 8) , (const, 0x119, 4)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4), (ram, 0x4ed92c, 4) INDIRECT (ram, 0x4ed92c, 4) , (const, 0x119, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8), (ram, 0x4ed940, 8) INDIRECT (ram, 0x4ed940, 8) , (const, 0x119, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x119, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x119, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae20, 8) COPY (ram, 0x4eae20, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[(ram, 0x4eb260, 4) COPY (ram, 0x4eb260, 4)]
[(ram, 0x4eb280, 8) COPY (ram, 0x4eb280, 8)]
[(ram, 0x4eb288, 8) COPY (ram, 0x4eb288, 8)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb2e0, 8) COPY (ram, 0x4eb2e0, 8)]
[(ram, 0x4ed910, 8) COPY (ram, 0x4ed910, 8)]
[(ram, 0x4ed92c, 4) COPY (ram, 0x4ed92c, 4)]
[(ram, 0x4ed940, 8) COPY (ram, 0x4ed940, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8)]
[ ---  RETURN (const, 0x0, 8)]
