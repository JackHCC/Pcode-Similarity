[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x429228, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x115, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x110, 4)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x12a, 4), (ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x115, 4), (ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x110, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x12a, 4), (stack, 0xffffffffffffffbc, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x115, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x110, 4)]
[(register, 0x0, 8) CALL (ram, 0x46b290, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_SEXT (register, 0x18, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (register, 0x18, 4) INT_2COMP (register, 0x38, 4)]
[(unique, 0x100001e9, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x429276, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4031c0, 8) , (unique, 0x10000177, 8) , (unique, 0x1000015f, 8) , (const, 0x5, 8), (unique, 0x10000177, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae11c, 8), (unique, 0x1000015f, 8) COPY (const, 0x49c370, 8)]
[(unique, 0x100001f1, 8) COPY (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13e, 4)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x13e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13e, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000201, 8), (unique, 0x10000201, 8) CALL (ram, 0x401160, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001e9, 8) , (unique, 0x100001f1, 8)]
[ ---  CBRANCH (ram, 0x42932b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x14d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2d, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4292b7, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_SEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x4292c8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x38, 4) , (ram, 0x4af190, 4)]
[ ---  CBRANCH (ram, 0x4292c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000209, 8), (unique, 0x10000209, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000187, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000187, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c32c0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x28, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x59, 4)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x59, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x59, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x59, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) CALL (ram, 0x4031c0, 8) , (unique, 0x1000016f, 8) , (unique, 0xbd80, 8) , (const, 0x5, 8), (unique, 0x1000016f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae11c, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x91, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8c, 4)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0xa6, 4), (ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x91, 4), (ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0xa6, 4), (stack, 0xffffffffffffffbc, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x8c, 4)]
[(register, 0x0, 8) CALL (ram, 0x46b290, 8) , (register, 0x28, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[(unique, 0x100001c9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4031c0, 8) , (unique, 0x1000017f, 8) , (unique, 0x10000167, 8) , (const, 0x5, 8), (unique, 0x1000017f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae11c, 8), (unique, 0x10000167, 8) COPY (const, 0x49c370, 8)]
[ ---  CBRANCH (ram, 0x429314, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4031c0, 8) , (unique, 0x1000017f, 8) , (unique, 0x10000167, 8) , (const, 0x5, 8), (unique, 0x1000017f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae11c, 8), (unique, 0x10000167, 8) COPY (const, 0x49c370, 8)]
[(unique, 0x100001d1, 8) COPY (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xba, 4)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0xba, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0xba, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xba, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000219, 8), (unique, 0x10000219, 8) CALL (ram, 0x401160, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001c9, 8) , (unique, 0x100001d1, 8)]
[ ---  CBRANCH (ram, 0x42929a, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(ram, 0x4af190, 4) MULTIEQUAL (ram, 0x4af190, 4) , (ram, 0x4af190, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x4292bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(ram, 0x4af190, 4) MULTIEQUAL (ram, 0x4af190, 4) , (ram, 0x4af190, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[(unique, 0x100001d9, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x4292b2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) PTRADD (unique, 0x100001a7, 8) , (unique, 0x100000f1, 8) , (const, 0x1, 8), (unique, 0x100001a7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbd, 8), (unique, 0x100000f1, 8) INT_2COMP (register, 0xb0, 8), (register, 0x10, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001e1, 8) COPY (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x100, 4)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x100, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x100, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x100, 4)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x38, 8) , (register, 0xb0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001d9, 8) , (unique, 0x100001e1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0xd7, 4), (ram, 0x4af190, 4) MULTIEQUAL (ram, 0x4af190, 4) , (ram, 0x4af190, 4) , (ram, 0x4af190, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x100001b7, 8) , (const, 0x1, 8), (unique, 0x100001b7, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(ram, 0x4af190, 4) MULTIEQUAL (ram, 0x4af190, 4) , (ram, 0x4af190, 4) , (ram, 0x4af190, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x429332, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000229, 8), (unique, 0x10000229, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4af190, 4) COPY (ram, 0x4af190, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x84, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x84, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4af190, 4) COPY (ram, 0x4af190, 4), (ram, 0x4af190, 4) INDIRECT (ram, 0x4af190, 4) , (const, 0x84, 4)]
[ ---  RETURN (const, 0x1, 4)]
