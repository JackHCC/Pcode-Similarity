[(register, 0x18, 8) INT_SEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x18abd0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x38, 4) , (const, 0x0, 4)]
[(ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x119, 4), (ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x104, 4), (ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x119, 4), (stack, 0xffffffffffffffbc, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) CALL (ram, 0x14a670, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_SEXT (register, 0x18, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (register, 0x18, 4) INT_2COMP (register, 0x38, 4)]
[(unique, 0x100001d0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18ac21, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000150, 8) , (unique, 0x10000160, 8) , (const, 0x5, 8), (unique, 0x10000160, 8) COPY (const, 0x28d795, 8), (unique, 0x10000150, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(unique, 0x100001d8, 8) COPY (register, 0x0, 8)]
[(ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x12d, 4)]
[(register, 0x0, 8) CAST (unique, 0x100001e8, 8), (unique, 0x100001e8, 8) CALL (ram, 0x18e980, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001d0, 8) , (unique, 0x100001d8, 8)]
[ ---  CBRANCH (ram, 0x18ac45, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x145, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2d, 1)]
[ ---  CBRANCH (ram, 0x18ac68, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x38, 4) , (ram, 0x294574, 4)]
[ ---  CBRANCH (ram, 0x18ac68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000170, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000170, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c0800, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[(ram, 0x294574, 4) COPY (ram, 0x294574, 4), (ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x46, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000148, 8) , (unique, 0xbd80, 8) , (const, 0x5, 8), (unique, 0x10000148, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x7f, 4), (ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x6a, 4), (ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x7f, 4), (stack, 0xffffffffffffffbc, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) CALL (ram, 0x14a670, 8) , (register, 0x18, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[(unique, 0x100001b0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18acb7, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000200, 8), (unique, 0x10000200, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000158, 8) , (unique, 0x10000168, 8) , (const, 0x5, 8), (unique, 0x10000168, 8) COPY (const, 0x28d795, 8), (unique, 0x10000158, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(unique, 0x100001b8, 8) COPY (register, 0x0, 8)]
[(ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0x93, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x93, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000208, 8), (unique, 0x10000208, 8) CALL (ram, 0x18e980, 8) , (register, 0x30, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001b0, 8) , (unique, 0x100001b8, 8)]
[(unique, 0x10000131, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x1000013a, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000142, 4) MULTIEQUAL (ram, 0x294574, 4) , (ram, 0x294574, 4)]
[(unique, 0x10000146, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[ ---  CBRANCH (ram, 0x18acce, 1) , (unique, 0x10000139, 1), (unique, 0x10000139, 1) INT_LESS (unique, 0x10000129, 8) , (register, 0x10, 8), (unique, 0x10000129, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(unique, 0x100001c0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x100001a0, 8) , (unique, 0x1000010a, 8) , (const, 0x1, 8), (unique, 0x100001a0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbd, 8), (unique, 0x1000010a, 8) INT_2COMP (unique, 0x1000013a, 8)]
[ ---  CBRANCH (ram, 0x18ace5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x100001a0, 8) , (unique, 0x1000010a, 8) , (const, 0x1, 8), (unique, 0x100001a0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbd, 8), (unique, 0x1000010a, 8) INT_2COMP (unique, 0x1000013a, 8), (register, 0x8, 8) CAST (unique, 0x10000210, 8), (unique, 0x10000210, 8) INT_SUB (register, 0x10, 8) , (unique, 0x10000129, 8)]
[(unique, 0x100001c8, 8) COPY (register, 0x8, 8)]
[(ram, 0x294574, 4) INDIRECT (unique, 0x10000142, 4) , (const, 0xc5, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (unique, 0x10000146, 1) , (const, 0xc5, 4)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x10000131, 8) , (unique, 0x1000013a, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001c0, 8) , (unique, 0x100001c8, 8)]
[ ---  BRANCH (ram, 0x18ac45, 1)]
[(ram, 0x294574, 4) MULTIEQUAL (unique, 0x10000142, 4) , (ram, 0x294574, 4) , (ram, 0x294574, 4)]
[ ---  CBRANCH (ram, 0x18ac50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(ram, 0x294574, 4) INDIRECT (ram, 0x294574, 4) , (const, 0xd5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000180, 8) , (const, 0x1, 8), (unique, 0x10000180, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x294574, 4) COPY (ram, 0x294574, 4), (ram, 0x294574, 4) MULTIEQUAL (ram, 0x294574, 4) , (ram, 0x294574, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8)]
