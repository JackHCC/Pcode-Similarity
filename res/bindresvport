[ ---  CBRANCH (ram, 0x22b479, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7e18, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x354, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x354, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x354, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x354, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x354, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x354, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x354, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x354, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x354, 4), (ram, 0x4c7e18, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x354, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x354, 4), (stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x354, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x354, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x354, 4)]
[ ---  CBRANCH (ram, 0x22b291, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x16dd20, 8) , (unique, 0x100002ea, 8) , (unique, 0x100002e2, 8), (unique, 0x100002ea, 8) COPY (const, 0x28f307, 8), (unique, 0x100002e2, 8) COPY (const, 0x28ddef, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8) , (unique, 0x1000037e, 8) , (unique, 0x1000037e, 8) , (unique, 0x1000037e, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x22b601, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003c9, 8), (unique, 0x100003c9, 8) CAST (unique, 0x10000342, 8), (unique, 0x10000342, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x396, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x396, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x396, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x396, 4), (ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x396, 4), (ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x396, 4), (ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x396, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x396, 4), (ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x396, 4), (ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x396, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x396, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x396, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x396, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000039b, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x396, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x22b601, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x16b260, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3aa, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3aa, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3aa, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x3aa, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x3aa, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x3aa, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x3aa, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x3aa, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x3aa, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3aa, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3aa, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3aa, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3aa, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3aa, 4)]
[ ---  CBRANCH (ram, 0x22b51a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003d1, 8), (unique, 0x100003d1, 8) CALL (ram, 0x189080, 8) , (stack, 0xffffffffffffffa8, 8) , (const, 0x23, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3b9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b9, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x3b9, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x3b9, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x3b9, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x3b9, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x3b9, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x3b9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3b9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003e1, 8), (unique, 0x100003e1, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003d9, 8), (unique, 0x100003d9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000039b, 8), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x10000372, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x10000374, 8) MULTIEQUAL (unique, 0x1000039b, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x22b54a, 1) , (unique, 0x10000373, 1), (unique, 0x10000373, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003e9, 8), (unique, 0x100003e9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (unique, 0x10000374, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x22b4d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000372, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f9, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x3f9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3f9, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x3f9, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x3f9, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x3f9, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x3f9, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x3f9, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x3f9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3f9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3f9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3f9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (register, 0x0, 8) , (const, 0x3f9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3f9, 4)]
[ ---  CBRANCH (ram, 0x22b68b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000374, 8) , (unique, 0x1000034a, 8) , (const, 0x1, 8), (unique, 0x1000034a, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000374, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x525, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x525, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x525, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x525, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x525, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x525, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x525, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x525, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x525, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x22b564, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x41b, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x41b, 4), (ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x41b, 4), (ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x41b, 4), (ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x41b, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x41b, 4), (ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x41b, 4), (ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x41b, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x41b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x41b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x41b, 4)]
[(register, 0x0, 8) CALL (ram, 0x13b3e0, 8) , (unique, 0x10000374, 8) , (unique, 0x100003f1, 8) , (const, 0x0, 4), (unique, 0x100003f1, 8) CAST (unique, 0x3800, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f9, 8), (unique, 0x100003f9, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e18, 8) , (register, 0x110, 8) , (const, 0x1, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x41b, 4), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x41b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x41b, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x1000037c, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x1000037e, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22b5b7, 1) , (unique, 0x1000037d, 1), (unique, 0x1000037d, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000409, 8), (unique, 0x10000409, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x1000037e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x22b4d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000037c, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x22b4d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x22b4d7, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1ff, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_SUB (register, 0x0, 8) , (const, 0x200, 8)]
[(register, 0x88, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22b693, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0xa0, 4) , (register, 0xa8, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4fd, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4fd, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4fd, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x4fd, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x4fd, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x4fd, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x4fd, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x4fd, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x4fd, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4fd, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4fd, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4fd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000037e, 8) , (const, 0x4fd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4fd, 4)]
[ ---  CBRANCH (ram, 0x22b6cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000411, 8), (unique, 0x10000411, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c7e10, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (const, 0x2, 4), (register, 0x30, 8) INT_SEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0xa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x522, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x522, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x522, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x522, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x522, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x522, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x522, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (register, 0x0, 8) , (const, 0x522, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x522, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x522, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x522, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x522, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x522, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x522, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x22b291, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x51b, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x51b, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x51b, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x51b, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x51b, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x51b, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (register, 0x0, 8) , (const, 0x51b, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x51b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x51b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x88, 4), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0xa0, 4)]
[ ---  BRANCH (ram, 0x22b5f7, 1)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x49c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x49c, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x49c, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x49c, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x49c, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x49c, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x49c, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x49c, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x49c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x88, 4), (unique, 0x3400, 8) PTRADD (ram, 0x4c7e10, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0xa0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x1000037e, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x22b4e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000419, 8), (unique, 0x10000419, 8) CAST (unique, 0x1000035a, 8), (unique, 0x1000035a, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4ab, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4ab, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4ab, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x4ab, 4), (ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x4ab, 4), (ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x4ab, 4), (ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x4ab, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x4ab, 4), (ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x4ab, 4), (ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4ab, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4ab, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4ab, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4ab, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x16d210, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22b618, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffa8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4ab, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4bb, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x4bb, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4bb, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x4bb, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x4bb, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x4bb, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x4bb, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x4bb, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x4bb, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4bb, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x4bb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4bb, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4bb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4bb, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003bb, 4) COPY (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x22b29a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100003b7, 4) COPY (ram, 0x4c7e08, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(unique, 0x100003bf, 4) COPY (ram, 0x4c7e08, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[ ---  CBRANCH (ram, 0x22b628, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (unique, 0x100003b7, 4) , (unique, 0x100003bb, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x22b6db, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100002fa, 8), (unique, 0x100002fa, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000421, 8) , (const, 0x61, 4), (unique, 0x10000421, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x318, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x318, 4)]
[(ram, 0x4c330c, 2) COPY (ram, 0x4c330c, 2), (ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x318, 4)]
[(ram, 0x4c7e00, 2) COPY (ram, 0x4c7e00, 2), (ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x318, 4)]
[(ram, 0x4c7e04, 4) COPY (ram, 0x4c7e04, 4), (ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x318, 4)]
[(ram, 0x4c7e08, 4) COPY (ram, 0x4c7e08, 4), (ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x318, 4)]
[(ram, 0x4c7e10, 8) COPY (ram, 0x4c7e10, 8), (ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x318, 4)]
[(ram, 0x4c7e18, 4) COPY (ram, 0x4c7e18, 4), (ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x318, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x318, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (unique, 0x100003bf, 4) , (unique, 0x100003bb, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2, 8)]
[(unique, 0x3800, 8) CAST (unique, 0x10000429, 8), (unique, 0x10000429, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x10000272, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x30, 8)]
[(unique, 0x1000027a, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000282, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(unique, 0x1000028a, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000292, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(unique, 0x10000296, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(unique, 0x1000029a, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(unique, 0x1000029e, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(unique, 0x100002a6, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(unique, 0x100002aa, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x100002b6, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100002be, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100002c6, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100002ce, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x22b657, 1) , (unique, 0x10000271, 1), (unique, 0x10000271, 1) INT_EQUAL (unique, 0x10000294, 2) , (const, 0x0, 2), (unique, 0x10000294, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(register, 0x110, 8) INDIRECT (unique, 0x1000027a, 8) , (const, 0x293, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (unique, 0x10000282, 8) , (const, 0x293, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x1000028a, 8) , (const, 0x293, 4)]
[(ram, 0x4c330c, 2) INDIRECT (unique, 0x10000292, 2) , (const, 0x293, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (unique, 0x10000294, 2) , (const, 0x293, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (unique, 0x10000296, 4) , (const, 0x293, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (unique, 0x1000029a, 4) , (const, 0x293, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (unique, 0x1000029e, 8) , (const, 0x293, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (unique, 0x100002a6, 4) , (const, 0x293, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100002aa, 4) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100002b6, 8) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100002be, 8) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100002c6, 8) , (const, 0x293, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002ce, 8) , (const, 0x293, 4)]
[(register, 0x0, 2) INT_ADD (register, 0x0, 2) , (const, 0x258, 2), (register, 0x0, 2) INT_ADD (unique, 0x1000023e, 2) , (unique, 0x10000240, 2), (unique, 0x1000023e, 2) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (unique, 0x10000240, 2) INT_MULT (unique, 0x10000252, 2) , (const, 0xfe58, 2), (unique, 0x10000252, 2) SUBPIECE (unique, 0x10000246, 4) , (const, 0x0, 4), (unique, 0x10000246, 4) INT_SDIV (register, 0x0, 4) , (const, 0x1a8, 4), (register, 0x0, 4) CALL (ram, 0x1cc770, 8)]
[ ---  BRANCH (ram, 0x22b2b3, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100002ce, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100002c6, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100002be, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100002b6, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000393, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000028a, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x53, 4), (ram, 0x4c2e18, 8) MULTIEQUAL (unique, 0x10000282, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x53, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000028a, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x53, 4), (ram, 0x4c330c, 2) MULTIEQUAL (unique, 0x10000292, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x53, 4), (ram, 0x4c7e00, 2) MULTIEQUAL (unique, 0x10000294, 2) , (register, 0x0, 2)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x53, 4), (ram, 0x4c7e04, 4) MULTIEQUAL (unique, 0x10000296, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x53, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (unique, 0x1000029a, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x53, 4), (ram, 0x4c7e10, 8) MULTIEQUAL (unique, 0x1000029e, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x53, 4), (ram, 0x4c7e18, 4) MULTIEQUAL (unique, 0x100002a6, 4) , (ram, 0x4c7e18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000433, 8) , (const, 0x62, 4), (unique, 0x10000433, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x1000027a, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000028a, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x28, 4) INT_SUB (const, 0x400, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SEXT (unique, 0x10000431, 2), (unique, 0x10000431, 2) CAST (ram, 0x4c330c, 2), (ram, 0x4c330c, 2) MULTIEQUAL (unique, 0x10000292, 2) , (ram, 0x4c330c, 2)]
[ ---  CBRANCH (ram, 0x22b2ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x53, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x100002aa, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7e04, 4) , (const, 0x0, 4)]
[(ram, 0x4c7e04, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7e04, 4) , (const, 0x0, 4)]
[(ram, 0x4c7e04, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x22b310, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x277, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x277, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x277, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x277, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x277, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x277, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x277, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x277, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x277, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x277, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x277, 4)]
[ ---  CALL (ram, 0x2147c0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 2) COPY (const, 0x3ff, 2)]
[(register, 0x88, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22b429, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x28, 4) , (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (register, 0x0, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 2) MULTIEQUAL (register, 0xa0, 2) , (register, 0xa0, 2)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0xb0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xba, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 2), (unique, 0x3100, 8) PTRSUB (unique, 0x10000272, 8) , (const, 0x2, 8), (register, 0x0, 2) INT_OR (unique, 0x4e880, 2) , (unique, 0x4e980, 2), (unique, 0x4e980, 2) INT_LEFT (ram, 0x4c7e00, 2) , (const, 0x8, 4), (unique, 0x4e880, 2) INT_RIGHT (ram, 0x4c7e00, 2) , (const, 0x8, 4), (ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (register, 0x30, 2)]
[ ---  CBRANCH (ram, 0x22b376, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4c7e08, 4) , (const, 0x1, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[ ---  CBRANCH (ram, 0x22b3a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (ram, 0x4c7e10, 8), (register, 0x10, 4) INT_SEXT (unique, 0x1000043b, 2), (unique, 0x1000043b, 2) CAST (ram, 0x4c7e00, 2)]
[(unique, 0x3a00, 8) PTRADD (ram, 0x4c7e10, 8) , (unique, 0x1000031a, 8) , (const, 0x4, 8), (unique, 0x1000031a, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_SUB (ram, 0x4c7e08, 4) , (const, 0x1, 4)]
[(unique, 0x100003a3, 8) COPY (ram, 0x4c7e10, 8)]
[ ---  BRANCH (ram, 0x22b371, 1)]
[ ---  CBRANCH (ram, 0x22b368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3a00, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100001f4, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x100001f4, 8) MULTIEQUAL (unique, 0x100003a3, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf9, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0xf9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf9, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0xf9, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0xf9, 4)]
[(ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0xf9, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0xf9, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0xf9, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0xf9, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf9, 4)]
[ ---  CBRANCH (ram, 0x22b42c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207830, 8) , (register, 0x38, 4) , (unique, 0x1000043d, 8) , (const, 0x10, 4), (unique, 0x1000043d, 8) CAST (unique, 0x10000272, 8)]
[ ---  CBRANCH (ram, 0x22b42c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x62, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000445, 8), (unique, 0x10000445, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000393, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x22b3d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0xb0, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x22b3a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22b3c3, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0xa0, 2) , (unique, 0x1000044d, 2), (unique, 0x1000044d, 2) CAST (register, 0x30, 2), (register, 0x30, 2) INT_ADD (register, 0x30, 2) , (const, 0x1, 2), (register, 0x30, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(unique, 0x100003c7, 2) COPY (ram, 0x4c330c, 2)]
[(register, 0x30, 2) MULTIEQUAL (register, 0x30, 2) , (unique, 0x100003c7, 2)]
[ ---  CBRANCH (ram, 0x22b330, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (register, 0xb0, 4), (register, 0xb0, 4) INT_ADD (register, 0xb0, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (register, 0x30, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x22b431, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c330c, 2) , (const, 0x200, 2), (ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e04, 4) MULTIEQUAL (ram, 0x4c7e04, 4) , (ram, 0x4c7e04, 4)]
[(ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x22b445, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100003af, 4) COPY (unique, 0x10000386, 4), (unique, 0x10000386, 4) INT_ADD (ram, 0x4c7e04, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22b467, 1) , (unique, 0x1000038a, 1), (unique, 0x1000038a, 1) INT_NOTEQUAL (unique, 0x10000386, 4) , (const, 0x0, 4), (unique, 0x10000386, 4) INT_ADD (ram, 0x4c7e04, 4) , (const, 0xffffffff, 4)]
[(register, 0x88, 4) INDIRECT (register, 0x88, 4) , (const, 0x22d, 4)]
[(ram, 0x4c2e18, 8) INDIRECT (ram, 0x4c2e18, 8) , (const, 0x22d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x22d, 4)]
[(ram, 0x4c330c, 2) INDIRECT (ram, 0x4c330c, 2) , (const, 0x22d, 4)]
[(ram, 0x4c7e00, 2) INDIRECT (ram, 0x4c7e00, 2) , (const, 0x22d, 4)]
[(ram, 0x4c7e08, 4) INDIRECT (ram, 0x4c7e08, 4) , (const, 0x22d, 4)]
[(ram, 0x4c7e10, 8) INDIRECT (ram, 0x4c7e10, 8) , (const, 0x22d, 4)]
[(ram, 0x4c7e18, 4) INDIRECT (ram, 0x4c7e18, 4) , (const, 0x22d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x22d, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x22d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x22d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x22d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22d, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7e04, 8)]
[(unique, 0x100003ab, 4) COPY (ram, 0x4c7e04, 4), (ram, 0x4c7e04, 4) INDIRECT (ram, 0x4c7e04, 4) , (const, 0x22d, 4), (ram, 0x4c7e04, 4) INT_ADD (ram, 0x4c7e04, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c2e18, 8) COPY (ram, 0x4c2e18, 8), (ram, 0x4c2e18, 8) MULTIEQUAL (ram, 0x4c2e18, 8) , (ram, 0x4c2e18, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c330c, 2) COPY (ram, 0x4c330c, 2), (ram, 0x4c330c, 2) MULTIEQUAL (ram, 0x4c330c, 2) , (ram, 0x4c330c, 2)]
[(ram, 0x4c7e00, 2) COPY (ram, 0x4c7e00, 2), (ram, 0x4c7e00, 2) MULTIEQUAL (ram, 0x4c7e00, 2) , (ram, 0x4c7e00, 2)]
[(ram, 0x4c7e04, 4) COPY (ram, 0x4c7e04, 4), (ram, 0x4c7e04, 4) COPY (unique, 0x100003b3, 4), (unique, 0x100003b3, 4) MULTIEQUAL (unique, 0x100003ab, 4) , (unique, 0x100003af, 4)]
[(ram, 0x4c7e08, 4) COPY (ram, 0x4c7e08, 4), (ram, 0x4c7e08, 4) MULTIEQUAL (ram, 0x4c7e08, 4) , (ram, 0x4c7e08, 4)]
[(ram, 0x4c7e10, 8) COPY (ram, 0x4c7e10, 8), (ram, 0x4c7e10, 8) MULTIEQUAL (ram, 0x4c7e10, 8) , (ram, 0x4c7e10, 8)]
[(ram, 0x4c7e18, 4) COPY (ram, 0x4c7e18, 4), (ram, 0x4c7e18, 4) MULTIEQUAL (ram, 0x4c7e18, 4) , (ram, 0x4c7e18, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x88, 4), (register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x28, 4) COPY (const, 0x58, 4)]
[(register, 0xa0, 2) COPY (const, 0x257, 2)]
[(ram, 0x4c330c, 2) COPY (const, 0x200, 2)]
[(register, 0x0, 2) INT_ADD (unique, 0x10000200, 2) , (const, 0x200, 2), (unique, 0x10000200, 2) INT_SREM (unique, 0x1000044f, 2) , (const, 0x58, 2), (unique, 0x1000044f, 2) CAST (ram, 0x4c7e00, 2)]
[ ---  BRANCH (ram, 0x22b324, 1)]
