[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3200, 8) CAST (unique, 0x100000be, 8), (unique, 0x100000be, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c6, 8), (unique, 0x100000c6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x8, 8), (unique, 0x3200, 8) CAST (unique, 0x100000ce, 8), (unique, 0x100000ce, 8) INT_ADD (register, 0x38, 8) , (const, 0x98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x30, 8), (unique, 0x3200, 8) CAST (unique, 0x100000d6, 8), (unique, 0x100000d6, 8) INT_ADD (register, 0x38, 8) , (const, 0xb0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100000de, 8), (unique, 0x100000de, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100000b6, 8), (unique, 0x100000b6, 8) INT_ADD (register, 0x38, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x186d25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100000b6, 8), (unique, 0x100000b6, 8) INT_ADD (register, 0x38, 8) , (const, 0x88, 8)]
[(register, 0x18, 8) CAST (unique, 0x100000fe, 8), (unique, 0x100000fe, 8) INT_XOR (register, 0x18, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000f6, 8), (unique, 0x100000f6, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x18, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x100000ee, 8) , (const, 0x2f, 4), (unique, 0x100000ee, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x100000e6, 8) , (const, 0x11, 4), (unique, 0x100000e6, 8) CAST (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x91, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x65, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000106, 8), (unique, 0x10000106, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x186da4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0x3200, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x20, 8), (unique, 0x3200, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x186da0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x186d67, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x186d6c, 1)]
[ ---  CBRANCH (ram, 0x186d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x186d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7, 4)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x186d6c, 1)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x186da8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000010e, 8), (unique, 0x1000010e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe3, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
