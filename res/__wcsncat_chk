[(unique, 0x1000011b, 8) COPY (register, 0x8, 8)]
[(unique, 0x1000013b, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x217272, 1)]
[(register, 0x90, 8) COPY (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) MULTIEQUAL (unique, 0x1000013b, 8) , (unique, 0x10000143, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8), (register, 0x8, 8) COPY (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) MULTIEQUAL (unique, 0x1000011b, 8) , (unique, 0x10000123, 8)]
[ ---  CBRANCH (ram, 0x217260, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) COPY (unique, 0x1000012b, 8), (unique, 0x1000012b, 8) MULTIEQUAL (unique, 0x1000011b, 8) , (unique, 0x10000123, 8)]
[(unique, 0x10000123, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000143, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x217280, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x90, 8)]
[(register, 0x90, 8) PTRADD (register, 0x90, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x217300, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x88, 8) INT_SUB (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000153, 8) COPY (register, 0x90, 8)]
[(unique, 0x10000163, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000173, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000101, 8) MULTIEQUAL (unique, 0x10000153, 8) , (unique, 0x1000015b, 8)]
[(unique, 0x1000010a, 8) MULTIEQUAL (unique, 0x10000163, 8) , (unique, 0x1000016b, 8)]
[(unique, 0x10000112, 8) MULTIEQUAL (unique, 0x10000173, 8) , (unique, 0x1000017b, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (unique, 0x10000109, 1), (unique, 0x10000109, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x21727b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000010a, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (unique, 0x10000101, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21727b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000010a, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (unique, 0x10000101, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x1000010a, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x21727b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000010a, 8) , (const, 0x3, 8)]
[(register, 0x30, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (unique, 0xbc80, 4), (register, 0x90, 8) PTRADD (unique, 0x10000101, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000112, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21735a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x217345, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000071, 8) , (const, 0x0, 8), (unique, 0x10000071, 8) INT_AND (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x21727b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (unique, 0x1000010a, 8) , (const, 0xfffffffffffffffb, 8)]
[(unique, 0x10000133, 8) COPY (register, 0x90, 8)]
[ ---  BRANCH (ram, 0x217305, 1)]
[ ---  CBRANCH (ram, 0x21727b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (unique, 0x10000101, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000015b, 8) COPY (register, 0x90, 8)]
[(unique, 0x1000016b, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000017b, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000133, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000133, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x88, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x217336, 1)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[(register, 0x80, 8) PTRADD (unique, 0x10000069, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000069, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x217348, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (register, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x21727b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x217320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x216890, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbc80, 4), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x2172f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x38, 8)]
