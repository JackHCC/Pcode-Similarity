[ ---  CBRANCH (ram, 0x410688, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000079, 8) , (unique, 0x10000071, 8) , (const, 0x29, 4) , (unique, 0x10000081, 8), (unique, 0x10000081, 8) COPY (const, 0x49a980, 8), (unique, 0x10000079, 8) COPY (const, 0x49a957, 8), (unique, 0x10000071, 8) COPY (const, 0x49a940, 8)]
[(ram, 0x4c8750, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x138, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x410618, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8750, 4) , (const, 0x0, 4)]
[(ram, 0x4c8750, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x130, 4)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x130, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000091, 8), (unique, 0x10000091, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8750, 8)]
[ ---  BRANCH (ram, 0x4105b6, 1)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8750, 4) , (const, 0x0, 4)]
[(ram, 0x4c8750, 4) COPY (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x3e, 4), (ram, 0x4c8750, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[ ---  CBRANCH (ram, 0x41066d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) CALL (ram, 0x410320, 8) , (unique, 0x10000089, 8), (unique, 0x10000089, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5100, 8)]
[ ---  CBRANCH (ram, 0x4106a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000cf, 8), (unique, 0x100000cf, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c8750, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) INT_ADD (ram, 0x4c8750, 4) , (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x80, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x38, 8) , (const, 0x11, 4), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x29e, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x29d, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x71, 4), (ram, 0x4c8750, 4) INDIRECT (ram, 0x4c8750, 4) , (const, 0x4d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000067, 8) , (register, 0x10, 8), (unique, 0x10000067, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x410640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000df, 8), (unique, 0x100000df, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c8750, 4) COPY (ram, 0x4c8750, 4), (ram, 0x4c8750, 4) INT_ADD (ram, 0x4c8750, 4) , (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(unique, 0x100000b6, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x410609, 1) , (unique, 0x100000b5, 1), (unique, 0x100000b5, 1) INT_SLESS (const, 0x1, 4) , (unique, 0x100000ba, 4), (unique, 0x100000ba, 4) MULTIEQUAL (ram, 0x4c8750, 4) , (ram, 0x4c8750, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x410609, 1)]
[(ram, 0x4c8750, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x100000b6, 4)]
