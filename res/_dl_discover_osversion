[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe18, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe18, 8)]
[(unique, 0x10000124, 8) COPY (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (unique, 0x1000010c, 8) , (const, 0x82, 8), (unique, 0x1000010c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe58, 8)]
[ ---  CBRANCH (ram, 0x45b540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x47c3d0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe58, 8)]
[ ---  CBRANCH (ram, 0x45b592, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0x100000bb, 8) , (const, 0x0, 8), (unique, 0x100000bb, 8) COPY (const, 0x49ecb6, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45b592, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x456020, 8) , (register, 0x0, 4) , (register, 0x20, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x45b589, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (const, 0x3e, 8) , (register, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x3f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) PTRADD (unique, 0x100000f3, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x100000f3, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe18, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[(unique, 0x1000012c, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x45b4b9, 1)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x45b50f, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000124, 8) , (unique, 0x1000012c, 8)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x8, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x45b521, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 1) , (unique, 0x10000134, 1), (unique, 0x10000134, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x30, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100000ae, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(unique, 0x100000b6, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0x3a00, 4)]
[ ---  CBRANCH (ram, 0x45b4f7, 1) , (unique, 0x100000ba, 1), (unique, 0x100000ba, 1) INT_LESS (unique, 0x10000135, 1) , (const, 0xa, 1), (unique, 0x10000135, 1) CAST (register, 0x38, 1), (register, 0x38, 1) INT_SUB (unique, 0x100000ad, 1) , (const, 0x30, 1), (unique, 0x100000ad, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3a00, 4) INT_ADD (unique, 0x3880, 4) , (unique, 0x3900, 4), (unique, 0x3900, 4) INT_MULT (unique, 0x100000b6, 4) , (const, 0xa, 4), (unique, 0x3880, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffd0, 4), (register, 0x10, 4) INT_SEXT (unique, 0x100000ad, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x100000ae, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) PTRADD (unique, 0x100000ae, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_OR (register, 0x0, 4) , (unique, 0x100000b6, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x45b51b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000ad, 1) , (const, 0x2e, 1)]
[ ---  CBRANCH (ram, 0x45b50f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) INT_MULT (unique, 0x100000a2, 1) , (const, 0x8, 1), (unique, 0x100000a2, 1) INT_SUB (const, 0x3, 1) , (unique, 0x100000a6, 1), (unique, 0x100000a6, 1) SUBPIECE (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45b4be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
