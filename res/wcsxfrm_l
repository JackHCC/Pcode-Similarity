[(unique, 0x1000338b, 8) COPY (register, 0x30, 8)]
[(unique, 0x1000339b, 8) COPY (register, 0x10, 8)]
[(unique, 0x100033b3, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1b6969, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100033c3, 8), (unique, 0x100033c3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x40, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001795, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x10001795, 8) PTRSUB (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6984, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100033cb, 8), (unique, 0x100033cb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x48, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100033d3, 8), (unique, 0x100033d3, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x98, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100033db, 8), (unique, 0x100033db, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x90, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100033eb, 8), (unique, 0x100033eb, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6bb1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000f53, 8) , (const, 0x0, 8), (unique, 0x10000f53, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100033e3, 8), (unique, 0x100033e3, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x88, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x3abf, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1b6bd0, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000338b, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (register, 0x18, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000339b, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100033b3, 8) , (const, 0x3abf, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3abf, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x1000174d, 8) , (unique, 0x10001745, 8) , (const, 0x2c1, 4) , (unique, 0x10001785, 8), (unique, 0x10001785, 8) COPY (const, 0x291688, 8), (unique, 0x1000174d, 8) COPY (const, 0x291310, 8), (unique, 0x10001745, 8) COPY (const, 0x28d8ba, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b6b92, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000f2, 8) , (const, 0x0, 8), (unique, 0x100000f2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x3ab6, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1b6bb1, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000338b, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (register, 0x18, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000339b, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100033b3, 8) , (const, 0x3ab6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3ab6, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x1000175d, 8) , (unique, 0x1000173d, 8) , (const, 0x2c2, 4) , (unique, 0x1000177d, 8), (unique, 0x1000177d, 8) COPY (const, 0x291688, 8), (unique, 0x1000175d, 8) COPY (const, 0x291600, 8), (unique, 0x1000173d, 8) COPY (const, 0x28d8ba, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b6b73, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10001296, 8) , (const, 0x0, 8), (unique, 0x10001296, 8) INT_AND (unique, 0x100033f3, 8) , (const, 0x3, 8), (unique, 0x100033f3, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x3aad, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1b6b92, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000338b, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (register, 0x18, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000339b, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100033b3, 8) , (const, 0x3aad, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aad, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10001765, 8) , (unique, 0x10001735, 8) , (const, 0x2c3, 4) , (unique, 0x10001775, 8), (unique, 0x10001775, 8) COPY (const, 0x291688, 8), (unique, 0x10001765, 8) COPY (const, 0x291648, 8), (unique, 0x10001735, 8) COPY (const, 0x28d8ba, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b6b54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000129e, 8) , (const, 0x0, 8), (unique, 0x1000129e, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x3, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x3aa4, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1b6b73, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000338b, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (register, 0x18, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000339b, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100033b3, 8) , (const, 0x3aa4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3aa4, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10001755, 8) , (unique, 0x1000172d, 8) , (const, 0x2c4, 4) , (unique, 0x1000176d, 8), (unique, 0x1000176d, 8) COPY (const, 0x291688, 8), (unique, 0x10001755, 8) COPY (const, 0x291350, 8), (unique, 0x1000172d, 8) COPY (const, 0x28d8ba, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffbf10, 8)]
[(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffaf00, 8)]
[(unique, 0x10002e7f, 8) COPY (register, 0x30, 8)]
[(unique, 0x10003047, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b6a52, 1)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x10003047, 8) , (unique, 0x1000304f, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10002e7f, 8) , (unique, 0x10002e87, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x1000338b, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (register, 0x18, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x1000339b, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100033b3, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1b6a18, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100033fb, 4) , (const, 0x0, 4), (unique, 0x100033fb, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000340b, 8), (unique, 0x1000340b, 8) INT_ADD (unique, 0x10003403, 8) , (unique, 0x3300, 8), (unique, 0x10003403, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100033ff, 4), (unique, 0x100033ff, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0x100013fa, 8) INT_SEXT (unique, 0x10003417, 4), (unique, 0x10003417, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100013f2, 8) PTRADD (unique, 0x10001403, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10001403, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b6ac7, 1) , (unique, 0x10001402, 1), (unique, 0x10001402, 1) INT_SLESS (unique, 0x10003413, 4) , (const, 0x0, 4), (unique, 0x10003413, 4) CAST (unique, 0x100013ee, 4), (unique, 0x100013ee, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100013fa, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6af2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100013fa, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6b1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001403, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002d27, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b6ae9, 1)]
[ ---  CBRANCH (ram, 0x1b6ade, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002d27, 8) , (unique, 0x10002d2f, 8)]
[(unique, 0x10002d2f, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6b1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100013f2, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10001835, 8) , (const, 0x4, 8), (unique, 0x10001835, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b6b1f, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x1000341b, 4), (unique, 0x1000341b, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100013fa, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001403, 8) , (unique, 0x10001855, 8) , (const, 0x4, 8), (unique, 0x10001855, 8) INT_ADD (unique, 0x100013fa, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100013f2, 8) , (unique, 0x1000189d, 8) , (const, 0x4, 8), (unique, 0x1000189d, 8) INT_MULT (unique, 0x100013fa, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b6a71, 1)]
[ ---  CBRANCH (ram, 0x1b6b35, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000341f, 4) , (unique, 0xbc80, 4), (unique, 0x1000341f, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001403, 8) , (unique, 0x1000187d, 8) , (const, 0x4, 8), (unique, 0x1000187d, 8) INT_ADD (unique, 0x10001875, 8) , (const, 0x1, 8), (unique, 0x10001875, 8) INT_MULT (unique, 0x100013fa, 8) , (const, 0x2, 8)]
[(register, 0x0, 8) PTRADD (unique, 0x100013f2, 8) , (unique, 0x1000188d, 8) , (const, 0x4, 8), (unique, 0x1000188d, 8) INT_MULT (unique, 0x100013fa, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b6a71, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100013fa, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000342b, 8), (unique, 0x1000342b, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003427, 4), (unique, 0x10003427, 4) CAST (register, 0x0, 4), (register, 0x10, 8) INT_SEXT (unique, 0x10003423, 4), (unique, 0x10003423, 4) CAST (register, 0x38, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100013ee, 4), (register, 0x38, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b6a1b, 1)]
[ ---  CBRANCH (ram, 0x1b6b28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100013fa, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6ab5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001403, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002d37, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b6aa1, 1)]
[ ---  CBRANCH (ram, 0x1b6a98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100013fa, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002d37, 8) , (unique, 0x10002d3f, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b6a1b, 1)]
[(unique, 0x10002d3f, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6ab5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100013f2, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100017ed, 8) , (const, 0x4, 8), (unique, 0x100017ed, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100013f2, 8) , (unique, 0x100013fa, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100013f2, 8) , (unique, 0x100013fa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (unique, 0x10002ba3, 4) , (const, 0x0, 4), (unique, 0x10002ba3, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x18, 4), (unique, 0x3400, 8) CAST (unique, 0x1000343b, 8), (unique, 0x1000343b, 8) INT_ADD (unique, 0x10003433, 8) , (register, 0xa8, 8), (unique, 0x10003433, 8) CAST (stack, 0xffffffffffffff88, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0x100013ee, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0x100013ee, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (register, 0xa8, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100013ee, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (unique, 0x100013ee, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b83d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10002e87, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000304f, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b6bd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0xfff, 8)]
[(stack, 0xffffffffffffff68, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x0, 1), (unique, 0x3200, 8) CAST (unique, 0x1000344b, 8), (unique, 0x1000344b, 8) INT_ADD (unique, 0x10003443, 8) , (const, 0xfff, 8), (unique, 0x10003443, 8) CAST (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000316b, 8) COPY (stack, 0xffffffffffffff48, 8), (stack, 0xffffffffffffff48, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff68, 4) SUBPIECE (stack, 0xffffffffffffff68, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff48, 8) COPY (unique, 0x1000317b, 8), (unique, 0x1000317b, 8) MULTIEQUAL (unique, 0x1000316b, 8) , (unique, 0x10003173, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x218, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x218, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x218, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x218, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x218, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x218, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1b831e, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000345b, 8), (unique, 0x1000345b, 8) INT_ADD (unique, 0x10003453, 8) , (unique, 0x3300, 8), (unique, 0x10003453, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x10001417, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000140f, 8) PTRADD (unique, 0x10001420, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10001420, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b837e, 1) , (unique, 0x1000141f, 1), (unique, 0x1000141f, 1) INT_SLESS (unique, 0x1000140b, 4) , (const, 0x0, 4), (unique, 0x1000140b, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x10, 8) INT_SUB (unique, 0x10001417, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b83a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10001417, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b83d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff70, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001420, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002ccf, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b839f, 1)]
[ ---  CBRANCH (ram, 0x1b8394, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002ccf, 8) , (unique, 0x10002cd7, 8)]
[(unique, 0x10002cd7, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b83d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000140f, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffff70, 8) , (unique, 0x10002575, 8) , (const, 0x4, 8), (unique, 0x10002575, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b83d0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffff70, 8) , (unique, 0x10001417, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001420, 8) , (unique, 0x10002595, 8) , (const, 0x4, 8), (unique, 0x10002595, 8) INT_ADD (unique, 0x10001417, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x1000140f, 8) , (unique, 0x100025dd, 8) , (const, 0x4, 8), (unique, 0x100025dd, 8) INT_MULT (unique, 0x10001417, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8331, 1)]
[ ---  CBRANCH (ram, 0x1b92d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x5200, 4) , (unique, 0xbc80, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001420, 8) , (unique, 0x100025bd, 8) , (const, 0x4, 8), (unique, 0x100025bd, 8) INT_ADD (unique, 0x100025b5, 8) , (const, 0x1, 8), (unique, 0x100025b5, 8) INT_MULT (unique, 0x10001417, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x1000140f, 8) , (unique, 0x100025cd, 8) , (const, 0x4, 8), (unique, 0x100025cd, 8) INT_MULT (unique, 0x10001417, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8331, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003463, 8), (unique, 0x10003463, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_2COMP (unique, 0x1000140b, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b6c17, 1)]
[ ---  CBRANCH (ram, 0x1b8365, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10001417, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b836c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff70, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001420, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002cdf, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b835c, 1)]
[ ---  CBRANCH (ram, 0x1b8351, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10001417, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002cdf, 8) , (unique, 0x10002ce7, 8)]
[(unique, 0x10002ce7, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b836c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000140f, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffff70, 8) , (unique, 0x10002535, 8) , (const, 0x4, 8), (unique, 0x10002535, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000140f, 8) , (unique, 0x10001417, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000140f, 8) , (unique, 0x10001417, 8) , (const, 0x4, 8)]
[(unique, 0x100033ab, 8) COPY (stack, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x1b78ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000346b, 8), (unique, 0x1000346b, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (stack, 0xffffffffffffff60, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (stack, 0xffffffffffffff80, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_SRIGHT (register, 0x10, 4) , (const, 0x18, 4), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffff68, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (unique, 0x1000140b, 4) , (unique, 0x1000140b, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff68, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10003303, 8) COPY (stack, 0xffffffffffffff70, 8)]
[(unique, 0x1000330b, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10001428, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff50, 8)]
[(unique, 0x10001431, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x10001439, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10001441, 8) MULTIEQUAL (unique, 0x100033ab, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10001449, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(unique, 0x10001451, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10001459, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(unique, 0x10001461, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x10001469, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10001471, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x10001479, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(unique, 0x10001481, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10001489, 8) MULTIEQUAL (unique, 0x10003303, 8) , (unique, 0x100032fb, 8)]
[(unique, 0x10001491, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(unique, 0x10001499, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x100014a1, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100014a9, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x100014b1, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100014b9, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100014c9, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100033bb, 8) COPY (unique, 0x100014c1, 8), (unique, 0x100014c1, 8) MULTIEQUAL (unique, 0x1000330b, 8) , (unique, 0x10003313, 8)]
[ ---  CBRANCH (ram, 0x1b7d45, 1) , (unique, 0x10001430, 1), (unique, 0x10001430, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (unique, 0x10001449, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x10001451, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (unique, 0x10001459, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x10001461, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (unique, 0x10001428, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x10001469, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x10001471, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x10001479, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x10001481, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (unique, 0x10001491, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x10001499, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x15b3, 4), (unique, 0x3100, 8) PTRADD (unique, 0x10001489, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x100014a9, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100014b1, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100014b9, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x10001441, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10001439, 8) , (const, 0x15b3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100014c9, 8) , (const, 0x15b3, 4)]
[(unique, 0x10002bf7, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100033bb, 8) , (const, 0x15b3, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (unique, 0x100014c9, 8)]
[ ---  CBRANCH (ram, 0x1b806a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10003473, 4) , (const, 0x0, 4), (unique, 0x10003473, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (unique, 0x100014c9, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10003483, 8), (unique, 0x10003483, 8) INT_ADD (unique, 0x1000347b, 8) , (unique, 0x3300, 8), (unique, 0x1000347b, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003477, 4), (unique, 0x10003477, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100014dd, 8) INT_SEXT (unique, 0x1000348f, 4), (unique, 0x1000348f, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100014d5, 8) PTRADD (unique, 0x100014e6, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100014e6, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b80d5, 1) , (unique, 0x100014e5, 1), (unique, 0x100014e5, 1) INT_SLESS (unique, 0x1000348b, 4) , (const, 0x0, 4), (unique, 0x1000348b, 4) CAST (unique, 0x100014d1, 4), (unique, 0x100014d1, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100014dd, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b8102, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100014dd, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b8134, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100014e6, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001489, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002c9f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b80f9, 1)]
[ ---  CBRANCH (ram, 0x1b80f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c9f, 8) , (unique, 0x10002ca7, 8)]
[(unique, 0x10002ca7, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8134, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014d5, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001489, 8) , (unique, 0x1000234d, 8) , (const, 0x4, 8), (unique, 0x1000234d, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b8134, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10003493, 4), (unique, 0x10003493, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (unique, 0x10002385, 8) , (const, 0x4, 8), (unique, 0x10002385, 8) INT_ADD (unique, 0x100014dd, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100014e6, 8) , (unique, 0x1000236d, 8) , (const, 0x4, 8), (unique, 0x1000236d, 8) INT_ADD (unique, 0x100014dd, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100014d5, 8) , (unique, 0x100023c5, 8) , (const, 0x4, 8), (unique, 0x100023c5, 8) INT_MULT (unique, 0x100014dd, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8076, 1)]
[ ---  CBRANCH (ram, 0x1b8271, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10003497, 4) , (unique, 0xbc80, 4), (unique, 0x10003497, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100014e6, 8) , (unique, 0x100023a5, 8) , (const, 0x4, 8), (unique, 0x100023a5, 8) INT_ADD (unique, 0x1000239d, 8) , (const, 0x1, 8), (unique, 0x1000239d, 8) INT_MULT (unique, 0x100014dd, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100014d5, 8) , (unique, 0x100023b5, 8) , (const, 0x4, 8), (unique, 0x100023b5, 8) INT_MULT (unique, 0x100014dd, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8076, 1)]
[(unique, 0xbd80, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (unique, 0x100014dd, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100034a3, 8), (unique, 0x100034a3, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000349f, 4), (unique, 0x1000349f, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x10, 8) INT_SEXT (unique, 0x1000349b, 4), (unique, 0x1000349b, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_2COMP (unique, 0x100014d1, 4)]
[ ---  BRANCH (ram, 0x1b7946, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x100014d1, 4)]
[ ---  CBRANCH (ram, 0x1b825e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100014dd, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b80c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100014e6, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001489, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002eaf, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b80a9, 1)]
[ ---  CBRANCH (ram, 0x1b80a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100014dd, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002eaf, 8) , (unique, 0x10002eb7, 8)]
[(unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b7946, 1)]
[(unique, 0x10002eb7, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b80c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014d5, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001489, 8) , (unique, 0x10002305, 8) , (const, 0x4, 8), (unique, 0x10002305, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014d5, 8) , (unique, 0x100014dd, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014d5, 8) , (unique, 0x100014dd, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0x3400, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000059c, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x18, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffff, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100034af, 8), (unique, 0x100034af, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100034ab, 4), (unique, 0x100034ab, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffff, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b797b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (unique, 0x3100, 4) , (unique, 0x100005b0, 4), (unique, 0x100005b0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100034b7, 8), (unique, 0x100034b7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x3100, 4) , (unique, 0x100005b0, 4), (unique, 0x100005b0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b7965, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x98, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1b8056, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100034bf, 8), (unique, 0x100034bf, 8) INT_ADD (stack, 0xffffffffffffff50, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (unique, 0x1000059c, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x1000313f, 8) COPY (unique, 0x10001431, 8)]
[ ---  CBRANCH (ram, 0x1b805d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10001431, 8) , (const, 0x0, 8)]
[(unique, 0x10003147, 8) COPY (unique, 0x10001489, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000313f, 8) , (unique, 0x10003147, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100034cf, 8), (unique, 0x100034cf, 8) INT_ADD (unique, 0x100034c7, 8) , (register, 0xa0, 8), (unique, 0x100034c7, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x1b7d3b, 1)]
[ ---  CBRANCH (ram, 0x1b82a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10001431, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff78, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10002fdf, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1b7b9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff40, 8) CAST (unique, 0x100034df, 8), (unique, 0x100034df, 8) INT_OR (unique, 0x10001352, 8) , (unique, 0x1000135a, 8), (unique, 0x1000135a, 8) INT_ZEXT (register, 0x98, 4), (unique, 0x10001352, 8) INT_AND (unique, 0x100034d7, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100034d7, 8) CAST (stack, 0xffffffffffffff40, 8)]
[(unique, 0x1000312f, 8) COPY (unique, 0x10001431, 8)]
[(unique, 0x1000315b, 8) COPY (register, 0xa0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000312f, 8) , (unique, 0x10003137, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (unique, 0x1000315b, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x167f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1b7f44, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100034e7, 4) , (const, 0x0, 4), (unique, 0x100034e7, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000312f, 8) , (unique, 0x10003137, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100034f7, 8), (unique, 0x100034f7, 8) INT_ADD (unique, 0x100034ef, 8) , (unique, 0x3300, 8), (unique, 0x100034ef, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100034eb, 4), (unique, 0x100034eb, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100014fa, 8) INT_SEXT (unique, 0x10003503, 4), (unique, 0x10003503, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100014f2, 8) PTRADD (unique, 0x10001503, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10001503, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b7fa6, 1) , (unique, 0x10001502, 1), (unique, 0x10001502, 1) INT_SLESS (unique, 0x100034ff, 4) , (const, 0x0, 4), (unique, 0x100034ff, 4) CAST (unique, 0x100014ee, 4), (unique, 0x100014ee, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100014fa, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b7fd3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100014fa, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b7ffd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001503, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002bff, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b7fca, 1)]
[ ---  CBRANCH (ram, 0x1b7fc0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002bff, 8) , (unique, 0x10002c07, 8)]
[(unique, 0x10002c07, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7ffd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014f2, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10002255, 8) , (const, 0x4, 8), (unique, 0x10002255, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b7ffd, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10003507, 4), (unique, 0x10003507, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x100014fa, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001503, 8) , (unique, 0x10002275, 8) , (const, 0x4, 8), (unique, 0x10002275, 8) INT_ADD (unique, 0x100014fa, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100014f2, 8) , (unique, 0x100022bd, 8) , (const, 0x4, 8), (unique, 0x100022bd, 8) INT_MULT (unique, 0x100014fa, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7f50, 1)]
[ ---  CBRANCH (ram, 0x1b8011, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000350b, 4) , (unique, 0xbc80, 4), (unique, 0x1000350b, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001503, 8) , (unique, 0x1000229d, 8) , (const, 0x4, 8), (unique, 0x1000229d, 8) INT_ADD (unique, 0x10002295, 8) , (const, 0x1, 8), (unique, 0x10002295, 8) INT_MULT (unique, 0x100014fa, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100014f2, 8) , (unique, 0x100022ad, 8) , (const, 0x4, 8), (unique, 0x100022ad, 8) INT_MULT (unique, 0x100014fa, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7f50, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100014fa, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003517, 8), (unique, 0x10003517, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003513, 4), (unique, 0x10003513, 4) CAST (register, 0x0, 4), (register, 0x10, 8) INT_SEXT (unique, 0x1000350f, 4), (unique, 0x1000350f, 4) CAST (register, 0x8, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x8, 4) INT_2COMP (unique, 0x100014ee, 4)]
[ ---  BRANCH (ram, 0x1b79de, 1)]
[ ---  CBRANCH (ram, 0x1b8006, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100014fa, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7f94, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001503, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002e9f, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b7f82, 1)]
[ ---  CBRANCH (ram, 0x1b7f78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100014fa, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002e9f, 8) , (unique, 0x10002ea7, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b79de, 1)]
[(unique, 0x10002ea7, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b7f94, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014f2, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x1000220d, 8) , (const, 0x4, 8), (unique, 0x1000220d, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014f2, 8) , (unique, 0x100014fa, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014f2, 8) , (unique, 0x100014fa, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffff, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100014ee, 4) , (unique, 0xbc80, 4) , (unique, 0x100014ee, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003523, 8), (unique, 0x10003523, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000351f, 4), (unique, 0x1000351f, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffff, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100014ee, 4) , (unique, 0xbc80, 4) , (unique, 0x100014ee, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7a0b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000352b, 8), (unique, 0x1000352b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b79f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7b86, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (stack, 0xffffffffffffffa0, 8), (register, 0x30, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (unique, 0x10003533, 8), (unique, 0x10003533, 8) CAST (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x1b7b86, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8030, 1) , (unique, 0x100005e5, 1), (unique, 0x100005e5, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003543, 8), (unique, 0x10003543, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x88, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10002bf7, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10002bf7, 8) , (unique, 0x10002045, 8) , (const, 0x4, 8), (unique, 0x10002045, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x1000353b, 8), (unique, 0x1000353b, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8), (register, 0x88, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b8030, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0xa, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10003563, 8), (unique, 0x10003563, 8) INT_ADD (unique, 0x1000355b, 8) , (unique, 0x100022d5, 8), (unique, 0x1000355b, 8) CAST (unique, 0x10002bf7, 8), (unique, 0x100022d5, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003553, 8), (unique, 0x10003553, 8) INT_ADD (unique, 0x1000354b, 8) , (register, 0x10, 8), (unique, 0x1000354b, 8) CAST (unique, 0x3400, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b8041, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x3680, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002d47, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_2COMP (unique, 0x100005f4, 4), (unique, 0x100005f4, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7a8d, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_2COMP (unique, 0x100005f4, 4), (unique, 0x100005f4, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[(unique, 0x10002d4f, 8) COPY (register, 0x0, 8)]
[(unique, 0x10002f37, 8) COPY (register, 0x0, 8)]
[(unique, 0x100032e3, 4) COPY (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b7ae8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10002d47, 8) , (unique, 0x10002d4f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x100032eb, 4) COPY (register, 0x80, 4), (register, 0x80, 4) INT_ADD (unique, 0x3100, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b8145, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x1, 8)]
[(register, 0x90, 4) INT_ADD (unique, 0x3100, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x10002bf7, 8) , (register, 0x98, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000356b, 8), (unique, 0x1000356b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_SEXT (register, 0x80, 4), (register, 0x98, 8) INT_SUB (register, 0x30, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b813d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x3, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x10002bf7, 8) , (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_SUB (register, 0x30, 8) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003573, 8), (unique, 0x10003573, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_SEXT (register, 0x90, 4)]
[(unique, 0x100032e7, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x3100, 4) , (const, 0x3, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10002f37, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100032e3, 4) , (unique, 0x100032e7, 4) , (unique, 0x100032eb, 4) , (register, 0x90, 4)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3680, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(register, 0x90, 8) INT_MULT (unique, 0x10003583, 8) , (const, 0x4, 8), (unique, 0x10003583, 8) CAST (register, 0x90, 8), (register, 0x90, 8) CAST (unique, 0x1000357b, 8), (unique, 0x1000357b, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8), (register, 0x90, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_SUB (register, 0x0, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001053, 4), (unique, 0x3400, 8) CAST (unique, 0x100035ab, 8), (unique, 0x100035ab, 8) INT_ADD (unique, 0x100035a3, 8) , (unique, 0x1000206d, 8), (unique, 0x100035a3, 8) CAST (unique, 0x10002bf7, 8), (unique, 0x1000206d, 8) INT_ADD (register, 0x8, 8) , (register, 0x8, 8), (unique, 0x10001053, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000358b, 8), (unique, 0x1000358b, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000107b, 8) , (unique, 0x10001057, 4), (unique, 0x1000107b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100035ab, 8), (unique, 0x100035ab, 8) INT_ADD (unique, 0x100035a3, 8) , (unique, 0x1000206d, 8), (unique, 0x100035a3, 8) CAST (unique, 0x10002bf7, 8), (unique, 0x1000206d, 8) INT_ADD (register, 0x8, 8) , (register, 0x8, 8), (unique, 0x10001057, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000105b, 8), (unique, 0x1000105b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000358b, 8), (unique, 0x1000358b, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001083, 8) , (unique, 0x10001063, 4), (unique, 0x10001083, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100035ab, 8), (unique, 0x100035ab, 8) INT_ADD (unique, 0x100035a3, 8) , (unique, 0x1000206d, 8), (unique, 0x100035a3, 8) CAST (unique, 0x10002bf7, 8), (unique, 0x1000206d, 8) INT_ADD (register, 0x8, 8) , (register, 0x8, 8), (unique, 0x10001063, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001067, 8), (unique, 0x10001067, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000358b, 8), (unique, 0x1000358b, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000108b, 8) , (unique, 0x1000106f, 4), (unique, 0x1000108b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100035ab, 8), (unique, 0x100035ab, 8) INT_ADD (unique, 0x100035a3, 8) , (unique, 0x1000206d, 8), (unique, 0x100035a3, 8) CAST (unique, 0x10002bf7, 8), (unique, 0x1000206d, 8) INT_ADD (register, 0x8, 8) , (register, 0x8, 8), (unique, 0x1000106f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001073, 8), (unique, 0x10001073, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000358b, 8), (unique, 0x1000358b, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x10, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b7b1b, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x98, 8) , (register, 0x90, 8), (register, 0x98, 8) CAST (unique, 0x1000359b, 8), (unique, 0x1000359b, 8) INT_ADD (unique, 0x10003593, 8) , (const, 0x1, 8), (unique, 0x10003593, 8) CAST (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0x1000065a, 8), (unique, 0x1000065a, 8) INT_MULT (unique, 0x100035b3, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x100035b3, 8) CAST (register, 0x90, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x90, 4), (register, 0x90, 4) SUBPIECE (register, 0x90, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7b86, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (register, 0x80, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x10002bf7, 8) , (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SUB (register, 0x30, 8) , (register, 0x38, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100035bb, 8), (unique, 0x100035bb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1b7b86, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) INT_ADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x10002bf7, 8) , (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SUB (register, 0x30, 8) , (register, 0x88, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100035c3, 8), (unique, 0x100035c3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1b7b86, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x10002bf7, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100035cb, 8), (unique, 0x100035cb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (register, 0x38, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (register, 0x90, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10003137, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1b79c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100035db, 8), (unique, 0x100035db, 8) INT_SUB (unique, 0x100035d3, 8) , (register, 0x0, 8), (unique, 0x100035d3, 8) CAST (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff40, 4) SUBPIECE (stack, 0xffffffffffffff40, 8) , (const, 0x0, 8)]
[(unique, 0x10002fe7, 8) COPY (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (stack, 0xffffffffffffff40, 4)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10002fdf, 8) , (unique, 0x10002fe7, 8)]
[(register, 0x10, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (unique, 0x100035e3, 8), (unique, 0x100035e3, 8) CAST (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7d37, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0xa0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (stack, 0xffffffffffffffa8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x3800, 8) INT_SUB (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b82da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b82bc, 1) , (unique, 0x10000f5f, 1), (unique, 0x10000f5f, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100035f7, 8), (unique, 0x100035f7, 8) INT_ADD (unique, 0x3580, 8) , (unique, 0xbd80, 8), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) CAST (unique, 0x100035ef, 8), (unique, 0x100035ef, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3480, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100020cd, 8) , (const, 0x4, 8), (unique, 0x100020cd, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SEXT (unique, 0x100035eb, 4), (unique, 0x100035eb, 4) CAST (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x1b82bc, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (const, 0xa, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10003617, 8), (unique, 0x10003617, 8) INT_ADD (unique, 0x1000360f, 8) , (register, 0x10, 8), (unique, 0x1000360f, 8) CAST (unique, 0x3400, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003607, 8), (unique, 0x10003607, 8) INT_ADD (unique, 0x100035ff, 8) , (register, 0x10, 8), (unique, 0x100035ff, 8) CAST (unique, 0x3400, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b82c6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x3680, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002c2f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100006e9, 4), (unique, 0x100006e9, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7c36, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100006e9, 4), (unique, 0x100006e9, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[(unique, 0x10002c37, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10002d57, 8) COPY (unique, 0x3800, 8)]
[(unique, 0x10002db7, 8) COPY (register, 0x10, 8)]
[(unique, 0x10003157, 4) COPY (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x1b7c98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c2f, 8) , (unique, 0x10002c37, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(register, 0xb8, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000361f, 8), (unique, 0x1000361f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)]
[(unique, 0x3800, 8) INT_SUB (register, 0xa0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b82b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x38, 4) INT_ADD (register, 0x98, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000362b, 8), (unique, 0x1000362b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10003627, 4), (unique, 0x10003627, 4) CAST (register, 0xb8, 4)]
[(unique, 0x3800, 8) INT_SUB (register, 0xa0, 8) , (const, 0x3, 8)]
[(unique, 0x10002dbf, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b7c92, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x3, 8)]
[(register, 0x38, 4) INT_ADD (register, 0x98, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003637, 8), (unique, 0x10003637, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x10003633, 4), (unique, 0x10003633, 4) CAST (register, 0x38, 4)]
[(unique, 0x3800, 8) INT_SUB (register, 0xa0, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x3, 8)]
[(register, 0x98, 4) MULTIEQUAL (unique, 0x10003157, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0xb8, 4)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10002db7, 8) , (unique, 0x10002dbf, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10002d57, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_SUB (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7cf8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SUB (unique, 0x3800, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3680, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0xbd80, 8), (register, 0x30, 8) INT_ADD (unique, 0x3480, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001093, 4), (unique, 0x3400, 8) CAST (unique, 0x1000364f, 8), (unique, 0x1000364f, 8) INT_ADD (unique, 0x10003647, 8) , (unique, 0x100020ed, 8), (unique, 0x10003647, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100020ed, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x10001093, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000363f, 8), (unique, 0x1000363f, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010bb, 8) , (unique, 0x10001097, 4), (unique, 0x100010bb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000364f, 8), (unique, 0x1000364f, 8) INT_ADD (unique, 0x10003647, 8) , (unique, 0x100020ed, 8), (unique, 0x10003647, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100020ed, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x10001097, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000109b, 8), (unique, 0x1000109b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000363f, 8), (unique, 0x1000363f, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010c3, 8) , (unique, 0x100010a3, 4), (unique, 0x100010c3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000364f, 8), (unique, 0x1000364f, 8) INT_ADD (unique, 0x10003647, 8) , (unique, 0x100020ed, 8), (unique, 0x10003647, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100020ed, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x100010a3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010a7, 8), (unique, 0x100010a7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000363f, 8), (unique, 0x1000363f, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010cb, 8) , (unique, 0x100010af, 4), (unique, 0x100010cb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000364f, 8), (unique, 0x1000364f, 8) INT_ADD (unique, 0x10003647, 8) , (unique, 0x100020ed, 8), (unique, 0x10003647, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100020ed, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x100010af, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010b3, 8), (unique, 0x100010b3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000363f, 8), (unique, 0x1000363f, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7cd4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (register, 0x38, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3680, 8)]
[(register, 0x98, 4) INT_ADD (register, 0x98, 4) , (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (unique, 0x3680, 8) , (const, 0x0, 4)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x10000755, 8), (unique, 0x10000755, 8) INT_MULT (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x1b7d34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8), (unique, 0x28700, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x90, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000365b, 8), (unique, 0x1000365b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x10003657, 4), (unique, 0x10003657, 4) CAST (register, 0x98, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x1b7d34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(register, 0x38, 4) INT_ADD (register, 0x98, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003667, 8), (unique, 0x10003667, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003663, 4), (unique, 0x10003663, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7d34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003673, 8), (unique, 0x10003673, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x1000366f, 4), (unique, 0x1000366f, 4) CAST (register, 0x38, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000326b, 8) COPY (unique, 0x3400, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000326b, 8) , (stack, 0xffffffffffffffa8, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x100032fb, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x10003313, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000335b, 8) COPY (unique, 0x1000334b, 8), (unique, 0x1000334b, 8) COPY (unique, 0x10001439, 8)]
[ ---  CBRANCH (ram, 0x1b756f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10001431, 8) , (const, 0x0, 8)]
[(unique, 0x1000150c, 8) MULTIEQUAL (unique, 0x1000331b, 8) , (unique, 0x10001431, 8)]
[(unique, 0x1000151c, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (unique, 0x10001449, 8)]
[(unique, 0x10001524, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (unique, 0x10001451, 8)]
[(unique, 0x1000152c, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (unique, 0x10001459, 8)]
[(unique, 0x10001534, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (unique, 0x10001461, 8)]
[(unique, 0x1000153c, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0x10001428, 8)]
[(unique, 0x10001544, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x10001469, 8)]
[(unique, 0x1000154c, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0x10001471, 8)]
[(unique, 0x10001554, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0x10001479, 8)]
[(unique, 0x1000155c, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (unique, 0x10001481, 8)]
[(unique, 0x10001564, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (unique, 0x10001491, 8)]
[(unique, 0x1000156c, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (unique, 0x10001499, 8)]
[(unique, 0x10001574, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0x100014a9, 8)]
[(unique, 0x1000157c, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (unique, 0x100014b1, 8)]
[(unique, 0x10001584, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x100014b9, 8)]
[(unique, 0x1000158c, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x10001441, 8)]
[(unique, 0x10001594, 8) MULTIEQUAL (unique, 0x10003323, 8) , (unique, 0x100033bb, 8)]
[(unique, 0x1000159c, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x10001439, 8)]
[(unique, 0x100015a4, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100014c9, 8)]
[ ---  CBRANCH (ram, 0x1b7f37, 1) , (unique, 0x1000150b, 1), (unique, 0x1000150b, 1) INT_NOTEQUAL (unique, 0x10001713, 8) , (const, 0x0, 8), (unique, 0x10001713, 8) COPY (unique, 0x10003363, 8), (unique, 0x10003363, 8) MULTIEQUAL (unique, 0x10003353, 8) , (unique, 0x1000335b, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x1000150c, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (unique, 0x1000151c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x10001524, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (unique, 0x1000152c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x10001534, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (unique, 0x1000153c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x10001544, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x1000154c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x10001554, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000155c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (unique, 0x10001564, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x1000156c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x10001713, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x10001574, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x1000157c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10001584, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000158c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10001594, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000159c, 8) , (const, 0x1c5b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100015a4, 8) , (const, 0x1c5b, 4)]
[ ---  CBRANCH (ram, 0x1b814d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000367b, 4) , (const, 0x0, 4), (unique, 0x1000367b, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (unique, 0x100015a4, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000150c, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x1000368b, 8), (unique, 0x1000368b, 8) INT_ADD (unique, 0x10003683, 8) , (unique, 0x3300, 8), (unique, 0x10003683, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000367f, 4), (unique, 0x1000367f, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100015b8, 8) INT_SEXT (unique, 0x10003697, 4), (unique, 0x10003697, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100015b0, 8) PTRADD (unique, 0x100015c1, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100015c1, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b81b0, 1) , (unique, 0x100015c0, 1), (unique, 0x100015c0, 1) INT_SLESS (unique, 0x10003693, 4) , (const, 0x0, 4), (unique, 0x10003693, 4) CAST (unique, 0x100015ac, 4), (unique, 0x100015ac, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x80, 8) INT_SUB (unique, 0x100015b8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b81d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100015b8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b8203, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000150c, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100015c1, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002c6f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b81d0, 1)]
[ ---  CBRANCH (ram, 0x1b81c6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c6f, 8) , (unique, 0x10002c77, 8)]
[(unique, 0x10002c77, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8203, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100015b0, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000150c, 8) , (unique, 0x10002445, 8) , (const, 0x4, 8), (unique, 0x10002445, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b8203, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x1000369b, 4), (unique, 0x1000369b, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000150c, 8) , (unique, 0x100015b8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100015c1, 8) , (unique, 0x10002465, 8) , (const, 0x4, 8), (unique, 0x10002465, 8) INT_ADD (unique, 0x100015b8, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100015b0, 8) , (unique, 0x100024ad, 8) , (const, 0x4, 8), (unique, 0x100024ad, 8) INT_MULT (unique, 0x100015b8, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8159, 1)]
[ ---  CBRANCH (ram, 0x1b8219, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000369f, 4) , (unique, 0xbc80, 4), (unique, 0x1000369f, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100015c1, 8) , (unique, 0x1000248d, 8) , (const, 0x4, 8), (unique, 0x1000248d, 8) INT_ADD (unique, 0x10002485, 8) , (const, 0x1, 8), (unique, 0x10002485, 8) INT_MULT (unique, 0x100015b8, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100015b0, 8) , (unique, 0x1000249d, 8) , (const, 0x4, 8), (unique, 0x1000249d, 8) INT_MULT (unique, 0x100015b8, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8159, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100015b8, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100036ab, 8), (unique, 0x100036ab, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100036a7, 4), (unique, 0x100036a7, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100015ac, 4), (register, 0x10, 8) INT_SEXT (unique, 0x100036a3, 4), (unique, 0x100036a3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b7d7e, 1)]
[ ---  CBRANCH (ram, 0x1b820c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100015b8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b819e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100015c1, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000150c, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002c7f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b818a, 1)]
[ ---  CBRANCH (ram, 0x1b8180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100015b8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c7f, 8) , (unique, 0x10002c87, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b7d7e, 1)]
[(unique, 0x10002c87, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b819e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100015b0, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000150c, 8) , (unique, 0x100023fd, 8) , (const, 0x4, 8), (unique, 0x100023fd, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100015b0, 8) , (unique, 0x100015b8, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100015b0, 8) , (unique, 0x100015b8, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100015ac, 4) , (unique, 0xbc80, 4) , (unique, 0x100015ac, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) CAST (unique, 0x100036bf, 8), (unique, 0x100036bf, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100036b7, 8), (unique, 0x100036b7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100036b3, 4), (unique, 0x100036b3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100015ac, 4) , (unique, 0xbc80, 4) , (unique, 0x100015ac, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7da6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) CAST (unique, 0x100036cf, 8), (unique, 0x100036cf, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100036c7, 8), (unique, 0x100036c7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b7d93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10003183, 8) COPY (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x1b7f2d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (stack, 0xffffffffffffffa0, 8), (register, 0x30, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (unique, 0x100036d7, 8), (unique, 0x100036d7, 8) CAST (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000318b, 8) COPY (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x1b7f2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8238, 1) , (unique, 0x100007b2, 1), (unique, 0x100007b2, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100036f7, 8), (unique, 0x100036f7, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x38, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100014c1, 8) , (register, 0x98, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100036ef, 8), (unique, 0x100036ef, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100014c1, 8) , (unique, 0x1000214d, 8) , (const, 0x4, 8), (unique, 0x1000214d, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100036e7, 8), (unique, 0x100036e7, 8) CAST (register, 0x0, 8), (register, 0x8, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100036df, 8), (unique, 0x100036df, 8) CAST (register, 0x0, 8), (register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b8238, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0xa, 8)]
[(unique, 0x3680, 8) INT_MULT (unique, 0x10003707, 8) , (const, 0x4, 8), (unique, 0x10003707, 8) CAST (register, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100036ff, 8), (unique, 0x100036ff, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x10003727, 8), (unique, 0x10003727, 8) INT_ADD (unique, 0x1000371f, 8) , (unique, 0x100024c5, 8), (unique, 0x1000371f, 8) CAST (unique, 0x100014c1, 8), (unique, 0x100024c5, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003717, 8), (unique, 0x10003717, 8) INT_ADD (unique, 0x1000370f, 8) , (register, 0x10, 8), (unique, 0x1000370f, 8) CAST (unique, 0x3400, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b8249, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x3680, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002f7f, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x1000372f, 8), (unique, 0x1000372f, 8) INT_ZEXT (register, 0x88, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x3, 4), (register, 0x88, 4) INT_2COMP (unique, 0x100007c1, 4), (unique, 0x100007c1, 4) INT_RIGHT (register, 0x88, 4) , (const, 0x2, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0xf, 4), (register, 0x88, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7e26, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x1000372f, 8), (unique, 0x1000372f, 8) INT_ZEXT (register, 0x88, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x3, 4), (register, 0x88, 4) INT_2COMP (unique, 0x100007c1, 4), (unique, 0x100007c1, 4) INT_RIGHT (register, 0x88, 4) , (const, 0x2, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0xf, 4), (register, 0x88, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[(unique, 0x10002f87, 8) COPY (register, 0x0, 8)]
[(unique, 0x10002d5f, 8) COPY (register, 0x0, 8)]
[(unique, 0x100032ef, 4) COPY (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b7e7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10002f7f, 8) , (unique, 0x10002f87, 8)]
[(register, 0x90, 4) INT_ADD (unique, 0x3100, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x1000373f, 8), (unique, 0x1000373f, 8) INT_ADD (unique, 0x10003737, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x10003737, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7e7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x1, 8)]
[(register, 0x80, 4) INT_ADD (unique, 0x3100, 4) , (const, 0x2, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x1000375f, 8), (unique, 0x1000375f, 8) INT_ADD (unique, 0x10003757, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10003757, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x100014c1, 8) , (register, 0xa0, 8) , (const, 0x4, 8), (register, 0xa0, 8) INT_SUB (register, 0x30, 8) , (unique, 0x1000374f, 8), (unique, 0x1000374f, 8) CAST (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003747, 8), (unique, 0x10003747, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_SEXT (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x1b7e7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x3, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x1000377f, 8), (unique, 0x1000377f, 8) INT_ADD (unique, 0x10003777, 8) , (const, 0xfffffffffffffffd, 8), (unique, 0x10003777, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x100014c1, 8) , (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_SUB (register, 0x30, 8) , (unique, 0x1000376f, 8), (unique, 0x1000376f, 8) CAST (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003767, 8), (unique, 0x10003767, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_SEXT (register, 0x80, 4)]
[(register, 0x80, 4) INT_ADD (unique, 0x3100, 4) , (const, 0x3, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100032ef, 4) , (register, 0x90, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10002d5f, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x88, 8) PTRADD (unique, 0x100014c1, 8) , (unique, 0x1000217d, 8) , (const, 0x4, 8), (unique, 0x1000217d, 8) INT_ADD (register, 0x98, 8) , (unique, 0x100037a7, 8), (unique, 0x100037a7, 8) CAST (register, 0x88, 8)]
[(register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_MULT (unique, 0x1000379f, 8) , (const, 0x4, 8), (unique, 0x1000379f, 8) CAST (register, 0x88, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_RIGHT (unique, 0x100037af, 8) , (const, 0x2, 4), (unique, 0x100037af, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0xa0, 8) CAST (unique, 0x10003797, 8), (unique, 0x10003797, 8) INT_SUB (unique, 0x10003787, 8) , (unique, 0x1000378f, 8), (unique, 0x1000378f, 8) CAST (register, 0x88, 8), (unique, 0x10003787, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100010d3, 4), (unique, 0x3400, 8) CAST (unique, 0x100037c7, 8), (unique, 0x100037c7, 8) INT_ADD (unique, 0x100037bf, 8) , (register, 0x88, 8), (unique, 0x100037bf, 8) CAST (register, 0x88, 8), (unique, 0x100010d3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100037b7, 8), (unique, 0x100037b7, 8) INT_ADD (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100010fb, 8) , (unique, 0x100010d7, 4), (unique, 0x100010fb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100037c7, 8), (unique, 0x100037c7, 8) INT_ADD (unique, 0x100037bf, 8) , (register, 0x88, 8), (unique, 0x100037bf, 8) CAST (register, 0x88, 8), (unique, 0x100010d7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010db, 8), (unique, 0x100010db, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100037b7, 8), (unique, 0x100037b7, 8) INT_ADD (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001103, 8) , (unique, 0x100010e3, 4), (unique, 0x10001103, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100037c7, 8), (unique, 0x100037c7, 8) INT_ADD (unique, 0x100037bf, 8) , (register, 0x88, 8), (unique, 0x100037bf, 8) CAST (register, 0x88, 8), (unique, 0x100010e3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010e7, 8), (unique, 0x100010e7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100037b7, 8), (unique, 0x100037b7, 8) INT_ADD (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000110b, 8) , (unique, 0x100010ef, 4), (unique, 0x1000110b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100037c7, 8), (unique, 0x100037c7, 8) INT_ADD (unique, 0x100037bf, 8) , (register, 0x88, 8), (unique, 0x100037bf, 8) CAST (register, 0x88, 8), (unique, 0x100010ef, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100010f3, 8), (unique, 0x100010f3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100037b7, 8), (unique, 0x100037b7, 8) INT_ADD (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x10, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1b7ebe, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x98, 8) , (register, 0x80, 8), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0x1, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (unique, 0x100021bd, 8) , (const, 0x4, 8), (unique, 0x100021bd, 8) INT_2COMP (register, 0x80, 8)]
[(register, 0x38, 4) INT_ADD (register, 0x10, 4) , (unique, 0x10000841, 4), (unique, 0x10000841, 4) SUBPIECE (unique, 0x3680, 8) , (const, 0x0, 4)]
[(unique, 0x10003193, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7f2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x28700, 8) , (const, 0x0, 8), (unique, 0x28700, 8) INT_SUB (unique, 0x3680, 8) , (unique, 0x100037cf, 8), (unique, 0x100037cf, 8) CAST (register, 0xa0, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x100014c1, 8) , (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_SUB (register, 0x30, 8) , (unique, 0x100037df, 8), (unique, 0x100037df, 8) CAST (register, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100037d7, 8), (unique, 0x100037d7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x1b7f2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_ADD (unique, 0x100037e7, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100037e7, 8) CAST (register, 0x8, 8)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x100014c1, 8) , (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SUB (register, 0x30, 8) , (register, 0x80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100037ef, 8), (unique, 0x100037ef, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b7f2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) CAST (unique, 0x100037ff, 8), (unique, 0x100037ff, 8) INT_ADD (unique, 0x100037f7, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100037f7, 8) CAST (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x100014c1, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000380f, 8), (unique, 0x1000380f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (unique, 0x10003807, 8), (unique, 0x10003807, 8) CAST (register, 0x8, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x10003183, 8) , (unique, 0x1000318b, 8) , (unique, 0x10003193, 8) , (unique, 0x10003193, 8) , (unique, 0x10003193, 8) , (unique, 0x10003193, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x1000331b, 8) COPY (register, 0xb8, 8)]
[(unique, 0x10003323, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10003353, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10003827, 8), (unique, 0x10003827, 8) INT_SUB (unique, 0x10003817, 8) , (unique, 0x1000381f, 8), (unique, 0x1000381f, 8) CAST (register, 0x0, 8), (unique, 0x10003817, 8) CAST (stack, 0xffffffffffffff88, 8)]
[(unique, 0xbd80, 8) INT_ADD (unique, 0x1000158c, 8) , (unique, 0x1000382f, 8), (unique, 0x1000382f, 8) CAST (unique, 0x1000159c, 8)]
[ ---  BRANCH (ram, 0x1b756f, 1)]
[(register, 0x18, 8) INT_ADD (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff68, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x1000383b, 8), (unique, 0x1000383b, 8) INT_ADD (unique, 0x10002baf, 8) , (const, 0x1, 4), (unique, 0x10002baf, 8) INT_LEFT (unique, 0x10002ba7, 8) , (const, 0x20, 8), (unique, 0x10002ba7, 8) INT_SEXT (unique, 0x10003837, 4), (unique, 0x10003837, 4) CAST (stack, 0xffffffffffffff8c, 4), (stack, 0xffffffffffffff8c, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10003343, 8) COPY (stack, 0xffffffffffffff70, 8)]
[(unique, 0x100015c9, 8) MULTIEQUAL (register, 0x18, 8) , (stack, 0xffffffffffffff30, 8)]
[(unique, 0x100015d2, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x88, 8)]
[(unique, 0x100015da, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100015e2, 8) MULTIEQUAL (unique, 0x100033ab, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100015ea, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(unique, 0x100015f2, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(unique, 0x100015fa, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x10001602, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(unique, 0x1000160a, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10001612, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x1000161a, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(unique, 0x10001622, 8) MULTIEQUAL (unique, 0x10003343, 8) , (unique, 0x1000333b, 8)]
[(unique, 0x1000162a, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10001632, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(unique, 0x1000163a, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x10001642, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000164a, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10001652, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x1000165a, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10001662, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000166a, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1b731a, 1) , (unique, 0x100015d1, 1), (unique, 0x100015d1, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (unique, 0x100015c9, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x100015ea, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (unique, 0x100015f2, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x100015fa, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (unique, 0x10001602, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x2b5, 4), (unique, 0x3100, 8) PTRADD (unique, 0x10001622, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x10001612, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000161a, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000162a, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (unique, 0x100031eb, 8) , (const, 0x2b5, 4), (unique, 0x100031eb, 8) COPY (unique, 0x100015d2, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (unique, 0x1000163a, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x10001642, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x1000164a, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10001652, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000165a, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x100015e2, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10001662, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100015da, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000166a, 8) , (const, 0x2b5, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (unique, 0x1000166a, 8)]
[ ---  CBRANCH (ram, 0x1b75ac, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10003843, 4) , (const, 0x0, 4), (unique, 0x10003843, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (unique, 0x1000166a, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10003853, 8), (unique, 0x10003853, 8) INT_ADD (unique, 0x1000384b, 8) , (unique, 0x3300, 8), (unique, 0x1000384b, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003847, 4), (unique, 0x10003847, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x1000167e, 8) INT_SEXT (unique, 0x1000385f, 4), (unique, 0x1000385f, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10001676, 8) PTRADD (unique, 0x10001687, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x10001687, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b761c, 1) , (unique, 0x10001686, 1), (unique, 0x10001686, 1) INT_SLESS (unique, 0x1000385b, 4) , (const, 0x0, 4), (unique, 0x1000385b, 4) CAST (unique, 0x10001672, 4), (unique, 0x10001672, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x1000167e, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b764b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000167e, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b767c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001622, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001687, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002caf, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b7642, 1)]
[ ---  CBRANCH (ram, 0x1b7638, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002caf, 8) , (unique, 0x10002cb7, 8)]
[(unique, 0x10002cb7, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b767c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001676, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001622, 8) , (unique, 0x10001d85, 8) , (const, 0x4, 8), (unique, 0x10001d85, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b767c, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10003863, 4), (unique, 0x10003863, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffff58, 8) , (unique, 0x10001dbd, 8) , (const, 0x4, 8), (unique, 0x10001dbd, 8) INT_ADD (unique, 0x1000167e, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001687, 8) , (unique, 0x10001da5, 8) , (const, 0x4, 8), (unique, 0x10001da5, 8) INT_ADD (unique, 0x1000167e, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10001676, 8) , (unique, 0x10001dfd, 8) , (const, 0x4, 8), (unique, 0x10001dfd, 8) INT_MULT (unique, 0x1000167e, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b75b8, 1)]
[ ---  CBRANCH (ram, 0x1b76aa, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10003867, 4) , (unique, 0xbc80, 4), (unique, 0x10003867, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001687, 8) , (unique, 0x10001ddd, 8) , (const, 0x4, 8), (unique, 0x10001ddd, 8) INT_ADD (unique, 0x10001dd5, 8) , (const, 0x1, 8), (unique, 0x10001dd5, 8) INT_MULT (unique, 0x1000167e, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10001676, 8) , (unique, 0x10001ded, 8) , (const, 0x4, 8), (unique, 0x10001ded, 8) INT_MULT (unique, 0x1000167e, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b75b8, 1)]
[(unique, 0xbd80, 8) PTRADD (stack, 0xffffffffffffff58, 8) , (unique, 0x1000167e, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003873, 8), (unique, 0x10003873, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000386f, 4), (unique, 0x1000386f, 4) CAST (register, 0x0, 4), (register, 0x10, 8) INT_SEXT (unique, 0x1000386b, 4), (unique, 0x1000386b, 4) CAST (register, 0x8, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (register, 0x8, 4) INT_2COMP (unique, 0x10001672, 4)]
[ ---  BRANCH (ram, 0x1b6ca1, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x10001672, 4)]
[ ---  CBRANCH (ram, 0x1b76cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000167e, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b75f3, 1)]
[ ---  CBRANCH (ram, 0x1b760a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001622, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001687, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002ebf, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b75ea, 1)]
[ ---  CBRANCH (ram, 0x1b75e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000167e, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002ebf, 8) , (unique, 0x10002ec7, 8)]
[(unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffff58, 8) , (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x1b6ca1, 1)]
[(unique, 0x10002ec7, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b760a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001676, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001622, 8) , (unique, 0x10001d3d, 8) , (const, 0x4, 8), (unique, 0x10001d3d, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001676, 8) , (unique, 0x1000167e, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001676, 8) , (unique, 0x1000167e, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (unique, 0x3400, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000019e, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x18, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffff, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000387f, 8), (unique, 0x1000387f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000387b, 4), (unique, 0x1000387b, 4) CAST (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffffff, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x100012b0, 8) INT_AND (stack, 0xffffffffffffff38, 8) , (const, 0xffffffff00000000, 8)]
[ ---  CBRANCH (ram, 0x1b6cf1, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003887, 8), (unique, 0x10003887, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8), (register, 0x8, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b6cd1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff38, 8) INT_OR (unique, 0x100012b0, 8) , (unique, 0x1000171b, 8), (unique, 0x1000171b, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b72fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000388f, 8), (unique, 0x1000388f, 8) INT_ADD (stack, 0xffffffffffffff30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (unique, 0x1000019e, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x10002f9f, 8) COPY (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x1b7303, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff78, 8) , (const, 0x0, 8)]
[(unique, 0x10002fa7, 8) COPY (unique, 0x10001622, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10002f9f, 8) , (unique, 0x10002fa7, 8)]
[(unique, 0xbe00, 8) CAST (unique, 0x1000389f, 8), (unique, 0x1000389f, 8) INT_ADD (unique, 0x10003897, 8) , (const, 0x1, 8), (unique, 0x10003897, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x1b6f6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff78, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6f6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[(unique, 0x10003117, 8) COPY (stack, 0xffffffffffffff78, 8)]
[(unique, 0x100031f3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x10003117, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x392, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x392, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x392, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x392, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x392, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10002dc7, 8) COPY (stack, 0xffffffffffffff78, 8), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x392, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (unique, 0x100031f3, 8) , (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x1b71fa, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100038a7, 4) , (const, 0x0, 4), (unique, 0x100038a7, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100038b7, 8), (unique, 0x100038b7, 8) INT_ADD (unique, 0x100038af, 8) , (unique, 0x3300, 8), (unique, 0x100038af, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100038ab, 4), (unique, 0x100038ab, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0x1000169b, 8) INT_SEXT (unique, 0x100038c3, 4), (unique, 0x100038c3, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10001693, 8) PTRADD (unique, 0x100016a4, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100016a4, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b7262, 1) , (unique, 0x100016a3, 1), (unique, 0x100016a3, 1) INT_SLESS (unique, 0x100038bf, 4) , (const, 0x0, 4), (unique, 0x100038bf, 4) CAST (unique, 0x1000168f, 4), (unique, 0x1000168f, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x1000169b, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b7293, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000169b, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b72c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016a4, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002c0f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b728a, 1)]
[ ---  CBRANCH (ram, 0x1b7280, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c0f, 8) , (unique, 0x10002c17, 8)]
[(unique, 0x10002c17, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b72c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001693, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10001bb5, 8) , (const, 0x4, 8), (unique, 0x10001bb5, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b72c3, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x100038c7, 4), (unique, 0x100038c7, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (unique, 0x10001bed, 8) , (const, 0x4, 8), (unique, 0x10001bed, 8) INT_ADD (unique, 0x1000169b, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016a4, 8) , (unique, 0x10001bd5, 8) , (const, 0x4, 8), (unique, 0x10001bd5, 8) INT_ADD (unique, 0x1000169b, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x10001693, 8) , (unique, 0x10001c2d, 8) , (const, 0x4, 8), (unique, 0x10001c2d, 8) INT_MULT (unique, 0x1000169b, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7206, 1)]
[ ---  CBRANCH (ram, 0x1b72cc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100038cb, 4) , (unique, 0xbc80, 4), (unique, 0x100038cb, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016a4, 8) , (unique, 0x10001c0d, 8) , (const, 0x4, 8), (unique, 0x10001c0d, 8) INT_ADD (unique, 0x10001c05, 8) , (const, 0x1, 8), (unique, 0x10001c05, 8) INT_MULT (unique, 0x1000169b, 8) , (const, 0x2, 8)]
[(register, 0x0, 8) PTRADD (unique, 0x10001693, 8) , (unique, 0x10001c1d, 8) , (const, 0x4, 8), (unique, 0x10001c1d, 8) INT_MULT (unique, 0x1000169b, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7206, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100038d7, 8), (unique, 0x100038d7, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100038d3, 4), (unique, 0x100038d3, 4) CAST (register, 0x10, 4), (register, 0x0, 8) INT_SEXT (unique, 0x100038cf, 4), (unique, 0x100038cf, 4) CAST (register, 0x0, 4), (register, 0x10, 4) INT_2COMP (unique, 0x1000168f, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10002dd7, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (unique, 0x1000169b, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b6d44, 1)]
[ ---  CBRANCH (ram, 0x1b72ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000169b, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016a4, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002c1f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b723a, 1)]
[ ---  CBRANCH (ram, 0x1b7230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000169b, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c1f, 8) , (unique, 0x10002c27, 8)]
[(unique, 0x10002dcf, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b6d44, 1)]
[(unique, 0x10002c27, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001693, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10001b6d, 8) , (const, 0x4, 8), (unique, 0x10001b6d, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001693, 8) , (unique, 0x1000169b, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10001693, 8) , (unique, 0x1000169b, 8) , (const, 0x4, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10002dc7, 8) , (unique, 0x10002dcf, 8) , (unique, 0x10002dd7, 8) , (unique, 0x10002dc7, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x1000168f, 4) , (unique, 0xbc80, 4) , (unique, 0x1000168f, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100038e3, 8), (unique, 0x100038e3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100038df, 4), (unique, 0x100038df, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x1000168f, 4) , (unique, 0xbc80, 4) , (unique, 0x1000168f, 4)]
[ ---  CBRANCH (ram, 0x1b6d75, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x3100, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100038eb, 8), (unique, 0x100038eb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x3100, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b6d60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x98, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100030e7, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1b6df9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(unique, 0x10003017, 8) COPY (register, 0x18, 8)]
[(unique, 0x10003163, 8) COPY (register, 0xb8, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10003017, 8) , (unique, 0x1000301f, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (unique, 0x10003163, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x415, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x415, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x415, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x415, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x415, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x415, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1b70f6, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100038f3, 4) , (const, 0x0, 4), (unique, 0x100038f3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10003903, 8), (unique, 0x10003903, 8) INT_ADD (unique, 0x100038fb, 8) , (unique, 0x3300, 8), (unique, 0x100038fb, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100038f7, 4), (unique, 0x100038f7, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100016b8, 8) INT_SEXT (unique, 0x1000390f, 4), (unique, 0x1000390f, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100016b0, 8) PTRADD (unique, 0x100016c1, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100016c1, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b7162, 1) , (unique, 0x100016c0, 1), (unique, 0x100016c0, 1) INT_SLESS (unique, 0x1000390b, 4) , (const, 0x0, 4), (unique, 0x1000390b, 4) CAST (unique, 0x100016ac, 4), (unique, 0x100016ac, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100016b8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b7193, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100016b8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b71c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016c1, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002d77, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b718a, 1)]
[ ---  CBRANCH (ram, 0x1b7180, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002d77, 8) , (unique, 0x10002d7f, 8)]
[(unique, 0x10002d7f, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b71c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016b0, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10001ac5, 8) , (const, 0x4, 8), (unique, 0x10001ac5, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b71c0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10003913, 4), (unique, 0x10003913, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100016b8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016c1, 8) , (unique, 0x10001ae5, 8) , (const, 0x4, 8), (unique, 0x10001ae5, 8) INT_ADD (unique, 0x100016b8, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100016b0, 8) , (unique, 0x10001b2d, 8) , (const, 0x4, 8), (unique, 0x10001b2d, 8) INT_MULT (unique, 0x100016b8, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7102, 1)]
[ ---  CBRANCH (ram, 0x1b71c9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10003917, 4) , (unique, 0xbc80, 4), (unique, 0x10003917, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016c1, 8) , (unique, 0x10001b0d, 8) , (const, 0x4, 8), (unique, 0x10001b0d, 8) INT_ADD (unique, 0x10001b05, 8) , (const, 0x1, 8), (unique, 0x10001b05, 8) INT_MULT (unique, 0x100016b8, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100016b0, 8) , (unique, 0x10001b1d, 8) , (const, 0x4, 8), (unique, 0x10001b1d, 8) INT_MULT (unique, 0x100016b8, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7102, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100016b8, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003923, 8), (unique, 0x10003923, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000391f, 4), (unique, 0x1000391f, 4) CAST (register, 0x30, 4), (register, 0x0, 8) INT_SEXT (unique, 0x1000391b, 4), (unique, 0x1000391b, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100016ac, 4), (register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b6db4, 1)]
[ ---  CBRANCH (ram, 0x1b71e6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100016b8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016c1, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002e8f, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b713a, 1)]
[ ---  CBRANCH (ram, 0x1b7130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100016b8, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002e8f, 8) , (unique, 0x10002e97, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b6db4, 1)]
[(unique, 0x10002e97, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b7150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016b0, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa8, 8) , (unique, 0x10001a7d, 8) , (const, 0x4, 8), (unique, 0x10001a7d, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016b0, 8) , (unique, 0x100016b8, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016b0, 8) , (unique, 0x100016b8, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100016ac, 4) , (unique, 0xbc80, 4) , (unique, 0x100016ac, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000392f, 8), (unique, 0x1000392f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000392b, 4), (unique, 0x1000392b, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100016ac, 4) , (unique, 0xbc80, 4) , (unique, 0x100016ac, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b6de5, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x3100, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003937, 8), (unique, 0x10003937, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x3100, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b6dd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x98, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000301f, 8) COPY (register, 0xa8, 8)]
[(unique, 0x100030ef, 8) COPY (stack, 0xffffffffffffff40, 8)]
[ ---  CBRANCH (ram, 0x1b6d98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (stack, 0xffffffffffffffb8, 8), (register, 0x18, 8) CAST (unique, 0x10003947, 8), (unique, 0x10003947, 8) INT_ADD (unique, 0x1000393f, 8) , (const, 0x1, 8), (unique, 0x1000393f, 8) CAST (register, 0x18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100030e7, 8) , (unique, 0x100030ef, 8)]
[(stack, 0xffffffffffffff88, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff8c, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x4, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x1b71f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x10003957, 8), (unique, 0x10003957, 8) INT_OR (unique, 0x100012ed, 8) , (unique, 0x100012f5, 8), (unique, 0x100012f5, 8) INT_ZEXT (unique, 0xbd00, 4), (unique, 0x100012ed, 8) INT_AND (unique, 0x1000394f, 8) , (const, 0xffffffff00000000, 8), (unique, 0x1000394f, 8) CAST (stack, 0xffffffffffffff88, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffff88, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1b6f61, 1)]
[ ---  CBRANCH (ram, 0x1b6f56, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (stack, 0xffffffffffffff88, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffa8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b7691, 1) , (unique, 0x10000f3c, 1), (unique, 0x10000f3c, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100018f5, 8) , (const, 0x4, 8), (unique, 0x100018f5, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x5, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) CAST (unique, 0x10003967, 8), (unique, 0x10003967, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000395f, 8), (unique, 0x1000395f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0x3680, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100018dd, 8) , (const, 0x4, 8), (unique, 0x100018dd, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8), (register, 0x98, 8) INT_SEXT (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x1b7691, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0xa, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10001e1d, 8) , (const, 0x4, 8), (unique, 0x10001e1d, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b7693, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002d87, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x10000232, 4), (unique, 0x10000232, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b6e7d, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x10000232, 4), (unique, 0x10000232, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[(unique, 0x10002d8f, 8) COPY (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b6eba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002d87, 8) , (unique, 0x10002d8f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(register, 0x8, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b6eba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10001915, 8) , (const, 0x4, 8), (unique, 0x10001915, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x2, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000396f, 8), (unique, 0x1000396f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b6eba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000192d, 8) , (const, 0x4, 8), (unique, 0x1000192d, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x3, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003977, 8), (unique, 0x10003977, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x3, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3680, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10000f93, 4), (unique, 0x3400, 8) CAST (unique, 0x1000398f, 8), (unique, 0x1000398f, 8) INT_ADD (unique, 0x10003987, 8) , (unique, 0x1000193d, 8), (unique, 0x10003987, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000193d, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x10000f93, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000397f, 8), (unique, 0x1000397f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fbb, 8) , (unique, 0x10000f97, 4), (unique, 0x10000fbb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000398f, 8), (unique, 0x1000398f, 8) INT_ADD (unique, 0x10003987, 8) , (unique, 0x1000193d, 8), (unique, 0x10003987, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000193d, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x10000f97, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000f9b, 8), (unique, 0x10000f9b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000397f, 8), (unique, 0x1000397f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fc3, 8) , (unique, 0x10000fa3, 4), (unique, 0x10000fc3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000398f, 8), (unique, 0x1000398f, 8) INT_ADD (unique, 0x10003987, 8) , (unique, 0x1000193d, 8), (unique, 0x10003987, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000193d, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x10000fa3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000fa7, 8), (unique, 0x10000fa7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000397f, 8), (unique, 0x1000397f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000fcb, 8) , (unique, 0x10000faf, 4), (unique, 0x10000fcb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000398f, 8), (unique, 0x1000398f, 8) INT_ADD (unique, 0x10003987, 8) , (unique, 0x1000193d, 8), (unique, 0x10003987, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000193d, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x10000faf, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000fb3, 8), (unique, 0x10000fb3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000397f, 8), (unique, 0x1000397f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b6eef, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x1b6f56, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x28700, 8) , (const, 0x0, 8), (unique, 0x28700, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003997, 8), (unique, 0x10003997, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1b6f56, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000399f, 8), (unique, 0x1000399f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x98, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b6f56, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100039a7, 8), (unique, 0x100039a7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x98, 8), (register, 0x30, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x100039b3, 8), (unique, 0x100039b3, 8) INT_ADD (unique, 0x10002bbf, 8) , (const, 0x1, 4), (unique, 0x10002bbf, 8) INT_LEFT (unique, 0x10002bb7, 8) , (const, 0x20, 8), (unique, 0x10002bb7, 8) INT_SEXT (unique, 0x100039af, 4), (unique, 0x100039af, 4) CAST (stack, 0xffffffffffffff8c, 4)]
[(unique, 0x1000324b, 8) COPY (unique, 0x3400, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000324b, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x1b6d2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) CAST (unique, 0x100039c3, 8), (unique, 0x100039c3, 8) INT_ADD (unique, 0x100039bb, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100039bb, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff88, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff8c, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x4, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x1b7685, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff50, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x100039d3, 8), (unique, 0x100039d3, 8) INT_OR (unique, 0x1000131d, 8) , (unique, 0x10001325, 8), (unique, 0x10001325, 8) INT_ZEXT (unique, 0xbd00, 4), (unique, 0x1000131d, 8) INT_AND (unique, 0x100039cb, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100039cb, 8) CAST (stack, 0xffffffffffffff88, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffff88, 4) , (const, 0x1, 4)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b7308, 1)]
[ ---  CBRANCH (ram, 0x1b70e3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (stack, 0xffffffffffffffa8, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff50, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (stack, 0xffffffffffffff88, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffa8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b934c, 1) , (unique, 0x10000f4c, 1), (unique, 0x10000f4c, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100019b5, 8) , (const, 0x4, 8), (unique, 0x100019b5, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x5, 8), (unique, 0x3400, 8) CAST (unique, 0x100039e3, 8), (unique, 0x100039e3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3480, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100039db, 8), (unique, 0x100039db, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10001995, 8) , (const, 0x4, 8), (unique, 0x10001995, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (stack, 0xffffffffffffff38, 4), (stack, 0xffffffffffffff38, 4) SUBPIECE (stack, 0xffffffffffffff38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b934c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xffffffffffffff50, 8) , (const, 0xa, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10002b65, 8) , (const, 0x4, 8), (unique, 0x10002b65, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b934e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff50, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x100039ef, 8), (unique, 0x100039ef, 8) INT_ADD (unique, 0x10002bef, 8) , (const, 0x1, 4), (unique, 0x10002bef, 8) INT_LEFT (unique, 0x10002be7, 8) , (const, 0x20, 8), (unique, 0x10002be7, 8) INT_SEXT (unique, 0x100039eb, 4), (unique, 0x100039eb, 4) CAST (stack, 0xffffffffffffff8c, 4)]
[(unique, 0x1000325b, 8) COPY (unique, 0x3a00, 8)]
[ ---  BRANCH (ram, 0x1b7308, 1)]
[(unique, 0x10002f5f, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x3, 4), (register, 0x80, 4) INT_2COMP (unique, 0x100002c0, 4), (unique, 0x100002c0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7006, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (stack, 0xffffffffffffff50, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x3, 4), (register, 0x80, 4) INT_2COMP (unique, 0x100002c0, 4), (unique, 0x100002c0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[(unique, 0x10002f67, 8) COPY (stack, 0xffffffffffffff50, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7042, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10002f5f, 8) , (unique, 0x10002f67, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100039f7, 8), (unique, 0x100039f7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b937f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1b7042, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100019dd, 8) , (const, 0x4, 8), (unique, 0x100019dd, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x2, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100039ff, 8), (unique, 0x100039ff, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000178d, 8) , (unique, 0x100019cd, 8) , (const, 0x1, 8), (unique, 0x100019cd, 8) INT_ADD (unique, 0x3580, 8) , (unique, 0xbd80, 8), (unique, 0x1000178d, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8)]
[ ---  CBRANCH (ram, 0x1b9375, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x3, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b7042, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100019f5, 8) , (const, 0x4, 8), (unique, 0x100019f5, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x3, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003a07, 8), (unique, 0x10003a07, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3580, 8), (unique, 0x3880, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3480, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[(unique, 0x3300, 8) INT_MULT (unique, 0x3a00, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x80, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x4, 8), (register, 0xb8, 8) INT_SUB (stack, 0xffffffffffffff50, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10000fd3, 4), (unique, 0x3400, 8) CAST (unique, 0x10003a1f, 8), (unique, 0x10003a1f, 8) INT_ADD (unique, 0x10003a17, 8) , (unique, 0x10001a05, 8), (unique, 0x10003a17, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001a05, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x10000fd3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a0f, 8), (unique, 0x10003a0f, 8) INT_ADD (register, 0x88, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ffb, 8) , (unique, 0x10000fd7, 4), (unique, 0x10000ffb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a1f, 8), (unique, 0x10003a1f, 8) INT_ADD (unique, 0x10003a17, 8) , (unique, 0x10001a05, 8), (unique, 0x10003a17, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001a05, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x10000fd7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000fdb, 8), (unique, 0x10000fdb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a0f, 8), (unique, 0x10003a0f, 8) INT_ADD (register, 0x88, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001003, 8) , (unique, 0x10000fe3, 4), (unique, 0x10001003, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a1f, 8), (unique, 0x10003a1f, 8) INT_ADD (unique, 0x10003a17, 8) , (unique, 0x10001a05, 8), (unique, 0x10003a17, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001a05, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x10000fe3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000fe7, 8), (unique, 0x10000fe7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a0f, 8), (unique, 0x10003a0f, 8) INT_ADD (register, 0x88, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000100b, 8) , (unique, 0x10000fef, 4), (unique, 0x1000100b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a1f, 8), (unique, 0x10003a1f, 8) INT_ADD (unique, 0x10003a17, 8) , (unique, 0x10001a05, 8), (unique, 0x10003a17, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001a05, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x10000fef, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000ff3, 8), (unique, 0x10000ff3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a0f, 8), (unique, 0x10003a0f, 8) INT_ADD (register, 0x88, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b707c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (register, 0x18, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x1b70e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x28700, 8) , (const, 0x0, 8), (unique, 0x28700, 8) INT_SUB (unique, 0x3680, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a27, 8), (unique, 0x10003a27, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b70e3, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (stack, 0xffffffffffffff50, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a2f, 8), (unique, 0x10003a2f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b70e3, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (stack, 0xffffffffffffff50, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a37, 8), (unique, 0x10003a37, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x8, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x10003a43, 8), (unique, 0x10003a43, 8) INT_ADD (unique, 0x10002bcf, 8) , (const, 0x1, 4), (unique, 0x10002bcf, 8) INT_LEFT (unique, 0x10002bc7, 8) , (const, 0x20, 8), (unique, 0x10002bc7, 8) INT_SEXT (unique, 0x10003a3f, 4), (unique, 0x10003a3f, 4) CAST (stack, 0xffffffffffffff8c, 4)]
[(unique, 0x10003253, 8) COPY (unique, 0x3a00, 8)]
[ ---  BRANCH (ram, 0x1b7308, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10003253, 8) , (unique, 0x1000325b, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x1000333b, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x100032bb, 8) COPY (unique, 0x10001662, 8)]
[ ---  CBRANCH (ram, 0x1b756f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100015d2, 8) , (const, 0x0, 8)]
[(unique, 0x100032c3, 8) COPY (unique, 0x10001662, 8)]
[ ---  CBRANCH (ram, 0x1b756f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100015da, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0x100015d2, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100015d2, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (unique, 0x100015c9, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (unique, 0x100015ea, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (unique, 0x100015f2, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (unique, 0x100015fa, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (unique, 0x10001602, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000160a, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0x10001612, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000161a, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x1000162a, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x1000163a, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10001642, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x1000164a, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10001652, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x937, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x1000165a, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x937, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100015e2, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x937, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10001662, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x937, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100015da, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x937, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000166a, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x100030f7, 8) COPY (stack, 0xffffffffffffff78, 8), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x937, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x1b77cb, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10003a4b, 4) , (const, 0x0, 4), (unique, 0x10003a4b, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8) , (stack, 0xffffffffffffffc0, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000166a, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10003a5b, 8), (unique, 0x10003a5b, 8) INT_ADD (unique, 0x10003a53, 8) , (unique, 0x3300, 8), (unique, 0x10003a53, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003a4f, 4), (unique, 0x10003a4f, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8) , (unique, 0x3400, 8)]
[(unique, 0x100016d5, 8) INT_SEXT (unique, 0x10003a67, 4), (unique, 0x10003a67, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100016cd, 8) PTRADD (unique, 0x100016de, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100016de, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b7832, 1) , (unique, 0x100016dd, 1), (unique, 0x100016dd, 1) INT_SLESS (unique, 0x10003a63, 4) , (const, 0x0, 4), (unique, 0x10003a63, 4) CAST (unique, 0x100016c9, 4), (unique, 0x100016c9, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100016d5, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b785c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100016d5, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b788d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016de, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002c3f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b7853, 1)]
[ ---  CBRANCH (ram, 0x1b7849, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c3f, 8) , (unique, 0x10002c47, 8)]
[(unique, 0x10002c47, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b788d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016cd, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa0, 8) , (unique, 0x10001f95, 8) , (const, 0x4, 8), (unique, 0x10001f95, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b788d, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10003a6b, 4), (unique, 0x10003a6b, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (unique, 0x10001fcd, 8) , (const, 0x4, 8), (unique, 0x10001fcd, 8) INT_ADD (unique, 0x100016d5, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016de, 8) , (unique, 0x10001fb5, 8) , (const, 0x4, 8), (unique, 0x10001fb5, 8) INT_ADD (unique, 0x100016d5, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100016cd, 8) , (unique, 0x1000200d, 8) , (const, 0x4, 8), (unique, 0x1000200d, 8) INT_MULT (unique, 0x100016d5, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b77d7, 1)]
[ ---  CBRANCH (ram, 0x1b7896, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10003a6f, 4) , (unique, 0xbc80, 4), (unique, 0x10003a6f, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016de, 8) , (unique, 0x10001fed, 8) , (const, 0x4, 8), (unique, 0x10001fed, 8) INT_ADD (unique, 0x10001fe5, 8) , (const, 0x1, 8), (unique, 0x10001fe5, 8) INT_MULT (unique, 0x100016d5, 8) , (const, 0x2, 8)]
[(register, 0x0, 8) PTRADD (unique, 0x100016cd, 8) , (unique, 0x10001ffd, 8) , (const, 0x4, 8), (unique, 0x10001ffd, 8) INT_MULT (unique, 0x100016d5, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b77d7, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a7b, 8), (unique, 0x10003a7b, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10003a77, 4), (unique, 0x10003a77, 4) CAST (register, 0x10, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10003a73, 4), (unique, 0x10003a73, 4) CAST (register, 0x0, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100016c9, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10003107, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (unique, 0x100016d5, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b7354, 1)]
[ ---  CBRANCH (ram, 0x1b78b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100016d5, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016de, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10002c4f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b780a, 1)]
[ ---  CBRANCH (ram, 0x1b7800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100016d5, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c4f, 8) , (unique, 0x10002c57, 8)]
[(unique, 0x100030ff, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffff78, 8) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b7354, 1)]
[(unique, 0x10002c57, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016cd, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa0, 8) , (unique, 0x10001f4d, 8) , (const, 0x4, 8), (unique, 0x10001f4d, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016cd, 8) , (unique, 0x100016d5, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016cd, 8) , (unique, 0x100016d5, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100030f7, 8) , (unique, 0x100030ff, 8) , (unique, 0x10003107, 8) , (unique, 0x100030f7, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x100016c9, 4) , (unique, 0xbc80, 4) , (unique, 0x100016c9, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a87, 8), (unique, 0x10003a87, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (unique, 0x10003a83, 4), (unique, 0x10003a83, 4) CAST (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x100016c9, 4) , (unique, 0xbc80, 4) , (unique, 0x100016c9, 4)]
[ ---  CBRANCH (ram, 0x1b737e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003a8f, 8), (unique, 0x10003a8f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b736b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10002fef, 8) COPY (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1b73f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x1, 8)]
[(unique, 0x1000311f, 8) COPY (register, 0xb8, 8)]
[(unique, 0x100031b3, 8) COPY (register, 0xa0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000311f, 8) , (unique, 0x10003127, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x100031b3, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x9b7, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1b76d3, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10003a97, 4) , (const, 0x0, 4), (unique, 0x10003a97, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x12da30, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10003aa7, 8), (unique, 0x10003aa7, 8) INT_ADD (unique, 0x10003a9f, 8) , (unique, 0x3300, 8), (unique, 0x10003a9f, 8) CAST (stack, 0xffffffffffffff98, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003a9b, 4), (unique, 0x10003a9b, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(unique, 0x100016f2, 8) INT_SEXT (unique, 0x10003ab3, 4), (unique, 0x10003ab3, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100016ea, 8) PTRADD (unique, 0x100016fb, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100016fb, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b7737, 1) , (unique, 0x100016fa, 1), (unique, 0x100016fa, 1) INT_SLESS (unique, 0x10003aaf, 4) , (const, 0x0, 4), (unique, 0x10003aaf, 4) CAST (unique, 0x100016e6, 4), (unique, 0x100016e6, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x100016f2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b7764, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100016f2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b778f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016fb, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002d97, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b775b, 1)]
[ ---  CBRANCH (ram, 0x1b7750, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002d97, 8) , (unique, 0x10002d9f, 8)]
[(unique, 0x10002d9f, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b778f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016ea, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10001ea5, 8) , (const, 0x4, 8), (unique, 0x10001ea5, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b778f, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10003ab7, 4), (unique, 0x10003ab7, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x100016f2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016fb, 8) , (unique, 0x10001ec5, 8) , (const, 0x4, 8), (unique, 0x10001ec5, 8) INT_ADD (unique, 0x100016f2, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100016ea, 8) , (unique, 0x10001f0d, 8) , (const, 0x4, 8), (unique, 0x10001f0d, 8) INT_MULT (unique, 0x100016f2, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b76df, 1)]
[ ---  CBRANCH (ram, 0x1b7798, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10003abb, 4) , (unique, 0xbc80, 4), (unique, 0x10003abb, 4) CAST (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100016fb, 8) , (unique, 0x10001eed, 8) , (const, 0x4, 8), (unique, 0x10001eed, 8) INT_ADD (unique, 0x10001ee5, 8) , (const, 0x1, 8), (unique, 0x10001ee5, 8) INT_MULT (unique, 0x100016f2, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0x100016ea, 8) , (unique, 0x10001efd, 8) , (const, 0x4, 8), (unique, 0x10001efd, 8) INT_MULT (unique, 0x100016f2, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b76df, 1)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (unique, 0x100016f2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ac7, 8), (unique, 0x10003ac7, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10003ac3, 4), (unique, 0x10003ac3, 4) CAST (register, 0x90, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10003abf, 4), (unique, 0x10003abf, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100016e6, 4), (register, 0x90, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b73b2, 1)]
[ ---  CBRANCH (ram, 0x1b77b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100016f2, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b7725, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100016fb, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10002da7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b7712, 1)]
[ ---  CBRANCH (ram, 0x1b7708, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100016f2, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002da7, 8) , (unique, 0x10002daf, 8)]
[(unique, 0x3b80, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x1b73b2, 1)]
[(unique, 0x10002daf, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b7725, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016ea, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x10001e5d, 8) , (const, 0x4, 8), (unique, 0x10001e5d, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016ea, 8) , (unique, 0x100016f2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100016ea, 8) , (unique, 0x100016f2, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100016e6, 4) , (unique, 0xbc80, 4) , (unique, 0x100016e6, 4) , (register, 0x0, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ad3, 8), (unique, 0x10003ad3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10003acf, 4), (unique, 0x10003acf, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffff, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100016e6, 4) , (unique, 0xbc80, 4) , (unique, 0x100016e6, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b73e2, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xffffffffffffff68, 4)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003adb, 8), (unique, 0x10003adb, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b73d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10002ff7, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10003127, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1b7397, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (stack, 0xffffffffffffffb8, 8), (register, 0xa0, 8) CAST (unique, 0x10003aeb, 8), (unique, 0x10003aeb, 8) INT_ADD (unique, 0x10003ae3, 8) , (const, 0x1, 8), (unique, 0x10003ae3, 8) CAST (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (stack, 0xffffffffffffff40, 8) , (stack, 0xffffffffffffff40, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10002fef, 8) , (unique, 0x10002ff7, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(stack, 0xffffffffffffff88, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff8c, 4) SUBPIECE (stack, 0xffffffffffffff88, 8) , (const, 0x4, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x1b77c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x10003afb, 8), (unique, 0x10003afb, 8) INT_OR (unique, 0x10001336, 8) , (unique, 0x1000133e, 8), (unique, 0x1000133e, 8) INT_ZEXT (unique, 0xbd00, 4), (unique, 0x10001336, 8) INT_AND (unique, 0x10003af3, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10003af3, 8) CAST (stack, 0xffffffffffffff88, 8), (unique, 0xbd00, 4) INT_ADD (stack, 0xffffffffffffff88, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1b7564, 1)]
[ ---  CBRANCH (ram, 0x1b7559, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (stack, 0xffffffffffffff88, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffa8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b8290, 1) , (unique, 0x10000f88, 1), (unique, 0x10000f88, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10001c7d, 8) , (const, 0x4, 8), (unique, 0x10001c7d, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x5, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b0b, 8), (unique, 0x10003b0b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003b03, 8), (unique, 0x10003b03, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10001c65, 8) , (const, 0x4, 8), (unique, 0x10001c65, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1b8290, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0xa, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x100024e5, 8) , (const, 0x4, 8), (unique, 0x100024e5, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b8292, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002f4f, 8) COPY (register, 0x80, 8), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x3, 4), (register, 0x80, 4) INT_2COMP (unique, 0x10000408, 4), (unique, 0x10000408, 4) INT_RIGHT (register, 0x80, 4) , (const, 0x2, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b7483, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x3, 4), (register, 0x80, 4) INT_2COMP (unique, 0x10000408, 4), (unique, 0x10000408, 4) INT_RIGHT (register, 0x80, 4) , (const, 0x2, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[(unique, 0x10002f57, 8) COPY (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b74bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10002f4f, 8) , (unique, 0x10002f57, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[(register, 0x8, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b74bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10001c9d, 8) , (const, 0x4, 8), (unique, 0x10001c9d, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x2, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003b13, 8), (unique, 0x10003b13, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b74bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10001cb5, 8) , (const, 0x4, 8), (unique, 0x10001cb5, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x3, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003b1b, 8), (unique, 0x10003b1b, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x3, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0xbd80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0xb8, 8) , (const, 0x4, 8), (register, 0xb8, 8) INT_SUB (register, 0x0, 8) , (register, 0x80, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3100, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001013, 4), (unique, 0x3400, 8) CAST (unique, 0x10003b33, 8), (unique, 0x10003b33, 8) INT_ADD (unique, 0x10003b2b, 8) , (unique, 0x10001cc5, 8), (unique, 0x10003b2b, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001cc5, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8), (unique, 0x10001013, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b23, 8), (unique, 0x10003b23, 8) INT_ADD (register, 0x98, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000103b, 8) , (unique, 0x10001017, 4), (unique, 0x1000103b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b33, 8), (unique, 0x10003b33, 8) INT_ADD (unique, 0x10003b2b, 8) , (unique, 0x10001cc5, 8), (unique, 0x10003b2b, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001cc5, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8), (unique, 0x10001017, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000101b, 8), (unique, 0x1000101b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b23, 8), (unique, 0x10003b23, 8) INT_ADD (register, 0x98, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001043, 8) , (unique, 0x10001023, 4), (unique, 0x10001043, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b33, 8), (unique, 0x10003b33, 8) INT_ADD (unique, 0x10003b2b, 8) , (unique, 0x10001cc5, 8), (unique, 0x10003b2b, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001cc5, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8), (unique, 0x10001023, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001027, 8), (unique, 0x10001027, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b23, 8), (unique, 0x10003b23, 8) INT_ADD (register, 0x98, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000104b, 8) , (unique, 0x1000102f, 4), (unique, 0x1000104b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b33, 8), (unique, 0x10003b33, 8) INT_ADD (unique, 0x10003b2b, 8) , (unique, 0x10001cc5, 8), (unique, 0x10003b2b, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10001cc5, 8) INT_ADD (register, 0x80, 8) , (unique, 0x3300, 8), (unique, 0x1000102f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001033, 8), (unique, 0x10001033, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b23, 8), (unique, 0x10003b23, 8) INT_ADD (register, 0x98, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x10, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1b74f3, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x90, 8) , (register, 0x38, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x1, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x1b7559, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3680, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b3b, 8), (unique, 0x10003b3b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b7559, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b43, 8), (unique, 0x10003b43, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b7559, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b4b, 8), (unique, 0x10003b4b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x10, 8), (register, 0x30, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff88, 8) CAST (unique, 0x10003b57, 8), (unique, 0x10003b57, 8) INT_ADD (unique, 0x10002bdf, 8) , (const, 0x1, 4), (unique, 0x10002bdf, 8) INT_LEFT (unique, 0x10002bd7, 8) , (const, 0x20, 8), (unique, 0x10002bd7, 8) INT_SEXT (unique, 0x10003b53, 4), (unique, 0x10003b53, 4) CAST (stack, 0xffffffffffffff8c, 4)]
[(unique, 0x10003263, 8) COPY (unique, 0x3400, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10003263, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100032cb, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x1b7339, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) CAST (unique, 0x10003b67, 8), (unique, 0x10003b67, 8) INT_ADD (unique, 0x10003b5f, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x10003b5f, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000166a, 8) , (unique, 0x1000166a, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x100014c9, 8) , (unique, 0x100015a4, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100015da, 8) , (unique, 0x100015da, 8) , (unique, 0xbe00, 8) , (unique, 0x10001439, 8) , (unique, 0x1000159c, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100032bb, 8) , (unique, 0x100032c3, 8) , (unique, 0x100032cb, 8) , (unique, 0x100033bb, 8) , (unique, 0x10001594, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10001652, 8) , (unique, 0x10001652, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x100014b1, 8) , (unique, 0x1000157c, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x1000164a, 8) , (unique, 0x1000164a, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0x100014a9, 8) , (unique, 0x10001574, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10001642, 8) , (unique, 0x10001642, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0x100014a1, 8) , (unique, 0x10001713, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (unique, 0x1000163a, 8) , (unique, 0x1000163a, 8) , (stack, 0xffffffffffffff80, 8) , (unique, 0x10001499, 8) , (unique, 0x1000156c, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (unique, 0x10001632, 8) , (unique, 0x10001632, 8) , (stack, 0xffffffffffffff78, 8) , (unique, 0x10001491, 8) , (unique, 0x10001564, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x1000162a, 8) , (unique, 0x1000162a, 8) , (stack, 0xffffffffffffff70, 8) , (unique, 0x10001481, 8) , (unique, 0x1000155c, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000161a, 8) , (unique, 0x1000161a, 8) , (stack, 0xffffffffffffff68, 8) , (unique, 0x10001479, 8) , (unique, 0x10001554, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0x10001612, 8) , (unique, 0x10001612, 8) , (stack, 0xffffffffffffff60, 8) , (unique, 0x10001471, 8) , (unique, 0x1000154c, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x1000160a, 8) , (unique, 0x1000160a, 8) , (stack, 0xffffffffffffff58, 8) , (unique, 0x10001469, 8) , (unique, 0x10001544, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (unique, 0x10001602, 8) , (unique, 0x10001602, 8) , (stack, 0xffffffffffffff50, 8) , (unique, 0x10001428, 8) , (unique, 0x1000153c, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (unique, 0x100015fa, 8) , (unique, 0x100015fa, 8) , (stack, 0xffffffffffffff48, 8) , (unique, 0x10001461, 8) , (unique, 0x10001534, 8)]
[(stack, 0xffffffffffffff40, 8) MULTIEQUAL (unique, 0x100015f2, 8) , (unique, 0x100015f2, 8) , (stack, 0xffffffffffffff40, 8) , (unique, 0x10001459, 8) , (unique, 0x1000152c, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (unique, 0x100015ea, 8) , (unique, 0x100015ea, 8) , (stack, 0xffffffffffffff38, 8) , (unique, 0x10001451, 8) , (unique, 0x10001524, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (unique, 0x100015c9, 8) , (unique, 0x100015c9, 8) , (stack, 0xffffffffffffff30, 8) , (unique, 0x10001449, 8) , (unique, 0x1000151c, 8)]
[ ---  CBRANCH (ram, 0x1b78c6, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x1000165a, 8) , (unique, 0x1000165a, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x100014b9, 8) , (unique, 0x10001584, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100015e2, 8) , (unique, 0x100015e2, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x10001441, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10000580, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffa8, 8) , (const, 0x4, 8), (unique, 0x10000580, 4) INT_ZEXT (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x10, 8) , (stack, 0xffffffffffffff80, 8), (register, 0x10, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1b758b, 1)]
[(unique, 0x10003173, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b82e7, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffff80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (stack, 0xffffffffffffff68, 8) , (const, 0x1, 8)]
[(unique, 0x10002cef, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b82fd, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x0, 8)]
[(unique, 0x10002cf7, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8306, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (stack, 0xffffffffffffff48, 8) , (const, 0x1, 8)]
[(unique, 0x10002cff, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x1b82fd, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x10003b77, 8), (unique, 0x10003b77, 8) INT_ADD (unique, 0x10003b6f, 8) , (unique, 0x3100, 8), (unique, 0x10003b6f, 8) CAST (stack, 0xffffffffffffff88, 8)]
[(unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (register, 0xa8, 8) , (const, 0x4, 8)]
[(unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000260d, 8) , (const, 0x4, 8), (unique, 0x1000260d, 8) INT_SUB (register, 0xa8, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (stack, 0xffffffffffffff60, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (stack, 0xffffffffffffff80, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10003b7f, 8), (unique, 0x10003b7f, 8) CAST (stack, 0xffffffffffffff88, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x100031fb, 8) COPY (stack, 0xffffffffffffff78, 8), (stack, 0xffffffffffffff78, 8) COPY (const, 0x1, 8)]
[(unique, 0x10003273, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (unique, 0x10003b97, 8) , (const, 0x1, 8), (unique, 0x10003b97, 8) CAST (stack, 0xffffffffffffff78, 8), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (unique, 0x100031fb, 8) , (unique, 0x10003203, 8)]
[(unique, 0x10003383, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) COPY (unique, 0x10003283, 8), (unique, 0x10003283, 8) MULTIEQUAL (unique, 0x10003273, 8) , (unique, 0x1000327b, 8)]
[(unique, 0x10003393, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b8b70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000f69, 1) , (const, 0x0, 1), (unique, 0x10000f69, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003b8f, 8), (unique, 0x10003b8f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10003b87, 8), (unique, 0x10003b87, 8) CAST (stack, 0xffffffffffffff78, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (unique, 0x100031fb, 8) , (unique, 0x10003203, 8)]
[(register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_ADD (unique, 0x3100, 8) , (stack, 0xffffffffffffff60, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10003393, 8) , (unique, 0xbe00, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10003383, 8) , (register, 0x18, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b8f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000f74, 1) , (const, 0x0, 1), (unique, 0x10000f74, 1) INT_AND (register, 0x10, 1) , (const, 0x1, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x10002f27, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b8f89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10002f2f, 8) COPY (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10002e57, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1b8dc1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10002e5f, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1b8dc1, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x10002825, 8) , (const, 0x4, 8), (unique, 0x10002825, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10002ed7, 8) COPY (register, 0x18, 8)]
[(unique, 0x10002fff, 8) COPY (stack, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x1b8d8a, 1)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10002ed7, 8) , (unique, 0x10002edf, 8) , (unique, 0x10002ee7, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10002fff, 8) , (unique, 0x10003007, 8) , (unique, 0x1000300f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10002fff, 8) , (unique, 0x10003007, 8) , (unique, 0x1000300f, 8)]
[ ---  CBRANCH (ram, 0x1b8bdd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003b9f, 8), (unique, 0x10003b9f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10002fff, 8) , (unique, 0x10003007, 8) , (unique, 0x1000300f, 8)]
[ ---  CBRANCH (ram, 0x1b8d69, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x88, 8) INT_SEXT (register, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x30, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b91ce, 1) , (unique, 0x10000c4e, 1), (unique, 0x10000c4e, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000285d, 8) , (const, 0x4, 8), (unique, 0x1000285d, 8) INT_ADD (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003baf, 8), (unique, 0x10003baf, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003ba7, 8), (unique, 0x10003ba7, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002845, 8) , (const, 0x4, 8), (unique, 0x10002845, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b91ce, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xa, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10002ad5, 8) , (const, 0x4, 8), (unique, 0x10002ad5, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b91d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10002faf, 8) COPY (register, 0x90, 8), (register, 0x90, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_AND (register, 0x90, 4) , (const, 0x3, 4), (register, 0x90, 4) INT_2COMP (unique, 0x10000c59, 4), (unique, 0x10000c59, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b8c5a, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (register, 0x90, 8), (register, 0x90, 8) INT_ZEXT (register, 0x90, 4), (register, 0x90, 4) INT_AND (register, 0x90, 4) , (const, 0x3, 4), (register, 0x90, 4) INT_2COMP (unique, 0x10000c59, 4), (unique, 0x10000c59, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[(unique, 0x10002fb7, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b91c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10002faf, 8) , (unique, 0x10002fb7, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b8ca0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bb7, 8), (unique, 0x10003bb7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b8c97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000287d, 8) , (const, 0x4, 8), (unique, 0x1000287d, 8) INT_ADD (register, 0x30, 8) , (const, 0x2, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003bbf, 8), (unique, 0x10003bbf, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b8c97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002895, 8) , (const, 0x4, 8), (unique, 0x10002895, 8) INT_ADD (register, 0x30, 8) , (const, 0x3, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003bc7, 8), (unique, 0x10003bc7, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc, 8)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8d69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x90, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SUB (register, 0x10, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x1b8d2b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x90, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_ADD (register, 0x90, 8) , (unique, 0x3100, 8)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100011d3, 4), (unique, 0x3400, 8) CAST (unique, 0x10003bdf, 8), (unique, 0x10003bdf, 8) INT_ADD (unique, 0x10003bd7, 8) , (unique, 0x100028a5, 8), (unique, 0x10003bd7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100028a5, 8) INT_ADD (register, 0x90, 8) , (unique, 0x3300, 8), (unique, 0x100011d3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bcf, 8), (unique, 0x10003bcf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100011fb, 8) , (unique, 0x100011d7, 4), (unique, 0x100011fb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bdf, 8), (unique, 0x10003bdf, 8) INT_ADD (unique, 0x10003bd7, 8) , (unique, 0x100028a5, 8), (unique, 0x10003bd7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100028a5, 8) INT_ADD (register, 0x90, 8) , (unique, 0x3300, 8), (unique, 0x100011d7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100011db, 8), (unique, 0x100011db, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bcf, 8), (unique, 0x10003bcf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001203, 8) , (unique, 0x100011e3, 4), (unique, 0x10001203, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bdf, 8), (unique, 0x10003bdf, 8) INT_ADD (unique, 0x10003bd7, 8) , (unique, 0x100028a5, 8), (unique, 0x10003bd7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100028a5, 8) INT_ADD (register, 0x90, 8) , (unique, 0x3300, 8), (unique, 0x100011e3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100011e7, 8), (unique, 0x100011e7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bcf, 8), (unique, 0x10003bcf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000120b, 8) , (unique, 0x100011ef, 4), (unique, 0x1000120b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bdf, 8), (unique, 0x10003bdf, 8) INT_ADD (unique, 0x10003bd7, 8) , (unique, 0x100028a5, 8), (unique, 0x10003bd7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100028a5, 8) INT_ADD (register, 0x90, 8) , (unique, 0x3300, 8), (unique, 0x100011ef, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100011f3, 8), (unique, 0x100011f3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bcf, 8), (unique, 0x10003bcf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x10, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x1b8cfd, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0x30, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x1b8d69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3680, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003be7, 8), (unique, 0x10003be7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8d69, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bef, 8), (unique, 0x10003bef, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b8d69, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bf7, 8), (unique, 0x10003bf7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x88, 8), (register, 0x8, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10002ee7, 8) COPY (unique, 0x3400, 8)]
[(unique, 0x1000300f, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b8dbe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3a00, 8) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[(unique, 0x10002e67, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002edf, 8) COPY (register, 0x30, 8)]
[(unique, 0x10003007, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b8d8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3a00, 8) , (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10002e57, 8) , (unique, 0x10002e5f, 8) , (unique, 0x10002e67, 8) , (unique, 0x3400, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (register, 0xa0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 4), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xb0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b91b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003bff, 8), (unique, 0x10003bff, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8), (register, 0xa0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[(unique, 0x10002f1f, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1b8f89, 1)]
[ ---  CBRANCH (ram, 0x1b8f60, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x18, 8), (unique, 0x3880, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) INT_SEXT (register, 0xb0, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x3800, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b92b8, 1) , (unique, 0x10000d06, 1), (unique, 0x10000d06, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000293d, 8) , (const, 0x4, 8), (unique, 0x1000293d, 8) INT_ADD (register, 0x18, 8) , (const, 0x5, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c0f, 8), (unique, 0x10003c0f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c07, 8), (unique, 0x10003c07, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002925, 8) , (const, 0x4, 8), (unique, 0x10002925, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b92b8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xa, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10002b1d, 8) , (const, 0x4, 8), (unique, 0x10002b1d, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b92ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10002f8f, 8) COPY (register, 0x88, 8), (register, 0x88, 8) INT_ZEXT (register, 0x88, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x3, 4), (register, 0x88, 4) INT_2COMP (unique, 0x10000d11, 4), (unique, 0x10000d11, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b8e6e, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x10, 8) , (register, 0x88, 8), (register, 0x88, 8) INT_ZEXT (register, 0x88, 4), (register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x3, 4), (register, 0x88, 4) INT_2COMP (unique, 0x10000d11, 4), (unique, 0x10000d11, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[(unique, 0x10002f97, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b92b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10002f8f, 8) , (unique, 0x10002f97, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b8eb2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c17, 8), (unique, 0x10003c17, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b92a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1b8ea9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000295d, 8) , (const, 0x4, 8), (unique, 0x1000295d, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c1f, 8), (unique, 0x10003c1f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b929d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x3, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b8ea9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002975, 8) , (const, 0x4, 8), (unique, 0x10002975, 8) INT_ADD (register, 0x18, 8) , (const, 0x3, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c27, 8), (unique, 0x10003c27, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc, 8)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8f60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x88, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x2, 4), (register, 0x30, 8) INT_SUB (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SUB (register, 0x10, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1b8f22, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_ADD (unique, 0x3800, 8) , (register, 0x88, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x3300, 8) INT_MULT (unique, 0x3a00, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x88, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001213, 4), (unique, 0x3400, 8) CAST (unique, 0x10003c3f, 8), (unique, 0x10003c3f, 8) INT_ADD (unique, 0x10003c37, 8) , (unique, 0x10002985, 8), (unique, 0x10003c37, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002985, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8), (unique, 0x10001213, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003c2f, 8), (unique, 0x10003c2f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000123b, 8) , (unique, 0x10001217, 4), (unique, 0x1000123b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c3f, 8), (unique, 0x10003c3f, 8) INT_ADD (unique, 0x10003c37, 8) , (unique, 0x10002985, 8), (unique, 0x10003c37, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002985, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8), (unique, 0x10001217, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000121b, 8), (unique, 0x1000121b, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003c2f, 8), (unique, 0x10003c2f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001243, 8) , (unique, 0x10001223, 4), (unique, 0x10001243, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c3f, 8), (unique, 0x10003c3f, 8) INT_ADD (unique, 0x10003c37, 8) , (unique, 0x10002985, 8), (unique, 0x10003c37, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002985, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8), (unique, 0x10001223, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001227, 8), (unique, 0x10001227, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003c2f, 8), (unique, 0x10003c2f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000124b, 8) , (unique, 0x1000122f, 4), (unique, 0x1000124b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c3f, 8), (unique, 0x10003c3f, 8) INT_ADD (unique, 0x10003c37, 8) , (unique, 0x10002985, 8), (unique, 0x10003c37, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002985, 8) INT_ADD (register, 0x88, 8) , (unique, 0x3300, 8), (unique, 0x1000122f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001233, 8), (unique, 0x10001233, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003c2f, 8), (unique, 0x10003c2f, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (const, 0x10, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1b8efd, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x98, 8) , (register, 0x30, 8), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0x1, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x1b8f60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8), (unique, 0x28c00, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c47, 8), (unique, 0x10003c47, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x80, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8f60, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c4f, 8), (unique, 0x10003c4f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b8f60, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c57, 8), (unique, 0x10003c57, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x80, 8), (register, 0x8, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0xb0, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10002e6f, 8) COPY (unique, 0x3a00, 8)]
[(unique, 0x10002f17, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1b8f89, 1)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10002f17, 8) , (unique, 0x10002f1f, 8) , (unique, 0x10002f27, 8) , (unique, 0x10002f2f, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10002e6f, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbe00, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c6f, 8), (unique, 0x10003c6f, 8) INT_ADD (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (stack, 0xffffffffffffff80, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c67, 8), (unique, 0x10003c67, 8) INT_ADD (unique, 0x10003c5f, 8) , (unique, 0xbe00, 8), (unique, 0x10003c5f, 8) CAST (stack, 0xffffffffffffff88, 8), (unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b8ba4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8)]
[(unique, 0x10002e27, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1b8aef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10002e2f, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1b8aef, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (register, 0xa8, 8)]
[(unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x100029ed, 8) , (const, 0x4, 8), (unique, 0x100029ed, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10002ecf, 8) COPY (unique, 0x3a00, 8)]
[(unique, 0x10002f6f, 8) COPY (register, 0x18, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10002f6f, 8) , (unique, 0x10002e37, 8) , (register, 0x80, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002ecf, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x88, 4), (register, 0x88, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002ecf, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b92f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c77, 8), (unique, 0x10003c77, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002ecf, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1b8feb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (unique, 0x3a00, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b918a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(register, 0x90, 8) INT_SEXT (register, 0x88, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x80, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b9324, 1) , (unique, 0x100013df, 1), (unique, 0x100013df, 1) BOOL_OR (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002a25, 8) , (const, 0x4, 8), (unique, 0x10002a25, 8) INT_ADD (register, 0x80, 8) , (const, 0x5, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c87, 8), (unique, 0x10003c87, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c7f, 8), (unique, 0x10003c7f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002a0d, 8) , (const, 0x4, 8), (unique, 0x10002a0d, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b9324, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10002fcf, 8) COPY (register, 0x98, 8), (register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x3, 4), (register, 0x98, 4) INT_2COMP (unique, 0x10000dd5, 4), (unique, 0x10000dd5, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b9084, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x10, 8) , (register, 0x98, 8), (register, 0x98, 8) INT_ZEXT (register, 0x98, 4), (register, 0x98, 4) INT_AND (register, 0x98, 4) , (const, 0x3, 4), (register, 0x98, 4) INT_2COMP (unique, 0x10000dd5, 4), (unique, 0x10000dd5, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[(unique, 0x10002fd7, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b931d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x10002fcf, 8) , (unique, 0x10002fd7, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1b90ca, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003c8f, 8), (unique, 0x10003c8f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b9313, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1b90c1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002a45, 8) , (const, 0x4, 8), (unique, 0x10002a45, 8) INT_ADD (register, 0x80, 8) , (const, 0x2, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c97, 8), (unique, 0x10003c97, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b9309, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x3, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x1b90c1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002a5d, 8) , (const, 0x4, 8), (unique, 0x10002a5d, 8) INT_ADD (register, 0x80, 8) , (const, 0x3, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003c9f, 8), (unique, 0x10003c9f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xc, 8)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b918a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0x98, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SUB (register, 0x10, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1b914c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x98, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x98, 8)]
[(unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (unique, 0x3100, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001253, 4), (unique, 0x3400, 8) CAST (unique, 0x10003cb7, 8), (unique, 0x10003cb7, 8) INT_ADD (unique, 0x10003caf, 8) , (unique, 0x10002a6d, 8), (unique, 0x10003caf, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002a6d, 8) INT_ADD (register, 0x98, 8) , (unique, 0x3300, 8), (unique, 0x10001253, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ca7, 8), (unique, 0x10003ca7, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000127b, 8) , (unique, 0x10001257, 4), (unique, 0x1000127b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cb7, 8), (unique, 0x10003cb7, 8) INT_ADD (unique, 0x10003caf, 8) , (unique, 0x10002a6d, 8), (unique, 0x10003caf, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002a6d, 8) INT_ADD (register, 0x98, 8) , (unique, 0x3300, 8), (unique, 0x10001257, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000125b, 8), (unique, 0x1000125b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ca7, 8), (unique, 0x10003ca7, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001283, 8) , (unique, 0x10001263, 4), (unique, 0x10001283, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cb7, 8), (unique, 0x10003cb7, 8) INT_ADD (unique, 0x10003caf, 8) , (unique, 0x10002a6d, 8), (unique, 0x10003caf, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002a6d, 8) INT_ADD (register, 0x98, 8) , (unique, 0x3300, 8), (unique, 0x10001263, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001267, 8), (unique, 0x10001267, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ca7, 8), (unique, 0x10003ca7, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000128b, 8) , (unique, 0x1000126f, 4), (unique, 0x1000128b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cb7, 8), (unique, 0x10003cb7, 8) INT_ADD (unique, 0x10003caf, 8) , (unique, 0x10002a6d, 8), (unique, 0x10003caf, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x10002a6d, 8) INT_ADD (register, 0x98, 8) , (unique, 0x3300, 8), (unique, 0x1000126f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001273, 8), (unique, 0x10001273, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ca7, 8), (unique, 0x10003ca7, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0x10, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1b911e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0x80, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3680, 8)]
[ ---  CBRANCH (ram, 0x1b918a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3680, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cbf, 8), (unique, 0x10003cbf, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x90, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b918a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cc7, 8), (unique, 0x10003cc7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b918a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003ccf, 8), (unique, 0x10003ccf, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x90, 8), (register, 0x8, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x88, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (unique, 0xbc80, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (unique, 0x3400, 8) , (unique, 0x10002b45, 8) , (const, 0x4, 8), (unique, 0x10002b45, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b9326, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x88, 4), (register, 0x88, 4) INT_ADD (register, 0x88, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x1b9199, 1)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10002e37, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b8feb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (unique, 0x3a00, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (stack, 0xffffffffffffff60, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbe00, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10003393, 8) , (unique, 0xbe00, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10003383, 8) , (register, 0xb0, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b8b31, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000f6a, 1) , (const, 0x0, 1), (unique, 0x10000f6a, 1) INT_AND (register, 0x10, 1) , (const, 0x1, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x10002f07, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b8b3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10002f0f, 8) COPY (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000309f, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b86ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100030a7, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b86ec, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000262d, 8) , (const, 0x4, 8), (unique, 0x1000262d, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10002f3f, 8) COPY (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100030b7, 8) COPY (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x1b86b1, 1)]
[(unique, 0x3680, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002f3f, 8) , (unique, 0x10002f47, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002f3f, 8) , (unique, 0x10002f47, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1b84cf, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0xb0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cd7, 8), (unique, 0x10003cd7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002f3f, 8) , (unique, 0x10002f47, 8) , (register, 0x38, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100030b7, 8) , (unique, 0x100030bf, 8) , (register, 0xb0, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x1000308f, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b86a4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b91e6, 1) , (register, 0x206, 1), (register, 0x206, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003ce7, 8), (unique, 0x10003ce7, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002645, 8) , (const, 0x4, 8), (unique, 0x10002645, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003cdf, 8), (unique, 0x10003cdf, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b91e6, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xa, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b91ef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002c8f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100009c5, 4), (unique, 0x100009c5, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b855c, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x100009c5, 4), (unique, 0x100009c5, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[(unique, 0x10002c97, 8) COPY (register, 0x8, 8)]
[(unique, 0x10002def, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b8b25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c8f, 8) , (unique, 0x10002c97, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cef, 8), (unique, 0x10003cef, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8)]
[(unique, 0x1000305f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)]
[(unique, 0x10003153, 4) COPY (register, 0x80, 4), (register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1b8b51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x3, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x2, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cf7, 8), (unique, 0x10003cf7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x1b8b3f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003cff, 8), (unique, 0x10003cff, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8)]
[(unique, 0x10003057, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x3, 8)]
[(unique, 0x1000314f, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x1000314f, 4) , (unique, 0x10003153, 4) , (register, 0x10, 4)]
[(unique, 0x10002de7, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10003067, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10003057, 8) , (unique, 0x1000305f, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b869b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10003067, 8) , (register, 0xb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10002de7, 8) , (unique, 0x10002def, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x2, 4), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8662, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001113, 4), (unique, 0x3400, 8) CAST (unique, 0x10003d17, 8), (unique, 0x10003d17, 8) INT_ADD (unique, 0x10003d0f, 8) , (unique, 0x1000266d, 8), (unique, 0x10003d0f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000266d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001113, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d07, 8), (unique, 0x10003d07, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000113b, 8) , (unique, 0x10001117, 4), (unique, 0x1000113b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d17, 8), (unique, 0x10003d17, 8) INT_ADD (unique, 0x10003d0f, 8) , (unique, 0x1000266d, 8), (unique, 0x10003d0f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000266d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001117, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000111b, 8), (unique, 0x1000111b, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d07, 8), (unique, 0x10003d07, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001143, 8) , (unique, 0x10001123, 4), (unique, 0x10001143, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d17, 8), (unique, 0x10003d17, 8) INT_ADD (unique, 0x10003d0f, 8) , (unique, 0x1000266d, 8), (unique, 0x10003d0f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000266d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001123, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001127, 8), (unique, 0x10001127, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d07, 8), (unique, 0x10003d07, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000114b, 8) , (unique, 0x1000112f, 4), (unique, 0x1000114b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d17, 8), (unique, 0x10003d17, 8) INT_ADD (unique, 0x10003d0f, 8) , (unique, 0x1000266d, 8), (unique, 0x10003d0f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000266d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x1000112f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001133, 8), (unique, 0x10001133, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d07, 8), (unique, 0x10003d07, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8633, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x8, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3680, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0x10000a41, 8), (unique, 0x10000a41, 8) INT_MULT (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (unique, 0x3680, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b869b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8), (unique, 0x28c00, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d1f, 8), (unique, 0x10003d1f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b869b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (const, 0x2, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d27, 8), (unique, 0x10003d27, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b869b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d2f, 8), (unique, 0x10003d2f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (register, 0x98, 4), (register, 0x98, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x10003097, 8) COPY (unique, 0x3400, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x1000308f, 8) , (unique, 0x10003097, 8)]
[ ---  CBRANCH (ram, 0x1b86ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x3a00, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10002f47, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x100030bf, 8) COPY (unique, 0x100030af, 8), (unique, 0x100030af, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x1b86b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x3a00, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b8b5c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3400, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0xb0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d37, 8), (unique, 0x10003d37, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000309f, 8) , (unique, 0x100030a7, 8) , (unique, 0x100030af, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10002eff, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x100030d7, 8) COPY (unique, 0x3400, 8)]
[ ---  BRANCH (ram, 0x1b88ac, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x10002eef, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x100030c7, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b88ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b9394, 1) , (unique, 0x10000a9c, 1), (unique, 0x10000a9c, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003d47, 8), (unique, 0x10003d47, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003d3f, 8), (unique, 0x10003d3f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100026e5, 8) , (const, 0x4, 8), (unique, 0x100026e5, 8) INT_ADD (register, 0xb0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b9394, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xa, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b9396, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002cbf, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000aa7, 4), (unique, 0x10000aa7, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b878b, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000aa7, 4), (unique, 0x10000aa7, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[(unique, 0x10002cc7, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1b9290, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002cbf, 8) , (unique, 0x10002cc7, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1b87f1, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8)]
[(register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d4f, 8), (unique, 0x10003d4f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b9389, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d57, 8), (unique, 0x10003d57, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (register, 0x80, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x3, 8)]
[(unique, 0x10002df7, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b87e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x3, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d5f, 8), (unique, 0x10003d5f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x3, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x80, 4)]
[(unique, 0x1000306f, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10002df7, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b8893, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x1000306f, 8) , (register, 0xb0, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b885a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0x98, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (register, 0x18, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0x10001153, 4), (unique, 0x3b80, 8) CAST (unique, 0x10003d77, 8), (unique, 0x10003d77, 8) INT_ADD (unique, 0x10003d6f, 8) , (unique, 0x1000270d, 8), (unique, 0x10003d6f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000270d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001153, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d67, 8), (unique, 0x10003d67, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000117b, 8) , (unique, 0x10001157, 4), (unique, 0x1000117b, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d77, 8), (unique, 0x10003d77, 8) INT_ADD (unique, 0x10003d6f, 8) , (unique, 0x1000270d, 8), (unique, 0x10003d6f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000270d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001157, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000115b, 8), (unique, 0x1000115b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d67, 8), (unique, 0x10003d67, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10001183, 8) , (unique, 0x10001163, 4), (unique, 0x10001183, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d77, 8), (unique, 0x10003d77, 8) INT_ADD (unique, 0x10003d6f, 8) , (unique, 0x1000270d, 8), (unique, 0x10003d6f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000270d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001163, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001167, 8), (unique, 0x10001167, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d67, 8), (unique, 0x10003d67, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000118b, 8) , (unique, 0x1000116f, 4), (unique, 0x1000118b, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003d77, 8), (unique, 0x10003d77, 8) INT_ADD (unique, 0x10003d6f, 8) , (unique, 0x1000270d, 8), (unique, 0x10003d6f, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x1000270d, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x1000116f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001173, 8), (unique, 0x10001173, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d67, 8), (unique, 0x10003d67, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8835, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x98, 8) , (register, 0x8, 8), (register, 0x98, 8) INT_ADD (register, 0x98, 8) , (const, 0x1, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (unique, 0x3680, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000b1f, 8), (unique, 0x10000b1f, 8) INT_MULT (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x38, 4), (register, 0x38, 4) SUBPIECE (unique, 0x3680, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b8893, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x28700, 8) , (const, 0x0, 8), (unique, 0x28700, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d7f, 8), (unique, 0x10003d7f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b8893, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d87, 8), (unique, 0x10003d87, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b8893, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d8f, 8), (unique, 0x10003d8f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 4), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (stack, 0xffffffffffffff68, 4), (stack, 0xffffffffffffff68, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 8), (register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x10002ef7, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0xffffffffffffffff, 8)]
[(unique, 0x100030cf, 8) COPY (unique, 0x3400, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100030c7, 8) , (unique, 0x100030cf, 8) , (unique, 0x100030d7, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10002eef, 8) , (unique, 0x10002ef7, 8) , (unique, 0x10002eff, 8) , (unique, 0x10002f07, 8) , (unique, 0x10002f0f, 8)]
[(unique, 0xbe00, 8) PTRADD (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003da7, 8), (unique, 0x10003da7, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (stack, 0xffffffffffffff80, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003d9f, 8), (unique, 0x10003d9f, 8) INT_ADD (unique, 0x10003d97, 8) , (unique, 0xbe00, 8), (unique, 0x10003d97, 8) CAST (stack, 0xffffffffffffff88, 8), (unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b8499, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8)]
[(unique, 0x10002e0f, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b8aef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10002e17, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1b8aef, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (unique, 0x3100, 8)]
[(unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x10002775, 8) , (const, 0x4, 8), (unique, 0x10002775, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x10002e3f, 8) COPY (register, 0xb0, 8)]
[(unique, 0x10003077, 8) COPY (unique, 0x3a00, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10003077, 8) , (unique, 0x1000307f, 8) , (unique, 0x10003087, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10003077, 8) , (unique, 0x1000307f, 8) , (unique, 0x10003087, 8)]
[ ---  CBRANCH (ram, 0x1b9209, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (register, 0x18, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003daf, 8), (unique, 0x10003daf, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10002e3f, 8) , (unique, 0x10002e47, 8) , (unique, 0x10002e4f, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10003077, 8) , (unique, 0x1000307f, 8) , (unique, 0x10003087, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (unique, 0xbc80, 4)]
[(unique, 0x10002e4f, 8) COPY (unique, 0x3400, 8)]
[(unique, 0x10003087, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b890d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (unique, 0x3a00, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0x10002dff, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1b8ade, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b9274, 1) , (register, 0x206, 1), (register, 0x206, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003dbf, 8), (unique, 0x10003dbf, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x14, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x10002795, 8) , (const, 0x4, 8), (unique, 0x10002795, 8) INT_ADD (register, 0x18, 8) , (const, 0x4, 8), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x10003db7, 8), (unique, 0x10003db7, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3680, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b9274, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xa, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (unique, 0x3400, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3a00, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b9276, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10002c5f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000b63, 4), (unique, 0x10000b63, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b89b6, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_2COMP (unique, 0x10000b63, 4), (unique, 0x10000b63, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4)]
[(unique, 0x10002c67, 8) COPY (register, 0x8, 8)]
[(unique, 0x10002fc7, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b9230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002c5f, 8) , (unique, 0x10002c67, 8)]
[(register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003dc7, 8), (unique, 0x10003dc7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x2, 8)]
[(unique, 0x10003037, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b923c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003dcf, 8), (unique, 0x10003dcf, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x98, 8) , (const, 0x4, 8), (register, 0x98, 8) INT_SEXT (register, 0x80, 4)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x3, 8)]
[(unique, 0x10003027, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x1b8a14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x3, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003dd7, 8), (unique, 0x10003dd7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(register, 0x10, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x1000302f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x3, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x80, 4)]
[(register, 0xa8, 8) COPY (unique, 0x1000303f, 8), (unique, 0x1000303f, 8) MULTIEQUAL (unique, 0x10003027, 8) , (unique, 0x1000302f, 8) , (unique, 0x10003037, 8)]
[(unique, 0x10002fbf, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b8ad5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x0, 8)]
[(register, 0x98, 8) MULTIEQUAL (unique, 0x10002fbf, 8) , (unique, 0x10002fc7, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x18, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x3680, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x2, 4), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (register, 0x8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8a9f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa8, 8) , (const, 0x4, 8), (register, 0xa8, 8) INT_ADD (unique, 0x3100, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10001193, 4), (unique, 0x3400, 8) CAST (unique, 0x10003def, 8), (unique, 0x10003def, 8) INT_ADD (unique, 0x10003de7, 8) , (unique, 0x100027b5, 8), (unique, 0x10003de7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100027b5, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001193, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003ddf, 8), (unique, 0x10003ddf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100011bb, 8) , (unique, 0x10001197, 4), (unique, 0x100011bb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003def, 8), (unique, 0x10003def, 8) INT_ADD (unique, 0x10003de7, 8) , (unique, 0x100027b5, 8), (unique, 0x10003de7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100027b5, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x10001197, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000119b, 8), (unique, 0x1000119b, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003ddf, 8), (unique, 0x10003ddf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100011c3, 8) , (unique, 0x100011a3, 4), (unique, 0x100011c3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003def, 8), (unique, 0x10003def, 8) INT_ADD (unique, 0x10003de7, 8) , (unique, 0x100027b5, 8), (unique, 0x10003de7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100027b5, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x100011a3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100011a7, 8), (unique, 0x100011a7, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003ddf, 8), (unique, 0x10003ddf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100011cb, 8) , (unique, 0x100011af, 4), (unique, 0x100011cb, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10003def, 8), (unique, 0x10003def, 8) INT_ADD (unique, 0x10003de7, 8) , (unique, 0x100027b5, 8), (unique, 0x10003de7, 8) CAST (stack, 0xffffffffffffffb0, 8), (unique, 0x100027b5, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (unique, 0x100011af, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100011b3, 8), (unique, 0x100011b3, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x10003ddf, 8), (unique, 0x10003ddf, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1b8a73, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x8, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (unique, 0x3680, 8)]
[(register, 0x98, 8) INT_ADD (register, 0x98, 8) , (unique, 0x10000be3, 8), (unique, 0x10000be3, 8) INT_MULT (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (unique, 0x3680, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1b8ad5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x28c00, 8) , (const, 0x0, 8), (unique, 0x28c00, 8) INT_SUB (unique, 0x3680, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003df7, 8), (unique, 0x10003df7, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1b8ad5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x2, 8)]
[(register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x3100, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003dff, 8), (unique, 0x10003dff, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x1b8ad5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10003e07, 8), (unique, 0x10003e07, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (register, 0x90, 4), (register, 0x90, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (register, 0x80, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x10002e07, 8) COPY (unique, 0x3400, 8)]
[(unique, 0x10002e1f, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10002dff, 8) , (unique, 0x10002e07, 8)]
[(unique, 0x10002e47, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10002dff, 8) , (unique, 0x10002e07, 8)]
[(unique, 0x1000307f, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b890d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (unique, 0x3a00, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1b8b09, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (stack, 0xffffffffffffffa0, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10002e0f, 8) , (unique, 0x10002e17, 8) , (unique, 0x10002e1f, 8) , (unique, 0x10002e27, 8) , (unique, 0x10002e2f, 8) , (unique, 0x10002e37, 8) , (register, 0x80, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xc900, 1), (unique, 0x3400, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xc900, 1) INT_LESS (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x10003203, 8) COPY (unique, 0x10003e17, 8), (unique, 0x10003e17, 8) CAST (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_ADD (unique, 0x10003e0f, 8) , (const, 0x1, 8), (unique, 0x10003e0f, 8) CAST (stack, 0xffffffffffffff78, 8)]
[(unique, 0x1000327b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1b9247, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x10002d0f, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b82fd, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x3, 8)]
[(unique, 0x10002d17, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1b82fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (stack, 0xffffffffffffffa8, 8) , (const, 0x1, 8)]
[(unique, 0x10002d1f, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x1b8310, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) PTRADD (stack, 0xffffffffffffffb0, 8) , (unique, 0x100024fd, 8) , (const, 0x4, 8), (unique, 0x100024fd, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10002d07, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  BRANCH (ram, 0x1b82fd, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10002cef, 8) , (unique, 0x10002cf7, 8) , (unique, 0x10002cff, 8) , (unique, 0x10002d07, 8) , (unique, 0x10002d0f, 8) , (unique, 0x10002d17, 8) , (unique, 0x10002d1f, 8)]
[ ---  CBRANCH (ram, 0x1b6957, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x3e, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1b692e, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000338b, 8) , (const, 0x3e, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (register, 0x18, 8) , (const, 0x3e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x1000339b, 8) , (const, 0x3e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100033b3, 8) , (const, 0x3e, 4)]
[(register, 0x0, 8) CALL (ram, 0x1ab310, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1b6957, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x10002d67, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1b694f, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x10002d6f, 8) COPY (unique, 0x3100, 8)]
[(stack, 0xffffffffffffff10, 8) INDIRECT (stack, 0xffffffffffffff10, 8) , (const, 0x63, 4), (stack, 0xffffffffffffff10, 8) COPY (const, 0x1b6957, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x63, 4)]
[ ---  CALL (ram, 0x1abf30, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffff70, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10002d67, 8) , (unique, 0x10002d6f, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
