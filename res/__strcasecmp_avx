[(register, 0x1200, 16) SUBPIECE (register, 0x1200, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4536b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000238, 8), (unique, 0x10000238, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x278, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000230, 8), (unique, 0x10000230, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000cc, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100000cc, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x4536f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4536d1, 1)]
[(register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ZEXT (unique, 0x10000240, 1), (unique, 0x10000240, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001cc, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001cc, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001bc, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001bc, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4536c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_ZEXT (unique, 0x10000240, 1), (unique, 0x10000240, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001cc, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001cc, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001bc, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001bc, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x49d380, 16) COPY (ram, 0x49d380, 16)]
[(ram, 0x49d3a0, 16) COPY (ram, 0x49d3a0, 16)]
[(ram, 0x49d470, 16) COPY (ram, 0x49d470, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4536f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x49d380, 16) COPY (ram, 0x49d380, 16)]
[(ram, 0x49d3a0, 16) COPY (ram, 0x49d3a0, 16)]
[(ram, 0x49d470, 16) COPY (ram, 0x49d470, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) INT_AND (unique, 0x10000061, 4) , (const, 0x3f, 4), (unique, 0x10000061, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x49d380, 16)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x49d470, 16)]
[(unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (ram, 0x49d3a0, 16)]
[ ---  CBRANCH (ram, 0x4448c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (const, 0x31, 4), (register, 0x8, 4) INT_AND (unique, 0x10000059, 4) , (const, 0x3f, 4), (unique, 0x10000059, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4448c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x31, 4)]
[ ---  CBRANCH (ram, 0x445e40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0xffff, 4), (register, 0x10, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xc5400, 16), (unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb300, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb300, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb300, 16) , (unique, 0xbb000, 16), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) INT_AND (unique, 0x10000251, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000251, 8) CAST (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) INT_AND (unique, 0x10000261, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000261, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000059, 4) , (const, 0xf, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000061, 4) , (const, 0xf, 4)]
[(unique, 0xc8a80, 16) CALLOTHER (const, 0x1da, 4) , (register, 0x1200, 16) , (register, 0x1200, 16), (register, 0x1200, 16) MULTIEQUAL (register, 0x1200, 16) , (register, 0x1200, 16) , (unique, 0xc0300, 16)]
[ ---  CBRANCH (ram, 0x444910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x10000061, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_AND (unique, 0x10000059, 4) , (const, 0xf, 4)]
[(unique, 0x100001e0, 8) COPY (register, 0x0, 8)]
[(unique, 0x100001f0, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000210, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000220, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4448e7, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[(unique, 0x100001e8, 8) COPY (register, 0x8, 8)]
[(unique, 0x100001f8, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000218, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000228, 8) COPY (register, 0x30, 8)]
[(ram, 0x49d380, 16) COPY (ram, 0x49d380, 16), (ram, 0x49d380, 16) INDIRECT (ram, 0x49d380, 16) , (const, 0xf1, 4)]
[(ram, 0x49d3a0, 16) COPY (ram, 0x49d3a0, 16), (ram, 0x49d3a0, 16) INDIRECT (ram, 0x49d3a0, 16) , (const, 0xf1, 4)]
[(ram, 0x49d470, 16) COPY (ram, 0x49d470, 16), (ram, 0x49d470, 16) INDIRECT (ram, 0x49d470, 16) , (const, 0xf1, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0x10000279, 8) , (register, 0x1200, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x1260, 8) , (register, 0x1280, 8) , (register, 0x12a0, 8) , (register, 0x12c0, 8), (unique, 0x10000279, 8) CAST (unique, 0x3400, 8), (register, 0x12c0, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x12a0, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1280, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1240, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1220, 8) SUBPIECE (unique, 0xbb000, 16) , (const, 0x0, 4), (register, 0x1200, 8) SUBPIECE (unique, 0xc0300, 16) , (const, 0x0, 4), (unique, 0x3400, 8) PTRADD (unique, 0x10000084, 8) , (register, 0x88, 8) , (const, 0x1, 8), (unique, 0x10000084, 8) PTRSUB (const, 0x0, 8) , (const, 0x49d480, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (register, 0x88, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000271, 8), (unique, 0x10000271, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000007c, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x1000007c, 8) PTRSUB (const, 0x0, 8) , (const, 0x49d480, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8), (register, 0x88, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xf, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001e0, 8) , (unique, 0x100001e8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100001f0, 8) , (unique, 0x100001f8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000210, 8) , (unique, 0x10000218, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000220, 8) , (unique, 0x10000228, 8)]
[(register, 0x200, 1) INT_LESS (register, 0x10, 4) , (register, 0x88, 4), (register, 0x88, 4) INT_RIGHT (register, 0x88, 4) , (register, 0x8, 1), (register, 0x10, 4) INT_RIGHT (const, 0xffff, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x88, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x445e28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x88, 4), (register, 0x88, 4) INT_RIGHT (register, 0x88, 4) , (register, 0x8, 1), (register, 0x10, 4) INT_RIGHT (const, 0xffff, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x88, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc7280, 16), (unique, 0xc7280, 16) CALLOTHER (const, 0x1c9, 4) , (unique, 0xc0300, 16) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc8a80, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000200, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x10, 8)]
[ ---  CALLOTHER (const, 0x183, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16) , (const, 0x1a, 1), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000289, 8), (unique, 0x10000289, 8) PTRADD (unique, 0x100000f4, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000f4, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) PTRADD (unique, 0x100000e4, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100000e4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000200, 8) , (unique, 0x10000208, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000200, 8) , (unique, 0x10000208, 8)]
[ ---  CBRANCH (ram, 0x4449f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1)]
[ ---  CALLOTHER (const, 0x183, 4) , (unique, 0xc5400, 16) , (unique, 0xc5400, 16) , (const, 0x1a, 1), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xc5400, 16) CALLOTHER (const, 0x1b6, 4) , (unique, 0xbfa00, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfa00, 16) CALLOTHER (const, 0x173, 4) , (unique, 0xbfb80, 16) , (unique, 0xbb000, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xbfb80, 16) CALLOTHER (const, 0x174, 4) , (unique, 0xc0900, 16) , (unique, 0xc0900, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xc0900, 16) CALLOTHER (const, 0x17f, 4) , (unique, 0xbb000, 16) , (unique, 0xbb000, 16), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) PTRADD (unique, 0x10000124, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000124, 8) PTRSUB (unique, 0x1000011c, 8) , (const, 0x0, 8), (unique, 0x1000011c, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0xbb000, 16) CALLOTHER (const, 0x14a, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000291, 8), (unique, 0x10000291, 8) PTRADD (unique, 0x1000010c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000010c, 8) PTRSUB (unique, 0x10000104, 8) , (const, 0x0, 8), (unique, 0x10000104, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10000208, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4449f0, 1) , (unique, 0x100001dc, 1), (unique, 0x100001dc, 1) BOOL_AND (unique, 0x100001dd, 1) , (unique, 0x100001de, 1), (unique, 0x100001de, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x100001dd, 1) BOOL_NEGATE (register, 0x200, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x445e5c, 1) , (register, 0x200, 1)]
[(ram, 0x49d380, 16) COPY (ram, 0x49d380, 16)]
[(ram, 0x49d3a0, 16) COPY (ram, 0x49d3a0, 16)]
[(ram, 0x49d470, 16) COPY (ram, 0x49d470, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x49d380, 16) COPY (ram, 0x49d380, 16)]
[(ram, 0x49d3a0, 16) COPY (ram, 0x49d3a0, 16)]
[(ram, 0x49d470, 16) COPY (ram, 0x49d470, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002b3, 4), (unique, 0x100002b3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000009c, 8) , (unique, 0x1000015c, 8) , (const, 0x1, 8), (unique, 0x1000015c, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x200, 8), (unique, 0x1000009c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4a0a00, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002a3, 8), (unique, 0x100002a3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000008c, 8) , (unique, 0x10000154, 8) , (const, 0x1, 8), (unique, 0x10000154, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x200, 8), (unique, 0x1000008c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4a0a00, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100002a2, 1), (unique, 0x100002a2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000144, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000144, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002a1, 1), (unique, 0x100002a1, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000134, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000134, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) PTRADD (unique, 0x10000164, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000164, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x100002bf, 8), (unique, 0x100002bf, 8) PTRADD (unique, 0x10000174, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000174, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[(unique, 0x1aa00, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1ac80, 1), (unique, 0x1ac80, 1) INT_EQUAL (unique, 0x10000077, 4) , (const, 0x0, 4), (unique, 0x10000077, 4) INT_AND (unique, 0x10000073, 4) , (const, 0x1, 4), (unique, 0x10000073, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1aa00, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
[(unique, 0x1aa00, 8) INT_ADD (unique, 0x1aa00, 8) , (const, 0x1, 8)]
[ ---  BRANCH (const, 0xfffffffb, 1)]
[(ram, 0x49d380, 16) COPY (ram, 0x49d380, 16)]
[(ram, 0x49d3a0, 16) COPY (ram, 0x49d3a0, 16)]
[(ram, 0x49d470, 16) COPY (ram, 0x49d470, 16)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002d9, 4), (unique, 0x100002d9, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000bc, 8) , (unique, 0x100001ac, 8) , (const, 0x1, 8), (unique, 0x100001ac, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x200, 8), (unique, 0x100000bc, 8) PTRSUB (const, 0x0, 8) , (const, 0x4a0a00, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000ac, 8) , (unique, 0x100001a4, 8) , (const, 0x1, 8), (unique, 0x100001a4, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x200, 8), (unique, 0x100000ac, 8) PTRSUB (const, 0x0, 8) , (const, 0x4a0a00, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100002c8, 1), (unique, 0x100002c8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000194, 8) , (unique, 0x1aa00, 8) , (const, 0x1, 8), (unique, 0x10000194, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x100002c7, 1), (unique, 0x100002c7, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000184, 8) , (unique, 0x1aa00, 8) , (const, 0x1, 8), (unique, 0x10000184, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x1aa00, 8) MULTIEQUAL (unique, 0x1aa00, 8) , (unique, 0x1aa00, 8)]
