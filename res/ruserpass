[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x22, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x22, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x22, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x22, 4), (stack, 0xfffffffffffffb20, 8) COPY (const, 0x21eb39, 8)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x22, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x22, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x22, 4)]
[ ---  CBRANCH (ram, 0x21efd6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x139ee0, 8) , (unique, 0x10000434, 8), (unique, 0x10000434, 8) COPY (const, 0x28dbea, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c76c8, 8) COPY (ram, 0x4c76c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21eb6c, 8), (register, 0x20, 8) CAST (unique, 0x100009de, 8), (unique, 0x100009de, 8) INT_ADD (unique, 0x100009d6, 8) , (unique, 0x1000015f, 8), (unique, 0x100009d6, 8) CAST (unique, 0x1000063c, 8), (unique, 0x1000063c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8), (unique, 0x1000015f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x26, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x637274656e2e2f, 8), (register, 0x0, 8) CAST (unique, 0x100009e6, 8), (unique, 0x100009e6, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000624, 8) , (unique, 0x1000061c, 8) , (const, 0x1, 8), (unique, 0x10000624, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb38, 8), (unique, 0x1000061c, 8) INT_ADD (unique, 0x1000015f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000015f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x26, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21eb88, 8), (register, 0x20, 8) CAST (unique, 0x100009f6, 8), (unique, 0x100009f6, 8) INT_ADD (unique, 0x100009ee, 8) , (unique, 0x1000015f, 8), (unique, 0x100009ee, 8) CAST (unique, 0x10000654, 8), (unique, 0x10000654, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8), (unique, 0x1000015f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x26, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x64, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x64, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x5c, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x31, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x64, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x61, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x31, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x64, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x61, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x5c, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x64, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x63, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x5c, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x5b, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x31, 4), (stack, 0xfffffffffffffb20, 8) COPY (const, 0x21eb4d, 8)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x64, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x63, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x5c, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x5b, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x64, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x63, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x5c, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x5b, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x31, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x64, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x63, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x5c, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x5b, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x31, 4)]
[ ---  CBRANCH (ram, 0x21eeb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x16dd20, 8) , (unique, 0x3800, 8) , (unique, 0x10000414, 8), (unique, 0x10000414, 8) COPY (const, 0x28bf73, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000624, 8) , (unique, 0x1000061c, 8) , (const, 0x1, 8), (unique, 0x10000624, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb38, 8), (unique, 0x1000061c, 8) INT_ADD (unique, 0x1000015f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000015f, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x26, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b4, 8) , (unique, 0xbd00, 4), (unique, 0x100004b4, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004ac, 8), (unique, 0x100004ac, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ebb2, 8), (register, 0x20, 8) CAST (unique, 0x10000a06, 8), (unique, 0x10000a06, 8) INT_ADD (unique, 0x100009fe, 8) , (unique, 0x1000015f, 8), (unique, 0x100009fe, 8) CAST (unique, 0x1000066c, 8), (unique, 0x1000066c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x84, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x84, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x74, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x84, 4), (ram, 0x4c76c8, 8) INDIRECT (register, 0x0, 8) , (const, 0x74, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x84, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x83, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x84, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x83, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x84, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x83, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x84, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x83, 4)]
[ ---  CBRANCH (ram, 0x21eee8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fcb80, 8) , (unique, 0x3200, 8) , (const, 0x400, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbc8, 8)]
[(stack, 0xfffffffffffffbc8, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x21ebba, 1)]
[(unique, 0x3200, 8) CAST (unique, 0x10000a0e, 8), (unique, 0x10000a0e, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ebce, 8), (register, 0x20, 8) CAST (unique, 0x10000a1e, 8), (unique, 0x10000a1e, 8) INT_ADD (unique, 0x10000a16, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a16, 8) CAST (unique, 0x10000684, 8), (unique, 0x10000684, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x95, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x95, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x94, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x95, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x94, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x95, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x94, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x95, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x94, 4), (stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb30, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x195d30, 8) , (unique, 0x3200, 8) , (const, 0x2e, 4)]
[(unique, 0x10000401, 1) COPY (const, 0x0, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004dc, 8), (unique, 0x100004dc, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb50, 1) MULTIEQUAL (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1)]
[(stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x100003fe, 1) MULTIEQUAL (unique, 0x10000401, 1) , (unique, 0x100003fe, 1) , (unique, 0x100003ff, 1) , (unique, 0x100003fe, 1)]
[(unique, 0x10000986, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  CBRANCH (ram, 0x21ecc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000018f, 4) , (const, 0x0, 4), (unique, 0x1000018f, 4) INT_AND (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ebee, 8), (register, 0x20, 8) CAST (unique, 0x10000a2e, 8), (unique, 0x10000a2e, 8) INT_ADD (unique, 0x10000a26, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a26, 8) CAST (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xb4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb4, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0xb4, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0xb3, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0xb4, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0xb3, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0xb4, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0xb3, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0xb4, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0xb3, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0xb4, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0xb3, 4)]
[(unique, 0x1000099e, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0xb4, 4)]
[ ---  CBRANCH (ram, 0x21eea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x21e860, 8)]
[ ---  CBRANCH (ram, 0x21ee98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(unique, 0x10000400, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x21ec40, 1)]
[ ---  CBRANCH (ram, 0x21ed50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x21ec40, 1) , (unique, 0x100003fe, 1)]
[ ---  CBRANCH (ram, 0x21ebe1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a3, 4) , (const, 0x0, 4), (unique, 0x100001a3, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004ec, 8), (unique, 0x100004ec, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ec1f, 8), (register, 0x20, 8) CAST (unique, 0x10000a3e, 8), (unique, 0x10000a3e, 8) INT_ADD (unique, 0x10000a36, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a36, 8) CAST (unique, 0x100006b4, 8), (unique, 0x100006b4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xf0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf0, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0xf0, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0xf0, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0xef, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0xf0, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0xef, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0xf0, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0xef, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0xf0, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0xef, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0xf0, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0xef, 4)]
[ ---  CBRANCH (ram, 0x21ed50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) CALL (ram, 0x21e860, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ec37, 8), (register, 0x20, 8) CAST (unique, 0x10000a4e, 8), (unique, 0x10000a4e, 8) INT_ADD (unique, 0x10000a46, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a46, 8) CAST (unique, 0x100006cc, 8), (unique, 0x100006cc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x100, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x100, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x100, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x100, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0xff, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x100, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0xff, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x100, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0xff, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x100, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0xff, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x100, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0xff, 4)]
[ ---  CBRANCH (ram, 0x21ecd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x11f890, 8) , (register, 0x38, 8) , (unique, 0x10000484, 8), (unique, 0x10000484, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ece5, 8), (register, 0x20, 8) CAST (unique, 0x10000a5e, 8), (unique, 0x10000a5e, 8) INT_ADD (unique, 0x10000a56, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a56, 8) CAST (unique, 0x10000744, 8), (unique, 0x10000744, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3d8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d8, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3d8, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3d8, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3d7, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3d8, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3d7, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x3d8, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x3d7, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3d8, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3d7, 4)]
[(unique, 0x100008fe, 8) COPY (stack, 0xfffffffffffffb30, 8), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3d8, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3d7, 4)]
[ ---  CBRANCH (ram, 0x21ed50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000a66, 8), (unique, 0x10000a66, 8) CALL (ram, 0x189080, 8) , (register, 0x38, 8) , (const, 0x2e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ed00, 8), (register, 0x20, 8) CAST (unique, 0x10000a76, 8), (unique, 0x10000a76, 8) INT_ADD (unique, 0x10000a6e, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a6e, 8) CAST (unique, 0x1000075c, 8), (unique, 0x1000075c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3ec, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ec, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3ec, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3ec, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3eb, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3ec, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3eb, 4), (stack, 0xfffffffffffffb28, 8) COPY (register, 0x0, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3ec, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3eb, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x3ec, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x3eb, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3ec, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3eb, 4)]
[ ---  CBRANCH (ram, 0x21ed50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x11f890, 8) , (register, 0x0, 8) , (unique, 0x100008fe, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ed2a, 8), (register, 0x20, 8) CAST (unique, 0x10000a8e, 8), (unique, 0x10000a8e, 8) INT_ADD (unique, 0x10000a86, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a86, 8) CAST (unique, 0x10000774, 8), (unique, 0x10000774, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x40d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x40d, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x40d, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x40d, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x40d, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x40c, 4), (stack, 0xfffffffffffffb28, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (stack, 0xfffffffffffffb28, 8) , (unique, 0x1000020f, 8) , (const, 0x1, 8), (unique, 0x1000020f, 8) INT_2COMP (unique, 0x10000a7e, 8), (unique, 0x10000a7e, 8) CAST (register, 0x38, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x40d, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x40d, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x40d, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x40c, 4)]
[ ---  CBRANCH (ram, 0x21ed50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x11f840, 8) , (register, 0x38, 8) , (unique, 0x1000048c, 8) , (unique, 0x10000a96, 8), (unique, 0x10000a96, 8) CAST (register, 0x8, 8), (unique, 0x1000048c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8), (register, 0x8, 8) PTRADD (stack, 0xfffffffffffffb28, 8) , (unique, 0x1000020f, 8) , (const, 0x1, 8), (unique, 0x1000020f, 8) INT_2COMP (unique, 0x10000a7e, 8), (unique, 0x10000a7e, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x21ec40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (stack, 0xfffffffffffffb28, 8) , (const, 0x4c7660, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb50, 1) MULTIEQUAL (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1)]
[(stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x100003ff, 1) MULTIEQUAL (unique, 0x100003fe, 1) , (unique, 0x100003fe, 1) , (unique, 0x100003ff, 1) , (unique, 0x100003ff, 1) , (unique, 0x100003ff, 1) , (unique, 0x100003ff, 1) , (unique, 0x100003ff, 1) , (unique, 0x100003fe, 1) , (unique, 0x10000400, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000504, 8), (unique, 0x10000504, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[(unique, 0x10000966, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[(stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb50, 1) MULTIEQUAL (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1)]
[(stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x1000098e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000966, 8) , (unique, 0x100009a6, 8) , (unique, 0x10000976, 8) , (unique, 0x1000097e, 8) , (unique, 0x100008ee, 8)]
[ ---  CBRANCH (ram, 0x21ecc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bb, 4) , (const, 0x0, 4), (unique, 0x100001bb, 4) INT_AND (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ec52, 8), (register, 0x20, 8) CAST (unique, 0x10000aa6, 8), (unique, 0x10000aa6, 8) INT_ADD (unique, 0x10000a9e, 8) , (unique, 0x1000015f, 8), (unique, 0x10000a9e, 8) CAST (unique, 0x100006e4, 8), (unique, 0x100006e4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x11d, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x11d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x11d, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x11c, 4), (stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x11d, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x11c, 4), (stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x11d, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x11c, 4), (stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x11d, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x11c, 4), (stack, 0xfffffffffffffb50, 1) MULTIEQUAL (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x11d, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x11c, 4), (stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(unique, 0x100009a6, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x11d, 4), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  CBRANCH (ram, 0x21eea8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) CALL (ram, 0x21e860, 8)]
[ ---  CBRANCH (ram, 0x21eea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xb, 4)]
[ ---  CBRANCH (ram, 0x21eda0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[(register, 0x8, 8) COPY (const, 0xa, 8)]
[(unique, 0x10000956, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100009b6, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x28ef90, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100009b6, 8) , (unique, 0x100009be, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000956, 8) , (unique, 0x1000095e, 8)]
[ ---  CBRANCH (ram, 0x21edb1, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x1000095e, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000574, 8) , (const, 0x1, 8), (unique, 0x10000574, 8) INT_ADD (unique, 0x10000244, 8) , (const, 0x1, 8), (unique, 0x10000244, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x100009be, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000056c, 8) , (const, 0x1, 8), (unique, 0x1000056c, 8) INT_ADD (unique, 0x1000023c, 8) , (const, 0x1, 8), (unique, 0x1000023c, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x21edaf, 1) , (unique, 0x1000040a, 1), (unique, 0x1000040a, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x21eddf, 1) , (unique, 0x1000040b, 1), (unique, 0x1000040b, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21edbf, 8), (register, 0x20, 8) CAST (unique, 0x10000ab6, 8), (unique, 0x10000ab6, 8) INT_ADD (unique, 0x10000aae, 8) , (unique, 0x1000015f, 8), (unique, 0x10000aae, 8) CAST (unique, 0x100007bc, 8), (unique, 0x100007bc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21edce, 8), (register, 0x20, 8) CAST (unique, 0x10000ac6, 8), (unique, 0x10000ac6, 8) INT_ADD (unique, 0x10000abe, 8) , (unique, 0x1000015f, 8), (unique, 0x10000abe, 8) CAST (unique, 0x100007d4, 8), (unique, 0x100007d4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x2ca, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x2c3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ca, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c3, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x2ca, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x2c3, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x2ca, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x2c9, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x2c3, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x2c2, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x2ca, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x2c9, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x2c3, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x2c2, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x2ca, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x2c9, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x2c3, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x2c2, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x2ca, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x2c9, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x2c3, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x2c2, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x2ca, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x2c9, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x2c3, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x2c2, 4)]
[ ---  CBRANCH (ram, 0x21eddf, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6370, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3200, 8), (register, 0x0, 4) CALL (ram, 0x175a10, 8) , (ram, 0x4c76c8, 8)]
[ ---  CBRANCH (ram, 0x21ef7c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (stack, 0xfffffffffffffb50, 1) , (const, 0x3f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ef94, 8), (register, 0x20, 8) CAST (unique, 0x10000ad6, 8), (unique, 0x10000ad6, 8) INT_ADD (unique, 0x10000ace, 8) , (unique, 0x1000015f, 8), (unique, 0x10000ace, 8) CAST (unique, 0x1000087c, 8), (unique, 0x1000087c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ef9e, 8), (register, 0x20, 8) CAST (unique, 0x10000ae6, 8), (unique, 0x10000ae6, 8) INT_ADD (unique, 0x10000ade, 8) , (unique, 0x1000015f, 8), (unique, 0x10000ade, 8) CAST (unique, 0x10000894, 8), (unique, 0x10000894, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3cf, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c1, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3cf, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3c1, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3cf, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3ce, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3c1, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3c0, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3cf, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3ce, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3c1, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3c0, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3cf, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3ce, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3c1, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3c0, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3cf, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3ce, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3c1, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3c0, 4)]
[ ---  CALL (ram, 0x2045e0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x1000042c, 8) , (unique, 0x1000045c, 8) , (const, 0x5, 8), (unique, 0x1000045c, 8) COPY (const, 0x2924a0, 8), (unique, 0x1000042c, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(register, 0x30, 8) COPY (const, 0x2924d0, 8)]
[(stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb50, 1) MULTIEQUAL (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1)]
[(stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x1000097e, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  CBRANCH (ram, 0x21ec49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000025d, 4) , (const, 0x0, 4), (unique, 0x1000025d, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21edf5, 8), (register, 0x20, 8) CAST (unique, 0x10000af6, 8), (unique, 0x10000af6, 8) INT_ADD (unique, 0x10000aee, 8) , (unique, 0x1000015f, 8), (unique, 0x10000aee, 8) CAST (unique, 0x100007ec, 8), (unique, 0x100007ec, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x2f3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2f3, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x2f3, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x2f2, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x2f2, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x2f2, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x2f3, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x2f2, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x2f3, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x2f2, 4)]
[ ---  CBRANCH (ram, 0x21ec40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x21e860, 8)]
[ ---  CBRANCH (ram, 0x21ec40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x10000926, 8) COPY (unique, 0x10000afe, 8), (unique, 0x10000afe, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8)]
[(unique, 0x1000092e, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000936, 8), (unique, 0x10000936, 8) MULTIEQUAL (unique, 0x10000926, 8) , (unique, 0x1000092e, 8)]
[ ---  CBRANCH (ram, 0x21ee0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000936, 8), (unique, 0x10000936, 8) MULTIEQUAL (unique, 0x10000926, 8) , (unique, 0x1000092e, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100009c6, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21ee33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100009ca, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100009c6, 4) , (unique, 0x100009ca, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000b0e, 8), (unique, 0x10000b0e, 8) INT_ADD (unique, 0x10000b06, 8) , (const, 0x6, 8), (unique, 0x10000b06, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000906, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x21ee3b, 1) , (register, 0x206, 1)]
[(unique, 0x1000090e, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ee5c, 8), (register, 0x20, 8) CAST (unique, 0x10000b2e, 8), (unique, 0x10000b2e, 8) INT_ADD (unique, 0x10000b26, 8) , (unique, 0x1000015f, 8), (unique, 0x10000b26, 8) CAST (unique, 0x10000804, 8), (unique, 0x10000804, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x399, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x399, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x399, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x399, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x398, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x399, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x398, 4), (stack, 0xfffffffffffffb28, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000b1e, 8), (unique, 0x10000b1e, 8) INT_ADD (unique, 0x10000b16, 8) , (unique, 0x100005a4, 8), (unique, 0x10000b16, 8) CAST (register, 0x10, 8), (unique, 0x100005a4, 8) INT_SUB (const, 0xffffffffffb3899d, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000906, 8) , (unique, 0x1000090e, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x399, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x398, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x399, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x398, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x399, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x398, 4)]
[ ---  CBRANCH (ram, 0x21efe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (unique, 0x10000289, 4) , (const, 0x1, 4), (unique, 0x10000289, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x10000b1e, 8), (unique, 0x10000b1e, 8) INT_ADD (unique, 0x10000b16, 8) , (unique, 0x100005a4, 8), (unique, 0x10000b16, 8) CAST (register, 0x10, 8), (unique, 0x100005a4, 8) INT_SUB (const, 0xffffffffffb3899d, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000906, 8) , (unique, 0x1000090e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ee7f, 8), (register, 0x20, 8) CAST (unique, 0x10000b3e, 8), (unique, 0x10000b3e, 8) INT_ADD (unique, 0x10000b36, 8) , (unique, 0x1000015f, 8), (unique, 0x10000b36, 8) CAST (unique, 0x1000081c, 8), (unique, 0x1000081c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3b4, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3b4, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x3b3, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3b4, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x3b3, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3b4, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x3b3, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x3b4, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x3b3, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3b4, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x3b3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b4, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3b7, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3b4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (unique, 0x10000474, 8) , (register, 0x10, 8), (unique, 0x10000474, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8), (register, 0x10, 8) PTRADD (stack, 0xfffffffffffffb28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005bc, 8), (unique, 0x100005bc, 8) PTRSUB (unique, 0x100008ee, 8) , (const, 0x0, 8), (unique, 0x100008ee, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x3b4, 4)]
[ ---  BRANCH (ram, 0x21ec49, 1)]
[ ---  CBRANCH (ram, 0x21ed60, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 4) , (unique, 0x10000b46, 4), (unique, 0x10000b46, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21ec40, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x5, 4) , (unique, 0x10000b4a, 4), (unique, 0x10000b4a, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21ed69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ed81, 8), (register, 0x20, 8) CAST (unique, 0x10000b56, 8), (unique, 0x10000b56, 8) INT_ADD (unique, 0x10000b4e, 8) , (unique, 0x1000015f, 8), (unique, 0x10000b4e, 8) CAST (unique, 0x1000078c, 8), (unique, 0x1000078c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ed92, 8), (register, 0x20, 8) CAST (unique, 0x10000b66, 8), (unique, 0x10000b66, 8) INT_ADD (unique, 0x10000b5e, 8) , (unique, 0x1000015f, 8), (unique, 0x10000b5e, 8) CAST (unique, 0x100007a4, 8), (unique, 0x100007a4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x290, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x281, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x290, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x281, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x290, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x290, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x28f, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x281, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x280, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x290, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x28f, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x281, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x280, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x290, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x28f, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x281, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x280, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x290, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x28f, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x281, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x280, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x290, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x28f, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x281, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x280, 4)]
[ ---  CALL (ram, 0x2045e0, 8) , (register, 0x0, 8) , (unique, 0x1000046c, 8), (unique, 0x1000046c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000424, 8) , (unique, 0x1000044c, 8) , (const, 0x5, 8), (unique, 0x1000044c, 8) COPY (const, 0x28ef9a, 8), (unique, 0x10000424, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  BRANCH (ram, 0x21ec40, 1)]
[ ---  CBRANCH (ram, 0x21ec49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001d7, 4) , (const, 0x0, 4), (unique, 0x100001d7, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000514, 8), (unique, 0x10000514, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ec8e, 8), (register, 0x20, 8) CAST (unique, 0x10000b76, 8), (unique, 0x10000b76, 8) INT_ADD (unique, 0x10000b6e, 8) , (unique, 0x1000015f, 8), (unique, 0x10000b6e, 8) CAST (unique, 0x100006fc, 8), (unique, 0x100006fc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x15d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x15d, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x15d, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x15c, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x15c, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x15d, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x15c, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x15d, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x15c, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x15d, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x15c, 4)]
[ ---  CBRANCH (ram, 0x21ec40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x21e860, 8)]
[ ---  CBRANCH (ram, 0x21eef4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000093e, 8) COPY (unique, 0x10000b7e, 8), (unique, 0x10000b7e, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8)]
[(unique, 0x10000946, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x1000094e, 8), (unique, 0x1000094e, 8) MULTIEQUAL (unique, 0x1000093e, 8) , (unique, 0x10000946, 8)]
[ ---  CBRANCH (ram, 0x21eefb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x1000094e, 8), (unique, 0x1000094e, 8) MULTIEQUAL (unique, 0x1000093e, 8) , (unique, 0x10000946, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100009ce, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21ef1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100009d2, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100009ce, 4) , (unique, 0x100009d2, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000b8e, 8), (unique, 0x10000b8e, 8) INT_ADD (unique, 0x10000b86, 8) , (const, 0x6, 8), (unique, 0x10000b86, 8) CAST (register, 0x10, 8)]
[(unique, 0x10000916, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x21ef27, 1) , (register, 0x206, 1)]
[(unique, 0x1000091e, 8) COPY (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ef48, 8), (register, 0x20, 8) CAST (unique, 0x10000bae, 8), (unique, 0x10000bae, 8) INT_ADD (unique, 0x10000ba6, 8) , (unique, 0x1000015f, 8), (unique, 0x10000ba6, 8) CAST (unique, 0x1000084c, 8), (unique, 0x1000084c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x23e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x23e, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x23e, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x23e, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x23d, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x23e, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x23d, 4), (stack, 0xfffffffffffffb28, 8) COPY (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x10000b9e, 8), (unique, 0x10000b9e, 8) INT_ADD (unique, 0x10000b96, 8) , (unique, 0x100005d4, 8), (unique, 0x10000b96, 8) CAST (register, 0x10, 8), (unique, 0x100005d4, 8) INT_SUB (const, 0xffffffffffb3899d, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000916, 8) , (unique, 0x1000091e, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x23e, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x23d, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x23e, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x23d, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x23e, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x23d, 4)]
[ ---  CBRANCH (ram, 0x21efe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (unique, 0x100002cd, 4) , (const, 0x1, 4), (unique, 0x100002cd, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x10000b9e, 8), (unique, 0x10000b9e, 8) INT_ADD (unique, 0x10000b96, 8) , (unique, 0x100005d4, 8), (unique, 0x10000b96, 8) CAST (register, 0x10, 8), (unique, 0x100005d4, 8) INT_SUB (const, 0xffffffffffb3899d, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000916, 8) , (unique, 0x1000091e, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ef6b, 8), (register, 0x20, 8) CAST (unique, 0x10000bbe, 8), (unique, 0x10000bbe, 8) INT_ADD (unique, 0x10000bb6, 8) , (unique, 0x1000015f, 8), (unique, 0x10000bb6, 8) CAST (unique, 0x10000864, 8), (unique, 0x10000864, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x259, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x259, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x258, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x259, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x258, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x259, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x258, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x259, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x258, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x259, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x258, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x25c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x259, 4)]
[(ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x25c, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x259, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000bc6, 8), (unique, 0x10000bc6, 8) CALL (ram, 0x193a40, 8) , (register, 0x0, 8) , (unique, 0x1000047c, 8) , (register, 0x10, 8), (unique, 0x1000047c, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8), (register, 0x10, 8) PTRADD (stack, 0xfffffffffffffb28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005ec, 8), (unique, 0x100005ec, 8) PTRSUB (unique, 0x100008f6, 8) , (const, 0x0, 8), (unique, 0x100008f6, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x259, 4)]
[(unique, 0x10000976, 8) COPY (unique, 0x100008f6, 8), (unique, 0x100008f6, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x259, 4)]
[ ---  BRANCH (ram, 0x21ec49, 1)]
[(stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x30, 8) COPY (const, 0x28f580, 8)]
[ ---  BRANCH (ram, 0x21efaa, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21efbb, 8), (register, 0x20, 8) CAST (unique, 0x10000bd6, 8), (unique, 0x10000bd6, 8) INT_ADD (unique, 0x10000bce, 8) , (unique, 0x1000015f, 8), (unique, 0x10000bce, 8) CAST (unique, 0x100008ac, 8), (unique, 0x100008ac, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21efc5, 8), (register, 0x20, 8) CAST (unique, 0x10000be6, 8), (unique, 0x10000be6, 8) INT_ADD (unique, 0x10000bde, 8) , (unique, 0x1000015f, 8), (unique, 0x10000bde, 8) CAST (unique, 0x100008c4, 8), (unique, 0x100008c4, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[ ---  CALL (ram, 0x2045e0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x1000041c, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x1000041c, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21efd1, 8), (register, 0x20, 8) CAST (unique, 0x10000bf6, 8), (unique, 0x10000bf6, 8) INT_ADD (unique, 0x10000bee, 8) , (unique, 0x1000015f, 8), (unique, 0x10000bee, 8) CAST (unique, 0x100008dc, 8), (unique, 0x100008dc, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x27a, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x279, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x276, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x275, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x268, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x267, 4), (stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x27a, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x279, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x276, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x275, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x268, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x267, 4), (stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x27a, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x279, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x276, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x275, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x268, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x267, 4), (stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x27a, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x279, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x276, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x275, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x268, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x267, 4), (stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[ ---  CALL (ram, 0x16d210, 8) , (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x276, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x268, 4), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x27a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x276, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x268, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c76c8, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x27a, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x276, 4), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x268, 4), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ecaa, 8), (register, 0x20, 8) CAST (unique, 0x10000c06, 8), (unique, 0x10000c06, 8) INT_ADD (unique, 0x10000bfe, 8) , (unique, 0x1000015f, 8), (unique, 0x10000bfe, 8) CAST (unique, 0x10000714, 8), (unique, 0x10000714, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x177, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x177, 4)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x177, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x176, 4)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x177, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x176, 4)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x177, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x176, 4)]
[(stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x177, 4), (stack, 0xfffffffffffffb50, 1) INDIRECT (stack, 0xfffffffffffffb50, 1) , (const, 0x176, 4)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x177, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x176, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000052c, 8), (unique, 0x1000052c, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x177, 4)]
[ ---  CBRANCH (ram, 0x21ebe1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (unique, 0xbd80, 8) , (unique, 0x10000464, 8), (unique, 0x10000464, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7660, 8)]
[(unique, 0x10000996, 8) COPY (ram, 0x4c76c8, 8)]
[ ---  CBRANCH (ram, 0x21ec4d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001eb, 4) , (const, 0x0, 4), (unique, 0x100001eb, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21ecc7, 8), (register, 0x20, 8) CAST (unique, 0x10000c16, 8), (unique, 0x10000c16, 8) INT_ADD (unique, 0x10000c0e, 8) , (unique, 0x1000015f, 8), (unique, 0x10000c0e, 8) CAST (unique, 0x1000072c, 8), (unique, 0x1000072c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x19d, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x19c, 4), (stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x19d, 4), (stack, 0xfffffffffffffb28, 8) INDIRECT (stack, 0xfffffffffffffb28, 8) , (const, 0x19c, 4), (stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x19d, 4), (stack, 0xfffffffffffffb30, 8) INDIRECT (stack, 0xfffffffffffffb30, 8) , (const, 0x19c, 4), (stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x19d, 4), (stack, 0xfffffffffffffbc8, 1) INDIRECT (stack, 0xfffffffffffffbc8, 1) , (const, 0x19c, 4), (stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[ ---  CALL (ram, 0x16d210, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000986, 8) , (unique, 0x1000098e, 8) , (unique, 0x10000996, 8) , (unique, 0x1000099e, 8) , (unique, 0x100009a6, 8) , (unique, 0x100009a6, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x19d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c76c8, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (ram, 0x4c76c8, 8) , (const, 0x19d, 4), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffbc8, 1) MULTIEQUAL (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1) , (stack, 0xfffffffffffffbc8, 1)]
[(stack, 0xfffffffffffffb50, 1) MULTIEQUAL (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1) , (stack, 0xfffffffffffffb50, 1)]
[(stack, 0xfffffffffffffb30, 8) MULTIEQUAL (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8) , (stack, 0xfffffffffffffb30, 8)]
[(stack, 0xfffffffffffffb28, 8) MULTIEQUAL (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8) , (stack, 0xfffffffffffffb28, 8)]
[(stack, 0xfffffffffffffb20, 8) MULTIEQUAL (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8) , (stack, 0xfffffffffffffb20, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000554, 8), (unique, 0x10000554, 8) PTRSUB (ram, 0x4c76c8, 8) , (const, 0x0, 8), (ram, 0x4c76c8, 8) MULTIEQUAL (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8) , (ram, 0x4c76c8, 8)]
[ ---  BRANCH (ram, 0x21ebe1, 1)]
[ ---  CBRANCH (ram, 0x21ecc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c1e, 8), (unique, 0x10000c1e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x21eedc, 8), (register, 0x20, 8) CAST (unique, 0x10000c2e, 8), (unique, 0x10000c2e, 8) INT_ADD (unique, 0x10000c26, 8) , (unique, 0x1000015f, 8), (unique, 0x10000c26, 8) CAST (unique, 0x10000834, 8), (unique, 0x10000834, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffb20, 8)]
[(stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x460, 4), (stack, 0xfffffffffffffb20, 8) INDIRECT (stack, 0xfffffffffffffb20, 8) , (const, 0x45f, 4)]
[ ---  CALL (ram, 0x204470, 8) , (unique, 0x10000444, 8) , (unique, 0x3800, 8), (unique, 0x10000444, 8) COPY (const, 0x28eaa9, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x460, 4)]
[(ram, 0x4c76c8, 8) COPY (ram, 0x4c76c8, 8), (ram, 0x4c76c8, 8) INDIRECT (register, 0x0, 8) , (const, 0x460, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c76c8, 8) COPY (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
