[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45e3e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000457, 8), (unique, 0x10000457, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x45e3e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000045f, 8), (unique, 0x1000045f, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8)]
[(register, 0xb8, 8) CAST (unique, 0x1000047f, 8), (unique, 0x1000047f, 8) INT_XOR (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000477, 8), (unique, 0x10000477, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xb8, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x1000046f, 8) , (const, 0x2f, 4), (unique, 0x1000046f, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x10000467, 8) , (const, 0x11, 4), (unique, 0x10000467, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x45e76f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45e90b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x673, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002c4, 8) , (unique, 0x100002b4, 8) , (const, 0x1a4, 4) , (unique, 0x10000304, 8), (unique, 0x10000304, 8) COPY (const, 0x49f8a0, 8), (unique, 0x100002c4, 8) COPY (const, 0x49f46e, 8), (unique, 0x100002b4, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000487, 8), (unique, 0x10000487, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45e570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000048f, 8), (unique, 0x1000048f, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x665, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x631, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x665, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x631, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x665, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x631, 4)]
[(register, 0x0, 4) CALLIND (stack, 0xffffffffffffff80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (stack, 0x8, 4) , (stack, 0x10, 4)]
[ ---  BRANCH (ram, 0x45e570, 1)]
[(unique, 0x1000039f, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x45e3fe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(unique, 0x100003a7, 8) COPY (register, 0x30, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000497, 8), (unique, 0x10000497, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000039f, 8) , (unique, 0x100003a7, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000049f, 8), (unique, 0x1000049f, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45e5a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45e413, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x7, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004a7, 8), (unique, 0x100004a7, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45e8a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x5fa, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002bc, 8) , (unique, 0x1000029c, 8) , (const, 0x234, 4) , (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) COPY (const, 0x49f8a0, 8), (unique, 0x100002bc, 8) COPY (const, 0x49f46e, 8), (unique, 0x1000029c, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100003df, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100004b7, 4), (unique, 0x100004b7, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x45e753, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004af, 8), (unique, 0x100004af, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45e622, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000012c, 4) , (const, 0x0, 4), (unique, 0x1000012c, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004bb, 8), (unique, 0x100004bb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100004cb, 8), (unique, 0x100004cb, 8) INT_ADD (unique, 0x100004c3, 8) , (unique, 0x1000033c, 8), (unique, 0x100004c3, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000033c, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45e750, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e622, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004d3, 8), (unique, 0x100004d3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbb00, 1), (unique, 0x3a00, 8) CAST (unique, 0x100004e3, 8), (unique, 0x100004e3, 8) INT_ADD (unique, 0x100004db, 8) , (unique, 0x10000344, 8), (unique, 0x100004db, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000344, 8) INT_ADD (register, 0x10, 8) , (const, 0x5, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e753, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e622, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003df, 8) , (register, 0x10, 8) , (unique, 0x3100, 8)]
[(register, 0xa8, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_OR (register, 0x10, 4) , (register, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4)]
[ ---  BRANCH (ram, 0x45e570, 1)]
[ ---  CBRANCH (ram, 0x45e622, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100004eb, 8), (unique, 0x100004eb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x100004fb, 8), (unique, 0x100004fb, 8) INT_ADD (unique, 0x100004f3, 8) , (const, 0x7, 8), (unique, 0x100004f3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000050b, 8), (unique, 0x1000050b, 8) INT_ADD (unique, 0x10000503, 8) , (const, 0x7, 8), (unique, 0x10000503, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000051b, 8), (unique, 0x1000051b, 8) INT_ADD (unique, 0x10000513, 8) , (const, 0x6, 8), (unique, 0x10000513, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000052b, 8), (unique, 0x1000052b, 8) INT_ADD (unique, 0x10000523, 8) , (const, 0x5, 8), (unique, 0x10000523, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000533, 8), (unique, 0x10000533, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100003ef, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x45e420, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100003e7, 8) , (unique, 0x100003ef, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000053b, 8), (unique, 0x1000053b, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45e43e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000038f, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000a6, 8) , (const, 0x1, 8), (unique, 0x100000a6, 8) INT_2COMP (unique, 0x1000054b, 8), (unique, 0x1000054b, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x45e456, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (unique, 0x10000553, 8) , (unique, 0x1000055b, 8), (unique, 0x1000055b, 8) CAST (register, 0x8, 8), (unique, 0x10000553, 8) CAST (register, 0x90, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000a6, 8) , (const, 0x1, 8), (unique, 0x100000a6, 8) INT_2COMP (unique, 0x1000054b, 8), (unique, 0x1000054b, 8) CAST (register, 0x18, 8), (register, 0x90, 8) PTRADD (register, 0x8, 8) , (unique, 0x1000009e, 8) , (const, 0x1, 8), (unique, 0x1000009e, 8) INT_2COMP (unique, 0x10000543, 8), (unique, 0x10000543, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x10000397, 8) COPY (register, 0x90, 8)]
[(unique, 0x100003bf, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (unique, 0x10000397, 8)]
[ ---  CBRANCH (ram, 0x45e461, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x10000563, 8), (unique, 0x10000563, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000038f, 8) , (unique, 0x10000397, 8)]
[(unique, 0x100003c7, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000387, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000042f, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x45e658, 1) , (unique, 0x13280, 1), (unique, 0x13280, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_SRIGHT (unique, 0x1000056b, 8) , (const, 0x2, 4), (unique, 0x1000056b, 8) CAST (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003bf, 8) , (unique, 0x100003c7, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000057b, 8) , (register, 0x10, 4), (unique, 0x1000057b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000573, 8), (unique, 0x10000573, 8) CAST (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45e470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000037f, 8) COPY (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(unique, 0x10000427, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000427, 8) , (unique, 0x1000042f, 8)]
[(register, 0xa8, 4) COPY (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000583, 8), (unique, 0x10000583, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000037f, 8) , (unique, 0x10000387, 8)]
[ ---  CBRANCH (ram, 0x45e4b6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000037f, 8) , (unique, 0x10000387, 8)]
[(register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x7, 4), (register, 0xa8, 4) INT_AND (unique, 0x100000d4, 4) , (const, 0xfffffffe, 4), (unique, 0x100000d4, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x45e668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x45e570, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000593, 8), (unique, 0x10000593, 8) INT_ADD (unique, 0x1000058b, 8) , (const, 0x14, 8), (unique, 0x1000058b, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45e675, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000059b, 8), (unique, 0x1000059b, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0xb0, 8)]
[(unique, 0x10000437, 4) COPY (register, 0xa8, 4)]
[ ---  BRANCH (ram, 0x45e55b, 1)]
[(unique, 0x1000043b, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x45e556, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0xb0, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x216, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x23a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x216, 4), (unique, 0xbd80, 8) CAST (unique, 0x100005a3, 8), (unique, 0x100005a3, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x216, 4)]
[ ---  CBRANCH (ram, 0x45e550, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0xb0, 8) , (const, 0x0, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (stack, 0x10, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0x1000043f, 4) COPY (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x45e546, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x45e683, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0xb0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x45e68d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x45e713, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (stack, 0xffffffffffffff88, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x100005b3, 8), (unique, 0x100005b3, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x8, 8) PTRADD (register, 0xb0, 8) , (unique, 0x1000019e, 8) , (const, 0x1, 8), (unique, 0x1000019e, 8) INT_2COMP (unique, 0x100005ab, 8), (unique, 0x100005ab, 8) CAST (stack, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x45e53e, 1)]
[(unique, 0x10000417, 8) COPY (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x45e6a4, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESSEQUAL (unique, 0x100005c3, 8) , (unique, 0x100005cb, 8), (unique, 0x100005cb, 8) CAST (register, 0x90, 8), (unique, 0x100005c3, 8) CAST (register, 0x38, 8), (register, 0x38, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000160, 8) , (const, 0x1, 8), (unique, 0x10000160, 8) INT_2COMP (unique, 0x100005bb, 8), (unique, 0x100005bb, 8) CAST (register, 0x18, 8)]
[(unique, 0x1000041f, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000407, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000417, 8) , (unique, 0x1000041f, 8)]
[ ---  CBRANCH (ram, 0x45e6af, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100005d3, 8), (unique, 0x100005d3, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000417, 8) , (unique, 0x1000041f, 8)]
[(unique, 0x1000040f, 8) COPY (register, 0xb0, 8)]
[(unique, 0x100003d7, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x45e890, 1) , (unique, 0x13280, 1), (unique, 0x13280, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_SRIGHT (unique, 0x100005db, 8) , (const, 0x2, 4), (unique, 0x100005db, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000407, 8) , (unique, 0x1000040f, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005eb, 8) , (register, 0x8, 4), (unique, 0x100005eb, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x8, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005e3, 8), (unique, 0x100005e3, 8) CAST (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x45e6c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x28, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3680, 8) , (const, 0x1, 8), (unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[(unique, 0x100003cf, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x18, 8) , (unique, 0x3680, 8) , (const, 0x1, 8), (unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100003cf, 8) , (unique, 0x100003d7, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100005f3, 8), (unique, 0x100005f3, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45e726, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45e726, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e8ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4c7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4c7, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002dc, 8) , (unique, 0x10000294, 8) , (const, 0x2eb, 4) , (unique, 0x100002e4, 8), (unique, 0x100002e4, 8) COPY (const, 0x49f8a0, 8), (unique, 0x100002dc, 8) COPY (const, 0x49f500, 8), (unique, 0x10000294, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45e8ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4b3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4b3, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002cc, 8) , (unique, 0x100002ac, 8) , (const, 0x2ea, 4) , (unique, 0x100002fc, 8), (unique, 0x100002fc, 8) COPY (const, 0x49f8a0, 8), (unique, 0x100002cc, 8) COPY (const, 0x49f482, 8), (unique, 0x100002ac, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x45e53e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000603, 8), (unique, 0x10000603, 8) INT_ADD (unique, 0x100005fb, 8) , (const, 0x14, 8), (unique, 0x100005fb, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x45e53e, 1)]
[(unique, 0x10000443, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45e89c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) MULTIEQUAL (unique, 0x10000437, 4) , (unique, 0x1000043b, 4) , (unique, 0x1000043f, 4) , (unique, 0x10000443, 4)]
[ ---  CBRANCH (ram, 0x45e570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45e7d5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x7, 4)]
[ ---  CBRANCH (ram, 0x45e8cd, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x3, 8) , (unique, 0x1000061b, 8), (unique, 0x1000061b, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x8, 8) , (unique, 0x10000206, 8) , (const, 0x1, 8), (unique, 0x10000206, 8) INT_2COMP (unique, 0x10000613, 8), (unique, 0x10000613, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000060b, 8), (unique, 0x1000060b, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3ae, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ae, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x100002d4, 8) , (unique, 0x100002a4, 8) , (const, 0x31e, 4) , (unique, 0x100002f4, 8), (unique, 0x100002f4, 8) COPY (const, 0x49f8a0, 8), (unique, 0x100002d4, 8) COPY (const, 0x49f493, 8), (unique, 0x100002a4, 8) COPY (const, 0x49f45a, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000623, 8), (unique, 0x10000623, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x45e898, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x45e87c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000062b, 8), (unique, 0x1000062b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000633, 8) , (unique, 0xbb00, 1), (unique, 0x10000633, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x45e875, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000063b, 8), (unique, 0x1000063b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000064b, 8), (unique, 0x1000064b, 8) INT_ADD (unique, 0x10000643, 8) , (const, 0x5, 8), (unique, 0x10000643, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e875, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000653, 8), (unique, 0x10000653, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x10000663, 8), (unique, 0x10000663, 8) INT_ADD (unique, 0x1000065b, 8) , (const, 0x6, 8), (unique, 0x1000065b, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e875, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x1000066b, 8), (unique, 0x1000066b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000067b, 8), (unique, 0x1000067b, 8) INT_ADD (unique, 0x10000673, 8) , (const, 0x7, 8), (unique, 0x10000673, 8) CAST (unique, 0xbd80, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e875, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000683, 8), (unique, 0x10000683, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000068b, 8) , (unique, 0xbb00, 1), (unique, 0x1000068b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e875, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x100003af, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100003f7, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000069b, 8), (unique, 0x1000069b, 8) INT_ADD (unique, 0x10000693, 8) , (const, 0x9, 8), (unique, 0x10000693, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x100006a3, 8), (unique, 0x100006a3, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003af, 8) , (unique, 0x100003b7, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003af, 8) , (unique, 0x100003b7, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100003f7, 8) , (unique, 0x100003ff, 8)]
[(unique, 0x100003b7, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003af, 8) , (unique, 0x100003b7, 8)]
[(unique, 0x100003ff, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100003f7, 8) , (unique, 0x100003ff, 8)]
[ ---  CBRANCH (ram, 0x45e85d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100003af, 8) , (unique, 0x100003b7, 8)]
[(register, 0x30, 4) INT_SUB (unique, 0x10000272, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x10000272, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4)]
[(register, 0xa8, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffff8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x45e570, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x45e8c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006ab, 8), (unique, 0x100006ab, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0xa8, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2b5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b5, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100003e7, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100006b3, 8), (unique, 0x100006b3, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x45e420, 1)]
