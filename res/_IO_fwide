[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000116, 8), (unique, 0x10000116, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x41a920, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41a8ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x41a8ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41a938, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) CAST (unique, 0x1000012e, 8), (unique, 0x1000012e, 8) INT_ADD (register, 0x38, 8) , (const, 0x98, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000126, 8), (unique, 0x10000126, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000126, 8), (unique, 0x10000126, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000126, 8), (unique, 0x10000126, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000126, 8), (unique, 0x10000126, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000013e, 8), (unique, 0x1000013e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000136, 8), (unique, 0x10000136, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x88, 4)]
[ ---  CALL (ram, 0x454130, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x41aa20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x88, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xe4, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000086, 8) , (unique, 0x1000007e, 8) , (const, 0x50, 4) , (unique, 0x1000009e, 8), (unique, 0x1000009e, 8) COPY (const, 0x49ae70, 8), (unique, 0x10000086, 8) COPY (const, 0x49ae3e, 8), (unique, 0x1000007e, 8) COPY (const, 0x49ae34, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x41aa01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xdb, 4)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x1000008e, 8) , (unique, 0x10000076, 8) , (const, 0x51, 4) , (unique, 0x10000096, 8), (unique, 0x10000096, 8) COPY (const, 0x49ae70, 8), (unique, 0x1000008e, 8) COPY (const, 0x49ae54, 8), (unique, 0x10000076, 8) COPY (const, 0x49ae34, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x1, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000146, 8) , (const, 0x1, 4), (unique, 0x10000146, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x11, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x14, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0x9, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x17, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x12, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015e, 8) , (const, 0x1, 4), (unique, 0x1000015e, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x18, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x19, 8) , (const, 0x8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x58, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000156, 8), (unique, 0x10000156, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xe0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000014e, 8), (unique, 0x1000014e, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x41a929, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 4), (unique, 0x3200, 8) CAST (unique, 0x1000016e, 8), (unique, 0x1000016e, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x41a8ff, 1)]
[ ---  CBRANCH (ram, 0x41a9fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000176, 8), (unique, 0x10000176, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x66, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
