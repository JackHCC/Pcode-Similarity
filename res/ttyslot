[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x19, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1ff457, 8)]
[ ---  CBRANCH (ram, 0x1ff467, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x1cd4f0, 8) , (const, 0x48, 4)]
[(register, 0xa0, 8) COPY (const, 0x20, 8)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x3800, 8) PTRADD (unique, 0x100000cc, 8) , (unique, 0x10000080, 8) , (const, 0x1, 8), (unique, 0x100000cc, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000080, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1e, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff47f, 8), (register, 0x20, 8) CAST (unique, 0x10000218, 8), (unique, 0x10000218, 8) INT_ADD (unique, 0x10000210, 8) , (unique, 0x10000080, 8), (unique, 0x10000210, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8), (unique, 0x10000080, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1e, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x4a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x49, 4)]
[ ---  CALL (ram, 0x1feec0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff490, 8), (register, 0x20, 8) CAST (unique, 0x10000228, 8), (unique, 0x10000228, 8) INT_ADD (unique, 0x10000220, 8) , (unique, 0x10000080, 8), (unique, 0x10000220, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x5a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x59, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x1ff4b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f7dc0, 8) , (register, 0x18, 4) , (unique, 0x3800, 8) , (register, 0xa0, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff4c2, 8), (register, 0x20, 8) CAST (unique, 0x10000238, 8), (unique, 0x10000238, 8) INT_ADD (unique, 0x10000230, 8) , (unique, 0x10000080, 8), (unique, 0x10000230, 8) CAST (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x99, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x98, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18c9d0, 8) , (unique, 0x3800, 8) , (const, 0x2f, 4)]
[(unique, 0x10000200, 8) COPY (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x1ff4cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18c9d0, 8) , (unique, 0x3800, 8) , (const, 0x2f, 4)]
[(unique, 0x10000208, 8) COPY (unique, 0x3100, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100001f8, 8) , (unique, 0x10000200, 8) , (unique, 0x10000208, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff4e7, 8), (register, 0x20, 8) CAST (unique, 0x10000248, 8), (unique, 0x10000248, 8) INT_ADD (unique, 0x10000240, 8) , (unique, 0x10000080, 8), (unique, 0x10000240, 8) CAST (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x1ff4d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000250, 8), (unique, 0x10000250, 8) CALL (ram, 0x1fee70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff4db, 8), (register, 0x20, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) INT_ADD (unique, 0x10000258, 8) , (unique, 0x10000080, 8), (unique, 0x10000258, 8) CAST (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xbe, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xbd, 4)]
[ ---  CBRANCH (ram, 0x1ff4f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (unique, 0xbd80, 8) , (register, 0xa8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff4f5, 8), (register, 0x20, 8) CAST (unique, 0x10000270, 8), (unique, 0x10000270, 8) INT_ADD (unique, 0x10000268, 8) , (unique, 0x10000080, 8), (unique, 0x10000268, 8) CAST (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd5, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd4, 4)]
[ ---  CALL (ram, 0x1fef20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x18, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(unique, 0x100001f8, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1ff483, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x3, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x1ff4a1, 8), (register, 0x20, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000280, 8) INT_ADD (unique, 0x10000278, 8) , (unique, 0x10000080, 8), (unique, 0x10000278, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x7c, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x7b, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x1fef20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
