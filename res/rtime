[ ---  CBRANCH (ram, 0x230160, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a8, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1a8, 4)]
[ ---  CBRANCH (ram, 0x230038, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x1, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2500, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001c6, 8) , (const, 0x2, 2), (unique, 0x100001c6, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c2, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1c2, 4)]
[(unique, 0x100001e1, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1bc, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ba, 4)]
[ ---  CBRANCH (ram, 0x23020c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207860, 8) , (register, 0x0, 4) , (unique, 0x100001f5, 8) , (const, 0x10, 4), (unique, 0x100001f5, 8) CAST (register, 0x38, 8)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1fe, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000205, 8) , (unique, 0xbc80, 4), (unique, 0x10000205, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001e1, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fa, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001fd, 8), (unique, 0x100001fd, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x23003d, 1)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1e1, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1d4, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ed, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000215, 8) , (unique, 0xbc80, 4), (unique, 0x10000215, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001e9, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100001e9, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d4, 4)]
[ ---  CBRANCH (ram, 0x230125, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000014c, 4), (unique, 0x1000014c, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x1f69a0, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x4, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x36, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x36, 4)]
[ ---  CBRANCH (ram, 0x230050, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x2, 4) , (const, 0x2, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2500, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017e, 8) , (const, 0x2, 2), (unique, 0x1000017e, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x78, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x78, 4)]
[(unique, 0x100001d9, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x78, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6f, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x63, 4)]
[ ---  CBRANCH (ram, 0x23023a, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x207c20, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x4, 8) , (const, 0x0, 4) , (unique, 0x1000021d, 8) , (const, 0x10, 4), (unique, 0x1000021d, 8) CAST (register, 0x38, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x198, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x194, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000022d, 8) , (unique, 0xbc80, 4), (unique, 0x1000022d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x194, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000225, 8), (unique, 0x10000225, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x23003d, 1)]
[(stack, 0xffffffffffffffac, 2) COPY (const, 0x1, 2)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (unique, 0x10000144, 4), (unique, 0x10000144, 4) INT_DIV (unique, 0xbc80, 4) , (const, 0x3e8, 4), (register, 0x28, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x3e8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x100001f1, 4) COPY (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x2300ca, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xdc, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xdc, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xdc, 4), (stack, 0xffffffffffffffa8, 4) MULTIEQUAL (unique, 0x100001f1, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffac, 2) INDIRECT (stack, 0xffffffffffffffac, 2) , (const, 0xdc, 4), (stack, 0xffffffffffffffac, 2) MULTIEQUAL (stack, 0xffffffffffffffac, 2) , (stack, 0xffffffffffffffac, 2)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fae60, 8) , (unique, 0x3800, 8) , (const, 0x1, 8) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x2300c0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fae60, 8) , (unique, 0x3800, 8) , (const, 0x1, 8) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x23022c, 1) , (register, 0x206, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000235, 8) , (const, 0x6e, 4), (unique, 0x10000235, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x28, 4) COPY (const, 0x6e, 4)]
[ ---  BRANCH (ram, 0x2301e3, 1)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x10b, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x10b, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xff, 4), (stack, 0xffffffffffffffa4, 4) COPY (const, 0x10, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x10b, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xff, 4)]
[(stack, 0xffffffffffffffac, 2) INDIRECT (stack, 0xffffffffffffffac, 2) , (const, 0x10b, 4), (stack, 0xffffffffffffffac, 2) INDIRECT (stack, 0xffffffffffffffac, 2) , (const, 0xff, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x117, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000245, 8) , (unique, 0xbc80, 4), (unique, 0x10000245, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10b, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4)]
[ ---  CBRANCH (ram, 0x230038, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000154, 4) , (const, 0x0, 4), (unique, 0x10000154, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x207a40, 8) , (register, 0x0, 4) , (unique, 0x3800, 8) , (const, 0x4, 8) , (const, 0x0, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001d9, 8) , (unique, 0x100001e9, 8)]
[ ---  CBRANCH (ram, 0x230200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000015c, 4) , (const, 0x4, 4), (unique, 0x1000015c, 4) MULTIEQUAL (unique, 0x10000154, 4) , (unique, 0x1000014c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001b6, 8) , (register, 0x0, 4), (unique, 0x100001b6, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x7c558180, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffa0, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffa0, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffa0, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffa0, 4) , (const, 0x18, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x142, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12a, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x167, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024d, 8) , (const, 0x5, 4), (unique, 0x1000024d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x18, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x230038, 1)]
[ ---  CBRANCH (ram, 0x2301e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000255, 8), (unique, 0x10000255, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x172, 4)]
[(stack, 0xffffffffffffffac, 2) INDIRECT (stack, 0xffffffffffffffac, 2) , (const, 0x172, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x175, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x172, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000265, 8) , (register, 0x28, 4), (unique, 0x10000265, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001d9, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x172, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x23003d, 1)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
