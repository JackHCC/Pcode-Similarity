[(unique, 0x10000259, 4) COPY (ram, 0x4c8790, 4)]
[ ---  CBRANCH (ram, 0x17aae4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000305, 8), (unique, 0x10000305, 8) CAST (register, 0x38, 8)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x17ab50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8790, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2fb, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2fb, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x2fb, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2fb, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2fb, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2fb, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x2fb, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2fb, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x1000014e, 8) , (const, 0x0, 8), (unique, 0x1000014e, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8), (register, 0x0, 8) CAST (unique, 0x10000315, 8), (unique, 0x10000315, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8750, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8750, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x17a934, 1)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc8, 8) PTRSUB (const, 0x0, 8) , (const, 0x17a860, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x100002ad, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17a98c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c5768, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000031d, 8), (unique, 0x1000031d, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[ ---  CBRANCH (ram, 0x17a962, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002c5, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5760, 4) , (const, 0x0, 4)]
[(ram, 0x4c5760, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002b5, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x17a985, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2b3, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2b3, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x2b3, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2b3, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2b3, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2b3, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x2b3, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2b3, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x100002bd, 8) COPY (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x2b3, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (unique, 0x100002ad, 8) , (unique, 0x100002b5, 8) , (unique, 0x100002bd, 8) , (unique, 0x100002c5, 8)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4c5764, 4) , (const, 0x1, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x100002f5, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x17ab30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000265, 8) COPY (unique, 0x10000325, 8), (unique, 0x10000325, 8) CAST (ram, 0x4c4520, 8)]
[ ---  CBRANCH (ram, 0x17aa1c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4520, 8) , (const, 0x0, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x2a5, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x2a5, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x2a5, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x2a5, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x2a5, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x2a5, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x2a5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2a5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff7f, 4)]
[ ---  BRANCH (ram, 0x17aa7d, 1)]
[ ---  CBRANCH (ram, 0x17aa03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000335, 8), (unique, 0x10000335, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000032d, 8), (unique, 0x1000032d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17a9dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x28d, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100002f5, 8) , (const, 0x28d, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x28d, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x28d, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x28d, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x28d, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x28d, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x28d, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x28d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x28d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xb6, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100002f5, 8) , (const, 0xb6, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xb6, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xb6, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0xb6, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xb6, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xb6, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xb6, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xb6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xb6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17a9f8, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x270, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x270, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x270, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100002f5, 8) , (const, 0x270, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x270, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x270, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x270, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x270, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x270, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x270, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x270, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x270, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x270, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x270, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xbf, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbf, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xbf, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xbf, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xbf, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbf, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xbf, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xbf, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xbf, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xbf, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000034d, 8) , (register, 0x80, 8), (unique, 0x1000034d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000345, 8), (unique, 0x10000345, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0xcb, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xcb, 4), (ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x100002f5, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0xcb, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0xcb, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0xcb, 4), (ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xcb, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0xcb, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0xcb, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0xcb, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xcb, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000025d, 8) COPY (unique, 0x10000251, 8), (unique, 0x10000251, 8) COPY (unique, 0x10000355, 8), (unique, 0x10000355, 8) CAST (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[ ---  CBRANCH (ram, 0x17aa55, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000251, 8) , (const, 0x0, 8), (unique, 0x10000251, 8) COPY (unique, 0x10000355, 8), (unique, 0x10000355, 8) CAST (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (register, 0x10, 4)]
[(ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (unique, 0x100002f5, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17abc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x1000025d, 8) , (unique, 0x10000265, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(ram, 0x4c5758, 4) INT_ADD (ram, 0x4c5758, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x17aa55, 1)]
[(unique, 0x100002cd, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000365, 8), (unique, 0x10000365, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(unique, 0x100002e5, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000248, 8) MULTIEQUAL (unique, 0x100002e5, 8) , (unique, 0x100002ed, 8)]
[ ---  CBRANCH (ram, 0x17aa55, 1) , (unique, 0x10000247, 1), (unique, 0x10000247, 1) INT_NOTEQUAL (unique, 0x1000023f, 8) , (const, 0x0, 8), (unique, 0x1000023f, 8) COPY (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) MULTIEQUAL (unique, 0x100002cd, 8) , (unique, 0x100002d5, 8)]
[ ---  CBRANCH (ram, 0x17aa4c, 1) , (unique, 0x10000233, 1), (unique, 0x10000233, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x1000023f, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x11e, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x11e, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x11e, 4), (ram, 0x4c5758, 4) INT_ADD (ram, 0x4c5758, 4) , (const, 0x1, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x11e, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x11e, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x11e, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x11e, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x11e, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x11e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x11e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000375, 8) , (unique, 0xbd80, 8), (unique, 0x10000375, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x8, 8) PTRADD (unique, 0x10000248, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17aa55, 1)]
[(unique, 0x100002ed, 8) COPY (unique, 0x1000023f, 8)]
[(unique, 0x100002d5, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000023f, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x133, 4), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x133, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x133, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x133, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x133, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x133, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x133, 4), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x133, 4), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x133, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x133, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff7f, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x17ab22, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x152, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x152, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x152, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x152, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x152, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x152, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x152, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x152, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x152, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x152, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000385, 8), (unique, 0x10000385, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17aaf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000385, 8), (unique, 0x10000385, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1ef, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1ef, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1ef, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1ef, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1ef, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000038d, 8) , (const, 0x0, 8), (unique, 0x1000038d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x17ab08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ef, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x229, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x229, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x229, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x229, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x229, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x229, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x229, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x229, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x229, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x229, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1ff, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1ff, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1ff, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1ff, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1ff, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100001e7, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(unique, 0x100001ef, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100001f7, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(unique, 0x100001fb, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(unique, 0x100001ff, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(unique, 0x10000203, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x1000020b, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(unique, 0x10000213, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(unique, 0x1000021b, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(unique, 0x1000021f, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x17ab22, 1) , (unique, 0x100001e6, 1), (unique, 0x100001e6, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21b, 4)]
[(ram, 0x4c4520, 8) INDIRECT (unique, 0x100001e7, 8) , (const, 0x21b, 4)]
[(ram, 0x4c5750, 8) INDIRECT (unique, 0x100001ef, 8) , (const, 0x21b, 4)]
[(ram, 0x4c5758, 4) INDIRECT (unique, 0x100001f7, 4) , (const, 0x21b, 4)]
[(ram, 0x4c5760, 4) INDIRECT (unique, 0x100001fb, 4) , (const, 0x21b, 4)]
[(ram, 0x4c5764, 4) INDIRECT (unique, 0x100001ff, 4) , (const, 0x21b, 4)]
[(ram, 0x4c5768, 8) INDIRECT (unique, 0x10000203, 8) , (const, 0x21b, 4)]
[(ram, 0x4c8750, 8) INDIRECT (unique, 0x1000020b, 8) , (const, 0x21b, 4)]
[(ram, 0x4c8758, 8) INDIRECT (unique, 0x10000213, 8) , (const, 0x21b, 4)]
[(ram, 0x4c8790, 4) INDIRECT (unique, 0x1000021b, 4) , (const, 0x21b, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000021f, 4) , (const, 0x21b, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x21b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x21b, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (unique, 0x1000021f, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (unique, 0x1000021b, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (unique, 0x10000213, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (unique, 0x1000020b, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (unique, 0x10000203, 8)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (unique, 0x100001f7, 4)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (unique, 0x100001e7, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5750, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000295, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4) , (unique, 0x100001fb, 4)]
[ ---  CBRANCH (ram, 0x17aad6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (register, 0x10, 4) , (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4) , (unique, 0x100001ff, 4)]
[(ram, 0x4c5768, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17aab4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000029d, 4) COPY (unique, 0x10000223, 4), (unique, 0x10000223, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x17aad6, 1) , (unique, 0x10000227, 1), (unique, 0x10000227, 1) INT_NOTEQUAL (unique, 0x10000223, 4) , (const, 0x0, 4), (unique, 0x10000223, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1da, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1da, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1da, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1da, 4)]
[(ram, 0x4c5764, 4) INDIRECT (register, 0x10, 4) , (const, 0x1da, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1da, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1da, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1da, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1da, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1da, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1da, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1da, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000156, 8), (unique, 0x10000156, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5760, 8)]
[(unique, 0x10000299, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1da, 4), (ram, 0x4c5760, 4) INT_ADD (ram, 0x4c5760, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5764, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c5764, 4) , (register, 0x10, 4)]
[(ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c5760, 4) COPY (unique, 0x100002a1, 4), (unique, 0x100002a1, 4) MULTIEQUAL (unique, 0x10000295, 4) , (unique, 0x10000299, 4) , (unique, 0x1000029d, 4)]
[ ---  CBRANCH (ram, 0x17aba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000259, 4) , (const, 0x0, 4)]
[(ram, 0x4c4520, 8) INDIRECT (ram, 0x4c4520, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c5758, 4) INDIRECT (ram, 0x4c5758, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c5760, 4) INDIRECT (ram, 0x4c5760, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c5764, 4) INDIRECT (ram, 0x4c5764, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8750, 8) INDIRECT (ram, 0x4c8750, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8758, 8) INDIRECT (ram, 0x4c8758, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8790, 4) INDIRECT (ram, 0x4c8790, 4) , (const, 0x1cc, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1cc, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x1cc, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1cc, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000395, 8), (unique, 0x10000395, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8758, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8758, 8) , (const, 0x11, 4)]
[ ---  BRANCH (ram, 0x17aade, 1)]
[(ram, 0x4c4520, 8) COPY (ram, 0x4c4520, 8), (ram, 0x4c4520, 8) MULTIEQUAL (ram, 0x4c4520, 8) , (ram, 0x4c4520, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5758, 4) COPY (ram, 0x4c5758, 4), (ram, 0x4c5758, 4) MULTIEQUAL (ram, 0x4c5758, 4) , (ram, 0x4c5758, 4)]
[(ram, 0x4c5760, 4) COPY (ram, 0x4c5760, 4), (ram, 0x4c5760, 4) MULTIEQUAL (ram, 0x4c5760, 4) , (ram, 0x4c5760, 4)]
[(ram, 0x4c5764, 4) COPY (ram, 0x4c5764, 4), (ram, 0x4c5764, 4) MULTIEQUAL (ram, 0x4c5764, 4) , (ram, 0x4c5764, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c8750, 8) COPY (ram, 0x4c8750, 8), (ram, 0x4c8750, 8) MULTIEQUAL (ram, 0x4c8750, 8) , (ram, 0x4c8750, 8)]
[(ram, 0x4c8758, 8) COPY (ram, 0x4c8758, 8), (ram, 0x4c8758, 8) MULTIEQUAL (ram, 0x4c8758, 8) , (ram, 0x4c8758, 8)]
[(ram, 0x4c8790, 4) COPY (ram, 0x4c8790, 4), (ram, 0x4c8790, 4) MULTIEQUAL (ram, 0x4c8790, 4) , (ram, 0x4c8790, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8)]
