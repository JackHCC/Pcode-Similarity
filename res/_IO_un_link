[(unique, 0x1000026d, 4) COPY (ram, 0x4f08e8, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000319, 8), (unique, 0x10000319, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18d7d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000321, 8), (unique, 0x10000321, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18d858, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8)]
[ ---  BRANCH (ram, 0x18d612, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x65, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x65, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x65, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x65, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x65, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x65, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x65, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x65, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x65, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x65, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x65, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x10000162, 8) , (const, 0x0, 8), (unique, 0x10000162, 8) PTRSUB (const, 0x0, 8) , (const, 0x18d510, 8), (register, 0x0, 8) CAST (unique, 0x10000331, 8), (unique, 0x10000331, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000329, 8), (unique, 0x10000329, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x100002c1, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18d66a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4ed8a8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000339, 8), (unique, 0x10000339, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[ ---  CBRANCH (ram, 0x18d640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002d9, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed8a0, 4) , (const, 0x0, 4)]
[(ram, 0x4ed8a0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002c9, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18d663, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ec, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2ec, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x2ec, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2ec, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x2ec, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2ec, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2ec, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2ec, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2ec, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x2ec, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000172, 8), (unique, 0x10000172, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x100002d1, 8) COPY (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x2ec, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (unique, 0x100002c1, 8) , (unique, 0x100002c9, 8) , (unique, 0x100002d1, 8) , (unique, 0x100002d9, 8)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4ed8a4, 4) , (const, 0x1, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x10000309, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18d838, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000279, 8) COPY (unique, 0x10000341, 8), (unique, 0x10000341, 8) CAST (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18d6fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ec660, 8) , (const, 0x0, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2de, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2de, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2de, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2de, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2de, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2de, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2de, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff7f, 4)]
[ ---  BRANCH (ram, 0x18d761, 1)]
[ ---  CBRANCH (ram, 0x18d6ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000359, 8), (unique, 0x10000359, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000351, 8), (unique, 0x10000351, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000349, 8), (unique, 0x10000349, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d6bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2c6, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x10000309, 8) , (const, 0x2c6, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2c6, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x2c6, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2c6, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2c6, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2c6, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2c6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2c6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0xee, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x10000309, 8) , (const, 0xee, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0xee, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0xee, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0xee, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0xee, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0xee, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xee, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xee, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x18d6d6, 1)]
[(register, 0x80, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2a9, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a9, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x2a9, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x10000309, 8) , (const, 0x2a9, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x2a9, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x2a9, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x2a9, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x2a9, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x2a9, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2a9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2a9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a9, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x2a9, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0xfc, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0xfc, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0xfc, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0xfc, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0xfc, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0xfc, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0xfc, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xfc, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xfc, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000369, 8) , (register, 0x80, 8), (unique, 0x10000369, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000361, 8), (unique, 0x10000361, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x10f, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x10f, 4), (ram, 0x4ed890, 8) MULTIEQUAL (unique, 0x10000309, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x10f, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x10f, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x10f, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x10f, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x10f, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x10f, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10f, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000271, 8) COPY (unique, 0x10000265, 8), (unique, 0x10000265, 8) COPY (unique, 0x10000371, 8), (unique, 0x10000371, 8) CAST (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18d735, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000265, 8) , (const, 0x0, 8), (unique, 0x10000265, 8) COPY (unique, 0x10000371, 8), (unique, 0x10000371, 8) CAST (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (register, 0x10, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (unique, 0x10000309, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x18d878, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000271, 8) , (unique, 0x10000279, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000379, 8), (unique, 0x10000379, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18d735, 1)]
[(unique, 0x100002e1, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000381, 8), (unique, 0x10000381, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(unique, 0x100002f9, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000025c, 8) MULTIEQUAL (unique, 0x100002f9, 8) , (unique, 0x10000301, 8)]
[ ---  CBRANCH (ram, 0x18d735, 1) , (unique, 0x1000025b, 1), (unique, 0x1000025b, 1) INT_NOTEQUAL (unique, 0x10000253, 8) , (const, 0x0, 8), (unique, 0x10000253, 8) COPY (unique, 0x100002f1, 8), (unique, 0x100002f1, 8) MULTIEQUAL (unique, 0x100002e1, 8) , (unique, 0x100002e9, 8)]
[ ---  CBRANCH (ram, 0x18d72c, 1) , (unique, 0x10000244, 1), (unique, 0x10000244, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x10000253, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x14d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x14d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x14d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x14d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x14d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x14d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x14d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x14d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x14d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000391, 8) , (unique, 0xbd80, 8), (unique, 0x10000391, 8) CAST (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000389, 8), (unique, 0x10000389, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x8, 8) PTRADD (unique, 0x1000025c, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x18d735, 1)]
[(unique, 0x10000301, 8) COPY (unique, 0x10000253, 8)]
[(unique, 0x100002e9, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000399, 8), (unique, 0x10000399, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000253, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x162, 4), (ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x162, 4), (ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x162, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x162, 4), (ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x162, 4), (ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x162, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x162, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x162, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x162, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff7f, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x18d82a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x181, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x181, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x181, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x181, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x181, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x181, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x181, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x181, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x181, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d7f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003a1, 8), (unique, 0x100003a1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x231, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x231, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x231, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x231, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x231, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x231, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x231, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x231, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a9, 8) , (const, 0x0, 8), (unique, 0x100003a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x18d810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x231, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x26b, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x26b, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x26b, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x26b, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x26b, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x26b, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x26b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x26b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x26b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x241, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x241, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x241, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x241, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x241, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x241, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x241, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x241, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x241, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100001fb, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(unique, 0x10000203, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(unique, 0x1000020b, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(unique, 0x1000020f, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(unique, 0x10000213, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(unique, 0x1000021b, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(unique, 0x10000223, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(unique, 0x1000022b, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x1000022f, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x18d82a, 1) , (unique, 0x100001fa, 1), (unique, 0x100001fa, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25d, 4)]
[(ram, 0x4ec660, 8) INDIRECT (unique, 0x100001fb, 8) , (const, 0x25d, 4)]
[(ram, 0x4ed890, 8) INDIRECT (unique, 0x10000203, 8) , (const, 0x25d, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (unique, 0x1000020b, 4) , (const, 0x25d, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (unique, 0x1000020f, 4) , (const, 0x25d, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (unique, 0x10000213, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (unique, 0x1000021b, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (unique, 0x10000223, 8) , (const, 0x25d, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x1000022b, 4) , (const, 0x25d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000022f, 4) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x25d, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x1000022f, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (unique, 0x1000022b, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (unique, 0x10000223, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (unique, 0x1000021b, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (unique, 0x10000213, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (unique, 0x100001fb, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed890, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002a9, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (unique, 0x1000020b, 4)]
[ ---  CBRANCH (ram, 0x18d7ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (register, 0x10, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (unique, 0x1000020f, 4)]
[(ram, 0x4ed8a8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18d798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100002b1, 4) COPY (unique, 0x10000233, 4), (unique, 0x10000233, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x18d7ba, 1) , (unique, 0x10000237, 1), (unique, 0x10000237, 1) INT_NOTEQUAL (unique, 0x10000233, 4) , (const, 0x0, 4), (unique, 0x10000233, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21c, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x21c, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x21c, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (register, 0x10, 4) , (const, 0x21c, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x21c, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x21c, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x21c, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x21c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x21c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x21c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x21c, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed8a0, 8)]
[(unique, 0x100002ad, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x21c, 4), (ram, 0x4ed8a0, 4) INT_ADD (ram, 0x4ed8a0, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4ed8a4, 4) , (register, 0x10, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed8a0, 4) COPY (unique, 0x100002b5, 4), (unique, 0x100002b5, 4) MULTIEQUAL (unique, 0x100002a9, 4) , (unique, 0x100002ad, 4) , (unique, 0x100002b1, 4)]
[ ---  CBRANCH (ram, 0x18d7d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000026d, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ea, 4)]
[(ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x1ea, 4)]
[(ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x1ea, 4)]
[(ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x1ea, 4)]
[(ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x1ea, 4)]
[(ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x1ea, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1ea, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1ea, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1ea, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1ea, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ea, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ea, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1ea, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b9, 8), (unique, 0x100003b9, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003b1, 8), (unique, 0x100003b1, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed8a8, 8) MULTIEQUAL (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8) , (ram, 0x4ed8a8, 8)]
[(ram, 0x4ed8a4, 4) MULTIEQUAL (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4) , (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a0, 4) MULTIEQUAL (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4) , (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed890, 8) MULTIEQUAL (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8) , (ram, 0x4ed890, 8)]
[(ram, 0x4ec660, 8) MULTIEQUAL (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8) , (ram, 0x4ec660, 8)]
[ ---  CBRANCH (ram, 0x18d8a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003c1, 8), (unique, 0x100003c1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x20d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20d, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x20d, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8), (ram, 0x4ec660, 8) INDIRECT (ram, 0x4ec660, 8) , (const, 0x20d, 4)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8), (ram, 0x4ed890, 8) INDIRECT (ram, 0x4ed890, 8) , (const, 0x20d, 4)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4), (ram, 0x4ed8a0, 4) INDIRECT (ram, 0x4ed8a0, 4) , (const, 0x20d, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4), (ram, 0x4ed8a4, 4) INDIRECT (ram, 0x4ed8a4, 4) , (const, 0x20d, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8), (ram, 0x4ed8a8, 8) INDIRECT (ram, 0x4ed8a8, 8) , (const, 0x20d, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x20d, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x20d, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x20d, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x20d, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ec660, 8) COPY (ram, 0x4ec660, 8)]
[(ram, 0x4ed890, 8) COPY (ram, 0x4ed890, 8)]
[(ram, 0x4ed8a0, 4) COPY (ram, 0x4ed8a0, 4)]
[(ram, 0x4ed8a4, 4) COPY (ram, 0x4ed8a4, 4)]
[(ram, 0x4ed8a8, 8) COPY (ram, 0x4ed8a8, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
