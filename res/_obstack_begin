[ ---  CBRANCH (ram, 0x19cc10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0xfffffffffffffff0, 8)]
[(register, 0xa8, 8) COPY (const, 0xf, 8)]
[(register, 0x0, 4) COPY (const, 0xf, 4)]
[ ---  BRANCH (ram, 0x19cb9c, 1)]
[(register, 0xa0, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_2COMP (register, 0x10, 4)]
[(register, 0xa8, 8) INT_SEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x0, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x3b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100000b4, 8), (unique, 0x100000b4, 8) CAST (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x19cbaa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x30, 4) COPY (const, 0xfe0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000c4, 8) , (unique, 0xba80, 1), (unique, 0x100000c4, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xfe, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000bc, 8), (unique, 0x100000bc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000cc, 8) , (register, 0x0, 4), (unique, 0x100000cc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x67, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x5a, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x57, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x55, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x51, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x45, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100000dc, 8), (unique, 0x100000dc, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100000d4, 8), (unique, 0x100000d4, 8) CALLIND (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x19cbd2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000d4, 8), (unique, 0x100000d4, 8) CALLIND (register, 0x8, 8)]
[(ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x6e, 4)]
[ ---  CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000e4, 8), (unique, 0x100000e4, 8) CAST (ram, 0x4eaf48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_AND (register, 0xa0, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100000ec, 8) , (unique, 0x10000084, 8), (unique, 0x100000ec, 8) CAST (register, 0x0, 8), (unique, 0x10000084, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_AND (register, 0xa0, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100000ec, 8) , (unique, 0x10000084, 8), (unique, 0x100000ec, 8) CAST (register, 0x0, 8), (unique, 0x10000084, 8) INT_ADD (register, 0xa8, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x100000f4, 8), (unique, 0x100000f4, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x100000f4, 8), (unique, 0x100000f4, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000104, 8) , (unique, 0xba80, 1), (unique, 0x10000104, 8) CAST (unique, 0x3100, 8), (unique, 0xba80, 1) INT_AND (unique, 0xba80, 1) , (const, 0xf9, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100000fc, 8), (unique, 0x100000fc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(ram, 0x4eaf48, 8) COPY (ram, 0x4eaf48, 8), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x9b, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x95, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x91, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x8e, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x8c, 4), (ram, 0x4eaf48, 8) INDIRECT (ram, 0x4eaf48, 8) , (const, 0x89, 4), (ram, 0x4eaf48, 8) MULTIEQUAL (ram, 0x4eaf48, 8) , (ram, 0x4eaf48, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
