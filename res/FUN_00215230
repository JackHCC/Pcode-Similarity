[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ef, 8), (unique, 0x100001ef, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x215547, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f7, 8) , (const, 0x16, 4), (unique, 0x100001f7, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x21540a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x47, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x47, 4)]
[(stack, 0xffffffffffffde98, 8) INDIRECT (stack, 0xffffffffffffde98, 8) , (const, 0x47, 4)]
[(stack, 0xffffffffffffdeb0, 4) INDIRECT (stack, 0xffffffffffffdeb0, 4) , (const, 0x47, 4)]
[(stack, 0xffffffffffffdf28, 8) INDIRECT (stack, 0xffffffffffffdf28, 8) , (const, 0x47, 4)]
[(stack, 0xffffffffffffdf40, 4) INDIRECT (stack, 0xffffffffffffdf40, 4) , (const, 0x47, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x47, 4)]
[ ---  CBRANCH (ram, 0x2154d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x38, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffde98, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffde98, 8) INDIRECT (stack, 0xffffffffffffde98, 8) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffdeb0, 4) INDIRECT (stack, 0xffffffffffffdeb0, 4) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffdf28, 8) INDIRECT (stack, 0xffffffffffffdf28, 8) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffdf40, 4) INDIRECT (stack, 0xffffffffffffdf40, 4) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a, 4)]
[ ---  CBRANCH (ram, 0x2154d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x10, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdf28, 8)]
[ ---  CBRANCH (ram, 0x215561, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffdeb0, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x215561, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x4000, 4), (register, 0x10, 4) INT_AND (stack, 0xffffffffffffdf40, 4) , (const, 0xf000, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ff, 8) , (const, 0x15, 4), (unique, 0x100001ff, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2154d0, 1)]
[ ---  CBRANCH (ram, 0x215510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4)]
[ ---  CBRANCH (ram, 0x215510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x8000, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000207, 8) , (const, 0x16, 4), (unique, 0x10000207, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2154d0, 1)]
[ ---  CBRANCH (ram, 0x215520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffde98, 8) , (stack, 0xffffffffffffdf28, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020f, 8) , (const, 0x12, 4), (unique, 0x1000020f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2154d0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcd, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcd, 4)]
[ ---  CBRANCH (ram, 0x2154be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c9, 4) , (const, 0x0, 4), (unique, 0x100000c9, 4) INT_AND (register, 0x0, 4) , (const, 0x400, 4), (register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x10, 4) , (const, 0x3, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x215438, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000217, 8) , (const, 0x0, 8), (unique, 0x10000217, 8) CAST (register, 0x80, 8)]
[(stack, 0xffffffffffffde80, 8) COPY (const, 0x7fffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x215326, 1)]
[(unique, 0x100001e7, 8) COPY (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x215540, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x21540a, 1)]
[(stack, 0xffffffffffffde80, 8) MULTIEQUAL (unique, 0x100001e7, 8) , (stack, 0xffffffffffffde80, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffdfb8, 8)]
[(stack, 0xffffffffffffde90, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffde90, 8) MULTIEQUAL (stack, 0xffffffffffffde90, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001b7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x2000, 8)]
[ ---  CBRANCH (ram, 0x215350, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xffffffffffffde80, 8) , (const, 0x2001, 8), (stack, 0xffffffffffffde80, 8) MULTIEQUAL (stack, 0xffffffffffffde80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100001bf, 8) COPY (stack, 0xffffffffffffde80, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100001b7, 8) , (unique, 0x100001bf, 8)]
[ ---  CBRANCH (ram, 0x215470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2bb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bb, 4)]
[(register, 0x0, 8) CALL (ram, 0x210070, 8) , (register, 0x38, 4) , (unique, 0x3c80, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x21536f, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x116, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x116, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x116, 4)]
[(register, 0x0, 8) CALL (ram, 0x20e620, 8) , (register, 0x38, 4) , (unique, 0x3c80, 8) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (stack, 0xffffffffffffde70, 8), (stack, 0xffffffffffffde70, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x215468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffde70, 8) , (const, 0x0, 8), (stack, 0xffffffffffffde70, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x215530, 1) , (register, 0x207, 1)]
[ ---  CBRANCH (ram, 0x21538e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (stack, 0xffffffffffffde70, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x215450, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3c80, 8) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (unique, 0x3c80, 8) , (stack, 0xffffffffffffde70, 8) , (const, 0x1, 8)]
[(unique, 0x100001cf, 8) COPY (unique, 0x3c80, 8)]
[ ---  CBRANCH (ram, 0x215490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x281, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x281, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x281, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x215498, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210140, 8) , (register, 0x10, 4) , (register, 0xb0, 8) , (unique, 0x10000227, 8), (unique, 0x10000227, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000135, 8) , (const, 0x1, 8), (unique, 0x10000135, 8) INT_2COMP (unique, 0x1000021f, 8), (unique, 0x1000021f, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100001c7, 8) , (unique, 0x100001cf, 8)]
[(unique, 0x100001c7, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215450, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xb0, 8) , (register, 0x28, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2153b8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x20e6d0, 8) , (register, 0x10, 4) , (register, 0xb0, 8) , (unique, 0x10000237, 8) , (unique, 0xbd80, 8), (unique, 0x10000237, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x28, 8) , (unique, 0x100000f5, 8) , (const, 0x1, 8), (unique, 0x100000f5, 8) INT_2COMP (unique, 0x1000022f, 8), (unique, 0x1000022f, 8) CAST (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100001d7, 8) , (unique, 0x100001cf, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001af, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0xb0, 8) INT_SUB (stack, 0xffffffffffffde70, 8) , (unique, 0x10000247, 8), (unique, 0x10000247, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (unique, 0x10000105, 8) , (const, 0x1, 8), (unique, 0x10000105, 8) INT_2COMP (unique, 0x1000023f, 8), (unique, 0x1000023f, 8) CAST (unique, 0x3c80, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x2154e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2153fc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21b, 4)]
[ ---  CALL (ram, 0x210210, 8) , (register, 0x38, 4) , (register, 0x30, 8) , (const, 0x1, 4), (register, 0x30, 8) INT_2COMP (register, 0xb0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x21e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x21b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000257, 8) , (unique, 0xbc80, 4), (unique, 0x10000257, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001af, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21b, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000024f, 8), (unique, 0x1000024f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2153fc, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) PTRADD (register, 0xa0, 8) , (unique, 0x1000025f, 8) , (const, 0x1, 8), (unique, 0x1000025f, 8) CAST (stack, 0xffffffffffffde90, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x100001d7, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x215450, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0x28, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) PTRADD (stack, 0xffffffffffffde90, 8) , (stack, 0xffffffffffffde70, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x21533c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) INT_SUB (stack, 0xffffffffffffde80, 8) , (stack, 0xffffffffffffde70, 8)]
[(unique, 0x1000018a, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000192, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100001a2, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x215468, 1) , (unique, 0x10000189, 1), (unique, 0x10000189, 1) INT_EQUAL (unique, 0x1000019a, 8) , (const, 0x0, 8), (unique, 0x1000019a, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffde90, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000267, 8) , (const, 0x9, 4), (unique, 0x10000267, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x100001a2, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000192, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x1000018a, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x21540a, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x10000192, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000019a, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffde90, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x215574, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000026f, 8), (unique, 0x1000026f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x1000018a, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100001a2, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f4, 4)]
[ ---  RETURN (const, 0x1, 4)]
