[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0x100001e1, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff54, 4) COPY (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x232d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x16a, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x16a, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x16a, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x16a, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x16a, 4)]
[ ---  CBRANCH (ram, 0x232d89, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207ce0, 8) , (const, 0x1, 4) , (const, 0x1, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x182, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x17e, 4)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001f3, 8) , (unique, 0x1000021b, 8) , (const, 0x5, 8), (unique, 0x1000021b, 8) COPY (const, 0x292938, 8), (unique, 0x100001f3, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x182, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x17e, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x182, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x17e, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x182, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x17e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001e0, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x232bc1, 1)]
[(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)]
[(ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(unique, 0x100001df, 1) MULTIEQUAL (unique, 0x100001e1, 1) , (unique, 0x100001e0, 1)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x0, 4)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x1000035d, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(register, 0x8, 8) COPY (const, 0xd, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000035d, 8) , (unique, 0x10000365, 8)]
[ ---  CBRANCH (ram, 0x232bd5, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000037d, 8) , (const, 0x0, 8), (unique, 0x1000037d, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000365, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000375, 8), (unique, 0x10000375, 8) PTRADD (unique, 0x10000263, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10000263, 8) PTRSUB (unique, 0x1000025b, 8) , (const, 0x2, 8), (unique, 0x1000025b, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000024b, 8) , (const, 0x10, 8), (unique, 0x1000024b, 8) INT_2COMP (unique, 0xb880, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x232bd2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000385, 8) , (const, 0x0, 2), (unique, 0x10000385, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000027b, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x1000027b, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000038d, 8) , (const, 0x0, 4), (unique, 0x1000038d, 8) CAST (register, 0x38, 8)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x73, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x69, 4)]
[ ---  CALL (ram, 0x193a40, 8) , (unique, 0x3100, 8) , (register, 0x8, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000116, 4) , (const, 0x1, 4), (unique, 0x10000116, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRSUB (unique, 0x1000031d, 8) , (const, 0x2, 8), (unique, 0x1000031d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x8, 8)]
[ ---  CALL (ram, 0x207830, 8) , (register, 0x28, 4) , (unique, 0x3800, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000116, 4) , (const, 0x3, 4), (unique, 0x10000116, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x8, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x87, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x7f, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x73, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x69, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x87, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x7f, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x73, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x69, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x87, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x7f, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x73, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x69, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x87, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (register, 0x10, 4) , (const, 0x7f, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000116, 4) , (const, 0x3, 4), (unique, 0x10000116, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x87, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x7f, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x73, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x69, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x65, 4), (stack, 0xffffffffffffff58, 2) COPY (const, 0x1, 2)]
[ ---  CBRANCH (ram, 0x232c68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2078f0, 8) , (register, 0x28, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff54, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xd4, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xd4, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xd4, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xd4, 4)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0xd4, 4)]
[ ---  CBRANCH (ram, 0x232c28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x207950, 8) , (register, 0x28, 4) , (const, 0x80, 4)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xe8, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xe3, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xe8, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xe3, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe8, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xe3, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xe8, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xe3, 4)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0xe8, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0xe3, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000039d, 8), (unique, 0x1000039d, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x150, 8)]
[ ---  CBRANCH (ram, 0x232d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000395, 8), (unique, 0x10000395, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x232d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x10000203, 8) , (unique, 0x1000022b, 8) , (register, 0x0, 8), (unique, 0x1000022b, 8) COPY (const, 0x292998, 8), (unique, 0x10000203, 8) COPY (const, 0x28eb09, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001eb, 8) , (unique, 0x10000213, 8) , (const, 0x5, 8), (unique, 0x10000213, 8) COPY (const, 0x28f404, 8), (unique, 0x100001eb, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x150, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x14c, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x148, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x12e, 4)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x150, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x14c, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x148, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x12e, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x150, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x14c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x148, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x12e, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x150, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x14c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x148, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x12e, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x150, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x14c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x148, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x12e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003a5, 8) , (register, 0x0, 8), (unique, 0x100003a5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002ab, 8) , (const, 0x10, 8), (unique, 0x100002ab, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bb, 8) , (register, 0x28, 4), (unique, 0x100002bb, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 4), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ad, 8) , (ram, 0x4c7e20, 8), (unique, 0x100003ad, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000033d, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x1000033d, 8) PTRSUB (unique, 0x100002d3, 8) , (const, 0x8, 8), (unique, 0x100002d3, 8) PTRSUB (register, 0x0, 8) , (const, 0x14, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10f, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10a, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x107, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x103, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b5, 8) , (ram, 0x4c7e28, 8), (unique, 0x100003b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x113, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10f, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10a, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x107, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x103, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (ram, 0x4c7e30, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100002f3, 8) , (const, 0x8, 8), (unique, 0x100002f3, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x117, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x113, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10f, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10a, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x107, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x103, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003bd, 8), (unique, 0x100003bd, 8) CAST (unique, 0x10000233, 8), (unique, 0x10000233, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c15e0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffff, 2), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x126, 4)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x126, 4)]
[ ---  CALL (ram, 0x237bc0, 8) , (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x126, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x123, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x11f, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x11b, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x117, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x113, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10f, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10c, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x10a, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x107, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x103, 4)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x126, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x123, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x11f, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x11b, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x117, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x113, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10f, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10c, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x10a, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x107, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x103, 4)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x126, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x123, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x11f, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x11b, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x117, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x113, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10f, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10c, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x10a, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x107, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x103, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x9b, 4), (ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0x97, 4), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x9b, 4), (ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0x97, 4), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x9b, 4), (ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0x97, 4), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x9b, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x97, 4), (stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x9b, 4), (stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0x97, 4), (stack, 0xffffffffffffff58, 2) MULTIEQUAL (stack, 0xffffffffffffff58, 2) , (stack, 0xffffffffffffff58, 2)]
[ ---  CALL (ram, 0x16a940, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c5, 8), (unique, 0x100003c5, 8) CALL (ram, 0x12e620, 8) , (unique, 0x100001e3, 8) , (unique, 0x10000223, 8) , (const, 0x5, 8), (unique, 0x10000223, 8) COPY (const, 0x292968, 8), (unique, 0x100001e3, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[ ---  CBRANCH (ram, 0x232d08, 1) , (unique, 0x100001df, 1)]
[(ram, 0x4c7e20, 8) INDIRECT (ram, 0x4c7e20, 8) , (const, 0xcd, 4)]
[(ram, 0x4c7e28, 8) INDIRECT (ram, 0x4c7e28, 8) , (const, 0xcd, 4)]
[(ram, 0x4c7e30, 8) INDIRECT (ram, 0x4c7e30, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff58, 2) INDIRECT (stack, 0xffffffffffffff58, 2) , (const, 0xcd, 4)]
[ ---  CALL (ram, 0x1f7030, 8) , (register, 0x28, 4)]
[ ---  BRANCH (ram, 0x232c51, 1)]
[(ram, 0x4c7e20, 8) COPY (ram, 0x4c7e20, 8), (ram, 0x4c7e20, 8) MULTIEQUAL (ram, 0x4c7e20, 8) , (ram, 0x4c7e20, 8)]
[(ram, 0x4c7e28, 8) COPY (ram, 0x4c7e28, 8), (ram, 0x4c7e28, 8) MULTIEQUAL (ram, 0x4c7e28, 8) , (ram, 0x4c7e28, 8)]
[(ram, 0x4c7e30, 8) COPY (ram, 0x4c7e30, 8), (ram, 0x4c7e30, 8) MULTIEQUAL (ram, 0x4c7e30, 8) , (ram, 0x4c7e30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
