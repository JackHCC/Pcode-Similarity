[(unique, 0x10000267, 8) COPY (unique, 0x10000297, 8), (unique, 0x10000297, 8) CAST (ram, 0x4c35f8, 8)]
[(unique, 0x10000114, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000124, 8) MULTIEQUAL (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[(unique, 0x10000134, 8) MULTIEQUAL (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(unique, 0x1000028f, 8) COPY (unique, 0x1000029f, 8), (unique, 0x1000029f, 8) CAST (unique, 0x1000012c, 8), (unique, 0x1000012c, 8) MULTIEQUAL (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[ ---  CBRANCH (ram, 0x13a37c, 1) , (unique, 0x10000113, 1), (unique, 0x10000113, 1) INT_EQUAL (unique, 0x1000011c, 8) , (const, 0x0, 8), (unique, 0x1000011c, 8) COPY (unique, 0x1000027f, 8), (unique, 0x1000027f, 8) MULTIEQUAL (unique, 0x1000025f, 8) , (unique, 0x10000267, 8) , (unique, 0x1000026f, 8) , (unique, 0x10000277, 8)]
[(unique, 0x10000215, 8) MULTIEQUAL (ram, 0x4c35f8, 8) , (unique, 0x10000124, 8)]
[(unique, 0x10000225, 8) MULTIEQUAL (ram, 0x4c3600, 8) , (unique, 0x1000012c, 8)]
[(unique, 0x1000022d, 8) MULTIEQUAL (ram, 0x4c84a0, 8) , (unique, 0x10000134, 8)]
[ ---  CBRANCH (ram, 0x13a3d7, 1) , (unique, 0x10000214, 1), (unique, 0x10000214, 1) INT_EQUAL (unique, 0x1000021d, 8) , (const, 0x0, 8), (unique, 0x1000021d, 8) MULTIEQUAL (unique, 0x10000287, 8) , (unique, 0x1000028f, 8)]
[ ---  CBRANCH (ram, 0x13a489, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c35f8, 8) COPY (unique, 0x10000215, 8)]
[(ram, 0x4c3600, 8) COPY (unique, 0x10000225, 8)]
[(ram, 0x4c84a0, 8) COPY (unique, 0x1000022d, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CALL (ram, 0x214af0, 8) , (register, 0x38, 8)]
[(ram, 0x4c35f8, 8) COPY (ram, 0x4c35f8, 8), (ram, 0x4c35f8, 8) INDIRECT (unique, 0x10000215, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c3600, 8) COPY (ram, 0x4c3600, 8), (ram, 0x4c3600, 8) INDIRECT (unique, 0x10000225, 8) , (const, 0x1b2, 4)]
[(ram, 0x4c84a0, 8) COPY (ram, 0x4c84a0, 8), (ram, 0x4c84a0, 8) INDIRECT (unique, 0x1000022d, 8) , (const, 0x1b2, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13a3cf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000021d, 8) , (unique, 0x100001c4, 8) , (const, 0x8, 8), (unique, 0x100001c4, 8) INT_ADD (unique, 0x100001bc, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x100001bc, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000021d, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000021d, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13a3b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (unique, 0x1000022d, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (unique, 0x10000225, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (unique, 0x10000215, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[ ---  CBRANCH (ram, 0x13a3b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13a3cf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[(ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0x1dc, 4)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0x1dc, 4)]
[(ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0x1dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13a3b9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[(ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0x15a, 4), (ram, 0x4c35f8, 8) MULTIEQUAL (ram, 0x4c35f8, 8) , (unique, 0x10000215, 8)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0x15a, 4), (ram, 0x4c3600, 8) MULTIEQUAL (ram, 0x4c3600, 8) , (unique, 0x10000225, 8)]
[(ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0x15a, 4), (ram, 0x4c84a0, 8) MULTIEQUAL (ram, 0x4c84a0, 8) , (unique, 0x1000022d, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x13a3cf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3100, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3a00, 8)]
[(ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0x16f, 4)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0x16f, 4)]
[(ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0x16f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13a460, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x8, 8)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (unique, 0x1000022d, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (unique, 0x10000225, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (unique, 0x10000215, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[(unique, 0x10000287, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000021d, 8)]
[ ---  CBRANCH (ram, 0x13a370, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000011c, 8) , (unique, 0x1000016c, 8) , (const, 0x8, 8), (unique, 0x1000016c, 8) INT_ADD (unique, 0x10000164, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000164, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000011c, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000011c, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13a319, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (unique, 0x10000134, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (unique, 0x1000012c, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (unique, 0x10000124, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000114, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x13a310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13a338, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002af, 8), (unique, 0x100002af, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0x23b, 4)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0x23b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0x29f80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0xbd80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x1000024f, 8) COPY (ram, 0x4c84a0, 8), (ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0x23b, 4)]
[ ---  CBRANCH (ram, 0x13a310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x2a200, 8) , (const, 0x0, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[ ---  CBRANCH (ram, 0x13a370, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x279, 4)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0x279, 4)]
[ ---  CALLIND (register, 0x10, 8) , (unique, 0xbd80, 8) , (const, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100002bf, 8), (unique, 0x100002bf, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4)]
[(unique, 0x10000277, 8) COPY (unique, 0x100002c7, 8), (unique, 0x100002c7, 8) CAST (ram, 0x4c35f8, 8), (ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0x279, 4)]
[ ---  CBRANCH (ram, 0x13a2d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c84a0, 8) , (unique, 0x1000024f, 8), (ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0x279, 4)]
[ ---  CBRANCH (ram, 0x13a319, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (unique, 0x3100, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (ram, 0x4c84a0, 8) , (unique, 0x10000134, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (ram, 0x4c3600, 8) , (unique, 0x1000012c, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (ram, 0x4c35f8, 8) , (unique, 0x10000124, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3a00, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x13a44e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002cf, 8), (unique, 0x100002cf, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000114, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0x9d, 4)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0x9d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0x29f80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0xbd80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0x10000257, 8) COPY (ram, 0x4c84a0, 8), (ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0x9d, 4)]
[ ---  CBRANCH (ram, 0x13a428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x2a200, 8) , (const, 0x0, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xdc, 4)]
[(ram, 0x4c3600, 8) INDIRECT (ram, 0x4c3600, 8) , (const, 0xdc, 4)]
[ ---  CALLIND (register, 0x10, 8) , (unique, 0xbd80, 8) , (const, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100002df, 8), (unique, 0x100002df, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0xbd80, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x11, 4)]
[(unique, 0x1000026f, 8) COPY (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) CAST (ram, 0x4c35f8, 8), (ram, 0x4c35f8, 8) INDIRECT (ram, 0x4c35f8, 8) , (const, 0xdc, 4)]
[ ---  CBRANCH (ram, 0x13a2d4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000257, 8) , (ram, 0x4c84a0, 8), (ram, 0x4c84a0, 8) INDIRECT (ram, 0x4c84a0, 8) , (const, 0xdc, 4)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x13a370, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[(ram, 0x4c84a0, 8) MULTIEQUAL (unique, 0x10000134, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8) , (ram, 0x4c84a0, 8)]
[(ram, 0x4c3600, 8) MULTIEQUAL (unique, 0x1000012c, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8) , (ram, 0x4c3600, 8)]
[(ram, 0x4c35f8, 8) MULTIEQUAL (unique, 0x10000124, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8) , (ram, 0x4c35f8, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000114, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000025f, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011c, 8)]
