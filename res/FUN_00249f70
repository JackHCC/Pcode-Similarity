[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x24a068, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x249fcd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x24a0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x245ec0, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x116, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000125, 8) , (const, 0xffffffff, 4), (unique, 0x10000125, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae50, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x24a043, 1)]
[ ---  CBRANCH (ram, 0x24a077, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x24a02c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x111, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x111, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x101, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x111, 4)]
[(register, 0x0, 4) CALL (ram, 0x249160, 8) , (register, 0x10, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  BRANCH (ram, 0x24a011, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x6c, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6c, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x249fee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x7c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x24a011, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x24a02c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CALL (ram, 0x266330, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x93, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8e, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x93, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x93, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x93, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8e, 4)]
[ ---  CALLIND (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8e, 4)]
[ ---  CBRANCH (ram, 0x249ff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf3, 4)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf3, 4)]
[(register, 0x0, 4) CALL (ram, 0x249490, 8) , (register, 0x10, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (register, 0xa8, 8) , (const, 0x0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xab, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xab, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xa8, 4), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xa5, 4), (ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2463c0, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4eae50, 8) MULTIEQUAL (ram, 0x4eae50, 8) , (ram, 0x4eae50, 8)]
[ ---  CBRANCH (ram, 0x24a0b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8), (ram, 0x4eae50, 8) INDIRECT (ram, 0x4eae50, 8) , (const, 0xd6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae50, 8) COPY (ram, 0x4eae50, 8)]
[ ---  RETURN (const, 0x0, 8)]
