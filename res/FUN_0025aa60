[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000008e, 8), (unique, 0x1000008e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3b, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (unique, 0x1000008a, 4) , (const, 0x3b, 4), (unique, 0x1000008a, 4) COPY (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffcc, 2) INDIRECT (stack, 0xffffffffffffffcc, 2) , (const, 0x3b, 4), (stack, 0xffffffffffffffcc, 2) COPY (const, 0x1, 2)]
[(stack, 0xffffffffffffffce, 2) INDIRECT (stack, 0xffffffffffffffce, 2) , (const, 0x3b, 4), (stack, 0xffffffffffffffce, 2) MULTIEQUAL (stack, 0xffffffffffffffce, 2) , (stack, 0xffffffffffffffce, 2)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x3b, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x25ab00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x214bb0, 8) , (register, 0x20, 8) , (const, 0x1, 8) , (const, 0x88b8, 4)]
[ ---  CBRANCH (ram, 0x25aad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000096, 8), (unique, 0x10000096, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x25aad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x25aad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000005f, 2) , (const, 0x0, 2), (unique, 0x1000005f, 2) INT_AND (stack, 0xffffffffffffffce, 2) , (const, 0x38, 2)]
[ ---  CBRANCH (ram, 0x25aa8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000061, 2) , (const, 0x0, 2), (unique, 0x10000061, 2) INT_AND (stack, 0xffffffffffffffce, 2) , (const, 0x1, 2)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6f, 4)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0x6f, 4)]
[(stack, 0xffffffffffffffcc, 2) INDIRECT (stack, 0xffffffffffffffcc, 2) , (const, 0x6f, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x6f, 4)]
[ ---  CBRANCH (ram, 0x25aae0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x210070, 8) , (unique, 0xbc80, 4) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffcc, 2) MULTIEQUAL (stack, 0xffffffffffffffcc, 2) , (stack, 0xffffffffffffffcc, 2) , (stack, 0xffffffffffffffcc, 2) , (stack, 0xffffffffffffffcc, 2)]
[(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x81, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000009e, 8), (unique, 0x1000009e, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(stack, 0xffffffffffffffcc, 2) MULTIEQUAL (stack, 0xffffffffffffffcc, 2) , (stack, 0xffffffffffffffcc, 2)]
[(stack, 0xffffffffffffffc8, 4) MULTIEQUAL (stack, 0xffffffffffffffc8, 4) , (stack, 0xffffffffffffffc8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x25ab14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000a6, 8), (unique, 0x100000a6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc8, 4) INDIRECT (stack, 0xffffffffffffffc8, 4) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffcc, 2) INDIRECT (stack, 0xffffffffffffffcc, 2) , (const, 0xab, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xab, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xab, 4)]
[ ---  RETURN (const, 0x1, 4)]
