[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[ ---  CBRANCH (ram, 0x496f30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c82e8, 4) , (const, 0x0, 4)]
[(unique, 0x10000181, 8) COPY (ram, 0x4c82f0, 8)]
[ ---  CBRANCH (ram, 0x496f69, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c82f0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x496f60, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000181, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x198, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x198, 4)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x198, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x198, 4)]
[ ---  CBRANCH (ram, 0x496fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4963e0, 8) , (register, 0x28, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x496fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(ram, 0x4c82f0, 8) MULTIEQUAL (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8)]
[(ram, 0x4c82e8, 4) MULTIEQUAL (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4)]
[(unique, 0x10000169, 8) COPY (ram, 0x4c82f8, 8), (ram, 0x4c82f8, 8) MULTIEQUAL (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8)]
[ ---  CBRANCH (ram, 0x497098, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c82f8, 8) , (const, 0x0, 8), (ram, 0x4c82f8, 8) MULTIEQUAL (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0xbe, 4)]
[(ram, 0x4c82f8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xbe, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c82f8, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbe, 4)]
[(register, 0x0, 8) CALL (ram, 0x4963e0, 8) , (unique, 0x10000169, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c82f0, 8)]
[(unique, 0x10000171, 8) COPY (ram, 0x4c82f0, 8), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0xbe, 4)]
[ ---  CBRANCH (ram, 0x497042, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c82f0, 8) , (const, 0x0, 8), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0xbe, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000169, 8)]
[ ---  BRANCH (ram, 0x49703d, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x497030, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000171, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x497042, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000169, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000171, 8) , (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0xe1, 4), (ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0xdf, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0xe1, 4), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0xdf, 4)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0xe1, 4), (ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0xdf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x10000169, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x496ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x10000169, 8)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x102, 4), (ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0xfc, 4), (ram, 0x4c82e8, 4) MULTIEQUAL (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x102, 4), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0xfc, 4), (ram, 0x4c82f0, 8) MULTIEQUAL (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x102, 4), (ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0xfc, 4), (ram, 0x4c82f8, 8) MULTIEQUAL (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x10000169, 8)]
[ ---  CBRANCH (ram, 0x497078, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x10000169, 8)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x160, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x160, 4)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x160, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x160, 4)]
[(register, 0x0, 1) CALL (ram, 0x495980, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_ADD (register, 0xb8, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x496fb4, 1)]
[(register, 0xa8, 1) SUBPIECE (register, 0xa8, 2) , (const, 0x0, 4), (register, 0xa8, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x4957a0, 8) , (unique, 0x100000e1, 1) , (register, 0x0, 8) , (unique, 0x3100, 8) , (register, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0xb8, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x4956e0, 8) , (unique, 0x100000e1, 1) , (register, 0x28, 8), (unique, 0x100000e1, 1) MULTIEQUAL (register, 0xa8, 1) , (register, 0x0, 1)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x14e, 4), (ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x149, 4), (ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x140, 4), (ram, 0x4c82e8, 4) MULTIEQUAL (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x14e, 4), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x149, 4), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x140, 4), (ram, 0x4c82f0, 8) MULTIEQUAL (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x14e, 4), (ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x149, 4), (ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x140, 4), (ram, 0x4c82f8, 8) MULTIEQUAL (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (stack, 0xffffffffffffff98, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x149, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x140, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x496f14, 1)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x3f, 4), (ram, 0x4c82e8, 4) MULTIEQUAL (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x3f, 4), (ram, 0x4c82f0, 8) MULTIEQUAL (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x3f, 4), (ram, 0x4c82f8, 8) MULTIEQUAL (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000189, 8) , (const, 0x3f, 4), (unique, 0x10000189, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3f, 4), (stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x3f, 4), (stack, 0xffffffffffffffc0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x497058, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x497510, 8) , (unique, 0x100000e9, 8) , (register, 0x20, 8), (unique, 0x100000e9, 8) PTRSUB (const, 0x0, 8) , (const, 0x495c30, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x496f14, 1)]
[ ---  CBRANCH (ram, 0x496f14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (stack, 0xffffffffffffffa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (stack, 0xffffffffffffffa8, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x67, 4), (ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x61, 4), (ram, 0x4c82e8, 4) INDIRECT (ram, 0x4c82e8, 4) , (const, 0x5b, 4)]
[(ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x67, 4), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x61, 4), (ram, 0x4c82f0, 8) INDIRECT (ram, 0x4c82f0, 8) , (const, 0x5b, 4)]
[(ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x67, 4), (ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x61, 4), (ram, 0x4c82f8, 8) INDIRECT (ram, 0x4c82f8, 8) , (const, 0x5b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c82e8, 4) COPY (ram, 0x4c82e8, 4), (ram, 0x4c82e8, 4) MULTIEQUAL (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4) , (ram, 0x4c82e8, 4)]
[(ram, 0x4c82f0, 8) COPY (ram, 0x4c82f0, 8), (ram, 0x4c82f0, 8) MULTIEQUAL (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8) , (ram, 0x4c82f0, 8)]
[(ram, 0x4c82f8, 8) COPY (ram, 0x4c82f8, 8), (ram, 0x4c82f8, 8) MULTIEQUAL (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8) , (ram, 0x4c82f8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
