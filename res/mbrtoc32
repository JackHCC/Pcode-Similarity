[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f7, 8), (unique, 0x100001f7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff94, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000187, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1bda46, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000018f, 8) COPY (unique, 0x3800, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000187, 8) , (unique, 0x1000018f, 8)]
[ ---  CBRANCH (ram, 0x1bda4d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) CAST (unique, 0x100001ff, 8), (unique, 0x100001ff, 8) PTRSUB (const, 0x0, 8) , (const, 0x4edae0, 8)]
[(unique, 0x100001ef, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1bda88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x1000017f, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1bda97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x28, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000017f, 8) , (unique, 0x3800, 8)]
[(unique, 0x100001af, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000017f, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x1bdb80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000021f, 8) , (const, 0x0, 8), (unique, 0x1000021f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000217, 8), (unique, 0x10000217, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000020f, 8), (unique, 0x1000020f, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000207, 8), (unique, 0x10000207, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eadc8, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1bdbc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x1000012e, 8), (unique, 0x1000012e, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e8580, 8)]
[(register, 0xb0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e9ea0, 8)]
[ ---  BRANCH (ram, 0x1bdac1, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b5, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x1b5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100001ef, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1b5, 4)]
[ ---  CALL (ram, 0x1cbe40, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000227, 8), (unique, 0x10000227, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x100001b7, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x100001af, 8) , (const, 0x1b5, 4)]
[ ---  BRANCH (ram, 0x1bdac1, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100001ef, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x100001ef, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x3100, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x100001af, 8) , (unique, 0x100001b7, 8) , (unique, 0x100001af, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8)]
[(register, 0x10, 8) PTRADD (register, 0x28, 8) , (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x100001e7, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1bdbb0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x10, 8) , (unique, 0x1000022f, 8), (unique, 0x1000022f, 8) CAST (register, 0x28, 8)]
[(register, 0xa8, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x1bdad2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000247, 8), (unique, 0x10000247, 8) INT_ADD (unique, 0x1000023f, 8) , (const, 0x28, 8), (unique, 0x1000023f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x1bdaec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000237, 8), (unique, 0x10000237, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000267, 8), (unique, 0x10000267, 8) INT_XOR (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000025f, 8), (unique, 0x1000025f, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xa0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000257, 8) , (const, 0x2f, 4), (unique, 0x10000257, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000024f, 8) , (const, 0x11, 4), (unique, 0x1000024f, 8) CAST (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x108, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xec, 4)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x108, 4), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0xec, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x108, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x108, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x100001e7, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x108, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x108, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x108, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x108, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x108, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xec, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x108, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xec, 4)]
[ ---  CBRANCH (ram, 0x1bdb50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000009a, 4) , (const, 0x0, 4), (unique, 0x1000009a, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffb, 4), (register, 0x0, 4) CALLIND (register, 0xa0, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0xa8, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1bdbf5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x2, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x0, 4) , (const, 0x5, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x194, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x194, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000116, 8) , (unique, 0x10000106, 8) , (const, 0x60, 4) , (unique, 0x10000126, 8), (unique, 0x10000126, 8) COPY (const, 0x2b94a8, 8), (unique, 0x10000116, 8) COPY (const, 0x2b9408, 8), (unique, 0x10000106, 8) COPY (const, 0x2b50e9, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x194, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x194, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1bdb50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x1bda5c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100001ef, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x1bdb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff98, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1bdb70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x0, 8) PTRADD (stack, 0xffffffffffffff88, 8) , (unique, 0x100000be, 8) , (const, 0x1, 8), (unique, 0x100000be, 8) INT_2COMP (unique, 0x1000026f, 8), (unique, 0x1000026f, 8) CAST (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x1bda63, 1)]
[ ---  CBRANCH (ram, 0x1bdbd6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000166, 8), (unique, 0x10000166, 8) PTRSUB (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x17e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x17e, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000010e, 8) , (unique, 0x100000fe, 8) , (const, 0x69, 4) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) COPY (const, 0x2b94a8, 8), (unique, 0x1000010e, 8) COPY (const, 0x2b50f3, 8), (unique, 0x100000fe, 8) COPY (const, 0x2b50e9, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x17e, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1bda63, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0x100001e7, 8)]
[(ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x13d, 4), (ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000277, 8) , (const, 0x54, 4), (unique, 0x10000277, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x1bda63, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadc8, 8) MULTIEQUAL (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8) , (ram, 0x4eadc8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bdbd1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000027f, 8), (unique, 0x1000027f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (unique, 0x10000287, 8), (unique, 0x10000287, 8) CAST (register, 0x0, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x8c, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eadc8, 8) COPY (ram, 0x4eadc8, 8), (ram, 0x4eadc8, 8) INDIRECT (ram, 0x4eadc8, 8) , (const, 0x8c, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8c, 4)]
[ ---  RETURN (const, 0x1, 4)]
