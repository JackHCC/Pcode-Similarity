[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000dd, 8), (unique, 0x100000dd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x253f4c, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(unique, 0x100000d9, 4) COPY (register, 0x10, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x58, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x58, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x53, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f00a0, 8) INDIRECT (ram, 0x4f00a0, 8) , (const, 0x5d, 4), (ram, 0x4f00a0, 8) INDIRECT (ram, 0x4f00a0, 8) , (const, 0x58, 4), (ram, 0x4f00a0, 8) INDIRECT (ram, 0x4f00a0, 8) , (const, 0x53, 4), (ram, 0x4f00a0, 8) MULTIEQUAL (ram, 0x4f00a0, 8) , (ram, 0x4f00a0, 8)]
[(ram, 0x4f00a8, 8) INDIRECT (ram, 0x4f00a8, 8) , (const, 0x5d, 4), (ram, 0x4f00a8, 8) INDIRECT (ram, 0x4f00a8, 8) , (const, 0x58, 4), (ram, 0x4f00a8, 8) INDIRECT (ram, 0x4f00a8, 8) , (const, 0x53, 4), (ram, 0x4f00a8, 8) MULTIEQUAL (ram, 0x4f00a8, 8) , (ram, 0x4f00a8, 8)]
[(ram, 0x4f00b0, 4) INDIRECT (ram, 0x4f00b0, 4) , (const, 0x5d, 4), (ram, 0x4f00b0, 4) INDIRECT (ram, 0x4f00b0, 4) , (const, 0x58, 4), (ram, 0x4f00b0, 4) INDIRECT (ram, 0x4f00b0, 4) , (const, 0x53, 4), (ram, 0x4f00b0, 4) MULTIEQUAL (ram, 0x4f00b0, 4) , (ram, 0x4f00b0, 4)]
[(ram, 0x4f00b4, 4) INDIRECT (ram, 0x4f00b4, 4) , (const, 0x5d, 4), (ram, 0x4f00b4, 4) INDIRECT (ram, 0x4f00b4, 4) , (const, 0x58, 4), (ram, 0x4f00b4, 4) INDIRECT (ram, 0x4f00b4, 4) , (const, 0x53, 4), (ram, 0x4f00b4, 4) MULTIEQUAL (ram, 0x4f00b4, 4) , (ram, 0x4f00b4, 4)]
[(ram, 0x4f00b8, 4) INDIRECT (ram, 0x4f00b8, 4) , (const, 0x5d, 4), (ram, 0x4f00b8, 4) INDIRECT (ram, 0x4f00b8, 4) , (const, 0x58, 4), (ram, 0x4f00b8, 4) INDIRECT (ram, 0x4f00b8, 4) , (const, 0x53, 4), (ram, 0x4f00b8, 4) MULTIEQUAL (ram, 0x4f00b8, 4) , (ram, 0x4f00b8, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x58, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x58, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x58, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x5d, 4), (stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x58, 4), (stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x53, 4), (stack, 0xffffffffffffff90, 4) MULTIEQUAL (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x58, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x53, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x58, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x58, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x58, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x5d, 4), (stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x58, 4), (stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x53, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x58, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x53, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) CALL (ram, 0x1e5930, 8)]
[(ram, 0x4f00a8, 8) COPY (const, 0x200000001, 8)]
[(register, 0x0, 8) INT_SEXT (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (unique, 0x100000d9, 4) , (register, 0xa0, 4)]
[(ram, 0x4f00a0, 8) COPY (const, 0x1c, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffff88, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff90, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x20, 8)]
[(stack, 0xffffffffffffffb8, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00a0, 8)]
[(unique, 0x100000c1, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e58e0, 8)]
[(unique, 0x100000c5, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e5910, 8)]
[(unique, 0x100000c9, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8)]
[(unique, 0x100000d1, 8) COPY (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x253f0d, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x94, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f00a0, 8) INDIRECT (ram, 0x4f00a0, 8) , (const, 0x94, 4), (ram, 0x4f00a0, 8) MULTIEQUAL (ram, 0x4f00a0, 8) , (ram, 0x4f00a0, 8)]
[(ram, 0x4f00a8, 8) INDIRECT (ram, 0x4f00a8, 8) , (const, 0x94, 4), (ram, 0x4f00a8, 8) MULTIEQUAL (ram, 0x4f00a8, 8) , (ram, 0x4f00a8, 8)]
[(ram, 0x4f00b0, 4) INDIRECT (ram, 0x4f00b0, 4) , (const, 0x94, 4), (ram, 0x4f00b0, 4) MULTIEQUAL (unique, 0x100000c1, 4) , (ram, 0x4f00b0, 4)]
[(ram, 0x4f00b4, 4) INDIRECT (ram, 0x4f00b4, 4) , (const, 0x94, 4), (ram, 0x4f00b4, 4) MULTIEQUAL (unique, 0x100000c5, 4) , (ram, 0x4f00b4, 4)]
[(ram, 0x4f00b8, 4) INDIRECT (ram, 0x4f00b8, 4) , (const, 0x94, 4), (ram, 0x4f00b8, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4f00b8, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (unique, 0x100000c9, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x94, 4), (stack, 0xffffffffffffff90, 4) MULTIEQUAL (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x100000d1, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x94, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x10, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x222cf0, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x253f00, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x222cf0, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8) , (const, 0x0, 4)]
[(register, 0xa8, 8) CAST (unique, 0x100000ed, 8), (unique, 0x100000ed, 8) INT_ADD (unique, 0x100000e5, 8) , (register, 0x10, 8), (unique, 0x100000e5, 8) CAST (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x253e60, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0xa0, 4), (register, 0xa0, 4) INT_SUB (register, 0xa0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x253f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000f5, 8), (unique, 0x100000f5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x109, 4)]
[(ram, 0x4f00a0, 8) INDIRECT (ram, 0x4f00a0, 8) , (const, 0x109, 4)]
[(ram, 0x4f00a8, 8) INDIRECT (ram, 0x4f00a8, 8) , (const, 0x109, 4)]
[(ram, 0x4f00b0, 4) INDIRECT (ram, 0x4f00b0, 4) , (const, 0x109, 4)]
[(ram, 0x4f00b4, 4) INDIRECT (ram, 0x4f00b4, 4) , (const, 0x109, 4)]
[(ram, 0x4f00b8, 4) INDIRECT (ram, 0x4f00b8, 4) , (const, 0x109, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 4) MULTIEQUAL (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(ram, 0x4f00b8, 4) MULTIEQUAL (ram, 0x4f00b8, 4) , (ram, 0x4f00b8, 4) , (ram, 0x4f00b8, 4)]
[(ram, 0x4f00b4, 4) MULTIEQUAL (ram, 0x4f00b4, 4) , (ram, 0x4f00b4, 4) , (ram, 0x4f00b4, 4)]
[(ram, 0x4f00b0, 4) MULTIEQUAL (ram, 0x4f00b0, 4) , (ram, 0x4f00b0, 4) , (ram, 0x4f00b0, 4)]
[(ram, 0x4f00a8, 8) MULTIEQUAL (ram, 0x4f00a8, 8) , (ram, 0x4f00a8, 8) , (ram, 0x4f00a8, 8)]
[(ram, 0x4f00a0, 8) MULTIEQUAL (ram, 0x4f00a0, 8) , (ram, 0x4f00a0, 8) , (ram, 0x4f00a0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x0, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x253f6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4f00a0, 8) COPY (ram, 0x4f00a0, 8)]
[(ram, 0x4f00a8, 8) COPY (ram, 0x4f00a8, 8)]
[(ram, 0x4f00b0, 4) COPY (ram, 0x4f00b0, 4)]
[(ram, 0x4f00b4, 4) COPY (ram, 0x4f00b4, 4)]
[(ram, 0x4f00b8, 4) COPY (ram, 0x4f00b8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0xef, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xef, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xef, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xef, 4)]
[(ram, 0x4f00a0, 8) COPY (ram, 0x4f00a0, 8), (ram, 0x4f00a0, 8) INDIRECT (ram, 0x4f00a0, 8) , (const, 0xef, 4)]
[(ram, 0x4f00a8, 8) COPY (ram, 0x4f00a8, 8), (ram, 0x4f00a8, 8) INDIRECT (ram, 0x4f00a8, 8) , (const, 0xef, 4)]
[(ram, 0x4f00b0, 4) COPY (ram, 0x4f00b0, 4), (ram, 0x4f00b0, 4) INDIRECT (ram, 0x4f00b0, 4) , (const, 0xef, 4)]
[(ram, 0x4f00b4, 4) COPY (ram, 0x4f00b4, 4), (ram, 0x4f00b4, 4) INDIRECT (ram, 0x4f00b4, 4) , (const, 0xef, 4)]
[(ram, 0x4f00b8, 4) COPY (ram, 0x4f00b8, 4), (ram, 0x4f00b8, 4) INDIRECT (ram, 0x4f00b8, 4) , (const, 0xef, 4)]
[ ---  RETURN (const, 0x1, 4)]
