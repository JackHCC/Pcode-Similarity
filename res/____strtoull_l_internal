[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002bd, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4109b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x410a69, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000305, 1) , (const, 0x7e, 1), (unique, 0x10000305, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002fd, 8), (unique, 0x100002fd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002d5, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x410728, 1)]
[(unique, 0x100002c5, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000306, 8), (unique, 0x10000306, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x410728, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000306, 8), (unique, 0x10000306, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100002cd, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x410728, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100002bd, 8) , (unique, 0x100002c5, 8) , (unique, 0x100002cd, 8) , (unique, 0x100002d5, 8)]
[ ---  CBRANCH (ram, 0x4108b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4108b0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x24, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000030e, 8), (unique, 0x1000030e, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1), (ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x4e7, 4)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1), (ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x4e7, 4)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8), (ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x4e7, 4)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8), (ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x4e7, 4)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x4e7, 4)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x4e7, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000031f, 8), (unique, 0x1000031f, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000317, 8), (unique, 0x10000317, 8) INT_ADD (register, 0x80, 8) , (const, 0x68, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000316, 1), (unique, 0x10000316, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100002dd, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000217, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000220, 8) MULTIEQUAL (unique, 0x100002dd, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x410763, 1) , (unique, 0x1000021f, 1), (unique, 0x1000021f, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x18, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000327, 1), (unique, 0x10000327, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x410ac9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (unique, 0x10000217, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x410a16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4109a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x2d, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000215, 1) COPY (const, 0x1, 1)]
[(register, 0x18, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x410785, 1)]
[(unique, 0x10000216, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x4108f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x2b, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x410785, 1)]
[(unique, 0x10000214, 1) MULTIEQUAL (unique, 0x10000216, 1) , (unique, 0x10000216, 1) , (unique, 0x10000215, 1)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000220, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x410950, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 1) , (const, 0x30, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000217, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x410a28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f6, 4) , (const, 0x0, 4), (unique, 0x100000f6, 4) INT_AND (register, 0x10, 4) , (const, 0xffffffef, 4)]
[ ---  CBRANCH (ram, 0x410a71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x58, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000331, 8), (unique, 0x10000331, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000330, 1), (unique, 0x10000330, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xe, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x10, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4107ab, 1)]
[ ---  CBRANCH (ram, 0x41095c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x10, 4) COPY (const, 0x8, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[(register, 0x0, 1) COPY (ram, 0x4ae146, 1)]
[(unique, 0x100002b5, 8) COPY (ram, 0x4ae1b0, 8)]
[ ---  BRANCH (ram, 0x4107df, 1)]
[ ---  CBRANCH (ram, 0x410aa6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x410ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(register, 0x0, 1) COPY (ram, 0x4ae148, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[(unique, 0x100002a5, 8) COPY (ram, 0x4ae1c0, 8)]
[ ---  BRANCH (ram, 0x4107d8, 1)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000025a, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000025a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae140, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000339, 4), (unique, 0x10000339, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x8, 8) COPY (const, 0x30, 8)]
[(unique, 0x100002ad, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000026a, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae180, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000339, 4), (unique, 0x10000339, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x4107df, 1)]
[ ---  CBRANCH (ram, 0x4108d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x410796, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x410ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x8, 4)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f0, 4)]
[(ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x2f0, 4)]
[(ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x2f0, 4)]
[(ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x2f0, 4)]
[(ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x2f0, 4)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x2f0, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x2f0, 4)]
[ ---  CBRANCH (ram, 0x4109e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x410b15, 1)]
[(unique, 0x100002ed, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x410b08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000274, 8) MULTIEQUAL (unique, 0x100002e5, 8) , (unique, 0x100002ed, 8)]
[ ---  CBRANCH (ram, 0x410b87, 1) , (unique, 0x10000273, 1), (unique, 0x10000273, 1) INT_NOTEQUAL (unique, 0x10000272, 1) , (const, 0x0, 1), (unique, 0x10000272, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x8, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x10000272, 1)]
[ ---  CBRANCH (ram, 0x410b40, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 1) , (unique, 0x10000345, 1), (unique, 0x10000345, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0x10000272, 1) , (const, 0x30, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x410b69, 1)]
[ ---  CBRANCH (ram, 0x410b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000274, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x410b40, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x410b87, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000346, 8), (unique, 0x10000346, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (ram, 0x4c4e28, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x410b40, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x40, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000034e, 8), (unique, 0x1000034e, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x410b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000274, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100002e5, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000274, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x38b, 4)]
[(ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x38b, 4)]
[(ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x38b, 4)]
[(ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x38b, 4)]
[(ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x38b, 4)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x38b, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x38b, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000356, 8), (unique, 0x10000356, 8) CALL (ram, 0x410be0, 8) , (register, 0x18, 8) , (unique, 0x10000274, 8) , (register, 0xa0, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[(register, 0x0, 4) COPY (const, 0x8, 4)]
[ ---  BRANCH (ram, 0x4107ab, 1)]
[ ---  CBRANCH (ram, 0x4109e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x4107ab, 1)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4ae1c0, 8) MULTIEQUAL (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8)]
[(ram, 0x4ae1b0, 8) MULTIEQUAL (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae148, 1) MULTIEQUAL (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1)]
[(ram, 0x4ae146, 1) MULTIEQUAL (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000035e, 8), (unique, 0x1000035e, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000262, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae180, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000252, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000252, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ae140, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4109e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (const, 0x0, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4109e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffba, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x0, 1) , (unique, 0xbb00, 1) , (register, 0x0, 1)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4ae1c0, 8) MULTIEQUAL (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8)]
[(ram, 0x4ae1b0, 8) MULTIEQUAL (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae148, 1) MULTIEQUAL (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1)]
[(ram, 0x4ae146, 1) MULTIEQUAL (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100002ad, 8) , (unique, 0x100002b5, 8) , (unique, 0xbd80, 8) , (unique, 0x100002a5, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3100, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000205, 1) COPY (const, 0x0, 1)]
[(register, 0xb8, 8) INT_SEXT (unique, 0x10000366, 4), (unique, 0x10000366, 4) CAST (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x1000029d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x410828, 1)]
[(unique, 0x10000204, 1) MULTIEQUAL (unique, 0x10000205, 1) , (unique, 0x1000023e, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000029d, 8) , (unique, 0x10000228, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000232, 8)]
[ ---  CBRANCH (ram, 0x41084c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 1) , (const, 0xa, 1), (register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_SUB (unique, 0x10000098, 4) , (const, 0x30, 4), (unique, 0x10000098, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x410900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x410938, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0xa0, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x41083d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x410910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (register, 0x28, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x410817, 1)]
[ ---  CBRANCH (ram, 0x410870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000036a, 8), (unique, 0x1000036a, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (ram, 0x4c4e28, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_AND (register, 0x8, 8) , (const, 0xff, 8)]
[(register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x37, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000372, 8), (unique, 0x10000372, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x410870, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0x1000037a, 4) , (unique, 0x1000037e, 4), (unique, 0x1000037e, 4) CAST (register, 0x8, 4), (unique, 0x1000037a, 4) CAST (register, 0x10, 4), (register, 0x8, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x410800, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x410809, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x410859, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (register, 0x30, 1) , (stack, 0xffffffffffffffba, 1)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000202, 1) COPY (const, 0x1, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000232, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000023e, 1) MULTIEQUAL (unique, 0x10000202, 1) , (unique, 0x10000204, 1)]
[(unique, 0x10000228, 8) PTRADD (unique, 0x10000248, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10000248, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x410823, 1) , (unique, 0x10000231, 1), (unique, 0x10000231, 1) INT_EQUAL (unique, 0x10000230, 1) , (const, 0x0, 1), (unique, 0x10000230, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) INT_ZEXT (unique, 0x10000230, 1)]
[ ---  CBRANCH (ram, 0x410870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000228, 8) , (register, 0xb0, 8)]
[(unique, 0x10000200, 1) MULTIEQUAL (unique, 0x10000204, 1) , (unique, 0x10000204, 1) , (unique, 0x1000023e, 1) , (unique, 0x1000023e, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x10000232, 8) , (unique, 0x10000232, 8)]
[(unique, 0x10000295, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x10000228, 8) , (unique, 0x10000228, 8)]
[ ---  CBRANCH (ram, 0x4109ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x10000228, 8) , (unique, 0x10000228, 8)]
[ ---  CBRANCH (ram, 0x410886, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x18e, 4)]
[(ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x18e, 4)]
[(ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x18e, 4)]
[(ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x18e, 4)]
[(ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x18e, 4)]
[(ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x18e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4ae1c0, 8) MULTIEQUAL (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8)]
[(ram, 0x4ae1b0, 8) MULTIEQUAL (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae148, 1) MULTIEQUAL (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1)]
[(ram, 0x4ae146, 1) MULTIEQUAL (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1)]
[ ---  CBRANCH (ram, 0x410baa, 1) , (unique, 0x10000200, 1)]
[(register, 0x10, 8) INT_2COMP (register, 0x0, 8)]
[(unique, 0x10000285, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41089f, 1) , (unique, 0x10000214, 1)]
[(unique, 0x1000028d, 8) COPY (register, 0x10, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000285, 8) , (unique, 0x1000028d, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x22, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000382, 8), (unique, 0x10000382, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1), (ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x1d0, 4)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1), (ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x1d0, 4)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8), (ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x1d0, 4)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8), (ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x1d0, 4)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x1d0, 4)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x1d0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[(ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4ae1c0, 8) MULTIEQUAL (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8)]
[(ram, 0x4ae1b0, 8) MULTIEQUAL (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae148, 1) MULTIEQUAL (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1)]
[(ram, 0x4ae146, 1) MULTIEQUAL (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000295, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x410a9f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x410a16, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 8) , (unique, 0x10000392, 8), (unique, 0x10000392, 8) CAST (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000138, 8) , (const, 0x1, 8), (unique, 0x10000138, 8) INT_2COMP (unique, 0x1000038a, 8), (unique, 0x1000038a, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x410a8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x58, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000039b, 8), (unique, 0x1000039b, 8) INT_ADD (ram, 0x4c4e38, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000039a, 1), (unique, 0x1000039a, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x410a16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1), (ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x24e, 4)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1), (ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x24e, 4)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8), (ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x24e, 4)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8), (ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x24e, 4)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x24e, 4)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x24e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[(ram, 0x4ae146, 1) COPY (ram, 0x4ae146, 1), (ram, 0x4ae146, 1) INDIRECT (ram, 0x4ae146, 1) , (const, 0x226, 4), (ram, 0x4ae146, 1) MULTIEQUAL (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1) , (ram, 0x4ae146, 1)]
[(ram, 0x4ae148, 1) COPY (ram, 0x4ae148, 1), (ram, 0x4ae148, 1) INDIRECT (ram, 0x4ae148, 1) , (const, 0x226, 4), (ram, 0x4ae148, 1) MULTIEQUAL (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1) , (ram, 0x4ae148, 1)]
[(ram, 0x4ae1b0, 8) COPY (ram, 0x4ae1b0, 8), (ram, 0x4ae1b0, 8) INDIRECT (ram, 0x4ae1b0, 8) , (const, 0x226, 4), (ram, 0x4ae1b0, 8) MULTIEQUAL (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8) , (ram, 0x4ae1b0, 8)]
[(ram, 0x4ae1c0, 8) COPY (ram, 0x4ae1c0, 8), (ram, 0x4ae1c0, 8) INDIRECT (ram, 0x4ae1c0, 8) , (const, 0x226, 4), (ram, 0x4ae1c0, 8) MULTIEQUAL (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8) , (ram, 0x4ae1c0, 8)]
[(ram, 0x4c4e28, 8) COPY (ram, 0x4c4e28, 8), (ram, 0x4c4e28, 8) INDIRECT (ram, 0x4c4e28, 8) , (const, 0x226, 4), (ram, 0x4c4e28, 8) MULTIEQUAL (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8) , (ram, 0x4c4e28, 8)]
[(ram, 0x4c4e38, 8) COPY (ram, 0x4c4e38, 8), (ram, 0x4c4e38, 8) INDIRECT (ram, 0x4c4e38, 8) , (const, 0x226, 4), (ram, 0x4c4e38, 8) MULTIEQUAL (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8) , (ram, 0x4c4e38, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
