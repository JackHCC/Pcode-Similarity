[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100000a7, 8) COPY (unique, 0x100000cf, 8), (unique, 0x100000cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000008f, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x1000008f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff5c, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000a7, 8) , (unique, 0x100000af, 8)]
[ ---  CBRANCH (ram, 0x248273, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x38, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x38, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000af, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x248270, 1)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (unique, 0x100000b7, 4) , (const, 0x44, 4), (unique, 0x100000b7, 4) COPY (register, 0x38, 4)]
[(stack, 0xffffffffffffff5c, 8) INDIRECT (stack, 0xffffffffffffff5c, 8) , (const, 0x44, 4), (stack, 0xffffffffffffff5c, 8) COPY (const, 0xffffffc400000000, 8)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (unique, 0x100000bb, 4) , (const, 0x44, 4), (unique, 0x100000bb, 4) COPY (register, 0x10, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x44, 4)]
[(register, 0x0, 4) CALL (ram, 0x1e5900, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(register, 0x0, 8) COPY (const, 0x81, 8)]
[ ---  CBRANCH (ram, 0x2482e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000d7, 8), (unique, 0x100000d7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x44, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x44, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x84, 4)]
[(stack, 0xffffffffffffff5c, 8) INDIRECT (stack, 0xffffffffffffff5c, 8) , (const, 0x84, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x84, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (register, 0x0, 4) , (const, 0x84, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x100000bf, 8) , (const, 0x84, 4), (unique, 0x100000bf, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x84, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x84, 4)]
[ ---  CALL (ram, 0x234c80, 8) , (stack, 0xffffffffffffff68, 4) , (register, 0x38, 4) , (register, 0x20, 8)]
[ ---  RETURN (const, 0x1, 4)]
