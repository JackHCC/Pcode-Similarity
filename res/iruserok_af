[(register, 0x1200, 8) COPY (const, 0x0, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 4) COPY (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000f0, 8), (unique, 0x100000f0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc8, 16) COPY (const, 0x0, 16)]
[(stack, 0xffffffffffffffca, 14) SUBPIECE (unique, 0x10000070, 16) , (const, 0x0, 4), (unique, 0x10000070, 16) INT_RIGHT (const, 0x0, 16) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x23b440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 2) , (const, 0x2, 2)]
[(stack, 0xffffffffffffffc8, 16) INT_ZEXT (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffc8, 8) INT_ADD (unique, 0x100000e8, 8) , (stack, 0xffffffffffffffc8, 4), (unique, 0x100000e8, 8) INT_LEFT (unique, 0x100000e0, 8) , (const, 0x20, 8), (unique, 0x100000e0, 8) INT_SEXT (unique, 0x100000f8, 4), (unique, 0x100000f8, 4) CAST (unique, 0xbc80, 4), (stack, 0xffffffffffffffc8, 4) SUBPIECE (stack, 0xffffffffffffffc8, 16) , (const, 0x0, 8), (stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x100000d0, 16) , (const, 0x2, 2), (unique, 0x100000d0, 16) INT_LEFT (unique, 0x100000c0, 16) , (const, 0x10, 16), (unique, 0x100000c0, 16) INT_SEXT (stack, 0xffffffffffffffca, 14), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x23b41f, 1)]
[ ---  CBRANCH (ram, 0x23b408, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 2) , (const, 0xa, 2)]
[(unique, 0x10000046, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000004e, 8), (unique, 0x1000004e, 8) CAST (unique, 0x10000104, 8), (unique, 0x10000104, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0x8, 8), (unique, 0x100000fc, 8) CAST (register, 0x38, 8)]
[(register, 0x30, 8) COPY (const, 0x1c, 8)]
[(stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x100000b0, 16) , (stack, 0xffffffffffffffc8, 8), (unique, 0x100000b0, 16) INT_LEFT (unique, 0x100000a0, 16) , (const, 0x40, 16), (unique, 0x100000a0, 16) INT_SEXT (unique, 0x1000010c, 8), (unique, 0x1000010c, 8) CAST (unique, 0x1000003e, 8), (stack, 0xffffffffffffffc8, 8) SUBPIECE (stack, 0xffffffffffffffc8, 16) , (const, 0x0, 8), (stack, 0xffffffffffffffc8, 16) INT_ADD (unique, 0x10000090, 16) , (const, 0xa, 2), (unique, 0x10000090, 16) INT_LEFT (unique, 0x10000080, 16) , (const, 0x10, 16), (unique, 0x10000080, 16) INT_SEXT (stack, 0xffffffffffffffca, 14), (unique, 0x1000003e, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x74, 4)]
[(stack, 0xffffffffffffffc8, 16) INDIRECT (stack, 0xffffffffffffffc8, 16) , (const, 0x74, 4), (stack, 0xffffffffffffffc8, 16) MULTIEQUAL (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x74, 4), (stack, 0xffffffffffffffd8, 8) MULTIEQUAL (unique, 0x10000046, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x74, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x74, 4)]
[(register, 0x0, 4) CALL (ram, 0x23a240, 8) , (register, 0x1200, 8) , (register, 0x20, 8) , (register, 0x30, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x10000060, 8), (unique, 0x10000060, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b73f5, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x1200, 8) MULTIEQUAL (unique, 0x1000003e, 8) , (register, 0x1200, 8)]
[ ---  BRANCH (ram, 0x23b3ef, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)]
[(stack, 0xffffffffffffffd8, 8) MULTIEQUAL (stack, 0xffffffffffffffd8, 8) , (stack, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffc8, 16) MULTIEQUAL (stack, 0xffffffffffffffc8, 16) , (stack, 0xffffffffffffffc8, 16)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23b458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000114, 8), (unique, 0x10000114, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffc8, 16) INDIRECT (stack, 0xffffffffffffffc8, 16) , (const, 0x60, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x60, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x60, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x60, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
