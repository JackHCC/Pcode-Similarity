[ ---  CBRANCH (ram, 0x231730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7f18, 1) , (const, 0x0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x1b1, 4)]
[(ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0x1b1, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1b1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b1, 4)]
[ ---  CBRANCH (ram, 0x231790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22af10, 8) , (unique, 0x3800, 8) , (unique, 0x100000df, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x100000df, 8) COPY (const, 0x28f44d, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x231777, 1)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (unique, 0x10000137, 8) , (unique, 0xbd80, 8), (unique, 0x10000137, 8) CAST (stack, 0xffffffffffffffb8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x10, 8) , (const, 0x11, 4), (register, 0x10, 8) INT_XOR (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c7f08, 8) MULTIEQUAL (register, 0x10, 8) , (ram, 0x4c7f08, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c7f18, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x231628, 1)]
[(register, 0x0, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c7f08, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c7f08, 8) , (const, 0x11, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x110, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c7f10, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c7f10, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4c7f18, 1) MULTIEQUAL (ram, 0x4c7f18, 1) , (ram, 0x4c7f18, 1)]
[(ram, 0x4c7f10, 8) MULTIEQUAL (ram, 0x4c7f10, 8) , (register, 0x10, 8)]
[(ram, 0x4c7f08, 8) MULTIEQUAL (ram, 0x4c7f08, 8) , (ram, 0x4c7f08, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000012f, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x2317a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0x19a, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x19a, 4)]
[(ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0x19a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x19a, 4)]
[ ---  BRANCH (ram, 0x2316cb, 1)]
[(stack, 0xffffffffffffffa8, 8) COPY (ram, 0x4c2e78, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0xb0, 8) PTRADD (ram, 0x4c2e78, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x110, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x242d60, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xab, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xb5, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xab, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0xb5, 4), (ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0xab, 4), (ram, 0x4c7f08, 8) MULTIEQUAL (ram, 0x4c7f08, 8) , (ram, 0x4c7f08, 8)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0xb5, 4), (ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0xab, 4), (ram, 0x4c7f10, 8) MULTIEQUAL (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8)]
[(ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0xb5, 4), (ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0xab, 4), (ram, 0x4c7f18, 1) MULTIEQUAL (ram, 0x4c7f18, 1) , (ram, 0x4c7f18, 1)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x231692, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffffe, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffffb8, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0xb0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xab, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x231710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) INT_ADD (unique, 0x10000147, 8) , (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) CAST (unique, 0x1000012f, 8), (unique, 0x10000147, 8) CAST (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x17c, 4)]
[(ram, 0x4c7f08, 8) COPY (ram, 0x4c7f08, 8), (ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0x17c, 4)]
[(ram, 0x4c7f10, 8) COPY (ram, 0x4c7f10, 8), (ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x17c, 4)]
[(ram, 0x4c7f18, 1) COPY (ram, 0x4c7f18, 1), (ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0x17c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x22, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf2, 4)]
[(ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0xf2, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0xf2, 4)]
[(ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0xf2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xf2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf2, 4)]
[ ---  CBRANCH (ram, 0x231660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x229330, 8) , (unique, 0x3800, 8) , (unique, 0x100000d7, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (register, 0x0, 4) , (const, 0x0, 8), (unique, 0x100000d7, 8) COPY (const, 0x28f44d, 8)]
[ ---  CBRANCH (ram, 0x2316f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16d, 4)]
[(ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0x16d, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x16d, 4)]
[(ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0x16d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10b, 4)]
[(ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0x10b, 4)]
[(ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x10b, 4)]
[(ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0x10b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2317c9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2316f5, 1)]
[(ram, 0x4c7f18, 1) MULTIEQUAL (ram, 0x4c7f18, 1) , (ram, 0x4c7f18, 1)]
[(ram, 0x4c7f10, 8) MULTIEQUAL (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8)]
[(ram, 0x4c7f08, 8) MULTIEQUAL (ram, 0x4c7f08, 8) , (ram, 0x4c7f08, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x2317d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x22, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) INT_ADD (unique, 0x1000015f, 8) , (unique, 0x10000167, 8), (unique, 0x10000167, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x1000015f, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2316dc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xfffffffe, 4)]
[(register, 0x0, 4) COPY (const, 0x16, 4)]
[ ---  BRANCH (ram, 0x2316f5, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (register, 0x0, 4), (unique, 0x4f00, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (unique, 0x10000177, 8) , (unique, 0x1000017f, 8), (unique, 0x1000017f, 8) CAST (stack, 0xffffffffffffffa8, 8), (unique, 0x10000177, 8) CAST (register, 0x110, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x148, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7f08, 8) COPY (ram, 0x4c7f08, 8), (ram, 0x4c7f08, 8) INDIRECT (ram, 0x4c7f08, 8) , (const, 0x148, 4), (ram, 0x4c7f08, 8) MULTIEQUAL (ram, 0x4c7f08, 8) , (ram, 0x4c7f08, 8) , (ram, 0x4c7f08, 8)]
[(ram, 0x4c7f10, 8) COPY (ram, 0x4c7f10, 8), (ram, 0x4c7f10, 8) INDIRECT (ram, 0x4c7f10, 8) , (const, 0x148, 4), (ram, 0x4c7f10, 8) MULTIEQUAL (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8) , (ram, 0x4c7f10, 8)]
[(ram, 0x4c7f18, 1) COPY (ram, 0x4c7f18, 1), (ram, 0x4c7f18, 1) INDIRECT (ram, 0x4c7f18, 1) , (const, 0x148, 4), (ram, 0x4c7f18, 1) MULTIEQUAL (ram, 0x4c7f18, 1) , (ram, 0x4c7f18, 1) , (ram, 0x4c7f18, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7f08, 8) COPY (ram, 0x4c7f08, 8)]
[(ram, 0x4c7f10, 8) COPY (ram, 0x4c7f10, 8)]
[(ram, 0x4c7f18, 1) COPY (ram, 0x4c7f18, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4)]
