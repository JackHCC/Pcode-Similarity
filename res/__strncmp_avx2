[(register, 0x200, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4312b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0x1000048d, 1), (unique, 0x1000048d, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x1000048c, 1), (unique, 0x1000048c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x12e0, 32) CALLOTHER (const, 0x271, 4) , (register, 0x12e0, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x4312e0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x0, 4) , (const, 0xf81, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfff, 4), (register, 0x0, 4) INT_OR (unique, 0x10000130, 4) , (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x10000130, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x431313, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x0, 4) , (const, 0xfe1, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000496, 8), (unique, 0x10000496, 8) PTRADD (unique, 0x100003fc, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100003fc, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x1220, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000048e, 8), (unique, 0x1000048e, 8) PTRADD (unique, 0x100003ec, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100003ec, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x20, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312e7, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000049e, 4) , (const, 0xfe1, 4), (unique, 0x1000049e, 4) CAST (register, 0x0, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x12e0, 16) SUBPIECE (register, 0x12e0, 32) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x431343, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100004a2, 4) , (const, 0xff1, 4), (unique, 0x100004a2, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc3280, 16) , (register, 0x12e0, 16), (unique, 0xc3280, 16) CALLOTHER (const, 0x19f, 4) , (unique, 0xc0300, 16) , (unique, 0xbb300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xbb300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004ae, 8), (unique, 0x100004ae, 8) PTRADD (unique, 0x1000041c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000041c, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb300, 16) CALLOTHER (const, 0x14b, 4) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004a6, 8), (unique, 0x100004a6, 8) PTRADD (unique, 0x1000040c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000040c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x10, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x431381, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100004b6, 4) , (const, 0xff9, 4), (unique, 0x100004b6, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4), (register, 0x8, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc3280, 16) , (register, 0x12e0, 16), (unique, 0xc3280, 16) CALLOTHER (const, 0x19f, 4) , (unique, 0xc0300, 16) , (unique, 0xbc780, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xbc780, 16) , (unique, 0xbc780, 16), (unique, 0xbc780, 16) CALLOTHER (const, 0x148, 4) , (unique, 0x5b80, 16), (unique, 0x5b80, 16) INT_ZEXT (unique, 0x5280, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004c2, 8), (unique, 0x100004c2, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000043c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000043c, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbc780, 16) CALLOTHER (const, 0x148, 4) , (unique, 0x5b80, 16), (unique, 0x5b80, 16) INT_ZEXT (unique, 0x5280, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004ba, 8), (unique, 0x100004ba, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000042c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000042c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x8, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4313b9, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100004ca, 4) , (const, 0xffd, 4), (unique, 0x100004ca, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) CALLOTHER (const, 0x1a2, 4) , (unique, 0xc0300, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xc3280, 16) , (register, 0x12e0, 16), (unique, 0xc3280, 16) CALLOTHER (const, 0x19f, 4) , (unique, 0xc0300, 16) , (unique, 0xbaa00, 16), (unique, 0xc0300, 16) CALLOTHER (const, 0x179, 4) , (unique, 0xbaa00, 16) , (unique, 0xbaa00, 16), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004d6, 8), (unique, 0x100004d6, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000045c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000045c, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbaa00, 16) CALLOTHER (const, 0x147, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004ce, 8), (unique, 0x100004ce, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000044c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000044c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x98, 8) INT_SUB (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x98, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004df, 1), (unique, 0x100004df, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004de, 1), (unique, 0x100004de, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003dc, 8) , (unique, 0x100003c4, 8) , (const, 0x1, 8), (unique, 0x100003dc, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x100003c4, 8) INT_ADD (register, 0x10, 8) , (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003cc, 8) , (unique, 0x100003bc, 8) , (const, 0x1, 8), (unique, 0x100003cc, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x100003bc, 8) INT_ADD (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x4, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0x100004e0, 1), (unique, 0x100004e0, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000046c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000046c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0x100004e1, 1), (unique, 0x100004e1, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000047c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000047c, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x431270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000046c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000046c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x431296, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x430fe6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x80, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0x100004e2, 1), (unique, 0x100004e2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000038c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000038c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0x100004e3, 1), (unique, 0x100004e3, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000039c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000039c, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x431270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000038c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000038c, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x430f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x1220, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x430f30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (register, 0x12e0, 32), (register, 0x1260, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1260, 32) , (register, 0x12c0, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12c0, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x12c0, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x20, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004e5, 1), (unique, 0x100004e5, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004e4, 1), (unique, 0x100004e4, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001a4, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001a4, 8) PTRSUB (unique, 0x1000019c, 8) , (const, 0x0, 8), (unique, 0x1000019c, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000018c, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000018c, 8) PTRSUB (unique, 0x10000184, 8) , (const, 0x0, 8), (unique, 0x10000184, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1280, 32), (register, 0x1200, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x430f50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (register, 0x12e0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1240, 32) , (register, 0x12a0, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12a0, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004e7, 1), (unique, 0x100004e7, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004e6, 1), (unique, 0x100004e6, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d4, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001d4, 8) PTRSUB (unique, 0x100001cc, 8) , (const, 0x0, 8), (unique, 0x100001cc, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001bc, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001bc, 8) PTRSUB (unique, 0x100001b4, 8) , (const, 0x0, 8), (unique, 0x100001b4, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[ ---  CBRANCH (ram, 0x430f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1280, 32)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x60, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x100004e9, 1), (unique, 0x100004e9, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x100004e8, 1), (unique, 0x100004e8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000204, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000204, 8) PTRSUB (unique, 0x100001fc, 8) , (const, 0x0, 8), (unique, 0x100001fc, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001ec, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100001ec, 8) PTRSUB (unique, 0x100001e4, 8) , (const, 0x0, 8), (unique, 0x100001e4, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x10000502, 8), (unique, 0x10000502, 8) INT_ADD (unique, 0x100004fa, 8) , (register, 0x10, 8), (unique, 0x100004fa, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x100004f2, 8), (unique, 0x100004f2, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_AND (unique, 0x100004ea, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100004ea, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0x10000143, 1), (unique, 0x10000143, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_SUB (register, 0x10, 8) , (register, 0x10, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (unique, 0x100004f2, 8), (unique, 0x100004f2, 8) CAST (register, 0x38, 8), (register, 0x10, 8) INT_AND (unique, 0x100004ea, 8) , (const, 0xffffffffffffff80, 8), (unique, 0x100004ea, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x30, 8) INT_AND (register, 0x8, 8) , (const, 0xffffffff, 8), (register, 0x8, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x7, 4), (register, 0x8, 8) INT_SUB (const, 0x1000, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfff, 4), (register, 0x30, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) CAST (unique, 0x10000512, 8), (unique, 0x10000512, 8) INT_ADD (register, 0x10, 8) , (unique, 0x1000050a, 8), (unique, 0x1000050a, 8) CAST (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x43103a, 1)]
[(register, 0x98, 8) MULTIEQUAL (register, 0x98, 8) , (register, 0x98, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) INT_ZEXT (unique, 0x1f80, 4), (unique, 0x1f80, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x431180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000094, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4311f0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_LESS (register, 0x8, 4) , (const, 0x40, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x7f, 4), (register, 0x8, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4311f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) CAST (unique, 0x10000562, 8), (unique, 0x10000562, 8) INT_RIGHT (register, 0x38, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x30, 8) , (const, 0x20, 4), (register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x38, 8) INT_OR (unique, 0x100000a0, 8) , (unique, 0x100000a8, 8), (unique, 0x100000a8, 8) INT_ZEXT (register, 0x38, 4), (unique, 0x100000a0, 8) INT_AND (unique, 0x1000055a, 8) , (const, 0xffffffff00000000, 8), (unique, 0x1000055a, 8) CAST (register, 0x38, 8), (register, 0x38, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1220, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1220, 32) , (register, 0x1260, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x1240, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000552, 8), (unique, 0x10000552, 8) INT_ADD (unique, 0x1000054a, 8) , (unique, 0x10000344, 8), (unique, 0x1000054a, 8) CAST (register, 0x10, 8), (unique, 0x10000344, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0x20, 8), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000542, 8), (unique, 0x10000542, 8) INT_ADD (unique, 0x1000053a, 8) , (unique, 0x10000094, 8), (unique, 0x1000053a, 8) CAST (register, 0x10, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000532, 8), (unique, 0x10000532, 8) INT_ADD (unique, 0x1000052a, 8) , (unique, 0x1000033c, 8), (unique, 0x1000052a, 8) CAST (register, 0x0, 8), (unique, 0x1000033c, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0x20, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000522, 8), (unique, 0x10000522, 8) INT_ADD (unique, 0x1000051a, 8) , (unique, 0x10000094, 8), (unique, 0x1000051a, 8) CAST (register, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x100005b2, 8), (unique, 0x100005b2, 8) INT_XOR (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (unique, 0x100000d4, 8) , (const, 0x20, 4), (unique, 0x100000d4, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12c0, 32), (register, 0x38, 8) INT_OR (unique, 0x100000bc, 8) , (unique, 0x100000c4, 8), (unique, 0x100000c4, 8) INT_ZEXT (register, 0x38, 4), (unique, 0x100000bc, 8) INT_AND (unique, 0x100005aa, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100005aa, 8) CAST (register, 0x38, 8), (register, 0x38, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12a0, 32) , (register, 0x12e0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005a2, 8), (unique, 0x100005a2, 8) INT_ADD (unique, 0x1000059a, 8) , (unique, 0x10000384, 8), (unique, 0x1000059a, 8) CAST (register, 0x10, 8), (unique, 0x10000384, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0x60, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12a0, 32) , (register, 0x1240, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000592, 8), (unique, 0x10000592, 8) INT_ADD (unique, 0x1000058a, 8) , (unique, 0x1000037c, 8), (unique, 0x1000058a, 8) CAST (register, 0x10, 8), (unique, 0x1000037c, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0x40, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000582, 8), (unique, 0x10000582, 8) INT_ADD (unique, 0x1000057a, 8) , (unique, 0x10000374, 8), (unique, 0x1000057a, 8) CAST (register, 0x0, 8), (unique, 0x10000374, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0x60, 8), (register, 0x1240, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000572, 8), (unique, 0x10000572, 8) INT_ADD (unique, 0x1000056a, 8) , (unique, 0x1000036c, 8), (unique, 0x1000056a, 8) CAST (register, 0x0, 8), (unique, 0x1000036c, 8) INT_ADD (unique, 0x10000094, 8) , (const, 0x40, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x431239, 1) , (unique, 0x10000156, 1), (unique, 0x10000156, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_LESS (const, 0x3f, 4) , (register, 0x8, 4), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x40, 4)]
[(register, 0x38, 8) CAST (unique, 0x100005c2, 8), (unique, 0x100005c2, 8) INT_RIGHT (unique, 0x100005ba, 8) , (unique, 0x57680, 1), (unique, 0x100005ba, 8) CAST (register, 0x38, 8), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x80, 8) INT_ZEXT (register, 0x8, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 8) COPY (const, 0x1f, 8)]
[ ---  CBRANCH (ram, 0x431046, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0xdcc80, 8) COPY (const, 0x0, 8)]
[(unique, 0xdcc80, 8) MULTIEQUAL (unique, 0xdcc80, 8) , (unique, 0xdcc80, 8)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdce00, 1), (unique, 0xdce00, 1) INT_EQUAL (unique, 0xdcd80, 8) , (const, 0x0, 8), (unique, 0xdcd80, 8) INT_AND (unique, 0x100005ca, 8) , (const, 0x1, 8), (unique, 0x100005ca, 8) CAST (unique, 0xdcd00, 8), (unique, 0xdcd00, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xdcd00, 8)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (register, 0x98, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x40, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x80, 8), (register, 0x8, 8) INT_ADD (unique, 0xdcc80, 8) , (unique, 0x10000094, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005ea, 8), (unique, 0x100005ea, 8) INT_ADD (unique, 0x100005e2, 8) , (register, 0x8, 8), (unique, 0x100005e2, 8) CAST (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005da, 8), (unique, 0x100005da, 8) INT_ADD (unique, 0x100005d2, 8) , (register, 0x8, 8), (unique, 0x100005d2, 8) CAST (register, 0x0, 8)]
[(unique, 0xdcc80, 8) INT_ADD (unique, 0xdcc80, 8) , (const, 0x1, 8)]
[(unique, 0xdcd00, 8) CAST (unique, 0x100005fa, 8), (unique, 0x100005fa, 8) INT_OR (unique, 0xdcf00, 8) , (const, 0x8000000000000000, 8), (unique, 0xdcf00, 8) INT_RIGHT (unique, 0x100005f2, 8) , (const, 0x1, 4), (unique, 0x100005f2, 8) CAST (unique, 0xdcd00, 8)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdcc80, 8) COPY (const, 0x0, 8)]
[(unique, 0xdcc80, 8) MULTIEQUAL (unique, 0xdcc80, 8) , (unique, 0xdcc80, 8)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdce00, 1), (unique, 0xdce00, 1) INT_EQUAL (unique, 0xdcd80, 8) , (const, 0x0, 8), (unique, 0xdcd80, 8) INT_AND (unique, 0x10000602, 8) , (const, 0x1, 8), (unique, 0x10000602, 8) CAST (unique, 0xdcd00, 8), (unique, 0xdcd00, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xdcd00, 8)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xdcc80, 8) , (register, 0x98, 8)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x1000060b, 1), (unique, 0x1000060b, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x1000060a, 1), (unique, 0x1000060a, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000035c, 8) , (unique, 0xdcc80, 8) , (const, 0x1, 8), (unique, 0x1000035c, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000034c, 8) , (unique, 0xdcc80, 8) , (const, 0x1, 8), (unique, 0x1000034c, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xdcc80, 8) INT_ADD (unique, 0xdcc80, 8) , (const, 0x1, 8)]
[(unique, 0xdcd00, 8) CAST (unique, 0x10000614, 8), (unique, 0x10000614, 8) INT_OR (unique, 0xdcf00, 8) , (const, 0x8000000000000000, 8), (unique, 0xdcf00, 8) INT_RIGHT (unique, 0x1000060c, 8) , (const, 0x1, 4), (unique, 0x1000060c, 8) CAST (unique, 0xdcd00, 8)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x431020, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x12e0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x12c0, 32), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1200, 32) , (register, 0x12a0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12c0, 32) , (register, 0x1260, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x237, 4) , (register, 0x12a0, 32) , (register, 0x1240, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1240, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x20, 8), (register, 0x1200, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x20, 8), (register, 0x1220, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1220, 32) , (register, 0x1260, 32), (register, 0x1280, 32) CALLOTHER (const, 0x237, 4) , (register, 0x1280, 32) , (register, 0x1200, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1260, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1280, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x1260, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x1200, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_SUB (register, 0x98, 8) , (const, 0x80, 8), (register, 0x200, 1) INT_LESS (register, 0x98, 8) , (const, 0x80, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4310c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1200, 32), (register, 0x1200, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x20, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x431100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1220, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x40, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x431140, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12a0, 32), (register, 0x12a0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12a0, 32) , (register, 0x12e0, 32)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x60, 8) , (register, 0x98, 8)]
[(register, 0x30, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x12c0, 32), (register, 0x12c0, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x12c0, 32) , (register, 0x12e0, 32)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (register, 0x98, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0x60, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x1000061d, 1), (unique, 0x1000061d, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x1000061c, 1), (unique, 0x1000061c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000032c, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000032c, 8) PTRSUB (unique, 0x10000324, 8) , (const, 0x0, 8), (unique, 0x10000324, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000314, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000314, 8) PTRSUB (unique, 0x1000030c, 8) , (const, 0x0, 8), (unique, 0x1000030c, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (register, 0x98, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x1000061f, 1), (unique, 0x1000061f, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x1000061e, 1), (unique, 0x1000061e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002fc, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x100002fc, 8) PTRSUB (unique, 0x100002f4, 8) , (const, 0x0, 8), (unique, 0x100002f4, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002e4, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x100002e4, 8) PTRSUB (unique, 0x100002dc, 8) , (const, 0x0, 8), (unique, 0x100002dc, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (register, 0x98, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8), (register, 0x38, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000621, 1), (unique, 0x10000621, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10000620, 1), (unique, 0x10000620, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002cc, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x100002cc, 8) PTRSUB (unique, 0x100002c4, 8) , (const, 0x0, 8), (unique, 0x100002c4, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x20, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002b4, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x100002b4, 8) PTRSUB (unique, 0x100002ac, 8) , (const, 0x0, 8), (unique, 0x100002ac, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x38, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (register, 0x98, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000623, 1), (unique, 0x10000623, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10000622, 1), (unique, 0x10000622, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000029c, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000029c, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000028c, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000028c, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
[(unique, 0xdc900, 4) COPY (const, 0x0, 4)]
[(unique, 0xdc900, 4) MULTIEQUAL (unique, 0xdc900, 4) , (unique, 0xdc900, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (unique, 0xdca80, 1), (unique, 0xdca80, 1) INT_EQUAL (unique, 0xdca00, 4) , (const, 0x0, 4), (unique, 0xdca00, 4) INT_AND (unique, 0xdc980, 4) , (const, 0x1, 4), (unique, 0xdc980, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xdc980, 4)]
[ ---  CBRANCH (ram, 0x4312a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xdc900, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000625, 1), (unique, 0x10000625, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10000624, 1), (unique, 0x10000624, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000174, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000174, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000164, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000164, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0xdc900, 4) INT_ADD (unique, 0xdc900, 4) , (const, 0x1, 4)]
[(unique, 0xdc980, 4) INT_OR (unique, 0xdcb80, 4) , (const, 0x80000000, 4), (unique, 0xdcb80, 4) INT_RIGHT (unique, 0xdc980, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffa, 1)]
