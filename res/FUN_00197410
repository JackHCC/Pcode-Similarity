[(unique, 0x100004d0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x26, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x26, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x26, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x26, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x26, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x26, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000508, 8) , (const, 0x0, 8), (unique, 0x10000508, 8) CAST (ram, 0x4eaed0, 8)]
[ ---  CBRANCH (ram, 0x197748, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb264, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x536, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x536, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x536, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x536, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x536, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x536, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x536, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x536, 4)]
[ ---  CALL (ram, 0x1913e0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000510, 8), (unique, 0x10000510, 8) CAST (unique, 0x100004d0, 8)]
[(unique, 0x1000031e, 8) INT_ADD (unique, 0x100004c8, 8) , (stack, 0x0, 1), (unique, 0x100004c8, 8) INT_LEFT (unique, 0x100004c0, 8) , (const, 0x8, 8), (unique, 0x100004c0, 8) INT_SEXT (unique, 0x10000518, 7), (unique, 0x10000518, 7) CAST (stack, 0x1, 7), (stack, 0x1, 7) INDIRECT (stack, 0x1, 7) , (const, 0x536, 4), (stack, 0x0, 1) INDIRECT (stack, 0x0, 1) , (const, 0x536, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000051f, 8), (unique, 0x1000051f, 8) CAST (unique, 0x100004d0, 8)]
[(unique, 0x10000316, 8) INT_ADD (unique, 0x100004b8, 8) , (stack, 0x0, 1), (unique, 0x100004b8, 8) INT_LEFT (unique, 0x100004b0, 8) , (const, 0x8, 8), (unique, 0x100004b0, 8) INT_SEXT (unique, 0x10000527, 7), (unique, 0x10000527, 7) CAST (stack, 0x1, 7)]
[(unique, 0x10000347, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000034f, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(unique, 0x10000357, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x1000035f, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x10000367, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000036f, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(unique, 0x10000377, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(unique, 0x1000037b, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x1000037f, 8) MULTIEQUAL (unique, 0x1000031e, 8) , (unique, 0x10000316, 8)]
[ ---  CBRANCH (ram, 0x19744c, 1) , (unique, 0x10000346, 1), (unique, 0x10000346, 1) INT_NOTEQUAL (unique, 0x1000033e, 8) , (const, 0x0, 8), (unique, 0x1000033e, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x530, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x530, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x530, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x530, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x530, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x530, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x530, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000052e, 8), (unique, 0x1000052e, 8) CALLIND (unique, 0x1000033e, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x1000037f, 8)]
[ ---  CBRANCH (ram, 0x197720, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x11, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x51a, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x51a, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x51a, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x51a, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x51a, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x51a, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x51a, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000536, 8), (unique, 0x10000536, 8) CALL (ram, 0x197070, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1975e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x197930, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000053e, 8) , (const, 0x16, 4), (unique, 0x1000053e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000367, 8) , (unique, 0x10000347, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x504, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x504, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x504, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x504, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x504, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x504, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x504, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197700, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (unique, 0x1000019a, 8) , (const, 0x21, 8), (unique, 0x1000019a, 8) INT_2COMP (register, 0x38, 8)]
[(unique, 0x100004e8, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x197945, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x100004e0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x19746f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x197628, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100001b2, 8) , (register, 0x38, 8), (unique, 0x100001b2, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001b2, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x197700, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x30, 8)]
[(unique, 0x100004d8, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100004d8, 8) , (unique, 0x100004e0, 8) , (unique, 0x100004e8, 8) , (unique, 0x100001b2, 8)]
[ ---  CBRANCH (ram, 0x1977a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000037b, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x197738, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[(unique, 0x10000328, 1) COPY (const, 0x0, 1)]
[(register, 0xa0, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x197499, 1)]
[(unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x10000327, 1) MULTIEQUAL (unique, 0xc800, 1) , (unique, 0x10000328, 1)]
[ ---  CBRANCH (ram, 0x197700, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x197700, 1) , (unique, 0x10000327, 1)]
[ ---  CBRANCH (ram, 0x197700, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0xa0, 8), (register, 0x0, 8) INT_SUB (unique, 0x100000f9, 8) , (const, 0x21, 8), (unique, 0x100000f9, 8) INT_2COMP (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000546, 8) , (const, 0xc, 4), (unique, 0x10000546, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000367, 8) , (unique, 0x10000347, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x324, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x324, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x324, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x324, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x324, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x324, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x324, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0xc1, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0xc1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0xc1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0xc1, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0xc1, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0xc1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc1, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x1974ce, 8)]
[ ---  CBRANCH (ram, 0x197920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000054e, 8), (unique, 0x1000054e, 8) CALL (ram, 0x1942d0, 8) , (unique, 0x100003cb, 8) , (unique, 0x3a00, 8), (unique, 0x100003cb, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xa0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100004f0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x197640, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x10000556, 8) , (register, 0x18, 8), (unique, 0x10000556, 8) CAST (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(unique, 0x100004f8, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000576, 8), (unique, 0x10000576, 8) INT_ADD (unique, 0x1000056e, 8) , (register, 0x18, 8), (unique, 0x1000056e, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000566, 8), (unique, 0x10000566, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x18, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000055e, 8) , (unique, 0x100003eb, 8), (unique, 0x1000055e, 8) CAST (register, 0x0, 8), (unique, 0x100003eb, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x197514, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000058e, 8), (unique, 0x1000058e, 8) INT_SUB (unique, 0x1000057e, 8) , (unique, 0x10000586, 8), (unique, 0x10000586, 8) CAST (unique, 0x3100, 8), (unique, 0x1000057e, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000566, 8), (unique, 0x10000566, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x18, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x1000055e, 8) , (unique, 0x100003eb, 8), (unique, 0x1000055e, 8) CAST (register, 0x0, 8), (unique, 0x100003eb, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000500, 8) COPY (register, 0x0, 8)]
[(register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (unique, 0x100005ae, 8), (unique, 0x100005ae, 8) CAST (register, 0x0, 8), (register, 0xb0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) CAST (unique, 0x100005a6, 8), (unique, 0x100005a6, 8) INT_SUB (unique, 0x10000596, 8) , (unique, 0x1000059e, 8), (unique, 0x1000059e, 8) CAST (unique, 0x3100, 8), (unique, 0x10000596, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x100004f8, 8) , (unique, 0x10000500, 8)]
[ ---  CBRANCH (ram, 0x197780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002fc, 8) , (const, 0x0, 8), (unique, 0x100002fc, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0xb0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005be, 8), (unique, 0x100005be, 8) INT_ADD (unique, 0x100005b6, 8) , (unique, 0x10000403, 8), (unique, 0x100005b6, 8) CAST (register, 0xa8, 8), (unique, 0x10000403, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x100005c6, 8) , (register, 0x10, 8), (unique, 0x100005c6, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x18d, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x18a, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x167, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x15f, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x18d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x18a, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x167, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x15f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x18d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x18a, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x167, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x15f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x167, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15f, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x18d, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x18a, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x167, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x15f, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x18d, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x18a, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x167, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x15f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18a, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x167, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x15f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18d, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x19755d, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (unique, 0x100003d3, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x100003d3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x197577, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x197638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x100005ce, 8) , (register, 0x18, 8), (unique, 0x100005ce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x1280, 8)]
[ ---  CBRANCH (ram, 0x1975a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005d6, 8), (unique, 0x100005d6, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b8c98, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x2b90d8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x197690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001c2, 8) , (const, 0x0, 8), (unique, 0x100001c2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100004f0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x197690, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3800, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3800, 8) INT_ADD (register, 0xa0, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005e6, 8), (unique, 0x100005e6, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa0, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100005de, 8) , (register, 0xa0, 8), (unique, 0x100005de, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_OR (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x26e, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x26a, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x251, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x26e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x26a, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x251, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x26e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x26a, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x251, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x26a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x251, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x26e, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x26a, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x251, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x26e, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x26a, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x251, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x26e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x26a, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x251, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26e, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x197687, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (unique, 0x100003db, 8) , (unique, 0x3400, 8) , (const, 0x1, 8), (unique, 0x100003db, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x100005de, 8) , (register, 0xa0, 8), (unique, 0x100005de, 8) CAST (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) INT_OR (register, 0xb0, 8) , (const, 0x2, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x315, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x313, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x315, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x313, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x315, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x313, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x315, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x313, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x315, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x313, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x315, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x313, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x315, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x313, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100005ee, 8) , (unique, 0xbd80, 8), (unique, 0x100005ee, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x197690, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[ ---  CBRANCH (ram, 0x197920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x197710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001e2, 8) , (const, 0x0, 8), (unique, 0x100001e2, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001ea, 8) , (const, 0x0, 8), (unique, 0x100001ea, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005fe, 8), (unique, 0x100005fe, 8) INT_AND (unique, 0x100005f6, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100005f6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xceb, 8)]
[ ---  CBRANCH (ram, 0x1976e7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000606, 8), (unique, 0x10000606, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b8de8, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x2b8ff8, 8)]
[ ---  BRANCH (ram, 0x1975b1, 1)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1978aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000060e, 8), (unique, 0x1000060e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000034f, 8) , (unique, 0x10000347, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x468, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x468, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x468, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x468, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x468, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x468, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x468, 4)]
[ ---  CBRANCH (ram, 0x1977ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000616, 8), (unique, 0x10000616, 8) CALL (ram, 0x191da0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x48c, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x485, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x48c, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x485, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x48c, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x485, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x485, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x48c, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x485, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x48c, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x485, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x48c, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x485, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x48c, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x1978d8, 8)]
[ ---  CBRANCH (ram, 0x197908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000626, 8), (unique, 0x10000626, 8) CALL (ram, 0x195490, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x1000061e, 8), (unique, 0x1000061e, 8) CALL (ram, 0x1916e0, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x197908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1977ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000037b, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x464, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x464, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x464, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x464, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x464, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x464, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x464, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x368, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x368, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x368, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x368, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x368, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x368, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x368, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1977ec, 1)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x1000034f, 8) , (const, 0x447, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000357, 8) , (const, 0x447, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x1000035f, 8) , (const, 0x447, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000367, 8) , (const, 0x447, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x1000036f, 8) , (const, 0x447, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x10000377, 4) , (const, 0x447, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000037b, 4) , (const, 0x447, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x371, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x371, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x371, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x371, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x371, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x371, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x371, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x371, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x1977fa, 8)]
[ ---  CBRANCH (ram, 0x1978e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000062e, 8), (unique, 0x1000062e, 8) CALL (ram, 0x195490, 8) , (register, 0xa0, 8) , (register, 0x18, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x42e, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x427, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x42e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x427, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x42e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x427, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x42e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x427, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x42e, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x427, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x42e, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x427, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x42e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x427, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x42e, 4), (stack, 0xffffffffffffffc0, 8) COPY (const, 0x197905, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000063e, 8), (unique, 0x1000063e, 8) CALL (ram, 0x195490, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x10000636, 8), (unique, 0x10000636, 8) CALL (ram, 0x191fc0, 8) , (register, 0xa0, 8) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x197835, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197818, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x418, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x418, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x418, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x418, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x418, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x418, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x418, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x38c, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x38c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x38c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x38c, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x38c, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x38c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x38c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0x10000474, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(unique, 0x1000047c, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x10000484, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x1000048c, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000494, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(unique, 0x1000049c, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(unique, 0x100004a0, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x197835, 1) , (unique, 0x10000473, 1), (unique, 0x10000473, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x10000474, 8) , (const, 0x40a, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x1000047c, 8) , (const, 0x40a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x10000484, 8) , (const, 0x40a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000048c, 8) , (const, 0x40a, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x10000494, 8) , (const, 0x40a, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x1000049c, 4) , (const, 0x40a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100004a0, 4) , (const, 0x40a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x40a, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x100004a0, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (unique, 0x1000049c, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (unique, 0x10000494, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x1000048c, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x10000484, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x1000047c, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (unique, 0x10000474, 8) , (ram, 0x4ead70, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x197920, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x197710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000273, 8) , (const, 0x0, 8), (unique, 0x10000273, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x197862, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000027b, 8) , (const, 0x0, 8), (unique, 0x1000027b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000064e, 8), (unique, 0x1000064e, 8) INT_AND (unique, 0x10000646, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000646, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x197710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0xa0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xcfe, 8)]
[ ---  CBRANCH (ram, 0x197897, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000656, 8), (unique, 0x10000656, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b8e48, 8)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x2b8ff8, 8)]
[ ---  BRANCH (ram, 0x1975b1, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100003bb, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x100003b3, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x100003ab, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffc0, 8), (unique, 0x100003bb, 8) COPY (const, 0x2b8758, 8), (unique, 0x100003b3, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x100003ab, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000065e, 8), (unique, 0x1000065e, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1fc, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x20e, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x20b, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1fc, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x20e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x20b, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1fc, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x20e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x20b, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1fc, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fc, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x20e, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x20b, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1fc, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x20e, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x20b, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x1fc, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x20e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x20b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1fc, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
