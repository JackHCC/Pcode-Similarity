[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21, 4)]
[(ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x21, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x21, 4)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x21, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21, 4)]
[ ---  CBRANCH (ram, 0x1c84e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x16d890, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c4750, 8) COPY (ram, 0x4c4750, 8)]
[(ram, 0x4c5c00, 8) COPY (ram, 0x4c5c00, 8)]
[(ram, 0x4c5c08, 4) COPY (ram, 0x4c5c08, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1c8380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5c08, 4) , (const, 0x0, 4)]
[(ram, 0x4c5c08, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5c08, 4) , (const, 0x0, 4)]
[(ram, 0x4c5c08, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1c83a3, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x135, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x135, 4)]
[(ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x135, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x135, 4)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x135, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x135, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x135, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000108, 8), (unique, 0x10000108, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5c08, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5c08, 4) MULTIEQUAL (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4)]
[(ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1c84f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4750, 8) , (const, 0x0, 8), (ram, 0x4c4750, 8) MULTIEQUAL (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x125, 4)]
[(ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x125, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x125, 4), (ram, 0x4c5c00, 8) COPY (const, 0x400, 8)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x125, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x125, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000159, 8), (unique, 0x10000159, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x1c83b3, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5c08, 4) MULTIEQUAL (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4)]
[(ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c4750, 8) MULTIEQUAL (ram, 0x4c4750, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000131, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[ ---  BRANCH (ram, 0x1c83e9, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5c08, 4) MULTIEQUAL (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4)]
[(ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1c8470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4750, 8) , (const, 0x0, 8), (ram, 0x4c4750, 8) MULTIEQUAL (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6a, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x6a, 4)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x6a, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x6a, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6a, 4)]
[(unique, 0x10000139, 8) COPY (ram, 0x4c4750, 8), (ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x6a, 4)]
[ ---  CBRANCH (ram, 0x1c8460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x1c9dd0, 8) , (register, 0x38, 8) , (unique, 0x10000100, 8) , (ram, 0x4c4750, 8) , (ram, 0x4c5c00, 8) , (unique, 0x3800, 8), (unique, 0x10000100, 8) CAST (unique, 0x10000161, 8), (unique, 0x10000161, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5be0, 8)]
[ ---  CBRANCH (ram, 0x1c8479, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c4750, 8) , (const, 0x0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c5c08, 4) MULTIEQUAL (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4)]
[(ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c4750, 8) MULTIEQUAL (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c5c08, 4) MULTIEQUAL (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4)]
[(ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c4750, 8) MULTIEQUAL (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000169, 8), (unique, 0x10000169, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000131, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1c8492, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000151, 4) COPY (unique, 0x10000128, 4), (unique, 0x10000128, 4) INT_ADD (ram, 0x4c5c08, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1c84b4, 1) , (unique, 0x1000012c, 1), (unique, 0x1000012c, 1) INT_NOTEQUAL (unique, 0x10000128, 4) , (const, 0x0, 4), (unique, 0x10000128, 4) INT_ADD (ram, 0x4c5c08, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x10e, 4)]
[(ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x10e, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x10e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x10e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10e, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000110, 8), (unique, 0x10000110, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c5c08, 8)]
[(unique, 0x10000141, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0x10e, 4)]
[(unique, 0x1000014d, 4) COPY (ram, 0x4c5c08, 4), (ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x10e, 4), (ram, 0x4c5c08, 4) INT_ADD (ram, 0x4c5c08, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000171, 8) , (register, 0x10, 4), (unique, 0x10000171, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000131, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000141, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe6, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c4750, 8) COPY (ram, 0x4c4750, 8), (ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0xe6, 4), (ram, 0x4c4750, 8) MULTIEQUAL (ram, 0x4c4750, 8) , (ram, 0x4c4750, 8)]
[(ram, 0x4c5c00, 8) COPY (ram, 0x4c5c00, 8), (ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0xe6, 4), (ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c5c08, 4) COPY (ram, 0x4c5c08, 4), (ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0xe6, 4), (ram, 0x4c5c08, 4) COPY (unique, 0x10000155, 4), (unique, 0x10000155, 4) MULTIEQUAL (unique, 0x1000014d, 4) , (unique, 0x10000151, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xe6, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x7e, 4)]
[(ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x7e, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (unique, 0x3200, 8) , (const, 0x7e, 4), (unique, 0x3200, 8) INT_ADD (ram, 0x4c5c00, 8) , (const, 0x400, 8)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x7e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x7e, 4)]
[ ---  CBRANCH (ram, 0x1c83c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000179, 8), (unique, 0x10000179, 8) CALL (ram, 0x11f7f0, 8) , (ram, 0x4c4750, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (ram, 0x4c5c00, 8) , (const, 0x400, 8)]
[(ram, 0x4c4750, 8) INDIRECT (ram, 0x4c4750, 8) , (const, 0x94, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x94, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x10000139, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x94, 4)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x9a, 4), (ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0x94, 4)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x9a, 4), (ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0x94, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x9a, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x94, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000189, 8) , (unique, 0xbc80, 4), (unique, 0x10000189, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000131, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000181, 8), (unique, 0x10000181, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000131, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1c83c8, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c4750, 8) INDIRECT (unique, 0x10000145, 8) , (const, 0xa1, 4), (unique, 0x10000145, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5c00, 8) INDIRECT (ram, 0x4c5c00, 8) , (const, 0xa1, 4), (ram, 0x4c5c00, 8) MULTIEQUAL (ram, 0x4c5c00, 8) , (ram, 0x4c5c00, 8)]
[(ram, 0x4c5c08, 4) INDIRECT (ram, 0x4c5c08, 4) , (const, 0xa1, 4), (ram, 0x4c5c08, 4) MULTIEQUAL (ram, 0x4c5c08, 4) , (ram, 0x4c5c08, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xa1, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x1c84d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x16e250, 8) , (register, 0x38, 8) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) CAST (unique, 0x3800, 8)]
[(ram, 0x4c4750, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1c83e9, 1)]
