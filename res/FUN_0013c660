[(register, 0x28, 8) COPY (const, 0xc8, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000051d, 8), (unique, 0x1000051d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffff7e8, 2) COPY (const, 0x0, 2)]
[(stack, 0xfffffffffffff7ac, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0xfffffffe, 4)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(unique, 0x100004e5, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000048a, 8) , (const, 0x1, 8) , (const, 0x2, 8), (unique, 0x1000048a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7e6, 8)]
[(unique, 0x100004fd, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x1000048a, 8) , (const, 0x1, 8) , (const, 0x2, 8), (unique, 0x1000048a, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7e6, 8)]
[(unique, 0x1000050d, 8) COPY (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff978, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(stack, 0xfffffffffffff7c0, 8) MULTIEQUAL (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8)]
[(stack, 0xfffffffffffff7ac, 4) MULTIEQUAL (stack, 0xfffffffffffff7ac, 4) , (stack, 0xfffffffffffff7ac, 4)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (unique, 0x1000050d, 8) , (stack, 0xfffffffffffff798, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x100004e5, 8) , (unique, 0x100004ed, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x3c80, 8) , (register, 0x18, 8)]
[(unique, 0x10000515, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100004fd, 8) , (unique, 0x10000505, 8)]
[ ---  CBRANCH (ram, 0x13c71e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xfffffff6, 4), (register, 0x0, 4) INT_SEXT (unique, 0x10000529, 1), (unique, 0x10000529, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x100002b7, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002b7, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9820, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000525, 4), (unique, 0x10000525, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x13c9f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffff7a8, 4) , (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x13cbc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x13ca10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[ ---  CBRANCH (ram, 0x13ca29, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[ ---  CBRANCH (ram, 0x13cbc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x13ca10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x20, 1)]
[ ---  CBRANCH (ram, 0x13ca10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x9, 1)]
[(register, 0x38, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  BRANCHIND (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x10, 8) INT_AND (unique, 0x1000052a, 8) , (const, 0xffffffff00000000, 8), (unique, 0x1000052a, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[ ---  CBRANCH (ram, 0x13ce9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x10000532, 8), (unique, 0x10000532, 8) INT_OR (register, 0x10, 8) , (const, 0x9, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000053a, 8), (unique, 0x1000053a, 8) INT_OR (register, 0x10, 8) , (const, 0xb, 8)]
[ ---  BRANCH (ram, 0x13ce7a, 1)]
[ ---  CBRANCH (ram, 0x13ce61, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000054a, 8), (unique, 0x1000054a, 8) INT_OR (register, 0x10, 8) , (const, 0xc, 8), (register, 0x10, 8) INT_AND (unique, 0x10000542, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000542, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[ ---  BRANCH (ram, 0x13ce3e, 1)]
[(register, 0x10, 8) INT_AND (unique, 0x10000552, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000552, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[ ---  CBRANCH (ram, 0x13ce76, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x1000055a, 8), (unique, 0x1000055a, 8) INT_OR (register, 0x10, 8) , (const, 0xa, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x103, 4)]
[(register, 0x10, 4) COPY (const, 0x7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(register, 0x10, 8) CAST (unique, 0x10000562, 8), (unique, 0x10000562, 8) INT_OR (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x13cc3a, 1)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 4) COPY (const, 0x7, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x103, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(register, 0x38, 8) CAST (unique, 0x1000056a, 8), (unique, 0x1000056a, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffd0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000220, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x88, 8)]
[(unique, 0x10000229, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x13ccd2, 1) , (unique, 0x10000231, 1), (unique, 0x10000231, 1) INT_LESS (unique, 0x10000572, 1) , (const, 0xa, 1), (unique, 0x10000572, 1) CAST (register, 0x30, 1), (register, 0x30, 1) INT_SUB (unique, 0x10000228, 1) , (const, 0x30, 1), (unique, 0x10000228, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x3400, 8) CAST (unique, 0x1000057b, 8), (unique, 0x1000057b, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x10000573, 8) , (const, 0xa, 8), (unique, 0x10000573, 8) CAST (unique, 0x10000229, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffd0, 4), (register, 0x10, 4) INT_SEXT (unique, 0x10000228, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) PTRADD (unique, 0x10000220, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) COPY (const, 0xb, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x106, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x10000220, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(register, 0x10, 8) CAST (unique, 0x1000058b, 8), (unique, 0x1000058b, 8) INT_OR (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_AND (unique, 0x10000583, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000583, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[ ---  BRANCH (ram, 0x13cd1e, 1)]
[(register, 0x10, 8) CAST (unique, 0x1000059b, 8), (unique, 0x1000059b, 8) INT_OR (register, 0x10, 8) , (const, 0x7, 8), (register, 0x10, 8) INT_AND (unique, 0x10000593, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000593, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[ ---  BRANCH (ram, 0x13cd89, 1)]
[(register, 0x10, 8) CAST (unique, 0x100005ab, 8), (unique, 0x100005ab, 8) INT_OR (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_AND (unique, 0x100005a3, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100005a3, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 4) COPY (const, 0x8, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x104, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(register, 0x10, 8) CAST (unique, 0x100005bb, 8), (unique, 0x100005bb, 8) INT_OR (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_AND (unique, 0x100005b3, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100005b3, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[ ---  BRANCH (ram, 0x13cd1e, 1)]
[ ---  CBRANCH (ram, 0x13cc63, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13c6e6, 1)]
[ ---  CBRANCH (ram, 0x13c9e0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xfffffffffffff7a8, 4), (stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (register, 0x38, 4)]
[(register, 0x10, 4) INT_ZEXT (unique, 0x100005c3, 1), (unique, 0x100005c3, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002cf, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100002cf, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9840, 8), (register, 0x10, 8) INT_SEXT (stack, 0xfffffffffffff7a8, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x13c704, 1)]
[(register, 0x10, 8) CAST (unique, 0x100005cc, 8), (unique, 0x100005cc, 8) INT_OR (register, 0x10, 8) , (const, 0x5, 8), (register, 0x10, 8) INT_AND (unique, 0x100005c4, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100005c4, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 4) COPY (const, 0x9, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x105, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[ ---  CBRANCH (ram, 0x13ce2b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3d, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) CAST (unique, 0x100005dc, 8), (unique, 0x100005dc, 8) INT_OR (register, 0x10, 8) , (const, 0xd, 8), (register, 0x10, 8) INT_AND (unique, 0x100005d4, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100005d4, 8) CAST (stack, 0xfffffffffffff7c0, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x102, 4)]
[(register, 0x10, 4) COPY (const, 0x6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x21, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x100, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x13c702, 1)]
[(stack, 0xfffffffffffff7c0, 8) MULTIEQUAL (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (unique, 0x10000229, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (stack, 0xfffffffffffff7c0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x13c704, 1)]
[(stack, 0xfffffffffffff7c0, 8) MULTIEQUAL (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x13c71e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 4) , (const, 0x37, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x13c998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (register, 0x10, 4), (register, 0x30, 4) INT_SEXT (unique, 0x100005e8, 1), (unique, 0x100005e8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000026f, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000026f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9780, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100005e4, 4), (unique, 0x100005e4, 4) CAST (register, 0x0, 4)]
[(register, 0xa0, 4) INT_ZEXT (unique, 0x100005e9, 1), (unique, 0x100005e9, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000028f, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000028f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97c0, 8)]
[ ---  CBRANCH (ram, 0x13ca50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000028f, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000028f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97c0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x38, 4) COPY (const, 0xfffffff0, 4)]
[(unique, 0x100004bd, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0xfffffffe, 4)]
[(register, 0x0, 4) INT_ADD (unique, 0x12280, 4) , (unique, 0x12080, 4), (unique, 0x12280, 4) INT_ADD (stack, 0xfffffffffffff7ac, 4) , (const, 0xffffffff, 4), (unique, 0x12080, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (stack, 0xfffffffffffff7ac, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x389, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (stack, 0xfffffffffffff7c0, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x13c8ae, 1)]
[(stack, 0xfffffffffffff7c0, 8) MULTIEQUAL (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[ ---  CBRANCH (ram, 0x13c770, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002af, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002af, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9800, 8)]
[ ---  CBRANCH (ram, 0x13c7a9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffff7ac, 4) , (const, 0x3, 4)]
[(register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffff7a8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x13cbf8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x100002bf, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9820, 8)]
[(stack, 0xfffffffffffff7a8, 4) COPY (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x13c7a9, 1) , (register, 0x206, 1)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (unique, 0x10000252, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x100002c7, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9820, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000242, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x1000024a, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000252, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[ ---  CBRANCH (ram, 0x13c7b4, 1) , (unique, 0x10000241, 1), (unique, 0x10000241, 1) INT_NOTEQUAL (unique, 0x1000023d, 4) , (const, 0xfffffff6, 4), (unique, 0x1000023d, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x13c798, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x37, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000023d, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x13c798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000277, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000277, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9780, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100005ea, 4), (unique, 0x100005ea, 4) CAST (register, 0x0, 4)]
[(register, 0xa0, 4) INT_ZEXT (unique, 0x100005ee, 1), (unique, 0x100005ee, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000287, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000287, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97c0, 8)]
[ ---  CBRANCH (ram, 0x13c798, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000287, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000287, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97c0, 8)]
[(stack, 0xfffffffffffff7ac, 4) COPY (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (stack, 0xfffffffffffff7c0, 8), (register, 0x18, 8) PTRADD (unique, 0x10000242, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x13c8ae, 1)]
[ ---  CBRANCH (ram, 0x13c800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000024a, 8) , (register, 0xb8, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(unique, 0x100004d5, 8) COPY (unique, 0x1000024a, 8)]
[(register, 0x8, 8) INT_SEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (unique, 0x1000024a, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x2, 8)]
[(register, 0x18, 8) PTRADD (unique, 0x10000242, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000025f, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000025f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9750, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100005ef, 4), (unique, 0x100005ef, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100005f3, 4), (unique, 0x100005f3, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (const, 0x1, 4) , (register, 0x38, 4), (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000025f, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000025f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9750, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100005ef, 4), (unique, 0x100005ef, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[ ---  BRANCHIND (unique, 0xbb00, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x2, 8)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x62e, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x62e, 4)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x62e, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x62e, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x62e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x62e, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x2, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13ce0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005f7, 8), (unique, 0x100005f7, 8) CALL (ram, 0x138ed0, 8) , (const, 0x0, 8) , (const, 0x1, 8) , (const, 0x0, 8)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005ff, 8) , (unique, 0xbd80, 8), (unique, 0x100005ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x668, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x668, 4)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x668, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x668, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x668, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x668, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000607, 8), (unique, 0x10000607, 8) CALL (ram, 0x138ed0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x2, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x67c, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x67c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x67c, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x67c, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x67c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x67c, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000060f, 8), (unique, 0x1000060f, 8) CALL (ram, 0x138ed0, 8) , (const, 0x1, 8) , (const, 0x2, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7c8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x2, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000617, 8), (unique, 0x10000617, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x38, 4) COPY (const, 0xe, 4)]
[ ---  BRANCH (ram, 0x13c859, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x38, 4) COPY (const, 0xf, 4)]
[ ---  BRANCH (ram, 0x13c859, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x696, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x696, 4), (stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x696, 4), (stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x696, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x696, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x696, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000061f, 8), (unique, 0x1000061f, 8) CALL (ram, 0x135860, 8) , (register, 0x38, 4), (register, 0x38, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x2, 8)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6d3, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6d3, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x8, 8)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6d3, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6d3, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x6d3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6d3, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000627, 8), (unique, 0x10000627, 8) CALL (ram, 0x138ed0, 8) , (const, 0x3, 8) , (const, 0x10, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffff7c8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xfffffffffffffffb, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xfffffffffffffffb, 8) , (const, 0x2, 8)]
[(register, 0x38, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[ ---  CBRANCH (ram, 0x13cbfe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x13c805, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0xa0, 4) COPY (const, 0xfffffff6, 4)]
[(register, 0x38, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(register, 0xa0, 4) INT_SEXT (unique, 0x10000630, 1), (unique, 0x10000630, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002a7, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100002a7, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97fa, 8), (register, 0x10, 8) INT_SEXT (register, 0x38, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0x10, 4), (register, 0x38, 4) INT_ZEXT (unique, 0x1000062f, 1), (unique, 0x1000062f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000267, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000267, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9760, 8)]
[(register, 0x10, 8) PTRADD (register, 0xb0, 8) , (unique, 0x1000046f, 8) , (const, 0x2, 8), (unique, 0x1000046f, 8) INT_2COMP (register, 0x38, 8)]
[(unique, 0x100004b5, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000045f, 8) , (const, 0x8, 8), (unique, 0x1000045f, 8) INT_2COMP (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x13c871, 1)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(stack, 0xfffffffffffff7c0, 8) MULTIEQUAL (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x135, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100004b5, 8) , (unique, 0x100004bd, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x100004b5, 8) , (unique, 0x100004bd, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x13c89f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3400, 4) , (const, 0x37, 4), (unique, 0x3400, 4) INT_ADD (register, 0x0, 4) , (register, 0xa0, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xb0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x13cbe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (register, 0x0, 2), (register, 0x0, 2) INT_SEXT (unique, 0x10000635, 1), (unique, 0x10000635, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000027f, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000027f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9780, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000631, 4), (unique, 0x10000631, 4) CAST (unique, 0x3400, 4)]
[(register, 0xa0, 4) INT_SEXT (unique, 0x10000636, 1), (unique, 0x10000636, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000029f, 8) , (register, 0x38, 8) , (const, 0x1, 8), (unique, 0x1000029f, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97f7, 8), (register, 0x38, 8) INT_SEXT (register, 0x38, 4)]
[(register, 0xa0, 4) INT_ZEXT (unique, 0x10000637, 1), (unique, 0x10000637, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000297, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000297, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a97c0, 8)]
[ ---  BRANCH (ram, 0x13c8ae, 1)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(stack, 0xfffffffffffff7c0, 8) MULTIEQUAL (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8) , (stack, 0xfffffffffffff7c0, 8)]
[(stack, 0xfffffffffffff7ac, 4) MULTIEQUAL (stack, 0xfffffffffffff7ac, 4) , (stack, 0xfffffffffffff7ac, 4) , (stack, 0xfffffffffffff7ac, 4) , (register, 0x0, 4)]
[(stack, 0xfffffffffffff7a8, 4) MULTIEQUAL (stack, 0xfffffffffffff7a8, 4) , (stack, 0xfffffffffffff7a8, 4) , (unique, 0x10000252, 4) , (stack, 0xfffffffffffff7a8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x100001e9, 8) INT_MULT (register, 0x28, 8) , (const, 0x2, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 2), (register, 0xa0, 2) SUBPIECE (register, 0xa0, 4) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x2, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (unique, 0x1000024a, 8) , (register, 0xb0, 8), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x13c97e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3a00, 8) , (unique, 0x3100, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb8, 8) , (unique, 0x1000034f, 8) , (const, 0x2, 8), (unique, 0x1000034f, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x2, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (unique, 0x1000024a, 8) , (register, 0xb0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) INT_SRIGHT (register, 0xb0, 8) , (const, 0x1, 4), (register, 0xb0, 8) CAST (unique, 0x10000648, 8), (unique, 0x10000648, 8) INT_SUB (unique, 0x10000638, 8) , (unique, 0x10000640, 8), (unique, 0x10000640, 8) CAST (register, 0xb8, 8), (unique, 0x10000638, 8) CAST (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x13cc10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x28, 8) , (const, 0x2710, 8)]
[(unique, 0x100004a5, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x2710, 8)]
[ ---  CBRANCH (ram, 0x13c8f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100001e9, 8) , (const, 0x2711, 8)]
[(unique, 0x100004ad, 8) COPY (unique, 0x100001e9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b3, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x1b3, 4)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x1b3, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x1b3, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x1b3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b3, 4)]
[ ---  CBRANCH (ram, 0x13cc10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3880, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001fe, 8) , (const, 0x7, 8), (unique, 0x100001fe, 8) INT_MULT (register, 0x28, 8) , (const, 0xa, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100004a5, 8) , (unique, 0x100004ad, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1eb, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x1f8, 4), (stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x1eb, 4)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x1f8, 4), (stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x1eb, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x1f8, 4), (stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x1eb, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x1f8, 4), (stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x1eb, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1eb, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000658, 8), (unique, 0x10000658, 8) CALL (ram, 0x121160, 8) , (unique, 0x3400, 8) , (stack, 0xfffffffffffff798, 8) , (register, 0x18, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0x28, 8) , (const, 0x2, 8), (register, 0x0, 8) CAST (unique, 0x10000650, 8), (unique, 0x10000650, 8) CALL (ram, 0x121160, 8) , (register, 0x0, 8) , (register, 0xb8, 8) , (unique, 0x10000206, 8), (register, 0x18, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x8, 8), (unique, 0x10000206, 8) INT_MULT (unique, 0x3100, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x13c95a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (unique, 0x3800, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x210, 4)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x210, 4)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x210, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x210, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x210, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x210, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13ce1e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000039f, 8) , (const, 0x2, 8), (unique, 0x1000039f, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (register, 0xb0, 8) , (const, 0x2, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x13c80c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x13c805, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(stack, 0xfffffffffffff798, 8) MULTIEQUAL (stack, 0xfffffffffffff798, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3a00, 8)]
[(unique, 0x100004ed, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3a00, 8)]
[(unique, 0x10000505, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000515, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13c6cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x9, 4)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x100004c5, 8) COPY (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x13c805, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x13c814, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (unique, 0x3800, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100004c5, 8) , (unique, 0x10000515, 8) , (unique, 0x100004d5, 8) , (unique, 0x10000515, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25b, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x25b, 4), (stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x25b, 4), (stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x25b, 4), (stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x25b, 4), (stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8)]
[(stack, 0xfffffffffffff7e8, 2) MULTIEQUAL (stack, 0xfffffffffffff7e8, 2) , (stack, 0xfffffffffffff7e8, 2)]
[(stack, 0xfffffffffffff7d8, 8) MULTIEQUAL (stack, 0xfffffffffffff7d8, 8) , (stack, 0xfffffffffffff7d8, 8)]
[(stack, 0xfffffffffffff7d0, 8) MULTIEQUAL (stack, 0xfffffffffffff7d0, 8) , (stack, 0xfffffffffffff7d0, 8)]
[(stack, 0xfffffffffffff7c8, 8) MULTIEQUAL (stack, 0xfffffffffffff7c8, 8) , (stack, 0xfffffffffffff7c8, 8)]
[(register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x13cea3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000660, 8), (unique, 0x10000660, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffff7c8, 8) INDIRECT (stack, 0xfffffffffffff7c8, 8) , (const, 0x288, 4)]
[(stack, 0xfffffffffffff7d0, 8) INDIRECT (stack, 0xfffffffffffff7d0, 8) , (const, 0x288, 4)]
[(stack, 0xfffffffffffff7d8, 8) INDIRECT (stack, 0xfffffffffffff7d8, 8) , (const, 0x288, 4)]
[(stack, 0xfffffffffffff7e8, 2) INDIRECT (stack, 0xfffffffffffff7e8, 2) , (const, 0x288, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x288, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
