[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x36, 4), (ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x30, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x36, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x30, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x36, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x36, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x36, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x36, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x30, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000426, 8), (unique, 0x10000426, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x121f88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2300b0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x122322, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1000, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x1, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x10000436, 8), (unique, 0x10000436, 8) INT_ADD (unique, 0x1000042e, 8) , (unique, 0x100000b3, 8), (unique, 0x1000042e, 8) CAST (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x100000b3, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(unique, 0x1000034c, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000020c, 8) , (unique, 0x100000b3, 8) , (const, 0x1, 8), (unique, 0x1000020c, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000b3, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x48e, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x48e, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x48e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x48e, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x48e, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x48e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x48e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x48e, 4)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000354, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x121fa3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) COPY (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) MULTIEQUAL (unique, 0x1000034c, 8) , (unique, 0x10000354, 8)]
[(unique, 0x10000304, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x100002f4, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(unique, 0x10000416, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x122308, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x1000044e, 8), (unique, 0x1000044e, 8) INT_ADD (unique, 0x10000446, 8) , (const, 0x1, 8), (unique, 0x10000446, 8) CAST (register, 0x18, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x489, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x489, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x489, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000456, 8) , (const, 0x2f, 1), (unique, 0x10000456, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x122046, 1)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 4) INT_OR (unique, 0x10000188, 4) , (unique, 0x1000018c, 4), (unique, 0x1000018c, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x10000188, 4) INT_AND (stack, 0xffffffffffffffb0, 4) , (const, 0xffffff00, 4)]
[(unique, 0x1000037c, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000038c, 8) COPY (unique, 0x1000045e, 8), (unique, 0x1000045e, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000394, 1) COPY (unique, 0xbb00, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x1000038c, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000037c, 8) , (register, 0x38, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x0, 1) INT_AND (unique, 0x10000190, 1) , (const, 0x1, 1), (unique, 0x10000190, 1) SUBPIECE (register, 0x0, 2) , (const, 0x0, 4), (register, 0x0, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000467, 8), (unique, 0x10000467, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f4, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x2, 8), (register, 0x88, 8) INT_SEXT (unique, 0x10000466, 1), (unique, 0x10000466, 1) CAST (register, 0x10, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0x10000394, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x122006, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x1000046f, 1) , (const, 0x34, 1), (unique, 0x1000046f, 1) CAST (unique, 0x3100, 1), (unique, 0x3100, 1) INT_SUB (register, 0x10, 1) , (const, 0x2c, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0x10000394, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 1) INT_OR (register, 0x0, 1) , (unique, 0x10000180, 1), (unique, 0x10000180, 1) INT_AND (unique, 0x10000181, 1) , (const, 0x1, 1), (unique, 0x10000181, 1) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (const, 0x8000000004007, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x3100, 1) , (const, 0x3f, 1)]
[(unique, 0x10000422, 4) COPY (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1221b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
[(unique, 0x10000399, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x12201c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x1222c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x30, 4) , (const, 0x2, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x477, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x477, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x477, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000470, 8) , (const, 0x2f, 1), (unique, 0x10000470, 8) CAST (register, 0x38, 8)]
[(register, 0x38, 8) CAST (unique, 0x10000480, 8), (unique, 0x10000480, 8) INT_ADD (unique, 0x10000478, 8) , (const, 0x1, 8), (unique, 0x10000478, 8) CAST (register, 0x38, 8)]
[(unique, 0x1000039d, 4) COPY (register, 0x8, 4)]
[ ---  BRANCH (ram, 0x12201c, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x136, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x136, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x136, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a0, 8) , (register, 0x0, 1), (unique, 0x100004a0, 8) CAST (register, 0x38, 8), (register, 0x0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000488, 8), (unique, 0x10000488, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000304, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)]
[(unique, 0x10000374, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000498, 8), (unique, 0x10000498, 8) INT_ADD (unique, 0x10000490, 8) , (const, 0x1, 8), (unique, 0x10000490, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000395, 4) COPY (register, 0x30, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000422, 4) , (unique, 0x10000422, 4) , (unique, 0x3100, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000374, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0x10000395, 4) , (unique, 0x10000399, 4) , (unique, 0x1000039d, 4)]
[ ---  CBRANCH (ram, 0x121fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1222c0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x30, 4) , (const, 0x2, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) INT_ADD (unique, 0x100004a8, 8) , (const, 0x1, 8), (unique, 0x100004a8, 8) CAST (register, 0x38, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x16b, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x16b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004b8, 8) , (const, 0x2f, 1), (unique, 0x100004b8, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x122300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x171, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x171, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2f, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000033c, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x173, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x173, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000033c, 8) , (unique, 0x3100, 8)]
[(unique, 0x100003de, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x173, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[ ---  CBRANCH (ram, 0x122200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) INT_ADD (unique, 0x100004c0, 8) , (const, 0x2, 8), (unique, 0x100004c0, 8) CAST (register, 0x18, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x44e, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x44e, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x44e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004d0, 8) , (const, 0x0, 1), (unique, 0x100004d0, 8) CAST (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x122210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004e0, 8), (unique, 0x100004e0, 8) INT_ADD (unique, 0x100004d8, 8) , (const, 0x2, 8), (unique, 0x100004d8, 8) CAST (register, 0x18, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x1000027d, 4) , (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x447, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (unique, 0x1000025d, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x447, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (unique, 0x10000265, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x447, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x10000275, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000500, 8) , (register, 0x10, 1), (unique, 0x10000500, 8) CAST (register, 0x0, 8), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004f8, 8), (unique, 0x100004f8, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x90, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000324, 8) , (unique, 0x10000416, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0x38, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x1000026d, 8) , (unique, 0x10000304, 8)]
[(unique, 0x100003be, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000024d, 8) , (register, 0x38, 8)]
[(unique, 0x100003c6, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004f0, 8), (unique, 0x100004f0, 8) INT_ADD (unique, 0x100004e8, 8) , (const, 0x1, 8), (unique, 0x100004e8, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000324, 8) , (unique, 0x10000416, 8)]
[(unique, 0x100003d6, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x1000026d, 8) , (unique, 0x10000304, 8)]
[(unique, 0x1000024d, 8) MULTIEQUAL (unique, 0x100003be, 8) , (register, 0x38, 8)]
[(unique, 0x1000025d, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(unique, 0x10000265, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x1000026d, 8) MULTIEQUAL (unique, 0x100003d6, 8) , (unique, 0x100003de, 8)]
[(unique, 0x10000275, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000027d, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(unique, 0x10000324, 8) COPY (unique, 0x10000255, 8), (unique, 0x10000255, 8) MULTIEQUAL (unique, 0x100003c6, 8) , (unique, 0x10000416, 8)]
[ ---  CBRANCH (ram, 0x12205a, 1) , (unique, 0x1000024c, 1), (unique, 0x1000024c, 1) INT_NOTEQUAL (unique, 0x100002b4, 1) , (const, 0x0, 1), (unique, 0x100002b4, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000508, 8) , (const, 0x122062, 8), (unique, 0x10000508, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000510, 8) , (const, 0x12206e, 8), (unique, 0x10000510, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x185, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x18b, 4), (ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x185, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (unique, 0x1000025d, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x18b, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x185, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (unique, 0x10000265, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x185, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x10000275, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x18b, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x18a, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x185, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x18b, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x18a, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x185, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x184, 4), (stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (unique, 0x1000027d, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x18b, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x18a, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x185, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x18b, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x184, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x185, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x184, 4)]
[ ---  CBRANCH (ram, 0x12207f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2300b0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x122342, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1000, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0x1, 4)]
[(register, 0xa8, 8) CAST (unique, 0x10000520, 8), (unique, 0x10000520, 8) INT_AND (unique, 0x10000518, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000518, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (unique, 0x10000224, 8) , (const, 0x1, 8), (unique, 0x10000224, 8) INT_ADD (unique, 0x100000f7, 8) , (const, 0xf, 8), (unique, 0x100000f7, 8) INT_2COMP (register, 0xa8, 8), (register, 0xa8, 8) INT_AND (register, 0xa8, 8) , (const, 0xfffffffffffffff0, 8), (register, 0xa8, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(unique, 0x10000344, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (unique, 0x100000f7, 8) , (const, 0x1, 8), (unique, 0x100000f7, 8) INT_2COMP (register, 0xa8, 8), (register, 0xa8, 8) INT_AND (register, 0xa8, 8) , (const, 0xfffffffffffffff0, 8), (register, 0xa8, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000528, 8) , (const, 0x12234a, 8), (unique, 0x10000528, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f0, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x3f0, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x3f0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f0, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x3f0, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x3ef, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3f0, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x3ef, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3f0, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x3ef, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3f0, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3ef, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3f0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ef, 4)]
[ ---  CBRANCH (ram, 0x12235e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000530, 8), (unique, 0x10000530, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1222ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb4, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000538, 8) , (const, 0x122371, 8), (unique, 0x10000538, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x412, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x412, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x412, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x412, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x412, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x411, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x412, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x411, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x412, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x411, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x412, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x411, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x1222ac, 1)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x12209a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000344, 8) , (register, 0x20, 8)]
[(unique, 0x1000030c, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x100002fc, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(unique, 0x1000040e, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x122314, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x3eb, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x3eb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3eb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (const, 0x2f, 1)]
[ ---  BRANCH (ram, 0x122138, 1)]
[(register, 0x88, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffaf, 1) COPY (unique, 0xbb00, 1)]
[(unique, 0x1000036c, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000384, 8) COPY (register, 0x30, 8)]
[(unique, 0x100003a1, 1) COPY (unique, 0xbb00, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000384, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000036c, 8) , (register, 0x38, 8)]
[(register, 0x0, 1) INT_AND (unique, 0x10000196, 1) , (const, 0x1, 1), (unique, 0x10000196, 1) SUBPIECE (register, 0x0, 2) , (const, 0x0, 4), (register, 0x0, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000540, 8), (unique, 0x10000540, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002fc, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (register, 0x30, 8) INT_SEXT (register, 0x10, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0x100003a1, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1220f6, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x10000548, 1) , (const, 0x34, 1), (unique, 0x10000548, 1) CAST (unique, 0x3100, 1), (unique, 0x3100, 1) INT_SUB (register, 0x10, 1) , (const, 0x2c, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0x100003a1, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 1) INT_OR (register, 0x0, 1) , (unique, 0x10000184, 1), (unique, 0x10000184, 1) INT_AND (unique, 0x10000185, 1) , (const, 0x1, 1), (unique, 0x10000185, 1) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (const, 0x8000000004007, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (unique, 0x3100, 1) , (const, 0x3f, 1)]
[(unique, 0x1000041e, 4) COPY (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x88, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1221d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
[(unique, 0x100003a6, 4) COPY (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x12210d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x1222d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x88, 4) , (const, 0x2, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x3d9, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x3d9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x2f, 1)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100003aa, 4) COPY (register, 0x8, 4)]
[ ---  BRANCH (ram, 0x12210d, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x289, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x289, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x289, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000549, 8), (unique, 0x10000549, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000030c, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)]
[(unique, 0x10000364, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100003a2, 4) COPY (register, 0x88, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x1000041e, 4) , (unique, 0x1000041e, 4) , (unique, 0x3100, 4)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x100003a2, 4) , (unique, 0x100003a6, 4) , (unique, 0x100003aa, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000364, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1220d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1222d8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x88, 4) , (const, 0x2, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x2be, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x2be, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2be, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x1222f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x2c4, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x2c4, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2f, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000334, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x2c6, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c6, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000334, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000406, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x2c6, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[ ---  CBRANCH (ram, 0x122238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x3af, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x3af, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3af, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 1), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x12214d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (unique, 0x100002b2, 1) , (stack, 0xffffffffffffffaf, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x3a8, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (unique, 0x10000292, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x3a8, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (unique, 0x1000029a, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x100002aa, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000551, 8), (unique, 0x10000551, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x90, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000314, 8) , (unique, 0x1000040e, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000282, 8) , (register, 0x30, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x100002a2, 8) , (unique, 0x1000030c, 8)]
[(unique, 0x100003e6, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000282, 8) , (register, 0x30, 8)]
[(unique, 0x100003ee, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000314, 8) , (unique, 0x1000040e, 8)]
[(unique, 0x100003fe, 8) COPY (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x100002a2, 8) , (unique, 0x1000030c, 8)]
[(unique, 0x10000282, 8) MULTIEQUAL (unique, 0x100003e6, 8) , (register, 0x30, 8)]
[(unique, 0x10000292, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(unique, 0x1000029a, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x100002a2, 8) MULTIEQUAL (unique, 0x100003fe, 8) , (unique, 0x10000406, 8)]
[(unique, 0x100002aa, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002b2, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(unique, 0x10000314, 8) COPY (unique, 0x1000028a, 8), (unique, 0x1000028a, 8) MULTIEQUAL (unique, 0x100003ee, 8) , (unique, 0x1000040e, 8)]
[ ---  CBRANCH (ram, 0x12214d, 1) , (unique, 0x10000281, 1), (unique, 0x10000281, 1) INT_NOTEQUAL (unique, 0x100002b5, 1) , (const, 0x0, 1), (unique, 0x100002b5, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000559, 8) , (const, 0x12215e, 8), (unique, 0x10000559, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e5, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x2e5, 4), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (unique, 0x10000292, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x2e5, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (unique, 0x1000029a, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e5, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100002aa, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x2e5, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x2e4, 4), (stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (unique, 0x100002b2, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x2e5, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x2e4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2e5, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2e4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e4, 4)]
[(register, 0x0, 4) CALL (ram, 0x122580, 8) , (register, 0x18, 8) , (register, 0xa8, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x122270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb0, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x2e5, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x2e4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000561, 8) , (const, 0x122278, 8), (unique, 0x10000561, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x365, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x365, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x365, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x365, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x365, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x365, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x365, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x365, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x364, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x365, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x364, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0xa8, 8)]
[(unique, 0x100002b8, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100002c0, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(unique, 0x100002c8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x100002d0, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100002d8, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(unique, 0x100002d9, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(unique, 0x100002e1, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100002e9, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x122177, 1) , (unique, 0x100002b7, 1), (unique, 0x100002b7, 1) INT_EQUAL (unique, 0x100002dd, 4) , (const, 0x0, 4), (unique, 0x100002dd, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000569, 8) , (const, 0x12228b, 8), (unique, 0x10000569, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100002b8, 8) , (const, 0x357, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (unique, 0x100002c0, 8) , (const, 0x357, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (unique, 0x100002c8, 8) , (const, 0x357, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100002d0, 8) , (const, 0x357, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x357, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (unique, 0x100002d8, 1) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x357, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (unique, 0x100002d9, 4) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x357, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (unique, 0x100002dd, 4) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x357, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100002e1, 8) , (const, 0x356, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x357, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002e9, 8) , (const, 0x356, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x18, 8)]
[(unique, 0x100001a7, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100002b8, 8)]
[(unique, 0x100001af, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (unique, 0x100002c0, 8)]
[(unique, 0x100001b7, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (unique, 0x100002c8, 8)]
[(unique, 0x100001bf, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100002d0, 8)]
[(unique, 0x100001c7, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (unique, 0x100002d8, 1)]
[(unique, 0x100001c8, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (unique, 0x100002d9, 4)]
[(unique, 0x100001cc, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (unique, 0x100002dd, 4)]
[(unique, 0x100001d0, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x100002e1, 8)]
[(unique, 0x100001d8, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100002e9, 8)]
[ ---  CBRANCH (ram, 0x122180, 1) , (unique, 0x100001a6, 1), (unique, 0x100001a6, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1222ac, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 4) , (const, 0x2, 4), (register, 0xa0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (unique, 0x100001af, 8) , (const, 0x351, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (unique, 0x100001b7, 8) , (const, 0x351, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100001bf, 8) , (const, 0x351, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000571, 8) , (const, 0x16, 4), (unique, 0x10000571, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001bf, 8) , (unique, 0x100001a7, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100001d8, 8) , (unique, 0x100001d8, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (unique, 0x100001cc, 4) , (unique, 0x100001cc, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x100001c8, 4) , (unique, 0x100001c8, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (unique, 0x100001c7, 1) , (unique, 0x100001c7, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x100001bf, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (unique, 0x100001b7, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (unique, 0x100001af, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x100001a7, 8) , (unique, 0x100001a7, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x122184, 1)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (unique, 0x100001cc, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (unique, 0x100001c8, 4)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (unique, 0x100001c7, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100001bf, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (unique, 0x100001b7, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (unique, 0x100001af, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x100001d0, 8)]
[ ---  CBRANCH (ram, 0x122376, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100001a7, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100001d8, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000581, 8) , (unique, 0x100001e4, 8), (unique, 0x10000581, 8) CAST (register, 0x20, 8), (unique, 0x100001e4, 8) PTRSUB (const, 0x0, 8) , (const, 0x12237b, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x335, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x334, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x335, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x334, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x335, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x334, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x335, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x334, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x335, 4)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x335, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x335, 4)]
[ ---  RETURN (const, 0x1, 4)]
