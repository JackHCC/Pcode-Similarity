[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x20, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x20, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x20, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20, 4)]
[ ---  CBRANCH (ram, 0x120f83, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x1001, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4ac, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x4ac, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x4ac, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4ac, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4ac, 4)]
[ ---  CBRANCH (ram, 0x120c2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffac, 4) COPY (const, 0x1, 4)]
[(register, 0x20, 8) CAST (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) INT_ADD (unique, 0x100003ab, 8) , (unique, 0x100000a2, 8), (unique, 0x100003ab, 8) CAST (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) INT_ADD (unique, 0x100003bb, 8) , (unique, 0x100000a2, 8), (unique, 0x100003bb, 8) CAST (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x100000a2, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4be, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x4be, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x4be, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4be, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (register, 0x0, 4) , (const, 0x4be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4be, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x120c4c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c1bc8, 8) COPY (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) COPY (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(unique, 0x10000299, 8) COPY (ram, 0x4c1bd8, 8), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(unique, 0x10000289, 8) COPY (ram, 0x4c1bc8, 8), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(unique, 0x1000039b, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x121013, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x49e, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x49e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x49e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003d3, 8) , (const, 0x2f, 1), (unique, 0x100003d3, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[(register, 0x0, 8) CAST (unique, 0x100003e3, 8), (unique, 0x100003e3, 8) INT_ADD (unique, 0x100003db, 8) , (const, 0x1, 8), (unique, 0x100003db, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[ ---  BRANCH (ram, 0x120d03, 1)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000311, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000321, 8) COPY (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000339, 1) COPY (unique, 0xbb00, 1)]
[ ---  BRANCH (ram, 0x120ca0, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000321, 8) , (unique, 0x10000319, 8) , (register, 0x88, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000311, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 1) INT_AND (unique, 0x1000014b, 1) , (const, 0x1, 1), (unique, 0x1000014b, 1) SUBPIECE (register, 0x10, 2) , (const, 0x0, 4), (register, 0x10, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100003eb, 8), (unique, 0x100003eb, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000289, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x2, 8), (register, 0x90, 8) INT_SEXT (register, 0x38, 1), (register, 0x38, 1) MULTIEQUAL (unique, 0x10000339, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x120ccd, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100003f3, 1) , (const, 0x34, 1), (unique, 0x100003f3, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (register, 0x38, 1) , (const, 0x2c, 1), (register, 0x38, 1) MULTIEQUAL (unique, 0x10000339, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 1) INT_XOR (unique, 0x1000014f, 1) , (const, 0x1, 1), (unique, 0x1000014f, 1) INT_AND (unique, 0x10000151, 1) , (const, 0x1, 1), (unique, 0x10000151, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (const, 0x8000000004007, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  CBRANCH (ram, 0x120c80, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 1) , (register, 0x10, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x12a, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x12a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000040c, 8) , (register, 0x0, 1), (unique, 0x1000040c, 8) CAST (register, 0x88, 8), (register, 0x0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f4, 8), (unique, 0x100003f4, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000299, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x90, 8) , (const, 0x4, 8)]
[(unique, 0x10000319, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x10000404, 8), (unique, 0x10000404, 8) INT_ADD (unique, 0x100003fc, 8) , (const, 0x1, 8), (unique, 0x100003fc, 8) CAST (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x120ca0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x120e70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x120f6c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x3, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x48e, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x48e, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x48e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000414, 8) , (const, 0x2f, 1), (unique, 0x10000414, 8) CAST (register, 0x88, 8)]
[(register, 0x88, 8) CAST (unique, 0x10000424, 8), (unique, 0x10000424, 8) INT_ADD (unique, 0x1000041c, 8) , (const, 0x1, 8), (unique, 0x1000041c, 8) CAST (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x120c8a, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x120cea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000319, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x120f6c, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x30, 4) , (const, 0x2, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000434, 8), (unique, 0x10000434, 8) INT_ADD (unique, 0x1000042c, 8) , (const, 0x1, 8), (unique, 0x1000042c, 8) CAST (register, 0x88, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x14f, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x14f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000043c, 8) , (const, 0x2f, 1), (unique, 0x1000043c, 8) CAST (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x121003, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x155, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x155, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x155, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2f, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(unique, 0x100002e1, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x15a, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x15a, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002e1, 8) , (unique, 0x3100, 8)]
[(unique, 0x1000035b, 8) COPY (ram, 0x4c1bd8, 8), (ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x15a, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[ ---  CBRANCH (ram, 0x120ea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000044c, 8), (unique, 0x1000044c, 8) INT_ADD (unique, 0x10000444, 8) , (const, 0x2, 8), (unique, 0x10000444, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x447, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x447, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x447, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000454, 8) , (const, 0x0, 1), (unique, 0x10000454, 8) CAST (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x120ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000464, 8), (unique, 0x10000464, 8) INT_ADD (unique, 0x1000045c, 8) , (const, 0x2, 8), (unique, 0x1000045c, 8) CAST (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x43d, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (unique, 0x1000020b, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x43d, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (unique, 0x1000021b, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x43d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000223, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000484, 8) , (register, 0x10, 1), (unique, 0x10000484, 8) CAST (register, 0x0, 8), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000047c, 8), (unique, 0x1000047c, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x98, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002b9, 8) , (unique, 0x1000039b, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x10000213, 8) , (unique, 0x10000299, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000203, 8) , (register, 0x38, 8)]
[(unique, 0x1000034b, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x10000203, 8) , (register, 0x38, 8)]
[(unique, 0x10000353, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x10000213, 8) , (unique, 0x10000299, 8)]
[(unique, 0x10000363, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000474, 8), (unique, 0x10000474, 8) INT_ADD (unique, 0x1000046c, 8) , (const, 0x1, 8), (unique, 0x1000046c, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002b9, 8) , (unique, 0x1000039b, 8)]
[(unique, 0x10000203, 8) MULTIEQUAL (unique, 0x1000034b, 8) , (register, 0x38, 8)]
[(unique, 0x1000020b, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(unique, 0x10000213, 8) MULTIEQUAL (unique, 0x10000353, 8) , (unique, 0x1000035b, 8)]
[(unique, 0x1000021b, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(unique, 0x10000223, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100002b9, 8) COPY (unique, 0x1000022b, 8), (unique, 0x1000022b, 8) MULTIEQUAL (unique, 0x10000363, 8) , (unique, 0x1000039b, 8)]
[ ---  CBRANCH (ram, 0x120d1b, 1) , (unique, 0x10000202, 1), (unique, 0x10000202, 1) INT_NOTEQUAL (unique, 0x10000264, 1) , (const, 0x0, 1), (unique, 0x10000264, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120d23, 8), (register, 0x20, 8) CAST (unique, 0x10000494, 8), (unique, 0x10000494, 8) INT_ADD (unique, 0x1000048c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000048c, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x16c, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x16c, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (unique, 0x1000020b, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x16c, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (unique, 0x1000021b, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x10000223, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x16c, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x16b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16b, 4)]
[ ---  CBRANCH (ram, 0x120fc3, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x1001, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120fcb, 8), (register, 0x20, 8) CAST (unique, 0x100004a4, 8), (unique, 0x100004a4, 8) INT_ADD (unique, 0x1000049c, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000049c, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d6, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x3d6, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x3d6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d6, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x3d6, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3d6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d5, 4)]
[(stack, 0xffffffffffffffa8, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x120d34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2141b0, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120fde, 8), (register, 0x20, 8) CAST (unique, 0x100004b4, 8), (unique, 0x100004b4, 8) INT_ADD (unique, 0x100004ac, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100004ac, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e8, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x3e8, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x3e8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3e8, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x3e7, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x3e8, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x3e7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e7, 4)]
[(unique, 0x100002b1, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3e8, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3e7, 4)]
[ ---  CBRANCH (ram, 0x120d4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004bc, 8), (unique, 0x100004bc, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x120e56, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffac, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120ffe, 8), (register, 0x20, 8) CAST (unique, 0x100004cc, 8), (unique, 0x100004cc, 8) INT_ADD (unique, 0x100004c4, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100004c4, 8) CAST (register, 0x20, 8)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x409, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x408, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x409, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x408, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x409, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x408, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100002b1, 8)]
[(ram, 0x4c1bc8, 8) COPY (ram, 0x4c1bc8, 8), (ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x409, 4)]
[(ram, 0x4c1bd8, 8) COPY (ram, 0x4c1bd8, 8), (ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x409, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x409, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c1bc8, 8) COPY (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) COPY (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa8, 4) COPY (const, 0x1, 4)]
[(register, 0x18, 8) CAST (unique, 0x100004f4, 8), (unique, 0x100004f4, 8) INT_AND (unique, 0x3800, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3800, 8) CAST (unique, 0x100004ec, 8), (unique, 0x100004ec, 8) INT_ADD (unique, 0x100004e4, 8) , (unique, 0x100001da, 8), (unique, 0x100004e4, 8) CAST (register, 0x20, 8), (unique, 0x100001da, 8) INT_ADD (unique, 0x100000d1, 8) , (const, 0xf, 8), (unique, 0x100000d1, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(unique, 0x100002e9, 8) COPY (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x100004dc, 8), (unique, 0x100004dc, 8) INT_ADD (unique, 0x100004d4, 8) , (unique, 0x100000d1, 8), (unique, 0x100004d4, 8) CAST (register, 0x20, 8), (unique, 0x100000d1, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_AND (register, 0x18, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100002e9, 8) , (register, 0x20, 8)]
[(unique, 0x100002a9, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100002a1, 8) COPY (ram, 0x4c1bd8, 8), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(unique, 0x10000291, 8) COPY (ram, 0x4c1bc8, 8), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(unique, 0x100003a3, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x121026, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x3d1, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x3d1, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3d1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x2f, 1)]
[ ---  BRANCH (ram, 0x120e04, 1)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(unique, 0x100002f1, 8) COPY (register, 0x30, 8)]
[(unique, 0x100002f9, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000033a, 1) COPY (unique, 0xbb00, 1)]
[ ---  BRANCH (ram, 0x120da0, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x100002f9, 8) , (unique, 0x10000301, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002f1, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 1) INT_AND (unique, 0x1000014d, 1) , (const, 0x1, 1), (unique, 0x1000014d, 1) SUBPIECE (register, 0x10, 2) , (const, 0x0, 4), (register, 0x10, 2) INT_RIGHT (unique, 0xbc00, 2) , (const, 0x3, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100004fc, 8), (unique, 0x100004fc, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000291, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x2, 8), (register, 0x88, 8) INT_SEXT (register, 0x30, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0x1000033a, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x120dcd, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000504, 1) , (const, 0x34, 1), (unique, 0x10000504, 1) CAST (register, 0x8, 1), (register, 0x8, 1) INT_SUB (register, 0x30, 1) , (const, 0x2c, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0x1000033a, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 1) INT_XOR (unique, 0x10000153, 1) , (const, 0x1, 1), (unique, 0x10000153, 1) INT_AND (unique, 0x10000155, 1) , (const, 0x1, 1), (unique, 0x10000155, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (const, 0x8000000004007, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1)]
[ ---  CBRANCH (ram, 0x120d88, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 1) , (register, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x120f18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x120fb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x3, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x3c3, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x3c3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x2f, 1)]
[(register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x120d92, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x120de9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x273, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x273, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x273, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000505, 8), (unique, 0x10000505, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002a1, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x88, 8) , (const, 0x4, 8)]
[(unique, 0x10000301, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x120da0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000301, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x120fb0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x1, 4) , (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x298, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x298, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x298, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x2f, 1)]
[ ---  CBRANCH (ram, 0x12100b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x29e, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x29e, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x29e, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2f, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x100002d9, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x2a0, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2a0, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002d9, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000393, 8) COPY (ram, 0x4c1bd8, 8), (ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x2a0, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[ ---  CBRANCH (ram, 0x120ee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x37e, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x37e, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x37e, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x0, 1), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x120ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x377, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (unique, 0x10000244, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x377, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (unique, 0x1000024c, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x377, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x1000025c, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000050d, 8), (unique, 0x1000050d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x98, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c9, 8) , (unique, 0x100003a3, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000234, 8) , (register, 0x30, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x10000254, 8) , (unique, 0x100002a1, 8)]
[(unique, 0x10000373, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000234, 8) , (register, 0x30, 8)]
[(unique, 0x1000037b, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100002c9, 8) , (unique, 0x100003a3, 8)]
[(unique, 0x1000038b, 8) COPY (register, 0x98, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x10000254, 8) , (unique, 0x100002a1, 8)]
[(unique, 0x10000234, 8) MULTIEQUAL (unique, 0x10000373, 8) , (register, 0x30, 8)]
[(unique, 0x10000244, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(unique, 0x1000024c, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(unique, 0x10000254, 8) MULTIEQUAL (unique, 0x1000038b, 8) , (unique, 0x10000393, 8)]
[(unique, 0x1000025c, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100002c9, 8) COPY (unique, 0x1000023c, 8), (unique, 0x1000023c, 8) MULTIEQUAL (unique, 0x1000037b, 8) , (unique, 0x100003a3, 8)]
[ ---  CBRANCH (ram, 0x120e18, 1) , (unique, 0x10000233, 1), (unique, 0x10000233, 1) INT_NOTEQUAL (unique, 0x10000265, 1) , (const, 0x0, 1), (unique, 0x10000265, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120e2a, 8), (register, 0x20, 8) CAST (unique, 0x1000051d, 8), (unique, 0x1000051d, 8) INT_ADD (unique, 0x10000515, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000515, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c1, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x2c1, 4), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (unique, 0x10000244, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x2c1, 4), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (unique, 0x1000024c, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2c1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x1000025c, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x2c1, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x2c0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2c0, 4)]
[(register, 0x0, 4) CALL (ram, 0x121240, 8) , (unique, 0x100002a9, 8) , (register, 0x18, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000026e, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x1000026e, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(unique, 0x10000343, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c1, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2c0, 4)]
[ ---  CBRANCH (ram, 0x120f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffa8, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x2c1, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x2c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120f40, 8), (register, 0x20, 8) CAST (unique, 0x1000052d, 8), (unique, 0x1000052d, 8) INT_ADD (unique, 0x10000525, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000525, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x334, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x334, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x334, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x334, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x334, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x333, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x334, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x333, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x334, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x333, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x18, 8)]
[(unique, 0x1000033b, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x334, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x333, 4)]
[(unique, 0x10000171, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000179, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(unique, 0x10000181, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(unique, 0x10000189, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000191, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(unique, 0x10000199, 8) MULTIEQUAL (unique, 0x1000033b, 8) , (unique, 0x10000343, 8)]
[(unique, 0x100001a1, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x120e43, 1) , (unique, 0x10000170, 1), (unique, 0x10000170, 1) INT_EQUAL (unique, 0x10000195, 4) , (const, 0x0, 4), (unique, 0x10000195, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x120f54, 8), (register, 0x20, 8) CAST (unique, 0x1000053d, 8), (unique, 0x1000053d, 8) INT_ADD (unique, 0x10000535, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000535, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000171, 8) , (const, 0x32f, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (unique, 0x10000179, 8) , (const, 0x32f, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (unique, 0x10000181, 8) , (const, 0x32f, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000189, 8) , (const, 0x32f, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x32f, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (unique, 0x10000191, 4) , (const, 0x32e, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x32f, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (unique, 0x10000195, 4) , (const, 0x32e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x32f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000331, 8) , (const, 0x32e, 4), (unique, 0x10000331, 8) COPY (unique, 0x10000199, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100001a1, 8) , (const, 0x32e, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x10000199, 8)]
[ ---  BRANCH (ram, 0x120e43, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100001a1, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000189, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c1bd8, 8) MULTIEQUAL (unique, 0x10000181, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c1bc8, 8) MULTIEQUAL (unique, 0x10000179, 8) , (ram, 0x4c1bc8, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000171, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x120e90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(ram, 0x4c1bc8, 8) COPY (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) COPY (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x120f59, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 4) , (const, 0x2, 4), (register, 0xa0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(ram, 0x4c1bc8, 8) INDIRECT (ram, 0x4c1bc8, 8) , (const, 0x314, 4)]
[(ram, 0x4c1bd8, 8) INDIRECT (ram, 0x4c1bd8, 8) , (const, 0x314, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x314, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000545, 8) , (const, 0x16, 4), (unique, 0x10000545, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x120e56, 1)]
[(ram, 0x4c1bc8, 8) COPY (ram, 0x4c1bc8, 8), (ram, 0x4c1bc8, 8) MULTIEQUAL (ram, 0x4c1bc8, 8) , (ram, 0x4c1bc8, 8)]
[(ram, 0x4c1bd8, 8) COPY (ram, 0x4c1bd8, 8), (ram, 0x4c1bd8, 8) MULTIEQUAL (ram, 0x4c1bd8, 8) , (ram, 0x4c1bd8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
