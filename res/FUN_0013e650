[(register, 0x1204, 4) SUBPIECE (unique, 0x10000245, 8) , (const, 0x0, 4), (unique, 0x10000245, 8) INT_RIGHT (register, 0x1200, 8) , (const, 0x20, 4)]
[(register, 0x1200, 4) SUBPIECE (register, 0x1200, 8) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffd0, 8) INT_ADD (unique, 0x10000255, 8) , (register, 0x1208, 4), (unique, 0x10000255, 8) INT_LEFT (unique, 0x1000024d, 8) , (const, 0x20, 8), (unique, 0x1000024d, 8) INT_SEXT (unique, 0x1000025d, 4), (unique, 0x1000025d, 4) CAST (register, 0x120c, 4)]
[(unique, 0x1000014f, 1) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x3fff, 8), (register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x7fff, 4), (register, 0x18, 4) INT_SRIGHT (unique, 0x10000261, 4) , (const, 0x10, 4), (unique, 0x10000261, 4) CAST (register, 0x120c, 4)]
[ ---  CBRANCH (ram, 0x13e6d8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x18, 8) , (const, 0x30, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x3fff, 8), (register, 0x18, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x7fff, 4), (register, 0x18, 4) INT_SRIGHT (unique, 0x10000261, 4) , (const, 0x10, 4), (unique, 0x10000261, 4) CAST (register, 0x120c, 4)]
[ ---  CBRANCH (ram, 0x13e718, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x13e7c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x1200, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (const, 0xffffffffffffffff, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x1000014f, 1) , (const, 0x30, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000265, 8) , (register, 0x0, 8), (unique, 0x10000265, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (register, 0x1200, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000026d, 8) , (stack, 0xffffffffffffffd0, 8), (unique, 0x1000026d, 8) CAST (unique, 0x10000097, 8), (unique, 0x10000097, 8) PTRADD (unique, 0x100001ad, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001ad, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x2980f0, 8)]
[(ram, 0x2bbe90, 8) COPY (ram, 0x2bbe90, 8), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x19b, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2b6, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2b5, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000275, 8) , (register, 0x1200, 4), (unique, 0x10000275, 8) CAST (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000027d, 8) , (register, 0x1204, 4), (unique, 0x1000027d, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) PTRADD (unique, 0x10000215, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000215, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000285, 8) , (register, 0x1208, 4), (unique, 0x10000285, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) PTRADD (unique, 0x10000225, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000225, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2e1, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2df, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2dd, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000028d, 8) , (register, 0x120c, 4), (unique, 0x1000028d, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) PTRADD (unique, 0x10000235, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000235, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x13e6a9, 1)]
[ ---  CALL (ram, 0x297600, 8)]
[(ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x137, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x129, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x1200, 16), (register, 0x1200, 16) INDIRECT (const, 0x0, 16) , (const, 0x129, 4)]
[ ---  CBRANCH (ram, 0x13e790, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000295, 8) , (const, 0x0, 4), (unique, 0x10000295, 8) CAST (unique, 0x100001d5, 8), (unique, 0x100001d5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000029d, 8) , (const, 0x0, 4), (unique, 0x1000029d, 8) CAST (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) PTRADD (unique, 0x100001dd, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x100001dd, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a5, 8) , (const, 0x0, 4), (unique, 0x100002a5, 8) CAST (unique, 0x100000ef, 8), (unique, 0x100000ef, 8) PTRADD (unique, 0x100001ed, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001ed, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ad, 8) , (stack, 0xffffffffffffffe4, 4), (unique, 0x100002ad, 8) CAST (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) PTRADD (unique, 0x100001fd, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100001fd, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffe4, 4) INT_AND (register, 0x120c, 4) , (const, 0x80000000, 4)]
[(ram, 0x2bbe90, 8) COPY (ram, 0x2bbe90, 8), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2cc, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2ca, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2c8, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2c7, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13e760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x1200, 8), (register, 0x10, 8) INT_AND (stack, 0xffffffffffffffd0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (const, 0xffffffffffff, 8) , (unique, 0x51980, 1), (unique, 0x51980, 1) INT_AND (unique, 0x1000014f, 1) , (const, 0x3f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b5, 8) , (const, 0x0, 8), (unique, 0x100002b5, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bd, 8) , (register, 0x0, 8), (unique, 0x100002bd, 8) CAST (unique, 0x100000b7, 8), (unique, 0x100000b7, 8) PTRADD (unique, 0x100001c5, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001c5, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (stack, 0xffffffffffffffd0, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8)]
[ ---  CALL (ram, 0x2980f0, 8)]
[(ram, 0x2bbe90, 8) COPY (ram, 0x2bbe90, 8), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0xdd, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2bc, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2bb, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002c5, 8) , (register, 0x1200, 4), (unique, 0x100002c5, 8) CAST (unique, 0x1000016d, 8), (unique, 0x1000016d, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002cd, 8) , (register, 0x1204, 4), (unique, 0x100002cd, 8) CAST (unique, 0x10000117, 8), (unique, 0x10000117, 8) PTRADD (unique, 0x10000175, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000175, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002d5, 8) , (register, 0x1208, 4), (unique, 0x100002d5, 8) CAST (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) PTRADD (unique, 0x10000185, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000185, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2da, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2d8, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2d6, 4), (ram, 0x2bbe90, 8) INDIRECT (ram, 0x2bbe90, 8) , (const, 0x2d5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002dd, 8) , (register, 0x120c, 4), (unique, 0x100002dd, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) PTRADD (unique, 0x10000195, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000195, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(ram, 0x2bbe90, 8) COPY (ram, 0x2bbe90, 8), (ram, 0x2bbe90, 8) MULTIEQUAL (ram, 0x2bbe90, 8) , (ram, 0x2bbe90, 8) , (ram, 0x2bbe90, 8)]
[ ---  RETURN (const, 0x0, 8)]
