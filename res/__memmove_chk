[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x1bb4b0, 8)]
[ ---  CBRANCH (ram, 0x2319e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x80000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000000f, 8), (unique, 0x1000000f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0xb4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2319f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1000, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x101000, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x292450, 8)]
[ ---  CBRANCH (ram, 0x2319e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x20000, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x292e40, 8)]
[ ---  CBRANCH (ram, 0x231a18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x85, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x292eb0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x231a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000004, 4) , (const, 0x0, 4), (unique, 0x10000004, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x28ea60, 8)]
[ ---  CBRANCH (ram, 0x231a39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x85, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x28eac0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2319b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x79, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2319d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x40000, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x26f110, 8)]
[ ---  CBRANCH (ram, 0x2319e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x274780, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x1bb450, 8)]
[ ---  CBRANCH (ram, 0x2319ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x85, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x1bb510, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
