[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004c7, 8), (unique, 0x100004c7, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffff18, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff20, 8) COPY (const, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004cf, 8), (unique, 0x100004cf, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x1000049b, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) INT_ZEXT (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x21ac90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffc00, 4)]
[(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_AND (register, 0x38, 4) , (const, 0x3ff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f8, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x4f8, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x4f8, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x4f8, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x4f8, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4f8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f8, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x4f8, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x4f8, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x4f8, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x4f8, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x4f8, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x4f8, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x4f8, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x4f8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x4f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4f8, 4)]
[ ---  CALL (ram, 0x219d50, 8) , (const, 0x23, 4) , (unique, 0x10000392, 8) , (register, 0xb8, 8), (unique, 0x10000392, 8) COPY (const, 0x2b9de0, 8)]
[ ---  BRANCH (ram, 0x21a9fa, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000049b, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x21ac65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) INT_SRIGHT (ram, 0x4eb348, 4) , (register, 0x8, 1), (register, 0x8, 1) INT_AND (unique, 0x1000030c, 1) , (const, 0x7, 1), (unique, 0x1000030c, 1) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000049b, 8) , (register, 0xb8, 8), (ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[ ---  CBRANCH (ram, 0x21aa21, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000015f, 8) , (const, 0x0, 8), (unique, 0x1000015f, 8) INT_AND (register, 0xb8, 8) , (const, 0x3f8, 8)]
[(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_OR (register, 0xb8, 4) , (ram, 0x4eb34c, 4)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xa1, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xa1, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xa1, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xa1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xa1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa1, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xa1, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xa1, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xa1, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xa1, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xa1, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xa1, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xa1, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xa1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa1, 4)]
[ ---  CBRANCH (ram, 0x21add0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x188140, 8) , (unique, 0x100004d7, 8) , (unique, 0x3800, 8), (unique, 0x100004d7, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x403, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x403, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x403, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x403, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x403, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x403, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x403, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x403, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x403, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x403, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x403, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x403, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x403, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x403, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x403, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x403, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x403, 4), (stack, 0xffffffffffffff98, 4) COPY (ram, 0x2bc1c0, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x403, 4), (stack, 0xffffffffffffff9c, 4) COPY (ram, 0x2bc1c4, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x403, 4), (stack, 0xffffffffffffffa0, 4) COPY (ram, 0x2bc1c8, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x403, 4), (stack, 0xffffffffffffffa4, 4) COPY (ram, 0x2bc1cc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x403, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100004df, 8), (unique, 0x100004df, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[(unique, 0x100004a3, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e58e0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004f7, 8) , (register, 0x8, 1), (unique, 0x100004f7, 8) CAST (register, 0x30, 8), (register, 0x8, 1) INT_ADD (unique, 0x1000031e, 1) , (const, 0x30, 1), (unique, 0x1000031e, 1) INT_ADD (unique, 0x10000328, 1) , (unique, 0x10000329, 1), (unique, 0x10000328, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (unique, 0x10000329, 1) INT_MULT (unique, 0x1000032c, 1) , (const, 0xf6, 1), (unique, 0x1000032c, 1) SUBPIECE (unique, 0x10000320, 4) , (const, 0x0, 4), (unique, 0x10000320, 4) INT_SDIV (register, 0x8, 4) , (const, 0xa, 4), (register, 0x30, 8) CAST (unique, 0x100004ef, 8), (unique, 0x100004ef, 8) INT_ADD (unique, 0x100004e7, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x100004e7, 8) CAST (register, 0x30, 8), (register, 0x8, 4) MULTIEQUAL (unique, 0x100004a3, 4) , (unique, 0x100004a7, 4), (register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(unique, 0x100004a7, 4) COPY (unique, 0x10000320, 4), (unique, 0x10000320, 4) INT_SDIV (register, 0x8, 4) , (const, 0xa, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100004a3, 4) , (unique, 0x100004a7, 4)]
[ ---  CBRANCH (ram, 0x21ae00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000320, 4) , (const, 0x0, 4), (unique, 0x10000320, 4) INT_SDIV (register, 0x8, 4) , (const, 0xa, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100004a3, 4) , (unique, 0x100004a7, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x4c0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4c0, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x4d0, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x4c0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x4d0, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x4c0, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x4d0, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x4c0, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x4d0, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x4c0, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4d0, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4c0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4d0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4c0, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x4d0, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x4c0, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x4d0, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x4c0, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x4d0, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x4c0, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x4d0, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x4c0, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x4d0, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x4c0, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x4d0, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x4c0, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x4d0, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x4c0, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x4d0, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x4c0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4d0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5d, 2), (register, 0x0, 8) CAST (unique, 0x10000527, 8), (unique, 0x10000527, 8) CALL (ram, 0x121230, 8) , (unique, 0x3c80, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000051f, 8), (unique, 0x1000051f, 8) INT_SUB (unique, 0x1000050f, 8) , (unique, 0x10000517, 8), (unique, 0x10000517, 8) CAST (register, 0x30, 8), (unique, 0x1000050f, 8) CAST (unique, 0x1000047a, 8), (unique, 0x1000047a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000507, 8), (unique, 0x10000507, 8) INT_ADD (unique, 0x100004ff, 8) , (const, 0x3, 8), (unique, 0x100004ff, 8) CAST (unique, 0x1000045a, 8), (unique, 0x1000045a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[(register, 0x0, 8) INT_ADD (unique, 0x10000537, 8) , (unique, 0x1000048a, 8), (unique, 0x10000537, 8) CAST (register, 0x0, 8), (unique, 0x1000048a, 8) INT_SUB (const, 0x1, 8) , (unique, 0x1000052f, 8), (unique, 0x1000052f, 8) CAST (unique, 0x3c80, 8), (register, 0x0, 8) CAST (unique, 0x10000527, 8), (unique, 0x10000527, 8) CALL (ram, 0x121230, 8) , (unique, 0x3c80, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x1000051f, 8), (unique, 0x1000051f, 8) INT_SUB (unique, 0x1000050f, 8) , (unique, 0x10000517, 8), (unique, 0x10000517, 8) CAST (register, 0x30, 8), (unique, 0x1000050f, 8) CAST (unique, 0x1000047a, 8), (unique, 0x1000047a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000507, 8), (unique, 0x10000507, 8) INT_ADD (unique, 0x100004ff, 8) , (const, 0x3, 8), (unique, 0x100004ff, 8) CAST (unique, 0x1000045a, 8), (unique, 0x1000045a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[(unique, 0x100004bf, 8) COPY (unique, 0x1000053f, 8), (unique, 0x1000053f, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x21ab2f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003c2, 8) , (unique, 0xbd00, 4), (unique, 0x100003c2, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x1000036a, 8) , (register, 0xb8, 8), (unique, 0x1000036a, 8) COPY (const, 0x2b58c7, 8)]
[ ---  CALL (ram, 0x121260, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x28, 8), (register, 0x0, 8) CALL (ram, 0x1dc240, 8) , (unique, 0xbd80, 8) , (unique, 0x1000054f, 8) , (unique, 0x10000372, 8) , (register, 0x0, 8) , (unique, 0x10000557, 8), (unique, 0x10000557, 8) CAST (unique, 0x1000039a, 8), (unique, 0x1000054f, 8) CAST (register, 0x30, 8), (unique, 0x1000039a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea960, 8), (unique, 0x10000372, 8) COPY (const, 0x2b58cc, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000187, 8) , (const, 0x1, 8), (unique, 0x10000187, 8) INT_2COMP (unique, 0x10000547, 8), (unique, 0x10000547, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x28, 8), (register, 0x0, 8) CALL (ram, 0x1d1570, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xec, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcd, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x101, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xf4, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xec, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xd7, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xd1, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xcd, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0xb1, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x101, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xf4, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xec, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xd7, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xd1, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xcd, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0xb1, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x101, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xf4, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xec, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xd7, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xd1, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xcd, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0xb1, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x101, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xf4, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xec, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xd7, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xd1, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xcd, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0xb1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x101, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xf4, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xec, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd7, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xd1, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xcd, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xb1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x101, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xec, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb1, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x101, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xf4, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xec, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xd7, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xd1, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xcd, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0xb1, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x101, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xf4, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xec, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xd7, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xd1, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xcd, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0xb1, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x101, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xf4, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xec, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xd7, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xd1, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xcd, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0xb1, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x101, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xf4, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xec, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xd7, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xd1, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xcd, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0xb1, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x101, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xf4, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xec, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xd7, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xd1, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xcd, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0xb1, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x101, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xf4, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xec, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xd7, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xd1, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xcd, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0xb1, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x101, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xf4, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xec, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xd7, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xd1, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xcd, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0xb1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x101, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf4, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xec, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd1, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xcd, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb1, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x101, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xec, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x101, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xec, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xd7, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xd1, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x101, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xec, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xd7, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xd1, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x101, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xec, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xd7, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xd1, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x101, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xec, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xd7, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xd1, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x101, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xec, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd7, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcd, 4)]
[(register, 0x0, 8) CALL (ram, 0x17f680, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x21ae68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee318, 8) , (const, 0x0, 8), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x101, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xf4, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xec, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xd7, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xd1, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xcd, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0xb1, 4)]
[ ---  CBRANCH (ram, 0x21aab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000055f, 8), (unique, 0x1000055f, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x111, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x111, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x111, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x111, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x111, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x111, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x111, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x111, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x111, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x111, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x111, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x111, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x111, 4), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x111, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x111, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x111, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x111, 4)]
[ ---  CALL (ram, 0x18a640, 8) , (ram, 0x4ee318, 8) , (register, 0x0, 8), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x21ae8f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000347, 4) , (const, 0x0, 4), (unique, 0x10000347, 4) INT_AND (ram, 0x4ee320, 4) , (const, 0x1, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x111, 4)]
[ ---  CBRANCH (ram, 0x21ab01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000361, 4) , (const, 0x0, 4), (unique, 0x10000361, 4) INT_AND (ram, 0x4ee320, 4) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e2, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x3e2, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x3d1, 4), (ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x3e2, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x3d1, 4), (ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x3e2, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x3d1, 4), (ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x3e2, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x3d1, 4), (ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3e2, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3d1, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e2, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x3e2, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x3d1, 4), (ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x3e2, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x3d1, 4), (ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x3e2, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x3d1, 4), (ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x3e2, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x3d1, 4), (ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x3e2, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x3d1, 4), (ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x3e2, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x3d1, 4), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x3e2, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x3d1, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x3e2, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x3d1, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3e2, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3d1, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x3e2, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x3d1, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x3e2, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x3d1, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3e2, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3d1, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3e2, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3d1, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e2, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x1000037a, 8) , (register, 0x10, 8), (unique, 0x1000037a, 8) COPY (const, 0x2b58d6, 8), (register, 0x10, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e58e0, 8)]
[ ---  BRANCH (ram, 0x21aac5, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21ab01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ee318, 8) , (const, 0x0, 8), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[ ---  CBRANCH (ram, 0x21aef8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3cd, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x3cd, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x3cd, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x3cd, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x3cd, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3cd, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3cd, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x3cd, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x3cd, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x3cd, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x3cd, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x3cd, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x3cd, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x3cd, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x3cd, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3cd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3cd, 4)]
[ ---  CALL (ram, 0x18de90, 8) , (unique, 0x10000567, 8) , (const, 0x3a, 4), (unique, 0x10000567, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x21aae8, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x28, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x13f, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x13d, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x13f, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x13d, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x13f, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x13d, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x13f, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x13d, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x13f, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x13d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13d, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x13f, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x13d, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x13f, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x13d, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x13f, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x13d, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x13f, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x13d, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x13f, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x13d, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x13f, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x13d, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x13f, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x13d, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x13f, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x13d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x3a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21af10, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c7, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x3c7, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x3c7, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x3c7, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x3c7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3c7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c7, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x3c7, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x3c7, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x3c7, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x3c7, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x3c7, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x3c7, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x3c7, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x3c7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3c7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c7, 4)]
[ ---  CALL (ram, 0x18de90, 8) , (unique, 0x1000056f, 8) , (const, 0x20, 4), (unique, 0x1000056f, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x21ab01, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x28, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x158, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x156, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x158, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x156, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x158, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x156, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x158, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x156, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x158, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x156, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x158, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x156, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x158, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x156, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x158, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x156, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x158, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x156, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x158, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x156, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x158, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x156, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x158, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x156, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x158, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x156, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x158, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x156, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x158, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x156, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x20, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x165, 4), (ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x165, 4), (ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x165, 4), (ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x165, 4), (ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x165, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x165, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x165, 4), (ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x165, 4), (ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x165, 4), (ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x165, 4), (ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x165, 4), (ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x165, 4), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x165, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x165, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x165, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000577, 8) , (unique, 0xbc80, 4), (unique, 0x10000577, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x21aee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c1, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x3c1, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x3c1, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x3c1, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x3c1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3c1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c1, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x3c1, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x3c1, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x3c1, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x3c1, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x3c1, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x3c1, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x3c1, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x3c1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3c1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3c1, 4)]
[ ---  CALL (ram, 0x15b390, 8) , (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x21ab27, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x170, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x170, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x170, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x170, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x170, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x170, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x170, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x170, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x170, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x170, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x170, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x170, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x170, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x170, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x170, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x170, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x170, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x170, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x170, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x170, 4)]
[ ---  CALL (ram, 0x2326e0, 8) , (register, 0x0, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (register, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x174, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x174, 4), (ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x174, 4), (ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x174, 4), (ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x174, 4), (ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x174, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x174, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x174, 4), (ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x174, 4), (ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x174, 4), (ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x174, 4), (ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x174, 4), (ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x174, 4), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x174, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x174, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x174, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x174, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x174, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x174, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x174, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x174, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x174, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x174, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x174, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x174, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x174, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x17e250, 8) , (register, 0x0, 8)]
[(unique, 0x100004b7, 8) COPY (stack, 0xffffffffffffff18, 8), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x174, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (unique, 0x100004b7, 8) , (unique, 0x100004bf, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x21aba3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000034c, 4) , (const, 0x0, 4), (unique, 0x1000034c, 4) INT_AND (ram, 0x4ee320, 4) , (const, 0x20, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(unique, 0x3b80, 8) CAST (unique, 0x10000587, 8), (unique, 0x10000587, 8) INT_ADD (unique, 0x1000057f, 8) , (register, 0xb8, 8), (unique, 0x1000057f, 8) CAST (stack, 0xffffffffffffff18, 8)]
[(register, 0x10, 8) INT_SUB (stack, 0xffffffffffffff20, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x21ab7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0xa, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000597, 8), (unique, 0x10000597, 8) INT_ADD (unique, 0x1000058f, 8) , (unique, 0x10000422, 8), (unique, 0x1000058f, 8) CAST (stack, 0xffffffffffffff18, 8), (unique, 0x10000422, 8) INT_SUB (stack, 0xffffffffffffff20, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (const, 0x1, 8)]
[(register, 0x18, 4) COPY (const, 0x2, 4)]
[(stack, 0xffffffffffffff78, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d39, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c6, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x1c6, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x1c6, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x1c6, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x1c6, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1c6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c6, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x1c6, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x1c6, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x1c6, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x1c6, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x1c6, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x1c6, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x1c6, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x1c6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x3b80, 8) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (register, 0x10, 8) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x1c6, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1c6, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1c6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c6, 4)]
[ ---  CALL (ram, 0x2166a0, 8) , (const, 0x2, 4) , (unique, 0x3800, 8) , (register, 0x18, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21abbf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ee310, 4) , (const, 0x0, 4)]
[(ram, 0x4ee310, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee310, 4) , (const, 0x0, 4)]
[(ram, 0x4ee310, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x21abe2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a0, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x3a0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x3a0, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x3a0, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x3a0, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3a0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a0, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x3a0, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x3a0, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x3a0, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x3a0, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x3a0, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x3a0, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x3a0, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x3a0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3a0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a0, 4)]
[ ---  CALL (ram, 0x230690, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21aeb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee324, 4) , (const, 0x0, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x385, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x385, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x385, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x385, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x385, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x385, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x385, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x385, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x385, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x385, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x385, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x385, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x385, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x385, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x385, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x385, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x385, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x385, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x385, 4)]
[ ---  CALL (ram, 0x219b50, 8) , (ram, 0x4ee318, 8) , (register, 0x30, 4) , (const, 0x0, 8), (register, 0x30, 4) INT_OR (ram, 0x4ee320, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x21ac03, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eb354, 4) , (const, 0x1, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x385, 4)]
[ ---  CBRANCH (ram, 0x21acb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eb354, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffff20, 8) , (const, 0x1, 8), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21acb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ee324, 4) , (const, 0x0, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x2f3, 4), (ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x2f3, 4), (ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x2f3, 4), (ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x2f3, 4), (ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2f3, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f3, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x2f3, 4), (ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x2f3, 4), (ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x2f3, 4), (ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x2f3, 4), (ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x2f3, 4), (ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x2f3, 4), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x2f3, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x2f3, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2f3, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x2f3, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x2f3, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x2f3, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2f3, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f3, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x21ac18, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x222c30, 8) , (ram, 0x4eb350, 4) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff20, 8) , (const, 0x4000, 4), (ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[ ---  CBRANCH (ram, 0x21ac0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee324, 4) , (const, 0x0, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x30f, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x30f, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (ram, 0x4eb350, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x32b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30f, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x32b, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x30f, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x32b, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x30f, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x32b, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x30f, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x32b, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x30f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x32b, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x30f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x32b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30f, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x32b, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x30f, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x32b, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x30f, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x32b, 4), (ram, 0x4eb350, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x32b, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x30f, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x32b, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x30f, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x32b, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x30f, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x32b, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x30f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x32b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x32b, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x32b, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x32b, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x32b, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x30f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x32b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30f, 4)]
[ ---  CALL (ram, 0x219b50, 8) , (ram, 0x4ee318, 8) , (register, 0x30, 4) , (const, 0x0, 8), (register, 0x30, 4) INT_OR (ram, 0x4ee320, 4) , (const, 0x8, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x30f, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x30f, 4)]
[ ---  CBRANCH (ram, 0x21ac0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee324, 4) , (const, 0x0, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x32b, 4), (ram, 0x4ee324, 4) COPY (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x343, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x343, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x343, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x343, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x343, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x343, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x343, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x343, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x343, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x343, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x343, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x343, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x343, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x343, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x343, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x343, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x343, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x343, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x343, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x343, 4)]
[ ---  CBRANCH (ram, 0x21ac18, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x222c30, 8) , (ram, 0x4eb350, 4) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff20, 8) , (const, 0x4000, 4)]
[ ---  CBRANCH (ram, 0x21ac0b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee324, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21ad8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000354, 4) , (const, 0x0, 4), (unique, 0x10000354, 4) INT_AND (ram, 0x4ee320, 4) , (const, 0x2, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35f, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x35f, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x35f, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x35f, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x35f, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x35f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35f, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x35f, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x35f, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x35f, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x35f, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x35f, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x35f, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x35f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x35f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x35f, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb350, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4ee324, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x21ac18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000035c, 4) , (const, 0x0, 4), (unique, 0x1000035c, 4) INT_AND (ram, 0x4ee320, 4) , (const, 0x2, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x35f, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b9, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x2b9, 4), (ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x2b9, 4), (ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x2b9, 4), (ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x2b9, 4), (ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b9, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b9, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x2b9, 4), (ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x2b9, 4), (ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x2b9, 4), (ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x2b9, 4), (ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x2b9, 4), (ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x2b9, 4), (ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x2b9, 4), (ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x2b9, 4), (ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b9, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x2b9, 4), (stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x2b9, 4), (stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x2b9, 4), (stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2b9, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b9, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x21ac18, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x10000382, 8) , (const, 0x101, 4) , (const, 0x0, 8), (unique, 0x10000382, 8) COPY (const, 0x2b58db, 8)]
[ ---  CALL (ram, 0x165180, 8) , (register, 0x0, 4) , (unique, 0x1000038a, 8) , (register, 0x10, 8), (unique, 0x1000038a, 8) COPY (const, 0x2b58e8, 8), (register, 0x10, 8) INT_ADD (unique, 0x1000059f, 8) , (register, 0xb8, 8), (unique, 0x1000059f, 8) CAST (stack, 0xffffffffffffff18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e6, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e1, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x2e6, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x2e1, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x2e6, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x2e1, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x2e6, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x2e1, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x2e6, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x2e1, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2e6, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2e1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2e1, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x2e6, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x2e1, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x2e6, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x2e1, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x2e6, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x2e1, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x2e6, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x2e1, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x2e6, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x2e1, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x2e6, 4), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x2e1, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x2e6, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x2e1, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x2e6, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x2e1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e6, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x2e6, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x2e6, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x2e6, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2e6, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2e1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2e1, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x21ac18, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x21ac2c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100004af, 4) COPY (unique, 0x10000492, 4), (unique, 0x10000492, 4) INT_ADD (ram, 0x4ee310, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x21ac4e, 1) , (unique, 0x10000496, 1), (unique, 0x10000496, 1) INT_NOTEQUAL (unique, 0x10000492, 4) , (const, 0x0, 4), (unique, 0x10000492, 4) INT_ADD (ram, 0x4ee310, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28e, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x28e, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x28e, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x28e, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x28e, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x28e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x28e, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x28e, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x28e, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x28e, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x28e, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x28e, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x28e, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x28e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x28e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x28e, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100003a2, 8), (unique, 0x100003a2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee310, 8)]
[(unique, 0x100004ab, 4) COPY (ram, 0x4ee310, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x28e, 4), (ram, 0x4ee310, 4) INT_ADD (ram, 0x4ee310, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ee310, 4) COPY (unique, 0x100004b3, 4), (unique, 0x100004b3, 4) MULTIEQUAL (unique, 0x100004ab, 4) , (unique, 0x100004af, 4)]
[ ---  CBRANCH (ram, 0x21ac65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff18, 8) , (unique, 0x100005a7, 8), (unique, 0x100005a7, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x254, 4)]
[(ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x254, 4)]
[(ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x254, 4)]
[(ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x254, 4)]
[(ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x254, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x254, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x254, 4)]
[(ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x254, 4)]
[(ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x254, 4)]
[(ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x254, 4)]
[(ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x254, 4)]
[(ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x254, 4)]
[(ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x254, 4)]
[(ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x254, 4)]
[(ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x254, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x254, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x254, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x254, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x254, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x254, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff78, 8) MULTIEQUAL (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8) , (stack, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee324, 4) MULTIEQUAL (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4) , (ram, 0x4ee324, 4)]
[(ram, 0x4ee320, 4) MULTIEQUAL (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4) , (ram, 0x4ee320, 4)]
[(ram, 0x4ee318, 8) MULTIEQUAL (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8) , (ram, 0x4ee318, 8)]
[(ram, 0x4ee310, 4) MULTIEQUAL (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4) , (ram, 0x4ee310, 4)]
[(ram, 0x4eb354, 4) MULTIEQUAL (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4) , (ram, 0x4eb354, 4)]
[(ram, 0x4eb350, 4) MULTIEQUAL (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4) , (ram, 0x4eb350, 4)]
[(ram, 0x4eb34c, 4) MULTIEQUAL (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4) , (ram, 0x4eb34c, 4)]
[(ram, 0x4eb348, 4) MULTIEQUAL (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4) , (ram, 0x4eb348, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x2bc1cc, 4) MULTIEQUAL (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4) , (ram, 0x2bc1cc, 4)]
[(ram, 0x2bc1c8, 4) MULTIEQUAL (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4) , (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1c4, 4) MULTIEQUAL (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4) , (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c0, 4) MULTIEQUAL (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4) , (ram, 0x2bc1c0, 4)]
[ ---  CBRANCH (ram, 0x21af22, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005af, 8), (unique, 0x100005af, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x27f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x27f, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2bc1c0, 4) COPY (ram, 0x2bc1c0, 4), (ram, 0x2bc1c0, 4) INDIRECT (ram, 0x2bc1c0, 4) , (const, 0x27f, 4)]
[(ram, 0x2bc1c4, 4) COPY (ram, 0x2bc1c4, 4), (ram, 0x2bc1c4, 4) INDIRECT (ram, 0x2bc1c4, 4) , (const, 0x27f, 4)]
[(ram, 0x2bc1c8, 4) COPY (ram, 0x2bc1c8, 4), (ram, 0x2bc1c8, 4) INDIRECT (ram, 0x2bc1c8, 4) , (const, 0x27f, 4)]
[(ram, 0x2bc1cc, 4) COPY (ram, 0x2bc1cc, 4), (ram, 0x2bc1cc, 4) INDIRECT (ram, 0x2bc1cc, 4) , (const, 0x27f, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x27f, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27f, 4)]
[(ram, 0x4eb348, 4) COPY (ram, 0x4eb348, 4), (ram, 0x4eb348, 4) INDIRECT (ram, 0x4eb348, 4) , (const, 0x27f, 4)]
[(ram, 0x4eb34c, 4) COPY (ram, 0x4eb34c, 4), (ram, 0x4eb34c, 4) INDIRECT (ram, 0x4eb34c, 4) , (const, 0x27f, 4)]
[(ram, 0x4eb350, 4) COPY (ram, 0x4eb350, 4), (ram, 0x4eb350, 4) INDIRECT (ram, 0x4eb350, 4) , (const, 0x27f, 4)]
[(ram, 0x4eb354, 4) COPY (ram, 0x4eb354, 4), (ram, 0x4eb354, 4) INDIRECT (ram, 0x4eb354, 4) , (const, 0x27f, 4)]
[(ram, 0x4ee310, 4) COPY (ram, 0x4ee310, 4), (ram, 0x4ee310, 4) INDIRECT (ram, 0x4ee310, 4) , (const, 0x27f, 4)]
[(ram, 0x4ee318, 8) COPY (ram, 0x4ee318, 8), (ram, 0x4ee318, 8) INDIRECT (ram, 0x4ee318, 8) , (const, 0x27f, 4)]
[(ram, 0x4ee320, 4) COPY (ram, 0x4ee320, 4), (ram, 0x4ee320, 4) INDIRECT (ram, 0x4ee320, 4) , (const, 0x27f, 4)]
[(ram, 0x4ee324, 4) COPY (ram, 0x4ee324, 4), (ram, 0x4ee324, 4) INDIRECT (ram, 0x4ee324, 4) , (const, 0x27f, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x2bc1c0, 4) COPY (ram, 0x2bc1c0, 4)]
[(ram, 0x2bc1c4, 4) COPY (ram, 0x2bc1c4, 4)]
[(ram, 0x2bc1c8, 4) COPY (ram, 0x2bc1c8, 4)]
[(ram, 0x2bc1cc, 4) COPY (ram, 0x2bc1cc, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eb348, 4) COPY (ram, 0x4eb348, 4)]
[(ram, 0x4eb34c, 4) COPY (ram, 0x4eb34c, 4)]
[(ram, 0x4eb350, 4) COPY (ram, 0x4eb350, 4)]
[(ram, 0x4eb354, 4) COPY (ram, 0x4eb354, 4)]
[(ram, 0x4ee310, 4) COPY (ram, 0x4ee310, 4)]
[(ram, 0x4ee318, 8) COPY (ram, 0x4ee318, 8)]
[(ram, 0x4ee320, 4) COPY (ram, 0x4ee320, 4)]
[(ram, 0x4ee324, 4) COPY (ram, 0x4ee324, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
