[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x30, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004c9, 8), (unique, 0x100004c9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x17c870, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x189b00, 8) , (register, 0x20, 8) , (const, 0x200, 8) , (unique, 0x10000372, 8), (unique, 0x10000372, 8) COPY (const, 0x2b707b, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[ ---  CBRANCH (ram, 0x17c900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CBRANCH (ram, 0x17c900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0xa8, 8) COPY (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x17c887, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ad, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x3ad, 4)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100002ea, 8) , (register, 0xa8, 8) , (register, 0x8, 8) , (unique, 0xbc80, 4), (unique, 0x100002ea, 8) COPY (const, 0x2b406a, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ea, 8), (unique, 0x100003ea, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8)]
[ ---  BRANCH (ram, 0x17c79f, 1)]
[ ---  CBRANCH (ram, 0x17c6ab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c8a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100004b5, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003a2, 8), (unique, 0x100003a2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c728, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x41, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003a2, 8), (unique, 0x100003a2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x36a, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x10000362, 8) , (register, 0x30, 8), (unique, 0x10000362, 8) COPY (const, 0x2b6be1, 8)]
[(unique, 0x100004bd, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c6b5, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x40, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003f2, 8), (unique, 0x100003f2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x17c710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004d5, 8), (unique, 0x100004d5, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000037a, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x1000037a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e99a0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100004d1, 4), (unique, 0x100004d1, 4) CAST (register, 0xa8, 4), (register, 0xa8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28c, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x28c, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ba, 8), (unique, 0x100003ba, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17ca60, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0x100004dd, 4), (unique, 0x100004dd, 4) CAST (register, 0xa8, 4), (register, 0x0, 4) CALL (ram, 0x1400f0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2b6, 4)]
[(unique, 0x100004b9, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000040a, 8), (unique, 0x1000040a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c728, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x100004e1, 4) , (register, 0x0, 4), (unique, 0x100004e1, 4) CAST (unique, 0xbc80, 4), (register, 0x0, 4) CALL (ram, 0x140100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2d4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2c7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2d4, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2c7, 4)]
[ ---  CBRANCH (ram, 0x17cae0, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x100004e5, 4) , (register, 0x0, 4), (unique, 0x100004e5, 4) CAST (register, 0xa8, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000412, 8), (unique, 0x10000412, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) CALL (ram, 0x140100, 8), (register, 0xa8, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1400f0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x326, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x326, 4)]
[ ---  CBRANCH (ram, 0x17cbb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x140100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x359, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x359, 4)]
[ ---  CALL (ram, 0x17f8a0, 8) , (unique, 0x10000302, 8) , (const, 0x1, 8) , (const, 0xa, 8) , (register, 0x0, 8), (unique, 0x10000302, 8) COPY (const, 0x2b4092, 8)]
[ ---  BRANCH (ram, 0x17c6ed, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x351, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x333, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x351, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x333, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x1000030a, 8) , (register, 0x10, 8), (unique, 0x1000030a, 8) COPY (const, 0x2b409d, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100004e9, 4), (unique, 0x100004e9, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000422, 8), (unique, 0x10000422, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) CALL (ram, 0x140100, 8)]
[ ---  BRANCH (ram, 0x17c6ed, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ef, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2ef, 4)]
[ ---  CBRANCH (ram, 0x17cbd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1400f0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x322, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x322, 4)]
[ ---  CALL (ram, 0x17f8a0, 8) , (unique, 0x100002f2, 8) , (const, 0x1, 8) , (const, 0xa, 8) , (register, 0x0, 8), (unique, 0x100002f2, 8) COPY (const, 0x2b4079, 8)]
[ ---  BRANCH (ram, 0x17c6ed, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ff, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x31a, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2ff, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x100002fa, 8) , (register, 0x10, 8), (unique, 0x100002fa, 8) COPY (const, 0x2b4084, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100004ed, 4), (unique, 0x100004ed, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1400f0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000041a, 8), (unique, 0x1000041a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x17c6ed, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a2, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x2a2, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0xa8, 4), (register, 0x0, 8) CAST (unique, 0x100004f1, 8), (unique, 0x100004f1, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100002ca, 8) , (unique, 0x100002e2, 8) , (const, 0x5, 8), (unique, 0x100002e2, 8) COPY (const, 0x2b3fa6, 8), (unique, 0x100002ca, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (register, 0xa8, 4) MULTIEQUAL (unique, 0x100004b5, 4) , (unique, 0x100004b9, 4) , (unique, 0x100004bd, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x87, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x87, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x77, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x10000342, 8) , (register, 0x0, 8), (unique, 0x10000342, 8) COPY (const, 0x2b40cd, 8), (register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100002c2, 8) , (unique, 0xbd80, 8) , (const, 0x5, 8), (unique, 0x100002c2, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  BRANCHIND (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003aa, 8), (unique, 0x100003aa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x6, 8)]
[(register, 0x38, 8) COPY (const, 0x2ae7c8, 8)]
[(register, 0x30, 8) COPY (const, 0x2ae7e0, 8)]
[ ---  BRANCH (ram, 0x17c928, 1)]
[(register, 0x0, 8) COPY (const, 0x6, 8)]
[(register, 0x38, 8) COPY (const, 0x2ae862, 8)]
[(register, 0x30, 8) COPY (const, 0x2ae880, 8)]
[ ---  BRANCH (ram, 0x17c928, 1)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[(register, 0x38, 8) COPY (const, 0x2ae9f6, 8)]
[(register, 0x30, 8) COPY (const, 0x2aea00, 8)]
[ ---  BRANCH (ram, 0x17c928, 1)]
[(register, 0x0, 8) COPY (const, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x2bc448, 8)]
[(register, 0x30, 8) COPY (const, 0x2aea60, 8)]
[ ---  BRANCH (ram, 0x17c928, 1)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(register, 0x38, 8) COPY (const, 0x2ae986, 8)]
[(register, 0x30, 8) COPY (const, 0x2ae9a0, 8)]
[ ---  BRANCH (ram, 0x17c928, 1)]
[(register, 0x38, 8) COPY (const, 0x2ae94f, 8)]
[(register, 0x30, 8) COPY (const, 0x2ae960, 8)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[(register, 0x0, 8) COPY (const, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x2bc450, 8)]
[(register, 0x30, 8) COPY (const, 0x2aeb40, 8)]
[ ---  BRANCH (ram, 0x17c928, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x17c7d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x17c7d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (unique, 0x100004f9, 8), (unique, 0x100004f9, 8) CAST (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x17cb78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xfffffffd, 4)]
[(register, 0x30, 8) COPY (const, 0x2b7ed8, 8)]
[ ---  BRANCH (ram, 0x17c810, 1)]
[ ---  CBRANCH (ram, 0x17c8d0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xfffffffd, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x17cb68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) COPY (const, 0x2b4039, 8)]
[ ---  BRANCH (ram, 0x17c810, 1)]
[ ---  CBRANCH (ram, 0x17cb58, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) COPY (const, 0x2b7e60, 8)]
[ ---  BRANCH (ram, 0x17c810, 1)]
[ ---  CBRANCH (ram, 0x17cad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0x2b4009, 8)]
[ ---  BRANCH (ram, 0x17c810, 1)]
[(register, 0x30, 8) COPY (const, 0x2b401f, 8)]
[ ---  CBRANCH (ram, 0x17c94a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x80, 4)]
[ ---  CBRANCH (ram, 0x17cb30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xfffffffa, 4)]
[(register, 0x30, 8) COPY (const, 0x2b4053, 8)]
[ ---  BRANCH (ram, 0x17c810, 1)]
[ ---  CBRANCH (ram, 0x17cb40, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xfffffffa, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x17cac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xfffffffb, 4)]
[(register, 0x30, 8) COPY (const, 0x2b7e28, 8)]
[ ---  BRANCH (ram, 0x17c810, 1)]
[(register, 0x30, 8) COPY (const, 0x2b7e90, 8)]
[ ---  CBRANCH (ram, 0x17c810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xfffffffc, 4)]
[(register, 0x30, 8) COPY (const, 0x2b7dd8, 8)]
[ ---  CBRANCH (ram, 0x17c810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffc4, 4)]
[ ---  CBRANCH (ram, 0x17c810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000501, 1), (unique, 0x10000501, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000470, 8) , (const, 0x1, 8), (unique, 0x10000470, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x240, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x240, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x10000352, 8), (unique, 0x10000352, 8) COPY (const, 0x2b587a, 8)]
[ ---  CBRANCH (ram, 0x17c841, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xc, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003fa, 8), (unique, 0x100003fa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf7, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf7, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe7, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x10000312, 8) , (register, 0x0, 8), (unique, 0x10000312, 8) COPY (const, 0x2b40ab, 8), (register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100002ba, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x100002ba, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x17c967, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xb, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003da, 8), (unique, 0x100003da, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x17c970, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0x990, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11f, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11f, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x1000031a, 8) , (unique, 0xbd80, 8), (unique, 0x1000031a, 8) COPY (const, 0x2b40af, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000502, 8), (unique, 0x10000502, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x17c750, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x17cb88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x11, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x17cb10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1d, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x20b, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x10000332, 8) , (unique, 0xbd80, 8), (unique, 0x10000332, 8) COPY (const, 0x2b40bd, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000050a, 8), (unique, 0x1000050a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x17c750, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1f8, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x1000033a, 8) , (register, 0x10, 8), (unique, 0x1000033a, 8) COPY (const, 0x2b40c3, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000512, 8), (unique, 0x10000512, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x17c750, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x230, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x230, 4)]
[ ---  CALL (ram, 0x164dc0, 8) , (register, 0x0, 8) , (unique, 0x10000322, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8), (unique, 0x10000322, 8) COPY (const, 0x2b40b6, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000052a, 8), (unique, 0x1000052a, 8) PTRSUB (unique, 0x1000045a, 8) , (const, 0x8, 8), (unique, 0x1000045a, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000522, 8), (unique, 0x10000522, 8) PTRSUB (unique, 0x10000442, 8) , (const, 0x4, 8), (unique, 0x10000442, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000051a, 8), (unique, 0x1000051a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x17c750, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x124, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x124, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x17e250, 8) , (register, 0x0, 8)]
[(unique, 0x1000049d, 8) COPY (register, 0x20, 8)]
[(unique, 0x100004a5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x100004ad, 8), (unique, 0x100004ad, 8) MULTIEQUAL (unique, 0x1000049d, 8) , (unique, 0x100004a5, 8)]
[ ---  CBRANCH (ram, 0x17c75b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100004ad, 8), (unique, 0x100004ad, 8) MULTIEQUAL (unique, 0x1000049d, 8) , (unique, 0x100004a5, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x100004c1, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17c787, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x100004c5, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100004c1, 4) , (unique, 0x100004c5, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x1000053a, 8), (unique, 0x1000053a, 8) INT_ADD (unique, 0x10000532, 8) , (const, 0x6, 8), (unique, 0x10000532, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000048d, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x17c791, 1) , (register, 0x206, 1)]
[(unique, 0x10000495, 8) COPY (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ad, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1ad, 4)]
[ ---  CALL (ram, 0x2101e0, 8) , (const, 0x2, 8) , (register, 0x20, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (unique, 0x1000054a, 8) , (unique, 0x100003d2, 8), (unique, 0x1000054a, 8) CAST (register, 0x10, 8), (unique, 0x100003d2, 8) INT_SUB (unique, 0x100003ca, 8) , (unique, 0x10000542, 8), (unique, 0x10000542, 8) CAST (register, 0x20, 8), (unique, 0x100003ca, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000048d, 8) , (unique, 0x10000495, 8)]
[ ---  CBRANCH (ram, 0x17cbee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000552, 8), (unique, 0x10000552, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1d6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
