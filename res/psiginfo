[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[ ---  CBRANCH (ram, 0x16bf10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x177910, 8) , (register, 0x20, 8) , (const, 0x200, 8) , (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) COPY (const, 0x28f2f5, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[ ---  CBRANCH (ram, 0x16bf68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x28c5c1, 8)]
[ ---  CBRANCH (ram, 0x16bf68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x8, 8) COPY (const, 0x28c365, 8)]
[(register, 0xa8, 8) COPY (const, 0x28c365, 8)]
[ ---  BRANCH (ram, 0x16bf23, 1)]
[ ---  CALL (ram, 0x16cfd0, 8) , (const, 0x0, 8) , (unique, 0x100002b3, 8) , (register, 0xa8, 8) , (register, 0x8, 8) , (unique, 0xbc80, 4), (unique, 0x100002b3, 8) COPY (const, 0x28c740, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000039b, 8), (unique, 0x1000039b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bbd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bcd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x1000032b, 8) , (register, 0x30, 8), (unique, 0x1000032b, 8) COPY (const, 0x28ef19, 8)]
[ ---  BRANCH (ram, 0x16bbd8, 1)]
[(unique, 0x10000425, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000035b, 8), (unique, 0x1000035b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bc40, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x40, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000035b, 8), (unique, 0x1000035b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bfc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000431, 8), (unique, 0x10000431, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000343, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000343, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c0c40, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000042d, 4), (unique, 0x1000042d, 4) CAST (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x1000030b, 8) , (register, 0x0, 8), (unique, 0x1000030b, 8) COPY (const, 0x28c7a3, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x1000028b, 8) , (unique, 0xbd80, 8) , (const, 0x5, 8), (unique, 0x1000028b, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8)]
[(unique, 0x10000429, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bc40, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0x10000439, 4), (unique, 0x10000439, 4) CAST (unique, 0xbc80, 4), (register, 0x0, 4) CALL (ram, 0x136860, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bc40, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x1000043d, 4) , (register, 0x0, 4), (unique, 0x1000043d, 4) CAST (unique, 0xbc80, 4), (register, 0x0, 4) CALL (ram, 0x136870, 8)]
[ ---  CBRANCH (ram, 0x16c030, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (unique, 0x10000441, 4) , (register, 0x0, 4), (unique, 0x10000441, 4) CAST (register, 0xa8, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003bb, 8), (unique, 0x100003bb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) CALL (ram, 0x136870, 8), (register, 0xa8, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x136860, 8)]
[ ---  CBRANCH (ram, 0x16c100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x136870, 8)]
[ ---  CALL (ram, 0x16e620, 8) , (unique, 0x100002cb, 8) , (const, 0x1, 8) , (const, 0xa, 8) , (register, 0x0, 8), (unique, 0x100002cb, 8) COPY (const, 0x28c768, 8)]
[ ---  BRANCH (ram, 0x16bc1e, 1)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x100002d3, 8) , (register, 0x10, 8), (unique, 0x100002d3, 8) COPY (const, 0x28c773, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x10000445, 4), (unique, 0x10000445, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) CALL (ram, 0x136870, 8)]
[ ---  BRANCH (ram, 0x16bc1e, 1)]
[ ---  CBRANCH (ram, 0x16c0d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x136860, 8)]
[ ---  CALL (ram, 0x16e620, 8) , (unique, 0x100002bb, 8) , (const, 0x1, 8) , (const, 0xa, 8) , (register, 0x0, 8), (unique, 0x100002bb, 8) COPY (const, 0x28c74f, 8)]
[ ---  BRANCH (ram, 0x16bc1e, 1)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x100002c3, 8) , (register, 0x10, 8), (unique, 0x100002c3, 8) COPY (const, 0x28c75a, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x10000449, 4), (unique, 0x10000449, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x136860, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x16bc1e, 1)]
[ ---  BRANCHIND (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000363, 8), (unique, 0x10000363, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x6, 8)]
[(register, 0x38, 8) COPY (const, 0x2868e8, 8)]
[(register, 0x30, 8) COPY (const, 0x286900, 8)]
[ ---  BRANCH (ram, 0x16bd10, 1)]
[(register, 0x8, 8) COPY (const, 0x6, 8)]
[(register, 0x38, 8) COPY (const, 0x286982, 8)]
[(register, 0x30, 8) COPY (const, 0x2869a0, 8)]
[ ---  BRANCH (ram, 0x16bd10, 1)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[(register, 0x38, 8) COPY (const, 0x286b16, 8)]
[(register, 0x30, 8) COPY (const, 0x286b20, 8)]
[ ---  BRANCH (ram, 0x16bd10, 1)]
[(register, 0x38, 8) COPY (const, 0x293ec8, 8)]
[(register, 0x30, 8) COPY (const, 0x286b80, 8)]
[(register, 0x8, 8) COPY (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x3, 8)]
[(register, 0x38, 8) COPY (const, 0x286aa6, 8)]
[(register, 0x30, 8) COPY (const, 0x286ac0, 8)]
[ ---  BRANCH (ram, 0x16bd10, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2, 8)]
[(register, 0x38, 8) COPY (const, 0x286a6f, 8)]
[(register, 0x30, 8) COPY (const, 0x286a80, 8)]
[ ---  BRANCH (ram, 0x16bd10, 1)]
[(register, 0x8, 8) COPY (const, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x293ed0, 8)]
[(register, 0x30, 8) COPY (const, 0x286c60, 8)]
[ ---  BRANCH (ram, 0x16bd10, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x16be58, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x16be58, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (unique, 0x1000044d, 8), (unique, 0x1000044d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x16c060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xfffffffd, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x30, 8) COPY (const, 0x2900c0, 8)]
[ ---  BRANCH (ram, 0x16bd35, 1)]
[ ---  CBRANCH (ram, 0x16bee0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0xfffffffd, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x16c0a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) COPY (const, 0x28c710, 8)]
[ ---  BRANCH (ram, 0x16bd35, 1)]
[ ---  CBRANCH (ram, 0x16c090, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) COPY (const, 0x290150, 8)]
[ ---  BRANCH (ram, 0x16bd35, 1)]
[ ---  CBRANCH (ram, 0x16c080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x30, 8) COPY (const, 0x28c72a, 8)]
[ ---  BRANCH (ram, 0x16bd35, 1)]
[(register, 0x30, 8) COPY (const, 0x28c6df, 8)]
[ ---  CBRANCH (ram, 0x16bd35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x80, 4)]
[ ---  CBRANCH (ram, 0x16c070, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xfffffffa, 4)]
[(register, 0x30, 8) COPY (const, 0x28c6f9, 8)]
[ ---  BRANCH (ram, 0x16bd35, 1)]
[ ---  CBRANCH (ram, 0x16bfa8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xfffffffa, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x16bf98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xfffffffb, 4)]
[(register, 0x30, 8) COPY (const, 0x290038, 8)]
[ ---  BRANCH (ram, 0x16bd35, 1)]
[(register, 0x30, 8) COPY (const, 0x290108, 8)]
[ ---  CBRANCH (ram, 0x16bd35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xfffffffc, 4)]
[(register, 0x30, 8) COPY (const, 0x290070, 8)]
[ ---  CBRANCH (ram, 0x16bd35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xffffffc4, 4)]
[ ---  CBRANCH (ram, 0x16be90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000455, 1), (unique, 0x10000455, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000040b, 8) , (const, 0x1, 8), (unique, 0x1000040b, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x1000031b, 8), (unique, 0x1000031b, 8) COPY (const, 0x28e083, 8)]
[ ---  BRANCH (ram, 0x16bd5a, 1)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x100002db, 8) , (register, 0x0, 8), (unique, 0x100002db, 8) COPY (const, 0x28c781, 8), (register, 0x0, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000283, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x10000283, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16beb0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0xc, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000037b, 8), (unique, 0x1000037b, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x16bd6f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0x990, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x100002e3, 8) , (unique, 0xbd80, 8), (unique, 0x100002e3, 8) COPY (const, 0x28c785, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000456, 8), (unique, 0x10000456, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x16bc68, 1)]
[ ---  CBRANCH (ram, 0x16c0b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x11, 4)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x100002eb, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8), (unique, 0x100002eb, 8) COPY (const, 0x28c78c, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000046e, 8), (unique, 0x1000046e, 8) PTRSUB (unique, 0x100003fb, 8) , (const, 0x8, 8), (unique, 0x100003fb, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000466, 8), (unique, 0x10000466, 8) PTRSUB (unique, 0x100003e3, 8) , (const, 0x4, 8), (unique, 0x100003e3, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000045e, 8), (unique, 0x1000045e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x16bc68, 1)]
[ ---  CBRANCH (ram, 0x16bf78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1d, 4)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x100002fb, 8) , (unique, 0xbd80, 8), (unique, 0x100002fb, 8) COPY (const, 0x28c793, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000476, 8), (unique, 0x10000476, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x16bc68, 1)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (unique, 0x10000303, 8) , (register, 0x10, 8), (unique, 0x10000303, 8) COPY (const, 0x28c799, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000047e, 8), (unique, 0x1000047e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x16bc68, 1)]
[ ---  CALL (ram, 0x155720, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0xa8, 4), (register, 0x0, 8) CAST (unique, 0x10000486, 8), (unique, 0x10000486, 8) CALL (ram, 0x12e620, 8) , (unique, 0x10000293, 8) , (unique, 0x100002ab, 8) , (const, 0x5, 8), (unique, 0x100002ab, 8) COPY (const, 0x28c67c, 8), (unique, 0x10000293, 8) PTRSUB (const, 0x0, 8) , (const, 0x28c400, 8), (register, 0xa8, 4) MULTIEQUAL (unique, 0x10000425, 4) , (unique, 0x10000429, 4) , (unique, 0xbc80, 4)]
[ ---  CALL (ram, 0x16d210, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x16bc73, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x10, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  RETURN (const, 0x0, 8)]
