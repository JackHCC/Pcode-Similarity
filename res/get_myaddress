[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x11, 4)]
[ ---  CBRANCH (ram, 0x23626d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  CALL (ram, 0x16a940, 8) , (unique, 0x10000073, 8), (unique, 0x10000073, 8) COPY (const, 0x28f323, 8)]
[ ---  CALL (ram, 0x13a020, 8) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x10000071, 1) COPY (const, 0x0, 1)]
[(unique, 0x100000bd, 8) COPY (stack, 0xfffffffffffffff0, 8)]
[(unique, 0x1000006d, 1) MULTIEQUAL (unique, 0x1000006d, 1) , (unique, 0x10000071, 1) , (unique, 0x10000070, 1)]
[ ---  CBRANCH (ram, 0x236260, 1) , (unique, 0x100000ab, 1), (unique, 0x100000ab, 1) INT_EQUAL (unique, 0x100000ac, 8) , (const, 0x0, 8), (unique, 0x100000ac, 8) MULTIEQUAL (unique, 0x100000b5, 8) , (unique, 0x100000bd, 8) , (unique, 0x100000c5, 8)]
[ ---  CBRANCH (ram, 0x236210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000044, 4) , (const, 0x0, 4), (unique, 0x10000044, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000cd, 8), (unique, 0x100000cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000ac, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x236210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000ac, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x236210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x236239, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x236210, 1) , (unique, 0x1000006d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000dd, 8) , (unique, 0xbd80, 8), (unique, 0x100000dd, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000e5, 8) , (unique, 0xbd80, 8), (unique, 0x100000e5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x6f00, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0x100000b5, 8) COPY (unique, 0x100000ed, 8), (unique, 0x100000ed, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000ac, 8)]
[ ---  CBRANCH (ram, 0x236250, 1) , (unique, 0x1000006d, 1)]
[ ---  CALL (ram, 0x222820, 8) , (stack, 0xfffffffffffffff0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(unique, 0x10000070, 1) COPY (const, 0x1, 1)]
[(unique, 0x100000c5, 8) COPY (stack, 0xfffffffffffffff0, 8)]
[ ---  BRANCH (ram, 0x2361fe, 1)]
