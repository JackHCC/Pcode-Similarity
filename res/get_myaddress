[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x20, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x20, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000153, 8), (unique, 0x10000153, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x257b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2401a0, 8) , (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe8, 8)]
[ ---  CALL (ram, 0x17b270, 8) , (unique, 0x100000bc, 8), (unique, 0x100000bc, 8) COPY (const, 0x2b70a9, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xd4, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xd0, 4)]
[ ---  CALL (ram, 0x143120, 8) , (const, 0x1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x257b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe8, 8) , (const, 0x0, 8)]
[(unique, 0x100000b9, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000143, 8) COPY (stack, 0xffffffffffffffe8, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x100000b6, 1) MULTIEQUAL (unique, 0x100000b6, 1) , (unique, 0x100000b9, 1) , (unique, 0x100000b8, 1)]
[ ---  CBRANCH (ram, 0x257b07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000004d, 4) , (const, 0x0, 4), (unique, 0x1000004d, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000015b, 8), (unique, 0x1000015b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000013b, 8) , (unique, 0x10000143, 8) , (unique, 0x1000014b, 8)]
[ ---  CBRANCH (ram, 0x257b07, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000163, 8), (unique, 0x10000163, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x257b20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000016b, 8), (unique, 0x1000016b, 8) CAST (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x257b2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4)]
[ ---  CBRANCH (ram, 0x257b07, 1) , (unique, 0x10000139, 1), (unique, 0x10000139, 1) BOOL_NEGATE (unique, 0x100000b6, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000173, 8) , (unique, 0x10000073, 4), (unique, 0x10000173, 8) CAST (register, 0x38, 8), (unique, 0x10000073, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000fc, 8) , (unique, 0x10000077, 4), (unique, 0x100000fc, 8) PTRSUB (unique, 0x1000009b, 8) , (const, 0x0, 8), (unique, 0x1000009b, 8) PTRSUB (register, 0x38, 8) , (const, 0x4, 8), (unique, 0x10000077, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000007b, 8), (unique, 0x1000007b, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000017b, 8) , (unique, 0x10000083, 4), (unique, 0x1000017b, 8) CAST (unique, 0x100000a3, 8), (unique, 0x100000a3, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x10000083, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000087, 8), (unique, 0x10000087, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000183, 8) , (unique, 0x1000008f, 4), (unique, 0x10000183, 8) CAST (unique, 0x100000ab, 8), (unique, 0x100000ab, 8) PTRADD (unique, 0x1000011c, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x1000011c, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x1000008f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000093, 8), (unique, 0x10000093, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x6f00, 2), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0x1000013b, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x257af0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x100000b8, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x257b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0x1000014b, 8) COPY (stack, 0xffffffffffffffe8, 8)]
[ ---  BRANCH (ram, 0x257ae4, 1)]
[ ---  CALL (ram, 0x2401c0, 8)]
[ ---  CBRANCH (ram, 0x257b5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000193, 8), (unique, 0x10000193, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x8a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xab, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
