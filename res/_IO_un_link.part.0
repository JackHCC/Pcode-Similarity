[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000219, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  CBRANCH (ram, 0x41e2e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c7c38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000251, 8), (unique, 0x10000251, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41e500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000229, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x2ba, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x2ba, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x2ba, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0x10000122, 8), (unique, 0x10000122, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7c30, 8)]
[(unique, 0x10000231, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x41e2da, 1)]
[(unique, 0x10000239, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c30, 4) , (const, 0x0, 4)]
[(ram, 0x4c7c30, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000221, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (unique, 0x10000219, 8) , (unique, 0x10000221, 8) , (unique, 0x10000229, 8) , (unique, 0x10000231, 8) , (unique, 0x10000239, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001b1, 8) COPY (unique, 0x10000261, 8), (unique, 0x10000261, 8) CAST (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x10, 4) INT_ADD (ram, 0x4c7c34, 4) , (const, 0x1, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[ ---  CBRANCH (ram, 0x41e428, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x41e362, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c5120, 8) , (const, 0x0, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x299, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x299, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x299, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff7f, 4)]
[ ---  BRANCH (ram, 0x41e3be, 1)]
[ ---  CBRANCH (ram, 0x41e4d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000279, 8), (unique, 0x10000279, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000269, 8), (unique, 0x10000269, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41e55f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x254, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x254, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x254, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x254, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x258, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x258, 4)]
[(ram, 0x4c7c20, 8) INDIRECT (unique, 0x10000201, 8) , (const, 0x258, 4), (unique, 0x10000201, 8) COPY (register, 0x38, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x258, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x258, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x258, 4)]
[ ---  CALL (ram, 0x421390, 8)]
[ ---  BRANCH (ram, 0x41e33b, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xc0, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xc0, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0xc0, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xc0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000291, 8), (unique, 0x10000291, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xdd, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0xd1, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xdd, 4), (ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0xd1, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (register, 0x10, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xdd, 4), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0xd1, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000291, 8), (unique, 0x10000291, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(register, 0x80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100001e1, 8) COPY (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) CAST (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xdd, 4), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0xd1, 4), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[ ---  CBRANCH (ram, 0x41e376, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001b9, 8) , (const, 0x0, 8), (unique, 0x100001b9, 8) COPY (unique, 0x10000289, 8), (unique, 0x10000289, 8) CAST (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x262, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x262, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x262, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x262, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41e362, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001b1, 8) , (const, 0x0, 8)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (register, 0x10, 4)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(unique, 0x100001c1, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100001b9, 8) , (unique, 0x100001b1, 8) , (unique, 0x100001b1, 8)]
[(unique, 0x100001d1, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100001b9, 8) , (unique, 0x100001b1, 8) , (unique, 0x100001b1, 8)]
[(unique, 0x100001f1, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100001b9, 8) , (unique, 0x100001b1, 8) , (unique, 0x100001b1, 8)]
[ ---  CBRANCH (ram, 0x41e454, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x100001b9, 8) , (unique, 0x100001b1, 8) , (unique, 0x100001b1, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100001c1, 8) , (unique, 0x100001c9, 8)]
[(unique, 0x100001e9, 8) COPY (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) CAST (ram, 0x4c5120, 8)]
[ ---  CBRANCH (ram, 0x41e448, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001d1, 8) , (unique, 0x100001d9, 8)]
[ ---  CBRANCH (ram, 0x41e4b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002c9, 8) , (unique, 0xbd80, 8), (unique, 0x100002c9, 8) CAST (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x232, 4), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x230, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x232, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x230, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x232, 4), (ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x230, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x232, 4), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x230, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff7f, 4)]
[(unique, 0x100001c9, 8) COPY (register, 0x10, 8)]
[(unique, 0x100001d9, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x10b, 4), (ram, 0x4c5120, 8) COPY (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) MULTIEQUAL (unique, 0x100001e1, 8) , (unique, 0x100001e9, 8) , (unique, 0x100001f1, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x10b, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x10b, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x10b, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xffffff7f, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000190, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000198, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8)]
[(unique, 0x100001a0, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4)]
[(unique, 0x100001a4, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4)]
[(unique, 0x100001a8, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[ ---  CBRANCH (ram, 0x41e385, 1) , (unique, 0x1000018f, 1), (unique, 0x1000018f, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002e1, 8), (unique, 0x100002e1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x22, 8) , (const, 0x4, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x281, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x281, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x281, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x281, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffff7f, 4)]
[ ---  BRANCH (ram, 0x41e38c, 1)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000190, 8) , (register, 0x110, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x12a, 4), (ram, 0x4c5120, 8) MULTIEQUAL (unique, 0x10000198, 8) , (ram, 0x4c5120, 8)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x12a, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (unique, 0x100001a0, 4) , (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x12a, 4), (ram, 0x4c7c34, 4) MULTIEQUAL (unique, 0x100001a4, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x12a, 4), (ram, 0x4c7c38, 8) MULTIEQUAL (unique, 0x100001a8, 8) , (ram, 0x4c7c38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41e3be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x131, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x131, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x131, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x131, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e9, 8) , (const, 0x0, 8), (unique, 0x100002e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41e45e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f1, 8), (unique, 0x100002f1, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x147, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x147, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x147, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x147, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1dc, 4)]
[(ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1dc, 4)]
[(ram, 0x4c7c34, 4) INDIRECT (ram, 0x4c7c34, 4) , (const, 0x1dc, 4)]
[(ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41e3be, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (unique, 0x100001a8, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c5120, 8) MULTIEQUAL (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (ram, 0x4c5120, 8) , (unique, 0x10000198, 8) , (ram, 0x4c5120, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000190, 8) , (register, 0x110, 8)]
[(ram, 0x4c7c20, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000209, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) MULTIEQUAL (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (ram, 0x4c7c30, 4) , (unique, 0x100001a0, 4) , (ram, 0x4c7c30, 4)]
[ ---  CBRANCH (ram, 0x41e3f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (ram, 0x4c7c34, 4) , (register, 0x10, 4) , (unique, 0x100001a4, 4) , (ram, 0x4c7c34, 4)]
[(ram, 0x4c7c38, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41e530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(unique, 0x10000211, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x41e3f6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (ram, 0x4c7c30, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x41e3f6, 1)]
[(unique, 0x1000020d, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) INT_ADD (ram, 0x4c7c30, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c7c38, 8) MULTIEQUAL (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8) , (ram, 0x4c7c38, 8)]
[(ram, 0x4c7c30, 4) MULTIEQUAL (unique, 0x10000209, 4) , (unique, 0x1000020d, 4) , (unique, 0x10000211, 4) , (unique, 0x10000211, 4)]
[ ---  CBRANCH (ram, 0x41e576, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8)]
[(ram, 0x4c7c20, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4)]
[(ram, 0x4c7c34, 4) COPY (register, 0x10, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c5120, 8) COPY (ram, 0x4c5120, 8), (ram, 0x4c5120, 8) INDIRECT (ram, 0x4c5120, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c7c20, 8) COPY (ram, 0x4c7c20, 8), (ram, 0x4c7c20, 8) INDIRECT (ram, 0x4c7c20, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c7c30, 4) COPY (ram, 0x4c7c30, 4), (ram, 0x4c7c30, 4) INDIRECT (ram, 0x4c7c30, 4) , (const, 0x1b6, 4)]
[(ram, 0x4c7c34, 4) COPY (ram, 0x4c7c34, 4), (ram, 0x4c7c34, 4) INDIRECT (register, 0x10, 4) , (const, 0x1b6, 4)]
[(ram, 0x4c7c38, 8) COPY (ram, 0x4c7c38, 8), (ram, 0x4c7c38, 8) INDIRECT (ram, 0x4c7c38, 8) , (const, 0x1b6, 4)]
[ ---  RETURN (const, 0x1, 4)]
