[ ---  CBRANCH (ram, 0x290000, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x50, 8)]
[ ---  CBRANCH (ram, 0x28fff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x37, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10002614, 8), (unique, 0x10002614, 8) INT_ADD (unique, 0x1000260c, 8) , (register, 0x8, 8), (unique, 0x1000260c, 8) CAST (unique, 0x10000382, 8), (unique, 0x10000382, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10002608, 4), (unique, 0x10002608, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000037a, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x1000037a, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x1000041a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000041a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (unique, 0x1000040a, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x1000040a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0x1000261d, 1), (unique, 0x1000261d, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x1000261c, 1), (unique, 0x1000261c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000043a, 8), (unique, 0x1000043a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000432, 8), (unique, 0x10000432, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10002280, 8) COPY (register, 0x30, 8)]
[(unique, 0x100023f0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x10000442, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000442, 8) PTRSUB (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) CAST (unique, 0x1000263e, 8), (unique, 0x1000263e, 8) INT_SUB (unique, 0x1000262e, 8) , (unique, 0x10002636, 8), (unique, 0x10002636, 8) CAST (register, 0x30, 8), (unique, 0x1000262e, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10002626, 8), (unique, 0x10002626, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x1000261e, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000261e, 8) CAST (register, 0x30, 8)]
[(register, 0x1220, 8) SUBPIECE (unique, 0x5300, 16) , (const, 0x0, 4)]
[(unique, 0x100025f8, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10002626, 8), (unique, 0x10002626, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x1000261e, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000261e, 8) CAST (register, 0x30, 8)]
[(unique, 0x10002600, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10002656, 8), (unique, 0x10002656, 8) INT_SUB (unique, 0x10002646, 8) , (unique, 0x1000264e, 8), (unique, 0x1000264e, 8) CAST (register, 0x8, 8), (unique, 0x10002646, 8) CAST (register, 0x38, 8), (register, 0x8, 8) CAST (unique, 0x1000263e, 8), (unique, 0x1000263e, 8) INT_SUB (unique, 0x1000262e, 8) , (unique, 0x10002636, 8), (unique, 0x10002636, 8) CAST (register, 0x30, 8), (unique, 0x1000262e, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10002626, 8), (unique, 0x10002626, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x1000261e, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000261e, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x290540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x1000265e, 8) , (const, 0xf, 8), (unique, 0x1000265e, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10002656, 8), (unique, 0x10002656, 8) INT_SUB (unique, 0x10002646, 8) , (unique, 0x1000264e, 8), (unique, 0x1000264e, 8) CAST (register, 0x8, 8), (unique, 0x10002646, 8) CAST (register, 0x38, 8), (register, 0x8, 8) CAST (unique, 0x1000263e, 8), (unique, 0x1000263e, 8) INT_SUB (unique, 0x1000262e, 8) , (unique, 0x10002636, 8), (unique, 0x10002636, 8) CAST (register, 0x30, 8), (unique, 0x1000262e, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10002626, 8), (unique, 0x10002626, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x1000261e, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x1000261e, 8) CAST (register, 0x30, 8)]
[(unique, 0x10002230, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290600, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x81, 8)]
[ ---  CBRANCH (ram, 0x290940, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x200, 8) , (register, 0x10, 8)]
[(unique, 0x100025d0, 8) COPY (register, 0x10, 8)]
[(unique, 0x100025e8, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2909cb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (register, 0x10, 8), (register, 0x80, 8) CAST (unique, 0x10002666, 8), (unique, 0x10002666, 8) INT_ADD (register, 0x80, 8) , (ram, 0x4eb330, 8), (register, 0x80, 8) INT_RIGHT (ram, 0x4eb330, 8) , (const, 0x1, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100025f0, 8), (unique, 0x100025f0, 8) MULTIEQUAL (unique, 0x100025e0, 8) , (unique, 0x100025e8, 8)]
[ ---  CBRANCH (ram, 0x290a50, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100025e0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2909d0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002676, 8), (unique, 0x10002676, 8) PTRADD (unique, 0x10000a3a, 8) , (unique, 0x1000266e, 8) , (const, 0x1, 8), (unique, 0x1000266e, 8) CAST (register, 0x10, 8), (unique, 0x10000a3a, 8) PTRSUB (unique, 0x10000a32, 8) , (const, 0x0, 8), (unique, 0x10000a32, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) CAST (unique, 0x10002686, 8), (unique, 0x10002686, 8) PTRADD (unique, 0x10000a52, 8) , (unique, 0x1000267e, 8) , (const, 0x1, 8), (unique, 0x1000267e, 8) CAST (register, 0x10, 8), (unique, 0x10000a52, 8) PTRSUB (unique, 0x10000a4a, 8) , (const, 0x0, 8), (unique, 0x10000a4a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100025d8, 8), (unique, 0x100025d8, 8) MULTIEQUAL (unique, 0x100025c8, 8) , (unique, 0x100025d0, 8)]
[ ---  CBRANCH (ram, 0x290a50, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100025c8, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290960, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002696, 8), (unique, 0x10002696, 8) PTRADD (unique, 0x100009ca, 8) , (unique, 0x1000268e, 8) , (const, 0x1, 8), (unique, 0x1000268e, 8) CAST (register, 0x10, 8), (unique, 0x100009ca, 8) PTRSUB (unique, 0x100009c2, 8) , (const, 0x0, 8), (unique, 0x100009c2, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) CAST (unique, 0x100026a6, 8), (unique, 0x100026a6, 8) PTRADD (unique, 0x100009e2, 8) , (unique, 0x1000269e, 8) , (const, 0x1, 8), (unique, 0x1000269e, 8) CAST (register, 0x10, 8), (unique, 0x100009e2, 8) PTRSUB (unique, 0x100009da, 8) , (const, 0x0, 8), (unique, 0x100009da, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(unique, 0x10002228, 8) COPY (register, 0x10, 8)]
[(unique, 0x100023d0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290740, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x101, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff00, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026ae, 8), (unique, 0x100026ae, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026b6, 8), (unique, 0x100026b6, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b53, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026be, 8), (unique, 0x100026be, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026c6, 8), (unique, 0x100026c6, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b3f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026ce, 8), (unique, 0x100026ce, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b35, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026d6, 8), (unique, 0x100026d6, 8) INT_ADD (register, 0x30, 8) , (const, 0x70, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b25, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100026de, 8), (unique, 0x100026de, 8) INT_ADD (register, 0x30, 8) , (const, 0x80, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b15, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100026e6, 8), (unique, 0x100026e6, 8) INT_ADD (register, 0x30, 8) , (const, 0x90, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b05, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100026ee, 8), (unique, 0x100026ee, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290af5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100026f6, 8), (unique, 0x100026f6, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290ae2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100026fe, 8), (unique, 0x100026fe, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290acf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10002706, 8), (unique, 0x10002706, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290abc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000270e, 8), (unique, 0x1000270e, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290aa9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10002716, 8), (unique, 0x10002716, 8) INT_ADD (register, 0x30, 8) , (const, 0xf0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000271e, 8), (unique, 0x1000271e, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290a96, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000271e, 8), (unique, 0x1000271e, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002726, 8), (unique, 0x10002726, 8) INT_ADD (register, 0x30, 8) , (const, 0x110, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29061a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(unique, 0x10002240, 8) COPY (register, 0x10, 8)]
[(unique, 0x10002278, 8) COPY (register, 0x30, 8)]
[(unique, 0x100023e8, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29054d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290924, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000272e, 8), (unique, 0x1000272e, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000272e, 8), (unique, 0x1000272e, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffee0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002736, 8), (unique, 0x10002736, 8) INT_ADD (register, 0x30, 8) , (const, 0x130, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0xb9f, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10002762, 8), (unique, 0x10002762, 8) INT_ADD (unique, 0x1000275a, 8) , (register, 0x8, 8), (unique, 0x1000275a, 8) CAST (unique, 0x100003e2, 8), (unique, 0x100003e2, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10002756, 4), (unique, 0x10002756, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003da, 8) , (unique, 0x1000274e, 8) , (const, 0x4, 8), (unique, 0x1000274e, 8) CAST (register, 0x10, 8), (unique, 0x100003da, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x1000096a, 8) , (unique, 0x10002746, 8) , (const, 0x1, 8), (unique, 0x10002746, 8) CAST (register, 0x10, 8), (unique, 0x1000096a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (unique, 0x1000095a, 8) , (unique, 0x1000273e, 8) , (const, 0x1, 8), (unique, 0x1000273e, 8) CAST (register, 0x10, 8), (unique, 0x1000095a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002228, 8) , (register, 0x10, 8)]
[(unique, 0x100022c0, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10002430, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100023d0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100023d0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x100024e8, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b53, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b3f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b35, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b25, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[(unique, 0x10002238, 8) COPY (register, 0x10, 8)]
[(unique, 0x10002270, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[(unique, 0x100023e0, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29054d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290719, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[(unique, 0x100022c8, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002438, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(unique, 0x10002320, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002490, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x100003f2, 8) , (unique, 0x1000276a, 8) , (const, 0x1, 8), (unique, 0x1000276a, 8) CAST (register, 0x10, 8), (unique, 0x100003f2, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff60, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x9fa, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10002796, 8), (unique, 0x10002796, 8) INT_ADD (unique, 0x1000278e, 8) , (register, 0x8, 8), (unique, 0x1000278e, 8) CAST (unique, 0x100003d2, 8), (unique, 0x100003d2, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000278a, 4), (unique, 0x1000278a, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003ca, 8) , (unique, 0x10002782, 8) , (const, 0x4, 8), (unique, 0x10002782, 8) CAST (register, 0x10, 8), (unique, 0x100003ca, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x100008b2, 8) , (unique, 0x1000277a, 8) , (const, 0x1, 8), (unique, 0x1000277a, 8) CAST (register, 0x10, 8), (unique, 0x100008b2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (unique, 0x100008a2, 8) , (unique, 0x10002772, 8) , (const, 0x1, 8), (unique, 0x10002772, 8) CAST (register, 0x10, 8), (unique, 0x100008a2, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002230, 8) , (unique, 0x10002238, 8) , (unique, 0x10002240, 8)]
[(unique, 0x100022b8, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100025f8, 8) , (unique, 0x10002270, 8) , (unique, 0x10002278, 8)]
[(unique, 0x10002428, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002600, 8) , (unique, 0x100023e0, 8) , (unique, 0x100023e8, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100025f8, 8) , (unique, 0x10002270, 8) , (unique, 0x10002278, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002600, 8) , (unique, 0x100023e0, 8) , (unique, 0x100023e8, 8)]
[(unique, 0x10002310, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002480, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10002368, 8) COPY (register, 0x30, 8)]
[(unique, 0x100024e0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b53, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2905df, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x290b49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b3f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x10000402, 8) , (unique, 0x1000279e, 8) , (const, 0x1, 8), (unique, 0x1000279e, 8) CAST (register, 0x10, 8), (unique, 0x10000402, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x8d0, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100027ca, 8), (unique, 0x100027ca, 8) INT_ADD (unique, 0x100027c2, 8) , (register, 0x8, 8), (unique, 0x100027c2, 8) CAST (unique, 0x100003c2, 8), (unique, 0x100003c2, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100027be, 4), (unique, 0x100027be, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003ba, 8) , (unique, 0x100027b6, 8) , (const, 0x4, 8), (unique, 0x100027b6, 8) CAST (register, 0x10, 8), (unique, 0x100003ba, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x100007ea, 8) , (unique, 0x100027ae, 8) , (const, 0x1, 8), (unique, 0x100027ae, 8) CAST (register, 0x10, 8), (unique, 0x100007ea, 8) PTRSUB (unique, 0x100007e2, 8) , (const, 0x0, 8), (unique, 0x100007e2, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x30, 8) PTRADD (unique, 0x100007d2, 8) , (unique, 0x100027a6, 8) , (const, 0x1, 8), (unique, 0x100027a6, 8) CAST (register, 0x10, 8), (unique, 0x100007d2, 8) PTRSUB (unique, 0x100007ca, 8) , (const, 0x0, 8), (unique, 0x100007ca, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(unique, 0x10002250, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2900f7, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x81, 8)]
[ ---  CBRANCH (ram, 0x290430, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x201, 8)]
[(unique, 0x10002248, 8) COPY (register, 0x10, 8)]
[(unique, 0x100024a8, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290228, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x101, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff00, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100027d2, 8), (unique, 0x100027d2, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10002360, 8) COPY (register, 0x30, 8)]
[(unique, 0x100024d8, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100027da, 8), (unique, 0x100027da, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(unique, 0x10002380, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002500, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b53, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100027e2, 8), (unique, 0x100027e2, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(unique, 0x100023a0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002528, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100027ea, 8), (unique, 0x100027ea, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100023c0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002550, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b3f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100027f2, 8), (unique, 0x100027f2, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[(unique, 0x10002570, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b35, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100027fa, 8), (unique, 0x100027fa, 8) INT_ADD (register, 0x30, 8) , (const, 0x70, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[(unique, 0x10002588, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b25, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002802, 8), (unique, 0x10002802, 8) INT_ADD (register, 0x30, 8) , (const, 0x80, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b15, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000280a, 8), (unique, 0x1000280a, 8) INT_ADD (register, 0x30, 8) , (const, 0x90, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002812, 8), (unique, 0x10002812, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290b05, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000281a, 8), (unique, 0x1000281a, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002822, 8), (unique, 0x10002822, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290af5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000282a, 8), (unique, 0x1000282a, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002832, 8), (unique, 0x10002832, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290ae2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000283a, 8), (unique, 0x1000283a, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002842, 8), (unique, 0x10002842, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290acf, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000284a, 8), (unique, 0x1000284a, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002852, 8), (unique, 0x10002852, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290abc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000285a, 8), (unique, 0x1000285a, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002862, 8), (unique, 0x10002862, 8) INT_ADD (register, 0x30, 8) , (const, 0xf0, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290aa9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000286a, 8), (unique, 0x1000286a, 8) INT_ADD (register, 0x30, 8) , (const, 0xf0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002872, 8), (unique, 0x10002872, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000287a, 8), (unique, 0x1000287a, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290a96, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000287a, 8), (unique, 0x1000287a, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002882, 8), (unique, 0x10002882, 8) INT_ADD (register, 0x30, 8) , (const, 0x110, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290111, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(unique, 0x10002260, 8) COPY (register, 0x10, 8)]
[(unique, 0x10002348, 8) COPY (register, 0x30, 8)]
[(unique, 0x100024c0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290045, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29040c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000288a, 8), (unique, 0x1000288a, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000288a, 8), (unique, 0x1000288a, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffee0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002892, 8), (unique, 0x10002892, 8) INT_ADD (register, 0x30, 8) , (const, 0x130, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x5ef, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100028be, 8), (unique, 0x100028be, 8) INT_ADD (unique, 0x100028b6, 8) , (register, 0x8, 8), (unique, 0x100028b6, 8) CAST (unique, 0x100003b2, 8), (unique, 0x100003b2, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100028b2, 4), (unique, 0x100028b2, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100003aa, 8) , (unique, 0x100028aa, 8) , (const, 0x4, 8), (unique, 0x100028aa, 8) CAST (register, 0x10, 8), (unique, 0x100003aa, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x10000662, 8) , (unique, 0x100028a2, 8) , (const, 0x1, 8), (unique, 0x100028a2, 8) CAST (register, 0x10, 8), (unique, 0x10000662, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (unique, 0x10000652, 8) , (unique, 0x1000289a, 8) , (const, 0x1, 8), (unique, 0x1000289a, 8) CAST (register, 0x10, 8), (unique, 0x10000652, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100028c6, 8), (unique, 0x100028c6, 8) INT_ADD (register, 0x30, 8) , (const, 0x110, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002248, 8) , (register, 0x10, 8)]
[(unique, 0x10002298, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10002408, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024a8, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024a8, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10002358, 8) COPY (register, 0x30, 8)]
[(unique, 0x100024d0, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(unique, 0x10002378, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x290b53, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(unique, 0x10002398, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x290b49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100023b8, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x290b3f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b35, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024d0, 8) , (unique, 0x10002570, 8) , (unique, 0x100024e8, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b25, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[(unique, 0x10002258, 8) COPY (register, 0x10, 8)]
[(unique, 0x10002340, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[(unique, 0x100024b8, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290045, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10002250, 8) , (unique, 0x10002258, 8) , (unique, 0x10002260, 8)]
[(unique, 0x10002288, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100025f8, 8) , (unique, 0x10002340, 8) , (unique, 0x10002348, 8)]
[(unique, 0x100023f8, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002600, 8) , (unique, 0x100024b8, 8) , (unique, 0x100024c0, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100025f8, 8) , (unique, 0x10002340, 8) , (unique, 0x10002348, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002600, 8) , (unique, 0x100024b8, 8) , (unique, 0x100024c0, 8)]
[(unique, 0x100022e0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002450, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10002350, 8) COPY (register, 0x30, 8)]
[(unique, 0x100024c8, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b53, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024c8, 8) , (unique, 0x100024d0, 8) , (unique, 0x10002500, 8) , (unique, 0x100024e0, 8) , (unique, 0x100024e8, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002350, 8) , (unique, 0x10002378, 8) , (unique, 0x10002380, 8) , (unique, 0x10002368, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x2900d7, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x290b49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024c8, 8) , (unique, 0x100024d0, 8) , (unique, 0x10002528, 8) , (unique, 0x100024e0, 8) , (unique, 0x100024e8, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002350, 8) , (unique, 0x10002398, 8) , (unique, 0x100023a0, 8) , (unique, 0x10002368, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b3f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x100003fa, 8) , (unique, 0x100028ce, 8) , (const, 0x1, 8), (unique, 0x100028ce, 8) CAST (register, 0x10, 8), (unique, 0x100003fa, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffa0, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x163, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100028fa, 8), (unique, 0x100028fa, 8) INT_ADD (unique, 0x100028f2, 8) , (register, 0x8, 8), (unique, 0x100028f2, 8) CAST (unique, 0x10000392, 8), (unique, 0x10000392, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100028ee, 4), (unique, 0x100028ee, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000038a, 8) , (unique, 0x100028e6, 8) , (const, 0x4, 8), (unique, 0x100028e6, 8) CAST (register, 0x10, 8), (unique, 0x1000038a, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x100004e2, 8) , (unique, 0x100028de, 8) , (const, 0x1, 8), (unique, 0x100028de, 8) CAST (register, 0x10, 8), (unique, 0x100004e2, 8) PTRSUB (unique, 0x100004da, 8) , (const, 0x0, 8), (unique, 0x100004da, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x30, 8) PTRADD (unique, 0x100004ca, 8) , (unique, 0x100028d6, 8) , (const, 0x1, 8), (unique, 0x100028d6, 8) CAST (register, 0x10, 8), (unique, 0x100004ca, 8) PTRSUB (unique, 0x100004c2, 8) , (const, 0x0, 8), (unique, 0x100004c2, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024c8, 8) , (unique, 0x100024d0, 8) , (unique, 0x10002550, 8) , (unique, 0x100024e0, 8) , (unique, 0x100024e8, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002350, 8) , (unique, 0x100023b8, 8) , (unique, 0x100023c0, 8) , (unique, 0x10002368, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[ ---  CBRANCH (ram, 0x290210, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[(unique, 0x100022a0, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002410, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b6d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(unique, 0x100022f8, 8) COPY (register, 0x30, 8)]
[(unique, 0x10002468, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x290b65, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x100003ea, 8) , (unique, 0x10002902, 8) , (const, 0x1, 8), (unique, 0x10002902, 8) CAST (register, 0x10, 8), (unique, 0x100003ea, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff60, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x424, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000292e, 8), (unique, 0x1000292e, 8) INT_ADD (unique, 0x10002926, 8) , (register, 0x8, 8), (unique, 0x10002926, 8) CAST (unique, 0x100003a2, 8), (unique, 0x100003a2, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10002922, 4), (unique, 0x10002922, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000039a, 8) , (unique, 0x1000291a, 8) , (const, 0x4, 8), (unique, 0x1000291a, 8) CAST (register, 0x10, 8), (unique, 0x1000039a, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcc40, 8), (register, 0x38, 8) PTRADD (unique, 0x100005aa, 8) , (unique, 0x10002912, 8) , (const, 0x1, 8), (unique, 0x10002912, 8) CAST (register, 0x10, 8), (unique, 0x100005aa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (unique, 0x1000059a, 8) , (unique, 0x1000290a, 8) , (const, 0x1, 8), (unique, 0x1000290a, 8) CAST (register, 0x10, 8), (unique, 0x1000059a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024d0, 8) , (unique, 0x10002588, 8) , (unique, 0x100024e8, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[(unique, 0x100022e8, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002350, 8) , (unique, 0x10002358, 8) , (unique, 0x10002360, 8) , (unique, 0x10002368, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10002458, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100024c8, 8) , (unique, 0x100024d0, 8) , (unique, 0x100024d8, 8) , (unique, 0x100024e0, 8) , (unique, 0x100024e8, 8) , (register, 0x38, 8)]
[(unique, 0x10002290, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100022e0, 8) , (unique, 0x100022e8, 8) , (unique, 0x10002298, 8) , (unique, 0x100022f8, 8) , (unique, 0x100025f8, 8) , (unique, 0x10002348, 8) , (unique, 0x10002310, 8) , (unique, 0x100022c0, 8) , (unique, 0x10002320, 8) , (unique, 0x100025f8, 8) , (unique, 0x10002278, 8)]
[(unique, 0x10002400, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10002450, 8) , (unique, 0x10002458, 8) , (unique, 0x10002408, 8) , (unique, 0x10002468, 8) , (unique, 0x10002600, 8) , (unique, 0x100024c0, 8) , (unique, 0x10002480, 8) , (unique, 0x10002430, 8) , (unique, 0x10002490, 8) , (unique, 0x10002600, 8) , (unique, 0x100023e8, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100023f0, 8) , (unique, 0x100023f8, 8) , (unique, 0x10002400, 8) , (unique, 0x10002408, 8) , (unique, 0x10002410, 8) , (unique, 0x10002600, 8) , (unique, 0x100024c0, 8) , (unique, 0x10002428, 8) , (unique, 0x10002430, 8) , (unique, 0x10002438, 8) , (unique, 0x10002600, 8) , (unique, 0x100023e8, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10002280, 8) , (unique, 0x10002288, 8) , (unique, 0x10002290, 8) , (unique, 0x10002298, 8) , (unique, 0x100022a0, 8) , (unique, 0x100025f8, 8) , (unique, 0x10002348, 8) , (unique, 0x100022b8, 8) , (unique, 0x100022c0, 8) , (unique, 0x100022c8, 8) , (unique, 0x100025f8, 8) , (unique, 0x10002278, 8)]
[(unique, 0x100025a0, 8) COPY (register, 0x10, 8)]
[(unique, 0x100025b8, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2904bb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (register, 0x10, 8), (register, 0x80, 8) CAST (unique, 0x10002936, 8), (unique, 0x10002936, 8) INT_ADD (register, 0x80, 8) , (ram, 0x4eb330, 8), (register, 0x80, 8) INT_RIGHT (ram, 0x4eb330, 8) , (const, 0x1, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100025c0, 8), (unique, 0x100025c0, 8) MULTIEQUAL (unique, 0x100025b0, 8) , (unique, 0x100025b8, 8)]
[ ---  CBRANCH (ram, 0x290a50, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100025b0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2904c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002946, 8), (unique, 0x10002946, 8) PTRADD (unique, 0x10000732, 8) , (unique, 0x1000293e, 8) , (const, 0x1, 8), (unique, 0x1000293e, 8) CAST (register, 0x10, 8), (unique, 0x10000732, 8) PTRSUB (unique, 0x1000072a, 8) , (const, 0x0, 8), (unique, 0x1000072a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) CAST (unique, 0x10002956, 8), (unique, 0x10002956, 8) PTRADD (unique, 0x1000074a, 8) , (unique, 0x1000294e, 8) , (const, 0x1, 8), (unique, 0x1000294e, 8) CAST (register, 0x10, 8), (unique, 0x1000074a, 8) PTRSUB (unique, 0x10000742, 8) , (const, 0x0, 8), (unique, 0x10000742, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100025a8, 8), (unique, 0x100025a8, 8) MULTIEQUAL (unique, 0x10002598, 8) , (unique, 0x100025a0, 8)]
[ ---  CBRANCH (ram, 0x290a50, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x1280, 16) MULTIEQUAL (register, 0x1280, 16) , (register, 0x1280, 16) , (register, 0x1280, 16) , (register, 0x1280, 16)]
[(register, 0x1260, 16) MULTIEQUAL (register, 0x1260, 16) , (register, 0x1260, 16) , (register, 0x1260, 16) , (register, 0x1260, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x290b75, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) MULTIEQUAL (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b75, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1260, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290b75, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1280, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x290b75, 1)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x10002598, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x290450, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10002966, 8), (unique, 0x10002966, 8) PTRADD (unique, 0x100006c2, 8) , (unique, 0x1000295e, 8) , (const, 0x1, 8), (unique, 0x1000295e, 8) CAST (register, 0x10, 8), (unique, 0x100006c2, 8) PTRSUB (unique, 0x100006ba, 8) , (const, 0x0, 8), (unique, 0x100006ba, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) CAST (unique, 0x10002976, 8), (unique, 0x10002976, 8) PTRADD (unique, 0x100006da, 8) , (unique, 0x1000296e, 8) , (const, 0x1, 8), (unique, 0x1000296e, 8) CAST (register, 0x10, 8), (unique, 0x100006da, 8) PTRSUB (unique, 0x100006d2, 8) , (const, 0x0, 8), (unique, 0x100006d2, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(register, 0x10, 1) COPY (const, 0xc1, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002986, 8), (unique, 0x10002986, 8) PTRADD (unique, 0x10002032, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10002032, 8) PTRSUB (unique, 0x1000202a, 8) , (const, 0x0, 8), (unique, 0x1000202a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000297e, 8), (unique, 0x1000297e, 8) PTRADD (unique, 0x10002012, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10002012, 8) PTRSUB (unique, 0x1000200a, 8) , (const, 0x0, 8), (unique, 0x1000200a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc2, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002996, 8), (unique, 0x10002996, 8) PTRADD (unique, 0x10001ef2, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001ef2, 8) PTRSUB (unique, 0x10001eea, 8) , (const, 0x0, 8), (unique, 0x10001eea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000298e, 8), (unique, 0x1000298e, 8) PTRADD (unique, 0x10001ed2, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001ed2, 8) PTRSUB (unique, 0x10001eca, 8) , (const, 0x0, 8), (unique, 0x10001eca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc3, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029a6, 8), (unique, 0x100029a6, 8) PTRADD (unique, 0x10001db2, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001db2, 8) PTRSUB (unique, 0x10001daa, 8) , (const, 0x0, 8), (unique, 0x10001daa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000299e, 8), (unique, 0x1000299e, 8) PTRADD (unique, 0x10001d92, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001d92, 8) PTRSUB (unique, 0x10001d8a, 8) , (const, 0x0, 8), (unique, 0x10001d8a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc4, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029b6, 8), (unique, 0x100029b6, 8) PTRADD (unique, 0x10001c72, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001c72, 8) PTRSUB (unique, 0x10001c6a, 8) , (const, 0x0, 8), (unique, 0x10001c6a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029ae, 8), (unique, 0x100029ae, 8) PTRADD (unique, 0x10001c52, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001c52, 8) PTRSUB (unique, 0x10001c4a, 8) , (const, 0x0, 8), (unique, 0x10001c4a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc5, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029c6, 8), (unique, 0x100029c6, 8) PTRADD (unique, 0x10001b32, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001b32, 8) PTRSUB (unique, 0x10001b2a, 8) , (const, 0x0, 8), (unique, 0x10001b2a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029be, 8), (unique, 0x100029be, 8) PTRADD (unique, 0x10001b12, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001b12, 8) PTRSUB (unique, 0x10001b0a, 8) , (const, 0x0, 8), (unique, 0x10001b0a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc6, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029d6, 8), (unique, 0x100029d6, 8) PTRADD (unique, 0x100019f2, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x100019f2, 8) PTRSUB (unique, 0x100019ea, 8) , (const, 0x0, 8), (unique, 0x100019ea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029ce, 8), (unique, 0x100029ce, 8) PTRADD (unique, 0x100019d2, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x100019d2, 8) PTRSUB (unique, 0x100019ca, 8) , (const, 0x0, 8), (unique, 0x100019ca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc7, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029e6, 8), (unique, 0x100029e6, 8) PTRADD (unique, 0x100018b2, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x100018b2, 8) PTRSUB (unique, 0x100018aa, 8) , (const, 0x0, 8), (unique, 0x100018aa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029de, 8), (unique, 0x100029de, 8) PTRADD (unique, 0x10001892, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10001892, 8) PTRSUB (unique, 0x1000188a, 8) , (const, 0x0, 8), (unique, 0x1000188a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc8, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029f6, 8), (unique, 0x100029f6, 8) PTRADD (unique, 0x100017b2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100017b2, 8) PTRSUB (unique, 0x100017aa, 8) , (const, 0x0, 8), (unique, 0x100017aa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029ee, 8), (unique, 0x100029ee, 8) PTRADD (unique, 0x10001792, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001792, 8) PTRSUB (unique, 0x1000178a, 8) , (const, 0x0, 8), (unique, 0x1000178a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc9, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a06, 8), (unique, 0x10002a06, 8) PTRADD (unique, 0x100016b2, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x100016b2, 8) PTRSUB (unique, 0x100016aa, 8) , (const, 0x0, 8), (unique, 0x100016aa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100029fe, 8), (unique, 0x100029fe, 8) PTRADD (unique, 0x10001692, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x10001692, 8) PTRSUB (unique, 0x1000168a, 8) , (const, 0x0, 8), (unique, 0x1000168a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xca, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a16, 8), (unique, 0x10002a16, 8) PTRADD (unique, 0x100015b2, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x100015b2, 8) PTRSUB (unique, 0x100015aa, 8) , (const, 0x0, 8), (unique, 0x100015aa, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a0e, 8), (unique, 0x10002a0e, 8) PTRADD (unique, 0x10001592, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001592, 8) PTRSUB (unique, 0x1000158a, 8) , (const, 0x0, 8), (unique, 0x1000158a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xcb, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a26, 8), (unique, 0x10002a26, 8) PTRADD (unique, 0x100014b2, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x100014b2, 8) PTRSUB (unique, 0x100014aa, 8) , (const, 0x0, 8), (unique, 0x100014aa, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a1e, 8), (unique, 0x10002a1e, 8) PTRADD (unique, 0x10001492, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10001492, 8) PTRSUB (unique, 0x1000148a, 8) , (const, 0x0, 8), (unique, 0x1000148a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xcc, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a36, 8), (unique, 0x10002a36, 8) PTRADD (unique, 0x100013b2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100013b2, 8) PTRSUB (unique, 0x100013aa, 8) , (const, 0x0, 8), (unique, 0x100013aa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a2e, 8), (unique, 0x10002a2e, 8) PTRADD (unique, 0x10001392, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001392, 8) PTRSUB (unique, 0x1000138a, 8) , (const, 0x0, 8), (unique, 0x1000138a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xcd, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a46, 8), (unique, 0x10002a46, 8) PTRADD (unique, 0x100010f2, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x100010f2, 8) PTRSUB (unique, 0x100010ea, 8) , (const, 0x0, 8), (unique, 0x100010ea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a3e, 8), (unique, 0x10002a3e, 8) PTRADD (unique, 0x100010d2, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x100010d2, 8) PTRSUB (unique, 0x100010ca, 8) , (const, 0x0, 8), (unique, 0x100010ca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xce, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a56, 8), (unique, 0x10002a56, 8) PTRADD (unique, 0x10000eb2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000eb2, 8) PTRSUB (unique, 0x10000eaa, 8) , (const, 0x0, 8), (unique, 0x10000eaa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a4e, 8), (unique, 0x10002a4e, 8) PTRADD (unique, 0x10000e92, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000e92, 8) PTRSUB (unique, 0x10000e8a, 8) , (const, 0x0, 8), (unique, 0x10000e8a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xcf, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a66, 8), (unique, 0x10002a66, 8) PTRADD (unique, 0x10000c72, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000c72, 8) PTRSUB (unique, 0x10000c6a, 8) , (const, 0x0, 8), (unique, 0x10000c6a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a5e, 8), (unique, 0x10002a5e, 8) PTRADD (unique, 0x10000c52, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000c52, 8) PTRSUB (unique, 0x10000c4a, 8) , (const, 0x0, 8), (unique, 0x10000c4a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd0, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd1, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a76, 8), (unique, 0x10002a76, 8) PTRADD (unique, 0x10002072, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10002072, 8) PTRSUB (unique, 0x1000206a, 8) , (const, 0x0, 8), (unique, 0x1000206a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a6e, 8), (unique, 0x10002a6e, 8) PTRADD (unique, 0x10002052, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10002052, 8) PTRSUB (unique, 0x1000204a, 8) , (const, 0x0, 8), (unique, 0x1000204a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd2, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a86, 8), (unique, 0x10002a86, 8) PTRADD (unique, 0x10001f32, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001f32, 8) PTRSUB (unique, 0x10001f2a, 8) , (const, 0x0, 8), (unique, 0x10001f2a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a7e, 8), (unique, 0x10002a7e, 8) PTRADD (unique, 0x10001f12, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001f12, 8) PTRSUB (unique, 0x10001f0a, 8) , (const, 0x0, 8), (unique, 0x10001f0a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd3, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a96, 8), (unique, 0x10002a96, 8) PTRADD (unique, 0x10001df2, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001df2, 8) PTRSUB (unique, 0x10001dea, 8) , (const, 0x0, 8), (unique, 0x10001dea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a8e, 8), (unique, 0x10002a8e, 8) PTRADD (unique, 0x10001dd2, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001dd2, 8) PTRSUB (unique, 0x10001dca, 8) , (const, 0x0, 8), (unique, 0x10001dca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd4, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002aa6, 8), (unique, 0x10002aa6, 8) PTRADD (unique, 0x10001cb2, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001cb2, 8) PTRSUB (unique, 0x10001caa, 8) , (const, 0x0, 8), (unique, 0x10001caa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002a9e, 8), (unique, 0x10002a9e, 8) PTRADD (unique, 0x10001c92, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001c92, 8) PTRSUB (unique, 0x10001c8a, 8) , (const, 0x0, 8), (unique, 0x10001c8a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd5, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ab6, 8), (unique, 0x10002ab6, 8) PTRADD (unique, 0x10001b72, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001b72, 8) PTRSUB (unique, 0x10001b6a, 8) , (const, 0x0, 8), (unique, 0x10001b6a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002aae, 8), (unique, 0x10002aae, 8) PTRADD (unique, 0x10001b52, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001b52, 8) PTRSUB (unique, 0x10001b4a, 8) , (const, 0x0, 8), (unique, 0x10001b4a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd6, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ac6, 8), (unique, 0x10002ac6, 8) PTRADD (unique, 0x10001a32, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10001a32, 8) PTRSUB (unique, 0x10001a2a, 8) , (const, 0x0, 8), (unique, 0x10001a2a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002abe, 8), (unique, 0x10002abe, 8) PTRADD (unique, 0x10001a12, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10001a12, 8) PTRSUB (unique, 0x10001a0a, 8) , (const, 0x0, 8), (unique, 0x10001a0a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd7, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ad6, 8), (unique, 0x10002ad6, 8) PTRADD (unique, 0x100018f2, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x100018f2, 8) PTRSUB (unique, 0x100018ea, 8) , (const, 0x0, 8), (unique, 0x100018ea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ace, 8), (unique, 0x10002ace, 8) PTRADD (unique, 0x100018d2, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x100018d2, 8) PTRSUB (unique, 0x100018ca, 8) , (const, 0x0, 8), (unique, 0x100018ca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd8, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ae6, 8), (unique, 0x10002ae6, 8) PTRADD (unique, 0x100017f2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100017f2, 8) PTRSUB (unique, 0x100017ea, 8) , (const, 0x0, 8), (unique, 0x100017ea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ade, 8), (unique, 0x10002ade, 8) PTRADD (unique, 0x100017d2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100017d2, 8) PTRSUB (unique, 0x100017ca, 8) , (const, 0x0, 8), (unique, 0x100017ca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd9, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002af6, 8), (unique, 0x10002af6, 8) PTRADD (unique, 0x100016f2, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x100016f2, 8) PTRSUB (unique, 0x100016ea, 8) , (const, 0x0, 8), (unique, 0x100016ea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002aee, 8), (unique, 0x10002aee, 8) PTRADD (unique, 0x100016d2, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x100016d2, 8) PTRSUB (unique, 0x100016ca, 8) , (const, 0x0, 8), (unique, 0x100016ca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xda, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b06, 8), (unique, 0x10002b06, 8) PTRADD (unique, 0x100015f2, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x100015f2, 8) PTRSUB (unique, 0x100015ea, 8) , (const, 0x0, 8), (unique, 0x100015ea, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002afe, 8), (unique, 0x10002afe, 8) PTRADD (unique, 0x100015d2, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x100015d2, 8) PTRSUB (unique, 0x100015ca, 8) , (const, 0x0, 8), (unique, 0x100015ca, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xdb, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b16, 8), (unique, 0x10002b16, 8) PTRADD (unique, 0x100014f2, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x100014f2, 8) PTRSUB (unique, 0x100014ea, 8) , (const, 0x0, 8), (unique, 0x100014ea, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b0e, 8), (unique, 0x10002b0e, 8) PTRADD (unique, 0x100014d2, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x100014d2, 8) PTRSUB (unique, 0x100014ca, 8) , (const, 0x0, 8), (unique, 0x100014ca, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xdc, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b26, 8), (unique, 0x10002b26, 8) PTRADD (unique, 0x100013f2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100013f2, 8) PTRSUB (unique, 0x100013ea, 8) , (const, 0x0, 8), (unique, 0x100013ea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b1e, 8), (unique, 0x10002b1e, 8) PTRADD (unique, 0x100013d2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100013d2, 8) PTRSUB (unique, 0x100013ca, 8) , (const, 0x0, 8), (unique, 0x100013ca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xdd, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b36, 8), (unique, 0x10002b36, 8) PTRADD (unique, 0x10001132, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001132, 8) PTRSUB (unique, 0x1000112a, 8) , (const, 0x0, 8), (unique, 0x1000112a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b2e, 8), (unique, 0x10002b2e, 8) PTRADD (unique, 0x10001112, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001112, 8) PTRSUB (unique, 0x1000110a, 8) , (const, 0x0, 8), (unique, 0x1000110a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xde, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b46, 8), (unique, 0x10002b46, 8) PTRADD (unique, 0x10000ef2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000ef2, 8) PTRSUB (unique, 0x10000eea, 8) , (const, 0x0, 8), (unique, 0x10000eea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b3e, 8), (unique, 0x10002b3e, 8) PTRADD (unique, 0x10000ed2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000ed2, 8) PTRSUB (unique, 0x10000eca, 8) , (const, 0x0, 8), (unique, 0x10000eca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xdf, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b56, 8), (unique, 0x10002b56, 8) PTRADD (unique, 0x10000cb2, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000cb2, 8) PTRSUB (unique, 0x10000caa, 8) , (const, 0x0, 8), (unique, 0x10000caa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b4e, 8), (unique, 0x10002b4e, 8) PTRADD (unique, 0x10000c92, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000c92, 8) PTRSUB (unique, 0x10000c8a, 8) , (const, 0x0, 8), (unique, 0x10000c8a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xe0, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b66, 8), (unique, 0x10002b66, 8) CAST (unique, 0x1000217a, 8), (unique, 0x1000217a, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b5e, 8), (unique, 0x10002b5e, 8) CAST (unique, 0x1000216a, 8), (unique, 0x1000216a, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b76, 8), (unique, 0x10002b76, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100021b2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100021b2, 8) PTRSUB (unique, 0x100021aa, 8) , (const, 0x0, 8), (unique, 0x100021aa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b6e, 8), (unique, 0x10002b6e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10002192, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10002192, 8) PTRSUB (unique, 0x1000218a, 8) , (const, 0x0, 8), (unique, 0x1000218a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe1, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b86, 8), (unique, 0x10002b86, 8) PTRADD (unique, 0x100020b2, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100020b2, 8) PTRSUB (unique, 0x100020aa, 8) , (const, 0x0, 8), (unique, 0x100020aa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002b7e, 8), (unique, 0x10002b7e, 8) PTRADD (unique, 0x10002092, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10002092, 8) PTRSUB (unique, 0x1000208a, 8) , (const, 0x0, 8), (unique, 0x1000208a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b96, 8), (unique, 0x10002b96, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100020f2, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100020f2, 8) PTRSUB (unique, 0x100020ea, 8) , (const, 0x0, 8), (unique, 0x100020ea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b8e, 8), (unique, 0x10002b8e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100020d2, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x100020d2, 8) PTRSUB (unique, 0x100020ca, 8) , (const, 0x0, 8), (unique, 0x100020ca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002ba6, 8), (unique, 0x10002ba6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10002132, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10002132, 8) PTRSUB (unique, 0x1000212a, 8) , (const, 0x0, 8), (unique, 0x1000212a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002b9e, 8), (unique, 0x10002b9e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10002112, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10002112, 8) PTRSUB (unique, 0x1000210a, 8) , (const, 0x0, 8), (unique, 0x1000210a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe2, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002bb6, 8), (unique, 0x10002bb6, 8) PTRADD (unique, 0x10001f72, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001f72, 8) PTRSUB (unique, 0x10001f6a, 8) , (const, 0x0, 8), (unique, 0x10001f6a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002bae, 8), (unique, 0x10002bae, 8) PTRADD (unique, 0x10001f52, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001f52, 8) PTRSUB (unique, 0x10001f4a, 8) , (const, 0x0, 8), (unique, 0x10001f4a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bc6, 8), (unique, 0x10002bc6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001fb2, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001fb2, 8) PTRSUB (unique, 0x10001faa, 8) , (const, 0x0, 8), (unique, 0x10001faa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bbe, 8), (unique, 0x10002bbe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001f92, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10001f92, 8) PTRSUB (unique, 0x10001f8a, 8) , (const, 0x0, 8), (unique, 0x10001f8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bd6, 8), (unique, 0x10002bd6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001ff2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001ff2, 8) PTRSUB (unique, 0x10001fea, 8) , (const, 0x0, 8), (unique, 0x10001fea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bce, 8), (unique, 0x10002bce, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001fd2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001fd2, 8) PTRSUB (unique, 0x10001fca, 8) , (const, 0x0, 8), (unique, 0x10001fca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe3, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002be6, 8), (unique, 0x10002be6, 8) PTRADD (unique, 0x10001e32, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001e32, 8) PTRSUB (unique, 0x10001e2a, 8) , (const, 0x0, 8), (unique, 0x10001e2a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002bde, 8), (unique, 0x10002bde, 8) PTRADD (unique, 0x10001e12, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001e12, 8) PTRSUB (unique, 0x10001e0a, 8) , (const, 0x0, 8), (unique, 0x10001e0a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bf6, 8), (unique, 0x10002bf6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001e72, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001e72, 8) PTRSUB (unique, 0x10001e6a, 8) , (const, 0x0, 8), (unique, 0x10001e6a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bee, 8), (unique, 0x10002bee, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001e52, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10001e52, 8) PTRSUB (unique, 0x10001e4a, 8) , (const, 0x0, 8), (unique, 0x10001e4a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c06, 8), (unique, 0x10002c06, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001eb2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001eb2, 8) PTRSUB (unique, 0x10001eaa, 8) , (const, 0x0, 8), (unique, 0x10001eaa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002bfe, 8), (unique, 0x10002bfe, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001e92, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001e92, 8) PTRSUB (unique, 0x10001e8a, 8) , (const, 0x0, 8), (unique, 0x10001e8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe4, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c16, 8), (unique, 0x10002c16, 8) PTRADD (unique, 0x10001cf2, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001cf2, 8) PTRSUB (unique, 0x10001cea, 8) , (const, 0x0, 8), (unique, 0x10001cea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c0e, 8), (unique, 0x10002c0e, 8) PTRADD (unique, 0x10001cd2, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001cd2, 8) PTRSUB (unique, 0x10001cca, 8) , (const, 0x0, 8), (unique, 0x10001cca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c26, 8), (unique, 0x10002c26, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001d32, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001d32, 8) PTRSUB (unique, 0x10001d2a, 8) , (const, 0x0, 8), (unique, 0x10001d2a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c1e, 8), (unique, 0x10002c1e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001d12, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10001d12, 8) PTRSUB (unique, 0x10001d0a, 8) , (const, 0x0, 8), (unique, 0x10001d0a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c2e, 8), (unique, 0x10002c2e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001d52, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001d52, 8) PTRSUB (unique, 0x10001d4a, 8) , (const, 0x0, 8), (unique, 0x10001d4a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c36, 8), (unique, 0x10002c36, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001d72, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001d72, 8) PTRSUB (unique, 0x10001d6a, 8) , (const, 0x0, 8), (unique, 0x10001d6a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c36, 8), (unique, 0x10002c36, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001d72, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001d72, 8) PTRSUB (unique, 0x10001d6a, 8) , (const, 0x0, 8), (unique, 0x10001d6a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c2e, 8), (unique, 0x10002c2e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001d52, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001d52, 8) PTRSUB (unique, 0x10001d4a, 8) , (const, 0x0, 8), (unique, 0x10001d4a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe5, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c46, 8), (unique, 0x10002c46, 8) PTRADD (unique, 0x10001bb2, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001bb2, 8) PTRSUB (unique, 0x10001baa, 8) , (const, 0x0, 8), (unique, 0x10001baa, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c3e, 8), (unique, 0x10002c3e, 8) PTRADD (unique, 0x10001b92, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001b92, 8) PTRSUB (unique, 0x10001b8a, 8) , (const, 0x0, 8), (unique, 0x10001b8a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c56, 8), (unique, 0x10002c56, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001bf2, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001bf2, 8) PTRSUB (unique, 0x10001bea, 8) , (const, 0x0, 8), (unique, 0x10001bea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c4e, 8), (unique, 0x10002c4e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001bd2, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001bd2, 8) PTRSUB (unique, 0x10001bca, 8) , (const, 0x0, 8), (unique, 0x10001bca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c5e, 8), (unique, 0x10002c5e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001c12, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001c12, 8) PTRSUB (unique, 0x10001c0a, 8) , (const, 0x0, 8), (unique, 0x10001c0a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c66, 8), (unique, 0x10002c66, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001c32, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001c32, 8) PTRSUB (unique, 0x10001c2a, 8) , (const, 0x0, 8), (unique, 0x10001c2a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c66, 8), (unique, 0x10002c66, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001c32, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001c32, 8) PTRSUB (unique, 0x10001c2a, 8) , (const, 0x0, 8), (unique, 0x10001c2a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002c5e, 8), (unique, 0x10002c5e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001c12, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001c12, 8) PTRSUB (unique, 0x10001c0a, 8) , (const, 0x0, 8), (unique, 0x10001c0a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe6, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c76, 8), (unique, 0x10002c76, 8) PTRADD (unique, 0x10001a72, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10001a72, 8) PTRSUB (unique, 0x10001a6a, 8) , (const, 0x0, 8), (unique, 0x10001a6a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c6e, 8), (unique, 0x10002c6e, 8) PTRADD (unique, 0x10001a52, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10001a52, 8) PTRSUB (unique, 0x10001a4a, 8) , (const, 0x0, 8), (unique, 0x10001a4a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c86, 8), (unique, 0x10002c86, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001ab2, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10001ab2, 8) PTRSUB (unique, 0x10001aaa, 8) , (const, 0x0, 8), (unique, 0x10001aaa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002c7e, 8), (unique, 0x10002c7e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001a92, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10001a92, 8) PTRSUB (unique, 0x10001a8a, 8) , (const, 0x0, 8), (unique, 0x10001a8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002c8e, 8), (unique, 0x10002c8e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001ad2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10001ad2, 8) PTRSUB (unique, 0x10001aca, 8) , (const, 0x0, 8), (unique, 0x10001aca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002c96, 8), (unique, 0x10002c96, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001af2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10001af2, 8) PTRSUB (unique, 0x10001aea, 8) , (const, 0x0, 8), (unique, 0x10001aea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x2915da, 1)]
[(register, 0x10, 1) COPY (const, 0xe7, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ca6, 8), (unique, 0x10002ca6, 8) PTRADD (unique, 0x10001932, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10001932, 8) PTRSUB (unique, 0x1000192a, 8) , (const, 0x0, 8), (unique, 0x1000192a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002c9e, 8), (unique, 0x10002c9e, 8) PTRADD (unique, 0x10001912, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10001912, 8) PTRSUB (unique, 0x1000190a, 8) , (const, 0x0, 8), (unique, 0x1000190a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002cb6, 8), (unique, 0x10002cb6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001972, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10001972, 8) PTRSUB (unique, 0x1000196a, 8) , (const, 0x0, 8), (unique, 0x1000196a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002cae, 8), (unique, 0x10002cae, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001952, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10001952, 8) PTRSUB (unique, 0x1000194a, 8) , (const, 0x0, 8), (unique, 0x1000194a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0x10002cbf, 1), (unique, 0x10002cbf, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10002cbe, 1), (unique, 0x10002cbe, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100019b2, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x100019b2, 8) PTRSUB (unique, 0x100019aa, 8) , (const, 0x0, 8), (unique, 0x100019aa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001992, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10001992, 8) PTRSUB (unique, 0x1000198a, 8) , (const, 0x0, 8), (unique, 0x1000198a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x10, 1) COPY (const, 0xe8, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002cc8, 8), (unique, 0x10002cc8, 8) PTRADD (unique, 0x10001832, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001832, 8) PTRSUB (unique, 0x1000182a, 8) , (const, 0x0, 8), (unique, 0x1000182a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002cc0, 8), (unique, 0x10002cc0, 8) PTRADD (unique, 0x10001812, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001812, 8) PTRSUB (unique, 0x1000180a, 8) , (const, 0x0, 8), (unique, 0x1000180a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002cd8, 8), (unique, 0x10002cd8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001872, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001872, 8) PTRSUB (unique, 0x1000186a, 8) , (const, 0x0, 8), (unique, 0x1000186a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002cd0, 8), (unique, 0x10002cd0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001852, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001852, 8) PTRSUB (unique, 0x1000184a, 8) , (const, 0x0, 8), (unique, 0x1000184a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe9, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ce8, 8), (unique, 0x10002ce8, 8) PTRADD (unique, 0x10001732, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x10001732, 8) PTRSUB (unique, 0x1000172a, 8) , (const, 0x0, 8), (unique, 0x1000172a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002ce0, 8), (unique, 0x10002ce0, 8) PTRADD (unique, 0x10001712, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x10001712, 8) PTRSUB (unique, 0x1000170a, 8) , (const, 0x0, 8), (unique, 0x1000170a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002cf8, 8), (unique, 0x10002cf8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001772, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001772, 8) PTRSUB (unique, 0x1000176a, 8) , (const, 0x0, 8), (unique, 0x1000176a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002cf0, 8), (unique, 0x10002cf0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001752, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001752, 8) PTRSUB (unique, 0x1000174a, 8) , (const, 0x0, 8), (unique, 0x1000174a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xea, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002d08, 8), (unique, 0x10002d08, 8) PTRADD (unique, 0x10001632, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001632, 8) PTRSUB (unique, 0x1000162a, 8) , (const, 0x0, 8), (unique, 0x1000162a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002d00, 8), (unique, 0x10002d00, 8) PTRADD (unique, 0x10001612, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001612, 8) PTRSUB (unique, 0x1000160a, 8) , (const, 0x0, 8), (unique, 0x1000160a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d18, 8), (unique, 0x10002d18, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001672, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001672, 8) PTRSUB (unique, 0x1000166a, 8) , (const, 0x0, 8), (unique, 0x1000166a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d10, 8), (unique, 0x10002d10, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001652, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001652, 8) PTRSUB (unique, 0x1000164a, 8) , (const, 0x0, 8), (unique, 0x1000164a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xeb, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002d28, 8), (unique, 0x10002d28, 8) PTRADD (unique, 0x10001532, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10001532, 8) PTRSUB (unique, 0x1000152a, 8) , (const, 0x0, 8), (unique, 0x1000152a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002d20, 8), (unique, 0x10002d20, 8) PTRADD (unique, 0x10001512, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10001512, 8) PTRSUB (unique, 0x1000150a, 8) , (const, 0x0, 8), (unique, 0x1000150a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d38, 8), (unique, 0x10002d38, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001572, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001572, 8) PTRSUB (unique, 0x1000156a, 8) , (const, 0x0, 8), (unique, 0x1000156a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d30, 8), (unique, 0x10002d30, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001552, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001552, 8) PTRSUB (unique, 0x1000154a, 8) , (const, 0x0, 8), (unique, 0x1000154a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xec, 1)]
[ ---  CBRANCH (ram, 0x2915a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002d48, 8), (unique, 0x10002d48, 8) PTRADD (unique, 0x10001432, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001432, 8) PTRSUB (unique, 0x1000142a, 8) , (const, 0x0, 8), (unique, 0x1000142a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10002d40, 8), (unique, 0x10002d40, 8) PTRADD (unique, 0x10001412, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001412, 8) PTRSUB (unique, 0x1000140a, 8) , (const, 0x0, 8), (unique, 0x1000140a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002d50, 8), (unique, 0x10002d50, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001452, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001452, 8) PTRSUB (unique, 0x1000144a, 8) , (const, 0x0, 8), (unique, 0x1000144a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002d58, 8), (unique, 0x10002d58, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001472, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001472, 8) PTRSUB (unique, 0x1000146a, 8) , (const, 0x0, 8), (unique, 0x1000146a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002d58, 8), (unique, 0x10002d58, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001472, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001472, 8) PTRSUB (unique, 0x1000146a, 8) , (const, 0x0, 8), (unique, 0x1000146a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002d50, 8), (unique, 0x10002d50, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001452, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10001452, 8) PTRSUB (unique, 0x1000144a, 8) , (const, 0x0, 8), (unique, 0x1000144a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d68, 8), (unique, 0x10002d68, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100021d2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100021d2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d60, 8), (unique, 0x10002d60, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100021c2, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100021c2, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8), (register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d70, 8), (unique, 0x10002d70, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100021ea, 8) , (unique, 0x100021e2, 8) , (const, 0x1, 8), (unique, 0x100021ea, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x100021e2, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d78, 8), (unique, 0x10002d78, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10002202, 8) , (unique, 0x100021fa, 8) , (const, 0x1, 8), (unique, 0x10002202, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x100021fa, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d88, 8), (unique, 0x10002d88, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001172, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001172, 8) PTRSUB (unique, 0x1000116a, 8) , (const, 0x0, 8), (unique, 0x1000116a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d80, 8), (unique, 0x10002d80, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001152, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001152, 8) PTRSUB (unique, 0x1000114a, 8) , (const, 0x0, 8), (unique, 0x1000114a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d98, 8), (unique, 0x10002d98, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f32, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000f32, 8) PTRSUB (unique, 0x10000f2a, 8) , (const, 0x0, 8), (unique, 0x10000f2a, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002d90, 8), (unique, 0x10002d90, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f12, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000f12, 8) PTRSUB (unique, 0x10000f0a, 8) , (const, 0x0, 8), (unique, 0x10000f0a, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002da8, 8), (unique, 0x10002da8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cf2, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000cf2, 8) PTRSUB (unique, 0x10000cea, 8) , (const, 0x0, 8), (unique, 0x10000cea, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002da0, 8), (unique, 0x10002da0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cd2, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000cd2, 8) PTRSUB (unique, 0x10000cca, 8) , (const, 0x0, 8), (unique, 0x10000cca, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002db8, 8), (unique, 0x10002db8, 8) CAST (unique, 0x10000b7a, 8), (unique, 0x10000b7a, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002db0, 8), (unique, 0x10002db0, 8) CAST (unique, 0x10000b6a, 8), (unique, 0x10000b6a, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002dc8, 8), (unique, 0x10002dc8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001232, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10001232, 8) PTRSUB (unique, 0x1000122a, 8) , (const, 0x0, 8), (unique, 0x1000122a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002dc0, 8), (unique, 0x10002dc0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001212, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x10001212, 8) PTRSUB (unique, 0x1000120a, 8) , (const, 0x0, 8), (unique, 0x1000120a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002dd8, 8), (unique, 0x10002dd8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001272, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001272, 8) PTRSUB (unique, 0x1000126a, 8) , (const, 0x0, 8), (unique, 0x1000126a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002dd0, 8), (unique, 0x10002dd0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001252, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001252, 8) PTRSUB (unique, 0x1000124a, 8) , (const, 0x0, 8), (unique, 0x1000124a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002de8, 8), (unique, 0x10002de8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000ff2, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10000ff2, 8) PTRSUB (unique, 0x10000fea, 8) , (const, 0x0, 8), (unique, 0x10000fea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002de0, 8), (unique, 0x10002de0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000fd2, 8) , (const, 0x2, 8) , (const, 0x1, 8), (unique, 0x10000fd2, 8) PTRSUB (unique, 0x10000fca, 8) , (const, 0x0, 8), (unique, 0x10000fca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002df8, 8), (unique, 0x10002df8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001032, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001032, 8) PTRSUB (unique, 0x1000102a, 8) , (const, 0x0, 8), (unique, 0x1000102a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002df0, 8), (unique, 0x10002df0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001012, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10001012, 8) PTRSUB (unique, 0x1000100a, 8) , (const, 0x0, 8), (unique, 0x1000100a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e08, 8), (unique, 0x10002e08, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000db2, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10000db2, 8) PTRSUB (unique, 0x10000daa, 8) , (const, 0x0, 8), (unique, 0x10000daa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e00, 8), (unique, 0x10002e00, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000d92, 8) , (const, 0x3, 8) , (const, 0x1, 8), (unique, 0x10000d92, 8) PTRSUB (unique, 0x10000d8a, 8) , (const, 0x0, 8), (unique, 0x10000d8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e18, 8), (unique, 0x10002e18, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000df2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000df2, 8) PTRSUB (unique, 0x10000dea, 8) , (const, 0x0, 8), (unique, 0x10000dea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e10, 8), (unique, 0x10002e10, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000dd2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000dd2, 8) PTRSUB (unique, 0x10000dca, 8) , (const, 0x0, 8), (unique, 0x10000dca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e28, 8), (unique, 0x10002e28, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bf2, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000bf2, 8) PTRSUB (unique, 0x10000bea, 8) , (const, 0x0, 8), (unique, 0x10000bea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e20, 8), (unique, 0x10002e20, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bd2, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000bd2, 8) PTRSUB (unique, 0x10000bca, 8) , (const, 0x0, 8), (unique, 0x10000bca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e38, 8), (unique, 0x10002e38, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100011b2, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x100011b2, 8) PTRSUB (unique, 0x100011aa, 8) , (const, 0x0, 8), (unique, 0x100011aa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e30, 8), (unique, 0x10002e30, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001192, 8) , (const, 0x5, 8) , (const, 0x1, 8), (unique, 0x10001192, 8) PTRSUB (unique, 0x1000118a, 8) , (const, 0x0, 8), (unique, 0x1000118a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e40, 8), (unique, 0x10002e40, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100011d2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100011d2, 8) PTRSUB (unique, 0x100011ca, 8) , (const, 0x0, 8), (unique, 0x100011ca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e48, 8), (unique, 0x10002e48, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100011f2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100011f2, 8) PTRSUB (unique, 0x100011ea, 8) , (const, 0x0, 8), (unique, 0x100011ea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e48, 8), (unique, 0x10002e48, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100011f2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100011f2, 8) PTRSUB (unique, 0x100011ea, 8) , (const, 0x0, 8), (unique, 0x100011ea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e40, 8), (unique, 0x10002e40, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100011d2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100011d2, 8) PTRSUB (unique, 0x100011ca, 8) , (const, 0x0, 8), (unique, 0x100011ca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e58, 8), (unique, 0x10002e58, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f72, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10000f72, 8) PTRSUB (unique, 0x10000f6a, 8) , (const, 0x0, 8), (unique, 0x10000f6a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e50, 8), (unique, 0x10002e50, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f52, 8) , (const, 0x6, 8) , (const, 0x1, 8), (unique, 0x10000f52, 8) PTRSUB (unique, 0x10000f4a, 8) , (const, 0x0, 8), (unique, 0x10000f4a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002e60, 8), (unique, 0x10002e60, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f92, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000f92, 8) PTRSUB (unique, 0x10000f8a, 8) , (const, 0x0, 8), (unique, 0x10000f8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002e68, 8), (unique, 0x10002e68, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000fb2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000fb2, 8) PTRSUB (unique, 0x10000faa, 8) , (const, 0x0, 8), (unique, 0x10000faa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (unique, 0xbc00, 2) , (const, 0x0, 4), (register, 0x0, 1) SUBPIECE (unique, 0xbc00, 2) , (const, 0x0, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002e68, 8), (unique, 0x10002e68, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000fb2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000fb2, 8) PTRSUB (unique, 0x10000faa, 8) , (const, 0x0, 8), (unique, 0x10000faa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002e60, 8), (unique, 0x10002e60, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f92, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10000f92, 8) PTRSUB (unique, 0x10000f8a, 8) , (const, 0x0, 8), (unique, 0x10000f8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e78, 8), (unique, 0x10002e78, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000d32, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10000d32, 8) PTRSUB (unique, 0x10000d2a, 8) , (const, 0x0, 8), (unique, 0x10000d2a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e70, 8), (unique, 0x10002e70, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000d12, 8) , (const, 0x7, 8) , (const, 0x1, 8), (unique, 0x10000d12, 8) PTRSUB (unique, 0x10000d0a, 8) , (const, 0x0, 8), (unique, 0x10000d0a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10002e81, 1), (unique, 0x10002e81, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10002e80, 1), (unique, 0x10002e80, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000d72, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000d72, 8) PTRSUB (unique, 0x10000d6a, 8) , (const, 0x0, 8), (unique, 0x10000d6a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000d52, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000d52, 8) PTRSUB (unique, 0x10000d4a, 8) , (const, 0x0, 8), (unique, 0x10000d4a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e8a, 8), (unique, 0x10002e8a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bb2, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000bb2, 8) PTRSUB (unique, 0x10000baa, 8) , (const, 0x0, 8), (unique, 0x10000baa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10002e82, 8), (unique, 0x10002e82, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000b92, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000b92, 8) PTRSUB (unique, 0x10000b8a, 8) , (const, 0x0, 8), (unique, 0x10000b8a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x20, 4)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x20, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e92, 8), (unique, 0x10002e92, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001292, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x10001292, 8) PTRSUB (unique, 0x1000128a, 8) , (const, 0x0, 8), (unique, 0x1000128a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e9a, 8), (unique, 0x10002e9a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100012b2, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x100012b2, 8) PTRSUB (unique, 0x100012aa, 8) , (const, 0x0, 8), (unique, 0x100012aa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e9a, 8), (unique, 0x10002e9a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100012b2, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x100012b2, 8) PTRSUB (unique, 0x100012aa, 8) , (const, 0x0, 8), (unique, 0x100012aa, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002e92, 8), (unique, 0x10002e92, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001292, 8) , (const, 0x9, 8) , (const, 0x1, 8), (unique, 0x10001292, 8) PTRSUB (unique, 0x1000128a, 8) , (const, 0x0, 8), (unique, 0x1000128a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002ea2, 8), (unique, 0x10002ea2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100012d2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100012d2, 8) PTRSUB (unique, 0x100012ca, 8) , (const, 0x0, 8), (unique, 0x100012ca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eaa, 8), (unique, 0x10002eaa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100012f2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100012f2, 8) PTRSUB (unique, 0x100012ea, 8) , (const, 0x0, 8), (unique, 0x100012ea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eaa, 8), (unique, 0x10002eaa, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100012f2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100012f2, 8) PTRSUB (unique, 0x100012ea, 8) , (const, 0x0, 8), (unique, 0x100012ea, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002ea2, 8), (unique, 0x10002ea2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100012d2, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x100012d2, 8) PTRSUB (unique, 0x100012ca, 8) , (const, 0x0, 8), (unique, 0x100012ca, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eb2, 8), (unique, 0x10002eb2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001052, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001052, 8) PTRSUB (unique, 0x1000104a, 8) , (const, 0x0, 8), (unique, 0x1000104a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eba, 8), (unique, 0x10002eba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001072, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001072, 8) PTRSUB (unique, 0x1000106a, 8) , (const, 0x0, 8), (unique, 0x1000106a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eba, 8), (unique, 0x10002eba, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001072, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001072, 8) PTRSUB (unique, 0x1000106a, 8) , (const, 0x0, 8), (unique, 0x1000106a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eb2, 8), (unique, 0x10002eb2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001052, 8) , (const, 0xa, 8) , (const, 0x1, 8), (unique, 0x10001052, 8) PTRSUB (unique, 0x1000104a, 8) , (const, 0x0, 8), (unique, 0x1000104a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002ec2, 8), (unique, 0x10002ec2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000e12, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10000e12, 8) PTRSUB (unique, 0x10000e0a, 8) , (const, 0x0, 8), (unique, 0x10000e0a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eca, 8), (unique, 0x10002eca, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000e32, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10000e32, 8) PTRSUB (unique, 0x10000e2a, 8) , (const, 0x0, 8), (unique, 0x10000e2a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002eca, 8), (unique, 0x10002eca, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000e32, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10000e32, 8) PTRSUB (unique, 0x10000e2a, 8) , (const, 0x0, 8), (unique, 0x10000e2a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002ec2, 8), (unique, 0x10002ec2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000e12, 8) , (const, 0xb, 8) , (const, 0x1, 8), (unique, 0x10000e12, 8) PTRSUB (unique, 0x10000e0a, 8) , (const, 0x0, 8), (unique, 0x10000e0a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10002ed3, 1), (unique, 0x10002ed3, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10002ed2, 1), (unique, 0x10002ed2, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000e72, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000e72, 8) PTRSUB (unique, 0x10000e6a, 8) , (const, 0x0, 8), (unique, 0x10000e6a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000e52, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10000e52, 8) PTRSUB (unique, 0x10000e4a, 8) , (const, 0x0, 8), (unique, 0x10000e4a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002ed4, 8), (unique, 0x10002ed4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000c12, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c12, 8) PTRSUB (unique, 0x10000c0a, 8) , (const, 0x0, 8), (unique, 0x10000c0a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002edc, 8), (unique, 0x10002edc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000c32, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c32, 8) PTRSUB (unique, 0x10000c2a, 8) , (const, 0x0, 8), (unique, 0x10000c2a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002edc, 8), (unique, 0x10002edc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000c32, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c32, 8) PTRSUB (unique, 0x10000c2a, 8) , (const, 0x0, 8), (unique, 0x10000c2a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10002ed4, 8), (unique, 0x10002ed4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000c12, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c12, 8) PTRSUB (unique, 0x10000c0a, 8) , (const, 0x0, 8), (unique, 0x10000c0a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2915da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 2) , (register, 0x8, 2), (register, 0x8, 2) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 2) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 4) INT_AND (unique, 0x10000314, 4) , (const, 0xffff, 4), (unique, 0x10000314, 4) SUBPIECE (unique, 0x10002218, 8) , (const, 0x0, 4), (unique, 0x10002218, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x10, 4)]
[(register, 0x0, 4) INT_AND (unique, 0x1000030c, 4) , (const, 0xffff, 4), (unique, 0x1000030c, 4) SUBPIECE (unique, 0x10002220, 8) , (const, 0x0, 4), (unique, 0x10002220, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x10, 4)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002ee4, 8), (unique, 0x10002ee4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001312, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001312, 8) PTRSUB (unique, 0x1000130a, 8) , (const, 0x0, 8), (unique, 0x1000130a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002eec, 8), (unique, 0x10002eec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001332, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001332, 8) PTRSUB (unique, 0x1000132a, 8) , (const, 0x0, 8), (unique, 0x1000132a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2915da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002eec, 8), (unique, 0x10002eec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001332, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001332, 8) PTRSUB (unique, 0x1000132a, 8) , (const, 0x0, 8), (unique, 0x1000132a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002ee4, 8), (unique, 0x10002ee4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001312, 8) , (const, 0xd, 8) , (const, 0x1, 8), (unique, 0x10001312, 8) PTRSUB (unique, 0x1000130a, 8) , (const, 0x0, 8), (unique, 0x1000130a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xffff, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffff, 4)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002ef4, 8), (unique, 0x10002ef4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001092, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10001092, 8) PTRSUB (unique, 0x1000108a, 8) , (const, 0x0, 8), (unique, 0x1000108a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002efc, 8), (unique, 0x10002efc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100010b2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x100010b2, 8) PTRSUB (unique, 0x100010aa, 8) , (const, 0x0, 8), (unique, 0x100010aa, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2915f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (unique, 0xbc00, 2) , (const, 0x0, 4), (register, 0x0, 1) SUBPIECE (unique, 0xbc00, 2) , (const, 0x0, 4), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002efc, 8), (unique, 0x10002efc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100010b2, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x100010b2, 8) PTRSUB (unique, 0x100010aa, 8) , (const, 0x0, 8), (unique, 0x100010aa, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10002ef4, 8), (unique, 0x10002ef4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001092, 8) , (const, 0xe, 8) , (const, 0x1, 8), (unique, 0x10001092, 8) PTRSUB (unique, 0x1000108a, 8) , (const, 0x0, 8), (unique, 0x1000108a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbc00, 2), (register, 0x0, 4) INT_ZEXT (unique, 0xbc00, 2)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0x10002f05, 1), (unique, 0x10002f05, 1) CAST (unique, 0xbb00, 1), (register, 0x0, 4) INT_ZEXT (unique, 0x10002f04, 1), (unique, 0x10002f04, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001372, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10001372, 8) PTRSUB (unique, 0x1000136a, 8) , (const, 0x0, 8), (unique, 0x1000136a, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10001352, 8) , (const, 0xf, 8) , (const, 0x1, 8), (unique, 0x10001352, 8) PTRSUB (unique, 0x1000134a, 8) , (const, 0x0, 8), (unique, 0x1000134a, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
