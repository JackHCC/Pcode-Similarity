[ ---  CBRANCH (ram, 0x186130, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c3144, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ac, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x2ac, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x2ac, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ac, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x2ac, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x2ac, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2ac, 4)]
[(stack, 0x0, 1) INDIRECT (stack, 0x0, 1) , (const, 0x2ac, 4)]
[(stack, 0x1, 7) INDIRECT (stack, 0x1, 7) , (const, 0x2ac, 4)]
[ ---  CALL (ram, 0x1849e0, 8)]
[ ---  BRANCH (ram, 0x185ea6, 1)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001ae, 8) INT_ADD (unique, 0x1000020f, 8) , (stack, 0x0, 1), (unique, 0x1000020f, 8) INT_LEFT (unique, 0x10000207, 8) , (const, 0x8, 8), (unique, 0x10000207, 8) INT_SEXT (unique, 0x10000237, 7), (unique, 0x10000237, 7) CAST (stack, 0x1, 7), (stack, 0x0, 1) MULTIEQUAL (stack, 0x0, 1) , (stack, 0x0, 1), (stack, 0x1, 7) MULTIEQUAL (stack, 0x1, 7) , (stack, 0x1, 7)]
[(register, 0xa0, 8) INT_AND (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x38, 8) , (unique, 0x3100, 8), (register, 0x8, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0x3100, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x18, 8) , (const, 0x1, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[ ---  CBRANCH (ram, 0x186038, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0x38, 8), (register, 0x18, 8) INT_SUB (unique, 0x100001a6, 8) , (const, 0x21, 8), (unique, 0x100001a6, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x18, 8) , (const, 0x1, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[ ---  CBRANCH (ram, 0x186100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000246, 8), (unique, 0x10000246, 8) CAST (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x2a6, 4)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x2a6, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2a6, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x2a6, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x2a6, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2a6, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xa0, 8) , (unique, 0x100001ae, 8)]
[ ---  CBRANCH (ram, 0x1860e8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x293, 4)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x293, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x293, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x293, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x293, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x293, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x183550, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x185ff0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x186110, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x8000000000000000, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000256, 8) , (const, 0x16, 4), (unique, 0x10000256, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x277, 4)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x277, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x277, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x277, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x277, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x277, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x186038, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (register, 0xa0, 8), (register, 0x30, 8) INT_SUB (unique, 0x10000116, 8) , (const, 0x21, 8), (unique, 0x10000116, 8) INT_2COMP (unique, 0xbd80, 8)]
[(unique, 0x1000022f, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x186144, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000227, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x185f17, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x186028, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x1000012e, 8) , (unique, 0xbd80, 8), (unique, 0x1000012e, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x186038, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000025e, 8) , (const, 0xc, 4), (unique, 0x1000025e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x206, 4)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x206, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x206, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x206, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x206, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x206, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000021f, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000021f, 8) , (unique, 0x10000227, 8) , (unique, 0x1000022f, 8) , (unique, 0x1000012e, 8)]
[ ---  CBRANCH (ram, 0x186058, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000266, 8), (unique, 0x10000266, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2d90, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x186058, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1c6, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1c6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c6, 4)]
[ ---  CBRANCH (ram, 0x185f6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026e, 8), (unique, 0x1000026e, 8) CALL (ram, 0x17d8c0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1ea, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1e3, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1ea, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1e3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ea, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e3, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1ea, 4), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1e3, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1ea, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1e3, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ea, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e3, 4)]
[ ---  CBRANCH (ram, 0x1860b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) CALL (ram, 0x182470, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x0, 8) CAST (unique, 0x10000276, 8), (unique, 0x10000276, 8) CALL (ram, 0x17dae0, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x18, 8), (unique, 0x3880, 8) INT_ADD (register, 0xa0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1860b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x185f4e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1c2, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1c2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c2, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1c2, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1c2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1c2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xc6, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xc6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc6, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0xc6, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xc6, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xc6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x185f6b, 1)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x1a5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1a5, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xcf, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xcf, 4), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xcf, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0xcf, 4), (ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xcf, 4), (ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xcf, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x186098, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000286, 8), (unique, 0x10000286, 8) CALL (ram, 0x182470, 8) , (register, 0x28, 8) , (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x18b, 4), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x184, 4), (ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x18b, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x184, 4), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x18b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x184, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x18b, 4), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x184, 4), (ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x18b, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x184, 4), (ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x18b, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x184, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000296, 8), (unique, 0x10000296, 8) CALL (ram, 0x182470, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0xa0, 8), (register, 0x0, 8) CAST (unique, 0x1000028e, 8), (unique, 0x1000028e, 8) CALL (ram, 0x17dff0, 8) , (register, 0x28, 8) , (register, 0xa0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x185f85, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x185f96, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x175, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x175, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x175, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x175, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x175, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x175, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0xea, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xea, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xea, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0xea, 4)]
[(ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0xea, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0x100001dd, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (ram, 0x4c2d90, 8)]
[(unique, 0x100001e5, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0x100001ed, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100001f5, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (ram, 0x4c2ee0, 8)]
[(unique, 0x100001fd, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (ram, 0x4c3144, 4)]
[(unique, 0x10000201, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (ram, 0x185fb2, 1) , (unique, 0x100001dc, 1), (unique, 0x100001dc, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4c2d90, 8) INDIRECT (unique, 0x100001dd, 8) , (const, 0x167, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (unique, 0x100001e5, 8) , (const, 0x167, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x100001ed, 8) , (const, 0x167, 4)]
[(ram, 0x4c2ee0, 8) INDIRECT (unique, 0x100001f5, 8) , (const, 0x167, 4)]
[(ram, 0x4c3144, 4) INDIRECT (unique, 0x100001fd, 4) , (const, 0x167, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x10000201, 4) , (const, 0x167, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (register, 0x28, 8)]
[(unique, 0x10000217, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x167, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000201, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c3144, 4) MULTIEQUAL (ram, 0x4c3144, 4) , (unique, 0x100001fd, 4) , (ram, 0x4c3144, 4)]
[(ram, 0x4c2ee0, 8) MULTIEQUAL (ram, 0x4c2ee0, 8) , (unique, 0x100001f5, 8) , (ram, 0x4c2ee0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100001ed, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (unique, 0x100001e5, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2d90, 8) MULTIEQUAL (ram, 0x4c2d90, 8) , (unique, 0x100001dd, 8) , (ram, 0x4c2d90, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x186128, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000217, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x185fde, 1)]
[ ---  CBRANCH (ram, 0x185fdb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000f4, 8) , (const, 0x0, 8), (unique, 0x100000f4, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) INT_ADD (unique, 0x1000029e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000029e, 8) CAST (register, 0x10, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  CBRANCH (ram, 0x1860d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000fc, 8) , (const, 0x0, 8), (unique, 0x100000fc, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002b6, 8), (unique, 0x100002b6, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x100002ae, 8) , (const, 0x10, 8), (unique, 0x100002ae, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x185fd2, 1)]
[ ---  CBRANCH (ram, 0x18614c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x17d3b0, 8) , (unique, 0x100001c4, 8) , (unique, 0x100001bc, 8) , (const, 0xc3d, 8) , (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) COPY (const, 0x291110, 8), (unique, 0x100001c4, 8) COPY (const, 0x290d28, 8), (unique, 0x100001bc, 8) COPY (const, 0x28d3f9, 8)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8), (ram, 0x4c2d90, 8) INDIRECT (ram, 0x4c2d90, 8) , (const, 0x13f, 4)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x13f, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x13f, 4)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8), (ram, 0x4c2ee0, 8) INDIRECT (ram, 0x4c2ee0, 8) , (const, 0x13f, 4)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4), (ram, 0x4c3144, 4) INDIRECT (ram, 0x4c3144, 4) , (const, 0x13f, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x13f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c2d90, 8) COPY (ram, 0x4c2d90, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c2ee0, 8) COPY (ram, 0x4c2ee0, 8)]
[(ram, 0x4c3144, 4) COPY (ram, 0x4c3144, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
