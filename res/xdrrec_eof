[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x22ea60, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000226, 8), (unique, 0x10000226, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0x100001e9, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x100001f1, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x100001f9, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CBRANCH (ram, 0x22eaa2, 1) , (unique, 0x100001e8, 1), (unique, 0x100001e8, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x1000022e, 4), (unique, 0x1000022e, 4) COPY (unique, 0x100000b2, 4), (unique, 0x100000b2, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001e9, 8) , (unique, 0x100001f1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (unique, 0x100001f9, 4) , (stack, 0xffffffffffffffc4, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100001f1, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001e9, 8) , (register, 0x18, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8)]
[(register, 0xa0, 4) COPY (const, 0x4, 4)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x0, 4) INT_SUB (unique, 0x100000c6, 4) , (unique, 0x100000ce, 4), (unique, 0x100000c6, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (unique, 0x100000ce, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x10000113, 8)]
[(unique, 0x1000010b, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000113, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x1000011b, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CBRANCH (ram, 0x22e9e9, 1) , (unique, 0x1000010a, 1), (unique, 0x1000010a, 1) INT_EQUAL (unique, 0x10000106, 4) , (const, 0x0, 4), (unique, 0x10000106, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (unique, 0x1000011b, 4) , (const, 0x8e, 4)]
[ ---  CBRANCH (ram, 0x22eaf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x18, 8) , (register, 0x10, 4), (unique, 0xbd80, 8) CAST (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4), (register, 0x18, 8) INT_ADD (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000232, 8), (unique, 0x10000232, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0x3, 4), (register, 0x28, 4) SUBPIECE (unique, 0x10000113, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x18, 8), (register, 0x28, 8) INT_SEXT (register, 0x0, 4)]
[(register, 0x0, 4) INT_SUB (unique, 0x100000d6, 4) , (unique, 0x100000de, 4), (unique, 0x100000d6, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (unique, 0x100000de, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x18, 8), (register, 0x28, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x1000020e, 4) COPY (unique, 0x10000106, 4)]
[ ---  CBRANCH (ram, 0x22e9f6, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (register, 0xa0, 4) , (unique, 0x10000106, 4)]
[(unique, 0x10000212, 4) COPY (register, 0xa0, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (unique, 0x1000011b, 4) , (const, 0xe2, 4)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0xb0, 8) , (unique, 0x1000010b, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x1000020e, 4) , (unique, 0x10000212, 4)]
[(register, 0xb0, 8) CAST (unique, 0x1000024a, 8), (unique, 0x1000024a, 8) INT_ADD (unique, 0x10000242, 8) , (register, 0x80, 8), (unique, 0x10000242, 8) CAST (register, 0xb0, 8), (register, 0x80, 8) INT_SEXT (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x1000020e, 4) , (unique, 0x10000212, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_ADD (unique, 0x1000010b, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x1000020e, 4) , (unique, 0x10000212, 4)]
[ ---  CBRANCH (ram, 0x22e9a3, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 4) , (register, 0xa0, 4), (register, 0xa0, 4) INT_SUB (register, 0xa0, 4) , (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x1000020e, 4) , (unique, 0x10000212, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000252, 8) , (register, 0x10, 4), (unique, 0x10000252, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_RIGHT (unique, 0x1bb80, 4) , (const, 0x1f, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffc4, 4) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x22eaf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (stack, 0xffffffffffffffc4, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (stack, 0xffffffffffffffc4, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (stack, 0xffffffffffffffc4, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (stack, 0xffffffffffffffc4, 4) , (const, 0x18, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xffffffff7fffffff, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22e97a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e6, 4) , (const, 0x0, 4), (unique, 0x100000e6, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x100000fe, 4), (unique, 0x100000fe, 4) INT_AND (unique, 0x1bb80, 4) , (const, 0x7fffffff, 4)]
[(stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22eac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0x100000ea, 4) , (unique, 0x100000f2, 4), (unique, 0x100000ea, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (unique, 0x100000f2, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100001fe, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22ea73, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (unique, 0x1000025a, 8) , (register, 0x0, 8), (unique, 0x1000025a, 8) CAST (register, 0xb0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x10000206, 8) COPY (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001fe, 8) , (unique, 0x10000206, 8)]
[ ---  CBRANCH (ram, 0x22ea60, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000262, 8), (unique, 0x10000262, 8) CAST (register, 0xb0, 8), (register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001fe, 8) , (unique, 0x10000206, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xd, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22e998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000272, 8), (unique, 0x10000272, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xe, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x22c, 4)]
[ ---  CBRANCH (ram, 0x22eaf8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x18, 8) , (register, 0x10, 4), (unique, 0xbd80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x8, 8), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (register, 0x28, 4), (register, 0x18, 8) INT_ADD (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (unique, 0x100000ea, 4) , (const, 0x3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xb, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0x18, 8), (register, 0x28, 8) INT_SEXT (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x22ea60, 1)]
