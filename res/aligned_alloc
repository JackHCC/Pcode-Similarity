[(unique, 0x100002fd, 8) INT_ADD (unique, 0x10000449, 8) , (stack, 0x0, 1), (unique, 0x10000449, 8) INT_LEFT (unique, 0x10000441, 8) , (const, 0x8, 8), (unique, 0x10000441, 8) INT_SEXT (unique, 0x10000489, 7), (unique, 0x10000489, 7) CAST (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x1993b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000481, 8), (unique, 0x10000481, 8) CAST (ram, 0x4eaed0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x4fd, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x4fd, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4fd, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4fd, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x4fd, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4fd, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000490, 8), (unique, 0x10000490, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x100002fd, 8)]
[ ---  CBRANCH (ram, 0x199390, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x11, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x4f1, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x4f1, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4f1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f1, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x4f1, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4f1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000498, 8), (unique, 0x10000498, 8) CALL (ram, 0x197070, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x199250, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x199570, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a0, 8) , (const, 0x16, 4), (unique, 0x100004a0, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x4e4, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x4e4, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x4e4, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4e4, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x4e4, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4e4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x199370, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) INT_SUB (unique, 0x10000189, 8) , (const, 0x21, 8), (unique, 0x10000189, 8) INT_2COMP (register, 0x38, 8)]
[(unique, 0x10000461, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x199585, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x10000459, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1990d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x199298, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100001a1, 8) , (register, 0x38, 8), (unique, 0x100001a1, 8) INT_MULT (register, 0x18, 8) , (const, 0x2, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001a1, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x199370, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x30, 8)]
[(unique, 0x10000451, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x20, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000451, 8) , (unique, 0x10000459, 8) , (unique, 0x10000461, 8) , (unique, 0x100001a1, 8)]
[ ---  CBRANCH (ram, 0x1993e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1993a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[(unique, 0x10000307, 1) COPY (const, 0x0, 1)]
[(register, 0xa8, 8) COPY (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x199100, 1)]
[(unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0xa8, 8), (register, 0xa8, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[(unique, 0x10000306, 1) MULTIEQUAL (unique, 0xc800, 1) , (unique, 0x10000307, 1)]
[ ---  CBRANCH (ram, 0x199370, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa8, 8) , (register, 0x30, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x199370, 1) , (unique, 0x10000306, 1)]
[ ---  CBRANCH (ram, 0x199370, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_SUB (unique, 0x100000e8, 8) , (const, 0x21, 8), (unique, 0x100000e8, 8) INT_2COMP (register, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004a8, 8) , (const, 0xc, 4), (unique, 0x100004a8, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x304, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x304, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x304, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x304, 4)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x304, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x304, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0xaa, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xaa, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xaa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaa, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0xaa, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xaa, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xaa, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x199135, 8)]
[ ---  CBRANCH (ram, 0x199560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004b0, 8), (unique, 0x100004b0, 8) CALL (ram, 0x1942d0, 8) , (unique, 0x10000360, 8) , (unique, 0x3a00, 8), (unique, 0x10000360, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xa8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000469, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1992b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x100004b8, 8) , (register, 0x18, 8), (unique, 0x100004b8, 8) CAST (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(unique, 0x10000471, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004d8, 8), (unique, 0x100004d8, 8) INT_ADD (unique, 0x100004d0, 8) , (register, 0x18, 8), (unique, 0x100004d0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x18, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100004c0, 8) , (unique, 0x10000380, 8), (unique, 0x100004c0, 8) CAST (register, 0x0, 8), (unique, 0x10000380, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x19917b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x1f, 8) , (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100004f0, 8), (unique, 0x100004f0, 8) INT_SUB (unique, 0x100004e0, 8) , (unique, 0x100004e8, 8), (unique, 0x100004e8, 8) CAST (unique, 0x3100, 8), (unique, 0x100004e0, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) INT_SUB (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_2COMP (register, 0x18, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100004c0, 8) , (unique, 0x10000380, 8), (unique, 0x100004c0, 8) CAST (register, 0x0, 8), (unique, 0x10000380, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(unique, 0x10000479, 8) COPY (register, 0x0, 8)]
[(register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (unique, 0x10000510, 8), (unique, 0x10000510, 8) CAST (register, 0x0, 8), (register, 0xb0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) CAST (unique, 0x10000508, 8), (unique, 0x10000508, 8) INT_SUB (unique, 0x100004f8, 8) , (unique, 0x10000500, 8), (unique, 0x10000500, 8) CAST (unique, 0x3100, 8), (unique, 0x100004f8, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x10000471, 8) , (unique, 0x10000479, 8)]
[ ---  CBRANCH (ram, 0x1993c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100002e3, 8) , (const, 0x0, 8), (unique, 0x100002e3, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0xb0, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000520, 8), (unique, 0x10000520, 8) INT_ADD (unique, 0x10000518, 8) , (unique, 0x10000398, 8), (unique, 0x10000518, 8) CAST (register, 0xa0, 8), (unique, 0x10000398, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (unique, 0x10000528, 8) , (register, 0x10, 8), (unique, 0x10000528, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x176, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x173, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x150, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x148, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x176, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x173, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x150, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x148, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x176, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x173, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x150, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x148, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x176, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x173, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x150, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x148, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x176, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x173, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x150, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x148, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x176, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x173, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x150, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x176, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1991c5, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (unique, 0x10000368, 8) , (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x10000368, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x1991e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1992a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (unique, 0x10000530, 8) , (register, 0x18, 8), (unique, 0x10000530, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0x1280, 8)]
[ ---  CBRANCH (ram, 0x19920c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000538, 8), (unique, 0x10000538, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8c98, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b90d8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x199300, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001b1, 8) , (const, 0x0, 8), (unique, 0x100001b1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000469, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x199300, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000548, 8), (unique, 0x10000548, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000540, 8) , (register, 0xa8, 8), (unique, 0x10000540, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xa8, 8) INT_OR (register, 0xa8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x257, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x253, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x23a, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x257, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x253, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x23a, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x257, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x253, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x23a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x257, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x253, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23a, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x257, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x253, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x23a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x257, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x253, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x23a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x257, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x1992f6, 8)]
[ ---  CALL (ram, 0x192c60, 8) , (unique, 0x10000370, 8) , (unique, 0x3400, 8) , (const, 0x1, 8), (unique, 0x10000370, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000540, 8) , (register, 0xa8, 8), (unique, 0x10000540, 8) CAST (register, 0x30, 8)]
[(unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0xb0, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) INT_OR (register, 0xb0, 8) , (const, 0x2, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2f5, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2f5, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2f5, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f3, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2f5, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x2f3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2f5, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2f3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x10000550, 8) , (unique, 0xbd80, 8), (unique, 0x10000550, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x199300, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[ ---  CBRANCH (ram, 0x199560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x199380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001d1, 8) , (const, 0x0, 8), (unique, 0x100001d1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x199380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001d9, 8) , (const, 0x0, 8), (unique, 0x100001d9, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x199380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x10000358, 8), (unique, 0x10000358, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000560, 8), (unique, 0x10000560, 8) INT_AND (unique, 0x10000558, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x10000558, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xceb, 8)]
[ ---  CBRANCH (ram, 0x199357, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000568, 8), (unique, 0x10000568, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8de8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b8ff8, 8)]
[ ---  BRANCH (ram, 0x19921a, 1)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1994ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000570, 8), (unique, 0x10000570, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead70, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x448, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x448, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x448, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x448, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x448, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x448, 4)]
[ ---  CBRANCH (ram, 0x19942c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000578, 8), (unique, 0x10000578, 8) CALL (ram, 0x191da0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x46c, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x465, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x46c, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x465, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x46c, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x465, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x46c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x465, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x46c, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x465, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x46c, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x465, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x46c, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x199518, 8)]
[ ---  CBRANCH (ram, 0x199548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000588, 8), (unique, 0x10000588, 8) CALL (ram, 0x195490, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x10000580, 8), (unique, 0x10000580, 8) CALL (ram, 0x1916e0, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0x18, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x199548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x19940e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x444, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x444, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x444, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x444, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x444, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x444, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x348, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x348, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x348, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x348, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x348, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x348, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19942c, 1)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x427, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x427, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x427, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x427, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x427, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x427, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x351, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x351, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x351, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x351, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x351, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x351, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x351, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x19943a, 8)]
[ ---  CBRANCH (ram, 0x199528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000590, 8), (unique, 0x10000590, 8) CALL (ram, 0x195490, 8) , (register, 0xa8, 8) , (register, 0x18, 8) , (register, 0x30, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x40e, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x407, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x40e, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x407, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x40e, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x407, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x40e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x407, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x40e, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x407, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x40e, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x407, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x40e, 4), (stack, 0xffffffffffffffd0, 8) COPY (const, 0x199545, 8)]
[(register, 0x0, 8) CAST (unique, 0x100005a0, 8), (unique, 0x100005a0, 8) CALL (ram, 0x195490, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x10000598, 8), (unique, 0x10000598, 8) CALL (ram, 0x191fc0, 8) , (register, 0xa8, 8) , (register, 0x30, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x199475, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x199458, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x3f8, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3f8, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3f8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f8, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x3f8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x36c, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x36c, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x36c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x36c, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x36c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x36c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0x10000409, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(unique, 0x10000411, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x10000419, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x10000421, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000429, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(unique, 0x10000431, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x199475, 1) , (unique, 0x10000408, 1), (unique, 0x10000408, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x10000409, 8) , (const, 0x3ea, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x10000411, 8) , (const, 0x3ea, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x10000419, 8) , (const, 0x3ea, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000421, 8) , (const, 0x3ea, 4)]
[(ram, 0x4eaed0, 8) INDIRECT (unique, 0x10000429, 8) , (const, 0x3ea, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000431, 4) , (const, 0x3ea, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x3ea, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0xa8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000431, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (unique, 0x10000429, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x10000421, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x10000419, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x10000411, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (unique, 0x10000409, 8) , (ram, 0x4ead70, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x199560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x199380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000025a, 8) , (const, 0x0, 8), (unique, 0x1000025a, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x1994a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000262, 8) , (const, 0x0, 8), (unique, 0x10000262, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100005b0, 8), (unique, 0x100005b0, 8) INT_AND (unique, 0x100005a8, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100005a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x199380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (register, 0xa8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xcfe, 8)]
[ ---  CBRANCH (ram, 0x1994d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005b8, 8), (unique, 0x100005b8, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8e48, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b8ff8, 8)]
[ ---  BRANCH (ram, 0x19921a, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000350, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x10000348, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000340, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffd0, 8), (unique, 0x10000350, 8) COPY (const, 0x2b8758, 8), (unique, 0x10000348, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x10000340, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005c0, 8), (unique, 0x100005c0, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1e5, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1f7, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1f4, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1e5, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1f7, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1f4, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1e5, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1f7, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1f4, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1e5, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e5, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1f7, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1f4, 4), (ram, 0x4eaed0, 8) INDIRECT (ram, 0x4eaed0, 8) , (const, 0x1e5, 4), (ram, 0x4eaed0, 8) MULTIEQUAL (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8) , (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1f7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1f4, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e5, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaed0, 8) COPY (ram, 0x4eaed0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
