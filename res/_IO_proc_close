[(unique, 0x1000016c, 4) COPY (ram, 0x4f08e8, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1805a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffb0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa8, 8) PTRSUB (const, 0x0, 8) , (const, 0x1805d0, 8)]
[ ---  BRANCH (ram, 0x180402, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x61, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x61, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x61, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x61, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x61, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x61, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x61, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x61, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x61, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x61, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x61, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x61, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x61, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (unique, 0x1000012f, 8) , (const, 0x0, 8), (unique, 0x1000012f, 8) PTRSUB (const, 0x0, 8) , (const, 0x1805d0, 8), (register, 0x0, 8) CAST (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001d0, 8), (unique, 0x100001d0, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08a8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08a8, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100001a0, 8) COPY (ram, 0x4ed868, 8), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[ ---  CBRANCH (ram, 0x18045a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed868, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[ ---  CBRANCH (ram, 0x180430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed860, 4) , (const, 0x0, 4)]
[(ram, 0x4ed860, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001b8, 8) COPY (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed860, 4) , (const, 0x0, 4)]
[(ram, 0x4ed860, 4) COPY (const, 0x1, 4)]
[(unique, 0x100001a8, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x180453, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e9, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x1e9, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x1e9, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x1e9, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x1e9, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1e9, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1e9, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1e9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1e9, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1e9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1e9, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1e9, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed860, 8)]
[(unique, 0x100001b0, 8) COPY (unique, 0x10000198, 8), (unique, 0x10000198, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x1e9, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (unique, 0x100001a8, 8) , (unique, 0x100001b0, 8) , (unique, 0x100001b8, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1804a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed870, 8) , (const, 0x0, 8), (ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(unique, 0x10000170, 8) COPY (ram, 0x4ed870, 8)]
[ ---  CBRANCH (ram, 0x180494, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed870, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x180488, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001e8, 8), (unique, 0x100001e8, 8) INT_ADD (register, 0x10, 8) , (const, 0xe8, 8), (register, 0x10, 8) COPY (unique, 0x10000180, 8), (unique, 0x10000180, 8) MULTIEQUAL (unique, 0x10000170, 8) , (unique, 0x10000178, 8)]
[(register, 0xa8, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x10000178, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x180580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) CAST (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) INT_ADD (register, 0x10, 8) , (const, 0xe8, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed870, 8)]
[ ---  BRANCH (ram, 0x180587, 1)]
[(register, 0xa8, 4) COPY (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc6, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0xc6, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0xc6, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0xc6, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0xc6, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0xc6, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xc6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) INT_ADD (register, 0x38, 8) , (const, 0xe8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1804a6, 1)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0xa8, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(unique, 0x10000188, 4) COPY (ram, 0x4ed860, 4), (ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[ ---  CBRANCH (ram, 0x1804f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed864, 4) , (const, 0x0, 4)]
[(ram, 0x4ed868, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1804cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000190, 4) COPY (unique, 0x1000015f, 4), (unique, 0x1000015f, 4) INT_ADD (ram, 0x4ed860, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1804f1, 1) , (unique, 0x10000163, 1), (unique, 0x10000163, 1) INT_NOTEQUAL (unique, 0x1000015f, 4) , (const, 0x0, 4), (unique, 0x1000015f, 4) INT_ADD (ram, 0x4ed860, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a7, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x1a7, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x1a7, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x1a7, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x1a7, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x1a7, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1a7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1a7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1a7, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1a7, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000137, 8), (unique, 0x10000137, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed860, 8)]
[(unique, 0x1000018c, 4) COPY (ram, 0x4ed860, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x1a7, 4), (ram, 0x4ed860, 4) INT_ADD (ram, 0x4ed860, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ed860, 4) COPY (unique, 0x10000194, 4), (unique, 0x10000194, 4) MULTIEQUAL (unique, 0x10000188, 4) , (unique, 0x1000018c, 4) , (unique, 0x10000190, 4)]
[ ---  CBRANCH (ram, 0x180514, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000016c, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x123, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x123, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x123, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x123, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x123, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x123, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x123, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x123, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x123, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x123, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x123, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000208, 8), (unique, 0x10000208, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000200, 8), (unique, 0x10000200, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b0, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b0, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x180570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x134, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x134, 4)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x134, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x134, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x134, 4)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x134, 4)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x134, 4)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x134, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x134, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x134, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x134, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x134, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x134, 4)]
[ ---  CBRANCH (ram, 0x180570, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210940, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000210, 8), (unique, 0x10000210, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x152, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x152, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x152, 4), (ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x152, 4), (ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x152, 4), (ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x152, 4), (ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x152, 4), (ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x152, 4), (ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x152, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x152, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x152, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x180530, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x1e4710, 8) , (unique, 0xbc80, 4) , (register, 0x20, 8) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000218, 8), (unique, 0x10000218, 8) INT_ADD (register, 0x38, 8) , (const, 0xe0, 8)]
[(register, 0x0, 8) INT_AND (unique, 0x10000220, 8) , (const, 0xffffffff, 8), (unique, 0x10000220, 8) CAST (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x180570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000228, 8), (unique, 0x10000228, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x180555, 1)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f08b0, 8) MULTIEQUAL (ram, 0x4f08b0, 8) , (ram, 0x4f08b0, 8)]
[(ram, 0x4f08a8, 8) MULTIEQUAL (ram, 0x4f08a8, 8) , (ram, 0x4f08a8, 8)]
[(ram, 0x4ed870, 8) MULTIEQUAL (ram, 0x4ed870, 8) , (ram, 0x4ed870, 8)]
[(ram, 0x4ed868, 8) MULTIEQUAL (ram, 0x4ed868, 8) , (ram, 0x4ed868, 8)]
[(ram, 0x4ed864, 4) MULTIEQUAL (ram, 0x4ed864, 4) , (ram, 0x4ed864, 4)]
[(ram, 0x4ed860, 4) MULTIEQUAL (ram, 0x4ed860, 4) , (ram, 0x4ed860, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1805c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000230, 8), (unique, 0x10000230, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x186, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x186, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x186, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x186, 4)]
[(ram, 0x4ed860, 4) COPY (ram, 0x4ed860, 4), (ram, 0x4ed860, 4) INDIRECT (ram, 0x4ed860, 4) , (const, 0x186, 4)]
[(ram, 0x4ed864, 4) COPY (ram, 0x4ed864, 4), (ram, 0x4ed864, 4) INDIRECT (ram, 0x4ed864, 4) , (const, 0x186, 4)]
[(ram, 0x4ed868, 8) COPY (ram, 0x4ed868, 8), (ram, 0x4ed868, 8) INDIRECT (ram, 0x4ed868, 8) , (const, 0x186, 4)]
[(ram, 0x4ed870, 8) COPY (ram, 0x4ed870, 8), (ram, 0x4ed870, 8) INDIRECT (ram, 0x4ed870, 8) , (const, 0x186, 4)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8), (ram, 0x4f08a8, 8) INDIRECT (ram, 0x4f08a8, 8) , (const, 0x186, 4)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8), (ram, 0x4f08b0, 8) INDIRECT (ram, 0x4f08b0, 8) , (const, 0x186, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x186, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x186, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ed860, 4) COPY (ram, 0x4ed860, 4)]
[(ram, 0x4ed864, 4) COPY (ram, 0x4ed864, 4)]
[(ram, 0x4ed868, 8) COPY (ram, 0x4ed868, 8)]
[(ram, 0x4ed870, 8) COPY (ram, 0x4ed870, 8)]
[(ram, 0x4f08a8, 8) COPY (ram, 0x4f08a8, 8)]
[(ram, 0x4f08b0, 8) COPY (ram, 0x4f08b0, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
