[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000a8d, 8), (unique, 0x10000a8d, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2295c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22965e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x2, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x301, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x301, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x301, 4), (stack, 0xffffffffffffff70, 8) COPY (const, 0x22966a, 8)]
[ ---  CALL (ram, 0x177730, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x354, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x301, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x354, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x301, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (register, 0x38, 8) , (const, 0x354, 4), (register, 0x38, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x38, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x38, 8) , (const, 0x11, 4), (register, 0x38, 8) INT_XOR (unique, 0x10000a9d, 8) , (unique, 0xbd80, 8), (unique, 0x10000a9d, 8) CAST (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a95, 8), (unique, 0x10000a95, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x301, 4), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x301, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f276, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x354, 4), (ram, 0x4c7d48, 1) COPY (const, 0x1, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x354, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x301, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x354, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x301, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x354, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x301, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x354, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x301, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x354, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x301, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x354, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x301, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x354, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x301, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x354, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x301, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x354, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x301, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x354, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x301, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x354, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x301, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x354, 4), (stack, 0xffffffffffffff38, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x10000a5d, 8) , (const, 0x354, 4), (unique, 0x10000a5d, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x10000a65, 8) , (const, 0x354, 4), (unique, 0x10000a65, 8) COPY (register, 0x8, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x10000a6d, 8) , (const, 0x354, 4), (unique, 0x10000a6d, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x354, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x301, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x354, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x301, 4)]
[(unique, 0x10000a7d, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8)]
[ ---  CBRANCH (ram, 0x229800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x100005ad, 8) , (const, 0x0, 8) , (unique, 0x100005bd, 8) , (unique, 0x3100, 8), (unique, 0x100005bd, 8) COPY (const, 0x2927f0, 8), (unique, 0x100005ad, 8) COPY (const, 0x28f293, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(unique, 0x100008a1, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100008a9, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100008b1, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x100008b9, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x100008ba, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x100008c2, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x100008c6, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x100008ca, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x100008ce, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x100008d2, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x100008d6, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x100008da, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x100008de, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(unique, 0x100008e2, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x100008ea, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x100008fa, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x10000902, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x1000090a, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10000912, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x1000091a, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x10000922, 8) COPY (unique, 0x10000a85, 8), (unique, 0x10000a85, 8) MULTIEQUAL (unique, 0x10000a75, 8) , (unique, 0x10000a7d, 8)]
[ ---  CBRANCH (ram, 0x229800, 1) , (unique, 0x100008a0, 1), (unique, 0x100008a0, 1) INT_NOTEQUAL (unique, 0x10000932, 8) , (const, 0x0, 8), (unique, 0x10000932, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000091a, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000912, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (unique, 0x1000090a, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0x10000902, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (unique, 0x100008fa, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (unique, 0x100008ea, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x100008e2, 8)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (unique, 0x100008de, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x100008da, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x100008d6, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x100008d2, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x100008ce, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x100008ca, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x100008c6, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x100008c2, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100008ba, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100008b9, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100008b1, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100008a9, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100008a1, 8)]
[(unique, 0x100009d1, 8) COPY (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (unique, 0x10000932, 8)]
[ ---  CBRANCH (ram, 0x2296e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (unique, 0x10000932, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff38, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x10000a01, 8) COPY (ram, 0x4c7d58, 8)]
[ ---  CBRANCH (ram, 0x229716, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d58, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d30, 8)]
[(unique, 0x10000a39, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000aa5, 8), (unique, 0x10000aa5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a01, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x229738, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000aa5, 8), (unique, 0x10000aa5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000a01, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000aad, 8) , (const, 0x229743, 8), (unique, 0x10000aad, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x615, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x615, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x615, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x615, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x615, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x615, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x615, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x615, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x615, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x615, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x615, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x615, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x615, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x614, 4), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x615, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x614, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x615, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x614, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x615, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x614, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x615, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x614, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x615, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x614, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x615, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x614, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x615, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x614, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x615, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x614, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x229728, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1892e0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) COPY (unique, 0x10000a49, 8), (unique, 0x10000a49, 8) MULTIEQUAL (unique, 0x10000a39, 8) , (unique, 0x10000a41, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x630, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x630, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x630, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x630, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x630, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x630, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x630, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x630, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x630, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x630, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x630, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x10000a41, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000ab5, 8), (unique, 0x10000ab5, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x229910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000ab5, 8), (unique, 0x10000ab5, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0xb0, 8) CAST (unique, 0x10000abd, 8), (unique, 0x10000abd, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000ac5, 8), (unique, 0x10000ac5, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x229914, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000acd, 8) , (const, 0x22991e, 8), (unique, 0x10000acd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x3a1, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x3a0, 4), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3a1, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3a0, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ac, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3a1, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3ac, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3a1, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3ac, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3a1, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3ac, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3a1, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3ac, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3a1, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3ac, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3a1, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3ac, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3a1, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3ac, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3a1, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3ac, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3a1, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3ac, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3a1, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3ac, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3a1, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0x10000add, 8), (unique, 0x10000add, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000ad5, 8), (unique, 0x10000ad5, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x18, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x229a58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000ad5, 8), (unique, 0x10000ad5, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x18, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x60e, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x60e, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x60e, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x60e, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x60e, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x60e, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x60e, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x60e, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x60e, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x60e, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x60e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x2296e7, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x10000ae5, 8), (unique, 0x10000ae5, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3c7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b9, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3b4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3af, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3c7, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3b9, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3b4, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3af, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3c7, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3b9, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3b4, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3af, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3c7, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3b9, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3b4, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3af, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3c7, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3b9, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3b4, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3af, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3c7, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3b9, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3b4, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3af, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3c7, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3b9, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3b4, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3af, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3c7, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3b9, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3b4, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3af, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3c7, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3b9, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3b4, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3af, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3c7, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3b9, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3b4, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3af, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3c7, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3b9, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3b4, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3af, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x2296e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000940, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000948, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000950, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000958, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x10000960, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x10000961, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x10000969, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x1000096d, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x10000971, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000975, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000979, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x1000097d, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x10000981, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x10000985, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(unique, 0x10000989, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000991, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x10000999, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(unique, 0x100009a1, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x100009a9, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x100009b1, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x100009b9, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100009c1, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x2296e7, 1) , (unique, 0x1000093f, 1), (unique, 0x1000093f, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) MULTIEQUAL (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000aed, 8) , (const, 0x229768, 8), (unique, 0x10000aed, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x4d7, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (unique, 0x10000985, 4) , (const, 0x4d6, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x10000989, 8) , (const, 0x4d6, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100002ed, 8) , (const, 0x1, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100002ed, 8) , (const, 0x1, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b05, 8) , (const, 0x5f73736e62696c, 8), (unique, 0x10000b05, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100002ed, 8) , (const, 0x1, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b0d, 8) , (const, 0x2297a3, 8), (unique, 0x10000b0d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100006fd, 8) , (const, 0x1, 8), (unique, 0x100006fd, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x6f732e, 4), (register, 0x0, 8) CAST (unique, 0x10000b15, 8), (unique, 0x10000b15, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100006f5, 8) , (const, 0x1, 8), (unique, 0x100006f5, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0x7, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 1), (unique, 0x3100, 8) CAST (unique, 0x10000b25, 8), (unique, 0x10000b25, 8) INT_ADD (unique, 0x10000b1d, 8) , (const, 0x5, 8), (unique, 0x10000b1d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000b15, 8), (unique, 0x10000b15, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100006f5, 8) , (const, 0x1, 8), (unique, 0x100006f5, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0x7, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x322e, 2), (unique, 0x3100, 8) CAST (unique, 0x10000b35, 8), (unique, 0x10000b35, 8) INT_ADD (unique, 0x10000b2d, 8) , (const, 0x3, 8), (unique, 0x10000b2d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000b15, 8), (unique, 0x10000b15, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100006f5, 8) , (const, 0x1, 8), (unique, 0x100006f5, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0x7, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b3d, 8) , (const, 0x2297c3, 8), (unique, 0x10000b3d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x10000705, 8) , (const, 0x1, 8), (unique, 0x10000705, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x516, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x508, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000948, 8) , (const, 0x4d7, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x516, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x515, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x508, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x507, 4), (stack, 0xffffffffffffff1c, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000afd, 8), (unique, 0x10000afd, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000950, 8) , (const, 0x4d7, 4), (register, 0x110, 8) INDIRECT (unique, 0x10000948, 8) , (const, 0x4d7, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x516, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x515, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x508, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x507, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x502, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x4d6, 4), (stack, 0xffffffffffffff28, 8) COPY (unique, 0x10000922, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x516, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x515, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x508, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x507, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x502, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x10000999, 8) , (const, 0x4d6, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x516, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x515, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x508, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x507, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x502, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x100009a1, 8) , (const, 0x4d6, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x516, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x515, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x508, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x507, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x502, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x100009a9, 8) , (const, 0x4d6, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x516, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x515, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x508, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x507, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x502, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x100009b1, 8) , (const, 0x4d6, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x516, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x515, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x508, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x507, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x502, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100009b9, 8) , (const, 0x4d6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x516, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x515, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x508, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x507, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x502, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x4d7, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100009c1, 8) , (const, 0x4d6, 4)]
[(unique, 0x100009c9, 8) COPY (stack, 0xffffffffffffff20, 8), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x516, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x515, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x508, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x507, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x502, 4), (stack, 0xffffffffffffff20, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xd, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x519, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x516, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x511, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x50e, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x50b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x508, 4), (ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000950, 8) , (const, 0x4d7, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x519, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x516, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x511, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x50e, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x50b, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x508, 4), (ram, 0x4c7d40, 8) INDIRECT (unique, 0x10000958, 8) , (const, 0x4d7, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x519, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x516, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x511, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x50e, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x50b, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x508, 4), (ram, 0x4c7d48, 1) INDIRECT (unique, 0x10000960, 1) , (const, 0x4d7, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x519, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x516, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x511, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x50e, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x50b, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x508, 4), (ram, 0x4c7d58, 8) INDIRECT (unique, 0x10000961, 8) , (const, 0x4d7, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x519, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x516, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x511, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x50e, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x50b, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x508, 4), (ram, 0x4c7d60, 4) INDIRECT (unique, 0x10000969, 4) , (const, 0x4d7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x519, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x516, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x511, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x50e, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x50b, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x508, 4), (ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000096d, 4) , (const, 0x4d7, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x519, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x516, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x511, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x50e, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x50b, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x508, 4), (ram, 0x4c8990, 4) INDIRECT (unique, 0x10000971, 4) , (const, 0x4d7, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x519, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x516, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x511, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x50e, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x50b, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x508, 4), (ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000975, 4) , (const, 0x4d7, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x519, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x516, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x511, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x50e, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x50b, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x508, 4), (ram, 0x4c89c0, 4) INDIRECT (unique, 0x10000979, 4) , (const, 0x4d7, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x519, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x516, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x511, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x50e, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x50b, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x508, 4), (ram, 0x4c89f0, 4) INDIRECT (unique, 0x1000097d, 4) , (const, 0x4d7, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x519, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x516, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x511, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x50e, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x50b, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x508, 4), (ram, 0x4c89f4, 4) INDIRECT (unique, 0x10000981, 4) , (const, 0x4d7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000940, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x242e40, 8) , (register, 0x20, 8) , (const, 0x80000001, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100002ed, 8) , (const, 0x1, 8), (unique, 0x100002ed, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1c, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000af5, 8), (unique, 0x10000af5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2299d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b45, 8) , (const, 0x2299f8, 8), (unique, 0x10000b45, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x10000715, 8) , (const, 0x1, 8), (unique, 0x10000715, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5ce, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5ce, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5ce, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5ce, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5ce, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5ce, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5ce, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5ce, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5ce, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5ce, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5ce, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5ce, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x5ce, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5cd, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5ce, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5cd, 4)]
[ ---  CBRANCH (ram, 0x229a2e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000b4d, 8) , (unique, 0x100009c9, 8), (unique, 0x10000b4d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x155860, 8) , (register, 0x20, 8) , (unique, 0x100009c9, 8) , (unique, 0x100005a5, 8) , (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x17, 8), (unique, 0x100005a5, 8) COPY (const, 0x28f234, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b55, 8) , (const, 0x229a3f, 8), (unique, 0x10000b55, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x1000071d, 8) , (const, 0x1, 8), (unique, 0x1000071d, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5f5, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x5f5, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5f4, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5f5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5f4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5f8, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5f5, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5f8, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5f5, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5f8, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5f5, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5f8, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5f5, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5f8, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5f5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5f8, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5f5, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5f8, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5f5, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5f8, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5f5, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5f8, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5f5, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5f8, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5f5, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5f8, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5f5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x242e40, 8) , (register, 0x20, 8) , (const, 0x80000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2297e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5e1, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5e1, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5e1, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5e1, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5e1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5e1, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5e1, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5e1, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5e1, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5e1, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5e1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100009d1, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5ec, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5e4, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5ec, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5e4, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5ec, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5e4, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5ec, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5e4, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5ec, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5e4, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5ec, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5e4, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5ec, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5e4, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5ec, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5e4, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5ec, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5e4, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5ec, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5e4, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5ec, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5e4, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b5d, 8) , (stack, 0xffffffffffffff1c, 4), (unique, 0x10000b5d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5e4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[ ---  BRANCH (ram, 0x2297e3, 1)]
[ ---  CBRANCH (ram, 0x229960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d48, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b65, 8) , (const, 0x22996b, 8), (unique, 0x10000b65, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x1000070d, 8) , (const, 0x1, 8), (unique, 0x1000070d, 8) INT_ADD (unique, 0x100002ed, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x1000074d, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b75, 8) , (const, 0x73736e5f, 4), (unique, 0x10000b75, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x1000072d, 8) , (const, 0x1, 8), (unique, 0x1000072d, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x1000079d, 8) , (const, 0x1, 8), (unique, 0x1000079d, 8) INT_ADD (unique, 0x10000735, 8) , (const, 0x4, 8), (unique, 0x10000735, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b7d, 8) , (const, 0x22998f, 8), (unique, 0x10000b7d, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100007a5, 8) , (const, 0x1, 8), (unique, 0x100007a5, 8) INT_ADD (unique, 0x1000073d, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000073d, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x696e695f, 4), (register, 0x0, 8) CAST (unique, 0x10000b85, 8), (unique, 0x10000b85, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x10000795, 8) , (const, 0x1, 8), (unique, 0x10000795, 8) INT_ADD (unique, 0x10000725, 8) , (const, 0x5, 8), (unique, 0x10000725, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b8d, 8) , (const, 0x74, 2), (unique, 0x10000b8d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x10000b85, 8), (unique, 0x10000b85, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8), (unique, 0x3800, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x10000795, 8) , (const, 0x1, 8), (unique, 0x10000795, 8) INT_ADD (unique, 0x10000725, 8) , (const, 0x5, 8), (unique, 0x10000725, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b95, 8) , (const, 0x2299aa, 8), (unique, 0x10000b95, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100007ad, 8) , (const, 0x1, 8), (unique, 0x100007ad, 8) INT_ADD (unique, 0x10000745, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000745, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x585, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x578, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x552, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x585, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x57f, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x57b, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x578, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x552, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x585, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x57f, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x57b, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x578, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x552, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x585, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x57f, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x57b, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x578, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x552, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x585, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x57f, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x57b, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x578, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x552, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x585, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x57f, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x57b, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x578, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x552, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x585, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x57f, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x57b, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x578, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x552, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x585, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x57f, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x57b, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x578, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x552, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x585, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x57f, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x57b, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x578, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x552, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x585, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x57f, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x57b, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x578, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x552, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x585, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x57f, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x57b, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x578, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x552, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x585, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x57f, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x57b, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x578, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x552, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x585, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x584, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x578, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x577, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x575, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x572, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x552, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x551, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x585, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x584, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x578, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x577, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x575, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x572, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x552, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x585, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x584, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x578, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x577, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x575, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x572, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x552, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x585, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x584, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x578, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x577, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x575, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x572, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x552, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x585, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x584, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x578, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x577, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x575, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x572, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x552, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x585, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x584, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x578, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x577, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x575, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x572, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x552, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x585, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x584, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x578, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x577, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x575, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x572, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x552, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x585, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x584, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x578, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x577, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x575, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x572, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x552, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x551, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x585, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x584, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x578, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x577, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x575, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x572, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x552, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x551, 4)]
[ ---  CBRANCH (ram, 0x2299c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000b9d, 8), (unique, 0x10000b9d, 8) CALL (ram, 0x242ee0, 8) , (unique, 0xbd80, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x10000755, 8) , (const, 0x1, 8), (unique, 0x10000755, 8) INT_ADD (unique, 0x1000036e, 8) , (unique, 0x100002ed, 8), (unique, 0x1000036e, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000b6d, 8), (unique, 0x10000b6d, 8) CAST (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bad, 8) , (const, 0x2299c5, 8), (unique, 0x10000bad, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000922, 8) , (unique, 0x100007b5, 8) , (const, 0x1, 8), (unique, 0x100007b5, 8) INT_ADD (unique, 0x1000074d, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5b2, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5b2, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x5b2, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x5b2, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x5b2, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x5b2, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x5b2, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x5b2, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x5b2, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x5b2, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x5b2, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x5b2, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x5b2, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5b1, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5b2, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5b1, 4)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_XOR (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000ba5, 8), (unique, 0x10000ba5, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x38, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c7d40, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c7d40, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bb5, 8), (unique, 0x10000bb5, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(unique, 0x10000a75, 8) COPY (stack, 0xffffffffffffff28, 8), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100009c1, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (unique, 0x100009b9, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff70, 8) MULTIEQUAL (unique, 0x100009b1, 8) , (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (unique, 0x100009a9, 8) , (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff48, 8) MULTIEQUAL (unique, 0x100009a1, 8) , (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (unique, 0x10000991, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (unique, 0x10000989, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (unique, 0x10000985, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (unique, 0x10000981, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (unique, 0x1000097d, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (unique, 0x10000979, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (unique, 0x10000975, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (unique, 0x10000971, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (unique, 0x1000096d, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (unique, 0x10000969, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (unique, 0x10000961, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (unique, 0x10000960, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (unique, 0x10000958, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000950, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000948, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bbd, 8), (unique, 0x10000bbd, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (unique, 0x10000999, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[ ---  CBRANCH (ram, 0x229800, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bbd, 8), (unique, 0x10000bbd, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) MULTIEQUAL (unique, 0x10000999, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bc5, 8) , (const, 0x229820, 8), (unique, 0x10000bc5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (unique, 0x10000922, 8) , (unique, 0x10000922, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x3ef, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100008a9, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x3ef, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100008b1, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x3ef, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100008b9, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x3ef, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100008ba, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x3ef, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x100008c2, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x3ef, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x100008c6, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x3ef, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x100008ca, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x3ef, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x100008ce, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x3ef, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x100008d2, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x3ef, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x100008d6, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x3ef, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x100008da, 4) , (ram, 0x4c89f4, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x3ef, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x3ee, 4), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (unique, 0x100008de, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x100008e2, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (unique, 0x100008ea, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffff38, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (unique, 0x100008fa, 8) , (stack, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0x10000902, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (unique, 0x1000090a, 8) , (stack, 0xffffffffffffff70, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000912, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3ef, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x3ee, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000091a, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x229845, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x1000058d, 8) , (const, 0x0, 8) , (unique, 0x100005c5, 8) , (unique, 0x3100, 8), (unique, 0x100005c5, 8) COPY (const, 0x2927f0, 8), (unique, 0x1000058d, 8) COPY (const, 0x28dfde, 8)]
[(unique, 0x100003d4, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100003dc, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x100003e4, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x100003e5, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x100003ed, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x100003f1, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x100003f5, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x100003f9, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x100003fd, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x10000401, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x10000405, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x10000411, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(unique, 0x10000415, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x1000041d, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x1000042d, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x10000435, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x1000043d, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10000445, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x1000044d, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x229845, 1) , (unique, 0x100003d3, 1), (unique, 0x100003d3, 1) INT_NOTEQUAL (unique, 0x1000055a, 8) , (const, 0x0, 8), (unique, 0x1000055a, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bcd, 8) , (const, 0x229835, 8), (unique, 0x10000bcd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x100003d4, 8) , (const, 0x40a, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (unique, 0x100003dc, 8) , (const, 0x40a, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (unique, 0x100003e4, 1) , (const, 0x40a, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (unique, 0x100003e5, 8) , (const, 0x40a, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (unique, 0x100003ed, 4) , (const, 0x40a, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x100003f1, 4) , (const, 0x40a, 4)]
[(ram, 0x4c8990, 4) INDIRECT (unique, 0x100003f5, 4) , (const, 0x40a, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (unique, 0x100003f9, 4) , (const, 0x40a, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (unique, 0x100003fd, 4) , (const, 0x40a, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (unique, 0x10000401, 4) , (const, 0x40a, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (unique, 0x10000405, 4) , (const, 0x40a, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x40a, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (unique, 0x10000411, 4) , (const, 0x409, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x10000415, 8) , (const, 0x409, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (unique, 0x1000041d, 8) , (const, 0x409, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x1000042d, 8) , (const, 0x409, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x10000435, 8) , (const, 0x409, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000043d, 8) , (const, 0x409, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10000445, 8) , (const, 0x409, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x1000044d, 8) , (const, 0x409, 4)]
[ ---  CALL (ram, 0x2286d0, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bd5, 8), (unique, 0x10000bd5, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x40a, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x1000055a, 8) , (const, 0x409, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bdd, 8) , (const, 0x229865, 8), (unique, 0x10000bdd, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x430, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100003d4, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x430, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100003dc, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x430, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100003e4, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x430, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100003e5, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x430, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x100003ed, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x430, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x100003f1, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x430, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x100003f5, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x430, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x100003f9, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x430, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x100003fd, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x430, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x10000401, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x430, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x10000405, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x430, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x42f, 4), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (unique, 0x10000411, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x430, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x10000415, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x430, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (unique, 0x1000041d, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x430, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffff38, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x430, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (unique, 0x1000042d, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x430, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0x10000435, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x430, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (unique, 0x1000043d, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x430, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000445, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x430, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x42f, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000044d, 8)]
[ ---  CBRANCH (ram, 0x22988d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x1000059d, 8) , (const, 0x0, 8) , (unique, 0x1000057d, 8) , (unique, 0x3100, 8), (unique, 0x1000059d, 8) COPY (const, 0x28eea7, 8), (unique, 0x1000057d, 8) COPY (const, 0x28ddb3, 8)]
[(unique, 0x1000080e, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000816, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x1000081e, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x1000081f, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x10000827, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x1000082b, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x1000082f, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000833, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000837, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x1000083b, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x1000083f, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x10000843, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(unique, 0x10000847, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x1000084f, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x1000085f, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x10000867, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x1000086f, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x10000877, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x1000087f, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x22988d, 1) , (unique, 0x1000080d, 1), (unique, 0x1000080d, 1) INT_NOTEQUAL (unique, 0x10000894, 8) , (const, 0x0, 8), (unique, 0x10000894, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000be5, 8) , (const, 0x22987d, 8), (unique, 0x10000be5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x1000080e, 8) , (const, 0x44d, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (unique, 0x10000816, 8) , (const, 0x44d, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (unique, 0x1000081e, 1) , (const, 0x44d, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (unique, 0x1000081f, 8) , (const, 0x44d, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (unique, 0x10000827, 4) , (const, 0x44d, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000082b, 4) , (const, 0x44d, 4)]
[(ram, 0x4c8990, 4) INDIRECT (unique, 0x1000082f, 4) , (const, 0x44d, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000833, 4) , (const, 0x44d, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (unique, 0x10000837, 4) , (const, 0x44d, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (unique, 0x1000083b, 4) , (const, 0x44d, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (unique, 0x1000083f, 4) , (const, 0x44d, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x44d, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (unique, 0x10000843, 4) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x10000847, 8) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (unique, 0x1000084f, 8) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x1000085f, 8) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x10000867, 8) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x1000086f, 8) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x10000877, 8) , (const, 0x44c, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x1000087f, 8) , (const, 0x44c, 4)]
[ ---  CALL (ram, 0x2286d0, 8)]
[(stack, 0xffffffffffffff38, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bed, 8), (unique, 0x10000bed, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x44d, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x10000894, 8) , (const, 0x44c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bf5, 8) , (const, 0x2298a8, 8), (unique, 0x10000bf5, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x47c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x1000080e, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x47c, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x10000816, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x47c, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x1000081e, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x47c, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x1000081f, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x47c, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x10000827, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x47c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x1000082b, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x47c, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x1000082f, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x47c, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x10000833, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x47c, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x10000837, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x47c, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x1000083b, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x47c, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x1000083f, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x47c, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x47b, 4), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (unique, 0x10000843, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (unique, 0x10000847, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (unique, 0x1000084f, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffff38, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffff48, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (unique, 0x1000085f, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (unique, 0x10000867, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffff70, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (unique, 0x1000086f, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000877, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x47c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x47b, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x1000087f, 8)]
[ ---  CBRANCH (ram, 0x2298cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CAST (unique, 0x10000bfd, 8), (unique, 0x10000bfd, 8) CALL (ram, 0x228950, 8) , (unique, 0x100005b5, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x100005b5, 8) COPY (const, 0x28f29a, 8)]
[(unique, 0x10000456, 8) MULTIEQUAL (unique, 0x100009d9, 8) , (register, 0x0, 8)]
[(unique, 0x1000045e, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000466, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x1000046e, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x1000046f, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x10000477, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x1000047b, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x1000047f, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x10000483, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000487, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x1000048b, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x1000048f, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x1000049b, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(unique, 0x1000049f, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(unique, 0x100004a7, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(unique, 0x100004b7, 8) MULTIEQUAL (stack, 0xffffffffffffff48, 8) , (stack, 0xffffffffffffff48, 8)]
[(unique, 0x100004bf, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(unique, 0x100004c7, 8) MULTIEQUAL (stack, 0xffffffffffffff70, 8) , (stack, 0xffffffffffffff70, 8)]
[(unique, 0x100004cf, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100004d7, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x2298cd, 1) , (unique, 0x10000455, 1), (unique, 0x10000455, 1) INT_NOTEQUAL (unique, 0x10000562, 8) , (const, 0x0, 8), (unique, 0x10000562, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c05, 8) , (const, 0x2298bd, 8), (unique, 0x10000c05, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x1000045e, 8) , (const, 0x497, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (unique, 0x10000466, 8) , (const, 0x497, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (unique, 0x1000046e, 1) , (const, 0x497, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (unique, 0x1000046f, 8) , (const, 0x497, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (unique, 0x10000477, 4) , (const, 0x497, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (unique, 0x1000047b, 4) , (const, 0x497, 4)]
[(ram, 0x4c8990, 4) INDIRECT (unique, 0x1000047f, 4) , (const, 0x497, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (unique, 0x10000483, 4) , (const, 0x497, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (unique, 0x10000487, 4) , (const, 0x497, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (unique, 0x1000048b, 4) , (const, 0x497, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (unique, 0x1000048f, 4) , (const, 0x497, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x497, 4), (stack, 0xffffffffffffff1c, 4) INDIRECT (unique, 0x1000049b, 4) , (const, 0x496, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (unique, 0x1000049f, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (unique, 0x100004a7, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (unique, 0x100004b7, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (unique, 0x100004bf, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (unique, 0x100004c7, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x497, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0x100004cf, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x497, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x100004d7, 8) , (const, 0x496, 4)]
[ ---  CALL (ram, 0x2286d0, 8)]
[(unique, 0x100009d9, 8) COPY (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x10000562, 8) , (const, 0x496, 4)]
[(stack, 0xffffffffffffff38, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000c0d, 8), (unique, 0x10000c0d, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff38, 8), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x497, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (unique, 0x10000562, 8) , (const, 0x496, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x1000045e, 8)]
[(ram, 0x4c7d40, 8) COPY (ram, 0x4c7d40, 8), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x10000466, 8)]
[(ram, 0x4c7d48, 1) COPY (ram, 0x4c7d48, 1), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x1000046e, 1)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x1000046f, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x10000477, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x1000047b, 4)]
[(ram, 0x4c8990, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89b0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89c0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89f0, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4c89f4, 4) COPY (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000456, 8)]
[ ---  CBRANCH (ram, 0x22936f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000c21, 8), (unique, 0x10000c21, 8) INT_ADD (unique, 0x10000c19, 8) , (unique, 0x1000067d, 8), (unique, 0x10000c19, 8) CAST (unique, 0xbd80, 8), (unique, 0x1000067d, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x8, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (register, 0x80, 8) INT_SEXT (unique, 0x10000c15, 4), (unique, 0x10000c15, 4) CAST (register, 0x80, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) COPY (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) COPY (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) COPY (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) COPY (ram, 0x4c89f4, 4)]
[ ---  RETURN (const, 0x0, 8) , (unique, 0x10000c29, 8), (unique, 0x10000c29, 8) CAST (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x229610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x100000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22936f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x100000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) COPY (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) COPY (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) COPY (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) COPY (ram, 0x4c89f4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2295b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000c31, 8), (unique, 0x10000c31, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffaf, 1) COPY (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2293cb, 1)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (unique, 0x10000545, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x1000053d, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (unique, 0x10000535, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0x1000052d, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0x10000525, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (unique, 0x1000051d, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x100004e0, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x63, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100004e8, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x63, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100004f0, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x63, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100004f8, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x63, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100004f9, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x63, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x10000501, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x63, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x10000509, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x63, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x1000050d, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x63, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x10000511, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x63, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x10000515, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x63, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x10000519, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000546, 8)]
[ ---  CBRANCH (ram, 0x2293f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x63, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000505, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x229415, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22940e, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x298, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x298, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x298, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x298, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x298, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x298, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x298, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x298, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x298, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x298, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x298, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x298, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x298, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x298, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x297, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x298, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x297, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x100005d5, 8), (unique, 0x100005d5, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22942b, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x96, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x96, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x96, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x96, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x96, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x96, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x96, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x96, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x96, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x96, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x96, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x96, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x96, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x95, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x96, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x95, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x96, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x95, 4), (stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x96, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x95, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x96, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x95, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x229620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000c41, 8), (unique, 0x10000c41, 8) CALL (ram, 0x2024f0, 8) , (unique, 0x3100, 8) , (unique, 0x10000c39, 8) , (unique, 0x1000056d, 8), (unique, 0x10000c39, 8) CAST (unique, 0x3100, 8), (unique, 0x1000056d, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x22945b, 1)]
[ ---  CBRANCH (ram, 0x2294c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000c49, 8) , (unique, 0x3100, 8), (unique, 0x10000c49, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2294ce, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x19a, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x19a, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x19a, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x19a, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x19a, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x19a, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x19a, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x19a, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x19a, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x19a, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x199, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x19a, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x199, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x199, 4)]
[(unique, 0x10000a19, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000c51, 8), (unique, 0x10000c51, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x229630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000c51, 8), (unique, 0x10000c51, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffff98, 8) , (unique, 0x10000c59, 8), (unique, 0x10000c59, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2294f4, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b6, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b6, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1b3, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x1b6, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x1b3, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x1b6, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x1b3, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x1aa, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1b6, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1b3, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1b6, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1b3, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b6, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1b3, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1b6, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1b3, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1b6, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1b3, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1b6, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1b3, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x1b6, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x1b3, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x1b6, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x1b3, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x1aa, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1b6, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1b5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b5, 4)]
[(unique, 0x10000a21, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1b6, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1b5, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x229630, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2286d0, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x229600, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c61, 8), (unique, 0x10000c61, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000a09, 8) COPY (stack, 0xffffffffffffff98, 8)]
[ ---  BRANCH (ram, 0x22958e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229527, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1e3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229537, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x73736e5f, 4), (register, 0x20, 8) CAST (unique, 0x10000c79, 8), (unique, 0x10000c79, 8) INT_ADD (unique, 0x10000c71, 8) , (unique, 0x10000205, 8), (unique, 0x10000c71, 8) CAST (register, 0x20, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) CAST (unique, 0x10000c91, 8), (unique, 0x10000c91, 8) INT_ADD (unique, 0x10000c89, 8) , (unique, 0x10000655, 8), (unique, 0x10000c89, 8) CAST (register, 0x20, 8), (unique, 0x10000655, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0x4, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229561, 8), (register, 0x20, 8) CAST (unique, 0x10000ca1, 8), (unique, 0x10000ca1, 8) INT_ADD (unique, 0x10000c99, 8) , (unique, 0x1000065d, 8), (unique, 0x10000c99, 8) CAST (register, 0x20, 8), (unique, 0x1000065d, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5f, 1), (register, 0x0, 8) CAST (unique, 0x10000ca9, 8), (unique, 0x10000ca9, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x100009e1, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x10000c81, 8) , (unique, 0x1000064d, 8), (unique, 0x10000c81, 8) CAST (register, 0x20, 8), (unique, 0x1000064d, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0x5, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (unique, 0x100009e1, 8) COPY (stack, 0xffffffffffffff88, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff88, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229570, 8), (register, 0x20, 8) CAST (unique, 0x10000cb9, 8), (unique, 0x10000cb9, 8) INT_ADD (unique, 0x10000cb1, 8) , (unique, 0x10000665, 8), (unique, 0x10000cb1, 8) CAST (register, 0x20, 8), (unique, 0x10000665, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (unique, 0x100009f9, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CAST (unique, 0x10000ca9, 8), (unique, 0x10000ca9, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x100009e1, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x10000c81, 8) , (unique, 0x1000064d, 8), (unique, 0x10000c81, 8) CAST (register, 0x20, 8), (unique, 0x1000064d, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0x5, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (unique, 0x100009e1, 8) COPY (stack, 0xffffffffffffff88, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff88, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22957c, 8), (register, 0x20, 8) CAST (unique, 0x10000cd1, 8), (unique, 0x10000cd1, 8) INT_ADD (unique, 0x10000cc9, 8) , (unique, 0x1000066d, 8), (unique, 0x10000cc9, 8) CAST (register, 0x20, 8), (unique, 0x1000066d, 8) INT_ADD (unique, 0x10000205, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000205, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffff90, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100009f9, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (unique, 0x100009f9, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x223, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x21c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x214, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ee, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x223, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x21c, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x219, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x214, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1ee, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e4, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x223, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x21c, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x219, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x214, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x1ee, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x1e4, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x223, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x21c, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x219, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x214, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x1ee, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x1e4, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x223, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x21c, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x219, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x214, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1ee, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x1e4, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x223, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x21c, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x219, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x214, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1ee, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1e4, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x223, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x21c, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x219, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x214, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1ee, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1e4, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x223, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x21c, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x219, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x214, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1ee, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x1e4, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x223, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x21c, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x219, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x214, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1ee, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x1e4, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x223, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x21c, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x219, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x214, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1ee, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x1e4, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x223, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x21c, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x219, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x214, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x1ee, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x1e4, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x223, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x21c, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x219, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x214, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x1ee, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x1e4, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x222, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x214, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x213, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x211, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff88, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x222, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x214, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x213, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x211, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff90, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x10000c69, 8), (unique, 0x10000c69, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x222, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x214, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x213, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1e3, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x223, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x222, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x21c, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x21b, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x214, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x213, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x211, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x20e, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1ee, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1ed, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1e4, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x1e3, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x222, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x214, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x213, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1e3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x222, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x214, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x213, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x211, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e3, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x242ee0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cc1, 8), (unique, 0x10000cc1, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[(unique, 0x10000a11, 8) COPY (stack, 0xffffffffffffff80, 8), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x222, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x214, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x213, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x211, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff80, 8) COPY (stack, 0xffffffffffffff98, 8)]
[(unique, 0x10000a31, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x223, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x222, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x21c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x21b, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x214, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x213, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x211, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ee, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ed, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1e4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1e3, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x30, 1)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000a31, 8) , (register, 0x20, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x256, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x256, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x256, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x256, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x256, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x256, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x256, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x256, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x256, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x256, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x256, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000ce1, 8), (unique, 0x10000ce1, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000cd9, 8), (unique, 0x10000cd9, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a11, 8) , (unique, 0x10000a09, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x22945b, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229646, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x2028b0, 8) , (unique, 0x3100, 8) , (unique, 0x10000ce9, 8) , (unique, 0x10000575, 8), (unique, 0x10000ce9, 8) CAST (unique, 0x3100, 8), (unique, 0x10000575, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x229652, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x273, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x273, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x26c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x273, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x26c, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x273, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x26c, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x273, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x26c, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x273, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x26c, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x273, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x26c, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x273, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x26c, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x273, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x26c, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x273, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x26c, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x273, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x26c, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x273, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x26c, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x273, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x272, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x273, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x272, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x273, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x272, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x273, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x272, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a19, 8) , (unique, 0x10000a21, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x273, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x272, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x273, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x272, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x26c, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x26b, 4), (stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x273, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x272, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x273, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x272, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100009e9, 8), (unique, 0x100009e9, 8) COPY (stack, 0xffffffffffffff98, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x26c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x26b, 4), (stack, 0xffffffffffffff98, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000a19, 8) , (unique, 0x10000a21, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x22945b, 1)]
[(register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000d11, 8), (unique, 0x10000d11, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x10000d09, 8) , (const, 0x2f, 4), (unique, 0x10000d09, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x10000d01, 8) , (const, 0x11, 4), (unique, 0x10000d01, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cf9, 8), (unique, 0x10000cf9, 8) INT_ADD (unique, 0x10000cf1, 8) , (const, 0x8, 8), (unique, 0x10000cf1, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x30, 1) , (register, 0x30, 1) , (register, 0x30, 1)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22946f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000a55, 4) COPY (unique, 0x10000887, 4), (unique, 0x10000887, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x229491, 1) , (unique, 0x1000088b, 1), (unique, 0x1000088b, 1) INT_NOTEQUAL (unique, 0x10000887, 4) , (const, 0x0, 4), (unique, 0x10000887, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x22948a, 8), (register, 0x20, 8) CAST (unique, 0x10000d21, 8), (unique, 0x10000d21, 8) INT_ADD (unique, 0x10000d19, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000d19, 8) CAST (register, 0x20, 8)]
[(register, 0x30, 1) INDIRECT (register, 0x30, 1) , (const, 0x181, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x181, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x181, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x181, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x181, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x181, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x181, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x181, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x181, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x181, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x181, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x181, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x181, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x181, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x181, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x181, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x181, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x181, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x180, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x181, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x180, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x181, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x180, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100005cd, 8), (unique, 0x100005cd, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x10000a29, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x181, 4)]
[(unique, 0x10000a51, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x181, 4), (ram, 0x4c7d60, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100009f1, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xfe, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0xfe, 4), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0xfe, 4), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0xfe, 4), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xfe, 4), (ram, 0x4c7d60, 4) COPY (unique, 0x10000a59, 4), (unique, 0x10000a59, 4) MULTIEQUAL (unique, 0x10000a51, 4) , (unique, 0x10000a55, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xfe, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0xfe, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0xfe, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0xfe, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0xfe, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0xfe, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000a29, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x229390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffaf, 1) , (const, 0x0, 1), (stack, 0xffffffffffffffaf, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[ ---  CBRANCH (ram, 0x22949e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x2293a5, 8), (register, 0x20, 8) CAST (unique, 0x10000d31, 8), (unique, 0x10000d31, 8) INT_ADD (unique, 0x10000d29, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000d29, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x167, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x167, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x167, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x167, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x167, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x167, 4), (stack, 0xffffffffffffffaf, 1) INDIRECT (stack, 0xffffffffffffffaf, 1) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x166, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x166, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x172, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x167, 4)]
[(ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x172, 4), (ram, 0x4c7d40, 8) INDIRECT (ram, 0x4c7d40, 8) , (const, 0x167, 4)]
[(ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x172, 4), (ram, 0x4c7d48, 1) INDIRECT (ram, 0x4c7d48, 1) , (const, 0x167, 4)]
[(ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x172, 4), (ram, 0x4c7d58, 8) INDIRECT (ram, 0x4c7d58, 8) , (const, 0x167, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x172, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x167, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x172, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x167, 4)]
[(ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x172, 4), (ram, 0x4c8990, 4) INDIRECT (ram, 0x4c8990, 4) , (const, 0x167, 4)]
[(ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x172, 4), (ram, 0x4c89b0, 4) INDIRECT (ram, 0x4c89b0, 4) , (const, 0x167, 4)]
[(ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x172, 4), (ram, 0x4c89c0, 4) INDIRECT (ram, 0x4c89c0, 4) , (const, 0x167, 4)]
[(ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x172, 4), (ram, 0x4c89f0, 4) INDIRECT (ram, 0x4c89f0, 4) , (const, 0x167, 4)]
[(ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x172, 4), (ram, 0x4c89f4, 4) INDIRECT (ram, 0x4c89f4, 4) , (const, 0x167, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x228e50, 8) , (unique, 0xbd80, 8) , (unique, 0x100009f1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100004e0, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100004e8, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x100004f0, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8) , (ram, 0x4c7d40, 8)]
[(unique, 0x100004f8, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1) , (ram, 0x4c7d48, 1)]
[(unique, 0x100004f9, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8) , (ram, 0x4c7d58, 8)]
[(unique, 0x10000501, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(unique, 0x10000505, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(unique, 0x10000509, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4) , (ram, 0x4c8990, 4)]
[(unique, 0x1000050d, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4) , (ram, 0x4c89b0, 4)]
[(unique, 0x10000511, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4) , (ram, 0x4c89c0, 4)]
[(unique, 0x10000515, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4) , (ram, 0x4c89f0, 4)]
[(unique, 0x10000519, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4) , (ram, 0x4c89f4, 4)]
[(unique, 0x1000051d, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8)]
[(unique, 0x10000525, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000052d, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000535, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x1000053d, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000545, 1) MULTIEQUAL (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1) , (stack, 0xffffffffffffffaf, 1)]
[(unique, 0x10000546, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x2293b1, 1) , (unique, 0x100004df, 1), (unique, 0x100004df, 1) INT_NOTEQUAL (unique, 0x1000054f, 8) , (const, 0x0, 8), (unique, 0x1000054f, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c2e78, 8) COPY (unique, 0x100004e8, 8)]
[(ram, 0x4c7d40, 8) COPY (unique, 0x100004f0, 8)]
[(ram, 0x4c7d48, 1) COPY (unique, 0x100004f8, 1)]
[(ram, 0x4c7d58, 8) COPY (unique, 0x100004f9, 8)]
[(ram, 0x4c7d60, 4) COPY (unique, 0x10000501, 4)]
[(ram, 0x4c87a0, 4) COPY (unique, 0x10000505, 4)]
[(ram, 0x4c8990, 4) COPY (unique, 0x10000509, 4)]
[(ram, 0x4c89b0, 4) COPY (unique, 0x1000050d, 4)]
[(ram, 0x4c89c0, 4) COPY (unique, 0x10000511, 4)]
[(ram, 0x4c89f0, 4) COPY (unique, 0x10000515, 4)]
[(ram, 0x4c89f4, 4) COPY (unique, 0x10000519, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2295b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d41, 8), (unique, 0x10000d41, 8) INT_ADD (unique, 0x10000d39, 8) , (const, 0xc, 8), (unique, 0x10000d39, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x2295b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000d49, 8), (unique, 0x10000d49, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x100004e8, 8) , (unique, 0x100004e8, 8)]
[(ram, 0x4c7d40, 8) COPY (ram, 0x4c7d40, 8), (ram, 0x4c7d40, 8) MULTIEQUAL (ram, 0x4c7d40, 8) , (unique, 0x100004f0, 8) , (unique, 0x100004f0, 8)]
[(ram, 0x4c7d48, 1) COPY (ram, 0x4c7d48, 1), (ram, 0x4c7d48, 1) MULTIEQUAL (ram, 0x4c7d48, 1) , (unique, 0x100004f8, 1) , (unique, 0x100004f8, 1)]
[(ram, 0x4c7d58, 8) COPY (ram, 0x4c7d58, 8), (ram, 0x4c7d58, 8) MULTIEQUAL (ram, 0x4c7d58, 8) , (unique, 0x100004f9, 8) , (unique, 0x100004f9, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (unique, 0x10000501, 4) , (unique, 0x10000501, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (unique, 0x10000505, 4) , (unique, 0x10000505, 4)]
[(ram, 0x4c8990, 4) COPY (ram, 0x4c8990, 4), (ram, 0x4c8990, 4) MULTIEQUAL (ram, 0x4c8990, 4) , (unique, 0x10000509, 4) , (unique, 0x10000509, 4)]
[(ram, 0x4c89b0, 4) COPY (ram, 0x4c89b0, 4), (ram, 0x4c89b0, 4) MULTIEQUAL (ram, 0x4c89b0, 4) , (unique, 0x1000050d, 4) , (unique, 0x1000050d, 4)]
[(ram, 0x4c89c0, 4) COPY (ram, 0x4c89c0, 4), (ram, 0x4c89c0, 4) MULTIEQUAL (ram, 0x4c89c0, 4) , (unique, 0x10000511, 4) , (unique, 0x10000511, 4)]
[(ram, 0x4c89f0, 4) COPY (ram, 0x4c89f0, 4), (ram, 0x4c89f0, 4) MULTIEQUAL (ram, 0x4c89f0, 4) , (unique, 0x10000515, 4) , (unique, 0x10000515, 4)]
[(ram, 0x4c89f4, 4) COPY (ram, 0x4c89f4, 4), (ram, 0x4c89f4, 4) MULTIEQUAL (ram, 0x4c89f4, 4) , (unique, 0x10000519, 4) , (unique, 0x10000519, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
