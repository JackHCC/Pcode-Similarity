[(register, 0x88, 8) INT_AND (unique, 0x100000fd, 8) , (const, 0xffffffffffff, 8), (unique, 0x100000fd, 8) INT_ADD (unique, 0x100001b5, 8) , (register, 0x1208, 4), (unique, 0x100001b5, 8) INT_LEFT (unique, 0x100001ad, 8) , (const, 0x20, 8), (unique, 0x100001ad, 8) INT_SEXT (unique, 0x100001cd, 4), (unique, 0x100001cd, 4) CAST (register, 0x120c, 4)]
[(register, 0x30, 8) INT_AND (unique, 0x1000010d, 8) , (const, 0xffffffffffff, 8), (unique, 0x1000010d, 8) INT_ADD (unique, 0x100001c5, 8) , (register, 0x1228, 4), (unique, 0x100001c5, 8) INT_LEFT (unique, 0x100001bd, 8) , (const, 0x20, 8), (unique, 0x100001bd, 8) INT_SEXT (unique, 0x100001d1, 4), (unique, 0x100001d1, 4) CAST (register, 0x122c, 4)]
[(register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7fff, 4), (register, 0x10, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x492358, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x4923a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x492440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x49240d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x492468, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x88, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x4924b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x4923e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x4924a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a4, 4) , (const, 0x0, 4), (unique, 0x100001a4, 4) INT_AND (register, 0x120c, 4) , (const, 0x8000, 4)]
[ ---  CBRANCH (ram, 0x4924d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x492480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x1220, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x492424, 1)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x492390, 1)]
[(unique, 0x100000c9, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x4923e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x4923e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x1200, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x4923d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) INT_OR (register, 0x88, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x492400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x492350, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x492490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[(register, 0x80, 1) COPY (const, 0x2, 1)]
[ ---  BRANCH (ram, 0x492340, 1)]
[(register, 0x80, 1) COPY (const, 0x2, 1)]
[ ---  CBRANCH (ram, 0x492410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x4923e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1) , (unique, 0x100000c9, 1) , (unique, 0x100000c9, 1) , (register, 0x80, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4924bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x49245e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (register, 0x1200, 8) , (register, 0x88, 8)]
[(register, 0x80, 1) MULTIEQUAL (unique, 0x100000c9, 1) , (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x492450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000019c, 4) , (const, 0x0, 4), (unique, 0x1000019c, 4) INT_AND (register, 0x120c, 4) , (const, 0x8000, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4923ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x7fff, 4)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x492437, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8), (register, 0x38, 8) INT_OR (register, 0x1220, 8) , (register, 0x30, 8)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x492390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001a0, 4) , (const, 0x0, 4), (unique, 0x100001a0, 4) INT_AND (register, 0x122c, 4) , (const, 0x8000, 4)]
[(register, 0x80, 1) INT_OR (register, 0x80, 1) , (const, 0x1, 1), (register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x492340, 1)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x4923ea, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x492340, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x0, 1), (register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[ ---  CALL (ram, 0x492770, 8) , (register, 0x80, 1), (register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
