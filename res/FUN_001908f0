[ ---  CALL (ram, 0x189620, 8) , (const, 0x1, 8) , (unique, 0x10000178, 8) , (register, 0x38, 8), (unique, 0x10000178, 8) COPY (const, 0x2b6b9a, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x18, 4), (register, 0x38, 8) COPY (const, 0x1, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000268, 8), (unique, 0x10000268, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x18, 4), (register, 0x38, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000270, 8), (unique, 0x10000270, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x18, 4), (register, 0x38, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000230, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000260, 8), (unique, 0x10000260, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x18, 4), (register, 0x38, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000230, 8) , (unique, 0x10000238, 8)]
[(unique, 0x10000240, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x10000230, 8) , (unique, 0x10000238, 8)]
[ ---  CBRANCH (ram, 0x190a70, 1) , (unique, 0x1000015f, 1), (unique, 0x1000015f, 1) INT_NOTEQUAL (unique, 0x10000157, 8) , (const, 0x0, 8), (unique, 0x10000157, 8) MULTIEQUAL (unique, 0x10000240, 8) , (unique, 0x10000248, 8) , (unique, 0x10000250, 8)]
[ ---  CBRANCH (ram, 0x190ba2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000278, 8), (unique, 0x10000278, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000141, 4) , (const, 0x2, 4), (unique, 0x10000141, 4) SUBPIECE (unique, 0x1000006d, 8) , (const, 0x0, 4), (unique, 0x1000006d, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x4, 4), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000157, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000180, 8), (unique, 0x10000180, 8) COPY (const, 0x2b83f0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000280, 8), (unique, 0x10000280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000157, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000290, 8), (unique, 0x10000290, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000288, 8) , (register, 0x10, 8), (unique, 0x10000288, 8) CAST (unique, 0x10000157, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CBRANCH (ram, 0x1909d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000149, 8) , (const, 0x0, 8), (unique, 0x10000149, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000157, 8)]
[ ---  CBRANCH (ram, 0x190b00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100002b0, 8), (unique, 0x100002b0, 8) INT_ADD (unique, 0x100002a8, 8) , (register, 0x30, 8), (unique, 0x100002a8, 8) CAST (register, 0x0, 8), (register, 0x30, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) INT_SUB (unique, 0x10000298, 8) , (unique, 0xbd80, 8), (unique, 0x10000298, 8) CAST (unique, 0x10000157, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000157, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x190ab8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x190ab8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1909d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x190b10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x190b5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x190b5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x190b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x190b88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000300, 8), (unique, 0x10000300, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1909d0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000310, 8), (unique, 0x10000310, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000318, 8), (unique, 0x10000318, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1909d0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000328, 8), (unique, 0x10000328, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1909d0, 1)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000157, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x190aa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000330, 8), (unique, 0x10000330, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000338, 8), (unique, 0x10000338, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)]
[(unique, 0x10000250, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x190a61, 1)]
[ ---  CBRANCH (ram, 0x190a90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000348, 8), (unique, 0x10000348, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_ADD (unique, 0x3400, 8) , (register, 0x88, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x80, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  BRANCH (ram, 0x190a25, 1)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x190b00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x88, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000160, 8), (unique, 0x10000160, 8) COPY (const, 0x2b4c9d, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x190ab8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000368, 8), (unique, 0x10000368, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000358, 8), (unique, 0x10000358, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x190ab8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000168, 8), (unique, 0x10000168, 8) COPY (const, 0x2b4cba, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000378, 8), (unique, 0x10000378, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000380, 8), (unique, 0x10000380, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x190ac8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3ff, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x190a25, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000388, 8), (unique, 0x10000388, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x190b5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000390, 8), (unique, 0x10000390, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x190b5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000398, 8), (unique, 0x10000398, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x28, 8)]
[ ---  CALL (ram, 0x1908f0, 8) , (unique, 0x10000188, 8), (unique, 0x10000188, 8) COPY (const, 0x2b8420, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x190b66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003a8, 8), (unique, 0x100003a8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x190b95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b8, 8), (unique, 0x100003b8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x190a25, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d0, 8), (unique, 0x100003d0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003d8, 8), (unique, 0x100003d8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c8, 8), (unique, 0x100003c8, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e8, 8), (unique, 0x100003e8, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e0, 8), (unique, 0x100003e0, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x190a25, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f0, 8), (unique, 0x100003f0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000400, 8), (unique, 0x10000400, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x190a25, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000410, 8), (unique, 0x10000410, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000418, 8), (unique, 0x10000418, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000408, 8), (unique, 0x10000408, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[ ---  CBRANCH (ram, 0x190a4a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_OR (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x10000428, 8), (unique, 0x10000428, 8) INT_ADD (unique, 0x10000420, 8) , (register, 0x10, 8), (unique, 0x10000420, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000248, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000238, 8) COPY (register, 0x90, 8), (register, 0x90, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x19092d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (register, 0x90, 8)]
[ ---  RETURN (const, 0x0, 8)]
