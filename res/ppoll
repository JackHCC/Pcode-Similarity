[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000010a, 8), (unique, 0x1000010a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x214c7d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x1000005f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000112, 8), (unique, 0x10000112, 8) CAST (unique, 0x100000ca, 8), (unique, 0x100000ca, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x10000063, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000067, 8), (unique, 0x10000067, 8) CAST (unique, 0x10000122, 8), (unique, 0x10000122, 8) INT_ADD (unique, 0x1000011a, 8) , (const, 0x4, 8), (unique, 0x1000011a, 8) CAST (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[(unique, 0x1000006f, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000012a, 8), (unique, 0x1000012a, 8) CAST (unique, 0x10000073, 8), (unique, 0x10000073, 8) PTRSUB (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0x1000007b, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000007f, 8), (unique, 0x1000007f, 8) CAST (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) INT_ADD (unique, 0x10000132, 8) , (const, 0x4, 8), (unique, 0x10000132, 8) CAST (unique, 0x100000f2, 8), (unique, 0x100000f2, 8) PTRSUB (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (unique, 0x1000007b, 4)]
[(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (unique, 0x1000006f, 4)]
[(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (unique, 0x10000063, 4)]
[(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (unique, 0x1000005f, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x214cc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb8, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x95, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0xb8, 4), (stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xb8, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x95, 4)]
[ ---  CALL (ram, 0x230740, 8) , (register, 0x0, 4) , (register, 0x30, 8) , (register, 0x18, 8), (register, 0x0, 4) CALL (ram, 0x2306e0, 8)]
[ ---  BRANCH (ram, 0x214ca2, 1)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(stack, 0xffffffffffffffe4, 4) MULTIEQUAL (stack, 0xffffffffffffffe4, 4) , (stack, 0xffffffffffffffe4, 4)]
[(stack, 0xffffffffffffffe0, 4) MULTIEQUAL (stack, 0xffffffffffffffe0, 4) , (stack, 0xffffffffffffffe0, 4)]
[(stack, 0xffffffffffffffdc, 4) MULTIEQUAL (stack, 0xffffffffffffffdc, 4) , (stack, 0xffffffffffffffdc, 4)]
[(stack, 0xffffffffffffffd8, 4) MULTIEQUAL (stack, 0xffffffffffffffd8, 4) , (stack, 0xffffffffffffffd8, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x214d39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000142, 8), (unique, 0x10000142, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x10f, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffdc, 4) INDIRECT (stack, 0xffffffffffffffdc, 4) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x77, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x77, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x77, 4)]
[ ---  RETURN (const, 0x1, 4)]
