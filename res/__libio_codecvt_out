[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000cd, 8), (unique, 0x100000cd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x100000d5, 8), (unique, 0x100000d5, 8) INT_ADD (register, 0x38, 8) , (const, 0x60, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100000dd, 8), (unique, 0x100000dd, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) CAST (unique, 0x100000e5, 8), (unique, 0x100000e5, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000009b, 8) , (stack, 0x8, 8), (unique, 0x1000009b, 8) CAST (unique, 0x100000ed, 8), (unique, 0x100000ed, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x41aaa3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c5, 8), (unique, 0x100000c5, 8) INT_ADD (register, 0x38, 8) , (const, 0x38, 8)]
[(register, 0x28, 8) CAST (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) INT_XOR (register, 0x28, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x28, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x100000fd, 8) , (const, 0x2f, 4), (unique, 0x100000fd, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x100000f5, 8) , (const, 0x11, 4), (unique, 0x100000f5, 8) CAST (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x45a730, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x73, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x73, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8e, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x100000bd, 8) , (const, 0x73, 4), (unique, 0x100000bd, 8) COPY (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000115, 8), (unique, 0x10000115, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x41ab20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) CALLIND (register, 0x28, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8) , (register, 0x8, 8) , (const, 0x0, 8) , (unique, 0x3800, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x41aaec, 1)]
[ ---  CBRANCH (ram, 0x41ab10, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x1000011d, 4) , (const, 0x6, 4), (unique, 0x1000011d, 4) CAST (register, 0x0, 4)]
[(register, 0x0, 1) INT_ADD (register, 0x206, 1) , (const, 0x1, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7, 4)]
[ ---  BRANCH (ram, 0x41aaec, 1)]
[(unique, 0x10000097, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffffb, 4)]
[(register, 0x0, 1) MULTIEQUAL (unique, 0x10000097, 1) , (register, 0x0, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x41ab27, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000121, 8), (unique, 0x10000121, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xed, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1)]
