[(unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x10000531, 8) COPY (register, 0x10, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000531, 8) , (register, 0xb0, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x172613, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000559, 8), (unique, 0x10000559, 8) CAST (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) CAST (unique, 0x10000551, 8), (unique, 0x10000551, 8) INT_SUB (unique, 0x10000541, 8) , (unique, 0x10000549, 8), (unique, 0x10000549, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000541, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000539, 8), (unique, 0x10000539, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1726c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0x18, 8)]
[(unique, 0x100004c1, 8) COPY (register, 0x18, 8)]
[(unique, 0x100004d1, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x172803, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x14, 8) , (unique, 0x10000561, 8), (unique, 0x10000561, 8) CAST (register, 0x18, 8)]
[(unique, 0x100004d9, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x172800, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xb0, 8) , (const, 0x15, 8)]
[(register, 0x0, 8) CALL (ram, 0x1ac050, 8) , (register, 0xa8, 8) , (unique, 0xbd80, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100004d1, 8) , (unique, 0x100004d9, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000569, 8), (unique, 0x10000569, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100004d1, 8) , (unique, 0x100004d9, 8)]
[ ---  BRANCH (ram, 0x172610, 1)]
[(unique, 0x100004c9, 8) COPY (register, 0xb0, 8)]
[(unique, 0x100004e1, 8) COPY (register, 0x18, 8), (register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1728c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(register, 0x80, 4) INT_SUB (unique, 0x100000db, 4) , (const, 0x1, 4), (unique, 0x100000db, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0x100004c1, 8) , (unique, 0x100004c9, 8)]
[(register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100004c1, 8) , (unique, 0x100004c9, 8)]
[ ---  CBRANCH (ram, 0x172950, 1) , (unique, 0x100000e4, 1), (unique, 0x100000e4, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xa8, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x172950, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100000db, 4) , (const, 0xd, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0xa8, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x172960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x80, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100004b1, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100000ef, 4), (unique, 0x100000ef, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x17270e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x3, 4), (register, 0x10, 4) INT_2COMP (unique, 0x100000ef, 4), (unique, 0x100000ef, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x2, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[(unique, 0x100004b9, 8) COPY (register, 0x8, 8)]
[(unique, 0x10000509, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000529, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x172940, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x100004b1, 8) , (unique, 0x100004b9, 8)]
[(register, 0x80, 4) INT_SUB (register, 0x8, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100004f1, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000511, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x172758, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0x80, 4) INT_SUB (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100004f9, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10000519, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x172758, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x3, 4)]
[(register, 0x80, 4) INT_SUB (register, 0x8, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10000501, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x10000521, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000511, 8) , (unique, 0x10000519, 8) , (unique, 0x10000521, 8) , (unique, 0x10000529, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x100004f1, 8) , (unique, 0x100004f9, 8) , (unique, 0x10000501, 8) , (unique, 0x10000509, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x90, 8) COPY (const, 0x0, 8)]
[(register, 0x98, 4) COPY (const, 0x0, 4)]
[(register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x3680, 4) INT_MULT (register, 0x38, 4) , (const, 0x4, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x2, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0x4, 4), (register, 0x38, 4) INT_SUB (register, 0x8, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100001f1, 4), (unique, 0x3400, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) INT_ADD (unique, 0x10000581, 8) , (unique, 0x10000328, 8), (unique, 0x10000581, 8) CAST (register, 0xa8, 8), (unique, 0x10000328, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x100001f1, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (unique, 0x10000571, 8) , (unique, 0x10000320, 8), (unique, 0x10000571, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000320, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000219, 8) , (unique, 0x100001f5, 4), (unique, 0x10000219, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) INT_ADD (unique, 0x10000581, 8) , (unique, 0x10000328, 8), (unique, 0x10000581, 8) CAST (register, 0xa8, 8), (unique, 0x10000328, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x100001f5, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (unique, 0x10000571, 8) , (unique, 0x10000320, 8), (unique, 0x10000571, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000320, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000221, 8) , (unique, 0x10000201, 4), (unique, 0x10000221, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) INT_ADD (unique, 0x10000581, 8) , (unique, 0x10000328, 8), (unique, 0x10000581, 8) CAST (register, 0xa8, 8), (unique, 0x10000328, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x10000201, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000205, 8), (unique, 0x10000205, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (unique, 0x10000571, 8) , (unique, 0x10000320, 8), (unique, 0x10000571, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000320, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000229, 8) , (unique, 0x1000020d, 4), (unique, 0x10000229, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) INT_ADD (unique, 0x10000581, 8) , (unique, 0x10000328, 8), (unique, 0x10000581, 8) CAST (register, 0xa8, 8), (unique, 0x10000328, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (unique, 0x1000020d, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000211, 8), (unique, 0x10000211, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (unique, 0x10000571, 8) , (unique, 0x10000320, 8), (unique, 0x10000571, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000320, 8) INT_ADD (register, 0x90, 8) , (register, 0x10, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[(register, 0x90, 8) INT_ADD (register, 0x90, 8) , (const, 0x10, 8), (register, 0x90, 8) MULTIEQUAL (register, 0x90, 8) , (register, 0x90, 8)]
[ ---  CBRANCH (ram, 0x172786, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x98, 4) , (register, 0x38, 4), (register, 0x98, 4) INT_ADD (register, 0x98, 4) , (const, 0x1, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(register, 0x88, 8) PTRADD (register, 0x88, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3680, 4)]
[(register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3680, 4)]
[(register, 0x80, 4) INT_ADD (register, 0x80, 4) , (unique, 0x1000013d, 4), (unique, 0x1000013d, 4) INT_MULT (register, 0x38, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x1728b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (unique, 0x3680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1728b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (unique, 0x3680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1728b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1727ea, 1)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (unique, 0x100003a0, 8) , (const, 0x4, 8), (unique, 0x100003a0, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000390, 8) , (const, 0x4, 8), (unique, 0x10000390, 8) INT_ADD (register, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x100004e9, 8) COPY (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x172610, 1)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100004e1, 8) , (unique, 0x100004e9, 8) , (register, 0x18, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1726a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1726a0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000591, 4) , (const, 0x0, 4), (unique, 0x10000591, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x172840, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1726a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x175200, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x17286d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x175200, 8) , (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000595, 8), (unique, 0x10000595, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000023b, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x172638, 1) , (unique, 0x10000243, 1), (unique, 0x10000243, 1) INT_NOTEQUAL (unique, 0x1000024c, 4) , (const, 0x0, 4), (unique, 0x1000024c, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1729a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000023b, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000023b, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1726a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000059d, 8), (unique, 0x1000059d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000023b, 8) , (const, 0x26, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005a5, 8), (unique, 0x100005a5, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x17288e, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000023b, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x172980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000017f, 4) , (const, 0x0, 4), (unique, 0x1000017f, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x17289f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x17289f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xfffff7ff, 4)]
[ ---  BRANCH (ram, 0x172638, 1)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x172830, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000023b, 8) , (register, 0x0, 8)]
[(unique, 0x100004a9, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x17267e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000009f, 4) , (const, 0x0, 4), (unique, 0x1000009f, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xfffffeff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x172830, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100004a9, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x1728d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005ad, 8), (unique, 0x100005ad, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x172929, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005b5, 8), (unique, 0x100005b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1729d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000019d, 4) , (const, 0x0, 4), (unique, 0x1000019d, 4) INT_AND (register, 0x8, 4) , (const, 0x100, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x172905, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xfffffeff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c5, 8), (unique, 0x100005c5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005bd, 8), (unique, 0x100005bd, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005cd, 8), (unique, 0x100005cd, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005bd, 8), (unique, 0x100005bd, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005d5, 8), (unique, 0x100005d5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005bd, 8), (unique, 0x100005bd, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x172929, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1718f0, 8) , (unique, 0x3100, 8) , (unique, 0x3200, 8)]
[(register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005e5, 8), (unique, 0x100005e5, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005dd, 8), (unique, 0x100005dd, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x172832, 1)]
[ ---  CBRANCH (ram, 0x1725d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0xb0, 8)]
