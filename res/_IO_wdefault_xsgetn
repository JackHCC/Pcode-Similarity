[(unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x10000493, 8) COPY (register, 0x10, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xb0, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000493, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x183fc0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100004fb, 8), (unique, 0x100004fb, 8) CAST (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100004f3, 8), (unique, 0x100004f3, 8) INT_SUB (unique, 0x100004e3, 8) , (unique, 0x100004eb, 8), (unique, 0x100004eb, 8) CAST (unique, 0xbd80, 8), (unique, 0x100004e3, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004db, 8), (unique, 0x100004db, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x10000483, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (unique, 0x10000503, 8) , (const, 0x2, 4), (unique, 0x10000503, 8) CAST (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x183e68, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x28, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (unique, 0x10000503, 8) , (const, 0x2, 4), (unique, 0x10000503, 8) CAST (register, 0x10, 8)]
[(unique, 0x1000048b, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x184158, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x1000050b, 8) , (const, 0x15, 8), (unique, 0x1000050b, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000483, 8) , (unique, 0x1000048b, 8)]
[(register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) CALL (ram, 0x1bd680, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000513, 8), (unique, 0x10000513, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x183fc0, 1)]
[ ---  CBRANCH (ram, 0x183fc0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x1000051b, 8), (unique, 0x1000051b, 8) CAST (register, 0x10, 8)]
[(register, 0x88, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x1, 4), (unique, 0x100000a0, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1841f0, 1) , (unique, 0x100000a9, 1), (unique, 0x100000a9, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1841f0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100000a0, 4) , (const, 0xd, 4)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) CAST (unique, 0x1000053b, 8), (unique, 0x1000053b, 8) INT_ADD (unique, 0x10000533, 8) , (register, 0x10, 8), (unique, 0x10000533, 8) CAST (register, 0xb0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000052b, 8), (unique, 0x1000052b, 8) INT_ADD (unique, 0x10000523, 8) , (register, 0x10, 8), (unique, 0x10000523, 8) CAST (unique, 0xbd80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x184208, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x3580, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x100004b3, 8) COPY (register, 0xb0, 8)]
[(unique, 0x100004d3, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x184220, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_2COMP (unique, 0x100000b4, 4), (unique, 0x100000b4, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0x10000543, 8) , (const, 0x2, 4), (unique, 0x10000543, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x88, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb0, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x1000049b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100004bb, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183f09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x1, 4)]
[(register, 0x88, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x100004a3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100004c3, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183f09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[(register, 0x88, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100004ab, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x100004cb, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100004bb, 8) , (unique, 0x100004c3, 8) , (unique, 0x100004cb, 8) , (unique, 0x100004d3, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x1000049b, 8) , (unique, 0x100004a3, 8) , (unique, 0x100004ab, 8) , (unique, 0x100004b3, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4)]
[(register, 0xa8, 4) INT_RIGHT (register, 0x38, 4) , (const, 0x2, 4), (register, 0x38, 4) INT_SUB (unique, 0x100000a0, 4) , (register, 0x8, 4)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100001c2, 4), (unique, 0x3400, 8) CAST (unique, 0x10000563, 8), (unique, 0x10000563, 8) INT_ADD (unique, 0x1000055b, 8) , (unique, 0x1000029e, 8), (unique, 0x1000055b, 8) CAST (register, 0xb0, 8), (unique, 0x1000029e, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (unique, 0x100001c2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000553, 8), (unique, 0x10000553, 8) INT_ADD (unique, 0x1000054b, 8) , (unique, 0x10000296, 8), (unique, 0x1000054b, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000296, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ea, 8) , (unique, 0x100001c6, 4), (unique, 0x100001ea, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000563, 8), (unique, 0x10000563, 8) INT_ADD (unique, 0x1000055b, 8) , (unique, 0x1000029e, 8), (unique, 0x1000055b, 8) CAST (register, 0xb0, 8), (unique, 0x1000029e, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (unique, 0x100001c6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ca, 8), (unique, 0x100001ca, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000553, 8), (unique, 0x10000553, 8) INT_ADD (unique, 0x1000054b, 8) , (unique, 0x10000296, 8), (unique, 0x1000054b, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000296, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f2, 8) , (unique, 0x100001d2, 4), (unique, 0x100001f2, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000563, 8), (unique, 0x10000563, 8) INT_ADD (unique, 0x1000055b, 8) , (unique, 0x1000029e, 8), (unique, 0x1000055b, 8) CAST (register, 0xb0, 8), (unique, 0x1000029e, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (unique, 0x100001d2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001d6, 8), (unique, 0x100001d6, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000553, 8), (unique, 0x10000553, 8) INT_ADD (unique, 0x1000054b, 8) , (unique, 0x10000296, 8), (unique, 0x1000054b, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000296, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fa, 8) , (unique, 0x100001de, 4), (unique, 0x100001fa, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000563, 8), (unique, 0x10000563, 8) INT_ADD (unique, 0x1000055b, 8) , (unique, 0x1000029e, 8), (unique, 0x1000055b, 8) CAST (register, 0xb0, 8), (unique, 0x1000029e, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (unique, 0x100001de, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e2, 8), (unique, 0x100001e2, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000553, 8), (unique, 0x10000553, 8) INT_ADD (unique, 0x1000054b, 8) , (unique, 0x10000296, 8), (unique, 0x1000054b, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000296, 8) INT_ADD (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x183f30, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x38, 4) , (register, 0xa8, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x88, 4) INT_SUB (register, 0x88, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffffc, 4)]
[(register, 0x90, 8) PTRADD (register, 0x90, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffffc, 4)]
[(register, 0x10, 8) PTRADD (stack, 0xffffffffffffffa8, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x183fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_AND (register, 0x38, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x183fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x4, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x5, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(register, 0x80, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_SUB (unique, 0x100000a0, 4) , (const, 0x1, 4)]
[(register, 0x28, 8) INT_SUB (register, 0x28, 8) , (register, 0x10, 8)]
[(register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (unique, 0x10000346, 8) , (const, 0x4, 8), (unique, 0x10000346, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000336, 8) , (const, 0x4, 8), (unique, 0x10000336, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x10, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x184093, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
[(register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x184090, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x1000056b, 4) , (const, 0x0, 4), (unique, 0x1000056b, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1840b0, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x184090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALL (ram, 0x186f70, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1840d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x30, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x186f70, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000056f, 8), (unique, 0x1000056f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x183fee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1840f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x184123, 1) , (unique, 0x10000211, 1), (unique, 0x10000211, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x184090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000577, 8), (unique, 0x10000577, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x26, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000057f, 8), (unique, 0x1000057f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1841c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x30, 4) , (const, 0x100, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x1000046b, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18413b, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000473, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x18413b, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[(unique, 0x10000463, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000463, 8) , (unique, 0x1000046b, 8) , (unique, 0x10000473, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfffff7ff, 4)]
[ ---  BRANCH (ram, 0x183ff5, 1)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1840a8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x18407d, 1)]
[(unique, 0x1000047b, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x184039, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x30, 4) , (const, 0x100, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (const, 0xfffffeff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1841e0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x18407d, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000047b, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x184180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000587, 8), (unique, 0x10000587, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x184056, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000058f, 8), (unique, 0x1000058f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000059f, 8), (unique, 0x1000059f, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000597, 8), (unique, 0x10000597, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a7, 8), (unique, 0x100005a7, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000597, 8), (unique, 0x10000597, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005af, 8), (unique, 0x100005af, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000597, 8), (unique, 0x10000597, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x184056, 1)]
[ ---  CBRANCH (ram, 0x184090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x183070, 8) , (unique, 0x3100, 8) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x184230, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005b7, 8), (unique, 0x100005b7, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x36, 8) , (const, 0x4, 8)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x184075, 1)]
[(register, 0x0, 4) CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100005bf, 8), (unique, 0x100005bf, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x183e3c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) INT_SUB (register, 0x10, 8) , (register, 0x28, 8)]
