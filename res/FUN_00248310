[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000034a, 8), (unique, 0x1000034a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x0, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000035b, 8), (unique, 0x1000035b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000035a, 1), (unique, 0x1000035a, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000352, 8), (unique, 0x10000352, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100001c2, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001ca, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0xbd80, 8) , (unique, 0x100001ca, 8)]
[(unique, 0x100001d2, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x38, 8) , (register, 0xa8, 8)]
[(unique, 0x100001da, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x100001da, 8)]
[(unique, 0x100001e2, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (unique, 0x100001e2, 4)]
[(unique, 0x100001e6, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (unique, 0x100001e6, 4)]
[(unique, 0x100001ea, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (unique, 0x100001ea, 4)]
[(unique, 0x100001ee, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (unique, 0x100001ee, 4)]
[(unique, 0x100001f2, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (unique, 0x100001f2, 8)]
[(unique, 0x100001fe, 8) MULTIEQUAL (unique, 0x1000033a, 8) , (unique, 0x3800, 8) , (unique, 0x100001fe, 8)]
[(unique, 0x10000206, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000206, 8)]
[(unique, 0x1000020e, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0x1000020e, 8)]
[ ---  CBRANCH (ram, 0x248444, 1) , (unique, 0x100001c1, 1), (unique, 0x100001c1, 1) INT_NOTEQUAL (unique, 0x10000229, 2) , (const, 0x0, 2), (unique, 0x10000229, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x2000, 2), (unique, 0xbc00, 2) MULTIEQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2) , (unique, 0xbc00, 2)]
[(register, 0xa8, 8) PTRADD (unique, 0x100001d2, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000364, 8), (unique, 0x10000364, 8) INT_ADD (unique, 0x100001ca, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000363, 1), (unique, 0x10000363, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001d2, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x248360, 1)]
[ ---  CBRANCH (ram, 0x2486cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 1) , (const, 0x0, 1), (register, 0x28, 1) SUBPIECE (unique, 0x100001c2, 8) , (const, 0x0, 4)]
[(unique, 0x10000322, 8) COPY (unique, 0x100001d2, 8)]
[ ---  CBRANCH (ram, 0x2486cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 1) , (const, 0x5b, 1)]
[(register, 0x28, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000031a, 8) , (unique, 0x10000322, 8)]
[ ---  CBRANCH (ram, 0x248388, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000031a, 8) , (unique, 0x10000322, 8)]
[ ---  CBRANCH (ram, 0x2483a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000036c, 1), (unique, 0x1000036c, 1) CAST (unique, 0xbb00, 1)]
[(unique, 0x1000031a, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2483a6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5b, 1)]
[ ---  CBRANCH (ram, 0x2486cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001d2, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100001da, 8) , (const, 0x92, 4)]
[(ram, 0x2bc220, 4) INDIRECT (unique, 0x100001e2, 4) , (const, 0x92, 4)]
[(ram, 0x2bc224, 4) INDIRECT (unique, 0x100001e6, 4) , (const, 0x92, 4)]
[(ram, 0x2bc228, 4) INDIRECT (unique, 0x100001ea, 4) , (const, 0x92, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (unique, 0x100001ee, 4) , (const, 0x92, 4)]
[(ram, 0x4eae00, 8) INDIRECT (unique, 0x100001f2, 8) , (const, 0x92, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000206, 8) , (const, 0x92, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000020e, 8) , (const, 0x92, 4)]
[ ---  CBRANCH (ram, 0x2486cc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000385, 8), (unique, 0x10000385, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x1000037d, 8), (unique, 0x1000037d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x31, 8) , (const, 0x1, 8), (register, 0xb0, 8) PTRADD (register, 0x18, 8) , (unique, 0x100000ad, 8) , (const, 0x1, 8), (unique, 0x100000ad, 8) INT_2COMP (unique, 0x10000375, 8), (unique, 0x10000375, 8) CAST (unique, 0x100001d2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CAST (unique, 0x10000395, 8), (unique, 0x10000395, 8) CALL (ram, 0x121230, 8) , (unique, 0x3100, 8) , (unique, 0x100001d2, 8) , (unique, 0x1000038d, 8), (unique, 0x1000038d, 8) CAST (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000039e, 8) , (const, 0x1, 4), (unique, 0x1000039e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100003a6, 8), (unique, 0x100003a6, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) INT_ADD (unique, 0x100001ca, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000039d, 1), (unique, 0x1000039d, 1) CAST (unique, 0xbb00, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003b6, 8) , (unique, 0x100002fa, 4), (unique, 0x100003b6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100002fa, 4) COPY (ram, 0x2bc220, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xa7, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xa4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000196, 8) , (unique, 0x100002fe, 4), (unique, 0x10000196, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) INT_ADD (unique, 0x100003be, 8) , (const, 0xc, 8), (unique, 0x100003be, 8) CAST (register, 0x0, 8), (unique, 0x100002fe, 4) COPY (ram, 0x2bc224, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xa7, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xa4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ce, 8) , (unique, 0x10000302, 4), (unique, 0x100003ce, 8) CAST (unique, 0x1000019e, 8), (unique, 0x1000019e, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x10000302, 4) COPY (ram, 0x2bc228, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xa7, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xa4, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x8bf, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x8bd, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x8bb, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x8ba, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xb1, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xae, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xac, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xa7, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0xa4, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x8bf, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x8bd, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x8bb, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x8ba, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xb1, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xae, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xac, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xa7, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0xa4, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x8bf, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x8bd, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x8bb, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x8ba, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xb1, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xae, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xac, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xa7, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0xa4, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x8bf, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x8bd, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x8bb, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x8ba, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xb1, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xae, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xac, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xa7, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xa4, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x8bf, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x8bd, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x8bb, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x8ba, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xb1, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xae, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xac, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xa7, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xa4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001a6, 8) , (unique, 0x10000306, 4), (unique, 0x100001a6, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) INT_ADD (unique, 0x100003d6, 8) , (const, 0x14, 8), (unique, 0x100003d6, 8) CAST (register, 0x0, 8), (unique, 0x10000306, 4) COPY (ram, 0x2bc22c, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xa7, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0xa4, 4)]
[(unique, 0x10000342, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000216, 8) MULTIEQUAL (unique, 0x10000342, 8) , (register, 0x18, 8)]
[(unique, 0x10000221, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248425, 1) , (unique, 0x10000220, 1), (unique, 0x10000220, 1) INT_NOTEQUAL (unique, 0x1000022b, 2) , (const, 0x0, 2), (unique, 0x1000022b, 2) INT_AND (unique, 0x1000021e, 2) , (const, 0x2000, 2), (unique, 0x1000021e, 2) MULTIEQUAL (unique, 0xbc00, 2) , (unique, 0xbc00, 2)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003e7, 8), (unique, 0x100003e7, 8) INT_ADD (unique, 0x100001ca, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100003e6, 1), (unique, 0x100003e6, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (unique, 0x10000216, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x24846c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 1) , (const, 0x5b, 1), (register, 0x28, 1) SUBPIECE (unique, 0x10000221, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x248460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000216, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x248479, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f0, 8), (unique, 0x100003f0, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100003ef, 1), (unique, 0x100003ef, 1) CAST (unique, 0xbb00, 1)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x2bc22c, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x2bc228, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc224, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc220, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x1000018c, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x248493, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 1) , (const, 0x21, 1), (register, 0xa0, 1) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x1000018c, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (register, 0x0, 1)]
[(unique, 0x10000332, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e3, 4) , (const, 0x0, 4), (unique, 0x100000e3, 4) INT_AND (register, 0x0, 4) , (const, 0xdf, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x3d, 4)]
[ ---  CBRANCH (ram, 0x2484e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x1000032a, 8) , (unique, 0x10000332, 8)]
[ ---  CBRANCH (ram, 0x2484c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000401, 8), (unique, 0x10000401, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000400, 1), (unique, 0x10000400, 1) CAST (unique, 0xbb00, 1)]
[(unique, 0x1000032a, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2484e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000ef, 1) , (const, 0x0, 1), (unique, 0x100000ef, 1) INT_AND (register, 0x0, 1) , (const, 0xdf, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[ ---  CBRANCH (ram, 0x248660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x10000243, 8), (unique, 0x10000243, 8) PTRSUB (const, 0x0, 8) , (const, 0x7, 8), (register, 0x0, 8) PTRADD (register, 0x28, 8) , (unique, 0x100000f3, 8) , (const, 0x1, 8), (unique, 0x100000f3, 8) INT_2COMP (unique, 0x10000409, 8), (unique, 0x10000409, 8) CAST (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x394, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x394, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x394, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x394, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x394, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x394, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x394, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x394, 4)]
[ ---  CBRANCH (ram, 0x248740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x10000411, 8) , (unique, 0x1000025b, 8) , (const, 0x7, 8), (unique, 0x10000411, 8) CAST (register, 0x18, 8), (unique, 0x1000025b, 8) COPY (const, 0x2b6f82, 8)]
[(stack, 0xffffffffffffffac, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x24853c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a4, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x3a4, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x3a4, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x3a4, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x3a4, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x3a4, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x3a4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a4, 4)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x10000419, 8) , (unique, 0x10000263, 8) , (const, 0x7, 8), (unique, 0x10000419, 8) CAST (register, 0x18, 8), (unique, 0x10000263, 8) COPY (const, 0x2b6f8a, 8)]
[(stack, 0xffffffffffffffac, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x24853c, 1)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x1000024b, 8), (unique, 0x1000024b, 8) PTRSUB (const, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1be, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x1be, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x1be, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x1be, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x1be, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1be, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1be, 4)]
[ ---  CBRANCH (ram, 0x2486f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x10000421, 8) , (unique, 0x1000026b, 8) , (const, 0x8, 8), (unique, 0x10000421, 8) CAST (register, 0x18, 8), (unique, 0x1000026b, 8) COPY (const, 0x2b6f92, 8)]
[(stack, 0xffffffffffffffac, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x24853c, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ce, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x1ce, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x1ce, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x1ce, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x1ce, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1ce, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ce, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ce, 4)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x10000429, 8) , (unique, 0x10000273, 8) , (const, 0x8, 8), (unique, 0x10000429, 8) CAST (register, 0x18, 8), (unique, 0x10000273, 8) COPY (const, 0x2b6f9b, 8)]
[(stack, 0xffffffffffffffac, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x2bc22c, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x2bc228, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc224, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc220, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000432, 8), (unique, 0x10000432, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000431, 1), (unique, 0x10000431, 1) CAST (unique, 0xbb00, 1)]
[(unique, 0x100002eb, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x100002f3, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x248564, 1) , (unique, 0x100002f4, 1), (unique, 0x100002f4, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000043b, 8), (unique, 0x1000043b, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000043a, 1), (unique, 0x1000043a, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (unique, 0x100002eb, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002f3, 1) , (const, 0x3d, 1)]
[ ---  CBRANCH (ram, 0x248570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000444, 8), (unique, 0x10000444, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000443, 1), (unique, 0x10000443, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100002eb, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x10000312, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000120, 4) , (const, 0x0, 4), (unique, 0x10000120, 4) INT_AND (register, 0x0, 4) , (const, 0xdf, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x3d, 4), (register, 0x0, 4) INT_SEXT (unique, 0x1000044c, 1), (unique, 0x1000044c, 1) CAST (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x2485be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000030a, 8) , (unique, 0x10000312, 8)]
[ ---  CBRANCH (ram, 0x2485a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000044e, 8), (unique, 0x1000044e, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000044d, 1), (unique, 0x1000044d, 1) CAST (unique, 0xbb00, 1)]
[(unique, 0x1000030a, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2485be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000128, 1) , (const, 0x0, 1), (unique, 0x10000128, 1) INT_AND (register, 0x0, 1) , (const, 0xdf, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x3d, 1)]
[ ---  CBRANCH (ram, 0x2486a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) PTRSUB (const, 0x0, 8) , (const, 0x6, 8), (register, 0x0, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000012c, 8) , (const, 0x1, 8), (unique, 0x1000012c, 8) INT_2COMP (unique, 0x10000456, 8), (unique, 0x10000456, 8) CAST (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x36a, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x36a, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x36a, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x36a, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x36a, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x36a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x36a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x36a, 4)]
[ ---  CBRANCH (ram, 0x248750, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x1000045e, 8) , (unique, 0x1000027b, 8) , (const, 0x6, 8), (unique, 0x1000045e, 8) CAST (register, 0x28, 8), (unique, 0x1000027b, 8) COPY (const, 0x2b6fa4, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x248603, 1)]
[ ---  CBRANCH (ram, 0x248720, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (unique, 0x10000253, 8), (unique, 0x10000253, 8) PTRSUB (const, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34e, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x34e, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x34e, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x34e, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x34e, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34e, 4)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x10000466, 8) , (unique, 0x10000283, 8) , (const, 0x8, 8), (unique, 0x10000466, 8) CAST (register, 0x28, 8), (unique, 0x10000283, 8) COPY (const, 0x2b6fab, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x248603, 1)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (unique, 0x10000233, 8), (unique, 0x10000233, 8) PTRSUB (const, 0x0, 8) , (const, 0x5, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2a2, 4)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x2a2, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x2a2, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x2a2, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x2a2, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2a2, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2a2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2a2, 4)]
[ ---  CBRANCH (ram, 0x2486c4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121190, 8) , (unique, 0x1000046e, 8) , (unique, 0x1000028b, 8) , (const, 0x5, 8), (unique, 0x1000046e, 8) CAST (register, 0x28, 8), (unique, 0x1000028b, 8) COPY (const, 0x2b6fb4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x318, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x318, 4), (ram, 0x2bc220, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x318, 4), (ram, 0x2bc224, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x318, 4), (ram, 0x2bc228, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x318, 4), (ram, 0x2bc22c, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x318, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x318, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x318, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (unique, 0x100001f2, 8) , (unique, 0x100001f2, 8) , (unique, 0x100001f2, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x2bc22c, 4) MULTIEQUAL (unique, 0x100001ee, 4) , (unique, 0x100001ee, 4) , (unique, 0x100001ee, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x2bc228, 4) MULTIEQUAL (unique, 0x100001ea, 4) , (unique, 0x100001ea, 4) , (unique, 0x100001ea, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc224, 4) MULTIEQUAL (unique, 0x100001e6, 4) , (unique, 0x100001e6, 4) , (unique, 0x100001e6, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc220, 4) MULTIEQUAL (unique, 0x100001e2, 4) , (unique, 0x100001e2, 4) , (unique, 0x100001e2, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[(register, 0x0, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x10000206, 8) , (unique, 0x10000206, 8) , (unique, 0x10000206, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x24875a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000476, 8), (unique, 0x10000476, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x100001da, 8) , (unique, 0x100001da, 8) , (unique, 0x100001da, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x1000020e, 8) , (unique, 0x1000020e, 8) , (unique, 0x1000020e, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x2bc220, 4) COPY (ram, 0x2bc220, 4)]
[(ram, 0x2bc224, 4) COPY (ram, 0x2bc224, 4)]
[(ram, 0x2bc228, 4) COPY (ram, 0x2bc228, 4)]
[(ram, 0x2bc22c, 4) COPY (ram, 0x2bc22c, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x346, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x346, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2bc220, 4) COPY (ram, 0x2bc220, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x346, 4)]
[(ram, 0x2bc224, 4) COPY (ram, 0x2bc224, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x346, 4)]
[(ram, 0x2bc228, 4) COPY (ram, 0x2bc228, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x346, 4)]
[(ram, 0x2bc22c, 4) COPY (ram, 0x2bc22c, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x346, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x346, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x2bc22c, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x2bc228, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc224, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc220, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) INT_SEXT (stack, 0xffffffffffffffac, 4)]
[ ---  CBRANCH (ram, 0x248700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 1) , (const, 0x21, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000496, 8) , (register, 0x0, 4), (unique, 0x10000496, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100004a6, 8), (unique, 0x100004a6, 8) INT_ADD (unique, 0x1000049e, 8) , (const, 0xc, 8), (unique, 0x1000049e, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004ae, 8) , (register, 0x0, 4), (unique, 0x100004ae, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x100004be, 8), (unique, 0x100004be, 8) INT_ADD (unique, 0x100004b6, 8) , (const, 0x14, 8), (unique, 0x100004b6, 8) CAST (register, 0x0, 8)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x313, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x310, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x30d, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x30a, 4), (ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x307, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x313, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x310, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x30d, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x30a, 4), (ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x307, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x313, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x310, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x30d, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x30a, 4), (ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x307, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x313, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x310, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x30d, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x30a, 4), (ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x307, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x313, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x310, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x30d, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x30a, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x307, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004c6, 8) , (unique, 0xbc80, 4), (unique, 0x100004c6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000048e, 8), (unique, 0x1000048e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000486, 8), (unique, 0x10000486, 8) INT_ADD (unique, 0x1000047e, 8) , (unique, 0x3300, 8), (unique, 0x1000047e, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x248624, 1)]
[(ram, 0x2bc220, 4) INDIRECT (ram, 0x2bc220, 4) , (const, 0x2c0, 4)]
[(ram, 0x2bc224, 4) INDIRECT (ram, 0x2bc224, 4) , (const, 0x2c0, 4)]
[(ram, 0x2bc228, 4) INDIRECT (ram, 0x2bc228, 4) , (const, 0x2c0, 4)]
[(ram, 0x2bc22c, 4) INDIRECT (ram, 0x2bc22c, 4) , (const, 0x2c0, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 4), (unique, 0x3a00, 8) CAST (unique, 0x100004d6, 8), (unique, 0x100004d6, 8) INT_ADD (unique, 0x100004ce, 8) , (unique, 0x100002c3, 8), (unique, 0x100004ce, 8) CAST (register, 0x0, 8), (unique, 0x100002c3, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x8, 8), (unique, 0x3900, 8) INT_MULT (register, 0xa0, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x248624, 1)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x2bc22c, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x2bc228, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc224, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc220, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[ ---  CBRANCH (ram, 0x248620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100004df, 8), (unique, 0x100004df, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100004de, 1), (unique, 0x100004de, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x248482, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5d, 1)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100004f0, 8), (unique, 0x100004f0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100004ef, 1), (unique, 0x100004ef, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004e7, 8), (unique, 0x100004e7, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x24842b, 1)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(ram, 0x2bc22c, 4) MULTIEQUAL (ram, 0x2bc22c, 4) , (ram, 0x2bc22c, 4)]
[(ram, 0x2bc228, 4) MULTIEQUAL (ram, 0x2bc228, 4) , (ram, 0x2bc228, 4)]
[(ram, 0x2bc224, 4) MULTIEQUAL (ram, 0x2bc224, 4) , (ram, 0x2bc224, 4)]
[(ram, 0x2bc220, 4) MULTIEQUAL (ram, 0x2bc220, 4) , (ram, 0x2bc220, 4)]
[(unique, 0xbc00, 2) MULTIEQUAL (unique, 0x1000021e, 2) , (unique, 0xbc00, 2)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100001ca, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000221, 8) , (register, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000216, 8) , (register, 0x18, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xfb, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfb, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fe, 8) , (register, 0x0, 8)]
[(unique, 0x1000033a, 8) COPY (register, 0x0, 8)]
