[ ---  CBRANCH (ram, 0x1ee180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000e3, 8), (unique, 0x100000e3, 8) CAST (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x100000001, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100000eb, 8), (unique, 0x100000eb, 8) CALL (ram, 0x1212c0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1ee238, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000eb, 8), (unique, 0x100000eb, 8) CALL (ram, 0x1212c0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x30, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1ee177, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000103, 8), (unique, 0x10000103, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1ee1b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000fb, 8), (unique, 0x100000fb, 8) INT_ADD (unique, 0x100000f3, 8) , (const, 0x4, 8), (unique, 0x100000f3, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1ee250, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010b, 8) , (unique, 0x10000087, 4), (unique, 0x1000010b, 8) CAST (register, 0x38, 8), (unique, 0x10000087, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1ee177, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000113, 8), (unique, 0x10000113, 8) CALL (ram, 0x121020, 8) , (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0x3680, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000087, 4), (unique, 0x10000087, 4) INT_MULT (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000123, 8), (unique, 0x10000123, 8) INT_ADD (unique, 0x1000011b, 8) , (const, 0x4, 8), (unique, 0x1000011b, 8) CAST (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1ee1b8, 1)]
[(register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1ee210, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) BOOL_OR (register, 0x206, 1) , (unique, 0xcd80, 1), (unique, 0xcd80, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x30, 4), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100000a6, 8) , (const, 0x4, 8), (unique, 0x100000a6, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100000d3, 8) COPY (register, 0x0, 8)]
[(unique, 0x100000c6, 8) MULTIEQUAL (unique, 0x100000d3, 8) , (unique, 0x100000db, 8)]
[ ---  CBRANCH (ram, 0x1ee1f5, 1) , (unique, 0x100000d2, 1), (unique, 0x100000d2, 1) INT_SLESS (register, 0x30, 4) , (unique, 0x100000ce, 4), (unique, 0x100000ce, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100000ce, 4), (unique, 0x3400, 8) CAST (unique, 0x10000133, 8), (unique, 0x10000133, 8) INT_ADD (unique, 0x1000012b, 8) , (unique, 0x100000c6, 8), (unique, 0x1000012b, 8) CAST (register, 0xa0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000143, 8), (unique, 0x10000143, 8) INT_ADD (unique, 0x1000013b, 8) , (unique, 0x100000b6, 8), (unique, 0x1000013b, 8) CAST (register, 0xa0, 8), (unique, 0x100000b6, 8) INT_ADD (unique, 0x100000c6, 8) , (const, 0xfffffffffffffff8, 8)]
[(unique, 0x100000db, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100000c6, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x1ee1f5, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4)]
[ ---  CALL (ram, 0x1212b0, 8) , (unique, 0x3400, 8) , (register, 0x30, 8) , (unique, 0x3580, 8), (register, 0x30, 8) CAST (unique, 0x10000163, 8), (unique, 0x10000163, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000015b, 8), (unique, 0x1000015b, 8) CAST (register, 0xa0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000153, 8), (unique, 0x10000153, 8) INT_ADD (unique, 0x1000014b, 8) , (register, 0x0, 8), (unique, 0x1000014b, 8) CAST (register, 0xa0, 8), (register, 0x30, 8) INT_SUB (register, 0x0, 8) , (unique, 0x3580, 8), (register, 0x0, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (unique, 0x3480, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x30, 4), (unique, 0x3400, 8) CAST (unique, 0x10000173, 8), (unique, 0x10000173, 8) INT_ADD (unique, 0x1000016b, 8) , (register, 0x0, 8), (unique, 0x1000016b, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x100000c6, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000183, 8), (unique, 0x10000183, 8) INT_ADD (unique, 0x1000017b, 8) , (const, 0x4, 8), (unique, 0x1000017b, 8) CAST (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1ee177, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000193, 8), (unique, 0x10000193, 8) INT_ADD (unique, 0x1000018b, 8) , (const, 0x4, 8), (unique, 0x1000018b, 8) CAST (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
