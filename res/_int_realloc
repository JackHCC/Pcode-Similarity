[ ---  CBRANCH (ram, 0x4254a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4254a0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x888, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000169, 8), (unique, 0x10000169, 8) COPY (const, 0x49b300, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0xb8, 8) INT_ZEXT (register, 0xb8, 4), (register, 0xb8, 4) INT_AND (register, 0xb8, 4) , (const, 0x2, 4), (register, 0xb8, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x425515, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000014b, 8) , (const, 0x0, 8), (unique, 0x1000014b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000171, 8) , (unique, 0x10000159, 8) , (const, 0x11ce, 8) , (unique, 0x10000189, 8), (unique, 0x10000189, 8) COPY (const, 0x49c278, 8), (unique, 0x10000171, 8) COPY (const, 0x49b31c, 8), (unique, 0x10000159, 8) COPY (const, 0x49b150, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4254b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4254b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x11, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000179, 8), (unique, 0x10000179, 8) COPY (const, 0x49b335, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x100001b1, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4253a1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4254c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x425362, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESSEQUAL (unique, 0x3800, 8) , (unique, 0x3400, 8), (unique, 0x3800, 8) INT_ADD (register, 0x8, 8) , (const, 0x20, 8), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0xb8, 4) , (const, 0x7, 4)]
[ ---  CBRANCH (ram, 0x4254ef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(register, 0xb8, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xb8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001e1, 8) , (unique, 0x3b80, 8), (unique, 0x100001e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8), (unique, 0x3b80, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) INT_ADD (unique, 0x3b80, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3b80, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x425438, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x425362, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CALL (ram, 0x421e10, 8) , (unique, 0x3400, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(unique, 0x3b80, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x4253a1, 1)]
[ ---  CBRANCH (ram, 0x4253d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x423fd0, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) INT_SUB (register, 0x8, 8) , (const, 0xf, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (unique, 0x3100, 8) INT_SUB (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x422d80, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x425534, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x18, 8) , (register, 0x8, 8), (register, 0x18, 8) INT_ADD (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000201, 8), (unique, 0x10000201, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000181, 8) , (unique, 0x10000161, 8) , (const, 0x1213, 8) , (unique, 0x10000191, 8), (unique, 0x10000191, 8) COPY (const, 0x49c278, 8), (unique, 0x10000181, 8) COPY (const, 0x49bf10, 8), (unique, 0x10000161, 8) COPY (const, 0x49b150, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000209, 8), (unique, 0x10000209, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(unique, 0x3b80, 8) INT_ADD (register, 0x30, 8) , (register, 0x18, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3b80, 8) , (unique, 0x3b80, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4253f0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_SUB (register, 0x18, 8) , (register, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100001b1, 8) , (register, 0x18, 8) , (register, 0x0, 8)]
[(unique, 0x3b80, 8) INT_ADD (register, 0x30, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x42540b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x10, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000219, 8), (unique, 0x10000219, 8) INT_ADD (unique, 0x3b80, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x422d80, 8) , (register, 0x38, 8) , (unique, 0x3b80, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4253d2, 1)]
[ ---  CBRANCH (ram, 0x4253c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x10000199, 8), (unique, 0x10000199, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(register, 0xb8, 8) COPY (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x10000229, 8), (unique, 0x10000229, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0xb8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0x10, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000231, 8), (unique, 0x10000231, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8)]
