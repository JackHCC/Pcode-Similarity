[(unique, 0x100000fe, 8) COPY (ram, 0x4eaf40, 8)]
[(unique, 0x10000116, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) CAST (ram, 0x4eaf40, 8)]
[ ---  CBRANCH (ram, 0x23260d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000008f, 8), (unique, 0x1000008f, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011e, 8), (unique, 0x1000011e, 8) CAST (ram, 0x4eaf40, 8)]
[ ---  CBRANCH (ram, 0x232608, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000136, 8), (unique, 0x10000136, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000012e, 8), (unique, 0x1000012e, 8) INT_ADD (register, 0x110, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000126, 8), (unique, 0x10000126, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x2325dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x156, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x156, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x52, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x52, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2325f9, 1)]
[(register, 0x88, 8) INDIRECT (register, 0x30, 8) , (const, 0x139, 4)]
[(register, 0x90, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x139, 4)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x139, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x139, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000106, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x139, 4)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x88, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x10000106, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000146, 8), (unique, 0x10000146, 8) CAST (unique, 0x100000fe, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x5d, 4), (ram, 0x4eaf40, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014e, 8) , (register, 0x90, 8), (unique, 0x1000014e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000013e, 8), (unique, 0x1000013e, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x90, 8) , (unique, 0xbd80, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x88, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000116, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x65, 4), (ram, 0x4eaf40, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x65, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eaf40, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x88, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000116, 8) , (register, 0x38, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x232615, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x38, 4)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x80, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_OR (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x74, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x8d, 4), (ram, 0x4eaf40, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8d, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(register, 0x30, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x15b390, 8) , (register, 0x38, 8) , (register, 0x88, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x23262b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x38, 4)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0xa3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffffb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000015e, 8), (unique, 0x1000015e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x74, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000156, 8), (unique, 0x10000156, 8) CAST (unique, 0x100000fe, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0xb2, 4), (ram, 0x4eaf40, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xb2, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xffffffeb, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x74, 8)]
[ ---  CBRANCH (ram, 0x232676, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (unique, 0xbd00, 4) , (const, 0x8000, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000cf, 8), (unique, 0x100000cf, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0xd2, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[ ---  CBRANCH (ram, 0x232676, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000166, 8), (unique, 0x10000166, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x88, 8)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0xe0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016e, 8) , (const, 0x0, 8), (unique, 0x1000016e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x23265c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe0, 4)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0x122, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x122, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eaf40, 8) INDIRECT (ram, 0x4eaf40, 8) , (const, 0xf0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100000f0, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8)]
[(unique, 0x100000f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x232676, 1) , (unique, 0x100000ef, 1), (unique, 0x100000ef, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x114, 4)]
[(ram, 0x4eaf40, 8) INDIRECT (unique, 0x100000f0, 8) , (const, 0x114, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x100000f8, 4) , (const, 0x114, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eaf40, 8) COPY (ram, 0x4eaf40, 8), (ram, 0x4eaf40, 8) MULTIEQUAL (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8) , (ram, 0x4eaf40, 8) , (unique, 0x100000f0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x100000f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_AND (register, 0x30, 8) , (const, 0xffffffff, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
