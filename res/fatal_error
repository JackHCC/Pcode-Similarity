[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000087, 8), (unique, 0x10000087, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) COPY (const, 0x4b0c15, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b0c15, 8)]
[ ---  CBRANCH (ram, 0x48939b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x96, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x96, 4)]
[(register, 0x0, 8) CALL (ram, 0x4291a0, 8) , (register, 0x38, 4) , (unique, 0x3800, 8) , (const, 0x400, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffbd8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x49a38d, 8)]
[ ---  BRANCH (ram, 0x489334, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c4a68, 8) MULTIEQUAL (ram, 0x4c4a68, 8) , (ram, 0x4c4a68, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) PTRSUB (const, 0x0, 8) , (const, 0x49a38d, 8)]
[ ---  CBRANCH (ram, 0x48934f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x88, 8) PTRSUB (const, 0x0, 8) , (const, 0x4b0c15, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x48935d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x4b0ac0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x489375, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000008f, 8), (unique, 0x1000008f, 8) CAST (ram, 0x4c4a68, 8)]
[(register, 0x10, 8) COPY (const, 0x4b026e, 8)]
[ ---  CALL (ram, 0x485480, 8) , (const, 0x2, 8) , (unique, 0x10000077, 8) , (register, 0x10, 8) , (register, 0xa0, 8) , (register, 0x30, 8) , (register, 0x88, 8) , (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x0, 8), (unique, 0x10000077, 8) COPY (const, 0x4b0a91, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x7e, 4)]
[ ---  CALL (ram, 0x454cb0, 8) , (const, 0x7f, 4)]
[(ram, 0x4c4a68, 8) COPY (ram, 0x4c4a68, 8), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x8b, 4), (ram, 0x4c4a68, 8) INDIRECT (ram, 0x4c4a68, 8) , (const, 0x7e, 4)]
[ ---  RETURN (const, 0x1, 4)]
