[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x223031, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ee434, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22316d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee430, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1bb, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001b5, 8) , (unique, 0x100001c5, 8) , (const, 0x3f, 4) , (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) COPY (const, 0x2ba258, 8), (unique, 0x100001c5, 8) COPY (const, 0x2ba230, 8), (unique, 0x100001b5, 8) COPY (const, 0x2b65f4, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1bb, 4)]
[(ram, 0x4ee430, 4) COPY (ram, 0x4ee430, 4), (ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0x1bb, 4)]
[(ram, 0x4ee434, 4) COPY (ram, 0x4ee434, 4), (ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0x1bb, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x56, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x56, 4)]
[(unique, 0x100001ee, 4) COPY (ram, 0x4ee430, 4), (ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0x56, 4)]
[(unique, 0x10000206, 4) COPY (ram, 0x4ee434, 4), (ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0x56, 4)]
[ ---  CBRANCH (ram, 0x223010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x222ec0, 8) , (ram, 0x4ee434, 4) , (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_OR (ram, 0x4ee430, 4) , (const, 0x80000, 4)]
[ ---  CBRANCH (ram, 0x222fe6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x61, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000226, 8), (unique, 0x10000226, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ee434, 4) COPY (const, 0x0, 4)]
[(ram, 0x4ee430, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 8) COPY (const, 0x2b1e44, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0xa4, 4), (ram, 0x4ee430, 4) MULTIEQUAL (ram, 0x4ee430, 4) , (ram, 0x4ee430, 4)]
[(ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0xa4, 4), (ram, 0x4ee434, 4) MULTIEQUAL (ram, 0x4ee434, 4) , (ram, 0x4ee434, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffb8, 4) COPY (const, 0x6f72702f, 4)]
[(stack, 0xffffffffffffffbc, 2) COPY (const, 0x2f63, 2)]
[(stack, 0xffffffffffffffbe, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x223115, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x210240, 8) , (unique, 0x100001bd, 8) , (const, 0x4, 4), (unique, 0x100001bd, 8) COPY (const, 0x2b6603, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(ram, 0x4ee434, 4) MULTIEQUAL (ram, 0x4ee434, 4) , (ram, 0x4ee434, 4)]
[(ram, 0x4ee430, 4) MULTIEQUAL (ram, 0x4ee430, 4) , (ram, 0x4ee430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2230c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CALL (ram, 0x121170, 8) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbe, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x197, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x197, 4)]
[(ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0x19c, 4), (ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0x197, 4)]
[(ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0x19c, 4), (ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x19c, 4), (stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x19c, 4), (stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x19c, 4), (stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x197, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x19c, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x197, 4)]
[ ---  CBRANCH (ram, 0x22310c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x210240, 8) , (unique, 0x1000022e, 8) , (const, 0x4, 4), (unique, 0x1000022e, 8) CAST (register, 0x20, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000236, 8), (unique, 0x10000236, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x1, 8)]
[(unique, 0x10000149, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000151, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000159, 4) MULTIEQUAL (ram, 0x4ee430, 4) , (ram, 0x4ee430, 4)]
[(unique, 0x1000015d, 4) MULTIEQUAL (ram, 0x4ee434, 4) , (ram, 0x4ee434, 4)]
[(unique, 0x10000161, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(unique, 0x10000165, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(unique, 0x10000167, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(unique, 0x10000168, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x223123, 1) , (unique, 0x10000148, 1), (unique, 0x10000148, 1) INT_EQUAL (unique, 0x10000144, 4) , (const, 0x6, 4), (unique, 0x10000144, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x223123, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000144, 4) , (const, 0x9, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000149, 8) , (const, 0x14d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000151, 8) , (const, 0x14d, 4)]
[(ram, 0x4ee430, 4) INDIRECT (unique, 0x10000159, 4) , (const, 0x14d, 4)]
[(ram, 0x4ee434, 4) INDIRECT (unique, 0x1000015d, 4) , (const, 0x14d, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x10000161, 4) , (const, 0x14d, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (unique, 0x10000165, 2) , (const, 0x14d, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (unique, 0x10000167, 1) , (const, 0x14d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x10000168, 8) , (const, 0x14d, 4)]
[(register, 0x0, 4) CALL (ram, 0x222ec0, 8) , (unique, 0x10000144, 4) , (const, 0x80005, 4) , (const, 0x0, 4)]
[(register, 0xa0, 4) COPY (const, 0x5, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000149, 8) , (const, 0x185, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000151, 8) , (const, 0x185, 4)]
[(ram, 0x4ee430, 4) INDIRECT (unique, 0x10000159, 4) , (const, 0x185, 4)]
[(ram, 0x4ee434, 4) INDIRECT (unique, 0x1000015d, 4) , (const, 0x185, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (unique, 0x10000161, 4) , (const, 0x185, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (unique, 0x10000165, 2) , (const, 0x185, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (unique, 0x10000167, 1) , (const, 0x185, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x10000168, 8) , (const, 0x185, 4)]
[(register, 0x0, 4) CALL (ram, 0x222ec0, 8) , (unique, 0x10000144, 4) , (const, 0x80002, 4) , (const, 0x0, 4)]
[(register, 0xa0, 4) COPY (const, 0x2, 4)]
[(unique, 0x10000179, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000185, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000018d, 4) MULTIEQUAL (ram, 0x4ee430, 4) , (ram, 0x4ee430, 4)]
[(unique, 0x10000191, 4) MULTIEQUAL (ram, 0x4ee434, 4) , (ram, 0x4ee434, 4)]
[(unique, 0x10000195, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(unique, 0x10000199, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(unique, 0x1000019b, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(unique, 0x1000019c, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x100001fe, 4) COPY (unique, 0x10000181, 4), (unique, 0x10000181, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0x10000216, 4) COPY (unique, 0x10000144, 4)]
[ ---  CBRANCH (ram, 0x22313c, 1) , (unique, 0x10000174, 1), (unique, 0x10000174, 1) INT_NOTEQUAL (unique, 0x10000175, 4) , (const, 0xffffffff, 4), (unique, 0x10000175, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x1000019c, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (unique, 0x1000019b, 1) , (stack, 0xffffffffffffffbe, 1)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (unique, 0x10000199, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (unique, 0x10000195, 4) , (stack, 0xffffffffffffffb8, 4)]
[(ram, 0x4ee434, 4) MULTIEQUAL (unique, 0x10000191, 4) , (ram, 0x4ee434, 4)]
[(ram, 0x4ee430, 4) MULTIEQUAL (unique, 0x1000018d, 4) , (ram, 0x4ee430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x10000185, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000179, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x223150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) COPY (const, 0x2b1f20, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x14, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b1e40, 8)]
[ ---  BRANCH (ram, 0x2230af, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(ram, 0x4ee434, 4) MULTIEQUAL (ram, 0x4ee434, 4) , (ram, 0x4ee434, 4)]
[(ram, 0x4ee430, 4) MULTIEQUAL (ram, 0x4ee430, 4) , (ram, 0x4ee430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x223080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x6, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x30, 4) COPY (const, 0x80002, 4)]
[(register, 0xa0, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x2230b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x9, 4)]
[(register, 0x30, 4) COPY (const, 0x80005, 4)]
[(register, 0xa0, 4) COPY (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x223090, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xed, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xed, 4)]
[(ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0xed, 4)]
[(ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0xed, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xed, 4)]
[(unique, 0x100001fa, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(unique, 0x10000212, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22313c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x222ec0, 8) , (unique, 0xbc80, 4) , (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x223150, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (unique, 0x10000246, 8), (unique, 0x10000246, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b1f1c, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x5, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024e, 8) , (const, 0x2, 4), (unique, 0x1000024e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100001f6, 4) COPY (ram, 0x4ee430, 4), (ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0x10f, 4), (ram, 0x4ee430, 4) MULTIEQUAL (ram, 0x4ee430, 4) , (ram, 0x4ee430, 4)]
[(unique, 0x1000020e, 4) COPY (ram, 0x4ee434, 4), (ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0x10f, 4), (ram, 0x4ee434, 4) MULTIEQUAL (ram, 0x4ee434, 4) , (ram, 0x4ee434, 4)]
[ ---  BRANCH (ram, 0x222fe6, 1)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1) , (unique, 0x1000019b, 1)]
[(stack, 0xffffffffffffffbc, 2) MULTIEQUAL (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (stack, 0xffffffffffffffbc, 2) , (unique, 0x10000199, 2)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (unique, 0x10000195, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000185, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0x10000175, 4)]
[(ram, 0x4ee434, 4) COPY (unique, 0x1000021a, 4), (unique, 0x1000021a, 4) MULTIEQUAL (unique, 0x10000206, 4) , (unique, 0x10000206, 4) , (unique, 0x1000020e, 4) , (unique, 0x10000212, 4) , (unique, 0x10000216, 4)]
[(ram, 0x4ee430, 4) COPY (unique, 0x10000202, 4), (unique, 0x10000202, 4) MULTIEQUAL (unique, 0x100001ee, 4) , (unique, 0x100001ee, 4) , (unique, 0x100001f6, 4) , (unique, 0x100001fa, 4) , (unique, 0x100001fe, 4)]
[ ---  CBRANCH (ram, 0x223168, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000256, 8), (unique, 0x10000256, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000179, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0x1000019c, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ee430, 4) COPY (ram, 0x4ee430, 4)]
[(ram, 0x4ee434, 4) COPY (ram, 0x4ee434, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x89, 4)]
[(stack, 0xffffffffffffffbc, 2) INDIRECT (stack, 0xffffffffffffffbc, 2) , (const, 0x89, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x89, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x89, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x89, 4)]
[(ram, 0x4ee430, 4) COPY (ram, 0x4ee430, 4), (ram, 0x4ee430, 4) INDIRECT (ram, 0x4ee430, 4) , (const, 0x89, 4)]
[(ram, 0x4ee434, 4) COPY (ram, 0x4ee434, 4), (ram, 0x4ee434, 4) INDIRECT (ram, 0x4ee434, 4) , (const, 0x89, 4)]
[ ---  RETURN (const, 0x1, 4)]
