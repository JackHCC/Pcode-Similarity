[ ---  CBRANCH (ram, 0x291630, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x50, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x52, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100013d5, 8), (unique, 0x100013d5, 8) INT_ADD (unique, 0x100013cd, 8) , (register, 0x8, 8), (unique, 0x100013cd, 8) CAST (unique, 0x1000022e, 8), (unique, 0x1000022e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100013c9, 4), (unique, 0x100013c9, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000226, 8) , (unique, 0x100002b6, 8) , (const, 0x4, 8), (unique, 0x100002b6, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0x10000226, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (unique, 0x100002a6, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100002a6, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (unique, 0x10000296, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000296, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x100010a1, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001211, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x10, 8) PTRADD (unique, 0x100002c6, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x100002c6, 8) PTRSUB (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) CAST (unique, 0x100013fd, 8), (unique, 0x100013fd, 8) INT_SUB (unique, 0x100013ed, 8) , (unique, 0x100013f5, 8), (unique, 0x100013f5, 8) CAST (register, 0x30, 8), (unique, 0x100013ed, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100013e5, 8), (unique, 0x100013e5, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x100013dd, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100013dd, 8) CAST (register, 0x30, 8)]
[(register, 0x1220, 8) SUBPIECE (unique, 0x5300, 16) , (const, 0x0, 4)]
[(unique, 0x100013b9, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100013e5, 8), (unique, 0x100013e5, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x100013dd, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100013dd, 8) CAST (register, 0x30, 8)]
[(unique, 0x100013c1, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10001415, 8), (unique, 0x10001415, 8) INT_SUB (unique, 0x10001405, 8) , (unique, 0x1000140d, 8), (unique, 0x1000140d, 8) CAST (register, 0x8, 8), (unique, 0x10001405, 8) CAST (register, 0x38, 8), (register, 0x8, 8) CAST (unique, 0x100013fd, 8), (unique, 0x100013fd, 8) INT_SUB (unique, 0x100013ed, 8) , (unique, 0x100013f5, 8), (unique, 0x100013f5, 8) CAST (register, 0x30, 8), (unique, 0x100013ed, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100013e5, 8), (unique, 0x100013e5, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x100013dd, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100013dd, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x291b70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58f00, 8) , (const, 0x0, 8), (unique, 0x58f00, 8) INT_AND (unique, 0x1000141d, 8) , (const, 0xf, 8), (unique, 0x1000141d, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10001415, 8), (unique, 0x10001415, 8) INT_SUB (unique, 0x10001405, 8) , (unique, 0x1000140d, 8), (unique, 0x1000140d, 8) CAST (register, 0x8, 8), (unique, 0x10001405, 8) CAST (register, 0x38, 8), (register, 0x8, 8) CAST (unique, 0x100013fd, 8), (unique, 0x100013fd, 8) INT_SUB (unique, 0x100013ed, 8) , (unique, 0x100013f5, 8), (unique, 0x100013f5, 8) CAST (register, 0x30, 8), (unique, 0x100013ed, 8) CAST (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100013e5, 8), (unique, 0x100013e5, 8) INT_ADD (register, 0x30, 8) , (const, 0x10, 8), (register, 0x30, 8) INT_AND (unique, 0x100013dd, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100013dd, 8) CAST (register, 0x30, 8)]
[(unique, 0x10001051, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291c30, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x81, 8)]
[ ---  CBRANCH (ram, 0x291f70, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x200, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291ffb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (register, 0x10, 8), (register, 0x80, 8) CAST (unique, 0x10001425, 8), (unique, 0x10001425, 8) INT_ADD (register, 0x80, 8) , (ram, 0x4eb330, 8), (register, 0x80, 8) INT_RIGHT (ram, 0x4eb330, 8) , (const, 0x1, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292080, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292000, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001435, 8), (unique, 0x10001435, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000142d, 8) , (const, 0x1, 8), (unique, 0x1000142d, 8) CAST (unique, 0x100009e6, 8), (unique, 0x100009e6, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10001445, 8), (unique, 0x10001445, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000143d, 8) , (const, 0x1, 8), (unique, 0x1000143d, 8) CAST (unique, 0x10000a06, 8), (unique, 0x10000a06, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292080, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291f90, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001455, 8), (unique, 0x10001455, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000144d, 8) , (const, 0x1, 8), (unique, 0x1000144d, 8) CAST (unique, 0x1000095e, 8), (unique, 0x1000095e, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10001465, 8), (unique, 0x10001465, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000145d, 8) , (const, 0x1, 8), (unique, 0x1000145d, 8) CAST (unique, 0x1000097e, 8), (unique, 0x1000097e, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(unique, 0x10001049, 8) COPY (register, 0x10, 8)]
[(unique, 0x100011f1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x291d70, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x101, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff00, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000146d, 8), (unique, 0x1000146d, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29218d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001475, 8), (unique, 0x10001475, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292183, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000147d, 8), (unique, 0x1000147d, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292179, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001485, 8), (unique, 0x10001485, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29216f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000148d, 8), (unique, 0x1000148d, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292165, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001495, 8), (unique, 0x10001495, 8) INT_ADD (register, 0x30, 8) , (const, 0x70, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292155, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000149d, 8), (unique, 0x1000149d, 8) INT_ADD (register, 0x30, 8) , (const, 0x80, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292145, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014a5, 8), (unique, 0x100014a5, 8) INT_ADD (register, 0x30, 8) , (const, 0x90, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292135, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014ad, 8), (unique, 0x100014ad, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292125, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014b5, 8), (unique, 0x100014b5, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292112, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014bd, 8), (unique, 0x100014bd, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2920ff, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014c5, 8), (unique, 0x100014c5, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2920ec, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014cd, 8), (unique, 0x100014cd, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2920d9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014d5, 8), (unique, 0x100014d5, 8) INT_ADD (register, 0x30, 8) , (const, 0xf0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014dd, 8), (unique, 0x100014dd, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2920c6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100014dd, 8), (unique, 0x100014dd, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100014e5, 8), (unique, 0x100014e5, 8) INT_ADD (register, 0x30, 8) , (const, 0x110, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291c4a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(unique, 0x10001061, 8) COPY (register, 0x10, 8)]
[(unique, 0x10001099, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001209, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x291b7d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291f54, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100014ed, 8), (unique, 0x100014ed, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100014ed, 8), (unique, 0x100014ed, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffee0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100014f5, 8), (unique, 0x100014f5, 8) INT_ADD (register, 0x30, 8) , (const, 0x130, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0xb2e, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10001521, 8), (unique, 0x10001521, 8) INT_ADD (unique, 0x10001519, 8) , (register, 0x8, 8), (unique, 0x10001519, 8) CAST (unique, 0x1000028e, 8), (unique, 0x1000028e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10001515, 4), (unique, 0x10001515, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000286, 8) , (unique, 0x1000150d, 8) , (const, 0x4, 8), (unique, 0x1000150d, 8) CAST (register, 0x10, 8), (unique, 0x10000286, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001505, 8) , (const, 0x1, 8), (unique, 0x10001505, 8) CAST (unique, 0x100008ee, 8), (unique, 0x100008ee, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x100014fd, 8) , (const, 0x1, 8), (unique, 0x100014fd, 8) CAST (unique, 0x100008ce, 8), (unique, 0x100008ce, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10001049, 8) , (register, 0x10, 8)]
[(unique, 0x100010e1, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10001251, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100011f1, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100011f1, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10001309, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29218d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292183, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292179, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29216f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292165, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292155, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[(unique, 0x10001059, 8) COPY (register, 0x10, 8)]
[(unique, 0x10001091, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[(unique, 0x10001201, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291b7d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291d49, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x10000216, 8), (unique, 0x10000216, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8)]
[(unique, 0x100010e9, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001259, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(unique, 0x10001141, 8) COPY (register, 0x30, 8)]
[(unique, 0x100012b1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff60, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x989, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000154d, 8), (unique, 0x1000154d, 8) INT_ADD (unique, 0x10001545, 8) , (register, 0x8, 8), (unique, 0x10001545, 8) CAST (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10001541, 4), (unique, 0x10001541, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000276, 8) , (unique, 0x10001539, 8) , (const, 0x4, 8), (unique, 0x10001539, 8) CAST (register, 0x10, 8), (unique, 0x10000276, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001531, 8) , (const, 0x1, 8), (unique, 0x10001531, 8) CAST (unique, 0x10000806, 8), (unique, 0x10000806, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001529, 8) , (const, 0x1, 8), (unique, 0x10001529, 8) CAST (unique, 0x100007e6, 8), (unique, 0x100007e6, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10001051, 8) , (unique, 0x10001059, 8) , (unique, 0x10001061, 8)]
[(unique, 0x100010d9, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100013b9, 8) , (unique, 0x10001091, 8) , (unique, 0x10001099, 8)]
[(unique, 0x10001249, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100013c1, 8) , (unique, 0x10001201, 8) , (unique, 0x10001209, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100013b9, 8) , (unique, 0x10001091, 8) , (unique, 0x10001099, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100013c1, 8) , (unique, 0x10001201, 8) , (unique, 0x10001209, 8)]
[(unique, 0x10001131, 8) COPY (register, 0x30, 8)]
[(unique, 0x100012a1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10001189, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001301, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29218d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292183, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291c0f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x292179, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29216f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffa0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x85f, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x10001579, 8), (unique, 0x10001579, 8) INT_ADD (unique, 0x10001571, 8) , (register, 0x8, 8), (unique, 0x10001571, 8) CAST (unique, 0x1000026e, 8), (unique, 0x1000026e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000156d, 4), (unique, 0x1000156d, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000266, 8) , (unique, 0x10001565, 8) , (const, 0x4, 8), (unique, 0x10001565, 8) CAST (register, 0x10, 8), (unique, 0x10000266, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000155d, 8) , (const, 0x1, 8), (unique, 0x1000155d, 8) CAST (unique, 0x1000070e, 8), (unique, 0x1000070e, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001555, 8) , (const, 0x1, 8), (unique, 0x10001555, 8) CAST (unique, 0x100006ee, 8), (unique, 0x100006ee, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(unique, 0x10001071, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291727, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x81, 8)]
[ ---  CBRANCH (ram, 0x291a60, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x201, 8)]
[(unique, 0x10001069, 8) COPY (register, 0x10, 8)]
[(unique, 0x100012c9, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x291858, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x101, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff00, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001581, 8), (unique, 0x10001581, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10001181, 8) COPY (register, 0x30, 8)]
[(unique, 0x100012f9, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29218d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001589, 8), (unique, 0x10001589, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(unique, 0x100011a1, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001321, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292183, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001591, 8), (unique, 0x10001591, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(unique, 0x100011c1, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001349, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292179, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001599, 8), (unique, 0x10001599, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100011e1, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001371, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29216f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100015a1, 8), (unique, 0x100015a1, 8) INT_ADD (register, 0x30, 8) , (const, 0x60, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[(unique, 0x10001391, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292165, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100015a9, 8), (unique, 0x100015a9, 8) INT_ADD (register, 0x30, 8) , (const, 0x70, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[(unique, 0x100013a9, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292155, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100015b1, 8), (unique, 0x100015b1, 8) INT_ADD (register, 0x30, 8) , (const, 0x80, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292145, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100015b9, 8), (unique, 0x100015b9, 8) INT_ADD (register, 0x30, 8) , (const, 0x90, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100015c1, 8), (unique, 0x100015c1, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x292135, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100015c9, 8), (unique, 0x100015c9, 8) INT_ADD (register, 0x30, 8) , (const, 0xa0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100015d1, 8), (unique, 0x100015d1, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x292125, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100015d9, 8), (unique, 0x100015d9, 8) INT_ADD (register, 0x30, 8) , (const, 0xb0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100015e1, 8), (unique, 0x100015e1, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x292112, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100015e9, 8), (unique, 0x100015e9, 8) INT_ADD (register, 0x30, 8) , (const, 0xc0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xb, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100015f1, 8), (unique, 0x100015f1, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x2920ff, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100015f9, 8), (unique, 0x100015f9, 8) INT_ADD (register, 0x30, 8) , (const, 0xd0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xc, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001601, 8), (unique, 0x10001601, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x2920ec, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10001609, 8), (unique, 0x10001609, 8) INT_ADD (register, 0x30, 8) , (const, 0xe0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xd, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001611, 8), (unique, 0x10001611, 8) INT_ADD (register, 0x30, 8) , (const, 0xf0, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x2920d9, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10001619, 8), (unique, 0x10001619, 8) INT_ADD (register, 0x30, 8) , (const, 0xf0, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xe, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001621, 8), (unique, 0x10001621, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10001629, 8), (unique, 0x10001629, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2920c6, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10001629, 8), (unique, 0x10001629, 8) INT_ADD (register, 0x30, 8) , (const, 0x100, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0xf, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001631, 8), (unique, 0x10001631, 8) INT_ADD (register, 0x30, 8) , (const, 0x110, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291741, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x7f, 8) , (register, 0x10, 8)]
[(unique, 0x10001081, 8) COPY (register, 0x10, 8)]
[(unique, 0x10001169, 8) COPY (register, 0x30, 8)]
[(unique, 0x100012e1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x291675, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291a3c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x10000206, 8), (unique, 0x10000206, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001639, 8), (unique, 0x10001639, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001639, 8), (unique, 0x10001639, 8) INT_ADD (register, 0x30, 8) , (const, 0x120, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x11, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffee0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x12, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001641, 8), (unique, 0x10001641, 8) INT_ADD (register, 0x30, 8) , (const, 0x130, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x57e, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x1000166d, 8), (unique, 0x1000166d, 8) INT_ADD (unique, 0x10001665, 8) , (register, 0x8, 8), (unique, 0x10001665, 8) CAST (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10001661, 4), (unique, 0x10001661, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000256, 8) , (unique, 0x10001659, 8) , (const, 0x4, 8), (unique, 0x10001659, 8) CAST (register, 0x10, 8), (unique, 0x10000256, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001651, 8) , (const, 0x1, 8), (unique, 0x10001651, 8) CAST (unique, 0x10000546, 8), (unique, 0x10000546, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001649, 8) , (const, 0x1, 8), (unique, 0x10001649, 8) CAST (unique, 0x10000526, 8), (unique, 0x10000526, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001675, 8), (unique, 0x10001675, 8) INT_ADD (register, 0x30, 8) , (const, 0x110, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff80, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10001069, 8) , (register, 0x10, 8)]
[(unique, 0x100010b9, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10001229, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012c9, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012c9, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10001179, 8) COPY (register, 0x30, 8)]
[(unique, 0x100012f1, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29218d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(unique, 0x10001199, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x292183, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(unique, 0x100011b9, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x292179, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(unique, 0x100011d9, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x29216f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292165, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012f1, 8) , (unique, 0x10001391, 8) , (unique, 0x10001309, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292155, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x7, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x10, 8)]
[(unique, 0x10001079, 8) COPY (register, 0x10, 8)]
[(unique, 0x10001161, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[(unique, 0x100012d9, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291675, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10001071, 8) , (unique, 0x10001079, 8) , (unique, 0x10001081, 8)]
[(unique, 0x100010a9, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100013b9, 8) , (unique, 0x10001161, 8) , (unique, 0x10001169, 8)]
[(unique, 0x10001219, 8) COPY (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100013c1, 8) , (unique, 0x100012d9, 8) , (unique, 0x100012e1, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100013b9, 8) , (unique, 0x10001161, 8) , (unique, 0x10001169, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100013c1, 8) , (unique, 0x100012d9, 8) , (unique, 0x100012e1, 8)]
[(unique, 0x10001101, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001271, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8)]
[(unique, 0x10001171, 8) COPY (register, 0x30, 8)]
[(unique, 0x100012e9, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29218d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292183, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012e9, 8) , (unique, 0x100012f1, 8) , (unique, 0x10001321, 8) , (unique, 0x10001301, 8) , (unique, 0x10001309, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10001171, 8) , (unique, 0x10001199, 8) , (unique, 0x100011a1, 8) , (unique, 0x10001189, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x291707, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x292179, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012e9, 8) , (unique, 0x100012f1, 8) , (unique, 0x10001349, 8) , (unique, 0x10001301, 8) , (unique, 0x10001309, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10001171, 8) , (unique, 0x100011b9, 8) , (unique, 0x100011c1, 8) , (unique, 0x10001189, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x29216f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffa0, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x16b, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100016a1, 8), (unique, 0x100016a1, 8) INT_ADD (unique, 0x10001699, 8) , (register, 0x8, 8), (unique, 0x10001699, 8) CAST (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10001695, 4), (unique, 0x10001695, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000236, 8) , (unique, 0x1000168d, 8) , (const, 0x4, 8), (unique, 0x1000168d, 8) CAST (register, 0x10, 8), (unique, 0x10000236, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (register, 0x10, 8) , (unique, 0x10001685, 8) , (const, 0x1, 8), (unique, 0x10001685, 8) CAST (unique, 0x10000366, 8), (unique, 0x10000366, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000167d, 8) , (const, 0x1, 8), (unique, 0x1000167d, 8) CAST (unique, 0x10000346, 8), (unique, 0x10000346, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012e9, 8) , (unique, 0x100012f1, 8) , (unique, 0x10001371, 8) , (unique, 0x10001301, 8) , (unique, 0x10001309, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x6, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10001171, 8) , (unique, 0x100011d9, 8) , (unique, 0x100011e1, 8) , (unique, 0x10001189, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[ ---  CBRANCH (ram, 0x291840, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (unique, 0x100001fe, 8), (unique, 0x100001fe, 8) PTRSUB (const, 0x0, 8) , (const, 0x20, 8)]
[(unique, 0x100010c1, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001231, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x29219d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 8) SUBPIECE (register, 0x1240, 16) , (const, 0x0, 4), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(unique, 0x10001119, 8) COPY (register, 0x30, 8)]
[(unique, 0x10001289, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292195, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x9, 8) , (const, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffff60, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0xa, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8), (ram, 0x4eb330, 8) INDIRECT (ram, 0x4eb330, 8) , (const, 0x3b3, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (register, 0x8, 8) , (const, 0x0, 8) , (register, 0x1220, 8) , (register, 0x1240, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) CAST (unique, 0x100016cd, 8), (unique, 0x100016cd, 8) INT_ADD (unique, 0x100016c5, 8) , (register, 0x8, 8), (unique, 0x100016c5, 8) CAST (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100016c1, 4), (unique, 0x100016c1, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000246, 8) , (unique, 0x100016b9, 8) , (const, 0x4, 8), (unique, 0x100016b9, 8) CAST (register, 0x10, 8), (unique, 0x10000246, 8) PTRSUB (const, 0x0, 8) , (const, 0x2bcd80, 8), (register, 0x38, 8) PTRADD (register, 0x10, 8) , (unique, 0x100016b1, 8) , (const, 0x1, 8), (unique, 0x100016b1, 8) CAST (unique, 0x1000045e, 8), (unique, 0x1000045e, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x30, 8) PTRADD (register, 0x10, 8) , (unique, 0x100016a9, 8) , (const, 0x1, 8), (unique, 0x100016a9, 8) CAST (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x1240, 8) MULTIEQUAL (register, 0x1240, 8) , (register, 0x1240, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012f1, 8) , (unique, 0x100013a9, 8) , (unique, 0x10001309, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x8, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[(unique, 0x10001109, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10001171, 8) , (unique, 0x10001179, 8) , (unique, 0x10001181, 8) , (unique, 0x10001189, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10001279, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100012e9, 8) , (unique, 0x100012f1, 8) , (unique, 0x100012f9, 8) , (unique, 0x10001301, 8) , (unique, 0x10001309, 8) , (register, 0x38, 8)]
[(unique, 0x100010b1, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10001101, 8) , (unique, 0x10001109, 8) , (unique, 0x100010b9, 8) , (unique, 0x10001119, 8) , (unique, 0x100013b9, 8) , (unique, 0x10001169, 8) , (unique, 0x10001131, 8) , (unique, 0x100010e1, 8) , (unique, 0x10001141, 8) , (unique, 0x100013b9, 8) , (unique, 0x10001099, 8)]
[(unique, 0x10001221, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10001271, 8) , (unique, 0x10001279, 8) , (unique, 0x10001229, 8) , (unique, 0x10001289, 8) , (unique, 0x100013c1, 8) , (unique, 0x100012e1, 8) , (unique, 0x100012a1, 8) , (unique, 0x10001251, 8) , (unique, 0x100012b1, 8) , (unique, 0x100013c1, 8) , (unique, 0x10001209, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10001211, 8) , (unique, 0x10001219, 8) , (unique, 0x10001221, 8) , (unique, 0x10001229, 8) , (unique, 0x10001231, 8) , (unique, 0x100013c1, 8) , (unique, 0x100012e1, 8) , (unique, 0x10001249, 8) , (unique, 0x10001251, 8) , (unique, 0x10001259, 8) , (unique, 0x100013c1, 8) , (unique, 0x10001209, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100010a1, 8) , (unique, 0x100010a9, 8) , (unique, 0x100010b1, 8) , (unique, 0x100010b9, 8) , (unique, 0x100010c1, 8) , (unique, 0x100013b9, 8) , (unique, 0x10001169, 8) , (unique, 0x100010d9, 8) , (unique, 0x100010e1, 8) , (unique, 0x100010e9, 8) , (unique, 0x100013b9, 8) , (unique, 0x10001099, 8)]
[ ---  CBRANCH (ram, 0x291aeb, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 8) , (register, 0x10, 8), (register, 0x80, 8) CAST (unique, 0x100016d5, 8), (unique, 0x100016d5, 8) INT_ADD (register, 0x80, 8) , (ram, 0x4eb330, 8), (register, 0x80, 8) INT_RIGHT (ram, 0x4eb330, 8) , (const, 0x1, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292080, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291af0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x100016e5, 8), (unique, 0x100016e5, 8) PTRADD (register, 0x10, 8) , (unique, 0x100016dd, 8) , (const, 0x1, 8), (unique, 0x100016dd, 8) CAST (unique, 0x1000063e, 8), (unique, 0x1000063e, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x100016f5, 8), (unique, 0x100016f5, 8) PTRADD (register, 0x10, 8) , (unique, 0x100016ed, 8) , (const, 0x1, 8), (unique, 0x100016ed, 8) CAST (unique, 0x1000065e, 8), (unique, 0x1000065e, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffc0, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292080, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1220, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x12a0, 16), (register, 0x12a0, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1220, 16) , (register, 0x1280, 16), (register, 0x1280, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8), (register, 0x1220, 16) INT_OR (register, 0x1240, 16) , (register, 0x1260, 16), (register, 0x1260, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x1280, 16) MULTIEQUAL (register, 0x1280, 16) , (register, 0x1280, 16) , (register, 0x1280, 16) , (register, 0x1280, 16)]
[(register, 0x1260, 16) MULTIEQUAL (register, 0x1260, 16) , (register, 0x1260, 16) , (register, 0x1260, 16) , (register, 0x1260, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2921a5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) MULTIEQUAL (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16) , (register, 0x1240, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2921a5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1260, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2921a5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1280, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x2921a5, 1)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x291a80, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x3f, 8) , (register, 0x10, 8)]
[(register, 0x30, 8) CAST (unique, 0x10001705, 8), (unique, 0x10001705, 8) PTRADD (register, 0x10, 8) , (unique, 0x100016fd, 8) , (const, 0x1, 8), (unique, 0x100016fd, 8) CAST (unique, 0x100005b6, 8), (unique, 0x100005b6, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x38, 8) CAST (unique, 0x10001715, 8), (unique, 0x10001715, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000170d, 8) , (const, 0x1, 8), (unique, 0x1000170d, 8) CAST (unique, 0x100005d6, 8), (unique, 0x100005d6, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  BRANCHIND (register, 0x10, 8)]
[(register, 0x10, 1) COPY (const, 0xc4, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001725, 8), (unique, 0x10001725, 8) PTRADD (unique, 0x10000e36, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000e36, 8) PTRSUB (unique, 0x10000e2e, 8) , (const, 0x0, 8), (unique, 0x10000e2e, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000171d, 8), (unique, 0x1000171d, 8) PTRADD (unique, 0x10000e16, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000e16, 8) PTRSUB (unique, 0x10000e0e, 8) , (const, 0x0, 8), (unique, 0x10000e0e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xc8, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001735, 8), (unique, 0x10001735, 8) PTRADD (unique, 0x10000d36, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000d36, 8) PTRSUB (unique, 0x10000d2e, 8) , (const, 0x0, 8), (unique, 0x10000d2e, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000172d, 8), (unique, 0x1000172d, 8) PTRADD (unique, 0x10000d16, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000d16, 8) PTRSUB (unique, 0x10000d0e, 8) , (const, 0x0, 8), (unique, 0x10000d0e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xcc, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001745, 8), (unique, 0x10001745, 8) PTRADD (unique, 0x10000c36, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c36, 8) PTRSUB (unique, 0x10000c2e, 8) , (const, 0x0, 8), (unique, 0x10000c2e, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000173d, 8), (unique, 0x1000173d, 8) PTRADD (unique, 0x10000c16, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c16, 8) PTRSUB (unique, 0x10000c0e, 8) , (const, 0x0, 8), (unique, 0x10000c0e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd0, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd4, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001755, 8), (unique, 0x10001755, 8) PTRADD (unique, 0x10000e76, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000e76, 8) PTRSUB (unique, 0x10000e6e, 8) , (const, 0x0, 8), (unique, 0x10000e6e, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000174d, 8), (unique, 0x1000174d, 8) PTRADD (unique, 0x10000e56, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000e56, 8) PTRSUB (unique, 0x10000e4e, 8) , (const, 0x0, 8), (unique, 0x10000e4e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xd8, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001765, 8), (unique, 0x10001765, 8) PTRADD (unique, 0x10000d76, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000d76, 8) PTRSUB (unique, 0x10000d6e, 8) , (const, 0x0, 8), (unique, 0x10000d6e, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000175d, 8), (unique, 0x1000175d, 8) PTRADD (unique, 0x10000d56, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000d56, 8) PTRSUB (unique, 0x10000d4e, 8) , (const, 0x0, 8), (unique, 0x10000d4e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xdc, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10001775, 8), (unique, 0x10001775, 8) PTRADD (unique, 0x10000c76, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c76, 8) PTRSUB (unique, 0x10000c6e, 8) , (const, 0x0, 8), (unique, 0x10000c6e, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000176d, 8), (unique, 0x1000176d, 8) PTRADD (unique, 0x10000c56, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c56, 8) PTRSUB (unique, 0x10000c4e, 8) , (const, 0x0, 8), (unique, 0x10000c4e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) COPY (const, 0xe0, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001785, 8), (unique, 0x10001785, 8) CAST (unique, 0x10000f7e, 8), (unique, 0x10000f7e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000177d, 8), (unique, 0x1000177d, 8) CAST (unique, 0x10000f6e, 8), (unique, 0x10000f6e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001795, 8), (unique, 0x10001795, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000fb6, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000fb6, 8) PTRSUB (unique, 0x10000fae, 8) , (const, 0x0, 8), (unique, 0x10000fae, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000178d, 8), (unique, 0x1000178d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f96, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000f96, 8) PTRSUB (unique, 0x10000f8e, 8) , (const, 0x0, 8), (unique, 0x10000f8e, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe4, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100017a5, 8), (unique, 0x100017a5, 8) PTRADD (unique, 0x10000eb6, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000eb6, 8) PTRSUB (unique, 0x10000eae, 8) , (const, 0x0, 8), (unique, 0x10000eae, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000179d, 8), (unique, 0x1000179d, 8) PTRADD (unique, 0x10000e96, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000e96, 8) PTRSUB (unique, 0x10000e8e, 8) , (const, 0x0, 8), (unique, 0x10000e8e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100017b5, 8), (unique, 0x100017b5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000ef6, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000ef6, 8) PTRSUB (unique, 0x10000eee, 8) , (const, 0x0, 8), (unique, 0x10000eee, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100017ad, 8), (unique, 0x100017ad, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000ed6, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000ed6, 8) PTRSUB (unique, 0x10000ece, 8) , (const, 0x0, 8), (unique, 0x10000ece, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100017c5, 8), (unique, 0x100017c5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f36, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000f36, 8) PTRSUB (unique, 0x10000f2e, 8) , (const, 0x0, 8), (unique, 0x10000f2e, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100017bd, 8), (unique, 0x100017bd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f16, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000f16, 8) PTRSUB (unique, 0x10000f0e, 8) , (const, 0x0, 8), (unique, 0x10000f0e, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4), (unique, 0x28b00, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100017cd, 8), (unique, 0x100017cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f36, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000f36, 8) PTRSUB (unique, 0x10000f2e, 8) , (const, 0x0, 8), (unique, 0x10000f2e, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100017bd, 8), (unique, 0x100017bd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f16, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000f16, 8) PTRSUB (unique, 0x10000f0e, 8) , (const, 0x0, 8), (unique, 0x10000f0e, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100017cd, 8), (unique, 0x100017cd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f36, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000f36, 8) PTRSUB (unique, 0x10000f2e, 8) , (const, 0x0, 8), (unique, 0x10000f2e, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100017bd, 8), (unique, 0x100017bd, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000f16, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000f16, 8) PTRSUB (unique, 0x10000f0e, 8) , (const, 0x0, 8), (unique, 0x10000f0e, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xe8, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100017dd, 8), (unique, 0x100017dd, 8) PTRADD (unique, 0x10000db6, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000db6, 8) PTRSUB (unique, 0x10000dae, 8) , (const, 0x0, 8), (unique, 0x10000dae, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100017d5, 8), (unique, 0x100017d5, 8) PTRADD (unique, 0x10000d96, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000d96, 8) PTRSUB (unique, 0x10000d8e, 8) , (const, 0x0, 8), (unique, 0x10000d8e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100017ed, 8), (unique, 0x100017ed, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000df6, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000df6, 8) PTRSUB (unique, 0x10000dee, 8) , (const, 0x0, 8), (unique, 0x10000dee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100017e5, 8), (unique, 0x100017e5, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000dd6, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000dd6, 8) PTRSUB (unique, 0x10000dce, 8) , (const, 0x0, 8), (unique, 0x10000dce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 1) COPY (const, 0xec, 1)]
[ ---  CBRANCH (ram, 0x2923e8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xb0680, 16) , (const, 0x0, 16), (unique, 0xb0680, 16) INT_AND (register, 0x1240, 16) , (unique, 0xb0580, 16), (unique, 0xb0580, 16) INT_NEGATE (const, 0x0, 16), (register, 0x1240, 16) INT_XOR (unique, 0x5300, 16) , (unique, 0x5300, 16), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100017fd, 8), (unique, 0x100017fd, 8) PTRADD (unique, 0x10000cb6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cb6, 8) PTRSUB (unique, 0x10000cae, 8) , (const, 0x0, 8), (unique, 0x10000cae, 8) PTRADD (register, 0x30, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100017f5, 8), (unique, 0x100017f5, 8) PTRADD (unique, 0x10000c96, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000c96, 8) PTRSUB (unique, 0x10000c8e, 8) , (const, 0x0, 8), (unique, 0x10000c8e, 8) PTRADD (register, 0x38, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000180d, 8), (unique, 0x1000180d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cf6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cf6, 8) PTRSUB (unique, 0x10000cee, 8) , (const, 0x0, 8), (unique, 0x10000cee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001805, 8), (unique, 0x10001805, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cd6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cd6, 8) PTRSUB (unique, 0x10000cce, 8) , (const, 0x0, 8), (unique, 0x10000cce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4), (unique, 0x28b00, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001815, 8), (unique, 0x10001815, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cf6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cf6, 8) PTRSUB (unique, 0x10000cee, 8) , (const, 0x0, 8), (unique, 0x10000cee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001805, 8), (unique, 0x10001805, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cd6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cd6, 8) PTRSUB (unique, 0x10000cce, 8) , (const, 0x0, 8), (unique, 0x10000cce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x292416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001815, 8), (unique, 0x10001815, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cf6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cf6, 8) PTRSUB (unique, 0x10000cee, 8) , (const, 0x0, 8), (unique, 0x10000cee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001805, 8), (unique, 0x10001805, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000cd6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000cd6, 8) PTRSUB (unique, 0x10000cce, 8) , (const, 0x0, 8), (unique, 0x10000cce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001825, 8), (unique, 0x10001825, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000fd6, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000fd6, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000181d, 8), (unique, 0x1000181d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000fc6, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000fc6, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 1), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8), (register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1) , (register, 0x10, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000182d, 8), (unique, 0x1000182d, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000fee, 8) , (unique, 0x10000fe6, 8) , (const, 0x1, 8), (unique, 0x10000fee, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0x10000fe6, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001835, 8), (unique, 0x10001835, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10001006, 8) , (unique, 0x10000ffe, 8) , (const, 0x1, 8), (unique, 0x10001006, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x10000ffe, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001845, 8), (unique, 0x10001845, 8) CAST (unique, 0x10000b3e, 8), (unique, 0x10000b3e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000183d, 8), (unique, 0x1000183d, 8) CAST (unique, 0x10000b2e, 8), (unique, 0x10000b2e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001855, 8), (unique, 0x10001855, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bb6, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000bb6, 8) PTRSUB (unique, 0x10000bae, 8) , (const, 0x0, 8), (unique, 0x10000bae, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000184d, 8), (unique, 0x1000184d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000b96, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000b96, 8) PTRSUB (unique, 0x10000b8e, 8) , (const, 0x0, 8), (unique, 0x10000b8e, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292403, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10001865, 8), (unique, 0x10001865, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000b76, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000b76, 8) PTRSUB (unique, 0x10000b6e, 8) , (const, 0x0, 8), (unique, 0x10000b6e, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000185d, 8), (unique, 0x1000185d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000b56, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000b56, 8) PTRSUB (unique, 0x10000b4e, 8) , (const, 0x0, 8), (unique, 0x10000b4e, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4), (unique, 0x28600, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x292416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x20b, 1) INT_SBORROW (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10001041, 8) , (const, 0x0, 4), (unique, 0x10001041, 8) INT_RIGHT (unique, 0x10001875, 8) , (const, 0x20, 4), (unique, 0x10001875, 8) CAST (register, 0x8, 8), (register, 0x0, 4) SUBPIECE (unique, 0x10001039, 8) , (const, 0x0, 4), (unique, 0x10001039, 8) INT_RIGHT (unique, 0x1000186d, 8) , (const, 0x20, 4), (unique, 0x1000186d, 8) CAST (register, 0x0, 8)]
[(register, 0x207, 1) INT_SLESS (unique, 0x28600, 4) , (const, 0x0, 4), (unique, 0x28600, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10001041, 8) , (const, 0x0, 4), (unique, 0x10001041, 8) INT_RIGHT (unique, 0x10001875, 8) , (const, 0x20, 4), (unique, 0x10001875, 8) CAST (register, 0x8, 8), (register, 0x0, 4) SUBPIECE (unique, 0x10001039, 8) , (const, 0x0, 4), (unique, 0x10001039, 8) INT_RIGHT (unique, 0x1000186d, 8) , (const, 0x20, 4), (unique, 0x1000186d, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x292416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (register, 0x0, 4), (register, 0x8, 4) SUBPIECE (unique, 0x10001041, 8) , (const, 0x0, 4), (unique, 0x10001041, 8) INT_RIGHT (unique, 0x10001875, 8) , (const, 0x20, 4), (unique, 0x10001875, 8) CAST (register, 0x8, 8), (register, 0x0, 4) SUBPIECE (unique, 0x10001039, 8) , (const, 0x0, 4), (unique, 0x10001039, 8) INT_RIGHT (unique, 0x1000186d, 8) , (const, 0x20, 4), (unique, 0x1000186d, 8) CAST (register, 0x0, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x20b, 1) INT_SBORROW (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10001885, 8), (unique, 0x10001885, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bf6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000bf6, 8) PTRSUB (unique, 0x10000bee, 8) , (const, 0x0, 8), (unique, 0x10000bee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000187d, 8), (unique, 0x1000187d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bd6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000bd6, 8) PTRSUB (unique, 0x10000bce, 8) , (const, 0x0, 8), (unique, 0x10000bce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x207, 1) INT_SLESS (unique, 0x28b00, 4) , (const, 0x0, 4), (unique, 0x28b00, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000188d, 8), (unique, 0x1000188d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bf6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000bf6, 8) PTRSUB (unique, 0x10000bee, 8) , (const, 0x0, 8), (unique, 0x10000bee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000187d, 8), (unique, 0x1000187d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bd6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000bd6, 8) PTRSUB (unique, 0x10000bce, 8) , (const, 0x0, 8), (unique, 0x10000bce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x292416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000188d, 8), (unique, 0x1000188d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bf6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000bf6, 8) PTRSUB (unique, 0x10000bee, 8) , (const, 0x0, 8), (unique, 0x10000bee, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000187d, 8), (unique, 0x1000187d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000bd6, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000bd6, 8) PTRSUB (unique, 0x10000bce, 8) , (const, 0x0, 8), (unique, 0x10000bce, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x292420, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) MULTIEQUAL (register, 0x207, 1) , (register, 0x207, 1) , (register, 0x207, 1) , (register, 0x207, 1) , (register, 0x207, 1), (register, 0x20b, 1) MULTIEQUAL (register, 0x20b, 1) , (register, 0x20b, 1) , (register, 0x20b, 1) , (register, 0x20b, 1) , (register, 0x20b, 1)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eb330, 8) COPY (ram, 0x4eb330, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
