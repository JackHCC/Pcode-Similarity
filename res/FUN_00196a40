[(unique, 0x10000337, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x27, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x27, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x27, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x27, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x27, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x27, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x27, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x27, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000347, 8) , (const, 0x0, 8), (unique, 0x10000347, 8) CAST (ram, 0x4eaee0, 8)]
[ ---  CBRANCH (ram, 0x196c10, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb264, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b7, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x3b7, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x3b7, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x3b7, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3b7, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3b7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3b7, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x3b7, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x3b7, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x3b7, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3b7, 4)]
[(stack, 0x0, 1) INDIRECT (stack, 0x0, 1) , (const, 0x3b7, 4)]
[(stack, 0x1, 7) INDIRECT (stack, 0x1, 7) , (const, 0x3b7, 4)]
[ ---  CALL (ram, 0x1913e0, 8)]
[ ---  CBRANCH (ram, 0x196a71, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) CAST (unique, 0x10000337, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x3b4, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x3b4, 4)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x3b4, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x3b4, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x3b4, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3b4, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x3b4, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x3b4, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x3b4, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3b4, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000035e, 8), (unique, 0x1000035e, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x10000246, 8), (unique, 0x10000246, 8) INT_ADD (unique, 0x10000327, 8) , (stack, 0x0, 1), (unique, 0x10000327, 8) INT_LEFT (unique, 0x1000031f, 8) , (const, 0x8, 8), (unique, 0x1000031f, 8) INT_SEXT (unique, 0x10000357, 7), (unique, 0x10000357, 7) CAST (stack, 0x1, 7)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000032f, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[ ---  CBRANCH (ram, 0x196b88, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x17, 8)]
[(unique, 0xc800, 1) INT_LESS (const, 0xffffffffffffffbf, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  BRANCH (ram, 0x196a86, 1)]
[(unique, 0x10000253, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) COPY (const, 0x20, 8)]
[(unique, 0x1000024f, 1) MULTIEQUAL (unique, 0x10000253, 1) , (unique, 0xc800, 1)]
[ ---  CBRANCH (ram, 0x196c90, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196c90, 1) , (unique, 0x1000024f, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000366, 8) , (const, 0xc, 4), (unique, 0x10000366, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x38b, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x38b, 4)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x38b, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x38b, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x38b, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x38b, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x38b, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x38b, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x38b, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x38b, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x4, 4), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x196ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000036e, 8), (unique, 0x1000036e, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196ac1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead80, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x360, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x360, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x360, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x360, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x360, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x360, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x360, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x360, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x360, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x360, 4)]
[ ---  CALL (ram, 0x196460, 8)]
[ ---  CBRANCH (ram, 0x196ac1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x360, 4)]
[ ---  CBRANCH (ram, 0x196ac1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000376, 8), (unique, 0x10000376, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000032f, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x196be0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x196ac1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000037e, 8), (unique, 0x1000037e, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x40, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x196c38, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x40, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xb7d, 8)]
[ ---  CBRANCH (ram, 0x196c64, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000386, 8), (unique, 0x10000386, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b4db5, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b90a8, 8)]
[ ---  BRANCH (ram, 0x196b55, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000038e, 8), (unique, 0x1000038e, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_ADD (unique, 0xbb00, 1) , (const, 0xff, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000396, 8), (unique, 0x10000396, 8) INT_ADD (register, 0x8, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x316, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x30d, 4)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x316, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x30d, 4)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x316, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x30d, 4)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x316, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x30d, 4)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x316, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x30d, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x316, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30d, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x316, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x30d, 4)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x316, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x30d, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x316, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x30d, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x316, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x30d, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x196ca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0xbf, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0xbf, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0xbf, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0xbf, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0xbf, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbf, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0xbf, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0xbf, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0xbf, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xbf, 4)]
[ ---  CBRANCH (ram, 0x196c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000039e, 8), (unique, 0x1000039e, 8) CALL (ram, 0x1942d0, 8) , (unique, 0x100002aa, 8) , (register, 0x38, 8), (unique, 0x100002aa, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196c02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000d9, 8) , (const, 0x0, 8), (unique, 0x100000d9, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196c02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000e1, 8) , (const, 0x0, 8), (unique, 0x100000e1, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x196c02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100002a2, 8), (unique, 0x100002a2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003ae, 8), (unique, 0x100003ae, 8) INT_AND (unique, 0x100003a6, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100003a6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xbf3, 8)]
[ ---  CBRANCH (ram, 0x196b47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003b6, 8), (unique, 0x100003b6, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8d18, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b9038, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196db0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003be, 8), (unique, 0x100003be, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4ead70, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2b4, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x2b4, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2b4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b4, 4)]
[ ---  CBRANCH (ram, 0x196cf2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003c6, 8), (unique, 0x100003c6, 8) CALL (ram, 0x191da0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2d4, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2ce, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2d4, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2ce, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2d4, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2ce, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2d4, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2ce, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2d4, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2ce, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ce, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2d4, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2ce, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x2d4, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x2ce, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2d4, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2ce, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2d4, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ce, 4)]
[ ---  CBRANCH (ram, 0x196e0d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003d6, 8), (unique, 0x100003d6, 8) CALL (ram, 0x1942d0, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x100003ce, 8), (unique, 0x100003ce, 8) CALL (ram, 0x1916e0, 8) , (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196e0d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196cd5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x2b0, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x2b0, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x2b0, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x2b0, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x2b0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b0, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x2b0, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x2b0, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x2b0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2b0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1b6, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x1b6, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x1b6, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1b6, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1b6, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b6, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x1b6, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x1b6, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x1b6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x196cf2, 1)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x293, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x293, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x293, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x293, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x293, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x293, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x293, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x293, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x293, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x293, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1be, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x1be, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x1be, 4), (ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1be, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1be, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1be, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x1be, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x1be, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x1be, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1be, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x196df0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003de, 8), (unique, 0x100003de, 8) CALL (ram, 0x1942d0, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x27a, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x274, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x27a, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x274, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x27a, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x274, 4), (ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x27a, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x274, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x27a, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x274, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x274, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x27a, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x274, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x27a, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x274, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x27a, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x274, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x27a, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x274, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(register, 0x0, 8) CAST (unique, 0x100003ee, 8), (unique, 0x100003ee, 8) CALL (ram, 0x1942d0, 8) , (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) CAST (unique, 0x100003e6, 8), (unique, 0x100003e6, 8) CALL (ram, 0x191fc0, 8) , (register, 0x28, 8) , (register, 0x38, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196d36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x196d1a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x265, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x265, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x265, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x265, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x265, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x265, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x265, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x265, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x265, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x265, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x1d9, 4)]
[(ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x1d9, 4)]
[(ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x1d9, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x1d9, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x1d9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d9, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x1d9, 4)]
[(ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x1d9, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x1d9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1d9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0x100002d3, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(unique, 0x100002db, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(unique, 0x100002e3, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(unique, 0x100002eb, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(unique, 0x100002f3, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(unique, 0x100002fb, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000303, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(unique, 0x1000030b, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(unique, 0x1000030f, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(unique, 0x10000317, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x196d36, 1) , (unique, 0x100002d2, 1), (unique, 0x100002d2, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) MULTIEQUAL (unique, 0xbd00, 4) , (unique, 0xbd00, 4)]
[(ram, 0x4ead70, 8) INDIRECT (unique, 0x100002d3, 8) , (const, 0x257, 4)]
[(ram, 0x4ead78, 8) INDIRECT (unique, 0x100002db, 8) , (const, 0x257, 4)]
[(ram, 0x4ead80, 8) INDIRECT (unique, 0x100002e3, 8) , (const, 0x257, 4)]
[(ram, 0x4eadb0, 8) INDIRECT (unique, 0x100002eb, 8) , (const, 0x257, 4)]
[(ram, 0x4eadf0, 8) INDIRECT (unique, 0x100002f3, 8) , (const, 0x257, 4)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x100002fb, 8) , (const, 0x257, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (unique, 0x10000303, 8) , (const, 0x257, 4)]
[(ram, 0x4eb264, 4) INDIRECT (unique, 0x1000030b, 4) , (const, 0x257, 4)]
[(ram, 0x4eb2d0, 8) INDIRECT (unique, 0x1000030f, 8) , (const, 0x257, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000317, 4) , (const, 0x257, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (register, 0x28, 8)]
[(unique, 0x1000033f, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x257, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000317, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (unique, 0x1000030f, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (unique, 0x1000030b, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (unique, 0x10000303, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100002fb, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (unique, 0x100002f3, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (unique, 0x100002eb, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (unique, 0x100002e3, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (unique, 0x100002db, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (unique, 0x100002d3, 8) , (ram, 0x4ead70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x196c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000033f, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x196c02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001dd, 8) , (const, 0x0, 8), (unique, 0x100001dd, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ebc40, 8)]
[ ---  CBRANCH (ram, 0x196d63, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001e5, 8) , (const, 0x0, 8), (unique, 0x100001e5, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003fe, 8), (unique, 0x100003fe, 8) INT_AND (unique, 0x100003f6, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x100003f6, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x196c02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x28, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x88, 8) COPY (const, 0xc07, 8)]
[ ---  CBRANCH (ram, 0x196d98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000406, 8), (unique, 0x10000406, 8) CAST (ram, 0x4eadf0, 8)]
[(register, 0x8, 8) COPY (const, 0x2b3ed0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc8, 8) COPY (const, 0x2b8d80, 8)]
[(stack, 0xffffffffffffffb8, 8) COPY (const, 0x2b9038, 8)]
[ ---  BRANCH (ram, 0x196b55, 1)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x1000029a, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (unique, 0x10000292, 8) , (register, 0x88, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000028a, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0x1000029a, 8) COPY (const, 0x2b8758, 8), (unique, 0x10000292, 8) COPY (const, 0x2b4cf8, 8), (unique, 0x1000028a, 8) COPY (const, 0x2b3ed0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[ ---  CALL (ram, 0x17e7e0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000040e, 8), (unique, 0x1000040e, 8) CAST (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x13e, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[ ---  CALL (ram, 0x1406c0, 8)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x150, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x14d, 4), (ram, 0x4ead70, 8) INDIRECT (ram, 0x4ead70, 8) , (const, 0x13e, 4), (ram, 0x4ead70, 8) MULTIEQUAL (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8) , (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x150, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x14d, 4), (ram, 0x4ead78, 8) INDIRECT (ram, 0x4ead78, 8) , (const, 0x13e, 4), (ram, 0x4ead78, 8) MULTIEQUAL (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8) , (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x150, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x14d, 4), (ram, 0x4ead80, 8) INDIRECT (ram, 0x4ead80, 8) , (const, 0x13e, 4), (ram, 0x4ead80, 8) MULTIEQUAL (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8) , (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x150, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x14d, 4), (ram, 0x4eadb0, 8) INDIRECT (ram, 0x4eadb0, 8) , (const, 0x13e, 4), (ram, 0x4eadb0, 8) MULTIEQUAL (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8) , (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x150, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x14d, 4), (ram, 0x4eadf0, 8) INDIRECT (ram, 0x4eadf0, 8) , (const, 0x13e, 4), (ram, 0x4eadf0, 8) MULTIEQUAL (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8) , (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x150, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x14d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x150, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x14d, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x13e, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x150, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x14d, 4), (ram, 0x4eb264, 4) INDIRECT (ram, 0x4eb264, 4) , (const, 0x13e, 4), (ram, 0x4eb264, 4) MULTIEQUAL (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4) , (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x150, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x14d, 4), (ram, 0x4eb2d0, 8) INDIRECT (ram, 0x4eb2d0, 8) , (const, 0x13e, 4), (ram, 0x4eb2d0, 8) MULTIEQUAL (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8) , (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x150, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x14d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x13e, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ead70, 8) COPY (ram, 0x4ead70, 8)]
[(ram, 0x4ead78, 8) COPY (ram, 0x4ead78, 8)]
[(ram, 0x4ead80, 8) COPY (ram, 0x4ead80, 8)]
[(ram, 0x4eadb0, 8) COPY (ram, 0x4eadb0, 8)]
[(ram, 0x4eadf0, 8) COPY (ram, 0x4eadf0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4eb264, 4) COPY (ram, 0x4eb264, 4)]
[(ram, 0x4eb2d0, 8) COPY (ram, 0x4eb2d0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
