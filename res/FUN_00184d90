[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000245, 8), (unique, 0x10000245, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000245, 8), (unique, 0x10000245, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x184ee0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x184f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x400, 4)]
[ ---  CBRANCH (ram, 0x184ee5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x184f09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000154, 4) , (const, 0x0, 4), (unique, 0x10000154, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x184f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000144, 4) , (const, 0x0, 4), (unique, 0x10000144, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(register, 0x8, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x184fe0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x184ee5, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x58, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x58, 4)]
[(register, 0x0, 8) CALL (ram, 0x184d70, 8) , (register, 0x38, 8)]
[(unique, 0x10000174, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x184f30, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x184ee5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000014c, 4) , (const, 0x0, 4), (unique, 0x1000014c, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(unique, 0x10000211, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x184f28, 1) , (unique, 0x10000210, 1), (unique, 0x10000210, 1) INT_EQUAL (unique, 0x10000215, 4) , (const, 0x0, 4), (unique, 0x10000215, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x100, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x9, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x184ef1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x285, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x283, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x280, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x27e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffff7ff, 4)]
[ ---  CBRANCH (ram, 0x184f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000211, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (unique, 0x1000024d, 8) , (const, 0x2, 4), (unique, 0x1000024d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x18, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2bb, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) CALL (ram, 0x184d70, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x184df1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000150, 4) , (const, 0x0, 4), (unique, 0x10000150, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000211, 4) , (register, 0x8, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x10000174, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x185048, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x1fffffffffffffff, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x184e1a, 1)]
[ ---  CBRANCH (ram, 0x185018, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) INT_SUB (const, 0x1fffffffffffffff, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000255, 8), (unique, 0x10000255, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000255, 8), (unique, 0x10000255, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x184e1a, 1)]
[(register, 0x10, 8) INT_2COMP (register, 0xb0, 8)]
[(register, 0x0, 8) INT_SUB (const, 0x1fffffffffffffff, 8) , (register, 0xb0, 8)]
[(unique, 0x10000225, 8) COPY (register, 0xb0, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000225, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x185088, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x0, 8) , (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x185088, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x185060, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0xb0, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ea, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ea, 4)]
[ ---  CBRANCH (ram, 0x184e38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x184a50, 8) , (register, 0x38, 8) , (register, 0x18, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xca, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb0, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x1000023d, 8) COPY (register, 0x30, 8)]
[(unique, 0x100001e9, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8)]
[(unique, 0x100001f1, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001f9, 8) MULTIEQUAL (unique, 0x1000023d, 8) , (register, 0x18, 8)]
[(unique, 0x10000201, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x184f13, 1) , (unique, 0x100001e8, 1), (unique, 0x100001e8, 1) INT_EQUAL (unique, 0x1000020a, 4) , (const, 0x0, 4), (unique, 0x1000020a, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(ram, 0x4eae68, 8) COPY (unique, 0x10000201, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x100001f9, 8)]
[ ---  CBRANCH (ram, 0x184fc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x1fffffffffffffff, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x184e97, 1)]
[ ---  CBRANCH (ram, 0x184fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(register, 0x10, 8) INT_2COMP (unique, 0x100001e9, 8)]
[(register, 0x0, 8) INT_SUB (const, 0x1fffffffffffffff, 8) , (unique, 0x100001e9, 8)]
[(unique, 0x10000235, 8) COPY (unique, 0x100001e9, 8)]
[ ---  BRANCH (ram, 0x184e97, 1)]
[(register, 0x0, 8) INT_SUB (const, 0x1fffffffffffffff, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000265, 8), (unique, 0x10000265, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) INT_2COMP (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000265, 8), (unique, 0x10000265, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(unique, 0x1000022d, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_SRIGHT (register, 0x18, 8) , (const, 0x2, 4), (register, 0x18, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000265, 8), (unique, 0x10000265, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x1000022d, 8) , (unique, 0x10000235, 8) , (register, 0x18, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x185088, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x185088, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x184ff0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100001e9, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (register, 0x30, 8)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x10000201, 8) , (const, 0x18c, 4)]
[ ---  CBRANCH (ram, 0x184eb5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x184a50, 8) , (register, 0x38, 8) , (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) CAST (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x28, 8) , (const, 0x4, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x166, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x10000201, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000295, 8) , (const, 0x16, 4), (unique, 0x10000295, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x100001f1, 8) , (unique, 0x100001f1, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000201, 8) , (unique, 0x10000201, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x10000201, 8) , (unique, 0x10000201, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
