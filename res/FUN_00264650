[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffcd8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffcd8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffcd8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005ce, 8), (unique, 0x100005ce, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x264b56, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb430, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x457, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100003d8, 8) , (unique, 0x100003d0, 8) , (const, 0x173, 4) , (unique, 0x100003e0, 8), (unique, 0x100003e0, 8) COPY (const, 0x2baf00, 8), (unique, 0x100003d8, 8) COPY (const, 0x2b745a, 8), (unique, 0x100003d0, 8) COPY (const, 0x2b7445, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x457, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x457, 4)]
[(ram, 0x4ec558, 8) COPY (ram, 0x4ec558, 8), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x457, 4)]
[(ram, 0x4f02e0, 2) COPY (ram, 0x4f02e0, 2), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x457, 4)]
[(ram, 0x4f0308, 1) COPY (ram, 0x4f0308, 1), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x457, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x457, 4)]
[(ram, 0x4f0468, 1) COPY (ram, 0x4f0468, 1), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x457, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x264760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0468, 1) , (const, 0x0, 1)]
[(register, 0x8, 8) COPY (const, 0xe, 8)]
[(unique, 0x1000055e, 8) COPY (ram, 0x4ec558, 8)]
[(unique, 0x100005ae, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b7429, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100005ae, 8) , (unique, 0x100005b6, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000055e, 8) , (unique, 0x10000566, 8)]
[ ---  CBRANCH (ram, 0x2646aa, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000566, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005b6, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2646a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x264990, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x443, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x443, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x443, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x443, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x443, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x443, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x443, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x443, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x443, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x443, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x443, 4)]
[ ---  CBRANCH (ram, 0x2646fb, 1) , (unique, 0x100003ac, 1), (unique, 0x100003ac, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210240, 8) , (unique, 0x100003c0, 8) , (const, 0x0, 4), (unique, 0x100003c0, 8) COPY (const, 0x2b741a, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 8) COPY (const, 0xe, 8)]
[(unique, 0x1000054e, 8) COPY (ram, 0x4ec558, 8), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(unique, 0x1000058e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b7437, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000058e, 8) , (unique, 0x10000596, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000054e, 8) , (unique, 0x10000556, 8)]
[ ---  CBRANCH (ram, 0x2646c1, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000556, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000418, 8) , (const, 0x1, 8), (unique, 0x10000418, 8) INT_ADD (unique, 0x10000170, 8) , (const, 0x1, 8), (unique, 0x10000170, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000596, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000410, 8) , (const, 0x1, 8), (unique, 0x10000410, 8) INT_ADD (unique, 0x10000168, 8) , (const, 0x1, 8), (unique, 0x10000168, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x2646bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x264a90, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x428, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x428, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x428, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x428, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x428, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x428, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x428, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x428, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x428, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x428, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x428, 4)]
[ ---  CBRANCH (ram, 0x2646fb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210240, 8) , (unique, 0x100003b8, 8) , (const, 0x0, 4), (unique, 0x100003b8, 8) COPY (const, 0x2b740b, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(unique, 0x1000053e, 8) COPY (ram, 0x4ec558, 8), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(unique, 0x1000057e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b741a, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000057e, 8) , (unique, 0x10000586, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000053e, 8) , (unique, 0x10000546, 8)]
[ ---  CBRANCH (ram, 0x2646db, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000546, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000428, 8) , (const, 0x1, 8), (unique, 0x10000428, 8) INT_ADD (unique, 0x10000189, 8) , (const, 0x1, 8), (unique, 0x10000189, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000586, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000420, 8) , (const, 0x1, 8), (unique, 0x10000420, 8) INT_ADD (unique, 0x10000181, 8) , (const, 0x1, 8), (unique, 0x10000181, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x2646d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x264ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x40c, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x40c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x40c, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x40c, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x40c, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x40c, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x40c, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x40c, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x40c, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x40c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x40c, 4)]
[ ---  CBRANCH (ram, 0x2646fb, 1) , (unique, 0xc680, 1), (unique, 0xc680, 1) BOOL_NEGATE (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x210240, 8) , (unique, 0x100003c8, 8) , (const, 0x0, 4), (unique, 0x100003c8, 8) COPY (const, 0x2b741a, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x8, 8) COPY (const, 0xf, 8)]
[(unique, 0x1000052e, 8) COPY (ram, 0x4ec558, 8), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(unique, 0x1000056e, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x2b740b, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000056e, 8) , (unique, 0x10000576, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000052e, 8) , (unique, 0x10000536, 8)]
[ ---  CBRANCH (ram, 0x2646f5, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x10000536, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000438, 8) , (const, 0x1, 8), (unique, 0x10000438, 8) INT_ADD (unique, 0x100001a2, 8) , (const, 0x1, 8), (unique, 0x100001a2, 8) INT_MULT (unique, 0xa380, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa380, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000576, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000430, 8) , (const, 0x1, 8), (unique, 0x10000430, 8) INT_ADD (unique, 0x1000019a, 8) , (const, 0x1, 8), (unique, 0x1000019a, 8) INT_MULT (unique, 0xaf80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xaf80, 8) INT_ZEXT (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x2646f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2649c0, 1) , (register, 0x206, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f0, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3f0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f0, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x3f0, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x3f0, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x3f0, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x3f0, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x3f0, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x3f0, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x3f0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3f0, 4)]
[ ---  CALL (ram, 0x210240, 8) , (unique, 0x100003b0, 8) , (const, 0x0, 4), (unique, 0x100003b0, 8) COPY (const, 0x2b740b, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xd8, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xd8, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0xd8, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0xd8, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0xd8, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xd8, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0xd8, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0xd8, 4), (stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0xd8, 4), (stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0xd8, 4), (stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0xd8, 4), (stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0xd8, 4), (stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0xd8, 4), (stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0xd8, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd8, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x264b38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2648d5, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x104, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf4, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x104, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0xf4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x104, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf4, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x104, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xf4, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x104, 4), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0xf4, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x104, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0xf4, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x104, 4), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0xf4, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x104, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xf4, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x104, 4), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x104, 4), (stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x104, 4), (stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x104, 4), (stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x104, 4), (stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x104, 4), (stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x104, 4), (stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0xf4, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x104, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x104, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4)]
[ ---  CBRANCH (ram, 0x264ae8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (register, 0x0, 4) , (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (ram, 0x4eb430, 4) , (const, 0x0, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x115, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x115, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x115, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x115, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x115, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x115, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x115, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x115, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x115, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x115, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x115, 4)]
[ ---  CBRANCH (ram, 0x264ae8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2109a0, 8) , (register, 0x0, 4) , (ram, 0x4eb430, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3d6, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d6, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x3d6, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x3d6, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x3d6, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x3d6, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x3d6, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x3d6, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x3d6, 4), (stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x3d6, 4), (stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x3d6, 4), (stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x3d6, 4), (stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x3d6, 4), (stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x3d6, 4), (stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x3d6, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d6, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x2648d5, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x124, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x124, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x124, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x124, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x124, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x124, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x124, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x124, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x124, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x124, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x124, 4)]
[ ---  CALL (ram, 0x210940, 8)]
[(ram, 0x4f0468, 1) COPY (const, 0x1, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x26478b, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100005d6, 8) , (const, 0x1, 8), (unique, 0x100005d6, 8) CAST (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[ ---  CBRANCH (ram, 0x264960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f02e0, 2) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x26477e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3, 2) , (unique, 0x100005de, 2), (unique, 0x100005de, 2) CAST (register, 0x8, 2), (register, 0x8, 2) INT_SUB (ram, 0x4f02e0, 2) , (const, 0x1, 2)]
[ ---  CBRANCH (ram, 0x264908, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100005e0, 2) , (const, 0x4, 2), (unique, 0x100005e0, 2) CAST (register, 0x0, 2), (register, 0x0, 2) INT_SUB (ram, 0x4f02e0, 2) , (const, 0x5, 2)]
[ ---  CBRANCH (ram, 0x26478b, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100005e2, 2) , (const, 0x4, 2), (unique, 0x100005e2, 2) CAST (register, 0x10, 2), (register, 0x10, 2) INT_SUB (unique, 0xbc00, 2) , (const, 0x5, 2)]
[ ---  CBRANCH (ram, 0x2649e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0308, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x2649e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005e4, 8), (unique, 0x100005e4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a9, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3a9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a9, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x3a9, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x3a9, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x3a9, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x3a9, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x3a9, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x3a9, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x3a9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a9, 4)]
[(register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100003e8, 8) , (unique, 0x100005ec, 8) , (const, 0x20, 8), (unique, 0x100005ec, 8) CAST (unique, 0x3100, 8), (unique, 0x100003e8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e8, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x2, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x394, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x394, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x394, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x394, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x394, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x394, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x394, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x394, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x394, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x394, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x394, 4)]
[(register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0x100003f0, 8) , (unique, 0x100005f4, 8) , (const, 0x4, 8), (unique, 0x100005f4, 8) CAST (unique, 0x3100, 8), (unique, 0x100003f0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0308, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x14, 8) , (const, 0x2, 8)]
[(unique, 0x10000499, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100004a1, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x100004a2, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x100004aa, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(unique, 0x100004ae, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(unique, 0x100004b6, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(unique, 0x100004b8, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(unique, 0x100004b9, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(unique, 0x100004c1, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(unique, 0x100004c2, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(unique, 0x100004c4, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(unique, 0x100004d4, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(unique, 0x100004dc, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(unique, 0x100004e0, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(unique, 0x100004e2, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(unique, 0x100004ea, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(unique, 0x100004ee, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x26478b, 1) , (unique, 0x10000498, 1), (unique, 0x10000498, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xa8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2647b2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x15f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000499, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x15f, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1) , (unique, 0x100004a1, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (unique, 0x100004a2, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x15f, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (unique, 0x100004aa, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x15f, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (unique, 0x100004ae, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x15f, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (unique, 0x100004b6, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x15f, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (unique, 0x100004b8, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x15f, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (unique, 0x100004b9, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x15f, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (unique, 0x100004c1, 1)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x15f, 4), (stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (unique, 0x100004c4, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x15f, 4), (stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (unique, 0x100004d4, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x15f, 4), (stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (unique, 0x100004dc, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x15f, 4), (stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (unique, 0x100004e0, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x15f, 4), (stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (unique, 0x100004e2, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x15f, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (unique, 0x100004ea, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x15f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x100004ee, 8)]
[(register, 0x0, 4) CALL (ram, 0x264320, 8) , (register, 0x38, 8) , (unique, 0x3c80, 8) , (register, 0x20, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x10000503, 8) , (const, 0xa0, 8) , (const, 0x1, 8), (unique, 0x10000503, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd98, 8)]
[ ---  CBRANCH (ram, 0x264b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffcd8, 1) , (const, 0x0, 1), (stack, 0xfffffffffffffcd8, 1) SUBPIECE (stack, 0xfffffffffffffcd8, 2) , (const, 0x0, 8), (stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x15f, 4), (stack, 0xfffffffffffffcd8, 2) INT_AND (stack, 0xfffffffffffffcd8, 2) , (const, 0xff00, 2), (stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (unique, 0x100004c2, 2)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35e, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x35e, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x35e, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x35e, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x35e, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x35e, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x35e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005fc, 8) , (const, 0xb, 4), (unique, 0x100005fc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2648d5, 1)]
[(register, 0xa8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2647b2, 1)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xa8, 4) , (register, 0xa8, 4)]
[(unique, 0x3c80, 8) CAST (unique, 0x10000604, 8), (unique, 0x10000604, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd98, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x188, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000499, 8) , (register, 0x110, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x188, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (unique, 0x100004a1, 1) , (register, 0x20a, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x188, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x100004a2, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x188, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (unique, 0x100004aa, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x188, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (unique, 0x100004ae, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x188, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (unique, 0x100004b6, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x188, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (unique, 0x100004b8, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x188, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (unique, 0x100004b9, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x188, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (unique, 0x100004c1, 1) , (ram, 0x4f0468, 1)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x188, 4), (stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (unique, 0x100004c2, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x188, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100004ee, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 4) CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(unique, 0x3800, 8) CAST (unique, 0x1000060c, 8), (unique, 0x1000060c, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffd80, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffffcf8, 8) PTRSUB (const, 0x0, 8) , (const, 0x263ac0, 8)]
[(unique, 0x1000059e, 8) COPY (unique, 0x10000614, 8), (unique, 0x10000614, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000051b, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x1000051b, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffcf8, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000059e, 8) , (unique, 0x100005a6, 8)]
[ ---  CBRANCH (ram, 0x2647f7, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1ac, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1ac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100005a6, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000470, 8) , (const, 0x8, 8), (unique, 0x10000470, 8) INT_ADD (unique, 0x10000468, 8) , (const, 0x1, 8), (unique, 0x10000468, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x2647f4, 1)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3800, 8) , (unique, 0x3c80, 8)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x1b5, 4), (stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x1b1, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0xa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1e0, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b1, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1e0, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1b5, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1b1, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x1e0, 4), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x1b5, 4), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x1b1, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1e0, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1b5, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x1b1, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x1e0, 4), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x1b5, 4), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x1b1, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1e0, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1b5, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x1b1, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x1e0, 4), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x1b5, 4), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x1b1, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x1e0, 4), (stack, 0xfffffffffffffcd8, 2) COPY (const, 0x1, 2)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x1e0, 4), (stack, 0xfffffffffffffcda, 16) COPY (const, 0x0, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x1e0, 4), (stack, 0xfffffffffffffcea, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x1e0, 4), (stack, 0xfffffffffffffcf2, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x1e0, 4), (stack, 0xfffffffffffffcf6, 2) COPY (const, 0x0, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x1e0, 4), (stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x1b5, 4), (stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x1b1, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1e0, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1b5, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x1b1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1e0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1b1, 4)]
[(unique, 0x100005be, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x2648b6, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2106c0, 8) , (const, 0x0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (register, 0x20, 8), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1b5, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x1b1, 4)]
[ ---  CBRANCH (ram, 0x264a08, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0xa8, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2aa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2aa, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x2aa, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x2aa, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x2aa, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x2aa, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x2aa, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x2aa, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x2aa, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2aa, 4)]
[ ---  CBRANCH (ram, 0x264b00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_REM (register, 0x0, 8) , (const, 0x180, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (ram, 0x4eb430, 4) , (const, 0x0, 8) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x218c90, 8) , (ram, 0x4eb430, 4) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x344, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x334, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x344, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x334, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x344, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x334, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x344, 4), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x334, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x344, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x334, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x344, 4), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x334, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x344, 4), (ram, 0x4f0460, 8) INDIRECT (register, 0x30, 8) , (const, 0x334, 4), (register, 0x30, 8) INT_SUB (register, 0x0, 8) , (register, 0x10, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x344, 4), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x344, 4), (stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x344, 4), (stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x344, 4), (stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x344, 4), (stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x344, 4), (stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x344, 4), (stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x334, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x344, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x334, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x344, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x334, 4)]
[ ---  CBRANCH (ram, 0x264a43, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (ram, 0x4eb430, 4) , (const, 0x0, 8) , (const, 0x2, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x334, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x314, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x314, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x314, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x314, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x314, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x314, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x314, 4), (ram, 0x4f0460, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x314, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x314, 4), (stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x314, 4), (stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x314, 4), (stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x314, 4), (stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x314, 4), (stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x314, 4), (stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x314, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x314, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x264a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x180, 8), (register, 0x0, 8) CALL (ram, 0x2101e0, 8) , (ram, 0x4eb430, 4) , (register, 0x38, 8) , (const, 0x180, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x324, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x324, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x324, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x324, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x324, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x324, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x324, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x324, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x324, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x324, 4)]
[ ---  CALL (ram, 0x218c90, 8) , (ram, 0x4eb430, 4) , (ram, 0x4f0460, 8)]
[ ---  BRANCH (ram, 0x264895, 1)]
[ ---  CALL (ram, 0x210210, 8) , (ram, 0x4eb430, 4) , (unique, 0x3200, 8) , (const, 0x0, 4), (unique, 0x3200, 8) INT_SUB (ram, 0x4f0460, 8) , (const, 0x180, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x20e, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x207, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x20e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x207, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x20e, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x207, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x20e, 4), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x207, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x20e, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x207, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x20e, 4), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x207, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x20e, 4), (ram, 0x4f0460, 8) INDIRECT (unique, 0x3200, 8) , (const, 0x207, 4), (unique, 0x3200, 8) INT_SUB (ram, 0x4f0460, 8) , (const, 0x180, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x20e, 4), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x20e, 4), (stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x20e, 4), (stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x20e, 4), (stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x20e, 4), (stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x20e, 4), (stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x20e, 4), (stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x207, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x20e, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x207, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x20e, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x207, 4)]
[ ---  CBRANCH (ram, 0x264a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x180, 8), (register, 0x0, 8) CALL (ram, 0x2101e0, 8) , (ram, 0x4eb430, 4) , (register, 0x38, 8) , (const, 0x180, 8), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x207, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0460, 8) INT_ADD (ram, 0x4f0460, 8) , (const, 0x180, 8), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[ ---  BRANCH (ram, 0x264898, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x236, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x236, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x236, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x236, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x236, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x236, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x236, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x236, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x236, 4), (stack, 0xfffffffffffffcd8, 2) COPY (const, 0x2, 2)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x236, 4), (stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x236, 4), (stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x236, 4), (stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x236, 4), (stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x236, 4), (stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x236, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x236, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2106c0, 8) , (ram, 0x4eb430, 4) , (const, 0x7, 8) , (register, 0x20, 8), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(unique, 0x100005c6, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0x38, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100005be, 8) , (unique, 0x100005c6, 8)]
[ ---  CALL (ram, 0x1e4840, 8) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x252, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x243, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x252, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x243, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x252, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x243, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x252, 4), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x243, 4), (ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x252, 4), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x243, 4), (ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x252, 4), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x243, 4), (ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x252, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x243, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x252, 4), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x243, 4), (ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x252, 4), (stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x243, 4), (stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x252, 4), (stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x243, 4), (stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x252, 4), (stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x243, 4), (stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x252, 4), (stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x243, 4), (stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x252, 4), (stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x243, 4), (stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x252, 4), (stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x243, 4), (stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x252, 4), (stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x243, 4), (stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x252, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x243, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x13f110, 8) , (const, 0xe, 4) , (unique, 0x3c80, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x264980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x290, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x290, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x290, 4)]
[(ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x290, 4)]
[(ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x290, 4)]
[(ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x290, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x290, 4)]
[(ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x290, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x290, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x290, 4)]
[ ---  CALL (ram, 0x1e4840, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x2648d5, 1)]
[(stack, 0xfffffffffffffd80, 4) MULTIEQUAL (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4) , (stack, 0xfffffffffffffd80, 4)]
[(stack, 0xfffffffffffffcf8, 8) MULTIEQUAL (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8) , (stack, 0xfffffffffffffcf8, 8)]
[(stack, 0xfffffffffffffcf6, 2) MULTIEQUAL (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2) , (stack, 0xfffffffffffffcf6, 2)]
[(stack, 0xfffffffffffffcf2, 4) MULTIEQUAL (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4) , (stack, 0xfffffffffffffcf2, 4)]
[(stack, 0xfffffffffffffcea, 8) MULTIEQUAL (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8) , (stack, 0xfffffffffffffcea, 8)]
[(stack, 0xfffffffffffffcda, 16) MULTIEQUAL (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16) , (stack, 0xfffffffffffffcda, 16)]
[(stack, 0xfffffffffffffcd8, 2) MULTIEQUAL (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2) , (stack, 0xfffffffffffffcd8, 2)]
[(ram, 0x4f0468, 1) MULTIEQUAL (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1) , (ram, 0x4f0468, 1)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0308, 1) MULTIEQUAL (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1) , (ram, 0x4f0308, 1)]
[(ram, 0x4f02e0, 2) MULTIEQUAL (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2) , (ram, 0x4f02e0, 2)]
[(ram, 0x4ec558, 8) MULTIEQUAL (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8) , (ram, 0x4ec558, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x264b75, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000061c, 8), (unique, 0x1000061c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffcd8, 2) INDIRECT (stack, 0xfffffffffffffcd8, 2) , (const, 0x289, 4)]
[(stack, 0xfffffffffffffcda, 16) INDIRECT (stack, 0xfffffffffffffcda, 16) , (const, 0x289, 4)]
[(stack, 0xfffffffffffffcea, 8) INDIRECT (stack, 0xfffffffffffffcea, 8) , (const, 0x289, 4)]
[(stack, 0xfffffffffffffcf2, 4) INDIRECT (stack, 0xfffffffffffffcf2, 4) , (const, 0x289, 4)]
[(stack, 0xfffffffffffffcf6, 2) INDIRECT (stack, 0xfffffffffffffcf6, 2) , (const, 0x289, 4)]
[(stack, 0xfffffffffffffcf8, 8) INDIRECT (stack, 0xfffffffffffffcf8, 8) , (const, 0x289, 4)]
[(stack, 0xfffffffffffffd80, 4) INDIRECT (stack, 0xfffffffffffffd80, 4) , (const, 0x289, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x289, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x289, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x289, 4)]
[(ram, 0x4ec558, 8) COPY (ram, 0x4ec558, 8), (ram, 0x4ec558, 8) INDIRECT (ram, 0x4ec558, 8) , (const, 0x289, 4)]
[(ram, 0x4f02e0, 2) COPY (ram, 0x4f02e0, 2), (ram, 0x4f02e0, 2) INDIRECT (ram, 0x4f02e0, 2) , (const, 0x289, 4)]
[(ram, 0x4f0308, 1) COPY (ram, 0x4f0308, 1), (ram, 0x4f0308, 1) INDIRECT (ram, 0x4f0308, 1) , (const, 0x289, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x289, 4)]
[(ram, 0x4f0468, 1) COPY (ram, 0x4f0468, 1), (ram, 0x4f0468, 1) INDIRECT (ram, 0x4f0468, 1) , (const, 0x289, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4)]
[(ram, 0x4ec558, 8) COPY (ram, 0x4ec558, 8)]
[(ram, 0x4f02e0, 2) COPY (ram, 0x4f02e0, 2)]
[(ram, 0x4f0308, 1) COPY (ram, 0x4f0308, 1)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8)]
[(ram, 0x4f0468, 1) COPY (ram, 0x4f0468, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
