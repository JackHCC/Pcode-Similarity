[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000061f, 8) , (const, 0x1, 4), (unique, 0x1000061f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3a, 4), (register, 0x20a, 1) COPY (const, 0x0, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x25, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x3a, 4), (stack, 0xffffffffffffff00, 8) COPY (const, 0x12e3f5, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3a, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000627, 8), (unique, 0x10000627, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100005a3, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[ ---  CBRANCH (ram, 0x12e540, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x4f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffff00, 8) COPY (const, 0x12e416, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x4f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f, 4)]
[ ---  CBRANCH (ram, 0x12e638, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff28, 8)]
[(unique, 0x100005db, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12e648, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff40, 4) , (const, 0xf000, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x30e, 4), (stack, 0xffffffffffffff00, 8) COPY (const, 0x12e650, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x10000389, 8) , (unique, 0x10000197, 8) , (const, 0x1, 8), (unique, 0x10000389, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (unique, 0x10000197, 8) INT_2COMP (register, 0x38, 8), (register, 0x38, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100003a1, 8) , (unique, 0x10000197, 8) , (const, 0x1, 8), (unique, 0x100003a1, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (unique, 0x10000197, 8) INT_2COMP (register, 0x38, 8), (register, 0x38, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100003b9, 8) , (unique, 0x10000197, 8) , (const, 0x1, 8), (unique, 0x100003b9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (unique, 0x10000197, 8) INT_2COMP (register, 0x38, 8), (register, 0x38, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000064c, 8) , (const, 0x12e6b7, 8), (unique, 0x1000064c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000521, 8) , (unique, 0x10000519, 8) , (const, 0x1, 8), (unique, 0x10000521, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (unique, 0x10000519, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000197, 8) INT_2COMP (register, 0x38, 8), (register, 0x38, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x35b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x317, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30e, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x35b, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x317, 4), (register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x30e, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x35b, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x35a, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x317, 4), (stack, 0xffffffffffffff00, 8) COPY (const, 0x12e662, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x35b, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x35a, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x317, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x30e, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x35b, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x35a, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x317, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x30e, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x35b, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x35a, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x317, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x35b, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x35a, 4), (stack, 0xffffffffffffff20, 8) COPY (unique, 0x10000644, 8), (unique, 0x10000644, 8) CAST (register, 0x80, 8), (register, 0x80, 8) PTRADD (unique, 0x10000301, 8) , (register, 0x80, 8) , (const, 0x1, 8), (unique, 0x10000301, 8) COPY (const, 0x29cd00, 8), (register, 0x80, 8) INT_ZEXT (unique, 0x10000633, 1), (unique, 0x10000633, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f9, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f9, 8) PTRSUB (const, 0x0, 8) , (const, 0x29ccf0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x35b, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x35a, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x317, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x30e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x35b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x35a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x317, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x30e, 4)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_ADD (unique, 0x100001a7, 4) , (const, 0x1, 4), (unique, 0x100001a7, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5359532f, 4), (register, 0x0, 8) CAST (unique, 0x10000654, 8), (unique, 0x10000654, 8) CALL (ram, 0x121230, 8) , (unique, 0x3800, 8) , (unique, 0x10000563, 8) , (register, 0x0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000063c, 8), (unique, 0x1000063c, 8) INT_ADD (unique, 0x10000634, 8) , (unique, 0x10000197, 8), (unique, 0x10000634, 8) CAST (unique, 0x10000509, 8), (unique, 0x10000509, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8), (unique, 0x10000197, 8) INT_2COMP (register, 0x38, 8), (register, 0x38, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4), (unique, 0x10000563, 8) COPY (stack, 0xffffffffffffff18, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x317, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x363, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x360, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x35b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x317, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000065c, 8) , (const, 0x5f, 1), (unique, 0x1000065c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x10000654, 8), (unique, 0x10000654, 8) CALL (ram, 0x121230, 8) , (unique, 0x3800, 8) , (unique, 0x10000563, 8) , (register, 0x0, 8), (unique, 0x3800, 8) CAST (unique, 0x1000063c, 8), (unique, 0x1000063c, 8) INT_ADD (unique, 0x10000634, 8) , (unique, 0x10000197, 8), (unique, 0x10000634, 8) CAST (unique, 0x10000509, 8), (unique, 0x10000509, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff10, 8), (unique, 0x10000197, 8) INT_2COMP (register, 0x38, 8), (register, 0x38, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x10, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x24, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4), (unique, 0x10000563, 8) COPY (stack, 0xffffffffffffff18, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff18, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x317, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x12e7f0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (const, 0x8, 4), (register, 0x10, 4) INT_ADD (unique, 0x100001a7, 4) , (const, 0x1, 4), (unique, 0x100001a7, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100002f1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f1, 8) PTRSUB (const, 0x0, 8) , (const, 0x29cce0, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000062f, 4), (unique, 0x1000062f, 4) CAST (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000066c, 8), (unique, 0x1000066c, 8) INT_ADD (unique, 0x10000664, 8) , (const, 0x5, 8), (unique, 0x10000664, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffff20, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f6, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ea, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000068c, 8), (unique, 0x1000068c, 8) INT_ADD (unique, 0x10000684, 8) , (unique, 0x10000481, 8), (unique, 0x10000684, 8) CAST (register, 0x0, 8), (unique, 0x10000481, 8) INT_SUB (register, 0x30, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000067c, 8), (unique, 0x1000067c, 8) INT_ADD (unique, 0x10000674, 8) , (unique, 0x10000479, 8), (unique, 0x10000674, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x10000479, 8) INT_SUB (register, 0x30, 8) , (const, 0x8, 8), (register, 0x30, 8) INT_ZEXT (register, 0x10, 4)]
[(unique, 0x100005f3, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x100006bc, 8), (unique, 0x100006bc, 8) INT_SUB (unique, 0x100006b4, 8) , (register, 0x8, 8), (unique, 0x100006b4, 8) CAST (stack, 0xffffffffffffff20, 8), (register, 0x8, 8) INT_ADD (unique, 0x100006ac, 8) , (unique, 0x100003e1, 8), (unique, 0x100006ac, 8) CAST (register, 0x0, 8), (unique, 0x100003e1, 8) INT_SUB (const, 0x5, 8) , (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000694, 8) , (const, 0xd, 8), (unique, 0x10000694, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000603, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000694, 8) , (const, 0xd, 8), (unique, 0x10000694, 8) CAST (register, 0x0, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (register, 0x10, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_ADD (unique, 0x100006ac, 8) , (unique, 0x100003e1, 8), (unique, 0x100006ac, 8) CAST (register, 0x0, 8), (unique, 0x100003e1, 8) INT_SUB (const, 0x5, 8) , (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) CAST (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000694, 8) , (const, 0xd, 8), (unique, 0x10000694, 8) CAST (register, 0x0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000603, 8) , (unique, 0x1000060b, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100005f3, 8) , (unique, 0x100005fb, 8)]
[ ---  CBRANCH (ram, 0x12e81e, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x456, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100005fb, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100004b9, 8) , (const, 0x8, 8), (unique, 0x100004b9, 8) INT_ADD (unique, 0x100004b1, 8) , (const, 0x1, 8), (unique, 0x100004b1, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x1000060b, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000499, 8) , (const, 0x8, 8), (unique, 0x10000499, 8) INT_ADD (unique, 0x10000491, 8) , (const, 0x1, 8), (unique, 0x10000491, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x12e81b, 1)]
[ ---  CBRANCH (ram, 0x12e92f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000027b, 4) , (const, 0x0, 4), (unique, 0x1000027b, 4) INT_AND (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) CAST (unique, 0x100006d4, 8), (unique, 0x100006d4, 8) INT_ADD (unique, 0x100006cc, 8) , (const, 0x5, 8), (unique, 0x100006cc, 8) CAST (register, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006c4, 8), (unique, 0x100006c4, 8) CAST (stack, 0xffffffffffffff20, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x100006f4, 8), (unique, 0x100006f4, 8) INT_ADD (unique, 0x100006ec, 8) , (unique, 0x100004e9, 8), (unique, 0x100006ec, 8) CAST (register, 0x0, 8), (unique, 0x100004e9, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100006e4, 8), (unique, 0x100006e4, 8) INT_ADD (unique, 0x100006dc, 8) , (unique, 0x100004e1, 8), (unique, 0x100006dc, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x100004e1, 8) INT_SUB (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x12e6f7, 1)]
[ ---  CBRANCH (ram, 0x12e6f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x397, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0x3100, 8) CAST (unique, 0x1000070c, 8), (unique, 0x1000070c, 8) INT_ADD (unique, 0x10000704, 8) , (const, 0x5, 8), (unique, 0x10000704, 8) CAST (register, 0x0, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006fc, 8), (unique, 0x100006fc, 8) CAST (stack, 0xffffffffffffff20, 8)]
[ ---  CBRANCH (ram, 0x12e943, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001b7, 4) , (const, 0x0, 4), (unique, 0x100001b7, 4) INT_AND (register, 0x10, 4) , (const, 0x2, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3d2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc00, 2), (unique, 0x3a00, 8) CAST (unique, 0x1000072c, 8), (unique, 0x1000072c, 8) INT_ADD (unique, 0x10000724, 8) , (unique, 0x100004f9, 8), (unique, 0x10000724, 8) CAST (register, 0x0, 8), (unique, 0x100004f9, 8) INT_ADD (register, 0x10, 8) , (const, 0x3, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000071c, 8), (unique, 0x1000071c, 8) INT_ADD (unique, 0x10000714, 8) , (unique, 0x100004f1, 8), (unique, 0x10000714, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x100004f1, 8) INT_SUB (register, 0x10, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x12e6f7, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000734, 8) , (const, 0x12e706, 8), (unique, 0x10000734, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000539, 8) , (unique, 0x10000531, 8) , (const, 0x1, 8), (unique, 0x10000539, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (unique, 0x10000531, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x3a8, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x3a7, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x3a8, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x3a7, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x3a8, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x3a7, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3a8, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3a7, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a8, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3a7, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3a8, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3a7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a7, 4)]
[(unique, 0x100005cb, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12e540, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20fd70, 8) , (unique, 0x3800, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000073c, 8) , (const, 0x12e720, 8), (unique, 0x1000073c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000551, 8) , (unique, 0x10000549, 8) , (const, 0x1, 8), (unique, 0x10000551, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (unique, 0x10000549, 8) INT_ADD (unique, 0x10000197, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3bb, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3bb, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x3bb, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x3ba, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x3bb, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x3ba, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x3bb, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x3ba, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3bb, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x3ba, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3bb, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x3ba, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3bb, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x3ba, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3bb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ba, 4)]
[(unique, 0x100005e3, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x12e434, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3200, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000074c, 8), (unique, 0x1000074c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000754, 8) , (const, 0x12e45d, 8), (unique, 0x10000754, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) COPY (unique, 0x100005eb, 8), (unique, 0x100005eb, 8) MULTIEQUAL (unique, 0x100005db, 8) , (unique, 0x100005e3, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x94, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x93, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x94, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x93, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x94, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x93, 4), (stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x93, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x93, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x93, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x1000057b, 8) COPY (unique, 0x1000076c, 8), (unique, 0x1000076c, 8) CAST (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x94, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x93, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0x10000617, 8) COPY (register, 0x20, 8), (register, 0x20, 8) COPY (unique, 0x100005eb, 8), (unique, 0x100005eb, 8) MULTIEQUAL (unique, 0x100005db, 8) , (unique, 0x100005e3, 8)]
[ ---  CBRANCH (ram, 0x12e590, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x10000764, 8), (unique, 0x10000764, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (unique, 0x1000075c, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (register, 0xb8, 4) , (const, 0x0, 8), (unique, 0x1000075c, 8) CAST (unique, 0x10000573, 8), (unique, 0x10000573, 8) COPY (unique, 0x10000744, 8), (unique, 0x10000744, 8) CAST (stack, 0xffffffffffffff58, 8), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000774, 8) , (const, 0x12e472, 8), (unique, 0x10000774, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa4, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xa4, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xa3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa4, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa3, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x12e540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x80, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffff10, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x12e638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x26, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000077c, 8), (unique, 0x1000077c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000078c, 8) , (const, 0x12e5b7, 8), (unique, 0x1000078c, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x275, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x275, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x275, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x274, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x275, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x274, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x275, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x274, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x275, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x274, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x275, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x274, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x275, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x274, 4)]
[(unique, 0x1000056b, 8) COPY (stack, 0xffffffffffffff20, 8), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x275, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x274, 4), (stack, 0xffffffffffffff20, 8) COPY (unique, 0x10000784, 8), (unique, 0x10000784, 8) CAST (stack, 0xffffffffffffff58, 8)]
[ ---  CBRANCH (ram, 0x12e638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000079c, 8), (unique, 0x1000079c, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x10000794, 8), (unique, 0x10000794, 8) CAST (unique, 0x1000057b, 8)]
[ ---  CBRANCH (ram, 0x12e8ee, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x100007a4, 8), (unique, 0x100007a4, 8) CAST (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff20, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff18, 8) CAST (unique, 0x100007b4, 8), (unique, 0x100007b4, 8) INT_OR (unique, 0x100002c0, 8) , (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_ZEXT (register, 0x30, 4), (unique, 0x100002c0, 8) INT_AND (unique, 0x100007ac, 8) , (const, 0xffffffff00000000, 8), (unique, 0x100007ac, 8) CAST (stack, 0xffffffffffffff18, 8)]
[(unique, 0x1000059b, 8) COPY (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x12e5f7, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007bc, 8) , (const, 0x12e605, 8), (unique, 0x100007bc, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x29f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x29f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x29f, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x29e, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x29f, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x29e, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x29f, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x29e, 4), (stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x29f, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x29e, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x29f, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x29e, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x29f, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x29e, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x29f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x29e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x12e5e8, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100007cc, 8) , (const, 0x1, 8), (unique, 0x100007cc, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100007c4, 8), (unique, 0x100007c4, 8) CALL (ram, 0x210110, 8) , (register, 0xb8, 4) , (register, 0x18, 8) , (register, 0xa8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x1000059b, 8) , (register, 0x18, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000056b, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007d4, 8) , (const, 0x12e619, 8), (unique, 0x100007d4, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2b3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b3, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x2b2, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x2b3, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x2b2, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x2b3, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x2b2, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2b2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b2, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12e638, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff20, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2b3, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2b2, 4), (stack, 0xffffffffffffff20, 8) COPY (register, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2c5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007dc, 8) , (const, 0x16, 4), (unique, 0x100007dc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) CAST (unique, 0x1000080c, 8), (unique, 0x1000080c, 8) INT_ADD (unique, 0x100007fc, 8) , (unique, 0x10000804, 8), (unique, 0x10000804, 8) CAST (register, 0x0, 8), (unique, 0x100007fc, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x12e8e0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 8) , (unique, 0x10000814, 8), (unique, 0x10000814, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x100007f4, 8), (unique, 0x100007f4, 8) INT_SUB (unique, 0x100007e4, 8) , (unique, 0x100007ec, 8), (unique, 0x100007ec, 8) CAST (register, 0x0, 8), (unique, 0x100007e4, 8) CAST (register, 0xa8, 8)]
[(unique, 0x10000593, 8) COPY (stack, 0xffffffffffffff20, 8)]
[(unique, 0x10000613, 4) COPY (stack, 0xffffffffffffff18, 4), (stack, 0xffffffffffffff18, 4) SUBPIECE (stack, 0xffffffffffffff18, 8) , (const, 0x0, 8)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x30, 4) , (unique, 0x10000613, 4)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000593, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000081c, 8) , (unique, 0xbc80, 4), (unique, 0x1000081c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000824, 8) , (const, 0x12e901, 8), (unique, 0x10000824, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2fb, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2f8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x2fb, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x2fa, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x2fb, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x2fa, 4), (stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2fb, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2fa, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2fb, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2fa, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2fb, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2fa, 4), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fb, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2fa, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0xb8, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x12e48b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0xa8, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0xa8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x12e57a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x1000082c, 8) , (unique, 0x100002e1, 8), (unique, 0x1000082c, 8) CAST (stack, 0xffffffffffffff58, 8), (unique, 0x100002e1, 8) PTRSUB (const, 0x0, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(register, 0x0, 4) COPY (const, 0x20051017, 4)]
[ ---  CBRANCH (ram, 0x12e4be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x3, 4)]
[(register, 0x0, 4) INT_XOR (register, 0xa8, 4) , (const, 0x20031115, 4)]
[ ---  CBRANCH (ram, 0x12e4be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x20090720, 4)]
[ ---  CBRANCH (ram, 0x12e57a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffff14, 4) COPY (register, 0x80, 4)]
[(stack, 0xffffffffffffff20, 8) COPY (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x10000838, 8), (unique, 0x10000838, 8) INT_SEXT (unique, 0x10000834, 4), (unique, 0x10000834, 4) CAST (register, 0xa8, 4)]
[(stack, 0xffffffffffffff18, 8) CAST (unique, 0x10000858, 8), (unique, 0x10000858, 8) INT_OR (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0x100002ab, 8) INT_AND (unique, 0x10000850, 8) , (const, 0xffffffff00000000, 8), (unique, 0x10000850, 8) CAST (stack, 0xffffffffffffff18, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12e57a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000848, 8), (unique, 0x10000848, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000309, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000309, 8) PTRSUB (const, 0x0, 8) , (const, 0x29d480, 8), (unique, 0x3300, 8) INT_MULT (unique, 0x10000840, 8) , (const, 0x8, 8), (unique, 0x10000840, 8) CAST (register, 0x88, 8), (register, 0x88, 8) CAST (unique, 0x10000838, 8), (unique, 0x10000838, 8) INT_SEXT (unique, 0x10000834, 4), (unique, 0x10000834, 4) CAST (register, 0xa8, 4), (register, 0xb8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x12e57a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x10000868, 8) , (unique, 0x3580, 8), (unique, 0x10000868, 8) CAST (stack, 0xffffffffffffff58, 8), (unique, 0x3580, 8) CAST (unique, 0x10000860, 8), (unique, 0x10000860, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x8, 8), (unique, 0x3480, 8) INT_MULT (register, 0xb8, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000870, 8) , (const, 0x12e50e, 8), (unique, 0x10000870, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x125, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x124, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x125, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x124, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x125, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x124, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x125, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x124, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x124, 4)]
[(stack, 0xffffffffffffff18, 4) SUBPIECE (stack, 0xffffffffffffff18, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x125, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x124, 4)]
[ ---  CBRANCH (ram, 0x12e730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000878, 8), (unique, 0x10000878, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x40, 8), (unique, 0x3480, 8) INT_MULT (register, 0xb8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff58, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x192, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18f, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x189, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x186, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x183, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000880, 8) , (stack, 0xffffffffffffff18, 4), (unique, 0x10000880, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x12e788, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12e572, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x10000890, 8), (unique, 0x10000890, 8) CAST (stack, 0xffffffffffffff58, 8), (register, 0x8, 8) CAST (unique, 0x10000888, 8), (unique, 0x10000888, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x10000583, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000583, 8) , (unique, 0x1000058b, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  BRANCHIND (register, 0xa8, 4)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xf, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x1, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xc, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x4, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2d, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x12, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e572, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9e, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e7b0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x5, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e958, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000898, 8) , (unique, 0x100002e9, 8), (unique, 0x10000898, 8) CAST (register, 0x20, 8), (unique, 0x100002e9, 8) PTRSUB (const, 0x0, 8) , (const, 0x12e977, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x259, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x258, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x259, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x258, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x259, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x258, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x259, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x258, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x259, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x258, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x259, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x258, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000319, 8) , (unique, 0x10000311, 8) , (const, 0x90, 4) , (unique, 0x10000321, 8), (unique, 0x10000321, 8) COPY (const, 0x2bb130, 8), (unique, 0x10000319, 8) COPY (const, 0x2b3b18, 8), (unique, 0x10000311, 8) COPY (const, 0x2b3b0b, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x259, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x12e7c5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x56, 8)]
[ ---  CBRANCH (ram, 0x12e918, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x5, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100008a8, 8), (unique, 0x100008a8, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000329, 8) , (unique, 0x100008a0, 8) , (const, 0x8, 8), (unique, 0x100008a0, 8) CAST (stack, 0xffffffffffffff20, 8), (unique, 0x10000329, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e8500, 8)]
[ ---  CBRANCH (ram, 0x12e572, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000028f, 8) , (const, 0x0, 8), (unique, 0x1000028f, 8) INT_AND (unique, 0x100008b0, 8) , (const, 0x3, 8), (unique, 0x100008b0, 8) CAST (register, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x251, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008d0, 8) , (unique, 0xbc80, 4), (unique, 0x100008d0, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x100004d1, 8) , (const, 0x8, 8), (unique, 0x100004d1, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100008c8, 8), (unique, 0x100008c8, 8) INT_ADD (unique, 0x100008b8, 8) , (unique, 0x100008c0, 8), (unique, 0x100008c0, 8) CAST (register, 0x8, 8), (unique, 0x100008b8, 8) CAST (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x12e7cd, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x203, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x8, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000451, 8) , (const, 0x8, 8), (unique, 0x10000451, 8) INT_ADD (register, 0x10, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ADD (unique, 0x100008d8, 8) , (unique, 0x100008e0, 8), (unique, 0x100008e0, 8) CAST (register, 0xa0, 8), (unique, 0x100008d8, 8) CAST (register, 0x8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x12e788, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e8, 8) , (stack, 0xffffffffffffff14, 4), (unique, 0x100008e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x23a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x237, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x234, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100008f0, 8), (unique, 0x100008f0, 8) CAST (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x12e540, 1)]
[(unique, 0x1000058b, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x12e775, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0x10000900, 8), (unique, 0x10000900, 8) CAST (stack, 0xffffffffffffff58, 8), (register, 0x8, 8) CAST (unique, 0x100008f8, 8), (unique, 0x100008f8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0xa0, 8) , (unique, 0x10000469, 8) , (const, 0x4, 8), (unique, 0x10000469, 8) INT_ADD (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000908, 8) , (const, 0x12e57a, 8), (unique, 0x10000908, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22d, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x22d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x22d, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x22d, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x22c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x22c, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x231, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000910, 8) , (const, 0x16, 4), (unique, 0x10000910, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  BRANCH (ram, 0x12e52b, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x12e8b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff10, 4) , (const, 0x1, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000918, 8) , (const, 0x12e8bb, 8), (unique, 0x10000918, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x176, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x176, 4)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x176, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x175, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x176, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x175, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x176, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x175, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x176, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x175, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x176, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x175, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x176, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x175, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0xa0, 8) , (stack, 0xffffffffffffff58, 8)]
[ ---  BRANCH (ram, 0x12e540, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000920, 8) , (const, 0x12e640, 8), (unique, 0x10000920, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2cc, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2cc, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x2cc, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x2cb, 4), (stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x2cc, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x2cb, 4), (stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x2cc, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x2cb, 4), (stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2cc, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x2cb, 4), (stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2cc, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x2cb, 4), (stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2cc, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2cb, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0x0, 4)]
[(unique, 0x100005c3, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x12e540, 1)]
[(stack, 0xffffffffffffff20, 8) MULTIEQUAL (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8) , (stack, 0xffffffffffffff20, 8)]
[(stack, 0xffffffffffffff18, 8) MULTIEQUAL (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8) , (stack, 0xffffffffffffff18, 8)]
[(stack, 0xffffffffffffff14, 4) MULTIEQUAL (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4) , (stack, 0xffffffffffffff14, 4)]
[(stack, 0xffffffffffffff10, 4) MULTIEQUAL (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4) , (stack, 0xffffffffffffff10, 4)]
[(stack, 0xffffffffffffff00, 8) MULTIEQUAL (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8) , (stack, 0xffffffffffffff00, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100005a3, 8) , (unique, 0x10000617, 8) , (unique, 0x10000617, 8) , (unique, 0x10000617, 8) , (unique, 0x100005c3, 8) , (unique, 0x100005cb, 8) , (unique, 0x10000617, 8)]
[ ---  CBRANCH (ram, 0x12e953, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000928, 8), (unique, 0x10000928, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000930, 8) , (const, 0x12e958, 8), (unique, 0x10000930, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x16f, 4), (stack, 0xffffffffffffff00, 8) INDIRECT (stack, 0xffffffffffffff00, 8) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x16f, 4), (stack, 0xffffffffffffff10, 4) INDIRECT (stack, 0xffffffffffffff10, 4) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x16f, 4), (stack, 0xffffffffffffff14, 4) INDIRECT (stack, 0xffffffffffffff14, 4) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x16f, 4), (stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x16f, 4), (stack, 0xffffffffffffff20, 8) INDIRECT (stack, 0xffffffffffffff20, 8) , (const, 0x16e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x16e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8)]
