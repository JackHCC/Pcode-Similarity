[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b5, 8), (unique, 0x100002b5, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000285, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002bd, 8), (unique, 0x100002bd, 8) INT_ADD (register, 0x38, 8) , (const, 0x94, 8)]
[ ---  CBRANCH (ram, 0x1f2beb, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x28, 4) , (register, 0x90, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (unique, 0x3100, 4), (register, 0x90, 4) MULTIEQUAL (unique, 0x10000285, 4) , (unique, 0x10000276, 4)]
[(unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002cd, 8), (unique, 0x100002cd, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4), (register, 0x18, 4) INT_SDIV (register, 0x0, 4) , (const, 0x2, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002c5, 8), (unique, 0x100002c5, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (register, 0x0, 4) INT_ADD (register, 0x28, 4) , (register, 0x90, 4)]
[(unique, 0x1000028d, 4) COPY (register, 0x18, 4), (register, 0x18, 4) INT_SDIV (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_ADD (register, 0x28, 4) , (register, 0x90, 4)]
[(unique, 0x10000299, 4) COPY (register, 0x90, 4)]
[(unique, 0x10000276, 4) MULTIEQUAL (unique, 0x10000299, 4) , (unique, 0x1000029d, 4)]
[(unique, 0x10000271, 4) COPY (unique, 0x10000295, 4), (unique, 0x10000295, 4) MULTIEQUAL (unique, 0x1000028d, 4) , (unique, 0x10000291, 4)]
[ ---  CBRANCH (ram, 0x1f2be7, 1) , (unique, 0x10000275, 1), (unique, 0x10000275, 1) INT_SLESSEQUAL (register, 0x8, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) MULTIEQUAL (unique, 0x5200, 4) , (unique, 0x5200, 4)]
[ ---  CBRANCH (ram, 0x1f2bc0, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x10000271, 4) , (register, 0x28, 4)]
[(unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002d5, 8), (unique, 0x100002d5, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x90, 8) , (const, 0x14, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x90, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_SDIV (register, 0x90, 4) , (const, 0x2, 4), (register, 0x90, 4) INT_ADD (register, 0x28, 4) , (unique, 0x10000271, 4)]
[(unique, 0x10000291, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SDIV (register, 0x90, 4) , (const, 0x2, 4), (register, 0x90, 4) INT_ADD (register, 0x28, 4) , (unique, 0x10000271, 4)]
[(unique, 0x1000029d, 4) COPY (unique, 0x10000271, 4)]
[(unique, 0x3100, 4) INT_ADD (unique, 0x10000271, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1f2b92, 1)]
[ ---  CBRANCH (ram, 0x1f2e80, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x28, 4) , (unique, 0xbc80, 4)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1f2c11, 1)]
[ ---  CBRANCH (ram, 0x1f2c11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002dd, 8), (unique, 0x100002dd, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (register, 0x0, 8) INT_SEXT (register, 0x28, 4)]
[(register, 0x28, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000289, 4) COPY (unique, 0xbc80, 4)]
[(register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f2c7c, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x18, 4) , (register, 0xa8, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4), (register, 0xa8, 4) MULTIEQUAL (unique, 0x10000289, 4) , (unique, 0x1000027f, 4)]
[(unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x90, 4), (register, 0x90, 4) INT_SDIV (unique, 0x3400, 4) , (const, 0x2, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (unique, 0x3400, 4) INT_ADD (register, 0x18, 4) , (register, 0xa8, 4)]
[(unique, 0x100002a1, 4) COPY (register, 0x90, 4), (register, 0x90, 4) INT_SDIV (unique, 0x3400, 4) , (const, 0x2, 4), (unique, 0x3400, 4) INT_ADD (register, 0x18, 4) , (register, 0xa8, 4)]
[(unique, 0x100002ad, 4) COPY (register, 0xa8, 4)]
[(unique, 0x1000027f, 4) MULTIEQUAL (unique, 0x100002ad, 4) , (unique, 0x100002b1, 4)]
[(unique, 0x1000027a, 4) COPY (unique, 0x100002a9, 4), (unique, 0x100002a9, 4) MULTIEQUAL (unique, 0x100002a1, 4) , (unique, 0x100002a5, 4)]
[ ---  CBRANCH (ram, 0x1f2c77, 1) , (unique, 0x1000027e, 1), (unique, 0x1000027e, 1) INT_SLESSEQUAL (register, 0x88, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) MULTIEQUAL (unique, 0x5200, 4) , (unique, 0x5200, 4)]
[ ---  CBRANCH (ram, 0x1f2c50, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x1000027a, 4) , (register, 0x18, 4)]
[(unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002fd, 8), (unique, 0x100002fd, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0xa0, 8) , (const, 0x14, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x4, 8), (register, 0xa0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_SDIV (unique, 0x3400, 4) , (const, 0x2, 4), (unique, 0x3400, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1000027a, 4)]
[(unique, 0x100002a5, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SDIV (unique, 0x3400, 4) , (const, 0x2, 4), (unique, 0x3400, 4) INT_ADD (register, 0x18, 4) , (unique, 0x1000027a, 4)]
[(unique, 0x100002b1, 4) COPY (unique, 0x1000027a, 4)]
[(register, 0x18, 4) INT_ADD (unique, 0x1000027a, 4) , (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x1f2c16, 1)]
[ ---  CBRANCH (ram, 0x1f2e90, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x18, 4) , (unique, 0xbc80, 4)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1f2ca3, 1)]
[ ---  CBRANCH (ram, 0x1f2ca3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000030d, 8), (unique, 0x1000030d, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x4, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000305, 8), (unique, 0x10000305, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (register, 0x0, 8) INT_SEXT (register, 0x18, 4)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x1f2e72, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000315, 8), (unique, 0x10000315, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (register, 0x10, 4) , (stack, 0xffffffffffffffb0, 4)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x3680, 8) INT_MULT (register, 0xb8, 8) , (const, 0x4, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000033d, 8), (unique, 0x1000033d, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffa8, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000335, 8), (unique, 0x10000335, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000032d, 8), (unique, 0x1000032d, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000325, 8), (unique, 0x10000325, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000031d, 8), (unique, 0x1000031d, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x1f2e9a, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x8, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000335, 8), (unique, 0x10000335, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000032d, 8), (unique, 0x1000032d, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000325, 8), (unique, 0x10000325, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0xb8, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000031d, 8), (unique, 0x1000031d, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1f2df0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x88, 8) COPY (const, 0x1, 8)]
[(register, 0x30, 1) INT_OR (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f2d38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1f2df6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1f2d99, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x88, 4) , (unique, 0xbc80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x26e, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x26e, 4)]
[(register, 0x88, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1edc60, 8) , (register, 0x38, 8) , (register, 0x30, 1) , (unique, 0xbc80, 4) , (stack, 0xffffffffffffffb0, 4) , (register, 0x28, 4) , (register, 0x88, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffb0, 4), (register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1f2eb6, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (register, 0x88, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000035d, 8), (unique, 0x1000035d, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x14, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000355, 8), (unique, 0x10000355, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000034d, 8), (unique, 0x1000034d, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3680, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000345, 8), (unique, 0x10000345, 8) INT_ADD (register, 0x30, 8) , (const, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000365, 8), (unique, 0x10000365, 8) INT_ADD (unique, 0x3400, 8) , (const, 0xc, 8)]
[(unique, 0x10000223, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000022c, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(unique, 0x10000238, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000240, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(unique, 0x10000234, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1f2d90, 1) , (unique, 0x1000022b, 1), (unique, 0x1000022b, 1) INT_SLESSEQUAL (register, 0x88, 4) , (unique, 0x10000227, 4), (unique, 0x10000227, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x1f2d90, 1)]
[ ---  CBRANCH (ram, 0x1f2e60, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0xbc80, 4) , (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x1f2d99, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (register, 0x88, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(register, 0x88, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1f2e05, 1)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x10000240, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000238, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (register, 0x88, 8)]
[(register, 0x30, 1) INT_OR (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000223, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x1f2e30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x10000227, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1f2d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (register, 0x10, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (unique, 0x10000240, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x10000238, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[ ---  CBRANCH (ram, 0x1f2e60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0x88, 4), (register, 0x88, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 4), (register, 0x88, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (register, 0x88, 8) , (register, 0x88, 8), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000234, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(register, 0x30, 1) COPY (const, 0x1, 1)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x346, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x346, 4)]
[ ---  CBRANCH (ram, 0x1f2d99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (stack, 0xffffffffffffffb8, 4), (stack, 0xffffffffffffffb8, 4) SUBPIECE (register, 0x88, 8) , (const, 0x0, 8), (register, 0x0, 4) CALL (ram, 0x1edc60, 8) , (register, 0x38, 8) , (register, 0x30, 1) , (unique, 0xbc80, 4) , (register, 0x80, 4) , (register, 0x18, 4), (register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0xb8, 8) INT_ADD (register, 0xb8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1f2cca, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESSEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000036d, 8), (unique, 0x1000036d, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (unique, 0x100001b2, 4) , (const, 0x1, 4), (unique, 0x100001b2, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
