[ ---  CBRANCH (ram, 0x41ed10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x41ec45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffff, 4), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x41ed38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000104, 4) , (const, 0x0, 4), (unique, 0x10000104, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x41ed80, 1) , (unique, 0x1000010b, 1), (unique, 0x1000010b, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x10000251, 8), (unique, 0x10000251, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x41edf0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000259, 8), (unique, 0x10000259, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41ed69, 1)]
[ ---  CBRANCH (ram, 0x41ed19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0xffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x41edb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000da, 4) , (const, 0x0, 4), (unique, 0x100000da, 4) INT_AND (register, 0x0, 4) , (const, 0x100, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x50, 8)]
[ ---  BRANCH (ram, 0x41ed9d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(unique, 0x10000231, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41ed9d, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000279, 8), (unique, 0x10000279, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0x10000239, 8) COPY (register, 0x10, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000231, 8) , (unique, 0x10000239, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000281, 8), (unique, 0x10000281, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000289, 8), (unique, 0x10000289, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000291, 8), (unique, 0x10000291, 8) CAST (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020f, 8) , (register, 0x0, 4), (unique, 0x1000020f, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffff7ff, 4)]
[ ---  BRANCH (ram, 0x41ec59, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000299, 8), (unique, 0x10000299, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100002a1, 8), (unique, 0x100002a1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x41ed20, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002a9, 8), (unique, 0x100002a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0x10000241, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x41ec99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000056, 4) , (const, 0x0, 4), (unique, 0x10000056, 4) INT_AND (register, 0x0, 4) , (const, 0x100, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002b9, 8), (unique, 0x100002b9, 8) CAST (register, 0x30, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014f, 8) , (register, 0x0, 4), (unique, 0x1000014f, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffeff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002d1, 8), (unique, 0x100002d1, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x41edc8, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002c1, 8), (unique, 0x100002c1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002b1, 8), (unique, 0x100002b1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002d9, 8), (unique, 0x100002d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100002e1, 4), (unique, 0x100002e1, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002e5, 8), (unique, 0x100002e5, 8) CAST (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000241, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x41ece8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x60, 8)]
[ ---  CBRANCH (ram, 0x41ecac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x58, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) PTRSUB (register, 0x38, 8) , (const, 0x48, 8)]
[ ---  BRANCH (ram, 0x41ecac, 1)]
[ ---  CBRANCH (ram, 0x41ed19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x41dfb0, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100002f5, 4), (unique, 0x100002f5, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x41ede0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x6a7, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4c6b60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f9, 8), (unique, 0x100002f9, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CALL (ram, 0x41b380, 8)]
[ ---  BRANCH (ram, 0x41ecd3, 1)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000309, 4), (unique, 0x10000309, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000301, 8), (unique, 0x10000301, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x28, 8)]
