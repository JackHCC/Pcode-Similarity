[(unique, 0x100000f7, 8) COPY (ram, 0x4eae68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000129, 8), (unique, 0x10000129, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x265090, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0470, 4) , (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x15b, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x15b, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x15b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000131, 8) , (const, 0x2, 4), (unique, 0x10000131, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x264fd0, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x3c, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffb5, 8) INDIRECT (stack, 0xffffffffffffffb5, 8) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffbd, 1) INDIRECT (stack, 0xffffffffffffffbd, 1) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x3c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3c, 4)]
[ ---  CBRANCH (ram, 0x265060, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100000cf, 8) , (const, 0x2, 4), (unique, 0x100000cf, 8) COPY (const, 0x2b7467, 8)]
[(unique, 0x10000121, 8) COPY (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x26507a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000139, 8), (unique, 0x10000139, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x264fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x13, 4)]
[(ram, 0x4f0470, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x264fd0, 1)]
[ ---  CBRANCH (ram, 0x264f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f046c, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8a, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x8a, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffb5, 8) INDIRECT (stack, 0xffffffffffffffb5, 8) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffbd, 1) INDIRECT (stack, 0xffffffffffffffbd, 1) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x8a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4)]
[ ---  CBRANCH (ram, 0x264f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (unique, 0x100000c7, 8) , (register, 0x20, 8), (unique, 0x100000c7, 8) COPY (const, 0x2b5800, 8)]
[ ---  CBRANCH (ram, 0x264f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff38, 8) , (const, 0x1cd1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa7, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xa7, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffb5, 8) INDIRECT (stack, 0xffffffffffffffb5, 8) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffbd, 1) INDIRECT (stack, 0xffffffffffffffbd, 1) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0xa7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa7, 4)]
[ ---  CBRANCH (ram, 0x264fad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (unique, 0x100000d7, 8) , (register, 0x20, 8), (unique, 0x100000d7, 8) COPY (const, 0x2b7471, 8)]
[ ---  CBRANCH (ram, 0x264f38, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff38, 8) , (const, 0x1373, 8)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc4, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc9, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc4, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xc9, 4), (ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xc4, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xc9, 4), (ram, 0x4f0470, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000141, 8) , (const, 0x2, 4), (unique, 0x10000141, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc4, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc4, 4)]
[(unique, 0x10000107, 8) COPY (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc4, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(ram, 0x4f046c, 4) MULTIEQUAL (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x10000107, 8) , (unique, 0x10000121, 8) , (unique, 0x10000121, 8) , (unique, 0x100000f7, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb5, 8)]
[(register, 0xb0, 8) COPY (const, 0x2bb7d0, 8)]
[(stack, 0xffffffffffffffb5, 8) COPY (const, 0x7974702f7665642f, 8)]
[(register, 0x0, 1) COPY (const, 0x70, 1)]
[(stack, 0xffffffffffffffbf, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(stack, 0xffffffffffffffb5, 8) MULTIEQUAL (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8)]
[(ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(ram, 0x4f046c, 4) MULTIEQUAL (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xb8, 8) COPY (const, 0x2bb7b0, 8)]
[(register, 0x0, 1) COPY (const, 0x30, 1)]
[(unique, 0x1000011f, 1) COPY (register, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0xbb00, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xee, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xee, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xee, 4), (ram, 0x4f046c, 4) MULTIEQUAL (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xee, 4), (ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(stack, 0xffffffffffffffb5, 8) INDIRECT (stack, 0xffffffffffffffb5, 8) , (const, 0xee, 4), (stack, 0xffffffffffffffb5, 8) MULTIEQUAL (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8)]
[(stack, 0xffffffffffffffbd, 1) INDIRECT (stack, 0xffffffffffffffbd, 1) , (const, 0xee, 4), (stack, 0xffffffffffffffbd, 1) MULTIEQUAL (unique, 0x1000011f, 1) , (stack, 0xffffffffffffffbd, 1)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (unique, 0x10000120, 1) , (const, 0xee, 4), (unique, 0x10000120, 1) COPY (register, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0xee, 4), (stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xee, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x264f42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x10000149, 8) , (const, 0x2, 4), (unique, 0x10000149, 8) CAST (unique, 0x3800, 8)]
[ ---  CBRANCH (ram, 0x264f42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000151, 8), (unique, 0x10000151, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0xa0, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x265010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x264ff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8), (register, 0xb0, 8) PTRADD (register, 0xb0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13a, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x13a, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x13a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000159, 8) , (const, 0x2, 4), (unique, 0x10000159, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0xa0, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x264f42, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(stack, 0xffffffffffffffbd, 1) MULTIEQUAL (stack, 0xffffffffffffffbd, 1) , (stack, 0xffffffffffffffbd, 1) , (stack, 0xffffffffffffffbd, 1)]
[(stack, 0xffffffffffffffb5, 8) MULTIEQUAL (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8)]
[(ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f046c, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffbf, 1) MULTIEQUAL (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1) , (stack, 0xffffffffffffffbf, 1)]
[(stack, 0xffffffffffffffbe, 1) MULTIEQUAL (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1) , (stack, 0xffffffffffffffbe, 1)]
[(stack, 0xffffffffffffffbd, 1) MULTIEQUAL (stack, 0xffffffffffffffbd, 1) , (stack, 0xffffffffffffffbd, 1) , (stack, 0xffffffffffffffbd, 1) , (stack, 0xffffffffffffffbd, 1)]
[(stack, 0xffffffffffffffb5, 8) MULTIEQUAL (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8) , (stack, 0xffffffffffffffb5, 8)]
[(ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(ram, 0x4f046c, 4) MULTIEQUAL (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2650a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000161, 8), (unique, 0x10000161, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb5, 8) INDIRECT (stack, 0xffffffffffffffb5, 8) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffbd, 1) INDIRECT (stack, 0xffffffffffffffbd, 1) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffbe, 1) INDIRECT (stack, 0xffffffffffffffbe, 1) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffbf, 1) INDIRECT (stack, 0xffffffffffffffbf, 1) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x82, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x82, 4)]
[(ram, 0x4f046c, 4) COPY (ram, 0x4f046c, 4), (ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x82, 4)]
[(ram, 0x4f0470, 4) COPY (ram, 0x4f0470, 4), (ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x82, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4f046c, 4) COPY (ram, 0x4f046c, 4)]
[(ram, 0x4f0470, 4) COPY (ram, 0x4f0470, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x18, 4)]
