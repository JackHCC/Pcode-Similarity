[ ---  CBRANCH (ram, 0x401fa5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0x8, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0x4, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf0, 4), (register, 0x10, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0xc, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(ram, 0x4c7d20, 4) INDIRECT (ram, 0x4c7d20, 4) , (const, 0x114, 4), (ram, 0x4c7d20, 4) INDIRECT (ram, 0x4c7d20, 4) , (const, 0x106, 4), (ram, 0x4c7d20, 4) INDIRECT (ram, 0x4c7d20, 4) , (const, 0xd2, 4), (ram, 0x4c7d20, 4) INDIRECT (unique, 0x10000189, 4) , (const, 0x9e, 4), (unique, 0x10000189, 4) COPY (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(ram, 0x4c7d24, 4) INDIRECT (ram, 0x4c7d24, 4) , (const, 0x114, 4), (ram, 0x4c7d24, 4) INDIRECT (ram, 0x4c7d24, 4) , (const, 0x106, 4), (ram, 0x4c7d24, 4) INDIRECT (ram, 0x4c7d24, 4) , (const, 0xd2, 4), (ram, 0x4c7d24, 4) INDIRECT (unique, 0x2c100, 4) , (const, 0x9e, 4), (unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(ram, 0x4c7d28, 4) INDIRECT (ram, 0x4c7d28, 4) , (const, 0x114, 4), (ram, 0x4c7d28, 4) INDIRECT (ram, 0x4c7d28, 4) , (const, 0x106, 4), (ram, 0x4c7d28, 4) INDIRECT (ram, 0x4c7d28, 4) , (const, 0xd2, 4), (ram, 0x4c7d28, 4) INDIRECT (unique, 0x2c400, 4) , (const, 0x9e, 4), (unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x114, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x106, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0xd2, 4), (ram, 0x4c7d2c, 4) INDIRECT (unique, 0x2c280, 4) , (const, 0x9e, 4), (unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[(ram, 0x4c7d30, 4) INDIRECT (ram, 0x4c7d30, 4) , (const, 0x114, 4), (ram, 0x4c7d30, 4) INDIRECT (ram, 0x4c7d30, 4) , (const, 0x106, 4), (ram, 0x4c7d30, 4) INDIRECT (ram, 0x4c7d30, 4) , (const, 0xd2, 4), (ram, 0x4c7d30, 4) INDIRECT (ram, 0x4c7d30, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d34, 4) INDIRECT (ram, 0x4c7d34, 4) , (const, 0x114, 4), (ram, 0x4c7d34, 4) INDIRECT (ram, 0x4c7d34, 4) , (const, 0x106, 4), (ram, 0x4c7d34, 4) INDIRECT (ram, 0x4c7d34, 4) , (const, 0xd2, 4), (ram, 0x4c7d34, 4) INDIRECT (ram, 0x4c7d34, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d38, 4) INDIRECT (ram, 0x4c7d38, 4) , (const, 0x114, 4), (ram, 0x4c7d38, 4) INDIRECT (ram, 0x4c7d38, 4) , (const, 0x106, 4), (ram, 0x4c7d38, 4) INDIRECT (ram, 0x4c7d38, 4) , (const, 0xd2, 4), (ram, 0x4c7d38, 4) INDIRECT (ram, 0x4c7d38, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d3c, 4) INDIRECT (ram, 0x4c7d3c, 4) , (const, 0x114, 4), (ram, 0x4c7d3c, 4) INDIRECT (ram, 0x4c7d3c, 4) , (const, 0x106, 4), (ram, 0x4c7d3c, 4) INDIRECT (ram, 0x4c7d3c, 4) , (const, 0xd2, 4), (ram, 0x4c7d3c, 4) INDIRECT (ram, 0x4c7d3c, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d49, 1) INDIRECT (ram, 0x4c7d49, 1) , (const, 0x114, 4), (ram, 0x4c7d49, 1) INDIRECT (ram, 0x4c7d49, 1) , (const, 0x106, 4), (ram, 0x4c7d49, 1) INDIRECT (ram, 0x4c7d49, 1) , (const, 0xd2, 4), (ram, 0x4c7d49, 1) INDIRECT (ram, 0x4c7d49, 1) , (const, 0x9e, 4)]
[(ram, 0x4c7d50, 4) INDIRECT (ram, 0x4c7d50, 4) , (const, 0x114, 4), (ram, 0x4c7d50, 4) INDIRECT (ram, 0x4c7d50, 4) , (const, 0x106, 4), (ram, 0x4c7d50, 4) INDIRECT (ram, 0x4c7d50, 4) , (const, 0xd2, 4), (ram, 0x4c7d50, 4) INDIRECT (ram, 0x4c7d50, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d54, 4) INDIRECT (ram, 0x4c7d54, 4) , (const, 0x114, 4), (ram, 0x4c7d54, 4) INDIRECT (ram, 0x4c7d54, 4) , (const, 0x106, 4), (ram, 0x4c7d54, 4) INDIRECT (ram, 0x4c7d54, 4) , (const, 0xd2, 4), (ram, 0x4c7d54, 4) INDIRECT (ram, 0x4c7d54, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d58, 4) INDIRECT (ram, 0x4c7d58, 4) , (const, 0x114, 4), (ram, 0x4c7d58, 4) INDIRECT (ram, 0x4c7d58, 4) , (const, 0x106, 4), (ram, 0x4c7d58, 4) INDIRECT (ram, 0x4c7d58, 4) , (const, 0xd2, 4), (ram, 0x4c7d58, 4) INDIRECT (ram, 0x4c7d58, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d5c, 4) INDIRECT (ram, 0x4c7d5c, 4) , (const, 0x114, 4), (ram, 0x4c7d5c, 4) INDIRECT (ram, 0x4c7d5c, 4) , (const, 0x106, 4), (ram, 0x4c7d5c, 4) INDIRECT (ram, 0x4c7d5c, 4) , (const, 0xd2, 4), (ram, 0x4c7d5c, 4) INDIRECT (ram, 0x4c7d5c, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d80, 4) INDIRECT (ram, 0x4c7d80, 4) , (const, 0x114, 4), (ram, 0x4c7d80, 4) INDIRECT (ram, 0x4c7d80, 4) , (const, 0x106, 4), (ram, 0x4c7d80, 4) INDIRECT (ram, 0x4c7d80, 4) , (const, 0xd2, 4), (ram, 0x4c7d80, 4) INDIRECT (ram, 0x4c7d80, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d84, 4) INDIRECT (ram, 0x4c7d84, 4) , (const, 0x114, 4), (ram, 0x4c7d84, 4) INDIRECT (ram, 0x4c7d84, 4) , (const, 0x106, 4), (ram, 0x4c7d84, 4) INDIRECT (ram, 0x4c7d84, 4) , (const, 0xd2, 4), (ram, 0x4c7d84, 4) INDIRECT (ram, 0x4c7d84, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x114, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x106, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0xd2, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x9e, 4)]
[(ram, 0x4c7da0, 8) INDIRECT (ram, 0x4c7da0, 8) , (const, 0x114, 4), (ram, 0x4c7da0, 8) INDIRECT (ram, 0x4c7da0, 8) , (const, 0x106, 4), (ram, 0x4c7da0, 8) INDIRECT (ram, 0x4c7da0, 8) , (const, 0xd2, 4), (ram, 0x4c7da0, 8) INDIRECT (ram, 0x4c7da0, 8) , (const, 0x9e, 4)]
[(ram, 0x4c7da8, 4) INDIRECT (ram, 0x4c7da8, 4) , (const, 0x114, 4), (ram, 0x4c7da8, 4) INDIRECT (ram, 0x4c7da8, 4) , (const, 0x106, 4), (ram, 0x4c7da8, 4) INDIRECT (ram, 0x4c7da8, 4) , (const, 0xd2, 4), (ram, 0x4c7da8, 4) INDIRECT (ram, 0x4c7da8, 4) , (const, 0x9e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0xf, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000199, 8), (unique, 0x10000199, 8) CALLOTHER (const, 0x2a, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x40210d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xf, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xf, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xff, 4), (register, 0x0, 4) INT_RIGHT (unique, 0x2bf80, 4) , (const, 0x14, 4)]
[(ram, 0x4c7d20, 4) INDIRECT (ram, 0x4c7d20, 4) , (const, 0x5de, 4), (ram, 0x4c7d20, 4) INDIRECT (ram, 0x4c7d20, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d24, 4) INDIRECT (ram, 0x4c7d24, 4) , (const, 0x5de, 4), (ram, 0x4c7d24, 4) INDIRECT (ram, 0x4c7d24, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d28, 4) INDIRECT (ram, 0x4c7d28, 4) , (const, 0x5de, 4), (ram, 0x4c7d28, 4) INDIRECT (ram, 0x4c7d28, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x5de, 4), (ram, 0x4c7d2c, 4) INDIRECT (ram, 0x4c7d2c, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d30, 4) INDIRECT (ram, 0x4c7d30, 4) , (const, 0x5de, 4), (ram, 0x4c7d30, 4) INDIRECT (ram, 0x4c7d30, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d34, 4) INDIRECT (ram, 0x4c7d34, 4) , (const, 0x5de, 4), (ram, 0x4c7d34, 4) INDIRECT (ram, 0x4c7d34, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d38, 4) INDIRECT (ram, 0x4c7d38, 4) , (const, 0x5de, 4), (ram, 0x4c7d38, 4) INDIRECT (ram, 0x4c7d38, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d3c, 4) INDIRECT (ram, 0x4c7d3c, 4) , (const, 0x5de, 4), (ram, 0x4c7d3c, 4) INDIRECT (ram, 0x4c7d3c, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d49, 1) INDIRECT (ram, 0x4c7d49, 1) , (const, 0x5de, 4), (ram, 0x4c7d49, 1) INDIRECT (ram, 0x4c7d49, 1) , (const, 0x5d4, 4)]
[(ram, 0x4c7d50, 4) INDIRECT (ram, 0x4c7d50, 4) , (const, 0x5de, 4), (ram, 0x4c7d50, 4) INDIRECT (ram, 0x4c7d50, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d54, 4) INDIRECT (ram, 0x4c7d54, 4) , (const, 0x5de, 4), (ram, 0x4c7d54, 4) INDIRECT (ram, 0x4c7d54, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d58, 4) INDIRECT (ram, 0x4c7d58, 4) , (const, 0x5de, 4), (ram, 0x4c7d58, 4) INDIRECT (ram, 0x4c7d58, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d5c, 4) INDIRECT (ram, 0x4c7d5c, 4) , (const, 0x5de, 4), (ram, 0x4c7d5c, 4) INDIRECT (ram, 0x4c7d5c, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d80, 4) INDIRECT (ram, 0x4c7d80, 4) , (const, 0x5de, 4), (ram, 0x4c7d80, 4) INDIRECT (ram, 0x4c7d80, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d84, 4) INDIRECT (ram, 0x4c7d84, 4) , (const, 0x5de, 4), (ram, 0x4c7d84, 4) INDIRECT (ram, 0x4c7d84, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x5de, 4), (ram, 0x4c7d8c, 4) INDIRECT (ram, 0x4c7d8c, 4) , (const, 0x5d4, 4)]
[(ram, 0x4c7da0, 8) INDIRECT (ram, 0x4c7da0, 8) , (const, 0x5de, 4), (ram, 0x4c7da0, 8) INDIRECT (ram, 0x4c7da0, 8) , (const, 0x5d4, 4)]
[(ram, 0x4c7da8, 4) INDIRECT (ram, 0x4c7da8, 4) , (const, 0x5de, 4), (ram, 0x4c7da8, 4) INDIRECT (ram, 0x4c7da8, 4) , (const, 0x5d4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x401fa5, 1)]
[(ram, 0x4c7da8, 4) MULTIEQUAL (ram, 0x4c7da8, 4) , (ram, 0x4c7da8, 4) , (ram, 0x4c7da8, 4)]
[(ram, 0x4c7da0, 8) MULTIEQUAL (ram, 0x4c7da0, 8) , (ram, 0x4c7da0, 8) , (ram, 0x4c7da0, 8)]
[(ram, 0x4c7d84, 4) MULTIEQUAL (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d5c, 4) MULTIEQUAL (ram, 0x4c7d5c, 4) , (ram, 0x4c7d5c, 4) , (ram, 0x4c7d5c, 4)]
[(ram, 0x4c7d58, 4) MULTIEQUAL (ram, 0x4c7d58, 4) , (ram, 0x4c7d58, 4) , (ram, 0x4c7d58, 4)]
[(ram, 0x4c7d54, 4) MULTIEQUAL (ram, 0x4c7d54, 4) , (ram, 0x4c7d54, 4) , (ram, 0x4c7d54, 4)]
[(ram, 0x4c7d50, 4) MULTIEQUAL (ram, 0x4c7d50, 4) , (ram, 0x4c7d50, 4) , (ram, 0x4c7d50, 4)]
[(ram, 0x4c7d49, 1) MULTIEQUAL (ram, 0x4c7d49, 1) , (ram, 0x4c7d49, 1) , (ram, 0x4c7d49, 1)]
[(ram, 0x4c7d3c, 4) MULTIEQUAL (ram, 0x4c7d3c, 4) , (ram, 0x4c7d3c, 4) , (ram, 0x4c7d3c, 4)]
[(ram, 0x4c7d38, 4) MULTIEQUAL (ram, 0x4c7d38, 4) , (ram, 0x4c7d38, 4) , (ram, 0x4c7d38, 4)]
[(ram, 0x4c7d34, 4) MULTIEQUAL (ram, 0x4c7d34, 4) , (ram, 0x4c7d34, 4) , (ram, 0x4c7d34, 4)]
[(ram, 0x4c7d30, 4) MULTIEQUAL (ram, 0x4c7d30, 4) , (ram, 0x4c7d30, 4) , (ram, 0x4c7d30, 4)]
[(ram, 0x4c7d2c, 4) MULTIEQUAL (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4) , (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d28, 4) MULTIEQUAL (ram, 0x4c7d28, 4) , (ram, 0x4c7d28, 4) , (ram, 0x4c7d28, 4)]
[(ram, 0x4c7d24, 4) MULTIEQUAL (ram, 0x4c7d24, 4) , (ram, 0x4c7d24, 4) , (ram, 0x4c7d24, 4)]
[(ram, 0x4c7d20, 4) MULTIEQUAL (ram, 0x4c7d20, 4) , (ram, 0x4c7d20, 4) , (ram, 0x4c7d20, 4)]
[ ---  CBRANCH (ram, 0x401fcf, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x6, 4) , (ram, 0x4c7d8c, 4), (ram, 0x4c7d8c, 4) MULTIEQUAL (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4) , (ram, 0x4c7d8c, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CALLOTHER (const, 0x30, 4) , (const, 0x7, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CALLOTHER (const, 0x30, 4) , (const, 0x7, 4)]
[(unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CALLOTHER (const, 0x30, 4) , (const, 0x7, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CALLOTHER (const, 0x30, 4) , (const, 0x7, 4)]
[(ram, 0x4c7d3c, 4) MULTIEQUAL (ram, 0x4c7d3c, 4) , (unique, 0x2c280, 4)]
[(ram, 0x4c7d38, 4) MULTIEQUAL (ram, 0x4c7d38, 4) , (unique, 0x2c400, 4)]
[(ram, 0x4c7d34, 4) MULTIEQUAL (ram, 0x4c7d34, 4) , (unique, 0x2c100, 4)]
[(ram, 0x4c7d30, 4) MULTIEQUAL (ram, 0x4c7d30, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x401ffc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xc, 4) , (ram, 0x4c7d8c, 4)]
[(unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[(unique, 0x2c280, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c200, 8), (unique, 0x2c200, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[(ram, 0x4c7d5c, 4) MULTIEQUAL (ram, 0x4c7d5c, 4) , (unique, 0x2c280, 4)]
[(ram, 0x4c7d58, 4) MULTIEQUAL (ram, 0x4c7d58, 4) , (unique, 0x2c400, 4)]
[(ram, 0x4c7d54, 4) MULTIEQUAL (ram, 0x4c7d54, 4) , (unique, 0x2c100, 4)]
[(ram, 0x4c7d50, 4) MULTIEQUAL (ram, 0x4c7d50, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x402104, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (ram, 0x4c7d28, 4) , (const, 0x8000000, 4)]
[ ---  CBRANCH (ram, 0x402122, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x6, 4), (register, 0x10, 4) INT_AND (register, 0x600, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x40219a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (ram, 0x4c7d28, 4) , (const, 0x10000000, 4)]
[(unique, 0x1000018d, 4) COPY (register, 0x8, 4), (register, 0x8, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x402157, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000078, 4) , (const, 0x0, 4), (unique, 0x10000078, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x20, 4)]
[(ram, 0x4c7d84, 4) INT_OR (ram, 0x4c7d84, 4) , (const, 0x100, 4)]
[(unique, 0x10000191, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x3, 4)]
[(ram, 0x4c7d84, 4) MULTIEQUAL (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d80, 4) COPY (unique, 0x10000195, 4), (unique, 0x10000195, 4) MULTIEQUAL (unique, 0x1000018d, 4) , (unique, 0x10000191, 4)]
[ ---  CBRANCH (ram, 0x402169, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (ram, 0x4c7d28, 4) , (const, 0x1000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x20000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x40217e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000038, 4) , (const, 0x0, 4), (unique, 0x10000038, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x200, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x80000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x40218d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000005c, 4) , (const, 0x0, 4), (unique, 0x1000005c, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x400, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x100000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x4022b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (ram, 0x4c7d49, 1) , (const, 0x8, 1)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x200000, 4)]
[ ---  BRANCH (ram, 0x40219a, 1)]
[(ram, 0x4c7d84, 4) MULTIEQUAL (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402021, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xe0, 4), (register, 0x0, 4) INT_AND (register, 0x600, 4) , (const, 0xe0, 4)]
[ ---  CBRANCH (ram, 0x402021, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x10000, 4)]
[(register, 0x8, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0xc, 4)]
[(unique, 0x10000181, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x4021d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x10000000, 4)]
[(unique, 0x10000185, 4) COPY (register, 0x8, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000181, 4) , (unique, 0x10000185, 4)]
[ ---  CBRANCH (ram, 0x4021e7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x8000000, 4)]
[(register, 0x10, 4) INT_OR (register, 0x10, 4) , (const, 0x10, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x4021f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x4000000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x20, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402200, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x100001b1, 4) , (const, 0x0, 4), (unique, 0x100001b1, 4) CAST (ram, 0x4c7d34, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x40, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402211, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x20000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x80, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402222, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x40000000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x100, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402237, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000044, 4) , (const, 0x0, 4), (unique, 0x10000044, 4) INT_AND (ram, 0x4c7d3c, 4) , (const, 0x8, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x200, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402246, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000060, 4) , (const, 0x0, 4), (unique, 0x10000060, 4) INT_AND (ram, 0x4c7d3c, 4) , (const, 0x4, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x400, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x40225b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000048, 4) , (const, 0x0, 4), (unique, 0x10000048, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x1000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x800, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x40226c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (ram, 0x4c7d34, 4) , (const, 0x200000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x1000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x40227b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000004c, 4) , (const, 0x0, 4), (unique, 0x1000004c, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x2, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x2000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x40228a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000050, 4) , (const, 0x0, 4), (unique, 0x10000050, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x40, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x4000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402299, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000054, 4) , (const, 0x0, 4), (unique, 0x10000054, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x800, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x8000, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402021, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000064, 4) , (const, 0x0, 4), (unique, 0x10000064, 4) INT_AND (ram, 0x4c7d38, 4) , (const, 0x4000, 4)]
[(ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x10000, 4)]
[ ---  BRANCH (ram, 0x402021, 1)]
[(ram, 0x4c7d84, 4) MULTIEQUAL (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[ ---  CBRANCH (ram, 0x402104, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xc, 4) , (ram, 0x4c7d8c, 4)]
[ ---  CBRANCH (ram, 0x402104, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x2c100, 4) , (const, 0x0, 4), (unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) CAST (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) INT_ADD (unique, 0x2ae80, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x18, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xffffffc0, 4), (register, 0x18, 4) INT_ADD (unique, 0x2c100, 4) , (const, 0x7f, 4)]
[ ---  CBRANCH (ram, 0x402104, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000006e, 4) , (const, 0x0, 4), (unique, 0x1000006e, 4) INT_AND (ram, 0x4c7d50, 4) , (const, 0x2, 4)]
[(unique, 0x10000129, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffefc, 8)]
[(unique, 0x10000141, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff7c, 8)]
[(register, 0x30, 4) COPY (const, 0x2, 4)]
[(stack, 0xffffffffffffff00, 4) COPY (const, 0x240, 4)]
[ ---  BRANCH (ram, 0x4020c3, 1)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(register, 0x80, 8) PTRADD (unique, 0x10000169, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000169, 8) MULTIEQUAL (unique, 0x10000129, 8) , (register, 0x80, 8)]
[(register, 0x38, 8) PTRADD (unique, 0x10000161, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x10000161, 8) MULTIEQUAL (unique, 0x10000141, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x402090, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0x1d000, 4) , (const, 0x0, 4), (unique, 0x1d000, 4) INT_AND (unique, 0x1cf80, 4) , (const, 0x1, 4), (unique, 0x1cf80, 4) INT_RIGHT (const, 0xee, 4) , (unique, 0x1cf00, 4), (unique, 0x1cf00, 4) INT_AND (register, 0x30, 4) , (const, 0x1f, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x394, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0x2bf80, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x100001bd, 8), (unique, 0x100001bd, 8) CALLOTHER (const, 0x34, 4) , (const, 0xd, 4)]
[ ---  CBRANCH (ram, 0x4020b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4020b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0x2c400, 4) , (const, 0x2, 4)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffffc0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x3d1, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x3d1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x2bc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4020b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x2, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x2da, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x2da, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4020b3, 1)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[ ---  CBRANCH (ram, 0x4020e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x402104, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_ADD (stack, 0xfffffffffffffff4, 4) , (stack, 0xffffffffffffff74, 4)]
[(ram, 0x4c7d20, 4) COPY (ram, 0x4c7d20, 4)]
[(ram, 0x4c7d24, 4) COPY (ram, 0x4c7d24, 4)]
[(ram, 0x4c7d28, 4) COPY (ram, 0x4c7d28, 4)]
[(ram, 0x4c7d2c, 4) COPY (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d30, 4) COPY (ram, 0x4c7d30, 4)]
[(ram, 0x4c7d34, 4) COPY (ram, 0x4c7d34, 4)]
[(ram, 0x4c7d38, 4) COPY (ram, 0x4c7d38, 4)]
[(ram, 0x4c7d3c, 4) COPY (ram, 0x4c7d3c, 4)]
[(ram, 0x4c7d49, 1) COPY (ram, 0x4c7d49, 1)]
[(ram, 0x4c7d50, 4) COPY (ram, 0x4c7d50, 4)]
[(ram, 0x4c7d54, 4) COPY (ram, 0x4c7d54, 4)]
[(ram, 0x4c7d58, 4) COPY (ram, 0x4c7d58, 4)]
[(ram, 0x4c7d5c, 4) COPY (ram, 0x4c7d5c, 4)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4), (ram, 0x4c7d80, 4) INT_OR (ram, 0x4c7d80, 4) , (const, 0x400000, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d8c, 4) COPY (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7da0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xffffffc0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x7f, 4)]
[(ram, 0x4c7da8, 4) COPY (register, 0x18, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(ram, 0x4c7d20, 4) COPY (ram, 0x4c7d20, 4)]
[(ram, 0x4c7d24, 4) COPY (ram, 0x4c7d24, 4)]
[(ram, 0x4c7d28, 4) COPY (ram, 0x4c7d28, 4)]
[(ram, 0x4c7d2c, 4) COPY (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d30, 4) COPY (ram, 0x4c7d30, 4)]
[(ram, 0x4c7d34, 4) COPY (ram, 0x4c7d34, 4)]
[(ram, 0x4c7d38, 4) COPY (ram, 0x4c7d38, 4)]
[(ram, 0x4c7d3c, 4) COPY (ram, 0x4c7d3c, 4)]
[(ram, 0x4c7d49, 1) COPY (ram, 0x4c7d49, 1)]
[(ram, 0x4c7d50, 4) COPY (ram, 0x4c7d50, 4)]
[(ram, 0x4c7d54, 4) COPY (ram, 0x4c7d54, 4)]
[(ram, 0x4c7d58, 4) COPY (ram, 0x4c7d58, 4)]
[(ram, 0x4c7d5c, 4) COPY (ram, 0x4c7d5c, 4)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d8c, 4) COPY (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7da0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c7da8, 4) COPY (register, 0x18, 4)]
[ ---  RETURN (const, 0x0, 8)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[(ram, 0x4c7d20, 4) COPY (ram, 0x4c7d20, 4)]
[(ram, 0x4c7d24, 4) COPY (ram, 0x4c7d24, 4)]
[(ram, 0x4c7d28, 4) COPY (ram, 0x4c7d28, 4)]
[(ram, 0x4c7d2c, 4) COPY (ram, 0x4c7d2c, 4)]
[(ram, 0x4c7d30, 4) COPY (ram, 0x4c7d30, 4)]
[(ram, 0x4c7d34, 4) COPY (ram, 0x4c7d34, 4)]
[(ram, 0x4c7d38, 4) COPY (ram, 0x4c7d38, 4)]
[(ram, 0x4c7d3c, 4) COPY (ram, 0x4c7d3c, 4)]
[(ram, 0x4c7d49, 1) COPY (ram, 0x4c7d49, 1)]
[(ram, 0x4c7d50, 4) COPY (ram, 0x4c7d50, 4)]
[(ram, 0x4c7d54, 4) COPY (ram, 0x4c7d54, 4)]
[(ram, 0x4c7d58, 4) COPY (ram, 0x4c7d58, 4)]
[(ram, 0x4c7d5c, 4) COPY (ram, 0x4c7d5c, 4)]
[(ram, 0x4c7d80, 4) COPY (ram, 0x4c7d80, 4), (ram, 0x4c7d80, 4) MULTIEQUAL (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4) , (ram, 0x4c7d80, 4)]
[(ram, 0x4c7d84, 4) COPY (ram, 0x4c7d84, 4), (ram, 0x4c7d84, 4) MULTIEQUAL (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4) , (ram, 0x4c7d84, 4)]
[(ram, 0x4c7d8c, 4) COPY (ram, 0x4c7d8c, 4)]
[(ram, 0x4c7da0, 8) COPY (ram, 0x4c7da0, 8), (ram, 0x4c7da0, 8) MULTIEQUAL (ram, 0x4c7da0, 8) , (ram, 0x4c7da0, 8) , (ram, 0x4c7da0, 8) , (register, 0x0, 8)]
[(ram, 0x4c7da8, 4) COPY (ram, 0x4c7da8, 4), (ram, 0x4c7da8, 4) MULTIEQUAL (ram, 0x4c7da8, 4) , (ram, 0x4c7da8, 4) , (ram, 0x4c7da8, 4) , (register, 0x18, 4)]
[ ---  RETURN (const, 0x0, 8)]
