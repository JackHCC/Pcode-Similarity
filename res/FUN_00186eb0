[(stack, 0xffffffffffffffb0, 8) COPY (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d9, 8) , (register, 0x20, 8), (unique, 0x100001d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8), (register, 0x20, 8) PTRADD (unique, 0x100000e9, 8) , (unique, 0x10000053, 8) , (const, 0x1, 8), (unique, 0x100000e9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000053, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x12, 8), (register, 0x80, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) INT_ADD (register, 0x38, 8) , (const, 0x58, 8), (register, 0x0, 8) PTRADD (unique, 0x10000111, 8) , (unique, 0x100000f9, 8) , (const, 0x1, 8), (unique, 0x10000111, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000f9, 8) INT_ADD (register, 0x80, 8) , (unique, 0x10000053, 8), (unique, 0x10000053, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x12, 8), (register, 0x80, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x186f19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) INT_ADD (register, 0x38, 8) , (const, 0x48, 8)]
[(register, 0xa0, 8) CAST (unique, 0x10000201, 8), (unique, 0x10000201, 8) INT_XOR (register, 0xa0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0xa0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x100001f1, 8) , (const, 0x2f, 4), (unique, 0x100001f1, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x100001e9, 8) , (const, 0x11, 4), (unique, 0x100001e9, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x186f21, 8), (register, 0x20, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_ADD (unique, 0x10000209, 8) , (unique, 0x10000171, 8), (unique, 0x10000209, 8) CAST (unique, 0x10000179, 8), (unique, 0x10000179, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8), (unique, 0x10000171, 8) INT_ADD (unique, 0x10000053, 8) , (const, 0x10, 8)]
[ ---  CALL (ram, 0x266330, 8) , (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x20, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (unique, 0x10000219, 8) , (unique, 0x10000189, 8), (unique, 0x10000219, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8), (unique, 0x10000189, 8) INT_ADD (unique, 0x10000053, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x0, 8), (register, 0x20, 8) CAST (unique, 0x10000231, 8), (unique, 0x10000231, 8) INT_ADD (unique, 0x10000229, 8) , (unique, 0x100001a1, 8), (unique, 0x10000229, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8), (unique, 0x100001a1, 8) INT_ADD (unique, 0x10000053, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x186f3d, 8), (register, 0x20, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (unique, 0x10000239, 8) , (unique, 0x10000053, 8), (unique, 0x10000239, 8) CAST (unique, 0x100000b7, 8), (unique, 0x100000b7, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8)]
[ ---  CALLIND (register, 0xa0, 8) , (unique, 0xbd80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x8, 8) , (const, 0x0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x50, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(register, 0x0, 8) INT_SUB (stack, 0xffffffffffffffb0, 8) , (register, 0x10, 8), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xce, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xcd, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb2, 4)]
[ ---  CBRANCH (ram, 0x186f62, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xce, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xce, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xcd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb6, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb3, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xb2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) PTRSUB (const, 0x0, 8) , (const, 0x186f67, 8), (register, 0x20, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) INT_ADD (unique, 0x10000251, 8) , (unique, 0x10000053, 8), (unique, 0x10000251, 8) CAST (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfd, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
