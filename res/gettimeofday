[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x28be4d, 8)]
[(stack, 0xffffffffffffffe4, 4) COPY (const, 0x1, 4)]
[(stack, 0xffffffffffffffe0, 4) COPY (const, 0x3ae75f6, 4)]
[(register, 0x10, 4) COPY (const, 0x5f, 4)]
[(stack, 0xffffffffffffffd8, 8) PTRSUB (const, 0x0, 8) , (const, 0x28be48, 8)]
[(register, 0x0, 4) COPY (const, 0x50e3a8, 4)]
[(register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x1000001a, 4), (unique, 0x1000001a, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x18, 4), (register, 0x10, 4) INT_AND (register, 0x0, 4) , (const, 0xf0000000, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x10, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1bba60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1bbaba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3ae75f6, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffff, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xcf, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xcf, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0xcf, 4)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x10000040, 8) , (unique, 0x10000048, 8) , (const, 0x25, 4) , (unique, 0x10000050, 8), (unique, 0x10000050, 8) COPY (const, 0x2931c0, 8), (unique, 0x10000048, 8) COPY (const, 0x291720, 8), (unique, 0x10000040, 8) COPY (const, 0x28f6f0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0xaf, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xaf, 4), (stack, 0xffffffffffffffe8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bbab5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000060, 8), (unique, 0x10000060, 8) CALL (ram, 0x2435b0, 8) , (unique, 0x10000038, 8) , (register, 0x20, 8), (unique, 0x10000038, 8) COPY (const, 0x28d912, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x1bba00, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
