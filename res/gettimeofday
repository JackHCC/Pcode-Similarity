[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x8, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b376d, 8)]
[(register, 0x10, 8) COPY (const, 0x5f, 8)]
[(stack, 0xffffffffffffffd8, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3768, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (const, 0x103ae75f6, 8)]
[(register, 0x0, 8) COPY (const, 0x50e3a8, 8)]
[(register, 0x0, 8) INT_XOR (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0xf0, 4), (register, 0x10, 4) SUBPIECE (unique, 0x1000005c, 8) , (const, 0x0, 4), (unique, 0x1000005c, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x18, 4), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1d2a8f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1d2ae9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3ae75f6, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffffff, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xcd, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xcd, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000044, 8) , (unique, 0x1000004c, 8) , (const, 0x2c, 4) , (unique, 0x10000034, 8), (unique, 0x1000004c, 8) COPY (const, 0x2b96b0, 8), (unique, 0x10000044, 8) COPY (const, 0x2b74e8, 8), (unique, 0x10000034, 8) COPY (const, 0x2afd50, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0xad, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xad, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0xad, 4), (stack, 0xffffffffffffffe8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1d2ae4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000064, 8), (unique, 0x10000064, 8) CALL (ram, 0x2673b0, 8) , (unique, 0x1000003c, 8) , (register, 0x20, 8), (unique, 0x1000003c, 8) COPY (const, 0x2b51e1, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x1d2a30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
