[(register, 0x1280, 32) CALLOTHER (const, 0x274, 4) , (register, 0x1280, 16), (register, 0x1280, 16) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x1200, 32) CALLOTHER (const, 0x271, 4) , (register, 0x1200, 32) , (register, 0x1200, 32)]
[ ---  CBRANCH (ram, 0x47adf0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0x21, 4), (register, 0x8, 4) INT_AND (unique, 0x10000022, 4) , (const, 0x3f, 4), (unique, 0x10000022, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x10000022, 4) , (const, 0x1f, 4)]
[(register, 0x10, 4) INT_RIGHT (register, 0x10, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x10, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) INT_AND (unique, 0x10000170, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000170, 8) CAST (register, 0x38, 8), (register, 0x8, 4) INT_AND (unique, 0x10000022, 4) , (const, 0x1f, 4)]
[(register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) INT_AND (unique, 0x10000170, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000170, 8) CAST (register, 0x38, 8), (register, 0x8, 4) INT_AND (unique, 0x10000022, 4) , (const, 0x1f, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x38, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) INT_AND (unique, 0x10000170, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000170, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47ae30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4), (unique, 0x59200, 4) INT_RIGHT (register, 0x0, 4) , (register, 0x8, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000178, 8), (unique, 0x10000178, 8) INT_AND (unique, 0x10000170, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000170, 8) CAST (register, 0x38, 8), (register, 0x8, 4) INT_AND (unique, 0x10000022, 4) , (const, 0x1f, 4)]
[ ---  CBRANCH (ram, 0x47af10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59200, 4) , (const, 0x0, 4), (unique, 0x59200, 4) INT_RIGHT (register, 0x10, 4) , (register, 0x8, 1)]
[(register, 0x38, 8) CAST (unique, 0x10000180, 8), (unique, 0x10000180, 8) PTRADD (unique, 0x100000c1, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x100000c1, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x1000010c, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000188, 8), (unique, 0x10000188, 8) PTRADD (unique, 0x10000051, 8) , (register, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000051, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x10000160, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000114, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000164, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x47af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59200, 4) , (const, 0x0, 4), (unique, 0x59200, 4) INT_RIGHT (register, 0x10, 4) , (register, 0x8, 1)]
[(register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47add0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14b, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47af15, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x8, 4), (register, 0x80, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x10, 4)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000e1, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000e1, 8) PTRSUB (unique, 0x100000d9, 8) , (const, 0x0, 8), (unique, 0x100000d9, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(register, 0x38, 8) CAST (unique, 0x10000198, 8), (unique, 0x10000198, 8) INT_AND (unique, 0x10000190, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x10000190, 8) CAST (register, 0x38, 8)]
[(unique, 0x10000104, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000015c, 4) COPY (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x47ae40, 1)]
[ ---  CBRANCH (ram, 0x47af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x38, 8) CAST (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) INT_AND (unique, 0x100001a0, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0x100001a0, 8) CAST (register, 0x38, 8)]
[(unique, 0x100000f4, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000154, 4) COPY (register, 0x10, 4), (register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x47ae40, 1)]
[(register, 0x10, 4) COPY (unique, 0x1000016c, 4), (unique, 0x1000016c, 4) MULTIEQUAL (unique, 0x10000154, 4) , (unique, 0x10000158, 4) , (unique, 0x1000015c, 4) , (unique, 0x10000160, 4) , (unique, 0x10000164, 4) , (unique, 0x10000168, 4)]
[(register, 0x30, 8) COPY (unique, 0x10000124, 8), (unique, 0x10000124, 8) MULTIEQUAL (unique, 0x100000f4, 8) , (unique, 0x100000fc, 8) , (unique, 0x10000104, 8) , (unique, 0x1000010c, 8) , (unique, 0x10000114, 8) , (unique, 0x1000011c, 8)]
[(unique, 0x1000012c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x20, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x47aeb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000134, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47aeb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000013c, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x47aeb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100000fc, 8) COPY (register, 0x30, 8)]
[(unique, 0x10000144, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x20, 8)]
[(unique, 0x10000158, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x47ae40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_OR (register, 0x8, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1260, 32), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32), (register, 0x1260, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1280, 32) , (register, 0x1220, 32), (register, 0x1240, 32) CALLOTHER (const, 0x21e, 4) , (register, 0x1200, 32) , (register, 0x1220, 32), (register, 0x1220, 32) CALLOTHER (const, 0x14a, 4) , (unique, 0x5380, 32), (unique, 0x5380, 32) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x1240, 32) MULTIEQUAL (register, 0x1240, 32) , (register, 0x1240, 32) , (register, 0x1240, 32) , (register, 0x1240, 32)]
[(register, 0x38, 8) COPY (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) MULTIEQUAL (unique, 0x1000012c, 8) , (unique, 0x10000134, 8) , (unique, 0x1000013c, 8) , (unique, 0x10000144, 8)]
[ ---  CBRANCH (ram, 0x47aed0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x1000011c, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000168, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x47aef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) CALLOTHER (const, 0x23a, 4) , (register, 0x1240, 32)]
[ ---  CBRANCH (ram, 0x47aeb4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_XOR (register, 0x80, 4) , (register, 0x8, 4), (register, 0x80, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x0, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000b1, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100000b1, 8) PTRSUB (unique, 0x100000a9, 8) , (const, 0x0, 8), (unique, 0x100000a9, 8) PTRADD (register, 0x38, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CBRANCH (ram, 0x47af40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x1b080, 4) COPY (const, 0x1f, 4)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b280, 1), (unique, 0x1b280, 1) INT_EQUAL (unique, 0x1b200, 4) , (const, 0x0, 4), (unique, 0x1b200, 4) INT_RIGHT (register, 0x10, 4) , (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[(unique, 0x1b080, 4) INT_SUB (unique, 0x1b080, 4) , (const, 0x1, 4)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000091, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x10000091, 8) PTRSUB (unique, 0x10000089, 8) , (const, 0x0, 8), (unique, 0x10000089, 8) PTRADD (register, 0x30, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x20, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1b080, 4), (unique, 0x1b080, 4) MULTIEQUAL (unique, 0x1b080, 4) , (unique, 0x1b080, 4)]
[ ---  CALLOTHER (const, 0x203, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
