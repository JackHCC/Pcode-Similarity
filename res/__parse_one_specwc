[(unique, 0x3100, 8) CAST (unique, 0x10000790, 8), (unique, 0x10000790, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x20, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x37, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1f, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1c, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x37, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1f, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1c, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x37, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1f, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007a0, 8) , (register, 0x0, 2), (unique, 0x100007a0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8), (register, 0x0, 2) INT_OR (unique, 0x1000003b, 2) , (const, 0x400, 2), (unique, 0x1000003b, 2) INT_OR (unique, 0x1000003d, 2) , (unique, 0x10000041, 2), (unique, 0x10000041, 2) INT_LEFT (unique, 0x1000003f, 2) , (const, 0x8, 4), (unique, 0x1000003f, 2) INT_ZEXT (register, 0x1, 1), (unique, 0x1000003d, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x7, 2), (register, 0x1, 1) SUBPIECE (unique, 0x10000600, 8) , (const, 0x0, 4), (unique, 0x10000600, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x8, 4), (register, 0x0, 8) INT_ZEXT (register, 0x0, 2), (register, 0x0, 2) INT_AND (unique, 0xbc00, 2) , (const, 0xe207, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000798, 8), (unique, 0x10000798, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007a8, 8), (unique, 0x100007a8, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477420, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007a8, 8), (unique, 0x100007a8, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8)]
[(unique, 0x100006a8, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4778e2, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007b0, 8), (unique, 0x100007b0, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4776c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4776c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100007b8, 8), (unique, 0x100007b8, 8) INT_ADD (register, 0x38, 8) , (const, 0xc, 8)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x80, 8) COPY (unique, 0x100006b0, 8), (unique, 0x100006b0, 8) MULTIEQUAL (unique, 0x100006a0, 8) , (unique, 0x100006a8, 8)]
[ ---  CBRANCH (ram, 0x4778da, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x477448, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0xccccccd, 4)]
[ ---  CBRANCH (ram, 0x477482, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x10000286, 4) , (unique, 0x100007c0, 4), (unique, 0x100007c0, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (const, 0x7fffffff, 4) , (register, 0x88, 4), (unique, 0x10000286, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4776d8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x9, 4) , (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007c4, 8), (unique, 0x100007c4, 8) INT_ADD (register, 0x80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4776c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100007cc, 8), (unique, 0x100007cc, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x477167, 1)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0x10000698, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x47745d, 1)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x10000286, 4) , (register, 0x88, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100006a0, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000698, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4776b8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007d4, 8), (unique, 0x100007d4, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000698, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4776c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[ ---  CBRANCH (ram, 0x477912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100007dc, 8), (unique, 0x100007dc, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4778fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 4) INT_SUB (unique, 0x1000024a, 4) , (const, 0x1, 4), (unique, 0x1000024a, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x477907, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x734, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x732, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x734, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x732, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x734, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x732, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x477167, 1)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x10000296, 1) COPY (const, 0x0, 1)]
[(unique, 0x10000660, 8) COPY (stack, 0xffffffffffffffe0, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x10000294, 1) MULTIEQUAL (unique, 0x10000296, 1) , (unique, 0x10000295, 1)]
[ ---  BRANCHIND (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000660, 8) , (register, 0x10, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x8d5, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x8d5, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x8d5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100007ec, 8), (unique, 0x100007ec, 8) INT_ADD (unique, 0x100007e4, 8) , (const, 0xd, 8), (unique, 0x100007e4, 8) CAST (register, 0x10, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x8fb, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x8fb, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x8fb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477298, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x902, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x902, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x902, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007fc, 8) , (unique, 0xbb00, 1), (unique, 0x100007fc, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100007f4, 8), (unique, 0x100007f4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477298, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x912, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x912, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x912, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000080c, 8) , (unique, 0xbb00, 1), (unique, 0x1000080c, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000804, 8), (unique, 0x10000804, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477298, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x922, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x922, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x922, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000081c, 8) , (unique, 0xbb00, 1), (unique, 0x1000081c, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000814, 8), (unique, 0x10000814, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477298, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x932, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x932, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x932, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000082c, 8) , (unique, 0xbb00, 1), (unique, 0x1000082c, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000824, 8), (unique, 0x10000824, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477298, 1)]
[(unique, 0x10000780, 8) COPY (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x47719d, 1) , (unique, 0x100005e9, 1), (unique, 0x100005e9, 1) BOOL_NEGATE (unique, 0x10000294, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x942, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x942, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x942, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000083c, 8) , (unique, 0xbb00, 1), (unique, 0x1000083c, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000834, 8), (unique, 0x10000834, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477298, 1)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000295, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x477178, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x10000788, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0x10000780, 8) , (unique, 0x10000788, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4771aa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000844, 8), (unique, 0x10000844, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x99, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x99, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x99, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x20, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x9f, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x9c, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x9f, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x9c, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x9f, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x9c, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4773f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2a, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffe0, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477720, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477978, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 4) , (const, 0xa, 4), (register, 0x80, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[(unique, 0x10000648, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477776, 1)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(unique, 0x10000638, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000658, 8), (unique, 0x10000658, 8) MULTIEQUAL (unique, 0x10000648, 8) , (unique, 0x10000650, 8)]
[ ---  CBRANCH (ram, 0x477762, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x477750, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0xccccccd, 4)]
[ ---  CBRANCH (ram, 0x477781, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x1000028a, 4) , (unique, 0x1000084c, 4), (unique, 0x1000084c, 4) CAST (register, 0x38, 4), (register, 0x38, 4) INT_SUB (const, 0x7fffffff, 4) , (register, 0x80, 4), (unique, 0x1000028a, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0x10000640, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x477762, 1)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000028a, 4) , (register, 0x80, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000650, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000638, 8) , (unique, 0x10000640, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4777b5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x80, 4) , (const, 0xa, 4), (register, 0x80, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000638, 8) , (unique, 0x10000640, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 4) INT_SUB (unique, 0x100001fc, 4) , (const, 0x1, 4), (unique, 0x100001fc, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4777dc, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x634, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x62f, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x634, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x62f, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x634, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x62f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4773ff, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000850, 4), (unique, 0x10000850, 4) CAST (register, 0x0, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000760, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x4771d7, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x571, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x571, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x571, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0x10, 8) COPY (const, 0x2, 8)]
[(register, 0xa0, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000758, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4771d7, 1)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000738, 8) COPY (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x477310, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47738f, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x30, 4) , (const, 0xa, 4), (register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x477340, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000854, 4), (unique, 0x10000854, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x477330, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xccccccc, 4) , (unique, 0x10000858, 4), (unique, 0x10000858, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x47735a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x1000085c, 4) , (unique, 0x10000860, 4), (unique, 0x10000860, 4) CAST (unique, 0x10000276, 4), (unique, 0x1000085c, 4) CAST (register, 0x38, 4), (register, 0x38, 4) INT_SUB (const, 0x7fffffff, 4) , (register, 0x30, 4), (unique, 0x10000276, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x0, 4) INT_ADD (unique, 0x10000276, 4) , (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477381, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x30, 4) , (const, 0xa, 4), (register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4777a0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000750, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x4771d7, 1)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x47734f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4779ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000748, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x4771d7, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x4d6, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x4d6, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x4d6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000740, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x4771d7, 1)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x28, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xd1, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xcf, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xd1, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xcf, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xd1, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xcf, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0xffffffff, 4)]
[(unique, 0x100006b8, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x100006f0, 8) COPY (stack, 0xffffffffffffffe0, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0x10000738, 8) , (unique, 0x10000740, 8) , (unique, 0x10000748, 8) , (unique, 0x10000750, 8) , (unique, 0x10000758, 8) , (unique, 0x10000760, 8)]
[ ---  CBRANCH (ram, 0x4773c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x2e, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffe0, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0x10000738, 8) , (unique, 0x10000740, 8) , (unique, 0x10000748, 8) , (unique, 0x10000750, 8) , (unique, 0x10000758, 8) , (unique, 0x10000760, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4776f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2a, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47785a, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477999, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0x0, 4)]
[(unique, 0x10000680, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4778b3, 1)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(unique, 0x10000670, 8) COPY (register, 0x38, 8), (register, 0x38, 8) COPY (unique, 0x10000690, 8), (unique, 0x10000690, 8) MULTIEQUAL (unique, 0x10000680, 8) , (unique, 0x10000688, 8)]
[ ---  CBRANCH (ram, 0x47789b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x477888, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0xccccccd, 4)]
[ ---  CBRANCH (ram, 0x4778be, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x1000028e, 4) , (unique, 0x10000864, 4), (unique, 0x10000864, 4) CAST (register, 0x80, 4), (register, 0x80, 4) INT_SUB (const, 0x7fffffff, 4) , (register, 0x88, 4), (unique, 0x1000028e, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0x10000678, 8) COPY (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x47789b, 1)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_ADD (unique, 0x1000028e, 4) , (register, 0x88, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000688, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000670, 8) , (unique, 0x10000678, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x477932, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000670, 8) , (unique, 0x10000678, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x24, 4)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 4) INT_SUB (unique, 0x1000025e, 4) , (const, 0x1, 4), (unique, 0x1000025e, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x477959, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x3f7, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x3f2, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x3f7, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x3f2, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x3f7, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x3f2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000720, 8) COPY (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4776ff, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000868, 4), (unique, 0x10000868, 4) CAST (register, 0x0, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x335, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x335, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x335, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(unique, 0x100006e0, 8) COPY (register, 0x10, 8)]
[(unique, 0x10000718, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4771ed, 1)]
[ ---  CBRANCH (ram, 0x477550, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x47798f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x315, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x315, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x315, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4)]
[(unique, 0x100006d8, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000710, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x4771ed, 1)]
[(unique, 0x10000620, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x47759c, 1)]
[(unique, 0x3100, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(unique, 0x10000610, 8) COPY (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x10000630, 8), (unique, 0x10000630, 8) MULTIEQUAL (unique, 0x10000620, 8) , (unique, 0x10000628, 8)]
[ ---  CBRANCH (ram, 0x477587, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000086c, 4), (unique, 0x1000086c, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x477578, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000870, 4) , (const, 0xccccccd, 4), (unique, 0x10000870, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4775a7, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_EQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000874, 4) , (const, 0x0, 4), (unique, 0x10000874, 4) CAST (unique, 0x28600, 4), (unique, 0x28600, 4) INT_ADD (register, 0x30, 4) , (unique, 0x10000168, 4), (unique, 0x10000168, 4) INT_MULT (register, 0x0, 4) , (const, 0xfffffff6, 4), (register, 0x20b, 1) INT_SBORROW (register, 0x30, 4) , (unique, 0x1000027f, 4), (register, 0x30, 4) INT_SUB (const, 0x7fffffff, 4) , (unique, 0x3100, 4), (unique, 0x1000027f, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x10000728, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x477928, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x9, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x10000618, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x477587, 1)]
[(register, 0x0, 4) INT_ADD (unique, 0x1000027f, 4) , (unique, 0x3100, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000628, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000610, 8) , (unique, 0x10000618, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x477845, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xa, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x30, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000610, 8) , (unique, 0x10000618, 8) , (register, 0x8, 8)]
[(unique, 0x100006c8, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000700, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4771ed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x2df, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x2df, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x2df, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4)]
[(unique, 0x100006d0, 8) COPY (register, 0xa0, 8)]
[(unique, 0x10000708, 8) COPY (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x4771ed, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x262, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x262, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x262, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[(unique, 0x100006c0, 8) COPY (register, 0xa0, 8)]
[(unique, 0x100006f8, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x4771ed, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100006b8, 8) , (unique, 0x100006c0, 8) , (unique, 0x100006c8, 8) , (unique, 0x100006d0, 8) , (unique, 0x100006d8, 8) , (unique, 0x100006e0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(stack, 0xffffffffffffffe0, 8) COPY (unique, 0x10000730, 8), (unique, 0x10000730, 8) MULTIEQUAL (unique, 0x100006f0, 8) , (unique, 0x100006f8, 8) , (unique, 0x10000700, 8) , (unique, 0x10000708, 8) , (unique, 0x10000710, 8) , (unique, 0x10000718, 8) , (unique, 0x10000720, 8) , (unique, 0x10000728, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xe5, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xe5, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xe5, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfdf8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477520, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000608, 8) , (const, 0x0, 8), (unique, 0x10000608, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[ ---  CBRANCH (ram, 0x477206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000878, 8), (unique, 0x10000878, 8) INT_ADD (unique, 0x10000608, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x221, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x221, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x221, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x221, 4)]
[ ---  CBRANCH (ram, 0x477825, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x470a50, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffe0, 8)]
[ ---  BRANCH (ram, 0x477240, 1)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x872, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x872, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x872, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000888, 8) , (unique, 0xbb00, 1), (unique, 0x10000888, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000880, 8), (unique, 0x10000880, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x6c, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477835, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x68, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x8bf, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x8bf, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x8bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000898, 8), (unique, 0x10000898, 8) INT_ADD (unique, 0x10000890, 8) , (const, 0xd, 8), (unique, 0x10000890, 8) CAST (register, 0x10, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477240, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x8aa, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x8aa, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x8aa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008a8, 8) , (unique, 0xbb00, 1), (unique, 0x100008a8, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008a0, 8), (unique, 0x100008a0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x846, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x846, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x846, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008b8, 8) , (unique, 0xbb00, 1), (unique, 0x100008b8, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008b0, 8), (unique, 0x100008b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477240, 1)]
[(unique, 0x10000668, 8) COPY (unique, 0x3100, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x85d, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x85d, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x85d, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008c8, 8) , (unique, 0xbb00, 1), (unique, 0x100008c8, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008c0, 8), (unique, 0x100008c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000668, 8) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000668, 8) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x477240, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x131, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x12e, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x131, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x12e, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x131, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x12e, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x10000768, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x477264, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8948, 8) , (const, 0x0, 8), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4775c3, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x100008d0, 4) , (const, 0x100, 4), (unique, 0x100008d0, 4) CAST (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x477264, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100008d8, 8), (unique, 0x100008d8, 8) INT_ADD (ram, 0x4c8968, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100008d4, 4), (unique, 0x100008d4, 4) CAST (register, 0x0, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0x10000768, 8) , (const, 0x1cc, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1dd, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1dd, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1cc, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1dd, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1cc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e0, 8) , (register, 0x10, 8), (unique, 0x100008e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x1, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477264, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x1, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4774ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4774ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0x10000768, 8) , (unique, 0x10000768, 8) , (unique, 0x10000768, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x144, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x144, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x144, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e8, 8) , (const, 0x1, 8), (unique, 0x100008e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7e0, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7e0, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7e0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477658, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7f1, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7f1, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7f1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x5, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477658, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7f5, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7f5, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7f5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x800, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477658, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x836, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x836, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x836, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477658, 1)]
[ ---  CBRANCH (ram, 0x477803, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000027e, 1) , (const, 0x0, 1), (unique, 0x1000027e, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100008f0, 8), (unique, 0x100008f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x477814, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000285, 1) , (const, 0x0, 1), (unique, 0x10000285, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7dc, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7dc, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7dc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (register, 0x206, 1), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000900, 8), (unique, 0x10000900, 8) INT_ADD (unique, 0x100008f8, 8) , (const, 0xd, 8), (unique, 0x100008f8, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x4774e7, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7c1, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7c1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x400, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4774e7, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7a3, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7a3, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7a3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x200, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4774e7, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x83a, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x83a, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x83a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x83f, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x83f, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x83f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x477658, 1)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4774f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x166, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x166, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x166, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000908, 8) , (const, 0x0, 8), (unique, 0x10000908, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x833, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x833, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x833, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x107, 4), (register, 0x10, 4) INT_AND (unique, 0x1000012d, 4) , (const, 0xffffff00, 4), (unique, 0x1000012d, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000910, 8), (unique, 0x10000910, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4774ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0x10, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1fe, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1fe, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1fe, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x4774ad, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x477666, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000918, 8) , (register, 0x38, 8), (unique, 0x10000918, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0x38, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000920, 8) , (register, 0x38, 8), (unique, 0x10000920, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x38, 8) PTRADD (stack, 0xffffffffffffffe0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) COPY (ram, 0x4c8948, 8), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x184, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x181, 4)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x184, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x181, 4)]
[(ram, 0x4c8968, 8) COPY (ram, 0x4c8968, 8), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x184, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x181, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000928, 8) , (stack, 0xffffffffffffffe0, 8), (unique, 0x10000928, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x19d, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000938, 8) , (register, 0x0, 8), (unique, 0x10000938, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x47b210, 8) , (unique, 0x10000930, 8) , (const, 0x25, 4), (unique, 0x10000930, 8) CAST (stack, 0xffffffffffffffe0, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c8948, 8) COPY (ram, 0x4c8948, 8), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1a0, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x19d, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x199, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1a0, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x19d, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x199, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) COPY (ram, 0x4c8968, 8), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1a0, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x19d, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x199, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
