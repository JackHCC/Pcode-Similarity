[ ---  CBRANCH (ram, 0x1a0a40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000b1, 8), (unique, 0x100000b1, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8)]
[(unique, 0x100000a9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000b1, 8), (unique, 0x100000b1, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1a0ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100000b1, 8), (unique, 0x100000b1, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3100, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000096, 8) , (unique, 0x3100, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x100000a1, 8) , (unique, 0x100000a9, 8)]
[ ---  CBRANCH (ram, 0x1a0a60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (register, 0x30, 4), (register, 0x80, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x10000085, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbb00, 1)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1a0ac0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1a0ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1a0a67, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 1)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000096, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x10000085, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100000a1, 8) COPY (unique, 0x1000008e, 8), (unique, 0x1000008e, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1a0a98, 1) , (unique, 0x1000008d, 1), (unique, 0x1000008d, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1a0aad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000096, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0x10000096, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xc, 8)]
[ ---  BRANCH (ram, 0x1a0a35, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
