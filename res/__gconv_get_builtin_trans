[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000486, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000546, 8) COPY (unique, 0x10000556, 8), (unique, 0x10000556, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ee77, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000546, 8) , (unique, 0x1000054e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000486, 8) , (unique, 0x1000048e, 8)]
[ ---  CBRANCH (ram, 0x45e0eb, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000048e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000054e, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e0e9, 1) , (unique, 0x1000055e, 1), (unique, 0x1000055e, 1) CAST (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e270, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (unique, 0x10000561, 1), (unique, 0x10000561, 1) CAST (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000022, 1) , (unique, 0x10000023, 1), (unique, 0x10000023, 1) BOOL_NEGATE (unique, 0x10000560, 1), (unique, 0x10000560, 1) CAST (register, 0x206, 1), (unique, 0x10000022, 1) BOOL_NEGATE (unique, 0x1000055f, 1), (unique, 0x1000055f, 1) CAST (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000476, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000536, 8) COPY (unique, 0x10000562, 8), (unique, 0x10000562, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ee87, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000536, 8) , (unique, 0x1000053e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000476, 8) , (unique, 0x1000047e, 8)]
[ ---  CBRANCH (ram, 0x45e10a, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000047e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000053e, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e108, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e2d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x1000003f, 1) , (unique, 0x10000040, 1), (unique, 0x10000040, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x1000003f, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x12, 8)]
[(unique, 0x10000466, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000526, 8) COPY (unique, 0x1000056a, 8), (unique, 0x1000056a, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49eea1, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000526, 8) , (unique, 0x1000052e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000466, 8) , (unique, 0x1000046e, 8)]
[ ---  CBRANCH (ram, 0x45e129, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000046e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000052e, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e127, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e2da, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x1000005c, 1) , (unique, 0x1000005d, 1), (unique, 0x1000005d, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x1000005c, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x12, 8)]
[(unique, 0x10000456, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000516, 8) COPY (unique, 0x10000572, 8), (unique, 0x10000572, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49eeb3, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000516, 8) , (unique, 0x1000051e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000456, 8) , (unique, 0x1000045e, 8)]
[ ---  CBRANCH (ram, 0x45e148, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000045e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000051e, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e146, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e2e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000079, 1) , (unique, 0x1000007a, 1), (unique, 0x1000007a, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x10000079, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000446, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000506, 8) COPY (unique, 0x1000057a, 8), (unique, 0x1000057a, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49eed5, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000506, 8) , (unique, 0x1000050e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000446, 8) , (unique, 0x1000044e, 8)]
[ ---  CBRANCH (ram, 0x45e167, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000044e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000050e, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e165, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e2e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000096, 1) , (unique, 0x10000097, 1), (unique, 0x10000097, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x10000096, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000436, 8) COPY (register, 0x38, 8)]
[(unique, 0x100004f6, 8) COPY (unique, 0x10000582, 8), (unique, 0x10000582, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49eee5, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100004f6, 8) , (unique, 0x100004fe, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000436, 8) , (unique, 0x1000043e, 8)]
[ ---  CBRANCH (ram, 0x45e186, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000043e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100004fe, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e184, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e2ef, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x100000b3, 1) , (unique, 0x100000b4, 1), (unique, 0x100000b4, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x100000b3, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x5, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000426, 8) COPY (register, 0x38, 8)]
[(unique, 0x100004e6, 8) COPY (unique, 0x1000058a, 8), (unique, 0x1000058a, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ef05, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100004e6, 8) , (unique, 0x100004ee, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000426, 8) , (unique, 0x1000042e, 8)]
[ ---  CBRANCH (ram, 0x45e1a5, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000042e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100004ee, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e1a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e2f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x100000d0, 1) , (unique, 0x100000d1, 1), (unique, 0x100000d1, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x100000d0, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x6, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(unique, 0x10000416, 8) COPY (register, 0x38, 8)]
[(unique, 0x100004d6, 8) COPY (unique, 0x10000592, 8), (unique, 0x10000592, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ef15, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100004d6, 8) , (unique, 0x100004de, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000416, 8) , (unique, 0x1000041e, 8)]
[ ---  CBRANCH (ram, 0x45e1c4, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000041e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100004de, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e1c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e303, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x100000ed, 1) , (unique, 0x100000ee, 1), (unique, 0x100000ee, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x100000ed, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x7, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x11, 8)]
[(unique, 0x10000406, 8) COPY (register, 0x38, 8)]
[(unique, 0x100004c6, 8) COPY (unique, 0x1000059a, 8), (unique, 0x1000059a, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ef36, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100004c6, 8) , (unique, 0x100004ce, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000406, 8) , (unique, 0x1000040e, 8)]
[ ---  CBRANCH (ram, 0x45e1e3, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000040e, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100004ce, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e1e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e30d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x1000010a, 1) , (unique, 0x1000010b, 1), (unique, 0x1000010b, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x1000010a, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x11, 8)]
[(unique, 0x100003f6, 8) COPY (register, 0x38, 8)]
[(unique, 0x100004b6, 8) COPY (unique, 0x100005a2, 8), (unique, 0x100005a2, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ef47, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100004b6, 8) , (unique, 0x100004be, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003f6, 8) , (unique, 0x100003fe, 8)]
[ ---  CBRANCH (ram, 0x45e202, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100003fe, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100004be, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e317, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000127, 1) , (unique, 0x10000128, 1), (unique, 0x10000128, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x10000127, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0x9, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x17, 8)]
[(unique, 0x100003e6, 8) COPY (register, 0x38, 8)]
[(unique, 0x100004a6, 8) COPY (unique, 0x100005aa, 8), (unique, 0x100005aa, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ef65, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100004a6, 8) , (unique, 0x100004ae, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003e6, 8) , (unique, 0x100003ee, 8)]
[ ---  CBRANCH (ram, 0x45e221, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100003ee, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100004ae, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e21f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x200, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x45e321, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000144, 1) , (unique, 0x10000145, 1), (unique, 0x10000145, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x10000144, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0xa, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[(register, 0x8, 8) COPY (const, 0x17, 8)]
[(unique, 0x100003d6, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000496, 8) COPY (unique, 0x100005b2, 8), (unique, 0x100005b2, 8) CAST (register, 0x38, 8), (register, 0x38, 8) COPY (const, 0x49ef7c, 8)]
[(register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000496, 8) , (unique, 0x1000049e, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100003d6, 8) , (unique, 0x100003de, 8)]
[ ---  CBRANCH (ram, 0x45e240, 1) , (unique, 0xd600, 1), (unique, 0xd600, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x200, 1) INT_LESS (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100003de, 8) COPY (unique, 0xa300, 8), (unique, 0xa300, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000049e, 8) COPY (unique, 0xaf00, 8), (unique, 0xaf00, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x45e23e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xa500, 1) , (unique, 0xb100, 1), (unique, 0xb100, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (unique, 0xa500, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45e32b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xc900, 1) , (register, 0x200, 1), (unique, 0xc900, 1) BOOL_AND (unique, 0x10000161, 1) , (unique, 0x10000162, 1), (unique, 0x10000162, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x10000161, 1) BOOL_NEGATE (register, 0x200, 1), (register, 0x200, 1) MULTIEQUAL (register, 0x200, 1) , (register, 0x200, 1), (register, 0x206, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x0, 8) COPY (const, 0xb, 8)]
[ ---  BRANCH (ram, 0x45e272, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x100005da, 8), (unique, 0x100005da, 8) PTRADD (unique, 0x100002c6, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002c6, 8) PTRSUB (unique, 0x100002be, 8) , (const, 0x0, 8), (unique, 0x100002be, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e2, 8) , (const, 0x0, 4), (unique, 0x100005e2, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002f6, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100002f6, 8) PTRSUB (unique, 0x100002ee, 8) , (const, 0x0, 8), (unique, 0x100002ee, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005ea, 8) , (unique, 0x100001bd, 4), (unique, 0x100005ea, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000316, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000316, 8) PTRSUB (unique, 0x1000030e, 8) , (const, 0x0, 8), (unique, 0x1000030e, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x100001bd, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005ba, 8), (unique, 0x100005ba, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000216, 8) , (unique, 0x10000296, 8) , (const, 0x1, 8), (unique, 0x10000296, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x10000216, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005f2, 8) , (unique, 0x100001c1, 4), (unique, 0x100005f2, 8) CAST (unique, 0x100001e5, 8), (unique, 0x100001e5, 8) PTRADD (unique, 0x10000336, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0x10000336, 8) PTRSUB (unique, 0x1000032e, 8) , (const, 0x0, 8), (unique, 0x1000032e, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x10, 8), (unique, 0x100001c1, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005c2, 8), (unique, 0x100005c2, 8) CAST (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) PTRADD (unique, 0x10000226, 8) , (unique, 0x1000029e, 8) , (const, 0x1, 8), (unique, 0x1000029e, 8) INT_ADD (register, 0x0, 8) , (const, 0xc, 8), (unique, 0x10000226, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005fa, 8) , (unique, 0x100001cd, 4), (unique, 0x100005fa, 8) CAST (unique, 0x10000346, 8), (unique, 0x10000346, 8) PTRSUB (unique, 0x100001ed, 8) , (const, 0x0, 8), (unique, 0x100001ed, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x100001cd, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005ca, 8), (unique, 0x100005ca, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) PTRADD (unique, 0x10000236, 8) , (unique, 0x100002a6, 8) , (const, 0x1, 8), (unique, 0x100002a6, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (unique, 0x10000236, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000602, 8) , (unique, 0x100001d9, 4), (unique, 0x10000602, 8) CAST (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) PTRADD (unique, 0x10000366, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x10000366, 8) PTRSUB (unique, 0x1000035e, 8) , (const, 0x0, 8), (unique, 0x1000035e, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x10, 8), (unique, 0x100001d9, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005d2, 8), (unique, 0x100005d2, 8) CAST (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) PTRADD (unique, 0x10000246, 8) , (unique, 0x100002ae, 8) , (const, 0x1, 8), (unique, 0x100002ae, 8) INT_ADD (register, 0x0, 8) , (const, 0x14, 8), (unique, 0x10000246, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000060a, 8) , (register, 0x1200, 8), (unique, 0x1000060a, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000396, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x10000396, 8) PTRSUB (unique, 0x1000038e, 8) , (const, 0x0, 8), (unique, 0x1000038e, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x10, 8), (register, 0x1200, 8) INT_ADD (unique, 0x100003be, 8) , (register, 0x30, 4), (unique, 0x100003be, 8) INT_LEFT (unique, 0x100003b6, 8) , (const, 0x20, 8), (unique, 0x100003b6, 8) INT_SEXT (register, 0x8, 4), (register, 0x8, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000266, 8) , (unique, 0x100002de, 8) , (const, 0x1, 8), (unique, 0x100002de, 8) INT_ADD (register, 0x0, 8) , (const, 0x19, 8), (unique, 0x10000266, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x30, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000256, 8) , (unique, 0x100002d6, 8) , (const, 0x1, 8), (unique, 0x100002d6, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8), (unique, 0x10000256, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000612, 8) , (register, 0x1220, 8), (unique, 0x10000612, 8) CAST (unique, 0x100003a6, 8), (unique, 0x100003a6, 8) PTRSUB (unique, 0x100001b5, 8) , (const, 0x0, 8), (unique, 0x100001b5, 8) PTRADD (register, 0x30, 8) , (const, 0x5, 8) , (const, 0x10, 8), (register, 0x1220, 8) INT_ADD (unique, 0x100003ce, 8) , (register, 0x30, 4), (unique, 0x100003ce, 8) INT_LEFT (unique, 0x100003c6, 8) , (const, 0x20, 8), (unique, 0x100003c6, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000286, 8) , (unique, 0x1000037e, 8) , (const, 0x1, 8), (unique, 0x1000037e, 8) INT_ADD (register, 0x0, 8) , (const, 0x1b, 8), (unique, 0x10000286, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x30, 4) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000276, 8) , (unique, 0x10000376, 8) , (const, 0x1, 8), (unique, 0x10000376, 8) INT_ADD (register, 0x0, 8) , (const, 0x1a, 8), (unique, 0x10000276, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c4ac0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x20, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x10000206, 8) , (unique, 0x100001fe, 8) , (const, 0x46, 4) , (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) COPY (const, 0x49f440, 8), (unique, 0x10000206, 8) COPY (const, 0x49f410, 8), (unique, 0x100001fe, 8) COPY (const, 0x49f400, 8)]
[ ---  RETURN (const, 0x1, 4)]
