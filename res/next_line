[ ---  CBRANCH (ram, 0x458390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4010b0, 8) , (unique, 0xbd80, 8) , (const, 0xa, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x458364, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x458364, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8)]
[ ---  CALL (ram, 0x401040, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x458480, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x456020, 8) , (register, 0x38, 4) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x458360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4010b0, 8) , (unique, 0xbd80, 8) , (const, 0xa, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SUB (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0x1000013b, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x100000df, 8) , (const, 0x3, 8), (unique, 0x100000df, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_SUB (register, 0x80, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x45841c, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (unique, 0x100000df, 8), (unique, 0x100000df, 8) INT_MULT (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_SUB (register, 0x80, 8) , (register, 0x30, 8)]
[(unique, 0x10000143, 8) COPY (unique, 0x100000df, 8)]
[(register, 0x8, 8) INT_SUB (register, 0x80, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_ADD (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SRIGHT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000013b, 8) , (unique, 0x10000143, 8)]
[ ---  BRANCH (ram, 0x458470, 1)]
[ ---  CBRANCH (ram, 0x458430, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x458364, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x458480, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x456020, 8) , (register, 0x38, 4) , (register, 0xa0, 8) , (register, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0xa, 1), (unique, 0xbd80, 8) CAST (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x18, 8), (register, 0x18, 8) INT_ADD (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x458488, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4010b0, 8) , (unique, 0xbd80, 8) , (const, 0xa, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x458360, 1)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x458491, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x403170, 8) , (unique, 0x1000012d, 8) , (unique, 0x1000011d, 8) , (const, 0x77, 4) , (unique, 0x10000125, 8), (unique, 0x1000012d, 8) COPY (const, 0x49e26a, 8), (unique, 0x10000125, 8) COPY (const, 0x49e260, 8), (unique, 0x1000011d, 8) COPY (const, 0x49e210, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x458480, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0xb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
