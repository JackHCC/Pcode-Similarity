[(register, 0x0, 8) INT_2COMP (unique, 0x10000172, 8), (unique, 0x10000172, 8) INT_SRIGHT (unique, 0x100001e2, 8) , (const, 0x1f, 4), (unique, 0x100001e2, 8) INT_SEXT (unique, 0x10000258, 4), (unique, 0x10000258, 4) CAST (register, 0x120c, 4)]
[(register, 0x98, 8) INT_AND (unique, 0x100001b2, 8) , (const, 0xffffffffffff, 8), (unique, 0x100001b2, 8) INT_ADD (unique, 0x100001fc, 8) , (register, 0x1208, 4), (unique, 0x100001fc, 8) INT_LEFT (unique, 0x100001f4, 8) , (const, 0x20, 8), (unique, 0x100001f4, 8) INT_SEXT (unique, 0x10000254, 4), (unique, 0x10000254, 4) CAST (register, 0x120c, 4)]
[(register, 0x8, 8) INT_AND (unique, 0x100001c2, 8) , (const, 0xffffffffffff, 8), (unique, 0x100001c2, 8) INT_ADD (unique, 0x1000020c, 8) , (register, 0x1228, 4), (unique, 0x1000020c, 8) INT_LEFT (unique, 0x10000204, 8) , (const, 0x20, 8), (unique, 0x10000204, 8) INT_SEXT (unique, 0x1000025c, 4), (unique, 0x1000025c, 4) CAST (register, 0x122c, 4)]
[(register, 0x0, 8) INT_2COMP (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) INT_SRIGHT (unique, 0x100001ea, 8) , (const, 0x1f, 4), (unique, 0x100001ea, 8) INT_SEXT (unique, 0x10000260, 4), (unique, 0x10000260, 4) CAST (register, 0x122c, 4)]
[(register, 0x38, 4) INT_AND (register, 0x38, 4) , (const, 0x7fff, 4), (register, 0x38, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x4925a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x7fff, 4), (register, 0x80, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x492608, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4926d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x492700, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x4926d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[(register, 0x90, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x4925ec, 1)]
[(register, 0x90, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x492620, 1)]
[(register, 0x90, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x4925d2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[(unique, 0x10000158, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x4926b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x492620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[(register, 0x90, 1) MULTIEQUAL (unique, 0x10000158, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x4926e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x4925ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x4925ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4925e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (unique, 0x10000158, 1)]
[ ---  CBRANCH (ram, 0x4925f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x492648, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[(register, 0x90, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x49255a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(unique, 0x1000015c, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[(register, 0x90, 1) COPY (const, 0x2, 1)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x492680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x492620, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[(register, 0x90, 1) INT_OR (register, 0x90, 1) , (const, 0x1, 1), (register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (unique, 0x10000158, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[(register, 0x0, 8) COPY (const, 0x2, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (unique, 0x10000158, 1)]
[(register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x492694, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x0, 4)]
[(unique, 0x100001d8, 1) MULTIEQUAL (register, 0x206, 1) , (register, 0x206, 1)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (unique, 0x1000015c, 1)]
[(register, 0x28, 8) INT_OR (register, 0x98, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x492694, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8), (register, 0xb0, 8) INT_OR (register, 0x8, 8) , (register, 0x1220, 8)]
[(unique, 0x10000214, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4925f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x4925ec, 1) , (unique, 0x100001d4, 1), (unique, 0x100001d4, 1) MULTIEQUAL (register, 0x206, 1) , (unique, 0x100001d8, 1) , (register, 0x206, 1)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  CBRANCH (ram, 0x492710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x492728, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_LESS (register, 0x38, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x49269c, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESS (register, 0x80, 4) , (register, 0x38, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4925f5, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x8, 8) , (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x492747, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x1220, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x4925f5, 1) , (register, 0x206, 1)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[(unique, 0x1000021c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (unique, 0x100000a5, 4) , (const, 0x2, 4), (unique, 0x100000a5, 4) INT_2COMP (unique, 0x100000a9, 4), (unique, 0x100000a9, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x492590, 1)]
[ ---  CBRANCH (ram, 0x492755, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x98, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x492768, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x1200, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x492768, 1) , (register, 0x206, 1)]
[(unique, 0x10000244, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x492763, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x1000024c, 8) COPY (register, 0x0, 8)]
[(unique, 0x1000023c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x492590, 1)]
[ ---  CBRANCH (ram, 0x4926a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000234, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x492590, 1)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[(unique, 0x10000224, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x492590, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[(unique, 0x1000022c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x492590, 1)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000214, 8) , (unique, 0x1000021c, 8) , (unique, 0x10000224, 8) , (unique, 0x1000022c, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8) , (unique, 0x10000244, 8) , (unique, 0x1000024c, 8)]
[ ---  CBRANCH (ram, 0x492629, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 1) , (const, 0x0, 1), (register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[ ---  CALL (ram, 0x492770, 8) , (register, 0x90, 1), (register, 0x90, 1) MULTIEQUAL (register, 0x90, 1) , (register, 0x90, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
