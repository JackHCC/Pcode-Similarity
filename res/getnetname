[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe78, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x28, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000033b, 8), (unique, 0x1000033b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x258d30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1e5910, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 1)]
[ ---  CALL (ram, 0x216e30, 8) , (unique, 0x10000343, 8) , (const, 0x40, 8), (unique, 0x10000343, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x147, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x14c, 4), (stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x147, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x14c, 4), (stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x147, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14c, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x147, 4)]
[ ---  CBRANCH (ram, 0x258ea0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x1000034b, 8) , (const, 0x2e, 4), (unique, 0x1000034b, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x353, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x353, 4), (stack, 0xfffffffffffffec8, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x353, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x353, 4)]
[ ---  CALL (ram, 0x216f20, 8) , (unique, 0x10000353, 8) , (const, 0x40, 8), (unique, 0x10000353, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[ ---  BRANCH (ram, 0x258d7b, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x160, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x160, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x160, 4)]
[ ---  CALL (ram, 0x1212a0, 8) , (unique, 0x1000035b, 8) , (unique, 0x3100, 8) , (const, 0x40, 8), (unique, 0x1000035b, 8) CAST (unique, 0x3800, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(stack, 0xffffffffffffff08, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff08, 1) MULTIEQUAL (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1)]
[(stack, 0xfffffffffffffec8, 1) MULTIEQUAL (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000283, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(unique, 0x1000028b, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) COPY (unique, 0x10000293, 8), (unique, 0x10000293, 8) MULTIEQUAL (unique, 0x10000283, 8) , (unique, 0x1000028b, 8)]
[ ---  CBRANCH (ram, 0x258d7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x80808080, 4), (register, 0x10, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000293, 8), (unique, 0x10000293, 8) MULTIEQUAL (unique, 0x10000283, 8) , (unique, 0x1000028b, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x10, 4)]
[(unique, 0x10000323, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x258da4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x10, 4) , (const, 0x8080, 4)]
[(unique, 0x10000327, 4) COPY (register, 0x8, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000323, 4) , (unique, 0x10000327, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x1000036b, 8), (unique, 0x1000036b, 8) INT_ADD (unique, 0x10000363, 8) , (const, 0x6, 8), (unique, 0x10000363, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000273, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x258dae, 1) , (register, 0x206, 1)]
[(unique, 0x1000027b, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x258e5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000037b, 8) , (unique, 0x100001ea, 8), (unique, 0x1000037b, 8) CAST (register, 0x0, 8), (unique, 0x100001ea, 8) INT_SUB (unique, 0x100001e2, 8) , (unique, 0x10000373, 8), (unique, 0x10000373, 8) CAST (register, 0x18, 8), (unique, 0x100001e2, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x10, 1) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000273, 8) , (unique, 0x1000027b, 8)]
[ ---  CBRANCH (ram, 0x258e68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000202, 8) , (unique, 0x100001fa, 8) , (const, 0x1, 8), (unique, 0x10000202, 8) CAST (unique, 0x1000038b, 8), (unique, 0x1000038b, 8) INT_ADD (unique, 0x10000383, 8) , (const, 0xfffffffffffffec4, 8), (unique, 0x10000383, 8) CAST (register, 0x20, 8), (unique, 0x100001fa, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x348, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x348, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x348, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (unique, 0x1000025a, 8) , (unique, 0x10000252, 8) , (const, 0x1, 8), (unique, 0x1000025a, 8) CAST (unique, 0x1000039b, 8), (unique, 0x1000039b, 8) INT_ADD (unique, 0x10000393, 8) , (const, 0xfffffffffffffec4, 8), (unique, 0x10000393, 8) CAST (register, 0x20, 8), (unique, 0x10000252, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[ ---  BRANCH (ram, 0x258dcd, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff08, 1) MULTIEQUAL (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1)]
[(stack, 0xfffffffffffffec8, 1) MULTIEQUAL (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1)]
[(unique, 0x100002db, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x258dd7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(unique, 0x100002e3, 8) COPY (register, 0x18, 8)]
[(unique, 0x100002d3, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) MULTIEQUAL (unique, 0x100002d3, 8) , (unique, 0x100002db, 8) , (unique, 0x100002e3, 8)]
[ ---  CBRANCH (ram, 0x258dda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) MULTIEQUAL (unique, 0x100002d3, 8) , (unique, 0x100002db, 8) , (unique, 0x100002e3, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x1000032b, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258dfe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000032f, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x1000032b, 4) , (unique, 0x1000032f, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003ab, 8), (unique, 0x100003ab, 8) INT_ADD (unique, 0x100003a3, 8) , (const, 0x6, 8), (unique, 0x100003a3, 8) CAST (register, 0x10, 8)]
[(unique, 0x100002c3, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x258e08, 1) , (register, 0x206, 1)]
[(unique, 0x100002cb, 8) COPY (unique, 0x3100, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100002c3, 8) , (unique, 0x100002cb, 8)]
[(unique, 0x1000021a, 8) INT_SUB (unique, 0x1000010c, 8) , (unique, 0x12600, 8), (unique, 0x1000010c, 8) INT_2COMP (unique, 0x100003b3, 8), (unique, 0x100003b3, 8) CAST (register, 0x18, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x100002ab, 8) COPY (register, 0x20, 8)]
[(unique, 0x100002b3, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) COPY (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8)]
[ ---  CBRANCH (ram, 0x258e15, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x100002bb, 8), (unique, 0x100002bb, 8) MULTIEQUAL (unique, 0x100002ab, 8) , (unique, 0x100002b3, 8)]
[(register, 0x30, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000333, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258e39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x10000337, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000333, 4) , (unique, 0x10000337, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003c3, 8), (unique, 0x100003c3, 8) INT_ADD (unique, 0x100003bb, 8) , (const, 0x6, 8), (unique, 0x100003bb, 8) CAST (register, 0x8, 8)]
[(unique, 0x1000029b, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x258e43, 1) , (register, 0x206, 1)]
[(unique, 0x100002a3, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x258e78, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (const, 0x100, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100003db, 8) , (unique, 0x10000222, 8), (unique, 0x100003db, 8) CAST (register, 0x10, 8), (unique, 0x10000222, 8) INT_ADD (unique, 0x100003d3, 8) , (unique, 0x10000242, 8), (unique, 0x100003d3, 8) CAST (register, 0x8, 8), (unique, 0x10000242, 8) INT_ADD (unique, 0x1000021a, 8) , (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) INT_SUB (unique, 0x10000232, 8) , (unique, 0x100003cb, 8), (unique, 0x100003cb, 8) CAST (register, 0x20, 8), (unique, 0x10000232, 8) INT_SUB (const, 0x1, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000029b, 8) , (unique, 0x100002a3, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x341, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x341, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x341, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x341, 4)]
[ ---  CALL (ram, 0x165000, 8) , (register, 0x38, 8) , (unique, 0x10000172, 8) , (unique, 0x10000162, 8) , (register, 0x20, 8) , (register, 0x18, 8), (unique, 0x10000172, 8) COPY (const, 0x2b72ab, 8), (unique, 0x10000162, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b720e, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x258d08, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff08, 1) MULTIEQUAL (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1)]
[(stack, 0xfffffffffffffec8, 1) MULTIEQUAL (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x258d08, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3b, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x3b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x3b, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x1000030b, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[ ---  CBRANCH (ram, 0x258d08, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x216f20, 8) , (unique, 0x100003e3, 8) , (const, 0x100, 8), (unique, 0x100003e3, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(unique, 0x10000303, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000313, 8), (unique, 0x10000313, 8) MULTIEQUAL (unique, 0x10000303, 8) , (unique, 0x1000030b, 8)]
[ ---  CBRANCH (ram, 0x258c84, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000313, 8), (unique, 0x10000313, 8) MULTIEQUAL (unique, 0x10000303, 8) , (unique, 0x1000030b, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x1000031b, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258ca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000031f, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x1000031b, 4) , (unique, 0x1000031f, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003f3, 8), (unique, 0x100003f3, 8) INT_ADD (unique, 0x100003eb, 8) , (const, 0x6, 8), (unique, 0x100003eb, 8) CAST (register, 0x10, 8)]
[(unique, 0x100002f3, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x258cb2, 1) , (register, 0x206, 1)]
[(unique, 0x100002fb, 8) COPY (unique, 0x3100, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258d08, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (const, 0x100, 8), (register, 0x10, 8) INT_ADD (unique, 0x10000403, 8) , (unique, 0x100001ba, 8), (unique, 0x10000403, 8) CAST (register, 0x10, 8), (unique, 0x100001ba, 8) INT_ADD (unique, 0x100001b2, 8) , (const, 0xf, 8), (unique, 0x100001b2, 8) INT_SUB (unique, 0x100000a2, 8) , (unique, 0x12600, 8), (unique, 0x100000a2, 8) INT_2COMP (unique, 0x100003fb, 8), (unique, 0x100003fb, 8) CAST (unique, 0x3800, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002f3, 8) , (unique, 0x100002fb, 8)]
[ ---  CALL (ram, 0x165000, 8) , (register, 0x38, 8) , (unique, 0x1000016a, 8) , (unique, 0x1000015a, 8) , (register, 0x8, 8) , (unique, 0x3800, 8), (unique, 0x1000016a, 8) COPY (const, 0x2b72a2, 8), (unique, 0x1000015a, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b720e, 8), (register, 0x8, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x101, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfd, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x101, 4), (stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x101, 4), (stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0xfd, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x101, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xfd, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x258d08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x100001c2, 8) , (const, 0x1, 8), (unique, 0x100001c2, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[(stack, 0xffffffffffffff08, 1) MULTIEQUAL (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1) , (stack, 0xffffffffffffff08, 1)]
[(stack, 0xfffffffffffffec8, 1) MULTIEQUAL (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1) , (stack, 0xfffffffffffffec8, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x258ebc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000040b, 8), (unique, 0x1000040b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xfffffffffffffec8, 1) INDIRECT (stack, 0xfffffffffffffec8, 1) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffff08, 1) INDIRECT (stack, 0xffffffffffffff08, 1) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13d, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
