[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x18, 4)]
[(stack, 0xffffffffffffff18, 1) INDIRECT (stack, 0xffffffffffffff18, 1) , (const, 0x18, 4)]
[ ---  CBRANCH (ram, 0x2371c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1cc7d0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 1)]
[ ---  CALL (ram, 0x1fcb80, 8) , (unique, 0x1000032f, 8) , (const, 0x40, 8), (unique, 0x1000032f, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x139, 4), (stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x133, 4)]
[(stack, 0xffffffffffffff18, 1) INDIRECT (stack, 0xffffffffffffff18, 1) , (const, 0x139, 4), (stack, 0xffffffffffffff18, 1) INDIRECT (stack, 0xffffffffffffff18, 1) , (const, 0x133, 4)]
[ ---  CBRANCH (ram, 0x237390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000337, 8), (unique, 0x10000337, 8) CALL (ram, 0x189080, 8) , (register, 0x20, 8) , (const, 0x2e, 8)]
[(stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x335, 4), (stack, 0xfffffffffffffed8, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff18, 1) INDIRECT (stack, 0xffffffffffffff18, 1) , (const, 0x335, 4)]
[ ---  CALL (ram, 0x1fcc40, 8) , (unique, 0x1000033f, 8) , (const, 0x40, 8), (unique, 0x1000033f, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[ ---  BRANCH (ram, 0x237213, 1)]
[(stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x14d, 4)]
[ ---  CALL (ram, 0x19eaf0, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (const, 0x40, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(stack, 0xffffffffffffff18, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffff18, 1) MULTIEQUAL (stack, 0xffffffffffffff18, 1) , (stack, 0xffffffffffffff18, 1)]
[(stack, 0xfffffffffffffed8, 1) MULTIEQUAL (stack, 0xfffffffffffffed8, 1) , (stack, 0xfffffffffffffed8, 1)]
[(unique, 0x10000277, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(unique, 0x1000027f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) COPY (unique, 0x10000287, 8), (unique, 0x10000287, 8) MULTIEQUAL (unique, 0x10000277, 8) , (unique, 0x1000027f, 8)]
[ ---  CBRANCH (ram, 0x237216, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x80808080, 4), (register, 0x10, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x10000287, 8), (unique, 0x10000287, 8) MULTIEQUAL (unique, 0x10000277, 8) , (unique, 0x1000027f, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x10, 4) , (const, 0x10, 4)]
[(unique, 0x10000317, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x23723c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x10, 4) , (const, 0x8080, 4)]
[(unique, 0x1000031b, 4) COPY (register, 0x8, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000317, 4) , (unique, 0x1000031b, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x1000034f, 8), (unique, 0x1000034f, 8) INT_ADD (unique, 0x10000347, 8) , (const, 0x6, 8), (unique, 0x10000347, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000267, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x237246, 1) , (register, 0x206, 1)]
[(unique, 0x1000026f, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x2372f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000035f, 8) , (unique, 0x100001d7, 8), (unique, 0x1000035f, 8) CAST (register, 0x0, 8), (unique, 0x100001d7, 8) INT_SUB (unique, 0x100001cf, 8) , (unique, 0x10000357, 8), (unique, 0x10000357, 8) CAST (register, 0x18, 8), (unique, 0x100001cf, 8) INT_SUB (const, 0xfffffffffffffffd, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x10, 1) , (register, 0x10, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000267, 8) , (unique, 0x1000026f, 8)]
[ ---  CBRANCH (ram, 0x237380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100001ef, 8) , (unique, 0x100001e7, 8) , (const, 0x1, 8), (unique, 0x100001ef, 8) CAST (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) INT_ADD (unique, 0x10000367, 8) , (const, 0xfffffffffffffed4, 8), (unique, 0x10000367, 8) CAST (register, 0x20, 8), (unique, 0x100001e7, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[(stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x32a, 4)]
[(stack, 0xffffffffffffff18, 1) INDIRECT (stack, 0xffffffffffffff18, 1) , (const, 0x32a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1), (unique, 0x3a00, 8) PTRADD (unique, 0x1000024f, 8) , (unique, 0x10000247, 8) , (const, 0x1, 8), (unique, 0x1000024f, 8) CAST (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) INT_ADD (unique, 0x10000377, 8) , (const, 0xfffffffffffffed4, 8), (unique, 0x10000377, 8) CAST (register, 0x20, 8), (unique, 0x10000247, 8) INT_ADD (register, 0x0, 8) , (const, 0x3, 8)]
[ ---  BRANCH (ram, 0x237265, 1)]
[(stack, 0xffffffffffffff18, 1) MULTIEQUAL (stack, 0xffffffffffffff18, 1) , (stack, 0xffffffffffffff18, 1)]
[(stack, 0xfffffffffffffed8, 1) MULTIEQUAL (stack, 0xfffffffffffffed8, 1) , (stack, 0xfffffffffffffed8, 1)]
[(unique, 0x100002cf, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x23726f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(unique, 0x100002d7, 8) COPY (register, 0x18, 8)]
[(unique, 0x100002c7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x100002df, 8), (unique, 0x100002df, 8) MULTIEQUAL (unique, 0x100002c7, 8) , (unique, 0x100002cf, 8) , (unique, 0x100002d7, 8)]
[ ---  CBRANCH (ram, 0x237272, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x100002df, 8), (unique, 0x100002df, 8) MULTIEQUAL (unique, 0x100002c7, 8) , (unique, 0x100002cf, 8) , (unique, 0x100002d7, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x1000031f, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x237296, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x10000323, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x1000031f, 4) , (unique, 0x10000323, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x1000038f, 8), (unique, 0x1000038f, 8) INT_ADD (unique, 0x10000387, 8) , (const, 0x6, 8), (unique, 0x10000387, 8) CAST (register, 0x10, 8)]
[(unique, 0x100002b7, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x2372a0, 1) , (register, 0x206, 1)]
[(unique, 0x100002bf, 8) COPY (unique, 0x3100, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100002b7, 8) , (unique, 0x100002bf, 8)]
[(unique, 0x10000207, 8) INT_SUB (unique, 0x100000f2, 8) , (unique, 0x12600, 8), (unique, 0x100000f2, 8) INT_2COMP (unique, 0x10000397, 8), (unique, 0x10000397, 8) CAST (register, 0x18, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x1000029f, 8) COPY (register, 0x20, 8)]
[(unique, 0x100002a7, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 8) COPY (unique, 0x100002af, 8), (unique, 0x100002af, 8) MULTIEQUAL (unique, 0x1000029f, 8) , (unique, 0x100002a7, 8)]
[ ---  CBRANCH (ram, 0x2372ad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) COPY (unique, 0x100002af, 8), (unique, 0x100002af, 8) MULTIEQUAL (unique, 0x1000029f, 8) , (unique, 0x100002a7, 8)]
[(register, 0x30, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x10000327, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2372d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x1000032b, 4) COPY (register, 0x30, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000327, 4) , (unique, 0x1000032b, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003a7, 8), (unique, 0x100003a7, 8) INT_ADD (unique, 0x1000039f, 8) , (const, 0x6, 8), (unique, 0x1000039f, 8) CAST (register, 0x8, 8)]
[(unique, 0x1000028f, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2372db, 1) , (register, 0x206, 1)]
[(unique, 0x10000297, 8) COPY (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x237350, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (const, 0x100, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x100003bf, 8) , (unique, 0x1000020f, 8), (unique, 0x100003bf, 8) CAST (register, 0x10, 8), (unique, 0x1000020f, 8) INT_ADD (unique, 0x100003b7, 8) , (unique, 0x1000022f, 8), (unique, 0x100003b7, 8) CAST (register, 0x8, 8), (unique, 0x1000022f, 8) INT_ADD (unique, 0x10000207, 8) , (unique, 0x10000227, 8), (unique, 0x10000227, 8) INT_SUB (unique, 0x1000021f, 8) , (unique, 0x100003af, 8), (unique, 0x100003af, 8) CAST (register, 0x20, 8), (unique, 0x1000021f, 8) INT_SUB (const, 0x1, 8) , (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000028f, 8) , (unique, 0x10000297, 8)]
[(stack, 0xfffffffffffffed8, 1) INDIRECT (stack, 0xfffffffffffffed8, 1) , (const, 0x323, 4)]
[(stack, 0xffffffffffffff18, 1) INDIRECT (stack, 0xffffffffffffff18, 1) , (const, 0x323, 4)]
[ ---  CALL (ram, 0x1558f0, 8) , (register, 0x38, 8) , (unique, 0x10000167, 8) , (unique, 0x10000157, 8) , (register, 0x20, 8) , (register, 0x18, 8), (unique, 0x10000167, 8) COPY (const, 0x28f520, 8), (unique, 0x10000157, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f483, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[(unique, 0x100002ff, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[ ---  CBRANCH (ram, 0x2372f2, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1fcc40, 8) , (unique, 0x100003c7, 8) , (const, 0x100, 8), (unique, 0x100003c7, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffed8, 8)]
[(unique, 0x100002f7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x10, 8) COPY (unique, 0x10000307, 8), (unique, 0x10000307, 8) MULTIEQUAL (unique, 0x100002f7, 8) , (unique, 0x100002ff, 8)]
[ ---  CBRANCH (ram, 0x237169, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x80808080, 4), (register, 0x0, 4) INT_AND (unique, 0x3200, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_NEGATE (unique, 0xbc80, 4), (unique, 0x3200, 4) INT_ADD (unique, 0xbc80, 4) , (const, 0xfefefeff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) COPY (unique, 0x10000307, 8), (unique, 0x10000307, 8) MULTIEQUAL (unique, 0x100002f7, 8) , (unique, 0x100002ff, 8)]
[(register, 0x8, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0x1000030f, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23718d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58a00, 4) , (const, 0x0, 4), (unique, 0x58a00, 4) INT_AND (register, 0x0, 4) , (const, 0x8080, 4)]
[(unique, 0x10000313, 4) COPY (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x1000030f, 4) , (unique, 0x10000313, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x100003d7, 8), (unique, 0x100003d7, 8) INT_ADD (unique, 0x100003cf, 8) , (const, 0x6, 8), (unique, 0x100003cf, 8) CAST (register, 0x10, 8)]
[(unique, 0x100002e7, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x237197, 1) , (register, 0x206, 1)]
[(unique, 0x100002ef, 8) COPY (unique, 0x3100, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x237308, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x100, 8), (register, 0x10, 8) INT_ADD (unique, 0x100003e7, 8) , (unique, 0x100001af, 8), (unique, 0x100003e7, 8) CAST (register, 0x10, 8), (unique, 0x100001af, 8) INT_ADD (unique, 0x100001a7, 8) , (const, 0xf, 8), (unique, 0x100001a7, 8) INT_SUB (unique, 0x10000099, 8) , (unique, 0x12600, 8), (unique, 0x10000099, 8) INT_2COMP (unique, 0x100003df, 8), (unique, 0x100003df, 8) CAST (unique, 0x3800, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_CARRY (register, 0x0, 1) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x100002e7, 8) , (unique, 0x100002ef, 8)]
[ ---  CALL (ram, 0x1558f0, 8) , (register, 0x38, 8) , (unique, 0x1000015f, 8) , (unique, 0x1000014f, 8) , (register, 0x8, 8) , (unique, 0x3800, 8), (unique, 0x1000015f, 8) COPY (const, 0x28f517, 8), (unique, 0x1000014f, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f483, 8), (register, 0x8, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2371b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000237, 8) , (const, 0x1, 8), (unique, 0x10000237, 8) INT_SUB (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x2371b4, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
