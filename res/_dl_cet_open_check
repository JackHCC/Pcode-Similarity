[(unique, 0x10000097, 4) INT_ZEXT (register, 0x10, 1), (register, 0x10, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x2, 4), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x7, 4), (register, 0x8, 4) INT_AND (ram, 0x4c87f4, 4) , (const, 0x7, 4), (register, 0x18, 4) INT_RIGHT (ram, 0x4c87f4, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x48f37c, 1) , (register, 0x10, 1), (register, 0x10, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x2, 4), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x2, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0x7, 4), (register, 0x8, 4) INT_AND (ram, 0x4c87f4, 4) , (const, 0x7, 4), (register, 0x18, 4) INT_RIGHT (ram, 0x4c87f4, 4) , (const, 0x3, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48f37c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000009f, 4) , (const, 0x0, 4), (unique, 0x1000009f, 4) INT_AND (ram, 0x4c87f0, 4) , (const, 0x3, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x30, 1) INT_AND (unique, 0x1000020e, 1) , (const, 0x1, 1), (unique, 0x1000020e, 1) SUBPIECE (ram, 0x4c87f0, 4) , (const, 0x0, 4)]
[(register, 0x38, 1) INT_AND (unique, 0x10000210, 1) , (const, 0x1, 1), (unique, 0x10000210, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_RIGHT (ram, 0x4c87f0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x48f390, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x0, 1), (register, 0x80, 1) INT_OR (register, 0x80, 1) , (register, 0xa0, 1), (register, 0xa0, 1) SUBPIECE (register, 0xa0, 4) , (const, 0x0, 4), (register, 0x80, 1) SUBPIECE (register, 0x38, 4) , (const, 0x0, 4), (register, 0xa0, 4) INT_AND (unique, 0x100000c6, 4) , (register, 0x30, 4), (unique, 0x100000c6, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x1, 4), (register, 0x38, 4) INT_AND (unique, 0x100000aa, 4) , (ram, 0x4c87f0, 4), (unique, 0x100000aa, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x1, 4), (register, 0x30, 4) INT_RIGHT (ram, 0x4c87f0, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c8, 8)]
[ ---  CBRANCH (ram, 0x48f7b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) INT_ADD (register, 0x38, 8) , (const, 0x2c8, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 1) INT_XOR (register, 0x38, 1) , (register, 0xa0, 1)]
[ ---  BRANCH (ram, 0x48f35d, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) INT_ADD (register, 0x38, 8) , (const, 0x3c8, 8)]
[(register, 0x38, 1) SUBPIECE (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_AND (unique, 0x100000f6, 4) , (register, 0x38, 4), (unique, 0x100000f6, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x48f510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x48f778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 1) , (const, 0x0, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100003b9, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x100003f2, 4) COPY (stack, 0xffffffffffffffa4, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000041b, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000097, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x48f7a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (unique, 0x1000043f, 8) , (const, 0x31c, 8), (unique, 0x1000043f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8)]
[(unique, 0x100003c1, 8) COPY (register, 0xa8, 8)]
[(unique, 0x100003f6, 4) COPY (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000041f, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x48f7a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000457, 8), (unique, 0x10000457, 8) INT_ADD (unique, 0x1000044f, 8) , (const, 0x321, 8), (unique, 0x1000044f, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100003c9, 8) COPY (register, 0x0, 8)]
[(unique, 0x100003fa, 4) COPY (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x10000423, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x48f79f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x100003fe, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000427, 4) COPY (register, 0x38, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x100003f2, 4) , (unique, 0x100003f6, 4) , (unique, 0x100003fa, 4) , (unique, 0x100003fe, 4)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100003b9, 8) , (unique, 0x100003c1, 8) , (unique, 0x100003c9, 8) , (unique, 0x100003c9, 8)]
[(register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000041b, 4) , (unique, 0x1000041f, 4) , (unique, 0x10000423, 4) , (unique, 0x10000427, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x48f7ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48f55f, 1)]
[(register, 0x38, 8) PTRADD (unique, 0x3a00, 8) , (unique, 0x10000307, 8) , (const, 0x8, 8), (unique, 0x10000307, 8) INT_MULT (register, 0x8, 8) , (const, 0xfffffffffffffffe, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002f7, 8) , (const, 0x8, 8), (unique, 0x100002f7, 8) INT_SUB (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_ZEXT (register, 0x0, 4)]
[(unique, 0x1000023d, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x48f540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x38, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[ ---  CBRANCH (ram, 0x48f563, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48f4a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x0, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000097, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48f404, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000467, 8), (unique, 0x10000467, 8) INT_ADD (unique, 0x1000045f, 8) , (const, 0x31c, 8), (unique, 0x1000045f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x8, 8)]
[(register, 0x30, 4) INT_AND (register, 0x80, 4) , (const, 0x7, 4), (register, 0x80, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000477, 8), (unique, 0x10000477, 8) INT_ADD (unique, 0x1000046f, 8) , (const, 0x321, 8), (unique, 0x1000046f, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100003d9, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000402, 4) COPY (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000040f, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x48f3fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000226, 1) , (const, 0x0, 1), (unique, 0x10000226, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000477, 8), (unique, 0x10000477, 8) INT_ADD (unique, 0x1000046f, 8) , (const, 0x321, 8), (unique, 0x1000046f, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0x100003e1, 8) COPY (register, 0x0, 8)]
[(unique, 0x10000406, 4) COPY (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x10000413, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x48f3fa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4)]
[(unique, 0x1000040a, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000417, 4) COPY (register, 0x38, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x10000402, 4) , (unique, 0x10000406, 4) , (unique, 0x1000040a, 4)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100003d9, 8) , (unique, 0x100003e1, 8) , (unique, 0x100003e1, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x1000040f, 4) , (unique, 0x10000413, 4) , (unique, 0x10000417, 4)]
[(register, 0xa0, 4) INT_AND (register, 0xa0, 4) , (unique, 0x10000105, 4), (unique, 0x10000105, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x2, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0xa0, 1) SUBPIECE (register, 0xa0, 4) , (const, 0x0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[(register, 0x10, 1) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f3d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(register, 0xa0, 1) MULTIEQUAL (register, 0xa0, 1) , (register, 0xa0, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x48f563, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (register, 0x10, 1)]
[ ---  CBRANCH (ram, 0x48f740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8880, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0x16, 8) , (unique, 0xbd80, 8) , (unique, 0x1000026f, 8) , (unique, 0x1000029f, 8), (unique, 0x1000029f, 8) COPY (const, 0x4b577f, 8), (unique, 0x1000026f, 8) COPY (const, 0x4b08a1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x2e1, 4)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4), (ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x2e1, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4), (ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x2e1, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8), (ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x2e1, 4)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8), (ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x2e1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x579, 4)]
[(ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x579, 4)]
[(unique, 0x100003a1, 8) COPY (ram, 0x4c8888, 8), (ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x579, 4)]
[(unique, 0x10000399, 8) COPY (ram, 0x4c8880, 8), (ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x579, 4)]
[(unique, 0x10000391, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x579, 4)]
[ ---  CBRANCH (ram, 0x48f570, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4562d0, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8888, 8) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x48f70f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xa8, 4) , (stack, 0xffffffffffffffa4, 4), (register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000047f, 8), (unique, 0x1000047f, 8) INT_ADD (register, 0x38, 8) , (const, 0x3c8, 8)]
[(unique, 0x3100, 8) INT_SUB (ram, 0x4c6118, 8) , (const, 0x1, 8)]
[(ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[(ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0xa8, 4) SUBPIECE (register, 0xa8, 8) , (const, 0x0, 4), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x48f6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000497, 8), (unique, 0x10000497, 8) INT_ADD (unique, 0x1000048f, 8) , (const, 0x31c, 8), (unique, 0x1000048f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000487, 8), (unique, 0x10000487, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_AND (register, 0xa8, 8) , (const, 0xffffffff, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x48f6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004a7, 8), (unique, 0x100004a7, 8) INT_ADD (unique, 0x1000049f, 8) , (const, 0x321, 8), (unique, 0x1000049f, 8) CAST (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100004b7, 8), (unique, 0x100004b7, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x55, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (const, 0x0, 8), (register, 0x90, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100004af, 8), (unique, 0x100004af, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x57, 8) , (const, 0x8, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48f629, 1)]
[(ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[(ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x48f618, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x100000001, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1ffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x48f7d0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (unique, 0x100003a1, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x3, 4), (unique, 0x3400, 8) INT_ADD (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_DIV (register, 0x0, 8) , (unique, 0x10000391, 8), (register, 0x0, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ZEXT (register, 0x0, 8), (unique, 0x2e800, 16) INT_ZEXT (unique, 0x10000391, 8), (register, 0x0, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0x16, 8) , (unique, 0xbd80, 8) , (unique, 0x10000287, 8) , (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) COPY (const, 0x4b57d0, 8), (unique, 0x10000287, 8) COPY (const, 0x4b08a1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x572, 4)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4), (ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x572, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4), (ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x572, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8), (ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x572, 4)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8), (ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x572, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x3400, 8) CAST (unique, 0x100004c7, 8), (unique, 0x100004c7, 8) INT_ADD (unique, 0x100004bf, 8) , (unique, 0x3300, 8), (unique, 0x100004bf, 8) CAST (unique, 0x10000399, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x6, 4)]
[(register, 0x10, 8) INT_LEFT (const, 0xffffffffffffffff, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48f6bc, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_SUB (const, 0x40, 4) , (register, 0xb8, 4), (register, 0xb8, 4) INT_AND (unique, 0x10000212, 4) , (const, 0x3f, 4), (unique, 0x10000212, 4) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x466, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x466, 4), (ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x466, 4), (ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x466, 4), (ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x466, 4), (ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[(register, 0x8, 8) COPY (const, 0x40, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3400, 8)]
[(register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x48f6a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x3f, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[(ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x30, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x48f618, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x4e2, 4)]
[(ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x4e2, 4)]
[(ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x4e2, 4)]
[(ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x4e2, 4)]
[(ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x4e2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_RIGHT (const, 0xffffffffffffffff, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_2COMP (unique, 0x10000224, 1), (unique, 0x10000224, 1) SUBPIECE (unique, 0x3400, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48f629, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[(ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_ADD (register, 0x80, 8) , (const, 0x1, 8)]
[(ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[(ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0xa8, 8) INT_ZEXT (register, 0xa8, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x48f5c0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0xa8, 4) , (stack, 0xffffffffffffffa4, 4), (register, 0xa8, 4) INT_ADD (register, 0xa8, 4) , (const, 0x1, 4)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x527, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x527, 4), (ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x527, 4), (ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x527, 4), (ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x527, 4), (ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[ ---  CBRANCH (ram, 0x48f759, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4562d0, 8) , (unique, 0x10000399, 8) , (unique, 0x100003a1, 8) , (const, 0x1, 4)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0x16, 8) , (unique, 0xbd80, 8) , (unique, 0x1000027f, 8) , (unique, 0x10000297, 8), (unique, 0x10000297, 8) COPY (const, 0x4b5761, 8), (unique, 0x1000027f, 8) COPY (const, 0x4b08a1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x54b, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4), (ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x54b, 4), (ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4), (ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x54b, 4), (ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8), (ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x54b, 4), (ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8), (ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x54b, 4), (ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x0, 1) INT_XOR (register, 0x38, 1) , (register, 0xa0, 1)]
[ ---  BRANCH (ram, 0x48f35d, 1)]
[(unique, 0x100003a9, 8) COPY (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x48f4b3, 1)]
[(register, 0x80, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x48f4cf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004d7, 8), (unique, 0x100004d7, 8) INT_ADD (unique, 0x100004cf, 8) , (const, 0x31c, 8), (unique, 0x100004cf, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100003a9, 8) , (unique, 0x100003b1, 8)]
[(register, 0x80, 4) INT_AND (register, 0x80, 4) , (unique, 0x1000013c, 4), (unique, 0x1000013c, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100004e7, 8), (unique, 0x100004e7, 8) INT_ADD (unique, 0x100004df, 8) , (const, 0x321, 8), (unique, 0x100004df, 8) CAST (unique, 0xbd80, 8)]
[(register, 0x80, 1) SUBPIECE (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(unique, 0x100003b1, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x48f4b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8) , (unique, 0x1000023d, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 1) INT_XOR (register, 0x38, 1) , (register, 0x80, 1), (register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0xa0, 1) , (register, 0xa0, 1) , (register, 0xa0, 1)]
[ ---  BRANCH (ram, 0x48f35d, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x100003f1, 1) COPY (register, 0x38, 1)]
[(unique, 0x1000040e, 1) COPY (register, 0x80, 1)]
[(register, 0x80, 1) MULTIEQUAL (unique, 0x1000040e, 1) , (register, 0xa0, 1) , (register, 0x80, 1) , (register, 0xa0, 1)]
[(ram, 0x4c8888, 8) MULTIEQUAL (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8) , (ram, 0x4c8888, 8)]
[(ram, 0x4c8880, 8) MULTIEQUAL (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8) , (ram, 0x4c8880, 8)]
[(ram, 0x4c87f4, 4) MULTIEQUAL (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4) , (ram, 0x4c87f4, 4)]
[(ram, 0x4c87f0, 4) MULTIEQUAL (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4) , (ram, 0x4c87f0, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x0, 1) MULTIEQUAL (unique, 0x100003f1, 1) , (register, 0x0, 1) , (register, 0x0, 1) , (register, 0x0, 1)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x48f368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (register, 0x80, 1)]
[ ---  CBRANCH (ram, 0x48f37c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x48f460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x3, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0xffffff62, 8) , (unique, 0xbd80, 8) , (unique, 0x10000277, 8) , (unique, 0x100002af, 8), (unique, 0x100002af, 8) COPY (const, 0x4b57b8, 8), (unique, 0x10000277, 8) COPY (const, 0x4b08a1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1bd, 4)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4), (ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x1bd, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4), (ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x1bd, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8), (ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x1bd, 4)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8), (ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x1bd, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x48f7f3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 1) , (register, 0x80, 1)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0x16, 8) , (unique, 0xbd80, 8) , (unique, 0x1000028f, 8) , (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) COPY (const, 0x4b579d, 8), (unique, 0x1000028f, 8) COPY (const, 0x4b08a1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x14a, 4)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4), (ram, 0x4c87f0, 4) INDIRECT (ram, 0x4c87f0, 4) , (const, 0x14a, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4), (ram, 0x4c87f4, 4) INDIRECT (ram, 0x4c87f4, 4) , (const, 0x14a, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8), (ram, 0x4c8880, 8) INDIRECT (ram, 0x4c8880, 8) , (const, 0x14a, 4)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8), (ram, 0x4c8888, 8) INDIRECT (ram, 0x4c8888, 8) , (const, 0x14a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[(ram, 0x4c87f0, 4) COPY (ram, 0x4c87f0, 4)]
[(ram, 0x4c87f4, 4) COPY (ram, 0x4c87f4, 4)]
[(ram, 0x4c8880, 8) COPY (ram, 0x4c8880, 8)]
[(ram, 0x4c8888, 8) COPY (ram, 0x4c8888, 8)]
[ ---  RETURN (const, 0x0, 8)]
