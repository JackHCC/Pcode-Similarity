[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x22, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x22, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x22, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x22, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x22, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x22, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x22, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x466701, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x40ff60, 8) , (unique, 0x10000162, 8), (unique, 0x10000162, 8) COPY (const, 0x49f975, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x50, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x50, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x50, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x50, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (register, 0x0, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x50, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x50, 4)]
[ ---  CBRANCH (ram, 0x466701, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (unique, 0x1000016a, 8) , (const, 0x0, 8) , (const, 0x0, 8), (unique, 0x1000016a, 8) COPY (const, 0x49f980, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x64, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x64, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x64, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x64, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0x64, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x64, 4)]
[ ---  CBRANCH (ram, 0x4667b9, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455300, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[ ---  CBRANCH (ram, 0x4667b9, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x100001b8, 8) , (const, 0x10, 8), (unique, 0x100001b8, 8) CAST (stack, 0xffffffffffffff78, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x98, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x98, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x98, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x98, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x98, 4)]
[(unique, 0x10000198, 8) COPY (ram, 0x4c7de8, 8), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x98, 4), (ram, 0x4c7de8, 8) COPY (stack, 0xffffffffffffff78, 8)]
[ ---  CBRANCH (ram, 0x466748, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff78, 8) , (const, 0x1, 4) , (const, 0x1, 4) , (register, 0x0, 4) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x162, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x162, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x162, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (register, 0x0, 8) , (const, 0x162, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x162, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x162, 4)]
[ ---  CBRANCH (ram, 0x4667b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) CALL (ram, 0x426550, 8) , (ram, 0x4c7de8, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001a0, 8) COPY (unique, 0x10000198, 8)]
[ ---  BRANCH (ram, 0x46678e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18c, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x18c, 4), (ram, 0x4c7de0, 4) MULTIEQUAL (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x18c, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x18c, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x18c, 4), (ram, 0x4c88c0, 8) MULTIEQUAL (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x18c, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CBRANCH (ram, 0x466778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x455490, 8) , (register, 0x0, 4) , (unique, 0x3400, 8) , (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) INT_ADD (unique, 0x100001d0, 8) , (register, 0xa0, 8), (unique, 0x100001d0, 8) CAST (ram, 0x4c7df0, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0xa0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001a0, 8) , (unique, 0x100001a8, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (ram, 0x4c7df0, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c7df0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19b, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x19b, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x19b, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x19b, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x19b, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x19b, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7df0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001a8, 8) COPY (ram, 0x4c7de8, 8)]
[ ---  CBRANCH (ram, 0x4667d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (ram, 0x4c7de8, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x0, 8)]
[(ram, 0x4c7de0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x466681, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa8, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0xa8, 4), (ram, 0x4c7de0, 4) MULTIEQUAL (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0xa8, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0xa8, 4), (ram, 0x4c88c0, 8) MULTIEQUAL (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xa8, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4666e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x20010324, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (ram, 0x4c7df0, 8), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0xa8, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c7df0, 8)]
[ ---  CBRANCH (ram, 0x4666e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (ram, 0x4c7de8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c7df0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4666e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 8) , (ram, 0x4c7de8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) INT_ADD (unique, 0x100001e8, 8) , (const, 0x6, 8), (unique, 0x100001e8, 8) CAST (ram, 0x4c7df0, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c7df0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4666e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c7df0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4666e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3400, 8) , (ram, 0x4c7de8, 8), (unique, 0x3400, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4666e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (ram, 0x4c7de8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000208, 8), (unique, 0x10000208, 8) INT_ADD (unique, 0x10000200, 8) , (const, 0xa, 8), (unique, 0x10000200, 8) CAST (ram, 0x4c7df0, 8)]
[(register, 0x80, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x466707, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x10, 8) , (ram, 0x4c7de8, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000210, 8), (unique, 0x10000210, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c7df0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x466730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7de0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x158, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x158, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x158, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x158, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x158, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x158, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x4666f6, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x12c, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x12c, 4)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x12c, 4)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x12c, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7de8, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c88c0, 8) MULTIEQUAL (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7de0, 4) MULTIEQUAL (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7df0, 8) COPY (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x1a1, 4), (ram, 0x4c7de0, 4) MULTIEQUAL (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4)]
[(ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x1a1, 4), (ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x1a1, 4), (ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (register, 0x0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x1a1, 4), (ram, 0x4c88c0, 8) MULTIEQUAL (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1a1, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[(register, 0x80, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x466707, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c88c0, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7de0, 4) MULTIEQUAL (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4c88c0, 8) MULTIEQUAL (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8) , (ram, 0x4c88c0, 8)]
[(ram, 0x4c7df0, 8) MULTIEQUAL (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8) , (ram, 0x4c7df0, 8)]
[(ram, 0x4c7de8, 8) MULTIEQUAL (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8) , (ram, 0x4c7de8, 8)]
[(ram, 0x4c7de0, 4) MULTIEQUAL (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4) , (ram, 0x4c7de0, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4667df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000218, 8), (unique, 0x10000218, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4c7de0, 4) COPY (ram, 0x4c7de0, 4)]
[(ram, 0x4c7de8, 8) COPY (ram, 0x4c7de8, 8)]
[(ram, 0x4c7df0, 8) COPY (ram, 0x4c7df0, 8)]
[(ram, 0x4c88c0, 8) COPY (ram, 0x4c88c0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x153, 4)]
[ ---  CALL (ram, 0x458dd0, 8)]
[(ram, 0x4c7de0, 4) COPY (ram, 0x4c7de0, 4), (ram, 0x4c7de0, 4) INDIRECT (ram, 0x4c7de0, 4) , (const, 0x153, 4)]
[(ram, 0x4c7de8, 8) COPY (ram, 0x4c7de8, 8), (ram, 0x4c7de8, 8) INDIRECT (ram, 0x4c7de8, 8) , (const, 0x153, 4)]
[(ram, 0x4c7df0, 8) COPY (ram, 0x4c7df0, 8), (ram, 0x4c7df0, 8) INDIRECT (ram, 0x4c7df0, 8) , (const, 0x153, 4)]
[(ram, 0x4c88c0, 8) COPY (ram, 0x4c88c0, 8), (ram, 0x4c88c0, 8) INDIRECT (ram, 0x4c88c0, 8) , (const, 0x153, 4)]
[ ---  RETURN (const, 0x1, 4)]
