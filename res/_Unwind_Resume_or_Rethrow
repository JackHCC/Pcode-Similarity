[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0x1000019e, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x49536f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001a6, 8), (unique, 0x100001a6, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x56, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x56, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x56, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x1000019e, 8) , (const, 0x56, 4)]
[ ---  CALL (ram, 0x494680, 8) , (unique, 0x3200, 8) , (unique, 0x3100, 8) , (stack, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0x8, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[(unique, 0x1000016e, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd8, 8)]
[(unique, 0x1000017e, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffec8, 8)]
[(register, 0x8, 8) COPY (const, 0x3c, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffff60, 8) MULTIEQUAL (stack, 0xffffffffffffff60, 8) , (stack, 0xffffffffffffff60, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x1000017e, 8) , (unique, 0x10000186, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000016e, 8) , (unique, 0x10000176, 8)]
[ ---  CBRANCH (ram, 0x49539e, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x72, 4)]
[ ---  CBRANCH (ram, 0x4017bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) CALL (ram, 0x494960, 8) , (register, 0x38, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdd0, 8)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb3, 4)]
[ ---  CALL (ram, 0x4011c4, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CALL (ram, 0x493950, 8) , (unique, 0x3200, 8) , (unique, 0x3200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ae, 8) , (register, 0x30, 8), (unique, 0x100001ae, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000014e, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000014e, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x494cf0, 8) , (stack, 0xffffffffffffff58, 8), (register, 0x30, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x82, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x82, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0xb0, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x91, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x8b, 4), (stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x82, 4)]
[ ---  CALLIND (register, 0x8, 8), (register, 0x8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b6, 8), (unique, 0x100001b6, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000015e, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x1000015e, 8) PTRSUB (register, 0x20, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x494cf0, 8) , (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x82, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x6a, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0x6a, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (stack, 0xffffffffffffffc8, 8) , (const, 0x6a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xab00, 4), (unique, 0xab00, 4) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x10000176, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000136, 8) , (const, 0x4, 8), (unique, 0x10000136, 8) INT_ADD (unique, 0x1000012e, 8) , (const, 0x1, 8), (unique, 0x1000012e, 8) INT_MULT (unique, 0xa980, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xa980, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x10000186, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000116, 8) , (const, 0x4, 8), (unique, 0x10000116, 8) INT_ADD (unique, 0x1000010e, 8) , (const, 0x1, 8), (unique, 0x1000010e, 8) INT_MULT (unique, 0xb580, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb580, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x49539c, 1)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x1000019e, 8) , (const, 0x34, 4)]
[ ---  CALL (ram, 0x494d00, 8)]
[ ---  RETURN (const, 0x0, 8)]
