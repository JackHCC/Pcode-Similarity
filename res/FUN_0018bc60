[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000169, 8), (unique, 0x10000169, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x18bdd0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000161, 8), (unique, 0x10000161, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b0, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x1b0, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x1b0, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1b0, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18bcaa, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x4f, 4), (stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x18bccb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000171, 8), (unique, 0x10000171, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18bd40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff50, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x18bccb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18bd60, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0xbd80, 8) , (unique, 0x10000181, 8), (unique, 0x10000181, 8) CAST (stack, 0xffffffffffffff68, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000179, 8), (unique, 0x10000179, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18bccb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11e, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x11e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x11e, 4)]
[ ---  CBRANCH (ram, 0x18bccb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x21b9d0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff68, 8) , (const, 0x1, 4) , (const, 0x1, 4) , (unique, 0xbc80, 4) , (const, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000189, 8), (unique, 0x10000189, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13d, 4)]
[ ---  CBRANCH (ram, 0x18bdda, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (stack, 0xffffffffffffff68, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (unique, 0xbc80, 4) , (stack, 0xffffffffffffff68, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x13d, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000191, 8), (unique, 0x10000191, 8) INT_ADD (register, 0x38, 8) , (const, 0x70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x164, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x164, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x164, 4)]
[ ---  CALL (ram, 0x18e2a0, 8) , (register, 0x38, 8) , (register, 0x0, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000199, 8) , (register, 0x0, 8), (unique, 0x10000199, 8) CAST (register, 0x0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[(unique, 0x10000151, 8) COPY (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x100001c1, 8), (unique, 0x100001c1, 8) INT_ADD (unique, 0x100001b9, 8) , (unique, 0xbd80, 8), (unique, 0x100001b9, 8) CAST (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  CBRANCH (ram, 0x18be11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(unique, 0x10000159, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000151, 8) , (unique, 0x10000159, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (stack, 0xffffffffffffff68, 8), (unique, 0x3200, 8) CAST (unique, 0x100001d9, 8), (unique, 0x100001d9, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e81e0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) CAST (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8), (register, 0xa8, 8) INT_ADD (unique, 0x100001d1, 8) , (stack, 0xffffffffffffff68, 8), (unique, 0x100001d1, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18be35, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7ca0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000139, 8), (unique, 0x10000139, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7ca0, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x130, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[ ---  BRANCH (ram, 0x18bcfa, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x14e, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x14e, 4)]
[ ---  CALL (ram, 0x21bab0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3200, 8) CAST (unique, 0x10000201, 8), (unique, 0x10000201, 8) INT_ADD (register, 0x38, 8) , (const, 0x90, 8)]
[ ---  BRANCH (ram, 0x18bccb, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e82a0, 8)]
[ ---  CBRANCH (ram, 0x18bce5, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (const, 0x0, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000209, 8), (unique, 0x10000209, 8) INT_ADD (register, 0x38, 8) , (const, 0xc0, 8)]
[(register, 0x0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x0, 8), (unique, 0x3200, 8) CAST (unique, 0x10000211, 8), (unique, 0x10000211, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x10000141, 8), (unique, 0x10000141, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8), (unique, 0x3200, 8) CAST (unique, 0x10000221, 8), (unique, 0x10000221, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x130, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000219, 8), (unique, 0x10000219, 8) INT_ADD (register, 0x38, 8) , (const, 0xa0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x18bdc0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000229, 8), (unique, 0x10000229, 8) INT_ADD (register, 0x38, 8) , (const, 0xd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xda, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xda, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18bd10, 1)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000231, 8), (unique, 0x10000231, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x18be4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000239, 8), (unique, 0x10000239, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xae, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xae, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xd5, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
