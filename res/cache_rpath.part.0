[(register, 0x0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000120, 8), (unique, 0x10000120, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x47fa68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000120, 8), (unique, 0x10000120, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x40, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x1ec, 4)]
[(ram, 0x4c8870, 8) COPY (ram, 0x4c8870, 8), (ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x1ec, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000138, 8), (unique, 0x10000138, 8) INT_ADD (register, 0x38, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) CAST (unique, 0x10000148, 8), (unique, 0x10000148, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000140, 8), (unique, 0x10000140, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000130, 8), (unique, 0x10000130, 8) INT_ADD (register, 0x38, 8) , (const, 0x68, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000128, 8), (unique, 0x10000128, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47fa80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8870, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4aa0, 4) , (const, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (ram, 0x4c8870, 8)]
[(unique, 0x10000105, 8) COPY (ram, 0x4c8870, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x10000105, 8) , (register, 0x0, 8)]
[(unique, 0x10000115, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000011d, 1) COPY (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x47fac5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (register, 0x10, 1), (register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000115, 8) , (register, 0x38, 8)]
[(register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47fab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x0, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0x1000011d, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000011e, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47fb00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x10, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47fae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x0, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0x1000011e, 1) , (unique, 0x1000011d, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f99e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x0, 1), (register, 0x10, 1) MULTIEQUAL (register, 0x10, 1) , (register, 0x10, 1)]
[ ---  CBRANCH (ram, 0x47f99e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 1) , (const, 0x3a, 1)]
[ ---  CBRANCH (ram, 0x47f998, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47fae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[ ---  CBRANCH (ram, 0x47faa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x47f9c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x85, 4)]
[(ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x85, 4)]
[ ---  CBRANCH (ram, 0x47fb4a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x429160, 8) , (register, 0x88, 8)]
[(register, 0x8, 8) COPY (const, 0x4afb18, 8)]
[ ---  BRANCH (ram, 0x47fb3c, 1)]
[ ---  CBRANCH (ram, 0x47fb10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x10, 8)]
[ ---  BRANCH (ram, 0x47fa06, 1)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000010d, 8) COPY (register, 0x0, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x3a, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47f9e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000010d, 8) , (register, 0x10, 8)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xda, 4)]
[(ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0xda, 4)]
[ ---  CBRANCH (ram, 0x47fb2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000150, 8), (unique, 0x10000150, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3580, 8) , (register, 0x38, 8)]
[ ---  CALL (ram, 0x47f640, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x100000f4, 8) , (register, 0x8, 8) , (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0x100000f4, 8) COPY (const, 0x4b51f9, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xf2, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xee, 4)]
[(ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0xf2, 4), (ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0xee, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47fb20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000158, 8) , (const, 0x1, 4), (unique, 0x10000158, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x105, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x101, 4)]
[(ram, 0x4c8870, 8) COPY (ram, 0x4c8870, 8), (ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x105, 4), (ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x101, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x121, 4)]
[(ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x121, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x47f99e, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0xffffffffffffffff, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x5f, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c8870, 8) COPY (ram, 0x4c8870, 8), (ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x5f, 4), (ram, 0x4c8870, 8) MULTIEQUAL (ram, 0x4c8870, 8) , (ram, 0x4c8870, 8) , (ram, 0x4c8870, 8) , (ram, 0x4c8870, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x126, 4)]
[(ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x126, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0x4afaf0, 8)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0xc, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x13f, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c8870, 8) COPY (ram, 0x4c8870, 8), (ram, 0x4c8870, 8) INDIRECT (ram, 0x4c8870, 8) , (const, 0x13f, 4), (ram, 0x4c8870, 8) MULTIEQUAL (ram, 0x4c8870, 8) , (ram, 0x4c8870, 8)]
[ ---  RETURN (const, 0x1, 4)]
