[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000144, 8), (unique, 0x10000144, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x257e02, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f00f0, 4) , (const, 0x0, 4)]
[(ram, 0x4f00f0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f00f0, 4) , (const, 0x0, 4)]
[(ram, 0x4f00f0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x257e25, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x113, 4)]
[(ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x113, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x113, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x113, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x113, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000119, 8), (unique, 0x10000119, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00f0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x3e, 4), (ram, 0x4f00f0, 4) MULTIEQUAL (ram, 0x4f00f0, 4) , (ram, 0x4f00f0, 4) , (ram, 0x4f00f0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x3e, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x3e, 4), (stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x3e, 4), (stack, 0xfffffffffffffff0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x257ed0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x257b80, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x257e6a, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4)]
[(ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0x5c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0x5c, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x5c, 4)]
[(unique, 0x10000091, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8) , (unique, 0x10000109, 8) , (register, 0x38, 8) , (unique, 0x10000101, 8) , (unique, 0x3800, 8) , (const, 0x1e, 8) , (const, 0x0, 8), (unique, 0x10000109, 8) PTRSUB (const, 0x0, 8) , (const, 0x250c70, 8), (unique, 0x10000101, 8) PTRSUB (const, 0x0, 8) , (const, 0x250c50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffec, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x10000091, 4) , (register, 0x10, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(ram, 0x4f00f0, 4) MULTIEQUAL (ram, 0x4f00f0, 4) , (ram, 0x4f00f0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x257e7e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000138, 4) COPY (unique, 0x10000129, 4), (unique, 0x10000129, 4) INT_ADD (ram, 0x4f00f0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x257ea0, 1) , (unique, 0x1000012d, 1), (unique, 0x1000012d, 1) INT_NOTEQUAL (unique, 0x10000129, 4) , (const, 0x0, 4), (unique, 0x10000129, 4) INT_ADD (ram, 0x4f00f0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe9, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe9, 4)]
[(stack, 0xffffffffffffffec, 4) INDIRECT (stack, 0xffffffffffffffec, 4) , (const, 0xe9, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xe9, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000111, 8), (unique, 0x10000111, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f00f0, 8)]
[(unique, 0x10000134, 4) COPY (ram, 0x4f00f0, 4), (ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0xe9, 4), (ram, 0x4f00f0, 4) INT_ADD (ram, 0x4f00f0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x10000140, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0xe9, 4)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f00f0, 4) COPY (unique, 0x1000013c, 4), (unique, 0x1000013c, 4) MULTIEQUAL (unique, 0x10000134, 4) , (unique, 0x10000138, 4)]
[ ---  CBRANCH (ram, 0x257ed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000140, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x257eb1, 1)]
[(register, 0x0, 4) INT_2COMP (unique, 0x100000d1, 4), (unique, 0x100000d1, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffec, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x257edf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000154, 8), (unique, 0x10000154, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xd8, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4f00f0, 4) COPY (ram, 0x4f00f0, 4), (ram, 0x4f00f0, 4) INDIRECT (ram, 0x4f00f0, 4) , (const, 0xd8, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd8, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4f00f0, 4) COPY (ram, 0x4f00f0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
