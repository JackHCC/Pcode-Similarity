[ ---  CBRANCH (ram, 0x2364e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7fb0, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x236507, 1)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0xf7, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf7, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0xf7, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000107, 8), (unique, 0x10000107, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7fb0, 8)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x38, 4), (ram, 0x4c7fb0, 4) MULTIEQUAL (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x38, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x38, 4), (stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23654a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x236290, 8) , (const, 0x1, 8)]
[(ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0x60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x60, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0x60, 4)]
[(unique, 0x10000090, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8) , (unique, 0x100000f7, 8) , (register, 0x38, 8) , (unique, 0x100000ef, 8) , (unique, 0x3800, 8) , (const, 0x1e, 8) , (const, 0x0, 8), (unique, 0x100000f7, 8) PTRSUB (const, 0x0, 8) , (const, 0x22fb80, 8), (unique, 0x100000ef, 8) PTRSUB (const, 0x0, 8) , (const, 0x22fb60, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffff4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0x10000090, 4)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(ram, 0x4c7fb0, 4) MULTIEQUAL (ram, 0x4c7fb0, 4) , (ram, 0x4c7fb0, 4)]
[ ---  CBRANCH (ram, 0x23655e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000123, 4) COPY (unique, 0x10000117, 4), (unique, 0x10000117, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x236580, 1) , (unique, 0x1000011b, 1), (unique, 0x1000011b, 1) INT_NOTEQUAL (unique, 0x10000117, 4) , (const, 0x0, 4), (unique, 0x10000117, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xd8, 4)]
[(stack, 0xfffffffffffffff4, 4) INDIRECT (stack, 0xfffffffffffffff4, 4) , (const, 0xd8, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7fb0, 8)]
[(unique, 0x1000011f, 4) COPY (ram, 0x4c7fb0, 4), (ram, 0x4c7fb0, 4) INDIRECT (ram, 0x4c7fb0, 4) , (const, 0xd8, 4), (ram, 0x4c7fb0, 4) INT_ADD (ram, 0x4c7fb0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x1000012b, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0xd8, 4)]
[(stack, 0xfffffffffffffff4, 4) MULTIEQUAL (stack, 0xfffffffffffffff4, 4) , (stack, 0xfffffffffffffff4, 4)]
[(ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c7fb0, 4) COPY (unique, 0x10000127, 4), (unique, 0x10000127, 4) MULTIEQUAL (unique, 0x1000011f, 4) , (unique, 0x10000123, 4)]
[ ---  CBRANCH (ram, 0x2365a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000012b, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x236591, 1)]
[(register, 0x0, 4) INT_2COMP (unique, 0x100000d0, 4), (unique, 0x100000d0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffff4, 4) , (const, 0x0, 4)]
[(ram, 0x4c7fb0, 4) COPY (ram, 0x4c7fb0, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
