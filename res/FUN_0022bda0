[(unique, 0x100001d4, 1) SUBPIECE (unique, 0x10000310, 4) , (const, 0x0, 4), (unique, 0x10000310, 4) INT_RIGHT (unique, 0x100003ef, 4) , (const, 0x18, 4), (unique, 0x100003ef, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003df, 8), (unique, 0x100003df, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x100001e1, 1) SUBPIECE (unique, 0x10000314, 4) , (const, 0x0, 4), (unique, 0x10000314, 4) INT_RIGHT (unique, 0x100003f3, 4) , (const, 0x18, 4), (unique, 0x100003f3, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003e7, 8), (unique, 0x100003e7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22bed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x10000358, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22be5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000360, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x10000368, 8), (unique, 0x10000368, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8)]
[ ---  CBRANCH (ram, 0x22be58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x10000368, 8), (unique, 0x10000368, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000360, 8)]
[ ---  CBRANCH (ram, 0x22c2bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100003ff, 8), (unique, 0x100003ff, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xc, 8) , (const, 0x1, 8)]
[(register, 0x8, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100003b0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22be8b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (register, 0x10, 1), (register, 0x30, 1) INT_RIGHT (unique, 0x100001d4, 1) , (const, 0x7, 4), (register, 0x10, 1) INT_RIGHT (unique, 0x1000040b, 1) , (const, 0x7, 4), (unique, 0x1000040b, 1) CAST (unique, 0x100001d3, 1), (unique, 0x100001d3, 1) INT_NEGATE (unique, 0x100001e0, 1), (unique, 0x100001e0, 1) SUBPIECE (unique, 0x10000320, 4) , (const, 0x0, 4), (unique, 0x10000320, 4) INT_RIGHT (unique, 0x10000407, 4) , (const, 0x18, 4), (unique, 0x10000407, 4) CAST (unique, 0xbc80, 4)]
[(unique, 0x100003b4, 4) COPY (register, 0x8, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x1000004f, 4), (unique, 0x1000004f, 4) MULTIEQUAL (unique, 0x100003b0, 4) , (unique, 0x100003b4, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x10000390, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22be93, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x10000398, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) MULTIEQUAL (unique, 0x10000390, 8) , (unique, 0x10000398, 8)]
[ ---  CBRANCH (ram, 0x22be90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000040c, 8), (unique, 0x1000040c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) MULTIEQUAL (unique, 0x10000390, 8) , (unique, 0x10000398, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x22bed0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000414, 8), (unique, 0x10000414, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x1, 8)]
[(register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100003b8, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22bec6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 1) , (register, 0x8, 1), (register, 0x38, 1) SUBPIECE (unique, 0x10000324, 4) , (const, 0x0, 4), (unique, 0x10000324, 4) INT_RIGHT (unique, 0x1000041d, 4) , (const, 0x1f, 4), (unique, 0x1000041d, 4) CAST (unique, 0xbc80, 4), (register, 0x8, 1) INT_RIGHT (unique, 0x1000041c, 1) , (const, 0x7, 4), (unique, 0x1000041c, 1) CAST (unique, 0x100001d5, 1), (unique, 0x100001d5, 1) INT_NEGATE (unique, 0x100001e1, 1)]
[(unique, 0x100003bc, 4) COPY (register, 0x30, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x10000060, 4), (unique, 0x10000060, 4) MULTIEQUAL (unique, 0x100003b8, 4) , (unique, 0x100003bc, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000421, 8), (unique, 0x10000421, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000429, 8), (unique, 0x10000429, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[(unique, 0x1000020f, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x22bde3, 1) , (unique, 0x1000021b, 1), (unique, 0x1000021b, 1) INT_SLESS (unique, 0xbc80, 4) , (unique, 0x10000217, 4), (unique, 0x10000217, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000439, 8), (unique, 0x10000439, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x20, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000431, 8), (unique, 0x10000431, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000020f, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000338, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x10000370, 8) COPY (unique, 0x1000020f, 8)]
[ ---  CBRANCH (ram, 0x22be16, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000217, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22bdf0, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) BOOL_AND (register, 0x206, 1) , (unique, 0xcf80, 1), (unique, 0xcf80, 1) INT_SLESSEQUAL (unique, 0x10000217, 4) , (unique, 0xbc80, 4), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0x10000217, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000451, 8), (unique, 0x10000451, 8) CAST (unique, 0x3100, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000449, 8), (unique, 0x10000449, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x20, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000441, 8), (unique, 0x10000441, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000348, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000461, 8), (unique, 0x10000461, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000380, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000459, 8), (unique, 0x10000459, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000020f, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x22be23, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000461, 8), (unique, 0x10000461, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000459, 8), (unique, 0x10000459, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000020f, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000340, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000471, 8), (unique, 0x10000471, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x10000350, 8), (unique, 0x10000350, 8) MULTIEQUAL (unique, 0x10000338, 8) , (unique, 0x10000340, 8) , (unique, 0x10000348, 8)]
[(unique, 0x10000378, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000469, 8), (unique, 0x10000469, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) COPY (unique, 0x10000388, 8), (unique, 0x10000388, 8) MULTIEQUAL (unique, 0x10000370, 8) , (unique, 0x10000378, 8) , (unique, 0x10000380, 8)]
[ ---  CBRANCH (ram, 0x22be10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000471, 8), (unique, 0x10000471, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000469, 8), (unique, 0x10000469, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x8, 8) COPY (unique, 0x10000350, 8), (register, 0x10, 8) COPY (unique, 0x10000388, 8), (unique, 0x10000350, 8) MULTIEQUAL (unique, 0x10000338, 8) , (unique, 0x10000340, 8) , (unique, 0x10000348, 8), (unique, 0x10000388, 8) MULTIEQUAL (unique, 0x10000370, 8) , (unique, 0x10000378, 8) , (unique, 0x10000380, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000479, 8), (unique, 0x10000479, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000491, 8), (unique, 0x10000491, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000020f, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22bf00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000489, 8), (unique, 0x10000489, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xc, 8) , (const, 0x1, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000481, 8), (unique, 0x10000481, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x1, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000020f, 8) , (register, 0x10, 8)]
[(register, 0x8, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100003a8, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22be51, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (register, 0x0, 1), (register, 0x38, 1) SUBPIECE (unique, 0x10000318, 4) , (const, 0x0, 4), (unique, 0x10000318, 4) INT_RIGHT (unique, 0x1000049e, 4) , (const, 0x1f, 4), (unique, 0x1000049e, 4) CAST (unique, 0xbc80, 4), (register, 0x0, 1) INT_RIGHT (unique, 0x1000049d, 1) , (const, 0x7, 4), (unique, 0x1000049d, 1) CAST (unique, 0x100001d1, 1), (unique, 0x100001d1, 1) INT_NEGATE (unique, 0x100001df, 1), (unique, 0x100001df, 1) SUBPIECE (unique, 0x1000031c, 4) , (const, 0x0, 4), (unique, 0x1000031c, 4) INT_RIGHT (unique, 0x10000499, 4) , (const, 0x18, 4), (unique, 0x10000499, 4) CAST (unique, 0xbc80, 4)]
[(unique, 0x100003ac, 4) COPY (register, 0x8, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x1000003e, 4), (unique, 0x1000003e, 4) MULTIEQUAL (unique, 0x100003a8, 4) , (unique, 0x100003ac, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22bf08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(register, 0x10, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x100003c0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22befd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (register, 0x8, 1), (register, 0x30, 1) INT_RIGHT (unique, 0x100001d4, 1) , (const, 0x7, 4), (register, 0x8, 1) INT_RIGHT (unique, 0x100004a2, 1) , (const, 0x7, 4), (unique, 0x100004a2, 1) CAST (unique, 0x100001d7, 1), (unique, 0x100001d7, 1) INT_NEGATE (unique, 0x100001e1, 1)]
[(unique, 0x100003c4, 4) COPY (register, 0x10, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x10000071, 4), (unique, 0x10000071, 4) MULTIEQUAL (unique, 0x100003c0, 4) , (unique, 0x100003c4, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x100004ab, 8), (unique, 0x100004ab, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22c255, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004a3, 8), (unique, 0x100004a3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffc7, 1) COPY (const, 0x0, 1)]
[(register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004c3, 8), (unique, 0x100004c3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004cb, 8), (unique, 0x100004cb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004b3, 8), (unique, 0x100004b3, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c2e6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004bb, 8), (unique, 0x100004bb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x88, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22c1cb, 1)]
[(register, 0xa0, 4) COPY (const, 0x0, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004d3, 8), (unique, 0x100004d3, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000328, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100003c8, 4) COPY (unique, 0xbc80, 4)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x100003c8, 4) , (register, 0x38, 4)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x22c170, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4), (register, 0x90, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004db, 8), (unique, 0x100004db, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000328, 8) , (register, 0x0, 8)]
[(unique, 0x1000021d, 1) COPY (const, 0x1, 1)]
[(register, 0x90, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22bf98, 1)]
[(unique, 0x1000021e, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x22bf98, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xff, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100004e3, 8), (unique, 0x100004e3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22bf98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100004ef, 8), (unique, 0x100004ef, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x98, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x98, 8) INT_SEXT (unique, 0x100004eb, 4), (unique, 0x100004eb, 4) CAST (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22bf98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x98, 4), (register, 0x98, 4) INT_SEXT (unique, 0x100004f7, 1), (unique, 0x100004f7, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(unique, 0x100003cc, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22bf83, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x100003d0, 4) COPY (register, 0xa0, 4)]
[(register, 0x88, 4) MULTIEQUAL (unique, 0x100003cc, 4) , (unique, 0x100003d0, 4)]
[(register, 0x200, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[(register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x88, 4) , (register, 0x90, 4)]
[(unique, 0x1000021c, 1) MULTIEQUAL (unique, 0x1000021e, 1) , (unique, 0x1000021e, 1) , (unique, 0x1000021e, 1) , (register, 0x200, 1) , (unique, 0x1000021d, 1)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22bfa6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22bf40, 1) , (unique, 0x1000021c, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(register, 0x88, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x90, 1) SUBPIECE (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x38, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000508, 8), (unique, 0x10000508, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000510, 8), (unique, 0x10000510, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x100004f8, 8), (unique, 0x100004f8, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c068, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000500, 8), (unique, 0x10000500, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (register, 0x90, 1) , (stack, 0xffffffffffffffc7, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000518, 8), (unique, 0x10000518, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x10000330, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003d8, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100001d9, 4) MULTIEQUAL (unique, 0x100003d8, 4) , (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x22c158, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4), (register, 0x88, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000520, 8), (unique, 0x10000520, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000330, 8) , (register, 0x8, 8)]
[(unique, 0x10000220, 1) COPY (const, 0x1, 1)]
[(register, 0x88, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x22c050, 1)]
[(unique, 0x10000221, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x22c050, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 4) , (const, 0xff, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000528, 8), (unique, 0x10000528, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22c050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000534, 8), (unique, 0x10000534, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x28, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x28, 8) INT_SEXT (unique, 0x10000530, 4), (unique, 0x10000530, 4) CAST (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22c050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (register, 0x28, 4), (register, 0x28, 4) INT_SEXT (unique, 0x1000053c, 1), (unique, 0x1000053c, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100003d4, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x22c034, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(register, 0x98, 4) COPY (const, 0x0, 4)]
[(register, 0x98, 4) MULTIEQUAL (unique, 0x100003d4, 4) , (register, 0x98, 4)]
[(register, 0x200, 1) INT_NOTEQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(unique, 0xbe00, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0xbe00, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x98, 4) , (register, 0x88, 4)]
[(unique, 0x1000021f, 1) MULTIEQUAL (unique, 0x10000221, 1) , (unique, 0x10000221, 1) , (unique, 0x10000221, 1) , (register, 0x200, 1) , (unique, 0x10000220, 1)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22c05e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x0, 4), (register, 0x38, 4) INT_ADD (unique, 0x100001d9, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22bfe8, 1) , (unique, 0x1000021f, 1)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) SUBPIECE (register, 0x88, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c09e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (register, 0x90, 1) , (stack, 0xffffffffffffffc7, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (register, 0x38, 4) , (stack, 0xffffffffffffffc0, 4)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0xa0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0xa0, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002a6, 8) , (const, 0x8, 8), (unique, 0x100002a6, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000d9, 8) , (const, 0x3, 8), (unique, 0x100000d9, 8) INT_MULT (register, 0x30, 8) , (const, 0x3, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x22c08e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x22c099, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000053d, 8), (unique, 0x1000053d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22c080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (register, 0x30, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22c0c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x10, 8) PTRADD (register, 0x0, 8) , (unique, 0x100002c6, 8) , (const, 0x8, 8), (unique, 0x100002c6, 8) INT_MULT (unique, 0x3880, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x100000f1, 8) , (const, 0x3, 8), (unique, 0x100000f1, 8) INT_MULT (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3800, 4), (unique, 0x3800, 4) INT_SUB (register, 0xa0, 4) , (const, 0x1, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa0, 4) MULTIEQUAL (register, 0xa0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x22c0be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22c0c9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000545, 8), (unique, 0x10000545, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x22c0b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x22c180, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 4) , (const, 0x0, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[ ---  CBRANCH (ram, 0x22c0d5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000054d, 8), (unique, 0x1000054d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x22c194, 1)]
[ ---  CBRANCH (ram, 0x22c190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bd, 2) , (const, 0x0, 2), (unique, 0x100001bd, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x2000, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000556, 8), (unique, 0x10000556, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000555, 1), (unique, 0x10000555, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22c1c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x22c1b7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bf, 2) , (const, 0x0, 2), (unique, 0x100001bf, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x8, 2)]
[(register, 0x0, 8) INT_SEXT (unique, 0x1000055e, 1), (unique, 0x1000055e, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22c1b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22c1c3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000055f, 8), (unique, 0x1000055f, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(unique, 0x10000143, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000143, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c13c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x38, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c1e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c13c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000567, 8), (unique, 0x10000567, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x22c0fc, 1)]
[ ---  CBRANCH (ram, 0x22c0f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bb, 2) , (const, 0x0, 2), (unique, 0x100001bb, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x2000, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000570, 8), (unique, 0x10000570, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000056f, 1), (unique, 0x1000056f, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c133, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x22c127, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001dd, 2) , (const, 0x0, 2), (unique, 0x100001dd, 2) INT_AND (unique, 0xbc00, 2) , (const, 0x8, 2)]
[(register, 0x10, 8) INT_SEXT (unique, 0x10000578, 1), (unique, 0x10000578, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c120, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c133, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x18, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2d, 1)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1) , (register, 0x8, 1)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c1e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x0, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x18, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x88, 4) MULTIEQUAL (register, 0x88, 4) , (register, 0x88, 4)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22c20c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 1) , (const, 0x0, 1), (register, 0x80, 1) INT_OR (stack, 0xffffffffffffffc7, 1) , (register, 0x8, 1), (register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1), (stack, 0xffffffffffffffc7, 1) MULTIEQUAL (stack, 0xffffffffffffffc7, 1) , (stack, 0xffffffffffffffc7, 1)]
[ ---  CBRANCH (ram, 0x22c2a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c2f6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x80, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x22c222, 1)]
[(register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000581, 1), (unique, 0x10000581, 1) CAST (stack, 0xffffffffffffffc7, 1)]
[(unique, 0x100003de, 1) COPY (stack, 0xffffffffffffffc7, 1)]
[ ---  CBRANCH (ram, 0x22c2b5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100003dd, 1) COPY (register, 0x80, 1)]
[ ---  BRANCH (ram, 0x22c222, 1)]
[ ---  CBRANCH (ram, 0x22c2c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x691, 4)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8), (ram, 0x4eaf20, 8) INDIRECT (ram, 0x4eaf20, 8) , (const, 0x691, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121290, 8) , (unique, 0x10000582, 8) , (unique, 0x1000058a, 8), (unique, 0x1000058a, 8) CAST (register, 0x30, 8), (unique, 0x10000582, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x22c2a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 4) , (const, 0x0, 4)]
[(register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_SEXT (unique, 0x10000592, 1), (unique, 0x10000592, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x100003dc, 1) COPY (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x22c222, 1)]
[(register, 0x80, 1) MULTIEQUAL (unique, 0x100003dc, 1) , (unique, 0x100003dd, 1) , (unique, 0x100003de, 1) , (register, 0x80, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22c28e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x22c2dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x22c22f, 1)]
[(register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (unique, 0x10000593, 1), (unique, 0x10000593, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x22c22f, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22c227, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SEXT (unique, 0x10000594, 1), (unique, 0x10000594, 1) CAST (register, 0x8, 1)]
[(register, 0x8, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x22c22f, 1)]
[(register, 0x80, 1) MULTIEQUAL (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1) , (register, 0x80, 1)]
[(register, 0x8, 1) MULTIEQUAL (register, 0x8, 1) , (register, 0x8, 1) , (unique, 0xbb00, 1) , (register, 0x8, 1)]
[ ---  CBRANCH (ram, 0x22c146, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SUB (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005a5, 8), (unique, 0x100005a5, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000059d, 8), (unique, 0x1000059d, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000595, 8), (unique, 0x10000595, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eaf20, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0x0, 4) INT_SUB (register, 0x0, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_SEXT (unique, 0x100005ae, 1), (unique, 0x100005ae, 1) CAST (register, 0x80, 1), (register, 0x0, 4) INT_SEXT (unique, 0x100005ad, 1), (unique, 0x100005ad, 1) CAST (register, 0x8, 1)]
[ ---  BRANCH (ram, 0x22c146, 1)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[(ram, 0x4eaf20, 8) COPY (ram, 0x4eaf20, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
