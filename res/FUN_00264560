[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000127, 8), (unique, 0x10000127, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x26461f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4eb430, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xec, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x1000008f, 8) , (unique, 0x10000087, 8) , (const, 0x11e, 4) , (unique, 0x10000097, 8), (unique, 0x10000097, 8) COPY (const, 0x2baef0, 8), (unique, 0x1000008f, 8) COPY (const, 0x2b745a, 8), (unique, 0x10000087, 8) COPY (const, 0x2b7445, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xec, 4)]
[(ram, 0x4f02e0, 8) COPY (ram, 0x4f02e0, 8), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xec, 4)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xec, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xec, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x264610, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f0460, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3f, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x3f, 4)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x3f, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x3f, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x3f, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x3f, 4)]
[(stack, 0xffffffffffffffdf, 1) INDIRECT (stack, 0xffffffffffffffdf, 1) , (const, 0x3f, 4), (stack, 0xffffffffffffffdf, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x3f, 4)]
[ ---  CBRANCH (ram, 0x264610, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x264320, 8) , (register, 0x38, 8) , (unique, 0x100000a7, 8) , (unique, 0x3800, 8), (unique, 0x100000a7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffdf, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffdf, 1) MULTIEQUAL (stack, 0xffffffffffffffdf, 1) , (stack, 0xffffffffffffffdf, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xe3, 4), (ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xe3, 4), (ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xe3, 4), (ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xe3, 4), (ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x2645f0, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x9f, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0x59, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x9f, 4), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0x59, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x9f, 4), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x59, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x9f, 4), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0x59, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (ram, 0x4f0458, 8), (unique, 0x3200, 8) PTRADD (register, 0x30, 8) , (const, 0x2f, 8) , (const, 0x8, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0x59, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x3, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x180, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) INT_SUB (unique, 0x1000013f, 8) , (unique, 0x10000147, 8), (unique, 0x10000147, 8) CAST (register, 0x38, 8), (unique, 0x1000013f, 8) CAST (register, 0x30, 8), (register, 0x38, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) INT_AND (unique, 0x1000012f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000012f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000107, 8) COPY (register, 0x30, 8), (register, 0x30, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) INT_SUB (unique, 0x10000157, 8) , (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) CAST (register, 0x8, 8), (unique, 0x10000157, 8) CAST (unique, 0x1000009f, 8), (unique, 0x1000009f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f02e0, 8), (register, 0x8, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) INT_SUB (unique, 0x1000013f, 8) , (unique, 0x10000147, 8), (unique, 0x10000147, 8) CAST (register, 0x38, 8), (unique, 0x1000013f, 8) CAST (register, 0x30, 8), (register, 0x38, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) INT_AND (unique, 0x1000012f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000012f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000117, 8) COPY (register, 0x38, 8), (register, 0x38, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) INT_AND (unique, 0x1000012f, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000012f, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x10000117, 8) , (unique, 0x1000011f, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000107, 8) , (unique, 0x1000010f, 8)]
[ ---  CBRANCH (ram, 0x2645ec, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xbc, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xbc, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xbc, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xbc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffdf, 1) MULTIEQUAL (stack, 0xffffffffffffffdf, 1) , (stack, 0xffffffffffffffdf, 1)]
[(ram, 0x4f0460, 8) MULTIEQUAL (ram, 0x4f0460, 8) , (ram, 0x4f0460, 8)]
[(ram, 0x4f0458, 8) MULTIEQUAL (ram, 0x4f0458, 8) , (ram, 0x4f0458, 8)]
[(ram, 0x4f02e0, 8) MULTIEQUAL (ram, 0x4f02e0, 8) , (ram, 0x4f02e0, 8)]
[(ram, 0x4eb430, 4) MULTIEQUAL (ram, 0x4eb430, 4) , (ram, 0x4eb430, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x26463e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffdf, 1) INDIRECT (stack, 0xffffffffffffffdf, 1) , (const, 0xdf, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xdf, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4), (ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xdf, 4)]
[(ram, 0x4f02e0, 8) COPY (ram, 0x4f02e0, 8), (ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xdf, 4)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8), (ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xdf, 4)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8), (ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xdf, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eb430, 4) COPY (ram, 0x4eb430, 4)]
[(ram, 0x4f02e0, 8) COPY (ram, 0x4f02e0, 8)]
[(ram, 0x4f0458, 8) COPY (ram, 0x4f0458, 8)]
[(ram, 0x4f0460, 8) COPY (ram, 0x4f0460, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eb430, 4) INDIRECT (ram, 0x4eb430, 4) , (const, 0xb9, 4)]
[(ram, 0x4f02e0, 8) INDIRECT (ram, 0x4f02e0, 8) , (const, 0xb9, 4)]
[(ram, 0x4f0458, 8) INDIRECT (ram, 0x4f0458, 8) , (const, 0xb9, 4)]
[(ram, 0x4f0460, 8) INDIRECT (ram, 0x4f0460, 8) , (const, 0xb9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x1000010f, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x100000f7, 8) , (const, 0x8, 8), (unique, 0x100000f7, 8) INT_ADD (unique, 0x100000ef, 8) , (const, 0x1, 8), (unique, 0x100000ef, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1)]
[(unique, 0x1000011f, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x100000d7, 8) , (const, 0x8, 8), (unique, 0x100000d7, 8) INT_ADD (unique, 0x100000cf, 8) , (const, 0x1, 8), (unique, 0x100000cf, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1)]
[(register, 0x8, 8) INT_SUB (register, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x2645e9, 1)]
