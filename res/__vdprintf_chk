[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdb8, 8)]
[ ---  CALL (ram, 0x18eb50, 8) , (register, 0x20, 8) , (const, 0x8000, 8) , (const, 0x0, 8) , (unique, 0x3c80, 8) , (unique, 0x100000f2, 8), (unique, 0x100000f2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7d60, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe98, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdb8, 8)]
[ ---  CALL (ram, 0x18c110, 8) , (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4b, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x43, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x51, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x4b, 4), (stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x43, 4)]
[(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x51, 4), (stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x4b, 4), (stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x43, 4)]
[(stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0x51, 4), (stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0x4b, 4), (stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0x43, 4), (stack, 0xfffffffffffffe40, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0x51, 4), (stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0x4b, 4), (stack, 0xfffffffffffffe90, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e82a0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x51, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x4b, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x43, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000013a, 8), (unique, 0x1000013a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2346af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18cde0, 8) , (register, 0x20, 8) , (register, 0x38, 4), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdb8, 8)]
[(register, 0xa0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x100, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0x100, 4)]
[(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x100, 4)]
[(stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0x100, 4)]
[(stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0x100, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x100, 4)]
[ ---  CALL (ram, 0x18d5c0, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x23467b, 1)]
[(register, 0x0, 4) INT_OR (register, 0x0, 4) , (const, 0x44, 4), (register, 0x0, 4) INT_AND (stack, 0xfffffffffffffdb8, 4) , (const, 0xffffeff3, 4)]
[ ---  CBRANCH (ram, 0x23463e, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x30, 4)]
[(unique, 0xbd00, 4) INT_OR (stack, 0xfffffffffffffe2c, 4) , (const, 0x4, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (register, 0x0, 4) , (const, 0x95, 4)]
[(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0x95, 4), (stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (stack, 0xfffffffffffffe2c, 4) , (unique, 0xbd00, 4)]
[(stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0x95, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x95, 4)]
[(register, 0x0, 4) CALL (ram, 0x15b390, 8) , (register, 0x20, 8) , (register, 0x10, 8) , (register, 0x8, 8)]
[(unique, 0x10000132, 8) COPY (stack, 0xfffffffffffffe90, 8), (stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0x95, 4)]
[ ---  CBRANCH (ram, 0x2346a8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (stack, 0xfffffffffffffe90, 8) , (const, 0xffffffffffb188a0, 8) , (const, 0x1, 8), (stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0x95, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0xfa, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xfa, 4)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x234673, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xca, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xca, 4), (stack, 0xfffffffffffffdb8, 4) MULTIEQUAL (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4)]
[(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xca, 4), (stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (stack, 0xfffffffffffffe2c, 4) , (stack, 0xfffffffffffffe2c, 4)]
[(stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0xca, 4), (stack, 0xfffffffffffffe40, 8) MULTIEQUAL (stack, 0xfffffffffffffe40, 8) , (stack, 0xfffffffffffffe40, 8)]
[(stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0xca, 4), (stack, 0xfffffffffffffe90, 8) MULTIEQUAL (stack, 0xfffffffffffffe90, 8) , (stack, 0xfffffffffffffe90, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xca, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x20, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000142, 8), (unique, 0x10000142, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000132, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffe90, 8) MULTIEQUAL (stack, 0xfffffffffffffe90, 8) , (stack, 0xfffffffffffffe90, 8)]
[(stack, 0xfffffffffffffe40, 8) MULTIEQUAL (stack, 0xfffffffffffffe40, 8) , (stack, 0xfffffffffffffe40, 8)]
[(stack, 0xfffffffffffffe2c, 4) MULTIEQUAL (stack, 0xfffffffffffffe2c, 4) , (stack, 0xfffffffffffffe2c, 4)]
[(stack, 0xfffffffffffffdb8, 4) MULTIEQUAL (stack, 0xfffffffffffffdb8, 4) , (stack, 0xfffffffffffffdb8, 4)]
[(register, 0x0, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0xa0, 4)]
[ ---  CBRANCH (ram, 0x2346bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000014a, 8), (unique, 0x1000014a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffdb8, 4) INDIRECT (stack, 0xfffffffffffffdb8, 4) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffe2c, 4) INDIRECT (stack, 0xfffffffffffffe2c, 4) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffe40, 8) INDIRECT (stack, 0xfffffffffffffe40, 8) , (const, 0xf5, 4)]
[(stack, 0xfffffffffffffe90, 8) INDIRECT (stack, 0xfffffffffffffe90, 8) , (const, 0xf5, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf5, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
