[(register, 0x18, 8) INT_AND (unique, 0x100000f9, 8) , (const, 0xffffffffffff, 8), (unique, 0x100000f9, 8) INT_ADD (unique, 0x1000017e, 8) , (register, 0x1208, 4), (unique, 0x1000017e, 8) INT_LEFT (unique, 0x10000176, 8) , (const, 0x20, 8), (unique, 0x10000176, 8) INT_SEXT (unique, 0x1000019e, 4), (unique, 0x1000019e, 4) CAST (register, 0x120c, 4)]
[(register, 0x30, 8) INT_AND (unique, 0x10000109, 8) , (const, 0xffffffffffff, 8), (unique, 0x10000109, 8) INT_ADD (unique, 0x1000018e, 8) , (register, 0x1228, 4), (unique, 0x1000018e, 8) INT_LEFT (unique, 0x10000186, 8) , (const, 0x20, 8), (unique, 0x10000186, 8) INT_SEXT (unique, 0x100001a2, 4), (unique, 0x100001a2, 4) CAST (register, 0x122c, 4)]
[(register, 0x88, 4) INT_AND (register, 0x88, 4) , (const, 0x7fff, 4), (register, 0x88, 4) INT_RIGHT (register, 0x122c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x299a50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x10, 4)]
[ ---  CBRANCH (ram, 0x299ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x299a2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x299a98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x18, 8) , (register, 0x1200, 8)]
[(unique, 0x100000c2, 1) INT_MULT (register, 0x206, 1) , (const, 0x2, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x299a37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x299a98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x18, 8) , (register, 0x1200, 8)]
[(register, 0x38, 1) MULTIEQUAL (unique, 0x100000c2, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x299a37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x299af0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x18, 8) , (register, 0x1200, 8)]
[ ---  CBRANCH (ram, 0x299b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x299a49, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x7fff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (const, 0x1, 1)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x299b08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[(register, 0x38, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x299a37, 1)]
[(register, 0x38, 1) COPY (const, 0x2, 1)]
[(register, 0x38, 1) COPY (const, 0x2, 1)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299b54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 4) , (const, 0x7fff, 4)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299a37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (register, 0x30, 8) , (register, 0x1220, 8)]
[ ---  CBRANCH (ram, 0x299a89, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x7fff, 4)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299b6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) INT_OR (register, 0x1200, 8) , (register, 0x18, 8)]
[(register, 0x38, 1) MULTIEQUAL (unique, 0x100000c2, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299b90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000016e, 4) , (const, 0x0, 4), (unique, 0x1000016e, 4) INT_AND (register, 0x120c, 4) , (const, 0x8000, 4)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x299a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x299a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 8) , (const, 0x0, 8), (register, 0x98, 8) INT_OR (register, 0x1220, 8) , (register, 0x30, 8)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299aab, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000172, 4) , (const, 0x0, 4), (unique, 0x10000172, 4) INT_AND (register, 0x122c, 4) , (const, 0x8000, 4)]
[(register, 0x38, 1) INT_OR (register, 0x38, 1) , (const, 0x1, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (unique, 0x100000c2, 1) , (register, 0x38, 1)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x299b0d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (register, 0x88, 4)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  CBRANCH (ram, 0x299b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x299b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1200, 8) , (register, 0x1220, 8)]
[(register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x299a45, 1)]
[(register, 0x0, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x299a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 1) , (unique, 0x100001aa, 1), (unique, 0x100001aa, 1) CAST (register, 0x30, 1), (register, 0x30, 1) INT_2COMP (unique, 0x100000c8, 1), (unique, 0x100000c8, 1) SUBPIECE (unique, 0x1000019a, 4) , (const, 0x0, 4), (unique, 0x1000019a, 4) INT_SRIGHT (unique, 0x100001a6, 4) , (const, 0x1f, 4), (unique, 0x100001a6, 4) CAST (register, 0x122c, 4), (register, 0x8, 1) SUBPIECE (unique, 0x10000196, 4) , (const, 0x0, 4), (unique, 0x10000196, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x1f, 4)]
[(register, 0x0, 1) COPY (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x299a45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (register, 0x1200, 8)]
[ ---  BRANCH (ram, 0x299a45, 1)]
[(register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1) , (register, 0x0, 1) , (register, 0x206, 1) , (register, 0x0, 1) , (register, 0x0, 1) , (register, 0x0, 1)]
[ ---  CBRANCH (ram, 0x299ab3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 1) , (const, 0x0, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (register, 0x0, 1)]
[ ---  CALL (ram, 0x299bb0, 8) , (register, 0x38, 1), (register, 0x38, 1) MULTIEQUAL (register, 0x38, 1) , (register, 0x38, 1)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 1), (register, 0x0, 1) COPY (register, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (register, 0x0, 1) , (register, 0x0, 1)]
