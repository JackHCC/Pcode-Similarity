[(unique, 0x10000239, 8) COPY (ram, 0x4eae68, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x37, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x37, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x37, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x37, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000245, 8), (unique, 0x10000245, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2658e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x211be0, 8) , (register, 0x38, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x53, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x53, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x53, 4)]
[ ---  CBRANCH (ram, 0x265910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2165d0, 8) , (register, 0x38, 4) , (const, 0x80045430, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x37c, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x37c, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x37c, 4), (stack, 0xffffffffffffffbc, 1) COPY (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x37c, 4)]
[(register, 0x10, 8) PTRADD (unique, 0x100001ce, 8) , (unique, 0x100000f6, 8) , (const, 0x1, 8), (unique, 0x100001ce, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbd, 8), (unique, 0x100000f6, 8) INT_2COMP (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000255, 8), (unique, 0x10000255, 8) CALL (ram, 0x1587b0, 8) , (stack, 0xffffffffffffffa4, 4) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[ ---  CBRANCH (ram, 0x2659e0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x10, 8) , (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000265, 8) , (unique, 0x100001fe, 8), (unique, 0x10000265, 8) CAST (unique, 0x10000206, 8), (unique, 0x10000206, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x100001fe, 8) INT_ADD (unique, 0x100000f6, 8) , (const, 0x6, 8), (unique, 0x100000f6, 8) INT_2COMP (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) CAST (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000255, 8), (unique, 0x10000255, 8) CALL (ram, 0x1587b0, 8) , (stack, 0xffffffffffffffa4, 4) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x7374702f7665642f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000285, 8) , (const, 0x2f, 2), (unique, 0x10000285, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3a2, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3a2, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x39e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x39b, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x3a2, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x3a2, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3a2, 4)]
[ ---  CALL (ram, 0x121160, 8) , (unique, 0x3800, 8) , (register, 0x0, 8) , (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) CAST (register, 0x10, 8), (unique, 0x3800, 8) CAST (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) INT_ADD (unique, 0x10000275, 8) , (const, 0x9, 8), (unique, 0x10000275, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2658ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x16, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000295, 8), (unique, 0x10000295, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000239, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x2659e0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0xb, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x361, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000029d, 8) , (const, 0x22, 4), (unique, 0x1000029d, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000239, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x22, 4)]
[ ---  BRANCH (ram, 0x2658ec, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7e, 4)]
[ ---  CBRANCH (ram, 0x2659d8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f7b0, 8) , (const, 0x1, 4) , (register, 0x38, 4) , (register, 0x8, 8)]
[(unique, 0x10000158, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x8, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x265850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffff000, 4), (register, 0x0, 4) SUBPIECE (unique, 0x10000221, 8) , (const, 0x0, 4), (unique, 0x10000221, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x20, 4), (register, 0x8, 4) INT_AND (unique, 0x10000150, 4) , (const, 0xfff, 4), (unique, 0x10000150, 4) SUBPIECE (unique, 0x10000219, 8) , (const, 0x0, 4), (unique, 0x10000219, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x8, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2658c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x26585f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 4) , (const, 0x40, 4), (unique, 0x3100, 4) INT_SUB (register, 0x28, 4) , (const, 0x80, 4), (register, 0x28, 4) INT_OR (register, 0x28, 4) , (register, 0x0, 4), (register, 0x28, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (register, 0x28, 8) INT_LEFT (unique, 0x100000da, 8) , (const, 0x8, 4), (unique, 0x100000da, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x14, 8), (register, 0x0, 4) INT_AND (unique, 0x10000158, 4) , (const, 0xff, 4)]
[ ---  CBRANCH (ram, 0x2658e0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x80, 4)]
[(register, 0x28, 4) INT_OR (register, 0x28, 4) , (register, 0x10, 4), (register, 0x28, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (register, 0x28, 8) INT_LEFT (unique, 0x100000c2, 8) , (const, 0x8, 4), (unique, 0x100000c2, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x14, 8), (register, 0x10, 4) INT_AND (unique, 0x10000158, 4) , (const, 0xff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (unique, 0x10000241, 4) , (const, 0x18b, 4), (unique, 0x10000241, 4) COPY (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18b, 4)]
[ ---  CBRANCH (ram, 0x2658e0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0xb0, 4), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000018e, 8), (unique, 0x1000018e, 8) COPY (const, 0x2bb7d0, 8), (register, 0xb0, 4) INT_RIGHT (register, 0x28, 4) , (const, 0x4, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 1), (unique, 0x3800, 8) CAST (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) INT_ADD (unique, 0x100002a5, 8) , (const, 0xa, 8), (unique, 0x100002a5, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x7974742f7665642f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b5, 8) , (unique, 0xbb00, 1), (unique, 0x100002b5, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000196, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0x10000196, 8) COPY (const, 0x2bb7d0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ba, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0xbb00, 1), (unique, 0x3800, 8) CAST (unique, 0x100002c5, 8), (unique, 0x100002c5, 8) INT_ADD (unique, 0x100002bd, 8) , (const, 0x9, 8), (unique, 0x100002bd, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000186, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0x10000186, 8) COPY (const, 0x2bb7b0, 8), (register, 0x28, 8) INT_ZEXT (register, 0x28, 4), (register, 0x28, 4) INT_AND (register, 0x28, 4) , (const, 0xf, 4)]
[ ---  BRANCH (ram, 0x265969, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1c1, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x1c1, 4), (stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c1, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2659d8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f760, 8) , (const, 0x1, 4) , (unique, 0x100002cd, 8) , (unique, 0x100002d5, 8), (unique, 0x100002d5, 8) CAST (register, 0x8, 8), (unique, 0x100002cd, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2658e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2000, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xf000, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x8, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x2659ca, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0xfffff000, 4), (register, 0x0, 4) SUBPIECE (unique, 0x10000231, 8) , (const, 0x0, 4), (unique, 0x10000231, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x20, 4), (register, 0x8, 4) INT_AND (unique, 0x10000168, 4) , (const, 0xfff, 4), (unique, 0x10000168, 4) SUBPIECE (unique, 0x10000229, 8) , (const, 0x0, 4), (unique, 0x10000229, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x8, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2659f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x2658e0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x40, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0xc0, 4), (register, 0x0, 4) INT_OR (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_LEFT (unique, 0x10000136, 8) , (const, 0x8, 4), (unique, 0x10000136, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x14, 8), (register, 0x8, 4) INT_AND (unique, 0x10000170, 4) , (const, 0xff, 4), (unique, 0x10000170, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2658e0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x0, 4) , (const, 0x8, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x88, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x280, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002dd, 8) , (unique, 0xbc80, 4), (unique, 0x100002dd, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000239, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x2658ec, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2bb, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e5, 8) , (const, 0x19, 4), (unique, 0x100002e5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000239, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x19, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ed, 8), (unique, 0x100002ed, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000239, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x2658ec, 1)]
[(stack, 0xffffffffffffffbc, 1) MULTIEQUAL (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1) , (stack, 0xffffffffffffffbc, 1)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (unique, 0xbc80, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x265a0f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002f5, 8), (unique, 0x100002f5, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x2b6, 4)]
[(stack, 0xffffffffffffffbc, 1) INDIRECT (stack, 0xffffffffffffffbc, 1) , (const, 0x2b6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2b6, 4)]
[ ---  RETURN (const, 0x1, 4)]
