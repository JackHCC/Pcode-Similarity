[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x38, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x43, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x39, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x43, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x39, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x43, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x43, 4), (stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x43, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x39, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000213, 8), (unique, 0x10000213, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000021b, 8), (unique, 0x1000021b, 8) CALL (ram, 0x2625e0, 8) , (const, 0x15, 8) , (unique, 0x1000019b, 8) , (unique, 0x100001a3, 8) , (unique, 0x3800, 8), (unique, 0x100001a3, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0260, 8), (unique, 0x1000019b, 8) COPY (const, 0x2b7064, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa4, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0x100001ff, 4) COPY (stack, 0xffffffffffffffa4, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x43, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x39, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x100001ff, 4) , (unique, 0x1000020f, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x26143d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x5a, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5a, 4)]
[ ---  CBRANCH (ram, 0x26143d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x262700, 8) , (const, 0x13, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (register, 0xb0, 8) , (const, 0x10, 8)]
[(register, 0xb8, 4) COPY (const, 0xfffffffe, 4)]
[(unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000223, 8), (unique, 0x10000223, 8) INT_ADD (register, 0x0, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x261540, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffffa4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000022b, 8), (unique, 0x1000022b, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[(register, 0x8, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x26146b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffac, 4) , (const, 0x1, 4), (stack, 0xffffffffffffffac, 4) SUBPIECE (unique, 0x100001d3, 16) , (const, 0x0, 4), (unique, 0x100001d3, 16) INT_RIGHT (unique, 0x5300, 16) , (const, 0x20, 4)]
[(register, 0x80, 8) INT_SEXT (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (unique, 0x100001e3, 16) , (const, 0x0, 4), (unique, 0x100001e3, 16) INT_RIGHT (unique, 0x5300, 16) , (const, 0x60, 4)]
[(unique, 0x3100, 8) CAST (unique, 0x10000233, 8), (unique, 0x10000233, 8) INT_ADD (register, 0x0, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (unique, 0x5300, 16) , (stack, 0xffffffffffffffa8, 16)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x2613f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (stack, 0xffffffffffffffa4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000023b, 8), (unique, 0x1000023b, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(unique, 0x1000020f, 4) COPY (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x261420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000d8, 4) , (const, 0x0, 4), (unique, 0x100000d8, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x261420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x5, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x121, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x121, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024b, 8) , (unique, 0xbd00, 4), (unique, 0x1000024b, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000243, 8), (unique, 0x10000243, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2615d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000253, 8), (unique, 0x10000253, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x209, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x209, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x209, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (unique, 0x1000020f, 4) , (const, 0x209, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x209, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x209, 4)]
[ ---  CALL (ram, 0x262050, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x26142c, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x1000020f, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x2615c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xffffffff, 4)]
[(register, 0xb0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13f, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x13f, 4), (ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x13f, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x13f, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x13f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x261528, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x2628a0, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x13, 8) , (unique, 0x3800, 8) , (const, 0x10, 8)]
[(ram, 0x4f0ad4, 4) COPY (const, 0x1, 4)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x26148e, 1)]
[ ---  CBRANCH (ram, 0x2614a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffac, 4) , (const, 0x1, 4), (stack, 0xffffffffffffffac, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1a3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a3, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x1a3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1a3, 4)]
[ ---  CBRANCH (ram, 0x261598, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x80, 8), (register, 0x80, 8) INT_SEXT (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) SUBPIECE (stack, 0xffffffffffffffa8, 16) , (const, 0xc, 8)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x201, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x201, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x201, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x201, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x201, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x201, 4)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x26148e, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1c5, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1c5, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1c5, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x1c5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1c5, 4)]
[ ---  CBRANCH (ram, 0x26155b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x80, 8), (register, 0x0, 8) CALL (ram, 0x261ba0, 8) , (register, 0x0, 4) , (register, 0x0, 8) , (register, 0x80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (unique, 0x5300, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025b, 8), (unique, 0x1000025b, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 8), (unique, 0x3100, 8) CAST (unique, 0x10000263, 8), (unique, 0x10000263, 8) INT_ADD (register, 0x30, 8) , (const, 0x30, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3100, 8)]
[(register, 0xb8, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x80, 8), (unique, 0x3100, 8) CAST (unique, 0x1000026b, 8), (unique, 0x1000026b, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x10000273, 8), (unique, 0x10000273, 8) INT_ADD (register, 0x30, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffffffffffff, 8), (unique, 0x3100, 8) CAST (unique, 0x1000027b, 8), (unique, 0x1000027b, 8) INT_ADD (register, 0x30, 8) , (const, 0x50, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000283, 8), (unique, 0x10000283, 8) INT_ADD (register, 0x30, 8) , (const, 0x40, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fa, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1f1, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ee, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1ea, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1e7, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1fa, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1f7, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1f4, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1f1, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1ee, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1ea, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1e7, 4), (ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000028b, 8), (unique, 0x1000028b, 8) INT_ADD (register, 0x30, 8) , (const, 0x48, 8)]
[ ---  BRANCH (ram, 0x261485, 1)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1de, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1de, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x1de, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1de, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (unique, 0x5300, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x2615b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(ram, 0x4f0ad4, 4) COPY (const, 0x1, 4)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x261485, 1)]
[(register, 0xb8, 4) COPY (const, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x171, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000293, 8) , (const, 0x0, 4), (unique, 0x10000293, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x261518, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0xffffffff, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x192, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x192, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x192, 4), (ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x192, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0x192, 4), (stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x192, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x210940, 8) , (register, 0x8, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x26148e, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x2613c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0xffffffffffffffff, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x2613b6, 1)]
[ ---  CBRANCH (ram, 0x261368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 4) , (const, 0xffffffff, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10b, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x10b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002a3, 8) , (unique, 0xbd00, 4), (unique, 0x100002a3, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000029b, 8), (unique, 0x1000029b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2615c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ab, 8), (unique, 0x100002ab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x1000020f, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb8, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x2613c5, 1)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x97, 4)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0x97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bb, 8) , (unique, 0xbd00, 4), (unique, 0x100002bb, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002b3, 8), (unique, 0x100002b3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x10000207, 4) COPY (stack, 0xffffffffffffffa4, 4)]
[ ---  CBRANCH (ram, 0x261416, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002c3, 8), (unique, 0x100002c3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xd4, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0xd4, 4), (ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xd4, 4), (stack, 0xffffffffffffffa4, 4) MULTIEQUAL (unique, 0x10000207, 4) , (unique, 0x1000020f, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xd4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd4, 4)]
[ ---  CALL (ram, 0x262050, 8) , (register, 0xb0, 8)]
[ ---  BRANCH (ram, 0x2613c5, 1)]
[(stack, 0xffffffffffffffa8, 16) MULTIEQUAL (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16) , (stack, 0xffffffffffffffa8, 16)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(ram, 0x4f0ad4, 4) MULTIEQUAL (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4) , (ram, 0x4f0ad4, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x2615e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002cb, 8), (unique, 0x100002cb, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xce, 4)]
[(stack, 0xffffffffffffffa8, 16) INDIRECT (stack, 0xffffffffffffffa8, 16) , (const, 0xce, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xce, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xce, 4)]
[(ram, 0x4f0ad4, 4) COPY (ram, 0x4f0ad4, 4), (ram, 0x4f0ad4, 4) INDIRECT (ram, 0x4f0ad4, 4) , (const, 0xce, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4f0ad4, 4) COPY (ram, 0x4f0ad4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
