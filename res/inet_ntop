[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000559, 8), (unique, 0x10000559, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x242c10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x2, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x843, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x843, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x843, 4)]
[ ---  CBRANCH (ram, 0x242cd0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000591, 8) , (register, 0xa0, 8), (unique, 0x10000591, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0xa0, 8) INT_ZEXT (register, 0x8, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (unique, 0x3800, 8) , (unique, 0x100002ef, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x100002ef, 8) COPY (const, 0x2ba828, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000589, 8), (unique, 0x10000589, 8) INT_ADD (unique, 0x10000581, 8) , (const, 0x2, 8), (unique, 0x10000581, 8) CAST (register, 0x30, 8), (register, 0x88, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000579, 8), (unique, 0x10000579, 8) INT_ADD (unique, 0x10000571, 8) , (const, 0x3, 8), (unique, 0x10000571, 8) CAST (register, 0x30, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000569, 8), (unique, 0x10000569, 8) INT_ADD (unique, 0x10000561, 8) , (const, 0x1, 8), (unique, 0x10000561, 8) CAST (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x85a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x85a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x85a, 4)]
[(register, 0x0, 8) CALL (ram, 0x121170, 8) , (register, 0x10, 8) , (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x2429ee, 1)]
[ ---  CBRANCH (ram, 0x242a20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0xa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x49, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000599, 8) , (const, 0x61, 4), (unique, 0x10000599, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff58, 4) COPY (register, 0x8, 4), (register, 0x8, 4) INT_ZEXT (unique, 0x10000221, 2), (unique, 0x10000221, 2) INT_ADD (unique, 0x100003e3, 2) , (unique, 0xbb00, 1), (unique, 0x100003e3, 2) INT_LEFT (unique, 0x100003e1, 2) , (const, 0x8, 2), (unique, 0x100003e1, 2) INT_SEXT (unique, 0x10000621, 1), (unique, 0x10000621, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a9, 8), (unique, 0x100005a9, 8) INT_ADD (unique, 0x100005a1, 8) , (const, 0x1, 8), (unique, 0x100005a1, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffff60, 4) COPY (register, 0x90, 4), (register, 0x90, 4) INT_ZEXT (unique, 0x10000223, 2), (unique, 0x10000223, 2) INT_ADD (unique, 0x100003e7, 2) , (unique, 0xbb00, 1), (unique, 0x100003e7, 2) INT_LEFT (unique, 0x100003e5, 2) , (const, 0x8, 2), (unique, 0x100003e5, 2) INT_SEXT (unique, 0x10000632, 1), (unique, 0x10000632, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) INT_ADD (unique, 0x100005d1, 8) , (const, 0x5, 8), (unique, 0x100005d1, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) INT_ADD (unique, 0x100005c1, 8) , (const, 0x4, 8), (unique, 0x100005c1, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffff5c, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000225, 2), (unique, 0x10000225, 2) INT_ADD (unique, 0x100003eb, 2) , (unique, 0xbb00, 1), (unique, 0x100003eb, 2) INT_LEFT (unique, 0x100003e9, 2) , (const, 0x8, 2), (unique, 0x100003e9, 2) INT_SEXT (unique, 0x10000633, 1), (unique, 0x10000633, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000062a, 8), (unique, 0x1000062a, 8) INT_ADD (unique, 0x10000622, 8) , (const, 0x3, 8), (unique, 0x10000622, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005b9, 8), (unique, 0x100005b9, 8) INT_ADD (unique, 0x100005b1, 8) , (const, 0x2, 8), (unique, 0x100005b1, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffff64, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000227, 2), (unique, 0x10000227, 2) INT_ADD (unique, 0x100003ef, 2) , (unique, 0xbb00, 1), (unique, 0x100003ef, 2) INT_LEFT (unique, 0x100003ed, 2) , (const, 0x8, 2), (unique, 0x100003ed, 2) INT_SEXT (unique, 0x10000654, 1), (unique, 0x10000654, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000064c, 8), (unique, 0x1000064c, 8) INT_ADD (unique, 0x10000644, 8) , (const, 0x7, 8), (unique, 0x10000644, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000063c, 8), (unique, 0x1000063c, 8) INT_ADD (unique, 0x10000634, 8) , (const, 0x6, 8), (unique, 0x10000634, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffff68, 4) COPY (register, 0x88, 4), (register, 0x88, 4) INT_ZEXT (unique, 0x10000229, 2), (unique, 0x10000229, 2) INT_ADD (unique, 0x100003f3, 2) , (unique, 0xbb00, 1), (unique, 0x100003f3, 2) INT_LEFT (unique, 0x100003f1, 2) , (const, 0x8, 2), (unique, 0x100003f1, 2) INT_SEXT (unique, 0x10000665, 1), (unique, 0x10000665, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000065d, 8), (unique, 0x1000065d, 8) INT_ADD (unique, 0x10000655, 8) , (const, 0x9, 8), (unique, 0x10000655, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) INT_ADD (unique, 0x100005e1, 8) , (const, 0x8, 8), (unique, 0x100005e1, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffff6c, 4) COPY (register, 0x28, 4), (register, 0x28, 4) INT_ZEXT (unique, 0x10000677, 2), (unique, 0x10000677, 2) CAST (unique, 0x1000022b, 2), (unique, 0x1000022b, 2) INT_ADD (unique, 0x100003f7, 2) , (unique, 0xbb00, 1), (unique, 0x100003f7, 2) INT_LEFT (unique, 0x100003f5, 2) , (const, 0x8, 2), (unique, 0x100003f5, 2) INT_SEXT (unique, 0x10000676, 1), (unique, 0x10000676, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000066e, 8), (unique, 0x1000066e, 8) INT_ADD (unique, 0x10000666, 8) , (const, 0xb, 8), (unique, 0x10000666, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) INT_ADD (unique, 0x100005f1, 8) , (const, 0xa, 8), (unique, 0x100005f1, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffff70, 4) COPY (register, 0x30, 4), (register, 0x30, 4) INT_ZEXT (unique, 0x1000022d, 2), (unique, 0x1000022d, 2) INT_ADD (unique, 0x100003fb, 2) , (unique, 0xbb00, 1), (unique, 0x100003fb, 2) INT_LEFT (unique, 0x100003f9, 2) , (const, 0x8, 2), (unique, 0x100003f9, 2) INT_SEXT (unique, 0x10000689, 1), (unique, 0x10000689, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000681, 8), (unique, 0x10000681, 8) INT_ADD (unique, 0x10000679, 8) , (const, 0xc, 8), (unique, 0x10000679, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000609, 8), (unique, 0x10000609, 8) INT_ADD (unique, 0x10000601, 8) , (const, 0xd, 8), (unique, 0x10000601, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffff74, 4) COPY (register, 0x38, 4), (register, 0x38, 4) INT_ZEXT (unique, 0x1000022f, 2), (unique, 0x1000022f, 2) INT_ADD (unique, 0x100003ff, 2) , (unique, 0xbb00, 1), (unique, 0x100003ff, 2) INT_LEFT (unique, 0x100003fd, 2) , (const, 0x8, 2), (unique, 0x100003fd, 2) INT_SEXT (unique, 0x1000069a, 1), (unique, 0x1000069a, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000692, 8), (unique, 0x10000692, 8) INT_ADD (unique, 0x1000068a, 8) , (const, 0xe, 8), (unique, 0x1000068a, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000619, 8), (unique, 0x10000619, 8) INT_ADD (unique, 0x10000611, 8) , (const, 0xf, 8), (unique, 0x10000611, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242c60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000221, 2) , (const, 0x0, 2), (unique, 0x10000221, 2) INT_ADD (unique, 0x100003e3, 2) , (unique, 0xbb00, 1), (unique, 0x100003e3, 2) INT_LEFT (unique, 0x100003e1, 2) , (const, 0x8, 2), (unique, 0x100003e1, 2) INT_SEXT (unique, 0x10000621, 1), (unique, 0x10000621, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a9, 8), (unique, 0x100005a9, 8) INT_ADD (unique, 0x100005a1, 8) , (const, 0x1, 8), (unique, 0x100005a1, 8) CAST (register, 0x30, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x242e40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000225, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x0, 4)]
[(register, 0x8, 4) COPY (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x242adc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000223, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x2, 4)]
[(register, 0xb0, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x242cfd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000227, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0x10, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x242c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000223, 2) , (const, 0x0, 2)]
[(register, 0xb0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242cf2, 1)]
[ ---  CBRANCH (ram, 0x242ce8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000225, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x2, 4)]
[(unique, 0x10000515, 4) COPY (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x242c80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000223, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100004c9, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x242ef8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000227, 2) , (const, 0x0, 2)]
[ ---  CBRANCH (ram, 0x242f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000229, 2) , (const, 0x0, 2)]
[(register, 0xb0, 4) COPY (const, 0x3, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242b00, 1)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x10000511, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0x10000515, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x242e63, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000227, 2) , (const, 0x0, 2)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242ed0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000229, 2) , (const, 0x0, 2)]
[ ---  CBRANCH (ram, 0x242d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x242cb0, 1)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x10000511, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x10, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x242eb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000223, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x242f10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000227, 2) , (const, 0x0, 2)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100004c9, 4) , (register, 0x8, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242e6d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000229, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x242b11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(unique, 0x10000549, 4) COPY (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x242f37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000229, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x3, 4)]
[(unique, 0x100004f1, 4) COPY (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242f42, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x242f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x242d0e, 1)]
[(unique, 0x100004e1, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000549, 4) , (register, 0x10, 4)]
[(unique, 0x10000505, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242d45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x242d4f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000022d, 2) , (const, 0x0, 2)]
[(register, 0xb0, 4) COPY (const, 0x5, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242d30, 1)]
[ ---  CBRANCH (ram, 0x242f20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000227, 2) , (const, 0x0, 2)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x2, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242d02, 1)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100004f5, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x242b00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000229, 2) , (const, 0x0, 2)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100004f1, 4) , (unique, 0x100004f5, 4) , (register, 0x18, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100004cd, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x10000549, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x10000519, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x242cb0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100004cd, 4) , (register, 0x10, 4)]
[(unique, 0x10000521, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x1000052d, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242b1e, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESSEQUAL (register, 0x18, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100004dd, 4) COPY (register, 0x10, 4)]
[(unique, 0x10000501, 4) COPY (register, 0x0, 4)]
[(unique, 0x10000531, 4) COPY (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242d45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(unique, 0x100004e9, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x1000050d, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(unique, 0x100004b5, 4) COPY (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x242d52, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000022d, 2) , (const, 0x0, 2)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x242f90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000229, 2) , (const, 0x0, 2)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242e6d, 1)]
[(unique, 0x100004e5, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0xb0, 4)]
[(unique, 0x10000509, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242d45, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x5, 4)]
[(unique, 0x10000539, 4) COPY (register, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(unique, 0x100004ed, 4) COPY (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x242d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x4, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242cb0, 1)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x10000519, 4) , (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100004cd, 4) , (register, 0x10, 4) , (register, 0xb0, 4) , (register, 0x10, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x1000053d, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x18, 4) , (register, 0x0, 4)]
[(unique, 0x100003b8, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100003bc, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x100004d5, 4) COPY (unique, 0x100003c0, 4), (unique, 0x100003c0, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0x100004f9, 4) COPY (unique, 0x100003c4, 4), (unique, 0x100003c4, 4) MULTIEQUAL (unique, 0x10000539, 4) , (unique, 0x1000053d, 4)]
[ ---  CBRANCH (ram, 0x242cb7, 1) , (unique, 0x100003b7, 1), (unique, 0x100003b7, 1) INT_NOTEQUAL (unique, 0x1000022d, 2) , (const, 0x0, 2)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x100003bc, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100004d5, 4) , (unique, 0x100004b5, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100004f9, 4) , (unique, 0x1000050d, 4) , (register, 0x18, 4)]
[(register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x100003b8, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[ ---  BRANCH (ram, 0x242b36, 1)]
[(unique, 0x10000491, 4) COPY (unique, 0x100003b8, 4)]
[(unique, 0x100004b1, 4) COPY (unique, 0x100003bc, 4)]
[ ---  CBRANCH (ram, 0x242d52, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESSEQUAL (unique, 0x100003b8, 4) , (unique, 0x100003c4, 4)]
[ ---  CBRANCH (ram, 0x242cc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100003c0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x1000049d, 4) COPY (unique, 0x100003c4, 4)]
[(unique, 0x100004bd, 4) COPY (unique, 0x100003c0, 4)]
[(unique, 0x1000051d, 4) COPY (register, 0x10, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x100004dd, 4) , (unique, 0x100004e1, 4) , (unique, 0x100004e5, 4) , (unique, 0x100004e9, 4) , (unique, 0x100004ed, 4) , (register, 0xb0, 4)]
[(unique, 0x10000529, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000501, 4) , (unique, 0x10000505, 4) , (unique, 0x10000509, 4) , (unique, 0x1000050d, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x100002ad, 4) MULTIEQUAL (unique, 0x1000051d, 4) , (unique, 0x10000521, 4) , (unique, 0x10000521, 4)]
[(unique, 0x100002b1, 4) COPY (unique, 0x10000535, 4), (unique, 0x10000535, 4) MULTIEQUAL (unique, 0x10000529, 4) , (unique, 0x1000052d, 4) , (unique, 0x10000531, 4)]
[ ---  CBRANCH (ram, 0x242b2b, 1) , (unique, 0x100002ac, 1), (unique, 0x100002ac, 1) INT_EQUAL (unique, 0x1000022d, 2) , (const, 0x0, 2)]
[(unique, 0x10000541, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0x100004b1, 4) , (unique, 0x100004b5, 4) , (unique, 0x100004b1, 4) , (unique, 0x100004bd, 4) , (register, 0x10, 4) , (unique, 0x100002ad, 4)]
[(unique, 0x1000054d, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000491, 4) , (unique, 0x1000050d, 4) , (unique, 0x10000491, 4) , (unique, 0x1000049d, 4) , (register, 0x18, 4) , (unique, 0x100002b1, 4)]
[ ---  CBRANCH (ram, 0x242e98, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000022f, 2) , (const, 0x0, 2)]
[ ---  CBRANCH (ram, 0x242e0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0xffffffff, 4)]
[(unique, 0x1000027f, 1) COPY (const, 0x0, 1)]
[(unique, 0x100004a9, 4) COPY (register, 0x18, 4)]
[ ---  BRANCH (ram, 0x242b56, 1)]
[ ---  CBRANCH (ram, 0x242ea6, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x242e0e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0xffffffff, 4)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x242e1d, 1)]
[(register, 0x18, 4) COPY (const, 0x1, 4)]
[(register, 0xb0, 4) COPY (const, 0x6, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x100002ad, 4) , (register, 0x10, 4)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100002b1, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x242e00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000022f, 2) , (const, 0x0, 2)]
[(unique, 0x10000459, 4) COPY (register, 0xb0, 4)]
[(unique, 0x10000479, 4) COPY (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242e0e, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_LESSEQUAL (register, 0x18, 4) , (register, 0x0, 4)]
[(unique, 0x1000047d, 4) COPY (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x242e0a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4)]
[(unique, 0x10000461, 4) COPY (register, 0x10, 4)]
[(unique, 0x10000481, 4) COPY (register, 0x0, 4)]
[(register, 0xa8, 1) BOOL_OR (unique, 0xd080, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (unique, 0xd080, 1) INT_LESS (register, 0x0, 4) , (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(unique, 0x1000046d, 4) COPY (register, 0x10, 4)]
[(unique, 0x10000471, 4) COPY (register, 0xb0, 4)]
[(unique, 0x1000048d, 4) COPY (register, 0x0, 4)]
[(unique, 0x100004a1, 4) COPY (register, 0x18, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x2430ad, 1) , (unique, 0x100003d1, 1), (unique, 0x100003d1, 1) BOOL_AND (unique, 0x1000023f, 1) , (unique, 0x100003d3, 1), (unique, 0x100003d3, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x1000023f, 1) INT_LESSEQUAL (register, 0x18, 4) , (register, 0x0, 4), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4)]
[(unique, 0x10000280, 1) COPY (const, 0x1, 1)]
[(unique, 0x10000475, 4) COPY (register, 0xb0, 4), (register, 0xb0, 4) MULTIEQUAL (unique, 0x10000459, 4) , (unique, 0x10000459, 4) , (unique, 0x10000461, 4) , (unique, 0x10000541, 4) , (unique, 0x10000541, 4) , (unique, 0x1000046d, 4)]
[(unique, 0x100004a5, 4) COPY (register, 0x18, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000479, 4) , (unique, 0x1000047d, 4) , (unique, 0x10000481, 4) , (unique, 0x1000054d, 4) , (unique, 0x1000054d, 4) , (unique, 0x1000048d, 4)]
[ ---  CBRANCH (ram, 0x242b56, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_LESS (register, 0x18, 4) , (const, 0x2, 4), (register, 0x18, 4) MULTIEQUAL (unique, 0x10000479, 4) , (unique, 0x1000047d, 4) , (unique, 0x10000481, 4) , (unique, 0x1000054d, 4) , (unique, 0x1000054d, 4) , (unique, 0x1000048d, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0xb0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x1000027c, 1) COPY (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x242b5f, 1)]
[(register, 0xb0, 4) MULTIEQUAL (unique, 0x10000471, 4) , (unique, 0x10000475, 4) , (register, 0xb0, 4)]
[(unique, 0x1000027d, 1) MULTIEQUAL (register, 0xa8, 1) , (unique, 0x10000280, 1) , (unique, 0x1000027f, 1)]
[ ---  CBRANCH (ram, 0x242d88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x5, 4), (register, 0x18, 4) COPY (unique, 0x100004ad, 4), (unique, 0x100004ad, 4) MULTIEQUAL (unique, 0x100004a1, 4) , (unique, 0x100004a5, 4) , (unique, 0x100004a9, 4)]
[(unique, 0x10000279, 1) MULTIEQUAL (unique, 0x1000027d, 1) , (unique, 0x1000027c, 1)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242fc2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x6, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0xb0, 4) , (const, 0x6, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242fe4, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x1000069b, 4) , (unique, 0x1000069f, 4), (unique, 0x1000069f, 4) CAST (register, 0xb0, 4), (unique, 0x1000069b, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x242fe4, 1) , (unique, 0x1000027a, 1), (unique, 0x1000027a, 1) BOOL_NEGATE (unique, 0x10000279, 1)]
[ ---  CBRANCH (ram, 0x243028, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (unique, 0x100006a3, 4) , (unique, 0x100006a7, 4), (unique, 0x100006a7, 4) CAST (register, 0xa0, 4), (unique, 0x100006a3, 4) CAST (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x2430a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x45e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(unique, 0x10000429, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x242ffe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x24304e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x47f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x47f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x47f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) PTRADD (register, 0x28, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0x28, 8) , (unique, 0x100002e7, 8) , (register, 0x10, 8), (unique, 0x100002e7, 8) COPY (const, 0x2b6ad9, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000036f, 8) , (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x1000036f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000429, 8) , (unique, 0x10000429, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x243019, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (register, 0xb0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x243019, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 4) INT_ADD (register, 0xb0, 4) , (register, 0x18, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242b93, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100006ab, 4) , (unique, 0x100006af, 4), (unique, 0x100006af, 4) CAST (register, 0xb0, 4), (unique, 0x100006ab, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x242b93, 1) , (unique, 0x1000027b, 1), (unique, 0x1000027b, 1) BOOL_NEGATE (unique, 0x10000279, 1)]
[ ---  CBRANCH (ram, 0x242d70, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (unique, 0x100006b3, 4) , (unique, 0x100006b7, 4), (unique, 0x100006b7, 4) CAST (register, 0xa0, 4), (unique, 0x100006b3, 4) CAST (unique, 0x3400, 4)]
[ ---  CBRANCH (ram, 0x242f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x366, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(unique, 0x10000451, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x37b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x37b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x37b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) PTRADD (register, 0xb8, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0xb8, 8) , (unique, 0x100002d7, 8) , (register, 0x10, 8), (unique, 0x100002d7, 8) COPY (const, 0x2b6ad9, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x10000317, 8) , (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x10000317, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000451, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242bbe, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (register, 0xb0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x40b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x242bbe, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(unique, 0x3100, 4) INT_ADD (register, 0xb0, 4) , (const, 0x5, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x3800, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242db4, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0x100006bb, 4) , (unique, 0x100006bf, 4), (unique, 0x100006bf, 4) CAST (register, 0xb0, 4), (unique, 0x100006bb, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x242db4, 1) , (unique, 0x1000027e, 1), (unique, 0x1000027e, 1) BOOL_NEGATE (unique, 0x1000027d, 1)]
[ ---  CBRANCH (ram, 0x242e30, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESSEQUAL (unique, 0x100006c3, 4) , (unique, 0x100006c7, 4), (unique, 0x100006c7, 4) CAST (register, 0xa0, 4), (unique, 0x100006c3, 4) CAST (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x242fba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x55a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(unique, 0x10000439, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x242dd2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa0, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x243040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x242dd2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0xffff, 4)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4bf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4bf, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x4bf, 4), (stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4bf, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x242cd0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x1000070b, 8) , (register, 0x10, 8), (unique, 0x1000070b, 8) CAST (register, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (const, 0x4a, 4), (register, 0x10, 4) INT_SUB (unique, 0x100002a4, 4) , (register, 0x28, 4), (register, 0x28, 4) SUBPIECE (register, 0x28, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (unique, 0x3800, 8) , (unique, 0x100002f7, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x100002f7, 8) COPY (const, 0x2ba828, 8), (register, 0x80, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000703, 8), (unique, 0x10000703, 8) INT_ADD (unique, 0x100006fb, 8) , (const, 0xe, 8), (unique, 0x100006fb, 8) CAST (register, 0x30, 8), (register, 0x88, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006f3, 8), (unique, 0x100006f3, 8) INT_ADD (unique, 0x100006eb, 8) , (const, 0xf, 8), (unique, 0x100006eb, 8) CAST (register, 0x30, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff78, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006e3, 8), (unique, 0x100006e3, 8) INT_ADD (unique, 0x100006db, 8) , (const, 0xd, 8), (unique, 0x100006db, 8) CAST (register, 0x30, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006d3, 8), (unique, 0x100006d3, 8) INT_ADD (unique, 0x100006cb, 8) , (const, 0xc, 8), (unique, 0x100006cb, 8) CAST (register, 0x30, 8), (unique, 0x100002a4, 4) SUBPIECE (register, 0x20, 8) , (const, 0x0, 4), (register, 0x28, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4e8, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x4e8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4e8, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121050, 8) , (register, 0x28, 8) , (unique, 0x3800, 8)]
[ ---  BRANCH (ram, 0x242bd2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x57b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x57b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x57b, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x0, 8) PTRADD (register, 0x28, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x165000, 8) , (register, 0x28, 8) , (unique, 0x100002df, 8) , (register, 0x10, 8), (unique, 0x100002df, 8) COPY (const, 0x2b6ad9, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000034f, 8) , (register, 0xa0, 8) , (const, 0x4, 8), (unique, 0x1000034f, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000439, 8) , (unique, 0x10000439, 8) , (unique, 0x10000439, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242ded, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 4) , (register, 0xa0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5b8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x242ded, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242da0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x8, 8), (register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(unique, 0x10000401, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000419, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242be4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 4) , (const, 0xffffffff, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000409, 8) COPY (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000421, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x242be4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0x8, 4), (register, 0x18, 4) INT_ADD (register, 0x18, 4) , (register, 0xb0, 4), (register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3bc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x3a, 1)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000411, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3d5, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000401, 8) , (unique, 0x10000409, 8) , (unique, 0x10000411, 8)]
[ ---  CBRANCH (ram, 0x242cd0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x10000713, 4) , (register, 0x8, 4), (unique, 0x10000713, 4) CAST (register, 0x10, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000121, 4) , (unique, 0x10000129, 4), (unique, 0x10000121, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (unique, 0x10000129, 4) SUBPIECE (stack, 0xffffffffffffff48, 8) , (const, 0x0, 4), (stack, 0xffffffffffffff48, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000419, 8) , (unique, 0x10000421, 8) , (register, 0x10, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3ec, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x3ec, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3ec, 4)]
[(register, 0x0, 8) CALL (ram, 0x121170, 8) , (register, 0x10, 8) , (stack, 0xffffffffffffff48, 8)]
[ ---  BRANCH (ram, 0x2429ee, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3f1, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000717, 8) , (const, 0x1c, 4), (unique, 0x10000717, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2429ee, 1)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2430a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000071f, 8), (unique, 0x1000071f, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7e, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
