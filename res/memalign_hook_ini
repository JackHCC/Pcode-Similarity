[(ram, 0x4c5780, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426889, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (ram, 0x4c56e4, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1b, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1b, 4)]
[(stack, 0x0, 1) INDIRECT (stack, 0x0, 1) , (const, 0x1b, 4)]
[(stack, 0x1, 7) INDIRECT (stack, 0x1, 7) , (const, 0x1b, 4)]
[ ---  CALL (ram, 0x425560, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000016f, 8) INT_ADD (unique, 0x100001d7, 8) , (stack, 0x0, 1), (unique, 0x100001d7, 8) INT_LEFT (unique, 0x100001cf, 8) , (const, 0x8, 8), (unique, 0x100001cf, 8) INT_SEXT (unique, 0x100001f7, 7), (unique, 0x100001f7, 7) CAST (stack, 0x1, 7), (stack, 0x0, 1) MULTIEQUAL (stack, 0x0, 1) , (stack, 0x0, 1), (stack, 0x1, 7) MULTIEQUAL (stack, 0x1, 7) , (stack, 0x1, 7)]
[ ---  CBRANCH (ram, 0x426980, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5780, 8) , (const, 0x0, 8), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x268, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x268, 4)]
[ ---  RETURN (const, 0x1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000206, 8), (unique, 0x10000206, 8) CALLIND (unique, 0x100001fe, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (unique, 0x1000016f, 8), (unique, 0x100001fe, 8) CAST (ram, 0x4c5780, 8)]
[ ---  CBRANCH (ram, 0x426960, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (const, 0x11, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x25e, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x25e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x426550, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x426918, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x426a40, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (const, 0x8000000000000000, 8) , (register, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0x16, 4), (unique, 0x4f00, 8) CAST (unique, 0x1000020e, 8), (unique, 0x1000020e, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x255, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x255, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001ef, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x426b37, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x100001e7, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4268b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x426950, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100000d7, 8) , (register, 0x38, 8), (unique, 0x100000d7, 8) INT_MULT (register, 0xa0, 8) , (const, 0x2, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100000d7, 8) , (register, 0xa0, 8)]
[(unique, 0x100001df, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) COPY (const, 0x20, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100001df, 8) , (unique, 0x100001e7, 8) , (unique, 0x100001ef, 8) , (unique, 0x100000d7, 8)]
[ ---  CBRANCH (ram, 0x426990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x57, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x57, 4)]
[ ---  CBRANCH (ram, 0x426970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000021e, 8), (unique, 0x1000021e, 8) CALL (ram, 0x424fb0, 8) , (unique, 0x100001b9, 8) , (register, 0xa0, 8) , (register, 0x30, 8), (unique, 0x100001b9, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000ad, 8) , (const, 0x0, 8), (unique, 0x100000ad, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000022e, 8), (unique, 0x1000022e, 8) INT_ADD (unique, 0x10000226, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x10000226, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000b5, 8) , (const, 0x0, 8), (unique, 0x100000b5, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x426b18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000023e, 8), (unique, 0x1000023e, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x10000236, 8) , (const, 0x10, 8), (unique, 0x10000236, 8) CAST (register, 0x0, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000191, 8) , (unique, 0x10000189, 8) , (const, 0xce8, 8) , (unique, 0x100001a9, 8), (unique, 0x100001a9, 8) COPY (const, 0x49c228, 8), (unique, 0x10000191, 8) COPY (const, 0x49c018, 8), (unique, 0x10000189, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xa5, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xa5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000246, 8), (unique, 0x10000246, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100001c1, 8) , (register, 0x110, 8) , (const, 0x1, 8), (unique, 0x100001c1, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cd, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1cd, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1cd, 4)]
[ ---  CBRANCH (ram, 0x4269bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000024e, 8), (unique, 0x1000024e, 8) CALL (ram, 0x421c80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1ea, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1f1, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1ea, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1f1, 4), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1ea, 4)]
[ ---  CBRANCH (ram, 0x426ae0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000025e, 8), (unique, 0x1000025e, 8) CALL (ram, 0x424fb0, 8) , (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x10000256, 8), (unique, 0x10000256, 8) CALL (ram, 0x422050, 8) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x30, 8), (unique, 0x3880, 8) INT_ADD (register, 0xa0, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x4269eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426a56, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000266, 8), (unique, 0x10000266, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1c4, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1c4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1c9, 4)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x1c9, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x1c9, 4)]
[ ---  CALL (ram, 0x421390, 8) , (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4269bd, 1)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xed, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x1, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0xf3, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0xf3, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[ ---  CBRANCH (ram, 0x426ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000026e, 8), (unique, 0x1000026e, 8) CALL (ram, 0x424fb0, 8) , (register, 0x28, 8) , (register, 0xa0, 8) , (register, 0x30, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x198, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x191, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x198, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x191, 4), (ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x198, 4), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x191, 4), (ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000027e, 8), (unique, 0x1000027e, 8) CALL (ram, 0x424fb0, 8) , (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0x30, 8), (register, 0x0, 8) CAST (unique, 0x10000276, 8), (unique, 0x10000276, 8) CALL (ram, 0x4225f0, 8) , (register, 0x28, 8) , (register, 0x30, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x0, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4269eb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x80, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x426aee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000286, 8), (unique, 0x10000286, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x16e, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x16e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4269eb, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x1, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x4269eb, 1)]
[(ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x114, 4)]
[(ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x114, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(ram, 0x4c5780, 8) MULTIEQUAL (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8) , (ram, 0x4c5780, 8)]
[(ram, 0x4c56e4, 4) MULTIEQUAL (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4) , (ram, 0x4c56e4, 4)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x0, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x426908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000ff, 8) , (const, 0x0, 8), (unique, 0x100000ff, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000296, 8), (unique, 0x10000296, 8) INT_ADD (unique, 0x1000028e, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000028e, 8) CAST (register, 0x80, 8)]
[(register, 0x10, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  CBRANCH (ram, 0x426a14, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000107, 8) , (const, 0x0, 8), (unique, 0x10000107, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100002a6, 8), (unique, 0x100002a6, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x1000029e, 8) , (const, 0x10, 8), (unique, 0x1000029e, 8) CAST (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x426908, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100002ae, 8) , (register, 0x28, 8), (unique, 0x100002ae, 8) CAST (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000199, 8) , (unique, 0x10000181, 8) , (const, 0xcfb, 8) , (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) COPY (const, 0x49c228, 8), (unique, 0x10000199, 8) COPY (const, 0x49c078, 8), (unique, 0x10000181, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4), (ram, 0x4c56e4, 4) INDIRECT (ram, 0x4c56e4, 4) , (const, 0x15e, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8), (ram, 0x4c5780, 8) INDIRECT (ram, 0x4c5780, 8) , (const, 0x15e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c56e4, 4) COPY (ram, 0x4c56e4, 4)]
[(ram, 0x4c5780, 8) COPY (ram, 0x4c5780, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x80, 8)]
