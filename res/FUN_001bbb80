[ ---  CBRANCH (ram, 0x1bbca0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000266, 4) , (const, 0x0, 4), (unique, 0x10000266, 4) CAST (register, 0x30, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000156, 4) INT_MULT (unique, 0x1000014e, 4) , (const, 0x3, 4), (unique, 0x1000014e, 4) INT_SDIV (register, 0x90, 4) , (const, 0x3, 4), (register, 0x90, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffff47, 4)]
[ ---  CBRANCH (ram, 0x1bbc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[(register, 0x38, 4) MULTIEQUAL (unique, 0x10000221, 4) , (register, 0x38, 4)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x10000225, 4) , (unique, 0x10000156, 4)]
[ ---  CBRANCH (ram, 0x1bbbc8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x40, 4), (register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x1000021c, 4) , (register, 0x30, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x1bbc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1bbca3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xff, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1bbc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000026a, 8), (unique, 0x1000026a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1bbe00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x3, 4)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x2c100, 4) , (unique, 0x2c100, 4)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x2c400, 4) , (unique, 0x2c400, 4)]
[ ---  CBRANCH (ram, 0x1bbe08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x1bbd20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000272, 8), (unique, 0x10000272, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000272, 8), (unique, 0x10000272, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1bbc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000272, 8), (unique, 0x10000272, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1bbdb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x0, 4)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x2c100, 4) , (unique, 0x2c100, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x2c400, 4) , (unique, 0x2c400, 4)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x1bbdc1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1bbdeb, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1bbdc5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1bbd20, 1) , (unique, 0x1000024b, 1), (unique, 0x1000024b, 1) BOOL_NEGATE (register, 0x206, 1)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1bbc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x2c100, 4) , (unique, 0x2c100, 4)]
[(register, 0x8, 4) MULTIEQUAL (unique, 0x2c400, 4) , (unique, 0x2c400, 4)]
[(register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7, 4), (register, 0x0, 4) INT_RIGHT (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x2bf80, 4) , (unique, 0x2bf80, 4)]
[ ---  CBRANCH (ram, 0x1bbcd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x1bbd0c, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1bbd16, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1bbcdf, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x1bbcd5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 4) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x1bbcd5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x1bbcdf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x1bbd20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x1bbce9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x1bbd20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x4, 4)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x38, 4) INT_SUB (register, 0x38, 4) , (register, 0x28, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  CBRANCH (ram, 0x1bbd5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (register, 0x28, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3ff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x18, 4) , (const, 0xc, 4), (register, 0x10, 4) INT_MULT (register, 0x10, 4) , (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x10, 4) INT_MULT (register, 0x10, 4) , (register, 0x0, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_AND (register, 0x18, 4) , (const, 0xfff, 4), (register, 0x10, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x16, 4)]
[ ---  CBRANCH (ram, 0x1bbda2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1bbe33, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (register, 0x18, 4) , (const, 0x1, 4), (register, 0x18, 4) INT_AND (register, 0x18, 4) , (const, 0xfff, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001b3, 8) , (unique, 0x100001a3, 8) , (const, 0xc0, 4) , (unique, 0x100001c3, 8), (unique, 0x100001c3, 8) COPY (const, 0x2bb3c0, 8), (unique, 0x100001b3, 8) COPY (const, 0x2b50dd, 8), (unique, 0x100001a3, 8) COPY (const, 0x2b50b0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) INT_RIGHT (register, 0x18, 4) , (const, 0x16, 4)]
[(unique, 0x2c100, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c080, 8), (unique, 0x2c080, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[(unique, 0x2c400, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2c380, 8), (unique, 0x2c380, 8) PTRADD (unique, 0x2ae80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x1bbc80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) INT_AND (unique, 0x2bf80, 4) , (const, 0x1f, 4), (unique, 0x2bf80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x2ae80, 8), (unique, 0x2ae80, 8) CAST (unique, 0x10000282, 8), (unique, 0x10000282, 8) CALLOTHER (const, 0x2d, 4) , (const, 0x4, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1bbc19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x49, 4)]
[ ---  CBRANCH (ram, 0x1bbc19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x1bbc90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0xf, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1bbc90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x6, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x88, 8)]
[(register, 0x28, 4) COPY (const, 0x9, 4)]
[ ---  BRANCH (ram, 0x1bbc19, 1)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0xfffffffd, 4)]
[(register, 0x28, 4) COPY (const, 0x6, 4)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000024e, 8) COPY (register, 0x98, 8), (register, 0x98, 8) COPY (const, 0x44, 8)]
[(register, 0x200, 1) INT_LESSEQUAL (unique, 0x1000028a, 1) , (register, 0x18, 1), (unique, 0x1000028a, 1) CAST (unique, 0xba80, 1), (register, 0x18, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x1000017b, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x1000017b, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af9e0, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x98, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x1000024e, 8) , (unique, 0x10000256, 8) , (unique, 0x1000025e, 8)]
[ ---  CBRANCH (ram, 0x1bbc58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 1) , (unique, 0xba80, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (register, 0x18, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (unique, 0x3b80, 8) PTRADD (unique, 0x1000017b, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x1000017b, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af9e0, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3400, 8) , (const, 0x1, 4), (unique, 0x3400, 8) INT_ADD (register, 0x10, 8) , (register, 0x98, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8) , (register, 0x10, 8), (register, 0x98, 8) MULTIEQUAL (unique, 0x1000024e, 8) , (unique, 0x10000256, 8) , (unique, 0x1000025e, 8)]
[ ---  CBRANCH (ram, 0x1bbd47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (register, 0x28, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x1000028b, 1), (unique, 0x1000028b, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000193, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x10000193, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af9e3, 8)]
[(register, 0x38, 4) INT_SUB (register, 0x38, 4) , (register, 0x28, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  CBRANCH (ram, 0x1bbd8a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (register, 0x28, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0xb9, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000019b, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x1000019b, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af9e4, 8)]
[ ---  CBRANCH (ram, 0x1bbdaf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x1bbe52, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000294, 1), (unique, 0x10000294, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000018b, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x1000018b, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af9e2, 8)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100001bb, 8) , (unique, 0x100001ab, 8) , (const, 0xf0, 4) , (unique, 0x100001cb, 8), (unique, 0x100001cb, 8) COPY (const, 0x2bb3c0, 8), (unique, 0x100001bb, 8) COPY (const, 0x2b50dd, 8), (unique, 0x100001ab, 8) COPY (const, 0x2b50b0, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000295, 1), (unique, 0x10000295, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000183, 8) , (unique, 0x3a80, 8) , (const, 0x1, 8), (unique, 0x10000183, 8) PTRSUB (const, 0x0, 8) , (const, 0x2af9e1, 8)]
[ ---  CBRANCH (ram, 0x1bbbd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x1, 1)]
[ ---  CBRANCH (ram, 0x1bbc48, 1) , (register, 0x200, 1)]
[(unique, 0x10000256, 8) COPY (register, 0x98, 8)]
[ ---  CBRANCH (ram, 0x1bbc28, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x98, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(unique, 0x1000025e, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1bbbd4, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (register, 0x10, 8)]
[(unique, 0x10000221, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(unique, 0x10000225, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[ ---  CBRANCH (ram, 0x1bbbdf, 1) , (unique, 0x10000220, 1), (unique, 0x10000220, 1) INT_EQUAL (unique, 0x1000021c, 4) , (const, 0x0, 4), (unique, 0x1000021c, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
