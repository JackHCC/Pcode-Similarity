[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31, 4)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x31, 4)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x31, 4)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x31, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x31, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x31, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x31, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001be, 8), (unique, 0x100001be, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2266b4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x17e950, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x226659, 1)]
[ ---  CBRANCH (ram, 0x226510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ee790, 4) , (const, 0x0, 4)]
[(ram, 0x4ee790, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee790, 4) , (const, 0x0, 4)]
[(ram, 0x4ee790, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x226533, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x157, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x157, 4)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x157, 4)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x157, 4)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x157, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x157, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x157, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x157, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000160, 8), (unique, 0x10000160, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee790, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee790, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (ram, 0x4ee790, 4) , (ram, 0x4ee790, 4)]
[(ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x226690, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec908, 8) , (const, 0x0, 8), (ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x147, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x147, 4)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x147, 4)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x147, 4), (ram, 0x4ee788, 8) COPY (const, 0x400, 8)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x147, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x147, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x147, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x147, 4)]
[(register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (const, 0x400, 8)]
[ ---  BRANCH (ram, 0x226543, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee790, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (ram, 0x4ee790, 4)]
[(ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8)]
[(ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000018e, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa0, 8)]
[ ---  BRANCH (ram, 0x226579, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000014f, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (unique, 0x10000147, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000143, 4)]
[(ram, 0x4ee790, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (unique, 0x1000013f, 4)]
[(ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (unique, 0x10000137, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x10000127, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x1000011f, 8)]
[ ---  CBRANCH (ram, 0x22660b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec908, 8) , (const, 0x0, 8), (ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (unique, 0x1000012f, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x7a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x7a, 4)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x7a, 4)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x7a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7a, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x7a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x7a, 4)]
[(unique, 0x10000196, 8) COPY (ram, 0x4ec908, 8), (ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x7a, 4)]
[ ---  CBRANCH (ram, 0x226680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) CALL (ram, 0x2279f0, 8) , (register, 0x38, 8) , (unique, 0x10000158, 8) , (ram, 0x4ec908, 8) , (ram, 0x4ee788, 8) , (unique, 0x3800, 8), (unique, 0x10000158, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee740, 8)]
[ ---  CBRANCH (ram, 0x226614, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ec908, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8e, 4)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x8e, 4)]
[(ram, 0x4ee788, 8) INDIRECT (unique, 0x3200, 8) , (const, 0x8e, 4), (unique, 0x3200, 8) INT_ADD (ram, 0x4ee788, 8) , (const, 0x400, 8)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x8e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x8e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8e, 4)]
[ ---  CBRANCH (ram, 0x226558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (ram, 0x4ec908, 8) , (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (ram, 0x4ee788, 8) , (const, 0x400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12b, 4)]
[(ram, 0x4ec908, 8) INDIRECT (unique, 0x100001aa, 8) , (const, 0x12b, 4), (unique, 0x100001aa, 8) COPY (register, 0x0, 8)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x12b, 4)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x12b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12b, 4)]
[(register, 0x0, 4) CALL (ram, 0x17f500, 8) , (register, 0x38, 8) , (unique, 0x100001c6, 8), (unique, 0x100001c6, 8) CAST (unique, 0x3800, 8)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0xa1, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0x10000196, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d6, 8) , (unique, 0xbc80, 4), (unique, 0x100001d6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000018e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ce, 8), (unique, 0x100001ce, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000018e, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaa, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xaa, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa1, 4)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0xaa, 4), (ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0xa7, 4), (ram, 0x4ec908, 8) COPY (const, 0x0, 8)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0xaa, 4), (ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0xa7, 4), (ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0xa1, 4)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0xaa, 4), (ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0xa7, 4), (ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0xa1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xaa, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa7, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xaa, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xaa, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa1, 4)]
[(register, 0x0, 4) CALL (ram, 0x17f500, 8) , (register, 0x38, 8) , (unique, 0x100001de, 8), (unique, 0x100001de, 8) CAST (unique, 0x3800, 8)]
[(unique, 0x1000011f, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000127, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x1000012f, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8)]
[(unique, 0x10000137, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8)]
[(unique, 0x1000013f, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (ram, 0x4ee790, 4)]
[(unique, 0x10000143, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x10000147, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x1000014f, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x226600, 1) , (unique, 0x1000011e, 1), (unique, 0x1000011e, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ec908, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000014f, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000143, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee790, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (unique, 0x1000013f, 4) , (ram, 0x4ee790, 4)]
[(ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (unique, 0x10000137, 8) , (ram, 0x4ee788, 8)]
[(ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (unique, 0x10000127, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x1000011f, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4ee790, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (ram, 0x4ee790, 4)]
[(ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8)]
[(ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000018e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x22662d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100001b6, 4) COPY (unique, 0x10000180, 4), (unique, 0x10000180, 4) INT_ADD (ram, 0x4ee790, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x22664f, 1) , (unique, 0x10000184, 1), (unique, 0x10000184, 1) INT_NOTEQUAL (unique, 0x10000180, 4) , (const, 0x0, 4), (unique, 0x10000180, 4) INT_ADD (ram, 0x4ee790, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x112, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x112, 4)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x112, 4)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x112, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x112, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x112, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x112, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000168, 8), (unique, 0x10000168, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee790, 8)]
[(unique, 0x100001a6, 4) COPY (register, 0x10, 4), (register, 0x10, 4) INDIRECT (const, 0x0, 4) , (const, 0x112, 4)]
[(unique, 0x100001b2, 4) COPY (ram, 0x4ee790, 4), (ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x112, 4), (ram, 0x4ee790, 4) INT_ADD (ram, 0x4ee790, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd8, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0xd8, 4), (ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8)]
[(ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0xd8, 4), (ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8)]
[(ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0xd8, 4), (ram, 0x4ee790, 4) COPY (unique, 0x100001ba, 4), (unique, 0x100001ba, 4) MULTIEQUAL (unique, 0x100001b2, 4) , (unique, 0x100001b6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xd8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001ee, 8) , (register, 0x10, 4), (unique, 0x100001ee, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x1000018e, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (register, 0x10, 4) MULTIEQUAL (unique, 0x100001a6, 4) , (unique, 0xbc80, 4)]
[(unique, 0x1000019e, 8) COPY (stack, 0xffffffffffffffa0, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee790, 4) MULTIEQUAL (ram, 0x4ee790, 4) , (ram, 0x4ee790, 4)]
[(ram, 0x4ee788, 8) MULTIEQUAL (ram, 0x4ee788, 8) , (ram, 0x4ee788, 8)]
[(ram, 0x4ec908, 8) MULTIEQUAL (ram, 0x4ec908, 8) , (ram, 0x4ec908, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000019e, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2266b8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001f6, 8), (unique, 0x100001f6, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4ec908, 8) COPY (ram, 0x4ec908, 8)]
[(ram, 0x4ee788, 8) COPY (ram, 0x4ee788, 8)]
[(ram, 0x4ee790, 4) COPY (ram, 0x4ee790, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x103, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x103, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x103, 4)]
[(ram, 0x4ec908, 8) COPY (ram, 0x4ec908, 8), (ram, 0x4ec908, 8) INDIRECT (ram, 0x4ec908, 8) , (const, 0x103, 4)]
[(ram, 0x4ee788, 8) COPY (ram, 0x4ee788, 8), (ram, 0x4ee788, 8) INDIRECT (ram, 0x4ee788, 8) , (const, 0x103, 4)]
[(ram, 0x4ee790, 4) COPY (ram, 0x4ee790, 4), (ram, 0x4ee790, 4) INDIRECT (ram, 0x4ee790, 4) , (const, 0x103, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x103, 4)]
[ ---  RETURN (const, 0x1, 4)]
