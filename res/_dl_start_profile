[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd28, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd28, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd28, 8)]
[ ---  CBRANCH (ram, 0x485e40, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000500, 8) , (const, 0x8, 8), (unique, 0x10000500, 8) INT_MULT (register, 0x8, 8) , (const, 0x7, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000809, 8), (unique, 0x10000809, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c8850, 8) , (const, 0x55, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000801, 8), (unique, 0x10000801, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c8850, 8) , (const, 0x57, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xfffffffffffffd50, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x48581a, 1)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(register, 0x98, 8) INT_ADD (ram, 0x4c6118, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x90, 8) INT_2COMP (ram, 0x4c6118, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x10000751, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x485805, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x100000001, 8), (register, 0x10, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1ffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(unique, 0x10000711, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4857f4, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x8, 8), (register, 0xa0, 8) INT_AND (unique, 0xbd80, 8) , (register, 0x90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x10000719, 8) COPY (register, 0xa0, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000711, 8) , (unique, 0x10000719, 8)]
[(unique, 0x10000759, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x485805, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (register, 0x90, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (register, 0x98, 8), (register, 0x10, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x10000761, 8) COPY (register, 0x10, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000751, 8) , (unique, 0x10000759, 8) , (unique, 0x10000761, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4857d8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x7, 8) , (const, 0x8, 8)]
[(ram, 0x4c7f84, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c7f48, 4) COPY (const, 0x5, 4)]
[ ---  CBRANCH (ram, 0x485c30, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 4) , (const, 0x32, 4), (register, 0x10, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) INT_DIV (register, 0x10, 8) , (const, 0x19, 8), (register, 0x10, 8) INT_RIGHT (unique, 0x1000015f, 8) , (const, 0x2, 4), (unique, 0x1000015f, 8) INT_MULT (register, 0x18, 8) , (const, 0x3, 8), (register, 0x18, 8) INT_SUB (register, 0xa0, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_AND (register, 0x8, 8) , (const, 0xfffffffffffffffc, 8), (register, 0xa0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (stack, 0xfffffffffffffd50, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x3, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4c8850, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (stack, 0xfffffffffffffd50, 8) MULTIEQUAL (stack, 0xfffffffffffffd50, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x485f7c, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0x100001, 4)]
[(register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x4, 4), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000811, 8), (unique, 0x10000811, 8) INT_ADD (register, 0xa8, 8) , (const, 0x48, 8), (register, 0xa8, 8) INT_MULT (register, 0x10, 8) , (const, 0x140, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x48589a, 1)]
[(ram, 0x4c7f64, 4) COPY (const, 0x100000, 4)]
[(stack, 0xfffffffffffffd40, 8) COPY (const, 0x1000000, 8)]
[(stack, 0xfffffffffffffd48, 8) COPY (const, 0x14000048, 8)]
[ ---  BRANCH (ram, 0x48589a, 1)]
[(ram, 0x4c7f64, 4) COPY (const, 0x32, 4)]
[(stack, 0xfffffffffffffd40, 8) COPY (const, 0x320, 8)]
[(stack, 0xfffffffffffffd48, 8) COPY (const, 0x3ec8, 8)]
[(unique, 0x10000701, 8) COPY (ram, 0x4c87b0, 8), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x1aa, 4)]
[(unique, 0x10000709, 8) COPY (ram, 0x4c87d0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1cc, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1aa, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d2, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cc, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1d2, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1cc, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x1d2, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x1cc, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x1d2, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x1cc, 4), (ram, 0x4c7f50, 8) INDIRECT (unique, 0x1000076d, 8) , (const, 0x1aa, 4), (unique, 0x1000076d, 8) COPY (register, 0x18, 8)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x1d2, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x1cc, 4), (ram, 0x4c7f58, 8) INDIRECT (register, 0x8, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x1d2, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x1cc, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x1d2, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x1cc, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x1aa, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4) , (register, 0x10, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x1d2, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x1cc, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x1d2, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x1cc, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x1d2, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x1cc, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x1d2, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x1cc, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x1d2, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x1cc, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x1aa, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x1d2, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x1cc, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x1d2, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x1cc, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1d2, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1cc, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1aa, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x1d2, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x1cc, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x1aa, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x1aa, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x1aa, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8) , (register, 0x10, 8)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8) , (unique, 0x3100, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x1aa, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd58, 4) COPY (const, 0x6e6f6d67, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd5c, 4) COPY (const, 0x1ffff, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd60, 8) COPY (const, 0x0, 8)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd68, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (register, 0x8, 8) , (const, 0x1aa, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x1aa, 4), (stack, 0xfffffffffffffd80, 8) COPY (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (register, 0x0, 4) , (const, 0x1aa, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (register, 0x18, 8) , (const, 0x2, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (register, 0x0, 4) , (const, 0x1cc, 4), (register, 0x0, 4) CALL (ram, 0x48c460, 8)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd90, 8) COPY (const, 0x73646e6f636573, 8)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd98, 4) COPY (const, 0x0, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd9c, 2) COPY (const, 0x0, 2)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd9e, 1) COPY (const, 0x0, 1)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x1d2, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x1cc, 4), (stack, 0xfffffffffffffd9f, 1) COPY (const, 0x73, 1)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x1d2, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x1cc, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x1aa, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x1d2, 4), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x1cc, 4), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x1aa, 4)]
[(register, 0x30, 8) PTRADD (unique, 0x10000530, 8) , (unique, 0x1000018b, 8) , (const, 0x1, 8), (unique, 0x10000530, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffd28, 8), (unique, 0x1000018b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (ram, 0x4c87d0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (ram, 0x4c87b0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1cc, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1aa, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x1aa, 4)]
[(unique, 0x100001ab, 4) SUBPIECE (unique, 0x3a00, 8) , (const, 0x0, 4), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (register, 0x0, 8) , (const, 0x21, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (ram, 0x4c87d0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (ram, 0x4c87b0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1cc, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x1aa, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x1aa, 4)]
[(unique, 0x100007d1, 8) COPY (register, 0x20, 8)]
[(unique, 0x1000049e, 8) MULTIEQUAL (unique, 0x100007d1, 8) , (unique, 0x100007d9, 8)]
[(unique, 0x100004a6, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x485971, 1) , (unique, 0x10000495, 1), (unique, 0x10000495, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x30, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000049e, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000821, 8) , (unique, 0xbe00, 8), (unique, 0x10000821, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000819, 8), (unique, 0x10000819, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x1000049e, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000049e, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x100007d9, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000049e, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x100001b3, 8) , (const, 0x1, 8), (unique, 0x100001b3, 8) INT_2COMP (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x485cd8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (unique, 0x100001ab, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000831, 8) , (unique, 0xbe00, 8), (unique, 0x10000831, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000829, 8), (unique, 0x10000829, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x100004a6, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x485983, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000841, 8) , (const, 0x485997, 8), (unique, 0x10000841, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000548, 8) , (const, 0x1, 8), (unique, 0x10000548, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2f, 1), (register, 0x0, 8) CAST (unique, 0x10000849, 8), (unique, 0x10000849, 8) CALL (ram, 0x401090, 8) , (register, 0xb0, 8) , (unique, 0x10000701, 8), (register, 0xb0, 8) INT_AND (unique, 0x10000839, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000839, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000540, 8) , (const, 0x1, 8), (unique, 0x10000540, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000851, 8) , (const, 0x4859a6, 8), (unique, 0x10000851, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000550, 8) , (const, 0x1, 8), (unique, 0x10000550, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x656c69666f72702e, 8), (register, 0x0, 8) CAST (unique, 0x10000859, 8), (unique, 0x10000859, 8) CALL (ram, 0x401090, 8) , (unique, 0x3100, 8) , (unique, 0x10000709, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CAST (unique, 0x10000849, 8), (unique, 0x10000849, 8) CALL (ram, 0x401090, 8) , (register, 0xb0, 8) , (unique, 0x10000701, 8), (register, 0xb0, 8) INT_AND (unique, 0x10000839, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000839, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000540, 8) , (const, 0x1, 8), (unique, 0x10000540, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000861, 8) , (const, 0x0, 1), (unique, 0x10000861, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000859, 8), (unique, 0x10000859, 8) CALL (ram, 0x401090, 8) , (unique, 0x3100, 8) , (unique, 0x10000709, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CAST (unique, 0x10000849, 8), (unique, 0x10000849, 8) CALL (ram, 0x401090, 8) , (register, 0xb0, 8) , (unique, 0x10000701, 8), (register, 0xb0, 8) INT_AND (unique, 0x10000839, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000839, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000540, 8) , (const, 0x1, 8), (unique, 0x10000540, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xf, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000869, 8) , (const, 0x4859cb, 8), (unique, 0x10000869, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000558, 8) , (const, 0x1, 8), (unique, 0x10000558, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x26d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x257, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x24f, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x26d, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x260, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x25c, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x257, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x252, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x24f, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x26d, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x260, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x25c, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x257, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x252, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x24f, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x26d, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x260, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x25c, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x257, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x252, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x24f, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x26d, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x260, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x25c, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x257, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x252, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x24f, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x26d, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x260, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x25c, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x257, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x252, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x24f, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x26d, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x260, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x25c, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x257, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x252, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x24f, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x26d, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x260, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x25c, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x257, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x252, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x24f, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x26d, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x260, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x25c, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x257, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x252, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x24f, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x26d, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x260, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x25c, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x257, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x252, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x24f, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x26d, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x260, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x25c, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x257, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x252, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x24f, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x26d, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x260, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x25c, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x257, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x252, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x24f, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x26d, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x260, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x25c, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x257, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x252, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x24f, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x26d, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x260, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x25c, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x257, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x252, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x24f, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x26d, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x260, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x25c, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x257, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x252, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x24f, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x26d, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x260, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x25c, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x257, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x252, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x26d, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x257, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x26d, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x257, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x26d, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x257, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x26d, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x257, 4), (stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x24f, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x26d, 4), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x257, 4), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x24f, 4)]
[ ---  CBRANCH (ram, 0x485c68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x455ed0, 8) , (register, 0xb0, 8) , (const, 0x20042, 8) , (const, 0x1b6, 8), (register, 0xb0, 8) INT_AND (unique, 0x10000839, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000839, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000540, 8) , (const, 0x1, 8), (unique, 0x10000540, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xf, 8)]
[(register, 0xa0, 8) COPY (const, 0x4b0633, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000871, 8), (unique, 0x10000871, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000879, 8) , (const, 0x4859ea, 8), (unique, 0x10000879, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000560, 8) , (const, 0x1, 8), (unique, 0x10000560, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x281, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x281, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x281, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x281, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x281, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x281, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x281, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x281, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x281, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x281, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x281, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x281, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x281, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x281, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x281, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffdc0, 4) INDIRECT (stack, 0xfffffffffffffdc0, 4) , (const, 0x281, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x281, 4)]
[ ---  CBRANCH (ram, 0x485cb8, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x455300, 8) , (const, 0x1, 4) , (register, 0x0, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffda8, 8)]
[ ---  CBRANCH (ram, 0x485cb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xfffffffffffffdc0, 4) , (const, 0xf000, 4)]
[(register, 0xa0, 8) COPY (const, 0x4b064d, 8)]
[(register, 0xa8, 8) INT_ADD (unique, 0x10000881, 8) , (register, 0x0, 8), (unique, 0x10000881, 8) CAST (stack, 0xfffffffffffffd48, 8), (register, 0x0, 8) INT_RIGHT (register, 0x18, 8) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x485d58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffdd8, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000570, 8) , (const, 0x1, 8), (unique, 0x10000570, 8) INT_SUB (unique, 0x100001b3, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffff000, 8), (unique, 0x3100, 8) INT_ADD (ram, 0x4c6118, 8) , (const, 0xf, 8)]
[(unique, 0x100002d3, 4) SUBPIECE (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) INT_ADD (ram, 0x4c6118, 8) , (const, 0xf, 8)]
[(unique, 0x100007e1, 8) COPY (register, 0x20, 8)]
[(unique, 0x100004af, 8) MULTIEQUAL (unique, 0x100007e1, 8) , (unique, 0x100007e9, 8)]
[(unique, 0x100004b7, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x485d9a, 1) , (unique, 0x100004ae, 1), (unique, 0x100004ae, 1) INT_NOTEQUAL (register, 0x20, 8) , (register, 0x30, 8), (register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100004af, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000891, 8) , (unique, 0xbe00, 8), (unique, 0x10000891, 8) CAST (unique, 0x3c80, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000889, 8), (unique, 0x10000889, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100004af, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100004af, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(unique, 0x100007e9, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004af, 8) , (const, 0xfffffffffffff000, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) CAST (unique, 0x10000899, 8), (unique, 0x10000899, 8) PTRADD (unique, 0x100004b7, 8) , (unique, 0x100002db, 8) , (const, 0x1, 8), (unique, 0x100002db, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100002d3, 4) , (const, 0xff0, 4)]
[(register, 0x20, 8) PTRADD (unique, 0x100004b7, 8) , (unique, 0x100002db, 8) , (const, 0x1, 8), (unique, 0x100002db, 8) INT_2COMP (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100002d3, 4) , (const, 0xff0, 4)]
[ ---  CBRANCH (ram, 0x485dae, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ZEXT (register, 0x8, 4), (register, 0x8, 4) INT_AND (unique, 0x100002d3, 4) , (const, 0xff0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008a9, 8) , (unique, 0xbe00, 8), (unique, 0x100008a9, 8) CAST (unique, 0x3880, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100008a1, 8), (unique, 0x100008a1, 8) CAST (unique, 0x3880, 8), (unique, 0x3880, 8) PTRADD (unique, 0x100004b7, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008b1, 8) , (const, 0x485dc6, 8), (unique, 0x100008b1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004b7, 8) , (unique, 0x10000638, 8) , (const, 0x1, 8), (unique, 0x10000638, 8) INT_ADD (unique, 0x100002db, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALL (ram, 0x401120, 8) , (register, 0x20, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008c1, 8) , (const, 0x485de0, 8), (unique, 0x100008c1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004b7, 8) , (unique, 0x10000640, 8) , (const, 0x1, 8), (unique, 0x10000640, 8) INT_ADD (unique, 0x100002db, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x73a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x715, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x73a, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x715, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x73a, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x715, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x73a, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x715, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x73a, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x715, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x73a, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x715, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x73a, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x715, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x73a, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x715, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x73a, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x715, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x73a, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x715, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x73a, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x715, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x73a, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x715, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x73a, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x715, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x73a, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x715, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x73a, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x715, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x73a, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x715, 4), (stack, 0xfffffffffffffd30, 8) COPY (ram, 0x4c6118, 8)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (unique, 0x100007c1, 8) , (const, 0x715, 4), (unique, 0x100007c1, 8) COPY (unique, 0x100008b9, 8), (unique, 0x100008b9, 8) CAST (register, 0x20, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (register, 0x20, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (register, 0x0, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x73a, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x73a, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x73a, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x73a, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x73a, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x73a, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x73a, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x73a, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x73a, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x715, 4)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x73a, 4), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x715, 4)]
[ ---  CBRANCH (ram, 0x485e01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4555d0, 8) , (register, 0x0, 4) , (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_AND (register, 0x10, 8) , (register, 0xa8, 8), (register, 0x10, 8) INT_2COMP (stack, 0xfffffffffffffd30, 8), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x715, 4), (stack, 0xfffffffffffffd30, 8) COPY (ram, 0x4c6118, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008c9, 8) , (const, 0x485e1e, 8), (unique, 0x100008c9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004b7, 8) , (unique, 0x10000648, 8) , (const, 0x1, 8), (unique, 0x10000648, 8) INT_ADD (unique, 0x100002db, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x760, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x760, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x760, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x760, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x760, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x760, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x760, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x760, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x760, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x760, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x760, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x760, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x760, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x760, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x760, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x760, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd30, 8) MULTIEQUAL (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd38, 8) MULTIEQUAL (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd50, 8) MULTIEQUAL (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x760, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x760, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd60, 8) MULTIEQUAL (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x760, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd78, 8) MULTIEQUAL (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd80, 8) MULTIEQUAL (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x760, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x760, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffd90, 8) MULTIEQUAL (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x760, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x760, 4), (stack, 0xfffffffffffffd9c, 2) MULTIEQUAL (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x760, 4), (stack, 0xfffffffffffffd9e, 1) MULTIEQUAL (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x760, 4), (stack, 0xfffffffffffffd9f, 1) MULTIEQUAL (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x760, 4), (stack, 0xfffffffffffffdd8, 8) MULTIEQUAL (stack, 0xfffffffffffffdd8, 8) , (stack, 0xfffffffffffffdd8, 8)]
[ ---  CBRANCH (ram, 0x485df0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x456050, 8) , (register, 0x0, 4) , (stack, 0xfffffffffffffd48, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_AND (unique, 0x3100, 8) , (register, 0xa8, 8), (unique, 0x3100, 8) INT_SUB (ram, 0x4c6118, 8) , (const, 0x1, 8), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(unique, 0x10000729, 8) COPY (unique, 0x100008d1, 8), (unique, 0x100008d1, 8) CAST (stack, 0xfffffffffffffd38, 8)]
[ ---  CBRANCH (ram, 0x485ed2, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x485ed9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100008d9, 8), (unique, 0x100008d9, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffd9f, 1) MULTIEQUAL (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1)]
[(stack, 0xfffffffffffffd9e, 1) MULTIEQUAL (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1)]
[(stack, 0xfffffffffffffd9c, 2) MULTIEQUAL (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2)]
[(stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd90, 8) MULTIEQUAL (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8)]
[(stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd80, 8) MULTIEQUAL (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8)]
[(stack, 0xfffffffffffffd78, 8) MULTIEQUAL (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8)]
[(stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd60, 8) MULTIEQUAL (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8)]
[(stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd50, 8) MULTIEQUAL (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8)]
[(stack, 0xfffffffffffffd30, 8) MULTIEQUAL (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8)]
[(ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[(ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) COPY (const, 0x4b0667, 8)]
[(unique, 0x10000739, 8) COPY (unique, 0x100008e1, 8), (unique, 0x100008e1, 8) CAST (stack, 0xfffffffffffffd38, 8), (stack, 0xfffffffffffffd38, 8) MULTIEQUAL (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8)]
[ ---  BRANCH (ram, 0x485cc6, 1)]
[(unique, 0x10000721, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x485d1f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xfffffffffffffdd8, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008e9, 8) , (const, 0x485d27, 8), (unique, 0x100008e9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100004a6, 8) , (unique, 0x10000568, 8) , (const, 0x1, 8), (unique, 0x10000568, 8) INT_ADD (unique, 0x100001b3, 8) , (const, 0xfffffffffffffff8, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x682, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x682, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x682, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x682, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x682, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x682, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x682, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x682, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x682, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x682, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x682, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x682, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x682, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x682, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (register, 0x0, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x682, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x682, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100008f1, 8) , (const, 0x485a52, 8), (unique, 0x100008f1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000721, 8) , (unique, 0x10000729, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2f3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x2f3, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x2f3, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x2f3, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x2f3, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x2f3, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x2f3, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x2f3, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x2f3, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x2f3, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x2f3, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x2f3, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x2f3, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x2f3, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x2f3, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x2f3, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd30, 8) MULTIEQUAL (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd38, 8) MULTIEQUAL (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd50, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd60, 8) MULTIEQUAL (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd78, 8) MULTIEQUAL (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd80, 8) MULTIEQUAL (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd90, 8) MULTIEQUAL (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd9c, 2) MULTIEQUAL (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd9e, 1) MULTIEQUAL (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x2f3, 4), (stack, 0xfffffffffffffd9f, 1) MULTIEQUAL (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1)]
[(stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x2f3, 4), (stack, 0xfffffffffffffdd8, 8) MULTIEQUAL (stack, 0xfffffffffffffdd8, 8) , (stack, 0xfffffffffffffdd8, 8)]
[ ---  CBRANCH (ram, 0x485eec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x100008f9, 8), (unique, 0x100008f9, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (register, 0xa8, 8) , (const, 0x3, 4) , (const, 0x1, 4) , (register, 0x0, 4) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000901, 8) , (const, 0x485a6b, 8), (unique, 0x10000901, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x305, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x305, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x305, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x305, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x305, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x305, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x305, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x305, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x305, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x305, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x305, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x305, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x305, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x305, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x305, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x305, 4)]
[ ---  CALL (ram, 0x455d60, 8) , (register, 0x0, 4)]
[(unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x8, 8) , (const, 0x8, 8), (stack, 0xfffffffffffffd48, 8) INDIRECT (register, 0x0, 8) , (const, 0x305, 4)]
[(unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000911, 8), (unique, 0x10000911, 8) INT_ADD (unique, 0x10000909, 8) , (unique, 0x10000588, 8), (unique, 0x10000909, 8) CAST (stack, 0xfffffffffffffd48, 8), (unique, 0x10000588, 8) INT_ADD (stack, 0xfffffffffffffd50, 8) , (const, 0x44, 8), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x305, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (register, 0x0, 8) , (const, 0x305, 4)]
[(unique, 0x100007f9, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000911, 8), (unique, 0x10000911, 8) INT_ADD (unique, 0x10000909, 8) , (unique, 0x10000588, 8), (unique, 0x10000909, 8) CAST (stack, 0xfffffffffffffd48, 8), (unique, 0x10000588, 8) INT_ADD (stack, 0xfffffffffffffd50, 8) , (const, 0x44, 8), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x305, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (register, 0x0, 8) , (const, 0x305, 4)]
[ ---  CBRANCH (ram, 0x485ce8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffdd8, 8) , (const, 0x0, 8), (stack, 0xfffffffffffffdd8, 8) INDIRECT (stack, 0xfffffffffffffdd8, 8) , (const, 0x305, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) CAST (unique, 0x10000921, 8), (unique, 0x10000921, 8) INT_ADD (unique, 0x10000919, 8) , (const, 0x14, 8), (unique, 0x10000919, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000929, 8) , (stack, 0xfffffffffffffd68, 4), (unique, 0x10000929, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000935, 8) , (stack, 0xfffffffffffffd58, 4), (unique, 0x10000935, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003af, 8) , (stack, 0xfffffffffffffd5c, 4), (unique, 0x100003af, 8) CAST (unique, 0x10000945, 8), (unique, 0x10000945, 8) INT_ADD (unique, 0x1000093d, 8) , (const, 0x4, 8), (unique, 0x1000093d, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000094d, 8) , (stack, 0xfffffffffffffd60, 4), (unique, 0x1000094d, 8) CAST (unique, 0x100003b7, 8), (unique, 0x100003b7, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x1, 8) , (const, 0x8, 8), (stack, 0xfffffffffffffd60, 4) SUBPIECE (stack, 0xfffffffffffffd60, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003bf, 8) , (stack, 0xfffffffffffffd64, 4), (unique, 0x100003bf, 8) CAST (unique, 0x1000095d, 8), (unique, 0x1000095d, 8) INT_ADD (unique, 0x10000955, 8) , (const, 0xc, 8), (unique, 0x10000955, 8) CAST (stack, 0xfffffffffffffd48, 8), (stack, 0xfffffffffffffd64, 4) SUBPIECE (stack, 0xfffffffffffffd60, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000457, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x10000457, 8) INT_ADD (unique, 0x100006ab, 8) , (unique, 0x10000465, 7), (unique, 0x100006ab, 8) INT_LEFT (unique, 0x100006a3, 8) , (const, 0x38, 8), (unique, 0x100006a3, 8) INT_SEXT (unique, 0x10000934, 1), (unique, 0x10000934, 1) CAST (stack, 0xfffffffffffffd9f, 1), (unique, 0x10000465, 7) INT_ADD (unique, 0x1000069c, 7) , (unique, 0x1000045f, 6), (unique, 0x1000069c, 7) INT_LEFT (unique, 0x10000695, 7) , (const, 0x30, 7), (unique, 0x10000695, 7) INT_SEXT (unique, 0x10000933, 1), (unique, 0x10000933, 1) CAST (stack, 0xfffffffffffffd9e, 1), (unique, 0x1000045f, 6) INT_ADD (unique, 0x1000068f, 6) , (stack, 0xfffffffffffffd98, 4), (unique, 0x1000068f, 6) INT_LEFT (unique, 0x10000689, 6) , (const, 0x20, 6), (unique, 0x10000689, 6) INT_SEXT (unique, 0x10000931, 2), (unique, 0x10000931, 2) CAST (stack, 0xfffffffffffffd9c, 2)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000965, 8) , (stack, 0xfffffffffffffd78, 4), (unique, 0x10000965, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x3, 8) , (const, 0x8, 8), (stack, 0xfffffffffffffd78, 4) SUBPIECE (stack, 0xfffffffffffffd78, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ef, 8) , (stack, 0xfffffffffffffd7c, 4), (unique, 0x100003ef, 8) CAST (unique, 0x10000975, 8), (unique, 0x10000975, 8) INT_ADD (unique, 0x1000096d, 8) , (const, 0x1c, 8), (unique, 0x1000096d, 8) CAST (stack, 0xfffffffffffffd48, 8), (stack, 0xfffffffffffffd7c, 4) SUBPIECE (stack, 0xfffffffffffffd78, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000097d, 8) , (stack, 0xfffffffffffffd80, 4), (unique, 0x1000097d, 8) CAST (unique, 0x100003f7, 8), (unique, 0x100003f7, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x4, 8) , (const, 0x8, 8), (stack, 0xfffffffffffffd80, 4) SUBPIECE (stack, 0xfffffffffffffd80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100003ff, 8) , (stack, 0xfffffffffffffd84, 4), (unique, 0x100003ff, 8) CAST (unique, 0x1000098d, 8), (unique, 0x1000098d, 8) INT_ADD (unique, 0x10000985, 8) , (const, 0x24, 8), (unique, 0x10000985, 8) CAST (stack, 0xfffffffffffffd48, 8), (stack, 0xfffffffffffffd84, 4) SUBPIECE (stack, 0xfffffffffffffd80, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000995, 8) , (stack, 0xfffffffffffffd88, 4), (unique, 0x10000995, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042f, 8) , (stack, 0xfffffffffffffd8c, 4), (unique, 0x1000042f, 8) CAST (unique, 0x100009a5, 8), (unique, 0x100009a5, 8) INT_ADD (unique, 0x1000099d, 8) , (const, 0x2c, 8), (unique, 0x1000099d, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009ad, 8) , (stack, 0xfffffffffffffd90, 4), (unique, 0x100009ad, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x6, 8) , (const, 0x8, 8), (stack, 0xfffffffffffffd90, 4) SUBPIECE (stack, 0xfffffffffffffd90, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000043f, 8) , (stack, 0xfffffffffffffd94, 4), (unique, 0x1000043f, 8) CAST (unique, 0x100009bd, 8), (unique, 0x100009bd, 8) INT_ADD (unique, 0x100009b5, 8) , (const, 0x34, 8), (unique, 0x100009b5, 8) CAST (stack, 0xfffffffffffffd48, 8), (stack, 0xfffffffffffffd94, 4) SUBPIECE (stack, 0xfffffffffffffd90, 8) , (const, 0x4, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x348, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf79, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf77, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf75, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf74, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf6b, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf69, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf67, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf66, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x33f, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf5d, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf5b, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf59, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xf58, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x337, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x32e, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x348, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf79, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf77, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf75, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf74, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf6b, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf69, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf67, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf66, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x33f, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf5d, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf5b, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf59, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0xf58, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x337, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x32e, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x348, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf79, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf77, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf75, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf74, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf6b, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf69, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf67, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf66, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x33f, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf5d, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf5b, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf59, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0xf58, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x337, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x32e, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x348, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf79, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf77, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf75, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf74, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf6b, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf69, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf67, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf66, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x33f, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf5d, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf5b, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf59, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0xf58, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x337, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x32e, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x348, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf79, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf77, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf75, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf74, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf6b, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf69, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf67, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf66, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x33f, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf5d, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf5b, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf59, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0xf58, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x337, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x32e, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x348, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf79, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf77, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf75, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf74, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf6b, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf69, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf67, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf66, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x33f, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf5d, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf5b, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf59, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0xf58, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x337, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x32e, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x348, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf79, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf77, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf75, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf74, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf6b, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf69, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf67, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf66, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x33f, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf5d, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf5b, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf59, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0xf58, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x337, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x32e, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x348, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf79, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf77, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf75, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf74, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf6b, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf69, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf67, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf66, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x33f, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf5d, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf5b, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf59, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0xf58, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x337, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x32e, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x348, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf79, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf77, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf75, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf74, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf6b, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf69, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf67, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf66, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x33f, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf5d, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf5b, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf59, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0xf58, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x337, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x32e, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x348, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf79, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf77, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf75, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf74, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf6b, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf69, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf67, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf66, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x33f, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf5d, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf5b, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf59, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0xf58, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x337, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x32e, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x348, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf79, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf77, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf75, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf74, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf6b, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf69, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf67, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf66, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x33f, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf5d, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf5b, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf59, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0xf58, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x337, 4), (ram, 0x4c7f88, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x32e, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x348, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf79, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf77, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf75, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf74, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf6b, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf69, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf67, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf66, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x33f, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf5d, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf5b, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf59, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0xf58, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x337, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x32e, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x348, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf79, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf77, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf75, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf74, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf6b, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf69, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf67, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf66, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x33f, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf5d, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf5b, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf59, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0xf58, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x337, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x32e, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x348, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf79, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf77, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf75, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf74, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf6b, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf69, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf67, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf66, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x33f, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf5d, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf5b, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf59, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0xf58, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x337, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x32e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[(unique, 0x100007b1, 8) COPY (ram, 0x4c7f78, 8), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x348, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf79, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf77, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf75, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf74, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf6b, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf69, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf67, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf66, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x33f, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf5d, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf5b, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf59, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0xf58, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x337, 4), (ram, 0x4c7f78, 8) INDIRECT (unique, 0x100007f9, 8) , (const, 0x32e, 4)]
[ ---  CBRANCH (ram, 0x485d12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (stack, 0xfffffffffffffd60, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (unique, 0x100006bb, 8) , (stack, 0xfffffffffffffd58, 4), (unique, 0x100006bb, 8) INT_LEFT (unique, 0x100006b3, 8) , (const, 0x20, 8), (unique, 0x100006b3, 8) INT_SEXT (unique, 0x100009c5, 4), (unique, 0x100009c5, 4) CAST (stack, 0xfffffffffffffd5c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (stack, 0xfffffffffffffd48, 8)]
[ ---  CBRANCH (ram, 0x485e65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (stack, 0xfffffffffffffd68, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009c9, 8), (unique, 0x100009c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x485d12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100009d9, 8), (unique, 0x100009d9, 8) INT_ADD (unique, 0x100009d1, 8) , (const, 0x14, 8), (unique, 0x100009d1, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[ ---  CBRANCH (ram, 0x485d12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (stack, 0xfffffffffffffd80, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (stack, 0xfffffffffffffd78, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x485d12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_XOR (unique, 0xbd80, 8) , (stack, 0xfffffffffffffd90, 8), (register, 0x0, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) INT_ADD (unique, 0x100006cb, 8) , (stack, 0xfffffffffffffd88, 4), (unique, 0x100006cb, 8) INT_LEFT (unique, 0x100006c3, 8) , (const, 0x20, 8), (unique, 0x100006c3, 8) INT_SEXT (unique, 0x100009e1, 4), (unique, 0x100009e1, 4) CAST (stack, 0xfffffffffffffd8c, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x485d12, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x1000046c, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xfffffffffffffd48, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x1000046c, 8) INT_ADD (unique, 0x100006f5, 8) , (unique, 0x1000047a, 7), (unique, 0x100006f5, 8) INT_LEFT (unique, 0x100006ed, 8) , (const, 0x38, 8), (unique, 0x100006ed, 8) INT_SEXT (unique, 0x100009e8, 1), (unique, 0x100009e8, 1) CAST (stack, 0xfffffffffffffd9f, 1), (unique, 0x1000047a, 7) INT_ADD (unique, 0x100006e6, 7) , (unique, 0x10000474, 6), (unique, 0x100006e6, 7) INT_LEFT (unique, 0x100006df, 7) , (const, 0x30, 7), (unique, 0x100006df, 7) INT_SEXT (unique, 0x100009e7, 1), (unique, 0x100009e7, 1) CAST (stack, 0xfffffffffffffd9e, 1), (unique, 0x10000474, 6) INT_ADD (unique, 0x100006d9, 6) , (stack, 0xfffffffffffffd98, 4), (unique, 0x100006d9, 6) INT_LEFT (unique, 0x100006d3, 6) , (const, 0x20, 6), (unique, 0x100006d3, 6) INT_SEXT (unique, 0x100009e5, 2), (unique, 0x100009e5, 2) CAST (stack, 0xfffffffffffffd9c, 2)]
[ ---  CBRANCH (ram, 0x485aed, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009e9, 8) , (const, 0x485b13, 8), (unique, 0x100009e9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x362, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x362, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x362, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x362, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x362, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x362, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x362, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x362, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x362, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (unique, 0x100007b1, 8) , (unique, 0x100007f9, 8)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x362, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x362, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x362, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x362, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x362, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x362, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x362, 4), (stack, 0xfffffffffffffd38, 8) COPY (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (unique, 0x100007c9, 8) , (const, 0x362, 4), (unique, 0x100007c9, 8) COPY (unique, 0x100009f1, 8), (unique, 0x100009f1, 8) CAST (unique, 0x3a00, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x362, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x362, 4)]
[(unique, 0x100007f1, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427e50, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ADD (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd50, 8)]
[ ---  CBRANCH (ram, 0x485f54, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x427e50, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_ADD (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd50, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100009f9, 8) , (const, 0x485f5f, 8), (unique, 0x100009f9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x4562a0, 8) , (stack, 0xfffffffffffffd38, 8) , (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a01, 8) , (const, 0x485f72, 8), (unique, 0x10000a01, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x485480, 8) , (const, 0x2, 8) , (unique, 0x100004c8, 8), (unique, 0x100004c8, 8) COPY (const, 0x4b06d8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a09, 8) , (const, 0x485f7c, 8), (unique, 0x10000a09, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x566, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x562, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x566, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x562, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x566, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x562, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x566, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x562, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x566, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x562, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x566, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x562, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x566, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x562, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x566, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x562, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x566, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x562, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x553, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x566, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x562, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x553, 4)]
[ ---  CALL (ram, 0x454cb0, 8) , (const, 0x7f, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x566, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x562, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x553, 4)]
[(ram, 0x4c7f48, 4) COPY (ram, 0x4c7f48, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x566, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x562, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x553, 4)]
[(ram, 0x4c7f50, 8) COPY (ram, 0x4c7f50, 8), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x566, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x562, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x553, 4)]
[(ram, 0x4c7f58, 8) COPY (ram, 0x4c7f58, 8), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x566, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x562, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x553, 4)]
[(ram, 0x4c7f60, 4) COPY (ram, 0x4c7f60, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x566, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x562, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x553, 4)]
[(ram, 0x4c7f64, 4) COPY (ram, 0x4c7f64, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x566, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x562, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x553, 4)]
[(ram, 0x4c7f68, 8) COPY (ram, 0x4c7f68, 8), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x566, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x562, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x553, 4)]
[(ram, 0x4c7f70, 8) COPY (ram, 0x4c7f70, 8), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x566, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x562, 4), (ram, 0x4c7f70, 8) INDIRECT (unique, 0x100007f1, 8) , (const, 0x553, 4)]
[(ram, 0x4c7f78, 8) COPY (ram, 0x4c7f78, 8), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x566, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x562, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x553, 4)]
[(ram, 0x4c7f80, 4) COPY (ram, 0x4c7f80, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x566, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x562, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x553, 4)]
[(ram, 0x4c7f84, 4) COPY (ram, 0x4c7f84, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x566, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x562, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x553, 4)]
[(ram, 0x4c7f88, 8) COPY (ram, 0x4c7f88, 8), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x566, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x562, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x553, 4)]
[(ram, 0x4c87b0, 8) COPY (ram, 0x4c87b0, 8), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x566, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x562, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x553, 4)]
[(ram, 0x4c87d0, 8) COPY (ram, 0x4c87d0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x566, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x562, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x553, 4)]
[(ram, 0x4c8850, 8) COPY (ram, 0x4c8850, 8), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x566, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x562, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x553, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c7f60, 4) COPY (const, 0x0, 4)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x10000a19, 8) , (stack, 0xfffffffffffffd50, 8), (unique, 0x10000a19, 8) CAST (register, 0x0, 8)]
[(unique, 0x10000769, 4) COPY (ram, 0x4c7f64, 4)]
[ ---  CBRANCH (ram, 0x485b5d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbc80, 4) , (ram, 0x4c7f64, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a11, 8), (unique, 0x10000a11, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a21, 8), (unique, 0x10000a21, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[(unique, 0x10000779, 8) COPY (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x485bb4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x1000037b, 4), (unique, 0x1000037b, 4) MULTIEQUAL (unique, 0x10000769, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3a00, 8) CAST (unique, 0x10000a39, 8), (unique, 0x10000a39, 8) INT_ADD (unique, 0x10000a31, 8) , (unique, 0x10000a29, 8), (unique, 0x10000a31, 8) CAST (stack, 0xfffffffffffffd48, 8), (unique, 0x10000a29, 8) INT_MULT (unique, 0x100005f0, 8) , (const, 0x4, 8), (unique, 0x100005f0, 8) INT_ADD (unique, 0x100005e8, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x100005e8, 8) INT_MULT (register, 0x10, 8) , (const, 0x5, 8)]
[(register, 0x80, 8) CAST (unique, 0x10000a49, 8), (unique, 0x10000a49, 8) INT_ADD (unique, 0x10000a41, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000a41, 8) CAST (stack, 0xfffffffffffffd48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x10000a69, 8), (unique, 0x10000a69, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3400, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) INT_ZEXT (ram, 0x4c7f60, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x8, 8), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a71, 8) , (unique, 0xbc00, 2), (unique, 0x10000a71, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) CAST (unique, 0x10000a69, 8), (unique, 0x10000a69, 8) INT_ADD (register, 0x10, 8) , (unique, 0x3400, 8), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (const, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a61, 8), (unique, 0x10000a61, 8) INT_ADD (unique, 0x10000a59, 8) , (unique, 0x3300, 8), (unique, 0x10000a59, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8), (register, 0x10, 8) INT_ZEXT (ram, 0x4c7f60, 4), (register, 0x38, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x2, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a51, 8), (unique, 0x10000a51, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x8, 8), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x41d, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x41b, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x40f, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x41d, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x41b, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x40f, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x41d, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x41b, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x40f, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x41d, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x41b, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x40f, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x41d, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x41b, 4), (ram, 0x4c7f60, 4) INDIRECT (unique, 0x10000775, 4) , (const, 0x40f, 4), (unique, 0x10000775, 4) COPY (unique, 0x3100, 4), (unique, 0x3100, 4) INT_ADD (ram, 0x4c7f60, 4) , (const, 0x1, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x41d, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x41b, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x40f, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x41d, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x41b, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x40f, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (unique, 0x10000779, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x41d, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x41b, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x40f, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (unique, 0x100007f1, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x41d, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x41b, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x40f, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x41d, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x41b, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x40f, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (unique, 0x1000037b, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x41d, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x41b, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x40f, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x41d, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x41b, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x40f, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x41d, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x41b, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x40f, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x41d, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x41b, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x40f, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x41d, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x41b, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x40f, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x30, 2), (register, 0x30, 2) SUBPIECE (unique, 0x100006fd, 4) , (const, 0x0, 4), (unique, 0x3400, 8) CAST (unique, 0x10000a61, 8), (unique, 0x10000a61, 8) INT_ADD (unique, 0x10000a59, 8) , (unique, 0x3300, 8), (unique, 0x10000a59, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8), (register, 0x38, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x2, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a51, 8), (unique, 0x10000a51, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x100006fd, 4) COPY (ram, 0x4c7f60, 4), (register, 0x8, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x8, 8), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[ ---  CBRANCH (ram, 0x485b78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x80, 8), (register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xfffffffffffffffb, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x8, 8)]
[(ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[(ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f80, 4) MULTIEQUAL (unique, 0x1000037b, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f70, 8) MULTIEQUAL (unique, 0x100007f1, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f68, 8) MULTIEQUAL (unique, 0x10000779, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(register, 0x8, 4) COPY (const, 0x10000, 4)]
[ ---  CBRANCH (ram, 0x485c01, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (stack, 0xfffffffffffffd50, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_SUB (register, 0xa0, 8) , (ram, 0x4c7f58, 8), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(register, 0x8, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x485c01, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x10000, 8), (register, 0x0, 8) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ZEXT (register, 0xa0, 8), (unique, 0x2e800, 16) INT_ZEXT (stack, 0xfffffffffffffd50, 8)]
[ ---  CBRANCH (ram, 0x485eff, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x485f2f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (const, 0x100000000000000, 8)]
[(register, 0x8, 4) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_OR (unique, 0x2e900, 16) , (unique, 0x2e980, 16), (unique, 0x2e980, 16) INT_ZEXT (const, 0x1000000, 8), (unique, 0x2e900, 16) INT_LEFT (unique, 0x2e880, 16) , (const, 0x40, 4), (unique, 0x2e880, 16) INT_ZEXT (const, 0x0, 8), (unique, 0x2e800, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ZEXT (register, 0xa0, 8), (unique, 0x2e800, 16) INT_ZEXT (stack, 0xfffffffffffffd50, 8), (register, 0xa0, 8) INT_MULT (register, 0xa0, 8) , (const, 0x100, 8)]
[ ---  BRANCH (ram, 0x485c01, 1)]
[(register, 0x8, 4) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_OR (unique, 0x2e900, 16) , (unique, 0x2e980, 16), (unique, 0x2e980, 16) INT_ZEXT (const, 0x1000000, 8), (unique, 0x2e900, 16) INT_LEFT (unique, 0x2e880, 16) , (const, 0x40, 4), (unique, 0x2e880, 16) INT_ZEXT (const, 0x0, 8), (unique, 0x2e800, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_ZEXT (register, 0xa0, 8), (unique, 0x2e800, 16) INT_ZEXT (register, 0x18, 8), (register, 0x18, 8) INT_RIGHT (register, 0x18, 8) , (const, 0x9, 4)]
[ ---  BRANCH (ram, 0x485c01, 1)]
[(register, 0x0, 4) SUBPIECE (unique, 0x2eb80, 16) , (const, 0x0, 4), (unique, 0x2eb80, 16) INT_DIV (unique, 0x2ea80, 16) , (unique, 0x2e800, 16), (unique, 0x2ea80, 16) INT_OR (unique, 0x2e900, 16) , (unique, 0x2e980, 16), (unique, 0x2e980, 16) INT_ZEXT (const, 0x10000, 8), (unique, 0x2e900, 16) INT_LEFT (unique, 0x2e880, 16) , (const, 0x40, 4), (unique, 0x2e880, 16) INT_ZEXT (const, 0x0, 8), (unique, 0x2e800, 16) INT_AND (unique, 0x2eb80, 16) , (const, 0xffffffffffffffff, 16)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a79, 8) , (const, 0x485c13, 8), (unique, 0x10000a79, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x48e, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x48e, 4)]
[ ---  CALL (ram, 0x48c2b0, 8) , (unique, 0x10000a81, 8) , (stack, 0xfffffffffffffd50, 8) , (ram, 0x4c7f58, 8) , (register, 0x8, 4), (unique, 0x10000a81, 8) CAST (unique, 0x3100, 8), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x0, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x48e, 4)]
[(ram, 0x4c7f48, 4) COPY (ram, 0x4c7f48, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x48e, 4)]
[(ram, 0x4c7f50, 8) COPY (ram, 0x4c7f50, 8), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x48e, 4)]
[(ram, 0x4c7f58, 8) COPY (ram, 0x4c7f58, 8), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x48e, 4)]
[(ram, 0x4c7f60, 4) COPY (ram, 0x4c7f60, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x48e, 4)]
[(ram, 0x4c7f64, 4) COPY (ram, 0x4c7f64, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x48e, 4)]
[(ram, 0x4c7f68, 8) COPY (ram, 0x4c7f68, 8), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x48e, 4)]
[(ram, 0x4c7f70, 8) COPY (ram, 0x4c7f70, 8), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x48e, 4)]
[(ram, 0x4c7f78, 8) COPY (ram, 0x4c7f78, 8), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x48e, 4)]
[(ram, 0x4c7f80, 4) COPY (ram, 0x4c7f80, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x48e, 4)]
[(ram, 0x4c7f84, 4) COPY (const, 0x1, 4)]
[(ram, 0x4c7f88, 8) COPY (ram, 0x4c7f88, 8), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x48e, 4)]
[(ram, 0x4c87b0, 8) COPY (ram, 0x4c87b0, 8), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x48e, 4)]
[(ram, 0x4c87d0, 8) COPY (ram, 0x4c87d0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x48e, 4)]
[(ram, 0x4c8850, 8) COPY (ram, 0x4c8850, 8), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x48e, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a89, 8) , (const, 0x485d1d, 8), (unique, 0x10000a89, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x5a5, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x5a5, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x5a5, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c7f78, 8) INDIRECT (unique, 0x100007f9, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x5a5, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x5a5, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (unique, 0x3100, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x5a5, 4)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x5a5, 4)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x5a5, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (stack, 0xfffffffffffffd48, 8) , (register, 0xa8, 8)]
[(unique, 0x10000741, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x485d27, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a91, 8) , (const, 0x485d44, 8), (unique, 0x10000a91, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000741, 8) , (register, 0x20, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd30, 8) MULTIEQUAL (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd38, 8) MULTIEQUAL (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd50, 8) MULTIEQUAL (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd60, 8) MULTIEQUAL (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd78, 8) MULTIEQUAL (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd80, 8) MULTIEQUAL (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd90, 8) MULTIEQUAL (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd9c, 2) MULTIEQUAL (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd9e, 1) MULTIEQUAL (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x5b7, 4), (stack, 0xfffffffffffffd9f, 1) MULTIEQUAL (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1)]
[ ---  CALL (ram, 0x485480, 8) , (const, 0x2, 8) , (unique, 0x100004c0, 8) , (register, 0xb0, 8) , (ram, 0x4c87d0, 8), (unique, 0x100004c0, 8) COPY (const, 0x4b06a0, 8), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x5b7, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) COPY (ram, 0x4c7f48, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x5b7, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) COPY (ram, 0x4c7f50, 8), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x5b7, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) COPY (ram, 0x4c7f58, 8), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x5b7, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) COPY (ram, 0x4c7f60, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x5b7, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) COPY (ram, 0x4c7f64, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x5b7, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) COPY (ram, 0x4c7f68, 8), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x5b7, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) COPY (ram, 0x4c7f70, 8), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x5b7, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) COPY (ram, 0x4c7f78, 8), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x5b7, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f80, 4) COPY (ram, 0x4c7f80, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x5b7, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) COPY (ram, 0x4c7f84, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x5b7, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) COPY (ram, 0x4c7f88, 8), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x5b7, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c87b0, 8) COPY (ram, 0x4c87b0, 8), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x5b7, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) COPY (ram, 0x4c87d0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x5b7, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) COPY (ram, 0x4c8850, 8), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x5b7, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x4b0683, 8)]
[(unique, 0x10000731, 8) COPY (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x485cc6, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a99, 8), (unique, 0x10000a99, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000aa1, 8) , (const, 0x485cd2, 8), (unique, 0x10000aa1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000731, 8) , (unique, 0x10000739, 8) , (register, 0x20, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x652, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x652, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x652, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x652, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x652, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x652, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x652, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x652, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x652, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x652, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x652, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x652, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x652, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x652, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x652, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd30, 8) MULTIEQUAL (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd38, 8) MULTIEQUAL (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd50, 8) MULTIEQUAL (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x652, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x652, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd60, 8) MULTIEQUAL (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x652, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd78, 8) MULTIEQUAL (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd80, 8) MULTIEQUAL (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x652, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x652, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x652, 4), (stack, 0xfffffffffffffd90, 8) MULTIEQUAL (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x652, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x652, 4), (stack, 0xfffffffffffffd9c, 2) MULTIEQUAL (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x652, 4), (stack, 0xfffffffffffffd9e, 1) MULTIEQUAL (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x652, 4), (stack, 0xfffffffffffffd9f, 1) MULTIEQUAL (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1)]
[ ---  CALL (ram, 0x455d60, 8)]
[(unique, 0x10000749, 8) COPY (register, 0x20, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000731, 8) , (unique, 0x10000739, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x485c7a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000aa9, 8) , (const, 0x485c8e, 8), (unique, 0x10000aa9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000749, 8) , (register, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ab1, 8) , (const, 0x485ca3, 8), (unique, 0x10000ab1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8), (register, 0x20, 8) MULTIEQUAL (unique, 0x10000749, 8) , (register, 0x20, 8)]
[(stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd30, 8) INDIRECT (stack, 0xfffffffffffffd30, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd30, 8) MULTIEQUAL (stack, 0xfffffffffffffd30, 8) , (stack, 0xfffffffffffffd30, 8)]
[(stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd38, 8) INDIRECT (stack, 0xfffffffffffffd38, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd38, 8) MULTIEQUAL (stack, 0xfffffffffffffd38, 8) , (stack, 0xfffffffffffffd38, 8)]
[(stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd40, 8) INDIRECT (stack, 0xfffffffffffffd40, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd40, 8) MULTIEQUAL (stack, 0xfffffffffffffd40, 8) , (stack, 0xfffffffffffffd40, 8)]
[(stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd48, 8) INDIRECT (stack, 0xfffffffffffffd48, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd48, 8) MULTIEQUAL (stack, 0xfffffffffffffd48, 8) , (stack, 0xfffffffffffffd48, 8)]
[(stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd50, 8) INDIRECT (stack, 0xfffffffffffffd50, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd50, 8) MULTIEQUAL (stack, 0xfffffffffffffd50, 8) , (stack, 0xfffffffffffffd50, 8)]
[(stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x66c, 4), (stack, 0xfffffffffffffd58, 4) INDIRECT (stack, 0xfffffffffffffd58, 4) , (const, 0x65b, 4), (stack, 0xfffffffffffffd58, 4) MULTIEQUAL (stack, 0xfffffffffffffd58, 4) , (stack, 0xfffffffffffffd58, 4)]
[(stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x66c, 4), (stack, 0xfffffffffffffd5c, 4) INDIRECT (stack, 0xfffffffffffffd5c, 4) , (const, 0x65b, 4), (stack, 0xfffffffffffffd5c, 4) MULTIEQUAL (stack, 0xfffffffffffffd5c, 4) , (stack, 0xfffffffffffffd5c, 4)]
[(stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd60, 8) INDIRECT (stack, 0xfffffffffffffd60, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd60, 8) MULTIEQUAL (stack, 0xfffffffffffffd60, 8) , (stack, 0xfffffffffffffd60, 8)]
[(stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x66c, 4), (stack, 0xfffffffffffffd68, 4) INDIRECT (stack, 0xfffffffffffffd68, 4) , (const, 0x65b, 4), (stack, 0xfffffffffffffd68, 4) MULTIEQUAL (stack, 0xfffffffffffffd68, 4) , (stack, 0xfffffffffffffd68, 4)]
[(stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd78, 8) INDIRECT (stack, 0xfffffffffffffd78, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd78, 8) MULTIEQUAL (stack, 0xfffffffffffffd78, 8) , (stack, 0xfffffffffffffd78, 8)]
[(stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd80, 8) INDIRECT (stack, 0xfffffffffffffd80, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd80, 8) MULTIEQUAL (stack, 0xfffffffffffffd80, 8) , (stack, 0xfffffffffffffd80, 8)]
[(stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x66c, 4), (stack, 0xfffffffffffffd88, 4) INDIRECT (stack, 0xfffffffffffffd88, 4) , (const, 0x65b, 4), (stack, 0xfffffffffffffd88, 4) MULTIEQUAL (stack, 0xfffffffffffffd88, 4) , (stack, 0xfffffffffffffd88, 4)]
[(stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x66c, 4), (stack, 0xfffffffffffffd8c, 4) INDIRECT (stack, 0xfffffffffffffd8c, 4) , (const, 0x65b, 4), (stack, 0xfffffffffffffd8c, 4) MULTIEQUAL (stack, 0xfffffffffffffd8c, 4) , (stack, 0xfffffffffffffd8c, 4)]
[(stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x66c, 4), (stack, 0xfffffffffffffd90, 8) INDIRECT (stack, 0xfffffffffffffd90, 8) , (const, 0x65b, 4), (stack, 0xfffffffffffffd90, 8) MULTIEQUAL (stack, 0xfffffffffffffd90, 8) , (stack, 0xfffffffffffffd90, 8)]
[(stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x66c, 4), (stack, 0xfffffffffffffd98, 4) INDIRECT (stack, 0xfffffffffffffd98, 4) , (const, 0x65b, 4), (stack, 0xfffffffffffffd98, 4) MULTIEQUAL (stack, 0xfffffffffffffd98, 4) , (stack, 0xfffffffffffffd98, 4)]
[(stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x66c, 4), (stack, 0xfffffffffffffd9c, 2) INDIRECT (stack, 0xfffffffffffffd9c, 2) , (const, 0x65b, 4), (stack, 0xfffffffffffffd9c, 2) MULTIEQUAL (stack, 0xfffffffffffffd9c, 2) , (stack, 0xfffffffffffffd9c, 2)]
[(stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x66c, 4), (stack, 0xfffffffffffffd9e, 1) INDIRECT (stack, 0xfffffffffffffd9e, 1) , (const, 0x65b, 4), (stack, 0xfffffffffffffd9e, 1) MULTIEQUAL (stack, 0xfffffffffffffd9e, 1) , (stack, 0xfffffffffffffd9e, 1)]
[(stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x66c, 4), (stack, 0xfffffffffffffd9f, 1) INDIRECT (stack, 0xfffffffffffffd9f, 1) , (const, 0x65b, 4), (stack, 0xfffffffffffffd9f, 1) MULTIEQUAL (stack, 0xfffffffffffffd9f, 1) , (stack, 0xfffffffffffffd9f, 1)]
[ ---  CALL (ram, 0x485480, 8) , (const, 0x2, 8) , (register, 0xa0, 8) , (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x4291a0, 8) , (register, 0xa8, 4) , (unique, 0x3200, 8) , (const, 0x190, 8), (unique, 0x3200, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe38, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8), (register, 0xa8, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x66c, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x65b, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7f48, 4) COPY (ram, 0x4c7f48, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x66c, 4), (ram, 0x4c7f48, 4) INDIRECT (ram, 0x4c7f48, 4) , (const, 0x65b, 4), (ram, 0x4c7f48, 4) MULTIEQUAL (ram, 0x4c7f48, 4) , (ram, 0x4c7f48, 4)]
[(ram, 0x4c7f50, 8) COPY (ram, 0x4c7f50, 8), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x66c, 4), (ram, 0x4c7f50, 8) INDIRECT (ram, 0x4c7f50, 8) , (const, 0x65b, 4), (ram, 0x4c7f50, 8) MULTIEQUAL (ram, 0x4c7f50, 8) , (ram, 0x4c7f50, 8)]
[(ram, 0x4c7f58, 8) COPY (ram, 0x4c7f58, 8), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x66c, 4), (ram, 0x4c7f58, 8) INDIRECT (ram, 0x4c7f58, 8) , (const, 0x65b, 4), (ram, 0x4c7f58, 8) MULTIEQUAL (ram, 0x4c7f58, 8) , (ram, 0x4c7f58, 8)]
[(ram, 0x4c7f60, 4) COPY (ram, 0x4c7f60, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x66c, 4), (ram, 0x4c7f60, 4) INDIRECT (ram, 0x4c7f60, 4) , (const, 0x65b, 4), (ram, 0x4c7f60, 4) MULTIEQUAL (ram, 0x4c7f60, 4) , (ram, 0x4c7f60, 4)]
[(ram, 0x4c7f64, 4) COPY (ram, 0x4c7f64, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x66c, 4), (ram, 0x4c7f64, 4) INDIRECT (ram, 0x4c7f64, 4) , (const, 0x65b, 4), (ram, 0x4c7f64, 4) MULTIEQUAL (ram, 0x4c7f64, 4) , (ram, 0x4c7f64, 4)]
[(ram, 0x4c7f68, 8) COPY (ram, 0x4c7f68, 8), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x66c, 4), (ram, 0x4c7f68, 8) INDIRECT (ram, 0x4c7f68, 8) , (const, 0x65b, 4), (ram, 0x4c7f68, 8) MULTIEQUAL (ram, 0x4c7f68, 8) , (ram, 0x4c7f68, 8)]
[(ram, 0x4c7f70, 8) COPY (ram, 0x4c7f70, 8), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x66c, 4), (ram, 0x4c7f70, 8) INDIRECT (ram, 0x4c7f70, 8) , (const, 0x65b, 4), (ram, 0x4c7f70, 8) MULTIEQUAL (ram, 0x4c7f70, 8) , (ram, 0x4c7f70, 8)]
[(ram, 0x4c7f78, 8) COPY (ram, 0x4c7f78, 8), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x66c, 4), (ram, 0x4c7f78, 8) INDIRECT (ram, 0x4c7f78, 8) , (const, 0x65b, 4), (ram, 0x4c7f78, 8) MULTIEQUAL (ram, 0x4c7f78, 8) , (ram, 0x4c7f78, 8)]
[(ram, 0x4c7f80, 4) COPY (ram, 0x4c7f80, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x66c, 4), (ram, 0x4c7f80, 4) INDIRECT (ram, 0x4c7f80, 4) , (const, 0x65b, 4), (ram, 0x4c7f80, 4) MULTIEQUAL (ram, 0x4c7f80, 4) , (ram, 0x4c7f80, 4)]
[(ram, 0x4c7f84, 4) COPY (ram, 0x4c7f84, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x66c, 4), (ram, 0x4c7f84, 4) INDIRECT (ram, 0x4c7f84, 4) , (const, 0x65b, 4), (ram, 0x4c7f84, 4) MULTIEQUAL (ram, 0x4c7f84, 4) , (ram, 0x4c7f84, 4)]
[(ram, 0x4c7f88, 8) COPY (ram, 0x4c7f88, 8), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x66c, 4), (ram, 0x4c7f88, 8) INDIRECT (ram, 0x4c7f88, 8) , (const, 0x65b, 4), (ram, 0x4c7f88, 8) MULTIEQUAL (ram, 0x4c7f88, 8) , (ram, 0x4c7f88, 8)]
[(ram, 0x4c87b0, 8) COPY (ram, 0x4c87b0, 8), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x66c, 4), (ram, 0x4c87b0, 8) INDIRECT (ram, 0x4c87b0, 8) , (const, 0x65b, 4), (ram, 0x4c87b0, 8) MULTIEQUAL (ram, 0x4c87b0, 8) , (ram, 0x4c87b0, 8)]
[(ram, 0x4c87d0, 8) COPY (ram, 0x4c87d0, 8), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x66c, 4), (ram, 0x4c87d0, 8) INDIRECT (ram, 0x4c87d0, 8) , (const, 0x65b, 4), (ram, 0x4c87d0, 8) MULTIEQUAL (ram, 0x4c87d0, 8) , (ram, 0x4c87d0, 8)]
[(ram, 0x4c8850, 8) COPY (ram, 0x4c8850, 8), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x66c, 4), (ram, 0x4c8850, 8) INDIRECT (ram, 0x4c8850, 8) , (const, 0x65b, 4), (ram, 0x4c8850, 8) MULTIEQUAL (ram, 0x4c8850, 8) , (ram, 0x4c8850, 8)]
[ ---  RETURN (const, 0x0, 8)]
