[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[(unique, 0x10000365, 8) COPY (register, 0x38, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x44, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x44, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x44, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x44, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000365, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x47f910, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x48bf90, 8) , (unique, 0x3800, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x100003d5, 8), (unique, 0x100003d5, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[(ram, 0x4c4ec8, 8) COPY (ram, 0x4c4ec8, 8), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x33b, 4)]
[(ram, 0x4c7f40, 8) COPY (ram, 0x4c7f40, 8), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x33b, 4)]
[(ram, 0x4c8860, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x33b, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47f768, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x63, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x63, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x63, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x63, 4)]
[ ---  CBRANCH (ram, 0x47f680, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003dd, 8), (unique, 0x100003dd, 8) CALL (ram, 0x47f4b0, 8) , (register, 0x88, 8) , (register, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x72, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x72, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x72, 4)]
[(unique, 0x10000335, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f6e3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x83, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x83, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x83, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x83, 4)]
[ ---  CALL (ram, 0x426b40, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x47f680, 1)]
[(unique, 0x100003cd, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f6d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x1, 8), (register, 0xa8, 8) COPY (unique, 0x10000345, 8), (unique, 0x10000345, 8) MULTIEQUAL (unique, 0x10000335, 8) , (unique, 0x1000033d, 8)]
[(unique, 0x10000385, 8) COPY (ram, 0x4c8860, 8)]
[(unique, 0x100003c5, 8) COPY (ram, 0x4c8860, 8)]
[ ---  CBRANCH (ram, 0x47f8f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x1000033d, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47f8f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x100002c8, 8) , (const, 0x1, 8), (unique, 0x100002c8, 8) INT_SUB (register, 0xa8, 8) , (const, 0x1, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2ff, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2ff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x2f, 1), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) INT_ADD (register, 0xa8, 8) , (const, 0x1, 8)]
[(unique, 0x1000037d, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2ff, 4)]
[(unique, 0x100003bd, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2ff, 4)]
[ ---  BRANCH (ram, 0x47f6f7, 1)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000375, 8) COPY (ram, 0x4c8860, 8)]
[(unique, 0x10000395, 8) COPY (stack, 0xffffffffffffff78, 8), (stack, 0xffffffffffffff78, 8) COPY (const, 0x0, 8)]
[(unique, 0x100003b5, 8) COPY (ram, 0x4c8860, 8)]
[(unique, 0x1000020a, 8) MULTIEQUAL (unique, 0x100003ad, 8) , (unique, 0x100003b5, 8) , (unique, 0x100003bd, 8) , (unique, 0x100003c5, 8)]
[(unique, 0x100001f2, 8) MULTIEQUAL (unique, 0x1000038d, 8) , (unique, 0x10000395, 8) , (unique, 0x100003cd, 8) , (unique, 0x100003cd, 8)]
[(unique, 0x100001ea, 8) MULTIEQUAL (unique, 0x100001ea, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x100001e2, 8) MULTIEQUAL (unique, 0x100001e2, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x1000029b, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(unique, 0x100002a3, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(unique, 0x100002b3, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[(unique, 0x100002bb, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x47f703, 1) , (unique, 0x1000029a, 1), (unique, 0x1000029a, 1) INT_EQUAL (unique, 0x100002ab, 8) , (const, 0x0, 8), (unique, 0x100002ab, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (unique, 0x10000375, 8) , (unique, 0x1000037d, 8) , (unique, 0x10000385, 8)]
[ ---  CBRANCH (ram, 0x47f710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100001ea, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002ab, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (unique, 0x1000029b, 8) , (const, 0xc3, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (unique, 0x100002a3, 8) , (const, 0xc3, 4)]
[(ram, 0x4c8860, 8) INDIRECT (unique, 0x100002b3, 8) , (const, 0xc3, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002bb, 8) , (const, 0xc3, 4)]
[ ---  CBRANCH (ram, 0x47f710, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4010f0, 8) , (unique, 0x100001e2, 8) , (unique, 0xbd80, 8) , (unique, 0x100001ea, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002ab, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f74f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f757, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x100002ab, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100003e5, 8), (unique, 0x100003e5, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f740, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x10b, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x10b, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x10b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100002ab, 8), (unique, 0x3400, 8) CAST (unique, 0x100003ed, 8), (unique, 0x100003ed, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100002bb, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c8860, 8) MULTIEQUAL (unique, 0x100002b3, 8) , (ram, 0x4c8860, 8)]
[(ram, 0x4c7f40, 8) MULTIEQUAL (unique, 0x100002a3, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c4ec8, 8) MULTIEQUAL (unique, 0x1000029b, 8) , (ram, 0x4c4ec8, 8)]
[(unique, 0x1000036d, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x100003f5, 8), (unique, 0x100003f5, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ab, 8)]
[(unique, 0x1000038d, 8) COPY (unique, 0x100001f2, 8)]
[(unique, 0x100003ad, 8) COPY (unique, 0x1000020a, 8)]
[ ---  CBRANCH (ram, 0x47f902, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47f79f, 1)]
[(ram, 0x4c4ec8, 8) INDIRECT (unique, 0x1000029b, 8) , (const, 0x13a, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (unique, 0x100002a3, 8) , (const, 0x13a, 4)]
[(ram, 0x4c8860, 8) INDIRECT (unique, 0x100002b3, 8) , (const, 0x13a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x100002bb, 8) , (const, 0x13a, 4)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x401190, 8) , (register, 0x80, 8)]
[(unique, 0x1000031d, 8) COPY (ram, 0x4c4ec8, 8), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (unique, 0x1000029b, 8)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x28, 8), (unique, 0x3480, 8) INT_MULT (ram, 0x4c4ec8, 8) , (const, 0x4, 8), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (unique, 0x1000029b, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x165, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (unique, 0x1000029b, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x165, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (unique, 0x100002a3, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x165, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (unique, 0x100002b3, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x165, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x100002bb, 8)]
[ ---  CBRANCH (ram, 0x47f93b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003fd, 8), (unique, 0x100003fd, 8) CALL (ram, 0x426550, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (unique, 0x100001ea, 8) , (unique, 0x1000023a, 8), (unique, 0x1000023a, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x29, 8), (unique, 0x3480, 8) INT_MULT (ram, 0x4c4ec8, 8) , (const, 0x4, 8), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (unique, 0x1000029b, 8), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2f5, 4)]
[ ---  CALL (ram, 0x489410, 8) , (const, 0xc, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) COPY (const, 0x4afaf0, 8)]
[(ram, 0x4c4ec8, 8) COPY (ram, 0x4c4ec8, 8), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2f5, 4)]
[(ram, 0x4c7f40, 8) COPY (ram, 0x4c7f40, 8), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2f5, 4)]
[(ram, 0x4c8860, 8) COPY (ram, 0x4c8860, 8), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2f5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000405, 8) , (unique, 0x3580, 8), (unique, 0x10000405, 8) CAST (register, 0x0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x180, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1), (register, 0x0, 8) CAST (unique, 0x1000040d, 8), (unique, 0x1000040d, 8) CALL (ram, 0x401160, 8) , (unique, 0x3400, 8) , (unique, 0x100001e2, 8) , (unique, 0x100001ea, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x10000405, 8) , (unique, 0x3580, 8), (unique, 0x10000405, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x191, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x18e, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x180, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x17d, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x191, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x18e, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x180, 4), (ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x17d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001ea, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x1000034d, 8) COPY (ram, 0x4c7f40, 8), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x191, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x18e, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x180, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x17d, 4)]
[ ---  CBRANCH (ram, 0x47f80c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (ram, 0x4c7f40, 8) , (unique, 0x100001ea, 8), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x180, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x17d, 4)]
[(unique, 0x10000355, 8) COPY (unique, 0x100001ea, 8)]
[(ram, 0x4c7f40, 8) MULTIEQUAL (unique, 0x1000034d, 8) , (unique, 0x10000355, 8)]
[(unique, 0x100001d3, 4) INT_MULT (unique, 0x1000015f, 4) , (const, 0x2, 4), (unique, 0x1000015f, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100001e2, 8)]
[ ---  CBRANCH (ram, 0x47f884, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000031d, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f934, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x3, 8), (unique, 0x3100, 8) INT_SUB (unique, 0x1000031d, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x47f862, 1)]
[(register, 0x38, 8) INT_RIGHT (unique, 0x1000031d, 8) , (const, 0x2, 4)]
[(unique, 0x10000325, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x23b, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x23b, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x23b, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0x10000063, 16), (unique, 0x10000063, 16) INT_ADD (unique, 0x1000030d, 16) , (unique, 0x1000007b, 12), (unique, 0x1000030d, 16) INT_LEFT (unique, 0x100002fd, 16) , (const, 0x60, 16), (unique, 0x100002fd, 16) INT_SEXT (unique, 0x100001d3, 4), (unique, 0x1000007b, 12) INT_ADD (unique, 0x100002f1, 12) , (unique, 0x10000073, 8), (unique, 0x100002f1, 12) INT_LEFT (unique, 0x100002e5, 12) , (const, 0x40, 12), (unique, 0x100002e5, 12) INT_SEXT (unique, 0x100001d3, 4), (unique, 0x10000073, 8) INT_ADD (unique, 0x100002dd, 8) , (unique, 0x100001d3, 4), (unique, 0x100002dd, 8) INT_LEFT (unique, 0x100002d5, 8) , (const, 0x20, 8), (unique, 0x100002d5, 8) INT_SEXT (unique, 0x100001d3, 4), (unique, 0x3a00, 8) CAST (unique, 0x10000415, 8), (unique, 0x10000415, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000262, 8) , (const, 0x8, 8), (unique, 0x10000262, 8) INT_ADD (unique, 0x1000025a, 8) , (const, 0x5, 8), (unique, 0x1000025a, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000325, 8) , (unique, 0x1000032d, 8)]
[(unique, 0x1000032d, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000325, 8) , (unique, 0x1000032d, 8)]
[ ---  CBRANCH (ram, 0x47f840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000325, 8) , (unique, 0x1000032d, 8)]
[(register, 0x0, 8) INT_AND (unique, 0x1000031d, 8) , (const, 0xfffffffffffffffc, 8)]
[ ---  CBRANCH (ram, 0x47f884, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000183, 8) , (const, 0x0, 8), (unique, 0x10000183, 8) INT_AND (unique, 0x1000031d, 8) , (const, 0x3, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x262, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x262, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x262, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000042d, 8) , (unique, 0x100001d3, 4), (unique, 0x1000042d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x3400, 8) CAST (unique, 0x10000425, 8), (unique, 0x10000425, 8) INT_ADD (unique, 0x1000041d, 8) , (unique, 0x3300, 8), (unique, 0x1000041d, 8) CAST (register, 0x0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f884, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3100, 8) , (unique, 0x1000031d, 8), (unique, 0x3100, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x279, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x279, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x279, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001d3, 4), (unique, 0x3100, 8) CAST (unique, 0x1000043d, 8), (unique, 0x1000043d, 8) INT_ADD (unique, 0x10000435, 8) , (const, 0x2c, 8), (unique, 0x10000435, 8) CAST (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x47f884, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (unique, 0x1000031d, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x2, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x287, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x287, 4)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x287, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000445, 8) , (unique, 0x100001d3, 4), (unique, 0x10000445, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x29a, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x29a, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x29a, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x47f92a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (const, 0x0, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2d0, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2d0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x47f8c2, 1)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2b6, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2b6, 4)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2bc, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2b6, 4)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2bc, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2b6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) CALL (ram, 0x401060, 8) , (unique, 0x3400, 8) , (register, 0x80, 8) , (stack, 0xffffffffffffffa0, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x1000044d, 8) , (register, 0xb0, 8), (unique, 0x1000044d, 8) CAST (register, 0x0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x3100, 8) , (unique, 0x100001ea, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x1000020a, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2c3, 4), (ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x2bf, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2c3, 4), (ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x2bf, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x2c3, 4), (ram, 0x4c8860, 8) INDIRECT (unique, 0x1000035d, 8) , (const, 0x2bf, 4), (unique, 0x1000035d, 8) COPY (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000455, 8), (unique, 0x10000455, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x47f757, 1)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4c4ec8, 8) INDIRECT (ram, 0x4c4ec8, 8) , (const, 0x119, 4), (ram, 0x4c4ec8, 8) MULTIEQUAL (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8) , (ram, 0x4c4ec8, 8)]
[(ram, 0x4c7f40, 8) INDIRECT (ram, 0x4c7f40, 8) , (const, 0x119, 4), (ram, 0x4c7f40, 8) MULTIEQUAL (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8) , (ram, 0x4c7f40, 8)]
[(ram, 0x4c8860, 8) INDIRECT (ram, 0x4c8860, 8) , (const, 0x119, 4), (ram, 0x4c8860, 8) MULTIEQUAL (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8) , (ram, 0x4c8860, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x119, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x426b40, 8) , (unique, 0x100001f2, 8)]
[ ---  BRANCH (ram, 0x47f680, 1)]
