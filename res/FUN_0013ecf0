[(register, 0x20, 8) CAST (unique, 0x100000fd, 8), (unique, 0x100000fd, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(stack, 0xfffffffffffffff0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000105, 8), (unique, 0x10000105, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x100000e5, 8) COPY (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000a5, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100000a5, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(stack, 0xfffffffffffffff0, 8) MULTIEQUAL (stack, 0xfffffffffffffff0, 8) , (stack, 0xfffffffffffffff0, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (stack, 0xffffffffffffff58, 8) , (stack, 0xffffffffffffff58, 8)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100000e5, 8) , (unique, 0x100000ed, 8)]
[ ---  CBRANCH (ram, 0x13ed2a, 1) , (unique, 0xd300, 1), (unique, 0xd300, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000125, 8) , (unique, 0xbd80, 8), (unique, 0x10000125, 8) CAST (unique, 0x3a00, 8), (unique, 0xbd80, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000011d, 8), (unique, 0x1000011d, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x100000c5, 8) , (unique, 0x100000bd, 8) , (const, 0x1, 8), (unique, 0x100000c5, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (unique, 0x100000bd, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x8, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_RIGHT (unique, 0x10000115, 8) , (const, 0x6, 4), (unique, 0x10000115, 8) CAST (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4), (register, 0x0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xcc, 4)]
[(stack, 0xfffffffffffffeb8, 8) INDIRECT (unique, 0x100000f5, 8) , (const, 0xcc, 4), (unique, 0x100000f5, 8) COPY (register, 0x30, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (register, 0x0, 4) , (const, 0xcc, 4), (register, 0x0, 4) INT_LEFT (register, 0x0, 4) , (const, 0x1c, 4), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000012d, 8), (unique, 0x1000012d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000055, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000055, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f05a0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_RIGHT (unique, 0x10000115, 8) , (const, 0x6, 4), (unique, 0x10000115, 8) CAST (register, 0x8, 8), (register, 0x8, 8) INT_SEXT (register, 0x8, 4), (register, 0x0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xcc, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x86, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xcc, 4), (stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x86, 4)]
[(unique, 0x100000d5, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x13ed79, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13f110, 8) , (register, 0x38, 4) , (register, 0x20, 8) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000135, 8), (unique, 0x10000135, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff58, 8)]
[(unique, 0x100000dd, 8) COPY (stack, 0xffffffffffffff58, 8)]
[(register, 0x0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100000d5, 8) , (unique, 0x100000dd, 8)]
[ ---  CBRANCH (ram, 0x13ed97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xfffffffffffffff0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000013d, 8), (unique, 0x1000013d, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xfffffffffffffeb8, 8) INDIRECT (stack, 0xfffffffffffffeb8, 8) , (const, 0xfa, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xfa, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0xfa, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0x2c, 4)]
[(stack, 0xfffffffffffffff0, 8) INDIRECT (stack, 0xfffffffffffffff0, 8) , (const, 0x2c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100000ed, 8) COPY (unique, 0xb800, 8), (unique, 0xb800, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x13ed27, 1)]
