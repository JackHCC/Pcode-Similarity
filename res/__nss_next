[(register, 0x20, 8) CAST (unique, 0x1000034b, 8), (unique, 0x1000034b, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffb0, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x243f70, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x80, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x244009, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x2, 4)]
[(register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x2a8, 4)]
[(register, 0x30, 8) INDIRECT (register, 0x30, 8) , (const, 0x2a8, 4)]
[(register, 0x38, 8) INDIRECT (register, 0x38, 8) , (const, 0x2a8, 4), (register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x28f276, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2a8, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2a8, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2a8, 4)]
[ ---  CALL (ram, 0x177730, 8)]
[ ---  CBRANCH (ram, 0x244050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c8838, 8) , (const, 0x0, 8), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x2a8, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2f1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2f1, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x2f1, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2f1, 4)]
[ ---  CBRANCH (ram, 0x244074, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x228950, 8) , (unique, 0x10000211, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x10000229, 8), (unique, 0x10000229, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8838, 8), (unique, 0x10000211, 8) COPY (const, 0x28f2c4, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) COPY (ram, 0x4c8838, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000353, 8) , (ram, 0x4c8838, 8), (unique, 0x10000353, 8) CAST (register, 0x38, 8), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2d7, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2d7, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x2c3, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2d7, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x2c3, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) COPY (ram, 0x4c8838, 8), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x2d7, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x2c3, 4), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x229030, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (const, 0x0, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x243d7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x1, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000367, 8), (unique, 0x10000367, 8) INT_ADD (unique, 0x1000035f, 8) , (unique, 0x100002c9, 8), (unique, 0x1000035f, 8) CAST (unique, 0xbd80, 8), (unique, 0x100002c9, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x8, 8), (unique, 0x3900, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x1000035b, 4), (unique, 0x1000035b, 4) CAST (register, 0x8, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) COPY (ram, 0x4c8838, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x243fc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x100000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x243d7b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x100000001, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) COPY (ram, 0x4c8838, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x243f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000036f, 8), (unique, 0x1000036f, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x243dfd, 1)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x4f, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x4f, 4), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (stack, 0xffffffffffffffb0, 8), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  CBRANCH (ram, 0x243e24, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x4f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7d60, 4) , (const, 0x0, 4)]
[(ram, 0x4c7d60, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x243e47, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243e40, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x23f, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x23f, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x23f, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x23f, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x23e, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x23e, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x23e, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x23e, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x23e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x23e, 4)]
[ ---  CALL (ram, 0x2147c0, 8) , (unique, 0x10000221, 8), (unique, 0x10000221, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243e5d, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x82, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x82, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x82, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x82, 4), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x82, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x81, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x82, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x81, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x82, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x81, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x82, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x81, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x82, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x81, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x82, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x81, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x243fd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000037f, 8), (unique, 0x1000037f, 8) CALL (ram, 0x2024f0, 8) , (unique, 0x3100, 8) , (unique, 0x10000377, 8) , (unique, 0x10000201, 8), (unique, 0x10000377, 8) CAST (unique, 0x3100, 8), (unique, 0x10000201, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x243da1, 1)]
[ ---  CBRANCH (ram, 0x243d90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000387, 8) , (unique, 0x3100, 8), (unique, 0x10000387, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(register, 0x10, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100003af, 8), (unique, 0x100003af, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x10, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (unique, 0x100003a7, 8) , (const, 0x2f, 4), (unique, 0x100003a7, 8) CAST (unique, 0xbd80, 8), (unique, 0x4ff00, 8) INT_RIGHT (unique, 0x1000039f, 8) , (const, 0x11, 4), (unique, 0x1000039f, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000397, 8), (unique, 0x10000397, 8) INT_ADD (unique, 0x1000038f, 8) , (const, 0x8, 8), (unique, 0x1000038f, 8) CAST (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243e83, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa1, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xa1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xa1, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0xa1, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xa0, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xa0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa1, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xa0, 4)]
[(unique, 0x10000317, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b7, 8), (unique, 0x100003b7, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x243fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100003b7, 8), (unique, 0x100003b7, 8) CALL (ram, 0x11f8a0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x100003bf, 8), (unique, 0x100003bf, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243ea9, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbd, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xbd, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xba, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xb1, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xbd, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xba, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xb1, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0xbd, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0xba, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0xb1, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xbc, 4)]
[(unique, 0x1000031f, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xbd, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xbc, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x243fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2286d0, 8) , (register, 0xb0, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000030f, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x1000032f, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x243f3a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c7, 8), (unique, 0x100003c7, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243eda, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xf4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243eea, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x73736e5f, 4), (register, 0x20, 8) CAST (unique, 0x100003df, 8), (unique, 0x100003df, 8) INT_ADD (unique, 0x100003d7, 8) , (unique, 0x1000014b, 8), (unique, 0x100003d7, 8) CAST (register, 0x20, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x5f, 1), (unique, 0x3800, 8) CAST (unique, 0x10000407, 8), (unique, 0x10000407, 8) INT_ADD (unique, 0x100003ff, 8) , (unique, 0x100002a1, 8), (unique, 0x100003ff, 8) CAST (register, 0x20, 8), (unique, 0x100002a1, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0x4, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243f14, 8), (register, 0x20, 8) CAST (unique, 0x10000417, 8), (unique, 0x10000417, 8) INT_ADD (unique, 0x1000040f, 8) , (unique, 0x100002a9, 8), (unique, 0x1000040f, 8) CAST (register, 0x20, 8), (unique, 0x100002a9, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x5f, 1), (register, 0x0, 8) CAST (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x100002ef, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100003f7, 8) , (unique, 0x10000299, 8), (unique, 0x100003f7, 8) CAST (register, 0x20, 8), (unique, 0x10000299, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0x5, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (unique, 0x100002ef, 8) COPY (stack, 0xffffffffffffff98, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243f23, 8), (register, 0x20, 8) CAST (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) INT_ADD (unique, 0x10000427, 8) , (unique, 0x100002b1, 8), (unique, 0x10000427, 8) CAST (register, 0x20, 8), (unique, 0x100002b1, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x18a770, 8) , (unique, 0x3100, 8) , (unique, 0x100002ff, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) CAST (unique, 0x1000041f, 8), (unique, 0x1000041f, 8) CALL (ram, 0x18ee60, 8) , (unique, 0x3800, 8) , (unique, 0x100002ef, 8), (unique, 0x3800, 8) INT_ADD (unique, 0x100003f7, 8) , (unique, 0x10000299, 8), (unique, 0x100003f7, 8) CAST (register, 0x20, 8), (unique, 0x10000299, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0x5, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (unique, 0x100002ef, 8) COPY (stack, 0xffffffffffffff98, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243f2f, 8), (register, 0x20, 8) CAST (unique, 0x10000447, 8), (unique, 0x10000447, 8) INT_ADD (unique, 0x1000043f, 8) , (unique, 0x100002b9, 8), (unique, 0x1000043f, 8) CAST (register, 0x20, 8), (unique, 0x100002b9, 8) INT_ADD (unique, 0x1000014b, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x134, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xff, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf5, 4)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x134, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x12d, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x12a, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x125, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xff, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0xf5, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x134, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x12d, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x12a, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x125, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xff, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0xf5, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x134, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x12d, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x12a, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x125, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0xff, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0xf5, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x133, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x125, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x124, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x122, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xff, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffff98, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x133, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x124, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x122, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x133, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x124, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x122, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x133, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x124, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x122, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4)]
[(register, 0x0, 8) CALL (ram, 0x242ee0, 8) , (unique, 0xbd80, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000437, 8), (unique, 0x10000437, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x20, 8) CAST (unique, 0x100003ef, 8), (unique, 0x100003ef, 8) INT_ADD (unique, 0x100003e7, 8) , (unique, 0x1000014b, 8), (unique, 0x100003e7, 8) CAST (register, 0x20, 8), (unique, 0x1000014b, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x3a00, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (stack, 0xffffffffffffffa0, 8) , (const, 0x16, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100002ff, 8), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa0, 8) COPY (register, 0x0, 8), (unique, 0x100002ff, 8) COPY (stack, 0xffffffffffffffc0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (unique, 0x100003cf, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf5, 4), (unique, 0x100003cf, 8) CAST (unique, 0x3100, 8), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf4, 4), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x6, 8) , (const, 0x8, 8)]
[(unique, 0x10000307, 8) COPY (stack, 0xffffffffffffff90, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x134, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x133, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x125, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x124, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x122, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xff, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffff90, 8) COPY (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000337, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x134, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x133, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12d, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x125, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x124, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x122, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x11f, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xff, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xfe, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xf5, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xf4, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x1000032f, 8) , (unique, 0x10000337, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x15d, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x15d, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x15d, 4), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000457, 8), (unique, 0x10000457, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x0, 8) , (const, 0x11, 4), (register, 0x0, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000044f, 8), (unique, 0x1000044f, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x1000030f, 8) , (unique, 0x10000307, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x0, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x243da1, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243ff6, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x2028b0, 8) , (unique, 0x3100, 8) , (unique, 0x1000045f, 8) , (unique, 0x10000209, 8), (unique, 0x1000045f, 8) CAST (unique, 0x3100, 8), (unique, 0x10000209, 8) PTRSUB (const, 0x0, 8) , (const, 0x228290, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x244002, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1fa, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f3, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1fa, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1f3, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1fa, 4), (ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1f3, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x1fa, 4), (ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x1f3, 4), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1fa, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1fa, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1fa, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1fa, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000317, 8) , (unique, 0x1000031f, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1fa, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1fa, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f9, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0x100002f7, 8), (unique, 0x100002f7, 8) COPY (stack, 0xffffffffffffffa8, 8), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f3, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f2, 4), (stack, 0xffffffffffffffa8, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000317, 8) , (unique, 0x1000031f, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x243da1, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[(ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x243db5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c87a0, 4) , (const, 0x0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000343, 4) COPY (unique, 0x100002e9, 4), (unique, 0x100002e9, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x243dd7, 1) , (unique, 0x100002ed, 1), (unique, 0x100002ed, 1) INT_NOTEQUAL (unique, 0x100002e9, 4) , (const, 0x0, 4), (unique, 0x100002e9, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x20, 8) , (const, 0x243dd0, 8), (register, 0x20, 8) CAST (unique, 0x1000046f, 8), (unique, 0x1000046f, 8) INT_ADD (unique, 0x10000467, 8) , (const, 0xffffffffffffff78, 8), (unique, 0x10000467, 8) CAST (register, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d8, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x1d8, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x1d8, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1d7, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1d7, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1d7, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1d7, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d8, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d7, 4)]
[ ---  CALL (ram, 0x2147f0, 8) , (unique, 0x10000219, 8), (unique, 0x10000219, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c7d60, 8)]
[(unique, 0x10000327, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x1d8, 4)]
[(unique, 0x1000033f, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x1d8, 4), (ram, 0x4c7d60, 4) INT_ADD (ram, 0x4c7d60, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c7d60, 4) INDIRECT (ram, 0x4c7d60, 4) , (const, 0x17f, 4), (ram, 0x4c7d60, 4) COPY (unique, 0x10000347, 4), (unique, 0x10000347, 4) MULTIEQUAL (unique, 0x1000033f, 4) , (unique, 0x10000343, 4)]
[(ram, 0x4c87a0, 4) INDIRECT (ram, 0x4c87a0, 4) , (const, 0x17f, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) INDIRECT (ram, 0x4c8838, 8) , (const, 0x17f, 4), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000327, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x243fa8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000327, 8) , (register, 0x10, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) COPY (ram, 0x4c8838, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x243f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000047f, 8), (unique, 0x1000047f, 8) INT_ADD (unique, 0x10000477, 8) , (const, 0xc, 8), (unique, 0x10000477, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x243f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000487, 8), (unique, 0x10000487, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x4c7d60, 4) COPY (ram, 0x4c7d60, 4), (ram, 0x4c7d60, 4) MULTIEQUAL (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4) , (ram, 0x4c7d60, 4)]
[(ram, 0x4c87a0, 4) COPY (ram, 0x4c87a0, 4), (ram, 0x4c87a0, 4) MULTIEQUAL (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4) , (ram, 0x4c87a0, 4)]
[(ram, 0x4c8838, 8) COPY (ram, 0x4c8838, 8), (ram, 0x4c8838, 8) MULTIEQUAL (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8) , (ram, 0x4c8838, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
