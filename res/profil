[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[ ---  CBRANCH (ram, 0x208ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x208fe0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c6418, 8) , (const, 0x0, 8)]
[(ram, 0x4c6400, 4) COPY (ram, 0x4c6400, 4)]
[(ram, 0x4c6408, 8) COPY (ram, 0x4c6408, 8)]
[(ram, 0x4c6410, 8) COPY (ram, 0x4c6410, 8)]
[(ram, 0x4c6418, 8) COPY (ram, 0x4c6418, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4c6400, 4) INDIRECT (ram, 0x4c6400, 4) , (const, 0x11b, 4)]
[(ram, 0x4c6408, 8) INDIRECT (ram, 0x4c6408, 8) , (const, 0x11b, 4)]
[(ram, 0x4c6410, 8) INDIRECT (ram, 0x4c6410, 8) , (const, 0x11b, 4)]
[(ram, 0x4c6418, 8) INDIRECT (ram, 0x4c6418, 8) , (const, 0x11b, 4)]
[ ---  CBRANCH (ram, 0x209040, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1bec00, 8) , (const, 0x2, 4) , (unique, 0x100000fb, 8) , (const, 0x0, 8), (unique, 0x100000fb, 8) CAST (unique, 0x10000137, 8), (unique, 0x10000137, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c63e0, 8)]
[(ram, 0x4c6400, 4) COPY (ram, 0x4c6400, 4), (ram, 0x4c6400, 4) INDIRECT (ram, 0x4c6400, 4) , (const, 0x135, 4)]
[(ram, 0x4c6408, 8) COPY (ram, 0x4c6408, 8), (ram, 0x4c6408, 8) INDIRECT (ram, 0x4c6408, 8) , (const, 0x135, 4)]
[(ram, 0x4c6410, 8) COPY (ram, 0x4c6410, 8), (ram, 0x4c6410, 8) INDIRECT (ram, 0x4c6410, 8) , (const, 0x135, 4)]
[(ram, 0x4c6418, 8) COPY (ram, 0x4c6418, 8), (ram, 0x4c6418, 8) INDIRECT (ram, 0x4c6418, 8) , (const, 0x135, 4), (ram, 0x4c6418, 8) COPY (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (const, 0x1b, 4) , (unique, 0x100000e3, 8) , (const, 0x0, 8), (unique, 0x100000e3, 8) CAST (unique, 0x1000013f, 8), (unique, 0x1000013f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6340, 8)]
[ ---  CBRANCH (ram, 0x208ec2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c6418, 8) , (const, 0x0, 8)]
[(ram, 0x4c6400, 4) INDIRECT (ram, 0x4c6400, 4) , (const, 0x3c, 4)]
[(ram, 0x4c6408, 8) INDIRECT (ram, 0x4c6408, 8) , (const, 0x3c, 4)]
[(ram, 0x4c6410, 8) INDIRECT (ram, 0x4c6410, 8) , (const, 0x3c, 4)]
[(ram, 0x4c6418, 8) INDIRECT (ram, 0x4c6418, 8) , (const, 0x3c, 4)]
[ ---  CBRANCH (ram, 0x209040, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1bec00, 8) , (const, 0x2, 4) , (unique, 0x100000f3, 8) , (const, 0x0, 8), (unique, 0x100000f3, 8) CAST (unique, 0x10000147, 8), (unique, 0x10000147, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c63e0, 8)]
[(ram, 0x4c6400, 4) INDIRECT (ram, 0x4c6400, 4) , (const, 0x55, 4)]
[(ram, 0x4c6408, 8) INDIRECT (ram, 0x4c6408, 8) , (const, 0x55, 4)]
[(ram, 0x4c6410, 8) INDIRECT (ram, 0x4c6410, 8) , (const, 0x55, 4)]
[(ram, 0x4c6418, 8) INDIRECT (ram, 0x4c6418, 8) , (const, 0x55, 4)]
[ ---  CBRANCH (ram, 0x209040, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (const, 0x1b, 4) , (unique, 0x100000db, 8) , (const, 0x0, 8), (unique, 0x100000db, 8) CAST (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6340, 8)]
[(ram, 0x4c6400, 4) INDIRECT (unique, 0x1000011b, 4) , (const, 0xac, 4), (unique, 0x1000011b, 4) COPY (register, 0x8, 4)]
[(ram, 0x4c6408, 8) INDIRECT (unique, 0x1000011f, 8) , (const, 0xac, 4), (unique, 0x1000011f, 8) COPY (register, 0x10, 8)]
[(ram, 0x4c6410, 8) INDIRECT (register, 0x18, 8) , (const, 0xac, 4), (register, 0x18, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)]
[(ram, 0x4c6418, 8) INDIRECT (unique, 0x10000127, 8) , (const, 0xac, 4), (unique, 0x10000127, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff38, 8) PTRSUB (const, 0x0, 8) , (const, 0x208e10, 8)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff40, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff48, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff50, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff58, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff60, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff68, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff70, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff78, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff80, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff88, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff90, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xac, 4), (stack, 0xffffffffffffff98, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffa8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffb0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xac, 4), (stack, 0xffffffffffffffb8, 8) COPY (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xac, 4), (stack, 0xffffffffffffffc0, 4) COPY (const, 0x10000000, 4)]
[ ---  CBRANCH (ram, 0x209040, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (const, 0x1b, 4) , (unique, 0x3800, 8) , (unique, 0x100000eb, 8), (unique, 0x100000eb, 8) CAST (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c6340, 8), (unique, 0x3800, 8) CAST (unique, 0x10000157, 8), (unique, 0x10000157, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff18, 8) INDIRECT (stack, 0xffffffffffffff18, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff18, 8) COPY (stack, 0xffffffffffffff28, 8), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xbc, 4), (stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff20, 8) INDIRECT (register, 0x0, 8) , (const, 0xe2, 4), (register, 0x0, 8) INT_SEXT (unique, 0x100000cf, 4), (unique, 0x100000cf, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x209a80, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xbc, 4), (stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (unique, 0x1000012f, 8) , (const, 0xe2, 4), (unique, 0x1000012f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100000cf, 4), (unique, 0x100000cf, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x209a80, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff40, 8) INDIRECT (stack, 0xffffffffffffff40, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff48, 8) INDIRECT (stack, 0xffffffffffffff48, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff50, 8) INDIRECT (stack, 0xffffffffffffff50, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff58, 8) INDIRECT (stack, 0xffffffffffffff58, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff60, 8) INDIRECT (stack, 0xffffffffffffff60, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff70, 8) INDIRECT (stack, 0xffffffffffffff70, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff78, 8) INDIRECT (stack, 0xffffffffffffff78, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff80, 8) INDIRECT (stack, 0xffffffffffffff80, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe2, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xbc, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xe2, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xbc, 4)]
[(ram, 0x4c6400, 4) COPY (ram, 0x4c6400, 4), (ram, 0x4c6400, 4) INDIRECT (ram, 0x4c6400, 4) , (const, 0xe2, 4), (ram, 0x4c6400, 4) INDIRECT (ram, 0x4c6400, 4) , (const, 0xbc, 4)]
[(ram, 0x4c6408, 8) COPY (ram, 0x4c6408, 8), (ram, 0x4c6408, 8) INDIRECT (ram, 0x4c6408, 8) , (const, 0xe2, 4), (ram, 0x4c6408, 8) INDIRECT (ram, 0x4c6408, 8) , (const, 0xbc, 4)]
[(ram, 0x4c6410, 8) COPY (ram, 0x4c6410, 8), (ram, 0x4c6410, 8) INDIRECT (ram, 0x4c6410, 8) , (const, 0xe2, 4), (ram, 0x4c6410, 8) INDIRECT (ram, 0x4c6410, 8) , (const, 0xbc, 4)]
[(ram, 0x4c6418, 8) COPY (ram, 0x4c6418, 8), (ram, 0x4c6418, 8) INDIRECT (ram, 0x4c6418, 8) , (const, 0xe2, 4), (ram, 0x4c6418, 8) INDIRECT (ram, 0x4c6418, 8) , (const, 0xbc, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1bec00, 8) , (const, 0x2, 4) , (register, 0x20, 8) , (unique, 0x10000103, 8), (unique, 0x10000103, 8) CAST (unique, 0x10000167, 8), (unique, 0x10000167, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c63e0, 8)]
[(ram, 0x4c6400, 4) COPY (ram, 0x4c6400, 4), (ram, 0x4c6400, 4) MULTIEQUAL (ram, 0x4c6400, 4) , (ram, 0x4c6400, 4) , (ram, 0x4c6400, 4) , (ram, 0x4c6400, 4)]
[(ram, 0x4c6408, 8) COPY (ram, 0x4c6408, 8), (ram, 0x4c6408, 8) MULTIEQUAL (ram, 0x4c6408, 8) , (ram, 0x4c6408, 8) , (ram, 0x4c6408, 8) , (ram, 0x4c6408, 8)]
[(ram, 0x4c6410, 8) COPY (ram, 0x4c6410, 8), (ram, 0x4c6410, 8) MULTIEQUAL (ram, 0x4c6410, 8) , (ram, 0x4c6410, 8) , (ram, 0x4c6410, 8) , (ram, 0x4c6410, 8)]
[(ram, 0x4c6418, 8) COPY (ram, 0x4c6418, 8), (ram, 0x4c6418, 8) MULTIEQUAL (ram, 0x4c6418, 8) , (ram, 0x4c6418, 8) , (ram, 0x4c6418, 8) , (ram, 0x4c6418, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
