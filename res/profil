[(register, 0x20, 8) CAST (unique, 0x10000239, 8), (unique, 0x10000239, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff18, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000241, 8), (unique, 0x10000241, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2243e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2243bd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee518, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x125, 4)]
[(ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0x125, 4)]
[(ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0x125, 4)]
[(ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0x125, 4)]
[(ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x125, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x125, 4)]
[ ---  CBRANCH (ram, 0x224420, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1d5e50, 8) , (const, 0x2, 4) , (unique, 0x10000205, 8) , (const, 0x0, 8), (unique, 0x10000205, 8) CAST (unique, 0x10000249, 8), (unique, 0x10000249, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee4e0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0x13f, 4)]
[(ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0x13f, 4)]
[(ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0x13f, 4), (ram, 0x4ee518, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x13f, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x13f, 4)]
[(register, 0x0, 4) CALL (ram, 0x13f110, 8) , (const, 0x1b, 4) , (unique, 0x100001ed, 8) , (const, 0x0, 8), (unique, 0x100001ed, 8) CAST (unique, 0x10000251, 8), (unique, 0x10000251, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee440, 8)]
[ ---  BRANCH (ram, 0x2243bd, 1)]
[ ---  CBRANCH (ram, 0x224307, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee518, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d, 4)]
[(ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0x4d, 4)]
[(ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0x4d, 4)]
[(ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0x4d, 4)]
[(ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4d, 4)]
[ ---  CBRANCH (ram, 0x224420, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1d5e50, 8) , (const, 0x2, 4) , (unique, 0x100001fd, 8) , (const, 0x0, 8), (unique, 0x100001fd, 8) CAST (unique, 0x10000259, 8), (unique, 0x10000259, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee4e0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x66, 4)]
[(ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0x66, 4)]
[(ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0x66, 4)]
[(ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0x66, 4)]
[(ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x66, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x66, 4)]
[ ---  CBRANCH (ram, 0x224420, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13f110, 8) , (const, 0x1b, 4) , (unique, 0x100001e5, 8) , (const, 0x0, 8), (unique, 0x100001e5, 8) CAST (unique, 0x10000261, 8), (unique, 0x10000261, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee440, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb1, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ee500, 4) INDIRECT (unique, 0x10000225, 4) , (const, 0xb1, 4), (unique, 0x10000225, 4) COPY (register, 0x8, 4)]
[(ram, 0x4ee508, 8) INDIRECT (unique, 0x10000229, 8) , (const, 0xb1, 4), (unique, 0x10000229, 8) COPY (register, 0x10, 8)]
[(ram, 0x4ee510, 8) INDIRECT (register, 0x18, 8) , (const, 0xb1, 4), (register, 0x18, 8) INT_RIGHT (register, 0x30, 8) , (const, 0x1, 4)]
[(ram, 0x4ee518, 8) INDIRECT (unique, 0x10000231, 8) , (const, 0xb1, 4), (unique, 0x10000231, 8) COPY (register, 0x38, 8)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff18, 4) MULTIEQUAL (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff20, 4) MULTIEQUAL (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff24, 4) MULTIEQUAL (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xb1, 4), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0xb1, 4), (stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xb1, 4), (stack, 0xffffffffffffff38, 8) PTRSUB (const, 0x0, 8) , (const, 0x224240, 8)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff40, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff44, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff48, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff4c, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff50, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff54, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff58, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff5c, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff60, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff64, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff68, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff6c, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff70, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff74, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff78, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff7c, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff80, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff84, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff88, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff8c, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff90, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff94, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff98, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffff9c, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffa0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffa4, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffa8, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffac, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffb0, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffb4, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffb8, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffbc, 4) COPY (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xb1, 4), (stack, 0xffffffffffffffc0, 4) COPY (const, 0x10000000, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xb1, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x224420, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13f110, 8) , (const, 0x1b, 4) , (unique, 0x3800, 8) , (unique, 0x100001f5, 8), (unique, 0x100001f5, 8) CAST (unique, 0x10000271, 8), (unique, 0x10000271, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee440, 8), (unique, 0x3800, 8) CAST (unique, 0x10000269, 8), (unique, 0x10000269, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffff90, 4) MULTIEQUAL (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4)]
[(stack, 0xffffffffffffff8c, 4) MULTIEQUAL (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffff7c, 4) MULTIEQUAL (stack, 0xffffffffffffff7c, 4) , (stack, 0xffffffffffffff7c, 4) , (stack, 0xffffffffffffff7c, 4) , (stack, 0xffffffffffffff7c, 4)]
[(stack, 0xffffffffffffff78, 4) MULTIEQUAL (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(stack, 0xffffffffffffff48, 4) MULTIEQUAL (stack, 0xffffffffffffff48, 4) , (stack, 0xffffffffffffff48, 4) , (stack, 0xffffffffffffff48, 4) , (stack, 0xffffffffffffff48, 4)]
[(stack, 0xffffffffffffff44, 4) MULTIEQUAL (stack, 0xffffffffffffff44, 4) , (stack, 0xffffffffffffff44, 4) , (stack, 0xffffffffffffff44, 4) , (stack, 0xffffffffffffff44, 4)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff24, 4) MULTIEQUAL (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4)]
[(stack, 0xffffffffffffff20, 4) MULTIEQUAL (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff18, 4) MULTIEQUAL (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4)]
[(ram, 0x4ee518, 8) MULTIEQUAL (ram, 0x4ee518, 8) , (ram, 0x4ee518, 8) , (ram, 0x4ee518, 8) , (ram, 0x4ee518, 8)]
[(ram, 0x4ee510, 8) MULTIEQUAL (ram, 0x4ee510, 8) , (ram, 0x4ee510, 8) , (ram, 0x4ee510, 8) , (ram, 0x4ee510, 8)]
[(ram, 0x4ee508, 8) MULTIEQUAL (ram, 0x4ee508, 8) , (ram, 0x4ee508, 8) , (ram, 0x4ee508, 8) , (ram, 0x4ee508, 8)]
[(ram, 0x4ee500, 4) MULTIEQUAL (ram, 0x4ee500, 4) , (ram, 0x4ee500, 4) , (ram, 0x4ee500, 4) , (ram, 0x4ee500, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x2243bd, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe1, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc1, 4)]
[(ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0xe1, 4), (ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0xc1, 4)]
[(ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0xe1, 4), (ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0xc1, 4)]
[(ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0xe1, 4), (ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0xc1, 4)]
[(ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0xe1, 4), (ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff18, 4) COPY (stack, 0xffffffffffffff28, 4), (stack, 0xffffffffffffff28, 4) SUBPIECE (stack, 0xffffffffffffff28, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xc1, 4), (stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff1c, 4) COPY (stack, 0xffffffffffffff2c, 4), (stack, 0xffffffffffffff2c, 4) SUBPIECE (stack, 0xffffffffffffff28, 8) , (const, 0x4, 8), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xc1, 4), (stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (unique, 0x100000d8, 4) , (const, 0xe1, 4), (unique, 0x100000d8, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x224de0, 8)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff24, 4) COPY (stack, 0xffffffffffffff34, 4), (stack, 0xffffffffffffff34, 4) INT_SRIGHT (unique, 0x100000d8, 4) , (const, 0x1f, 4), (unique, 0x100000d8, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x224de0, 8)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xe1, 4), (stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0xc1, 4), (stack, 0xffffffffffffff28, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (register, 0x0, 8) , (const, 0xe1, 4), (register, 0x0, 8) INT_SEXT (unique, 0x100000d8, 4), (unique, 0x100000d8, 4) SUBPIECE (unique, 0x34400, 8) , (const, 0x0, 4), (unique, 0x34400, 8) INT_SDIV (const, 0xf4240, 8) , (unique, 0x34080, 8), (unique, 0x34080, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x224de0, 8)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xe1, 4), (stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xe1, 4), (stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0xc1, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe1, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xc1, 4)]
[(register, 0x0, 4) CALL (ram, 0x1d5e50, 8) , (const, 0x2, 4) , (register, 0x20, 8) , (unique, 0x1000020d, 8), (unique, 0x1000020d, 8) CAST (unique, 0x10000279, 8), (unique, 0x10000279, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee4e0, 8)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4) , (stack, 0xffffffffffffffb0, 4)]
[(stack, 0xffffffffffffffac, 4) MULTIEQUAL (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4) , (stack, 0xffffffffffffffac, 4)]
[(stack, 0xffffffffffffffa8, 4) MULTIEQUAL (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4) , (stack, 0xffffffffffffffa8, 4)]
[(stack, 0xffffffffffffffa4, 4) MULTIEQUAL (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4) , (stack, 0xffffffffffffffa4, 4)]
[(stack, 0xffffffffffffffa0, 4) MULTIEQUAL (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4) , (stack, 0xffffffffffffffa0, 4)]
[(stack, 0xffffffffffffff9c, 4) MULTIEQUAL (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4) , (stack, 0xffffffffffffff9c, 4)]
[(stack, 0xffffffffffffff98, 4) MULTIEQUAL (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4) , (stack, 0xffffffffffffff98, 4)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4) , (stack, 0xffffffffffffff94, 4)]
[(stack, 0xffffffffffffff90, 4) MULTIEQUAL (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4) , (stack, 0xffffffffffffff90, 4)]
[(stack, 0xffffffffffffff8c, 4) MULTIEQUAL (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4) , (stack, 0xffffffffffffff8c, 4)]
[(stack, 0xffffffffffffff88, 4) MULTIEQUAL (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4) , (stack, 0xffffffffffffff88, 4)]
[(stack, 0xffffffffffffff84, 4) MULTIEQUAL (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4) , (stack, 0xffffffffffffff84, 4)]
[(stack, 0xffffffffffffff80, 4) MULTIEQUAL (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4) , (stack, 0xffffffffffffff80, 4)]
[(stack, 0xffffffffffffff7c, 4) MULTIEQUAL (stack, 0xffffffffffffff7c, 4) , (stack, 0xffffffffffffff7c, 4) , (stack, 0xffffffffffffff7c, 4) , (stack, 0xffffffffffffff7c, 4)]
[(stack, 0xffffffffffffff78, 4) MULTIEQUAL (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4) , (stack, 0xffffffffffffff78, 4)]
[(stack, 0xffffffffffffff74, 4) MULTIEQUAL (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4) , (stack, 0xffffffffffffff74, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff6c, 4) MULTIEQUAL (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4) , (stack, 0xffffffffffffff6c, 4)]
[(stack, 0xffffffffffffff68, 4) MULTIEQUAL (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4) , (stack, 0xffffffffffffff68, 4)]
[(stack, 0xffffffffffffff64, 4) MULTIEQUAL (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4) , (stack, 0xffffffffffffff64, 4)]
[(stack, 0xffffffffffffff60, 4) MULTIEQUAL (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4) , (stack, 0xffffffffffffff60, 4)]
[(stack, 0xffffffffffffff5c, 4) MULTIEQUAL (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4) , (stack, 0xffffffffffffff5c, 4)]
[(stack, 0xffffffffffffff58, 4) MULTIEQUAL (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4) , (stack, 0xffffffffffffff58, 4)]
[(stack, 0xffffffffffffff54, 4) MULTIEQUAL (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4) , (stack, 0xffffffffffffff54, 4)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffff4c, 4) MULTIEQUAL (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4) , (stack, 0xffffffffffffff4c, 4)]
[(stack, 0xffffffffffffff48, 4) MULTIEQUAL (stack, 0xffffffffffffff48, 4) , (stack, 0xffffffffffffff48, 4) , (stack, 0xffffffffffffff48, 4) , (stack, 0xffffffffffffff48, 4)]
[(stack, 0xffffffffffffff44, 4) MULTIEQUAL (stack, 0xffffffffffffff44, 4) , (stack, 0xffffffffffffff44, 4) , (stack, 0xffffffffffffff44, 4) , (stack, 0xffffffffffffff44, 4)]
[(stack, 0xffffffffffffff40, 4) MULTIEQUAL (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4) , (stack, 0xffffffffffffff40, 4)]
[(stack, 0xffffffffffffff38, 8) MULTIEQUAL (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8) , (stack, 0xffffffffffffff38, 8)]
[(stack, 0xffffffffffffff30, 8) MULTIEQUAL (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8) , (stack, 0xffffffffffffff30, 8)]
[(stack, 0xffffffffffffff28, 8) MULTIEQUAL (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8) , (stack, 0xffffffffffffff28, 8)]
[(stack, 0xffffffffffffff24, 4) MULTIEQUAL (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4) , (stack, 0xffffffffffffff24, 4)]
[(stack, 0xffffffffffffff20, 4) MULTIEQUAL (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4) , (stack, 0xffffffffffffff20, 4)]
[(stack, 0xffffffffffffff1c, 4) MULTIEQUAL (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4) , (stack, 0xffffffffffffff1c, 4)]
[(stack, 0xffffffffffffff18, 4) MULTIEQUAL (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4) , (stack, 0xffffffffffffff18, 4)]
[(ram, 0x4ee518, 8) MULTIEQUAL (ram, 0x4ee518, 8) , (ram, 0x4ee518, 8) , (ram, 0x4ee518, 8) , (ram, 0x4ee518, 8)]
[(ram, 0x4ee510, 8) MULTIEQUAL (ram, 0x4ee510, 8) , (ram, 0x4ee510, 8) , (ram, 0x4ee510, 8) , (ram, 0x4ee510, 8)]
[(ram, 0x4ee508, 8) MULTIEQUAL (ram, 0x4ee508, 8) , (ram, 0x4ee508, 8) , (ram, 0x4ee508, 8) , (ram, 0x4ee508, 8)]
[(ram, 0x4ee500, 4) MULTIEQUAL (ram, 0x4ee500, 4) , (ram, 0x4ee500, 4) , (ram, 0x4ee500, 4) , (ram, 0x4ee500, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x224427, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000281, 8), (unique, 0x10000281, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffff18, 4) INDIRECT (stack, 0xffffffffffffff18, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff1c, 4) INDIRECT (stack, 0xffffffffffffff1c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff20, 4) INDIRECT (stack, 0xffffffffffffff20, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff24, 4) INDIRECT (stack, 0xffffffffffffff24, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff28, 8) INDIRECT (stack, 0xffffffffffffff28, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff30, 8) INDIRECT (stack, 0xffffffffffffff30, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff38, 8) INDIRECT (stack, 0xffffffffffffff38, 8) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff40, 4) INDIRECT (stack, 0xffffffffffffff40, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff44, 4) INDIRECT (stack, 0xffffffffffffff44, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff48, 4) INDIRECT (stack, 0xffffffffffffff48, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff4c, 4) INDIRECT (stack, 0xffffffffffffff4c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff54, 4) INDIRECT (stack, 0xffffffffffffff54, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff58, 4) INDIRECT (stack, 0xffffffffffffff58, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff5c, 4) INDIRECT (stack, 0xffffffffffffff5c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff60, 4) INDIRECT (stack, 0xffffffffffffff60, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff64, 4) INDIRECT (stack, 0xffffffffffffff64, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff68, 4) INDIRECT (stack, 0xffffffffffffff68, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff6c, 4) INDIRECT (stack, 0xffffffffffffff6c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff70, 4) INDIRECT (stack, 0xffffffffffffff70, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff74, 4) INDIRECT (stack, 0xffffffffffffff74, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff78, 4) INDIRECT (stack, 0xffffffffffffff78, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff7c, 4) INDIRECT (stack, 0xffffffffffffff7c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff80, 4) INDIRECT (stack, 0xffffffffffffff80, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff84, 4) INDIRECT (stack, 0xffffffffffffff84, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff88, 4) INDIRECT (stack, 0xffffffffffffff88, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff8c, 4) INDIRECT (stack, 0xffffffffffffff8c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff90, 4) INDIRECT (stack, 0xffffffffffffff90, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff94, 4) INDIRECT (stack, 0xffffffffffffff94, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff98, 4) INDIRECT (stack, 0xffffffffffffff98, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffff9c, 4) INDIRECT (stack, 0xffffffffffffff9c, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffa0, 4) INDIRECT (stack, 0xffffffffffffffa0, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffa4, 4) INDIRECT (stack, 0xffffffffffffffa4, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffa8, 4) INDIRECT (stack, 0xffffffffffffffa8, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffac, 4) INDIRECT (stack, 0xffffffffffffffac, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffb0, 4) INDIRECT (stack, 0xffffffffffffffb0, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x108, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x108, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ee500, 4) COPY (ram, 0x4ee500, 4), (ram, 0x4ee500, 4) INDIRECT (ram, 0x4ee500, 4) , (const, 0x108, 4)]
[(ram, 0x4ee508, 8) COPY (ram, 0x4ee508, 8), (ram, 0x4ee508, 8) INDIRECT (ram, 0x4ee508, 8) , (const, 0x108, 4)]
[(ram, 0x4ee510, 8) COPY (ram, 0x4ee510, 8), (ram, 0x4ee510, 8) INDIRECT (ram, 0x4ee510, 8) , (const, 0x108, 4)]
[(ram, 0x4ee518, 8) COPY (ram, 0x4ee518, 8), (ram, 0x4ee518, 8) INDIRECT (ram, 0x4ee518, 8) , (const, 0x108, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ee500, 4) COPY (ram, 0x4ee500, 4)]
[(ram, 0x4ee508, 8) COPY (ram, 0x4ee508, 8)]
[(ram, 0x4ee510, 8) COPY (ram, 0x4ee510, 8)]
[(ram, 0x4ee518, 8) COPY (ram, 0x4ee518, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
