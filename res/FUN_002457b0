[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000257, 8), (unique, 0x10000257, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2457e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae28, 8) , (const, 0x40, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x245810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x2, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000025f, 8), (unique, 0x1000025f, 8) INT_ADD (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0x100001ff, 4) COPY (ram, 0x4eb428, 4)]
[ ---  CBRANCH (ram, 0x245878, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4eb428, 4) , (const, 0x1, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000267, 8), (unique, 0x10000267, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10a, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x10a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10a, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x10a, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x10a, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x10a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x10a, 4)]
[ ---  CBRANCH (ram, 0x2457e4, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222ec0, 8) , (const, 0x2, 4) , (const, 0x80002, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2458bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4efba0, 4) , (const, 0x0, 4)]
[(ram, 0x4efba0, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4efba0, 4) , (const, 0x0, 4)]
[(ram, 0x4efba0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x2458de, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x326, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x326, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x326, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x326, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x326, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x326, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x326, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x326, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x326, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x326, 4)]
[ ---  CALL (ram, 0x230690, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000213, 4) COPY (ram, 0x4eb428, 4), (ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[ ---  CBRANCH (ram, 0x245938, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (ram, 0x4eb428, 4) , (const, 0x1, 4), (ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x19a, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x19a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19a, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x19a, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x19a, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x19a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x19a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19a, 4)]
[ ---  CALL (ram, 0x242360, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (register, 0x0, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8)]
[(unique, 0x100001cf, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x19a, 4)]
[ ---  CBRANCH (ram, 0x245a47, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x19a, 4)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x245a31, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x1d5, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x1d5, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x1d5, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1d5, 4)]
[(unique, 0x1000024f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x0, 8) , (const, 0xc, 8), (register, 0x0, 8) INT_SEXT (stack, 0xffffffffffffffb4, 4)]
[ ---  CBRANCH (ram, 0x245a5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_MULT (register, 0x0, 8) , (const, 0xc, 8), (register, 0x0, 8) INT_SEXT (stack, 0xffffffffffffffb4, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x245a25, 1)]
[ ---  CBRANCH (ram, 0x245a09, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (stack, 0xffffffffffffffb4, 4) , (const, 0x1, 4)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0x28, 4) COPY (const, 0x0, 4)]
[(register, 0x80, 4) COPY (const, 0x0, 4)]
[(unique, 0x10000203, 4) COPY (stack, 0xffffffffffffffb4, 4)]
[ ---  BRANCH (ram, 0x24599d, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4ec9c0, 8) MULTIEQUAL (unique, 0x1000024f, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x80, 4) MULTIEQUAL (register, 0x80, 4) , (register, 0x80, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x100001ef, 8) COPY (register, 0x8, 8), (register, 0x8, 8) INT_MULT (register, 0x10, 8) , (const, 0xc, 8), (register, 0x10, 8) INT_SEXT (register, 0x28, 4), (register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(unique, 0x10000207, 4) COPY (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x10000203, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x245990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x2, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000277, 8), (unique, 0x10000277, 8) INT_ADD (unique, 0x1000026f, 8) , (const, 0x10, 8), (unique, 0x1000026f, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100001cf, 8) , (register, 0xb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) CAST (unique, 0x10000297, 8), (unique, 0x10000297, 8) INT_ADD (unique, 0x1000028f, 8) , (register, 0x8, 8), (unique, 0x1000028f, 8) CAST (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x10000297, 8), (unique, 0x10000297, 8) INT_ADD (unique, 0x1000028f, 8) , (register, 0x8, 8), (unique, 0x1000028f, 8) CAST (register, 0x0, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000287, 8), (unique, 0x10000287, 8) INT_ADD (unique, 0x1000027f, 8) , (const, 0x14, 8), (unique, 0x1000027f, 8) CAST (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x267, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x267, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x259, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x24e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x267, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x259, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x24e, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x267, 4), (ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x259, 4), (ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x24e, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x267, 4), (ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x259, 4), (ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x24e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x267, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x259, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x24e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x267, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x267, 4)]
[(unique, 0x100001c7, 8) COPY (ram, 0x4ec9c0, 8), (ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x267, 4), (ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x259, 4), (ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x24e, 4)]
[(unique, 0x1000020f, 4) COPY (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x267, 4)]
[ ---  CBRANCH (ram, 0x245a4d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2165d0, 8) , (register, 0x0, 4) , (const, 0x891b, 8) , (register, 0xb8, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x299, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x299, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x299, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x299, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x299, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x299, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) CAST (unique, 0x100002b7, 8), (unique, 0x100002b7, 8) INT_ADD (unique, 0x100002af, 8) , (unique, 0x100001b1, 8), (unique, 0x100002af, 8) CAST (ram, 0x4ec9c0, 8), (unique, 0x100001b1, 8) INT_ADD (register, 0x8, 8) , (const, 0x8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) INT_ADD (unique, 0x1000029f, 8) , (const, 0x14, 8), (unique, 0x1000029f, 8) CAST (register, 0xb8, 8)]
[(unique, 0x100001f7, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) INT_ADD (register, 0x8, 8) , (const, 0xc, 8)]
[ ---  BRANCH (ram, 0x245990, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100001ef, 8) , (unique, 0x100001f7, 8) , (register, 0x8, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x100001c7, 8) , (unique, 0x100001c7, 8)]
[(register, 0xb8, 8) CAST (unique, 0x100002c7, 8), (unique, 0x100002c7, 8) INT_ADD (unique, 0x100002bf, 8) , (const, 0x28, 8), (unique, 0x100002bf, 8) CAST (register, 0xb8, 8)]
[(unique, 0x1000021b, 8) COPY (ram, 0x4ec9c0, 8), (ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[ ---  CBRANCH (ram, 0x245a0e, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x80, 4) , (register, 0x30, 4), (register, 0x80, 4) INT_ADD (register, 0x80, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x10000207, 4) , (unique, 0x1000020f, 4) , (unique, 0x1000020f, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2bd, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x2bd, 4), (ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2bd, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x2bd, 4), (ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x2bd, 4), (ram, 0x4ec9c0, 8) MULTIEQUAL (unique, 0x1000021b, 8) , (unique, 0x1000024f, 8)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x2bd, 4), (ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2bd, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2bd, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bd, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000233, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0x0, 8) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x245a66, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121020, 8) , (register, 0x0, 8) , (register, 0xa0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2dd, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x10000171, 8) , (unique, 0x10000169, 8) , (const, 0x1c2, 4) , (unique, 0x10000179, 8), (unique, 0x10000179, 8) COPY (const, 0x2bb660, 8), (unique, 0x10000171, 8) COPY (const, 0x2b6ed1, 8), (unique, 0x10000169, 8) COPY (const, 0x2b6ec5, 8)]
[(ram, 0x4eae28, 8) COPY (ram, 0x4eae28, 8), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x2dd, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2dd, 4)]
[(ram, 0x4eb428, 4) COPY (ram, 0x4eb428, 4), (ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x2dd, 4)]
[(ram, 0x4ec9c0, 8) COPY (ram, 0x4ec9c0, 8), (ram, 0x4ec9c0, 8) INDIRECT (register, 0x0, 8) , (const, 0x2dd, 4)]
[(ram, 0x4efba0, 4) COPY (ram, 0x4efba0, 4), (ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x2dd, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2dd, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ce, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x2ce, 4), (ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2ce, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x2ce, 4), (ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x2ce, 4), (ram, 0x4ec9c0, 8) MULTIEQUAL (unique, 0x10000233, 8) , (unique, 0x1000024f, 8)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x2ce, 4), (ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ce, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ce, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x2d4, 4), (ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2d4, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x2d4, 4), (ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x2d4, 4), (ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2d4, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002cf, 8) , (unique, 0xbc80, 4), (unique, 0x100002cf, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(unique, 0x10000217, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x2458e8, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100001c3, 4) COPY (ram, 0x4eb428, 4), (ram, 0x4eb428, 4) MULTIEQUAL (unique, 0x10000213, 4) , (unique, 0x10000217, 4)]
[ ---  CBRANCH (ram, 0x2458fc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000247, 4) COPY (unique, 0x100001b9, 4), (unique, 0x100001b9, 4) INT_ADD (ram, 0x4efba0, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x24591e, 1) , (unique, 0x100001bd, 1), (unique, 0x100001bd, 1) INT_NOTEQUAL (unique, 0x100001b9, 4) , (const, 0x0, 4), (unique, 0x100001b9, 4) INT_ADD (ram, 0x4efba0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x17f, 4)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x17f, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x17f, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x17f, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x17f, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x17f, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17f, 4)]
[ ---  CALL (ram, 0x2306c0, 8)]
[(unique, 0x10000243, 4) COPY (ram, 0x4efba0, 4), (ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x17f, 4), (ram, 0x4efba0, 4) INT_ADD (ram, 0x4efba0, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x167, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x167, 4), (ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x167, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x167, 4), (ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x167, 4), (ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x167, 4), (ram, 0x4efba0, 4) COPY (unique, 0x1000024b, 4), (unique, 0x1000024b, 4) MULTIEQUAL (unique, 0x10000243, 4) , (unique, 0x10000247, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x167, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x167, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2457e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001c3, 4) , (const, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 4) MULTIEQUAL (unique, 0x100001ff, 4) , (unique, 0x100001c3, 4)]
[ ---  CBRANCH (ram, 0x2457e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002d7, 8), (unique, 0x100002d7, 8) INT_ADD (register, 0x38, 8) , (const, 0x18, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x100002e7, 8), (unique, 0x100002e7, 8) INT_ADD (unique, 0x100002df, 8) , (const, 0x4, 8), (unique, 0x100002df, 8) CAST (ram, 0x4ec9c0, 8)]
[(unique, 0x100001df, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100001e7, 8) COPY (unique, 0xbd80, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x100001e7, 8) , (register, 0x90, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100001df, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[(unique, 0x100001d7, 8) COPY (unique, 0x3100, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x245868, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4), (unique, 0x59200, 4) INT_AND (unique, 0xbc80, 4) , (register, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x8, 4) INT_XOR (unique, 0xbc80, 4) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100001d7, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x90, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0xf5, 4), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0xf3, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf5, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xf3, 4)]
[(ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0xf5, 4), (ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0xf3, 4)]
[(ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0xf5, 4), (ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0xf3, 4)]
[(ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0xf5, 4), (ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0xf3, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf5, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x2457e4, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x245840, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (register, 0x10, 4) , (register, 0x28, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x245837, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x90, 8), (register, 0x90, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4efba0, 4) MULTIEQUAL (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4) , (ram, 0x4efba0, 4)]
[(ram, 0x4ec9c0, 8) MULTIEQUAL (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8) , (ram, 0x4ec9c0, 8)]
[(ram, 0x4eb428, 4) MULTIEQUAL (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4) , (ram, 0x4eb428, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4eae28, 8) MULTIEQUAL (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8) , (ram, 0x4eae28, 8)]
[ ---  CBRANCH (ram, 0x245a61, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002ef, 8), (unique, 0x100002ef, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x71, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae28, 8) COPY (ram, 0x4eae28, 8), (ram, 0x4eae28, 8) INDIRECT (ram, 0x4eae28, 8) , (const, 0x71, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x71, 4)]
[(ram, 0x4eb428, 4) COPY (ram, 0x4eb428, 4), (ram, 0x4eb428, 4) INDIRECT (ram, 0x4eb428, 4) , (const, 0x71, 4)]
[(ram, 0x4ec9c0, 8) COPY (ram, 0x4ec9c0, 8), (ram, 0x4ec9c0, 8) INDIRECT (ram, 0x4ec9c0, 8) , (const, 0x71, 4)]
[(ram, 0x4efba0, 4) COPY (ram, 0x4efba0, 4), (ram, 0x4efba0, 4) INDIRECT (ram, 0x4efba0, 4) , (const, 0x71, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x71, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae28, 8) COPY (ram, 0x4eae28, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4eb428, 4) COPY (ram, 0x4eb428, 4)]
[(ram, 0x4ec9c0, 8) COPY (ram, 0x4ec9c0, 8)]
[(ram, 0x4efba0, 4) COPY (ram, 0x4efba0, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
