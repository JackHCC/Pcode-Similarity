[ ---  CBRANCH (ram, 0x4245e0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (const, 0xc, 4), (unique, 0x4f00, 8) CAST (unique, 0x100009eb, 8), (unique, 0x100009eb, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffffffffffc0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x10fe, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x10fe, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x10fe, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x10fe, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x10fe, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x424100, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x3100, 8) , (const, 0x20, 8), (unique, 0x3100, 8) INT_ADD (register, 0x30, 8) , (const, 0x17, 8)]
[(register, 0x0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffffffff0, 8)]
[ ---  CBRANCH (ram, 0x42460e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0xb0, 4) SUBPIECE (unique, 0x1000015b, 8) , (const, 0x0, 4), (unique, 0x1000015b, 8) INT_RIGHT (register, 0xb0, 8) , (const, 0x4, 4), (register, 0xb0, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffff0, 8)]
[ ---  CBRANCH (ram, 0x424390, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (ram, 0x4c7cb8, 8)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0xb0, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x424203, 1)]
[ ---  CBRANCH (ram, 0x424320, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xc, 4)]
[(register, 0x38, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x9, 4)]
[(register, 0x90, 4) INT_ADD (unique, 0x10000173, 4) , (const, 0x77, 4), (unique, 0x10000173, 4) SUBPIECE (register, 0xb8, 8) , (const, 0x0, 4), (register, 0xb8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0xf, 4)]
[(register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x12, 4)]
[(register, 0x98, 4) INT_ADD (unique, 0x10000183, 4) , (const, 0x30, 4), (unique, 0x10000183, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x424172, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xbffff, 8) , (register, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[(register, 0xb8, 4) INT_ADD (unique, 0x1000018b, 4) , (const, 0x6e, 4), (unique, 0x1000018b, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4)]
[(register, 0x88, 4) INT_ADD (register, 0x0, 4) , (const, 0x7c, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x30, 4) INT_ADD (unique, 0x10000546, 4) , (const, 0x5b, 4), (unique, 0x10000546, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4)]
[(unique, 0x100009d3, 4) COPY (register, 0x98, 4)]
[ ---  CBRANCH (ram, 0x4241d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x30, 8) , (register, 0x8, 8)]
[(unique, 0x100009d7, 4) COPY (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x4241d0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x14, 8) , (register, 0x38, 8)]
[(unique, 0x100009e3, 4) COPY (register, 0xb8, 4)]
[ ---  CBRANCH (ram, 0x424860, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xa, 8) , (register, 0x30, 8)]
[(unique, 0x100009db, 4) COPY (register, 0x88, 4)]
[ ---  CBRANCH (ram, 0x424868, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb8, 8) , (const, 0x5, 8)]
[(unique, 0x100009df, 4) COPY (register, 0x90, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (unique, 0x100009d3, 4) , (unique, 0x100009d7, 4) , (unique, 0x100009db, 4) , (unique, 0x100009df, 4) , (unique, 0x100009e3, 4)]
[ ---  CBRANCH (ram, 0x4243fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100009f3, 8), (unique, 0x100009f3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10d7, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x10d7, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x10d7, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x10d7, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x10d7, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x10d7, 4)]
[ ---  CALL (ram, 0x421ef0, 8)]
[ ---  BRANCH (ram, 0x4243fd, 1)]
[ ---  CBRANCH (ram, 0x424608, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x4241f0, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (ram, 0x4c7cb8, 8) , (const, 0x20, 8)]
[(register, 0x8, 8) COPY (const, 0x10, 8)]
[(register, 0xb0, 4) COPY (const, 0x2, 4)]
[(register, 0xa8, 8) COPY (const, 0x20, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x3580, 8)]
[ ---  CBRANCH (ram, 0x424320, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100009fb, 8), (unique, 0x100009fb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0x3400, 8) PTRADD (register, 0x38, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x8, 8) CAST (unique, 0x10000a03, 8), (unique, 0x10000a03, 8) PTRADD (register, 0x38, 8) , (register, 0x8, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a13, 8), (unique, 0x10000a13, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000947, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4242f7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a0b, 8), (unique, 0x10000a0b, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000947, 8) , (unique, 0x1000094f, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x424306, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a1b, 8), (unique, 0x10000a1b, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xf01, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xf01, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xf01, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xf01, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xf01, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0x29f80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000a23, 8), (unique, 0x10000a23, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x42422f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x80, 8), (register, 0x0, 8) CAST (unique, 0x10000a3b, 8), (unique, 0x10000a3b, 8) INT_XOR (unique, 0x10000a33, 8) , (unique, 0x2a200, 8), (unique, 0x10000a33, 8) CAST (register, 0x80, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x10000a2b, 8) , (unique, 0xbd80, 8), (unique, 0x10000a2b, 8) CAST (register, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x206, 1) INT_EQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000a23, 8), (unique, 0x10000a23, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4242f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8) , (register, 0xa8, 8)]
[(unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x70, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100001e3, 4), (unique, 0x100001e3, 4) INT_SUB (unique, 0x10000562, 4) , (const, 0x2, 4), (unique, 0x10000562, 4) INT_MULT (register, 0xb0, 4) , (const, 0x2, 4), (register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[ ---  BRANCH (ram, 0x424026, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a43, 8), (unique, 0x10000a43, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x1000094f, 8) COPY (register, 0x0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xdb9, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xdb9, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xdb9, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xdb9, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xdb9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a4b, 8) , (unique, 0xbd80, 8), (unique, 0x10000a4b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[ ---  CBRANCH (ram, 0x424970, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (register, 0xb0, 4), (register, 0x0, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000a53, 8), (unique, 0x10000a53, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000638, 8), (unique, 0x10000638, 8) COPY (const, 0x49bc90, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xedc, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xedc, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xedc, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xedc, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xedc, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a5b, 8), (unique, 0x10000a5b, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4c5750, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x11, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 8) , (ram, 0x4c5760, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000a63, 8), (unique, 0x10000a63, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000a6b, 8), (unique, 0x10000a6b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  BRANCH (ram, 0x4242c7, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000a73, 8), (unique, 0x10000a73, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000a83, 8), (unique, 0x10000a83, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x424288, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a7b, 8), (unique, 0x10000a7b, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xed8, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xed8, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xed8, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xed8, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xed8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000a8b, 8) , (unique, 0xbd80, 8), (unique, 0x10000a8b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x1000090f, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x42434e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000a93, 8), (unique, 0x10000a93, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xe87, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xe87, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xe87, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xe87, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xe87, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) INT_XOR (unique, 0xbd80, 8) , (unique, 0x29f80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0xbd80, 8) , (register, 0x30, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x42428c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) INT_XOR (register, 0x10, 8) , (unique, 0x2a200, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x5280, 8), (register, 0x10, 8) CAST (unique, 0x10000aa3, 8), (unique, 0x10000aa3, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (unique, 0x5280, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000a9b, 8), (unique, 0x10000a9b, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000566, 8) , (unique, 0xbd80, 8), (unique, 0x10000566, 8) CAST (unique, 0x10000aab, 8), (unique, 0x10000aab, 8) INT_ADD (register, 0x10, 8) , (const, 0x18, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (register, 0x10, 8), (unique, 0x3200, 8) CAST (unique, 0x10000ab3, 8), (unique, 0x10000ab3, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (register, 0x10, 8) CAST (unique, 0x10000aa3, 8), (unique, 0x10000aa3, 8) INT_ADD (register, 0x10, 8) , (const, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xec8, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xeb9, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22c9, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22c8, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xec8, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xeb9, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22c9, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22c8, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xec8, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xeb9, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22c9, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22c8, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xec8, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xeb9, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22c9, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22c8, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 2), (register, 0x0, 2) INT_ADD (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (ram, 0x4c5760, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 2), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xec8, 4), (register, 0x0, 2) INT_ADD (unique, 0xbc00, 2) , (const, 0x1, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xeb9, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22c9, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22c8, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[ ---  CBRANCH (ram, 0x424338, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000abb, 8), (unique, 0x10000abb, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8)]
[(unique, 0x1000090f, 8) COPY (register, 0x0, 8)]
[(register, 0xb0, 4) COPY (const, 0x2, 4)]
[(register, 0x0, 8) COPY (const, 0x80, 8)]
[(register, 0xa8, 8) COPY (const, 0x20, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x4243a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ac3, 8), (unique, 0x10000ac3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) PTRADD (register, 0x38, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x3580, 8)]
[(stack, 0xffffffffffffffb8, 4) COPY (const, 0x6e, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (register, 0xa8, 8) , (const, 0x6, 4)]
[(register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x5b, 4), (register, 0x38, 4) SUBPIECE (register, 0x38, 8) , (const, 0x0, 4), (register, 0x38, 8) INT_RIGHT (register, 0xa8, 8) , (const, 0x9, 4)]
[(stack, 0xffffffffffffffb4, 4) COPY (const, 0x77, 4)]
[(stack, 0xffffffffffffffb0, 4) COPY (const, 0x7c, 4)]
[(stack, 0xffffffffffffffa8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100009e7, 4) COPY (register, 0xb0, 4)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (register, 0xb8, 4) , (register, 0xb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (register, 0x90, 4) , (register, 0x90, 4)]
[(stack, 0xffffffffffffffb0, 4) MULTIEQUAL (stack, 0xffffffffffffffb0, 4) , (register, 0x88, 4) , (register, 0x88, 4)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8)]
[(stack, 0xffffffffffffff94, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x98, 4) , (register, 0x98, 4)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x8, 8) , (register, 0x8, 8)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (unique, 0x100009e7, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0xb0, 4) MULTIEQUAL (register, 0xb0, 4) , (register, 0xb0, 4) , (register, 0xb0, 4)]
[(register, 0x0, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x11, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100009ab, 8) COPY (stack, 0xffffffffffffff58, 8), (stack, 0xffffffffffffff58, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x42442b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000acb, 8), (unique, 0x10000acb, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100009b3, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x424426, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_LESS (register, 0x0, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100009bb, 8) COPY (register, 0xa8, 8)]
[(stack, 0xffffffffffffff58, 8) MULTIEQUAL (unique, 0x100009ab, 8) , (unique, 0x100009b3, 8) , (unique, 0x100009bb, 8)]
[(stack, 0xffffffffffffff50, 8) COPY (const, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[(unique, 0x100009cb, 4) COPY (stack, 0xffffffffffffff70, 4)]
[(stack, 0xffffffffffffff70, 4) MULTIEQUAL (unique, 0x100009cb, 4) , (unique, 0x100009cf, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (stack, 0xffffffffffffff70, 4) , (unique, 0x100009c3, 4) , (unique, 0x100009c7, 4)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000907, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100008ff, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[ ---  CBRANCH (ram, 0x424780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ad3, 8), (unique, 0x10000ad3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x78, 8) , (const, 0x1, 8)]
[(register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c5768, 8) , (const, 0x0, 8)]
[(register, 0x30, 4) COPY (const, 0x0, 4)]
[(unique, 0x100005bc, 1) COPY (const, 0x0, 1)]
[(unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x20, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000adb, 8), (unique, 0x10000adb, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[(unique, 0x3400, 8) CAST (unique, 0x10000ae3, 8), (unique, 0x10000ae3, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000adb, 8), (unique, 0x10000adb, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[(unique, 0x1000096f, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (stack, 0xffffffffffffff50, 8) , (unique, 0xbe00, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100005ba, 1) MULTIEQUAL (unique, 0x100005bc, 1) , (unique, 0x100005bb, 1) , (unique, 0x100005ba, 1)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x3400, 8) CAST (unique, 0x10000af3, 8), (unique, 0x10000af3, 8) PTRADD (register, 0x90, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000aeb, 8), (unique, 0x10000aeb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x1000096f, 8) , (unique, 0x10000977, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4245f8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0x11, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000aeb, 8), (unique, 0x10000aeb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0x1000096f, 8) , (unique, 0x10000977, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x4245f8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000afb, 8), (unique, 0x10000afb, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x888, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000648, 8), (unique, 0x10000648, 8) COPY (const, 0x49bce8, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd7c, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd7c, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd7c, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd7c, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd7c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424650, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x424650, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000650, 8), (unique, 0x10000650, 8) COPY (const, 0x49bd10, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd76, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd76, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd76, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd76, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd76, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424890, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (register, 0x0, 8), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000658, 8), (unique, 0x10000658, 8) COPY (const, 0x49bd38, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd70, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd70, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd70, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd70, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd70, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x90, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000b0b, 8), (unique, 0x10000b0b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000b03, 8), (unique, 0x10000b03, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000b13, 8), (unique, 0x10000b13, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000660, 8), (unique, 0x10000660, 8) COPY (const, 0x49bd70, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd6a, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd6a, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd6a, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd6a, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd6a, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424960, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000026b, 8) , (const, 0x0, 8), (unique, 0x1000026b, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000668, 8), (unique, 0x10000668, 8) COPY (const, 0x49bda0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd64, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd64, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd64, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd64, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd64, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x42450e, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa8, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x4248a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x42450e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000b1b, 8), (unique, 0x10000b1b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x68, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x42450e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3100, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b23, 8) , (unique, 0x3400, 8), (unique, 0x10000b23, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x78, 8) , (const, 0x1, 8), (unique, 0x3400, 8) PTRADD (register, 0x90, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b2b, 8) , (register, 0x1200, 8), (unique, 0x10000b2b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x68, 8) , (const, 0x1, 8), (register, 0x1200, 8) PTRADD (register, 0x90, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b33, 8) , (register, 0x1208, 8), (unique, 0x10000b33, 8) CAST (unique, 0x1000057e, 8), (unique, 0x1000057e, 8) PTRADD (register, 0x38, 8) , (const, 0x70, 8) , (const, 0x1, 8), (register, 0x1208, 8) PTRADD (register, 0x90, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b3b, 8) , (unique, 0x3100, 8), (unique, 0x10000b3b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0x3400, 8) PTRADD (register, 0x90, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22dd, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22dc, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22d8, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22d7, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xcdf, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22dd, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22dc, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22d8, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22d7, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xcdf, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22dd, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22dc, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22d8, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22d7, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xcdf, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22dd, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22dc, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22d8, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22d7, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xcdf, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22dd, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22dc, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22d8, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22d7, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xcdf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b43, 8) , (unique, 0x3100, 8), (unique, 0x10000b43, 8) CAST (unique, 0x10000586, 8), (unique, 0x10000586, 8) PTRADD (unique, 0x3400, 8) , (const, 0x18, 8) , (const, 0x1, 8), (unique, 0x3400, 8) PTRADD (register, 0x90, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4248fc, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xcfb, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xcfb, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xcfb, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xcfb, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xcfb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x10000b4b, 8), (unique, 0x10000b4b, 8) PTRADD (unique, 0x3400, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000b53, 8), (unique, 0x10000b53, 8) PTRADD (register, 0x90, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b5b, 8) , (register, 0x10, 8), (unique, 0x10000b5b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0xa8, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006d8, 8), (unique, 0x100006d8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b63, 8) , (register, 0x10, 8), (unique, 0x10000b63, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd54, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd52, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xd45, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd54, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd52, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xd45, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd54, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd52, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xd45, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd54, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd52, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xd45, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd54, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd52, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xd45, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b6b, 8) , (unique, 0xbd80, 8), (unique, 0x10000b6b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x78, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x360, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x35d, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x360, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x35d, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x360, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x35d, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x360, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x35d, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x360, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x35d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b73, 8) , (unique, 0x3100, 8), (unique, 0x10000b73, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424660, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x4246a0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x400, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x30, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x6, 4)]
[ ---  CBRANCH (ram, 0x424708, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xc3f, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x5b, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x424708, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x29ff, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x6e, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0xc, 4)]
[ ---  CBRANCH (ram, 0x424708, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xafff, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x77, 4), (register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0xf, 4)]
[ ---  CBRANCH (ram, 0x424708, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x27fff, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) SUBPIECE (register, 0x8, 8) , (const, 0x0, 4), (register, 0x8, 8) INT_RIGHT (unique, 0xbd80, 8) , (const, 0x12, 4)]
[ ---  CBRANCH (ram, 0x4246fe, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xbffff, 8) , (register, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x2, 4)]
[(register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x7c, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x424878, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000b83, 8), (unique, 0x10000b83, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000b7b, 8), (unique, 0x10000b7b, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000080a, 8) , (const, 0x1, 8), (unique, 0x1000080a, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x70, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000032a, 4), (unique, 0x1000032a, 4) INT_ADD (unique, 0x100005e4, 4) , (const, 0xfffffffe, 4), (unique, 0x100005e4, 4) INT_MULT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b8b, 8) , (register, 0x90, 8), (unique, 0x10000b8b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22d3, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22d2, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22d3, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22d2, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22d3, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22d2, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22d3, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22d2, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22d3, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22d2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000b93, 8) , (register, 0x90, 8), (unique, 0x10000b93, 8) CAST (unique, 0x10000576, 8), (unique, 0x10000576, 8) PTRADD (register, 0x90, 8) , (const, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x1000093f, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x424542, 1)]
[(register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424dc4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000342, 8) , (const, 0x0, 8), (unique, 0x10000342, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000b9b, 8), (unique, 0x10000b9b, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000610, 8) , (unique, 0x100005f8, 8) , (const, 0xeff, 8) , (unique, 0x100006a8, 8), (unique, 0x100006a8, 8) COPY (const, 0x49c2d8, 8), (unique, 0x10000610, 8) COPY (const, 0x49b2a8, 8), (unique, 0x100005f8, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xc2e, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xc2e, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc2e, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xc2e, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc2e, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424a88, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x424e08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000042a, 8) , (const, 0x0, 8), (unique, 0x1000042a, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000620, 8) , (unique, 0x10000600, 8) , (const, 0xf0c, 8) , (unique, 0x100006b0, 8), (unique, 0x100006b0, 8) COPY (const, 0x49c2d8, 8), (unique, 0x10000620, 8) COPY (const, 0x49b2c3, 8), (unique, 0x10000600, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xc25, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xc25, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc25, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xc25, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc25, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x424aa0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x0, 8) , (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x424da5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000432, 8) , (const, 0x0, 8), (unique, 0x10000432, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000ba3, 8), (unique, 0x10000ba3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000618, 8) , (unique, 0x100005f0, 8) , (const, 0xf10, 8) , (unique, 0x100006a0, 8), (unique, 0x100006a0, 8) COPY (const, 0x49c2d8, 8), (unique, 0x10000618, 8) COPY (const, 0x49b2c3, 8), (unique, 0x100005f0, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xc1c, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xc1c, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc1c, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xc1c, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc1c, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424b00, 1) , (register, 0x206, 1)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000bab, 8), (unique, 0x10000bab, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x424ae2, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bb3, 8) , (register, 0x10, 8), (unique, 0x10000bb3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbc7, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbc4, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xbc7, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xbc4, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbc7, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbc4, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xbc7, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xbc4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xbc7, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xbc4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bbb, 8) , (unique, 0xbd80, 8), (unique, 0x10000bbb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x28, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x424bfc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bc3, 8), (unique, 0x10000bc3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000670, 8), (unique, 0x10000670, 8) COPY (const, 0x49bdd0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbfe, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xbfe, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbfe, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xbfe, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xbfe, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbe3, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbdc, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xbe3, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xbdc, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbe3, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbdc, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xbe3, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xbdc, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xbe3, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xbdc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bd3, 8), (unique, 0x10000bd3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000bcb, 8), (unique, 0x10000bcb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x28, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x10000937, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bdb, 8), (unique, 0x10000bdb, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000967, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x424542, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x88, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000be3, 8), (unique, 0x10000be3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000bdb, 8), (unique, 0x10000bdb, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000678, 8), (unique, 0x10000678, 8) COPY (const, 0x49be10, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xbf8, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xbf8, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xbf8, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xbf8, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xbf8, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000beb, 8) , (unique, 0xbd80, 8), (unique, 0x10000beb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000bf3, 8) , (unique, 0xbd80, 8), (unique, 0x10000bf3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x28, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) CAST (unique, 0x10000bfb, 8), (unique, 0x10000bfb, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xba0, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xb9d, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xb9a, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xb97, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xba0, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xb9d, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xb9a, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xb97, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xba0, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xb9d, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xb9a, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xb97, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xba0, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xb9d, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xb9a, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xb97, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xba0, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xb9d, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xb9a, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xb97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x1000092f, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000095f, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x424542, 1)]
[(unique, 0x10000927, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000c13, 8), (unique, 0x10000c13, 8) INT_ADD (unique, 0x10000c0b, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000c0b, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x100007fa, 8) , (const, 0x1, 8), (unique, 0x100007fa, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x70, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000029b, 4), (unique, 0x1000029b, 4) INT_ADD (unique, 0x100005e0, 4) , (const, 0xfffffffe, 4), (unique, 0x100005e0, 4) INT_MULT (unique, 0x100002a3, 4) , (const, 0x2, 4), (unique, 0x100002a3, 4) SUBPIECE (unique, 0x10000293, 8) , (const, 0x0, 4), (unique, 0x10000293, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x4, 4), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffff8, 8)]
[(unique, 0x10000957, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c03, 8), (unique, 0x10000c03, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x100007fa, 8) , (const, 0x1, 8), (unique, 0x100007fa, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x70, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000029b, 4), (unique, 0x1000029b, 4) INT_ADD (unique, 0x100005e0, 4) , (const, 0xfffffffe, 4), (unique, 0x100005e0, 4) INT_MULT (unique, 0x100002a3, 4) , (const, 0x2, 4), (unique, 0x100002a3, 4) SUBPIECE (unique, 0x10000293, 8) , (const, 0x0, 4), (unique, 0x10000293, 8) INT_RIGHT (register, 0x8, 8) , (const, 0x4, 4), (register, 0x8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffff8, 8)]
[(unique, 0xbe00, 8) INT_ADD (stack, 0xffffffffffffff50, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c23, 8) , (unique, 0xbc80, 4), (unique, 0x10000c23, 8) CAST (unique, 0x3e80, 8), (unique, 0xbc80, 4) INT_OR (unique, 0xbc80, 4) , (register, 0x10, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000c1b, 8), (unique, 0x10000c1b, 8) CAST (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000802, 8) , (const, 0x1, 8), (unique, 0x10000802, 8) INT_ADD (unique, 0x3d80, 8) , (const, 0x860, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x10, 4) INT_LEFT (const, 0x1, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x0, 4) INT_SRIGHT (register, 0x8, 4) , (const, 0x5, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100002a3, 4) , (register, 0x8, 4) , (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c2b, 8) , (register, 0x88, 8), (unique, 0x10000c2b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000957, 8) , (unique, 0x1000095f, 8) , (unique, 0x10000967, 8) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c33, 8) , (register, 0x28, 8), (unique, 0x10000c33, 8) CAST (unique, 0x1000056e, 8), (unique, 0x1000056e, 8) PTRADD (register, 0x90, 8) , (const, 0x18, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000927, 8) , (unique, 0x1000092f, 8) , (unique, 0x10000937, 8) , (unique, 0x1000093f, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000957, 8) , (unique, 0x1000095f, 8) , (unique, 0x10000967, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x42a, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x427, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22ce, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22cd, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x415, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x42a, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x427, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22ce, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22cd, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x415, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x42a, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x427, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22ce, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22cd, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x415, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x42a, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x427, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22ce, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22cd, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x415, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x42a, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x427, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22ce, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22cd, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x415, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x90, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000927, 8) , (unique, 0x1000092f, 8) , (unique, 0x10000937, 8) , (unique, 0x1000093f, 8)]
[ ---  CBRANCH (ram, 0x424768, 1) , (unique, 0x100005ba, 1)]
[ ---  CBRANCH (ram, 0x4245c0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000907, 8) , (unique, 0xbe00, 8)]
[ ---  CBRANCH (ram, 0x4245c0, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x424592, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (const, 0x270f, 4) , (register, 0x30, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c3b, 8), (unique, 0x10000c3b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x78, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424780, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (register, 0x30, 4) , (const, 0x2710, 4), (register, 0x30, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x42448e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c43, 8), (unique, 0x10000c43, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x78, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xc44, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xc44, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc44, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xc44, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc44, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (unique, 0xbd80, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424679, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006d0, 8), (unique, 0x100006d0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xc54, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xc54, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xc54, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xc54, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xc54, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c53, 8) , (unique, 0xbe00, 8), (unique, 0x10000c53, 8) CAST (unique, 0x3100, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x4, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000c4b, 8), (unique, 0x10000c4b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000c5b, 8), (unique, 0x10000c5b, 8) PTRADD (register, 0x90, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424697, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff58, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x424830, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x100008ff, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c63, 8) , (unique, 0xbd80, 8), (unique, 0x10000c63, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000c73, 8) , (unique, 0xbd80, 8), (unique, 0x10000c73, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000c6b, 8), (unique, 0x10000c6b, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) CAST (unique, 0x10000c7b, 8), (unique, 0x10000c7b, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xcad, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xcab, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xca7, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xca1, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xcad, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xcab, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xca7, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xca1, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xcad, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xcab, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xca7, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xca1, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xcad, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xcab, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xca7, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xca1, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xcad, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xcab, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xca7, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xca1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x0, 2), (register, 0x0, 2) INT_ADD (unique, 0xbc00, 2) , (const, 0x1, 2)]
[ ---  BRANCH (ram, 0x4245cf, 1)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (unique, 0xbe00, 8) , (stack, 0xffffffffffffff50, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x424592, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (register, 0x90, 8), (register, 0x90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (unique, 0xbd80, 8), (unique, 0x3200, 8) CAST (unique, 0x10000c8b, 8), (unique, 0x10000c8b, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000c83, 8), (unique, 0x10000c83, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc00, 2), (unique, 0xbc00, 2) INT_ADD (unique, 0xbc00, 2) , (const, 0xffff, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000c93, 8), (unique, 0x10000c93, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000c83, 8), (unique, 0x10000c83, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x46d, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x461, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x458, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x46d, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x461, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x458, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x46d, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x461, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x458, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x46d, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x461, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x458, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x46d, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x461, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x458, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000c83, 8), (unique, 0x10000c83, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8)]
[(unique, 0x100005bb, 1) COPY (const, 0x1, 1)]
[(unique, 0x10000977, 8) COPY (register, 0x90, 8)]
[ ---  BRANCH (ram, 0x42448e, 1)]
[(stack, 0xffffffffffffff50, 8) MULTIEQUAL (stack, 0xffffffffffffff50, 8) , (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[ ---  CBRANCH (ram, 0x4247ac, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa8, 8) , (const, 0x400, 8)]
[ ---  CBRANCH (ram, 0x4247ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000ca3, 8), (unique, 0x10000ca3, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000c9b, 8), (unique, 0x10000c9b, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000812, 8) , (const, 0x1, 8), (unique, 0x10000812, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x70, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x3880, 4), (unique, 0x3880, 4) INT_SUB (unique, 0x1000054e, 4) , (const, 0x2, 4), (unique, 0x1000054e, 4) INT_MULT (stack, 0xffffffffffffff70, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x424cd0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x10000cab, 8) , (register, 0xa8, 8), (unique, 0x10000cab, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000081a, 8) , (const, 0x1, 8), (unique, 0x1000081a, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x60, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x1000055e, 4), (unique, 0x1000055e, 4) INT_MULT (stack, 0xffffffffffffff70, 4) , (const, 0x2, 4)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000cb3, 8), (unique, 0x10000cb3, 8) CAST (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000822, 8) , (const, 0x1, 8), (unique, 0x10000822, 8) INT_ADD (unique, 0x3d80, 8) , (const, 0x860, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_RIGHT (unique, 0x3100, 4) , (const, 0x5, 4), (unique, 0x3100, 4) INT_ADD (stack, 0xffffffffffffff70, 4) , (const, 0x1, 4)]
[(register, 0x0, 4) INT_LEFT (const, 0x1, 4) , (unique, 0x53100, 1), (unique, 0x53100, 1) INT_AND (register, 0x8, 1) , (const, 0x1f, 1), (register, 0x8, 1) SUBPIECE (unique, 0x3100, 4) , (const, 0x0, 4), (unique, 0x3100, 4) INT_ADD (stack, 0xffffffffffffff70, 4) , (const, 0x1, 4)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3a00, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x424980, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x10000552, 4) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x1000055a, 4), (unique, 0x10000552, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x30, 4)]
[(unique, 0x100009a7, 4) COPY (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4247f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4249c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x3, 4)]
[(unique, 0x1000099b, 4) COPY (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x424bd7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000cbb, 8), (unique, 0x10000cbb, 8) CAST (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000832, 8) , (const, 0x1, 8), (unique, 0x10000832, 8) INT_ADD (unique, 0x3d80, 8) , (const, 0x860, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_ADD (register, 0x38, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x4249c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x2, 4)]
[(unique, 0x1000099f, 4) COPY (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x424bd7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000cc3, 8), (unique, 0x10000cc3, 8) CAST (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000083a, 8) , (const, 0x1, 8), (unique, 0x1000083a, 8) INT_ADD (unique, 0x3d80, 8) , (const, 0x860, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x4249c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424c08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000ccb, 8), (unique, 0x10000ccb, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x86c, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424bf0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ce3, 8), (unique, 0x10000ce3, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x38, 8) , (const, 0x888, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cdb, 8), (unique, 0x10000cdb, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000cd3, 8), (unique, 0x10000cd3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000630, 8), (unique, 0x10000630, 8) COPY (const, 0x49b2e3, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x73b, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x73b, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x73b, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x73b, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x73b, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424c47, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) INT_ADD (register, 0xa8, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ceb, 8) , (unique, 0x3400, 8), (unique, 0x10000ceb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x60, 8) , (const, 0x1, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa8, 8)]
[(register, 0x80, 8) CAST (unique, 0x10000cf3, 8), (unique, 0x10000cf3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) CAST (unique, 0x10000cfb, 8), (unique, 0x10000cfb, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_OR (register, 0x10, 8) , (register, 0xa8, 8), (register, 0x10, 8) INT_LEFT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006f0, 8), (unique, 0x100006f0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x72a, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x727, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x6d7, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x72a, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x727, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x6d7, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x72a, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x727, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x6d7, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x72a, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x727, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x6d7, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x72a, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x727, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x6d7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d03, 8), (unique, 0x10000d03, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_SUB (register, 0x0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x424c95, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000d0b, 8), (unique, 0x10000d0b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x60a, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x60a, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x60a, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x60a, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x60a, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x60a, 4)]
[ ---  CALL (ram, 0x421ef0, 8)]
[(unique, 0x100009cf, 4) COPY (register, 0xb0, 4)]
[ ---  CBRANCH (ram, 0x424442, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0xa8, 8)]
[(stack, 0xffffffffffffff70, 4) COPY (stack, 0xffffffffffffff94, 4)]
[ ---  CBRANCH (ram, 0x424442, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x30, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff70, 4) COPY (stack, 0xffffffffffffffbc, 4)]
[ ---  CBRANCH (ram, 0x424442, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x14, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff70, 4) COPY (stack, 0xffffffffffffffb8, 4)]
[ ---  CBRANCH (ram, 0x424442, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xa, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x100009c3, 4) COPY (stack, 0xffffffffffffffb4, 4)]
[ ---  CBRANCH (ram, 0x424a68, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100009c7, 4) COPY (stack, 0xffffffffffffffb0, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x686, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x686, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x686, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x686, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x686, 4)]
[ ---  CBRANCH (ram, 0x424958, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000d13, 8), (unique, 0x10000d13, 8) CALL (ram, 0x423750, 8) , (register, 0xa8, 8) , (register, 0x38, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000997, 4) COPY (register, 0x38, 4), (register, 0x38, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x424bd9, 1)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(unique, 0x3a00, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000842, 8) , (const, 0x1, 8), (unique, 0x10000842, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x60, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x2, 4), (register, 0x0, 4) INT_MULT (register, 0x38, 4) , (const, 0x40, 4), (register, 0x38, 4) COPY (unique, 0x100009a3, 4), (unique, 0x100009a3, 4) MULTIEQUAL (unique, 0x10000997, 4) , (unique, 0x1000099b, 4) , (unique, 0x1000099f, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x4247f4, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3a00, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x4247e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59200, 4) , (const, 0x0, 4), (unique, 0x59200, 4) INT_AND (register, 0x0, 4) , (register, 0x30, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x100009a7, 4) , (register, 0x0, 4) , (unique, 0x10000556, 4), (register, 0x30, 4) MULTIEQUAL (unique, 0x10000552, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424c28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000556, 4) , (const, 0x0, 4), (unique, 0x10000556, 4) INT_MULT (register, 0x0, 4) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000628, 8) , (unique, 0x100005e8, 8) , (const, 0xfb1, 8) , (unique, 0x10000698, 8), (unique, 0x10000698, 8) COPY (const, 0x49c2d8, 8), (unique, 0x10000628, 8) COPY (const, 0x49b2da, 8), (unique, 0x100005e8, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8f3, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8f3, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8f3, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8f3, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8f3, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x424b06, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d1b, 8), (unique, 0x10000d1b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424e27, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0xb0, 8) , (register, 0xa8, 8), (register, 0xb0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d23, 8), (unique, 0x10000d23, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421820, 8) , (unique, 0x10000688, 8) , (unique, 0x10000608, 8) , (const, 0xfc4, 8) , (unique, 0x100006b8, 8), (unique, 0x100006b8, 8) COPY (const, 0x49c2d8, 8), (unique, 0x10000688, 8) COPY (const, 0x49be70, 8), (unique, 0x10000608, 8) COPY (const, 0x49b150, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8d6, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8d6, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8d6, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8d6, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8d6, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x7e5, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x7e5, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x7e5, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x7e5, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7e5, 4)]
[ ---  CALL (ram, 0x421e10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x424c0f, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (const, 0x20, 8), (register, 0xa0, 8) INT_SUB (register, 0xb0, 8) , (register, 0xa8, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8ac, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8ac, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8ac, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8ac, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8ac, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d33, 8) , (unique, 0xbe00, 8), (unique, 0x10000d33, 8) CAST (unique, 0x3a00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d2b, 8), (unique, 0x10000d2b, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000084a, 8) , (const, 0x1, 8), (unique, 0x1000084a, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x424bc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006e8, 8), (unique, 0x100006e8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8c5, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8c5, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8c5, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8c5, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8c5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d43, 8) , (unique, 0xbe00, 8), (unique, 0x10000d43, 8) CAST (unique, 0x3100, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x4, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d3b, 8), (unique, 0x10000d3b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x424bc0, 1)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0xa8, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424cc4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d53, 8), (unique, 0x10000d53, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000d4b, 8), (unique, 0x10000d4b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x70, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000690, 8), (unique, 0x10000690, 8) COPY (const, 0x49bea0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8a1, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8a1, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8a1, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8a1, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8a1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d5b, 8) , (unique, 0xbd80, 8), (unique, 0x10000d5b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d63, 8) , (unique, 0x3100, 8), (unique, 0x10000d63, 8) CAST (unique, 0x1000058e, 8), (unique, 0x1000058e, 8) PTRADD (unique, 0x3400, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d6b, 8) , (unique, 0x3400, 8), (unique, 0x10000d6b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x70, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x817, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x814, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22e2, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22e1, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x817, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x814, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22e2, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22e1, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x817, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x814, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22e2, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22e1, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x817, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x814, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22e2, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22e1, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x817, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x814, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22e2, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22e1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) CAST (unique, 0x10000d73, 8), (unique, 0x10000d73, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x424b81, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa8, 8) , (const, 0x400, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x826, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x826, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x826, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x826, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x826, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d7b, 8) , (unique, 0x3400, 8), (unique, 0x10000d7b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x68, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[ ---  CBRANCH (ram, 0x424b92, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0xa0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x835, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x835, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x835, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x835, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x835, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x10000d83, 8), (unique, 0x10000d83, 8) PTRADD (unique, 0x3400, 8) , (const, 0x20, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d8b, 8) , (register, 0x0, 8), (unique, 0x10000d8b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006e0, 8), (unique, 0x100006e0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d93, 8) , (register, 0x0, 8), (unique, 0x10000d93, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0x8, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_OR (register, 0xa0, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x88e, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x88a, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x87d, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x88e, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x88a, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x87d, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x88e, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x88a, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x87d, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x88e, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x88a, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x87d, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x88e, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x88a, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x87d, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000d9b, 8) , (register, 0xa0, 8), (unique, 0x10000d9b, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (register, 0xb0, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000da3, 8), (unique, 0x10000da3, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x100008c1, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x0, 8) , (register, 0x80, 8) , (unique, 0x3100, 8)]
[(unique, 0x100008ca, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100008d2, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(unique, 0x100008da, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100008e6, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  CBRANCH (ram, 0x424372, 1) , (unique, 0x100008c9, 1), (unique, 0x100008c9, 1) INT_EQUAL (unique, 0x100008e2, 4) , (const, 0x0, 4), (unique, 0x100008e2, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5750, 8) COPY (unique, 0x100008ca, 8)]
[(ram, 0x4c5760, 8) COPY (unique, 0x100008d2, 8)]
[(ram, 0x4c5768, 8) COPY (unique, 0x100008da, 8)]
[(ram, 0x4c7cb4, 4) COPY (unique, 0x100008e2, 4)]
[(ram, 0x4c7cb8, 8) COPY (unique, 0x100008e6, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x100008c1, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x1000055a, 4) INT_MULT (register, 0x0, 4) , (const, 0x2, 4)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x7b7, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x7b7, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x7b7, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x7b7, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x7b7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000dab, 8) , (register, 0x30, 4), (unique, 0x10000dab, 8) CAST (unique, 0x3e80, 8), (unique, 0x3e80, 8) PTRADD (register, 0x38, 8) , (unique, 0x1000082a, 8) , (const, 0x1, 8), (unique, 0x1000082a, 8) INT_ADD (unique, 0x3d80, 8) , (const, 0x860, 8), (unique, 0x3d80, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (register, 0x38, 4), (register, 0x30, 4) INT_AND (register, 0x30, 4) , (register, 0x8, 4), (register, 0x8, 4) INT_NEGATE (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x4247d0, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x424cdf, 1)]
[ ---  CBRANCH (ram, 0x424cdb, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xa8, 8) , (register, 0xb8, 8), (register, 0xb8, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000db3, 8), (unique, 0x10000db3, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x1000097f, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x424d01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3a00, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000987, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x424d01, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dc3, 8), (unique, 0x10000dc3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dbb, 8), (unique, 0x10000dbb, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)]
[(unique, 0x1000098f, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x93e, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x93e, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x93e, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x93e, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x93e, 4)]
[ ---  CALL (ram, 0x421e10, 8) , (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x1000097f, 8) , (unique, 0x10000987, 8) , (unique, 0x1000098f, 8)]
[ ---  CBRANCH (ram, 0x424def, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0xa0, 8) , (const, 0x20, 8), (register, 0xa0, 8) INT_SUB (register, 0xb8, 8) , (register, 0xa8, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x9fc, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x9fc, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x9fc, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x9fc, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x9fc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000dcb, 8), (unique, 0x10000dcb, 8) INT_ADD (unique, 0x3880, 8) , (register, 0xb8, 8), (unique, 0x3880, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x424d8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x10000700, 8), (unique, 0x10000700, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xa15, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xa15, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xa15, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xa15, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xa15, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbe00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x4, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000dd3, 8), (unique, 0x10000dd3, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x424d8e, 1)]
[(unique, 0x3400, 8) INT_ADD (register, 0xb0, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x424de3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0x3100, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000de3, 8), (unique, 0x10000de3, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000ddb, 8), (unique, 0x10000ddb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x70, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000680, 8), (unique, 0x10000680, 8) COPY (const, 0x49be48, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x9f1, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x9f1, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x9f1, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x9f1, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x9f1, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) CAST (unique, 0x10000deb, 8), (unique, 0x10000deb, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000596, 8) , (unique, 0x3100, 8), (unique, 0x10000596, 8) CAST (unique, 0x10000df3, 8), (unique, 0x10000df3, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x18, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000dfb, 8) , (unique, 0x3400, 8), (unique, 0x10000dfb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x70, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x976, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x973, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22e7, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x22e6, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x976, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x973, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22e7, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x22e6, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x976, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x973, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22e7, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x22e6, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x976, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x973, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22e7, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x22e6, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x976, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x973, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22e7, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x22e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3400, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e03, 8), (unique, 0x10000e03, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x424d60, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x3ff, 8) , (register, 0xa0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x985, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x985, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x985, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x985, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x985, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 16), (unique, 0x3100, 8) CAST (unique, 0x10000e0b, 8), (unique, 0x10000e0b, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e13, 8), (unique, 0x10000e13, 8) INT_ADD (register, 0xb0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0xa8, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (const, 0x2, 4), (register, 0x0, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006f8, 8), (unique, 0x100006f8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e1b, 8), (unique, 0x10000e1b, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0xa0, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x9de, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x9da, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x9cd, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x9de, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x9da, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x9cd, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x9de, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x9da, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x9cd, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x9de, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x9da, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x9cd, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x9de, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x9da, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x9cd, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0xa0, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e23, 8), (unique, 0x10000e23, 8) INT_ADD (register, 0xb0, 8) , (register, 0xb8, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000e2b, 8), (unique, 0x10000e2b, 8) INT_ADD (register, 0xb0, 8) , (const, 0x10, 8)]
[ ---  CBRANCH (ram, 0x424372, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7cb4, 4) , (const, 0x0, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x3100, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x6ae, 4), (ram, 0x4c5750, 8) MULTIEQUAL (unique, 0x100008ca, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x6ae, 4), (ram, 0x4c5760, 8) MULTIEQUAL (unique, 0x100008d2, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x6ae, 4), (ram, 0x4c5768, 8) MULTIEQUAL (unique, 0x100008da, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x6ae, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (unique, 0x100008e2, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x6ae, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (unique, 0x100008e6, 8) , (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000e33, 8), (unique, 0x10000e33, 8) CALL (ram, 0x401120, 8) , (register, 0x80, 8) , (register, 0x0, 4) , (register, 0x30, 8), (register, 0x0, 4) INT_XOR (ram, 0x4c7cb4, 4) , (const, 0xff, 4), (register, 0x80, 8) MULTIEQUAL (unique, 0x100008c1, 8) , (unique, 0x3100, 8), (ram, 0x4c7cb4, 4) MULTIEQUAL (unique, 0x100008e2, 4) , (ram, 0x4c7cb4, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000e3b, 8), (unique, 0x10000e3b, 8) INT_ADD (register, 0xb0, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x424a78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000e4b, 8), (unique, 0x10000e4b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000e43, 8), (unique, 0x10000e43, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x421880, 8) , (unique, 0x10000640, 8), (unique, 0x10000640, 8) COPY (const, 0x49bcb8, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x1a0, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x1a0, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x1a0, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000e5b, 8) , (unique, 0xbe00, 8), (unique, 0x10000e5b, 8) CAST (unique, 0x3a00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000e53, 8), (unique, 0x10000e53, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000856, 8) , (const, 0x1, 8), (unique, 0x10000856, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000e63, 8) , (unique, 0xbd80, 8), (unique, 0x10000e63, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8f, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x8c, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x80, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8f, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x8c, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x80, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8f, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x8c, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x80, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8f, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x8c, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x80, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8f, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x8c, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x80, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000e6b, 8) , (unique, 0x3100, 8), (unique, 0x10000e6b, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x424067, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006c0, 8), (unique, 0x100006c0, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x9f, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x9f, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x9f, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x9f, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x9f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000e7b, 8) , (unique, 0xbe00, 8), (unique, 0x10000e7b, 8) CAST (unique, 0x3100, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x4, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000e73, 8), (unique, 0x10000e73, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100008f7, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000e83, 8), (unique, 0x10000e83, 8) INT_ADD (register, 0x110, 8) , (const, 0xffffffc8, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (ram, 0x4c5750, 8), (register, 0x30, 8) INT_RIGHT (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) INT_SUB (register, 0xa8, 8) , (const, 0x11, 8)]
[(unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x8, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000e8b, 8), (unique, 0x10000e8b, 8) INT_ADD (unique, 0xbd80, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8)]
[(unique, 0x10000917, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000917, 8) , (unique, 0x1000091f, 8)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x30, 8) , (unique, 0x100008f7, 8), (register, 0x30, 8) INT_ZEXT (register, 0x90, 2), (register, 0x90, 2) MULTIEQUAL (unique, 0xbc00, 2) , (register, 0x90, 2)]
[ ---  CBRANCH (ram, 0x424360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 8) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000e93, 8), (unique, 0x10000e93, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x113, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x113, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x113, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x113, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x113, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ea3, 8) , (unique, 0xbe00, 8), (unique, 0x10000ea3, 8) CAST (unique, 0x3a00, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x1, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000e9b, 8), (unique, 0x10000e9b, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x10, 8) , (unique, 0x1000085e, 8) , (const, 0x1, 8), (unique, 0x1000085e, 8) INT_ADD (register, 0xa8, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x4240cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (unique, 0x100006c8, 8), (unique, 0x100006c8, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c57a0, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x12c, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x12c, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x12c, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x12c, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x12c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000eb3, 8) , (unique, 0xbe00, 8), (unique, 0x10000eb3, 8) CAST (unique, 0x3100, 8), (unique, 0xbe00, 8) INT_OR (unique, 0xbe00, 8) , (const, 0x4, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000eab, 8), (unique, 0x10000eab, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ec3, 8) , (unique, 0xbd80, 8), (unique, 0x10000ec3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x8, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ecb, 8) , (unique, 0x3100, 8), (unique, 0x10000ecb, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000ed3, 8) , (unique, 0xbd80, 8), (unique, 0x10000ed3, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x18, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000edb, 8) , (unique, 0xbd80, 8), (unique, 0x10000edb, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000ebb, 8), (unique, 0x10000ebb, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3c80, 8) , (register, 0x10, 8), (unique, 0x3c80, 8) CAST (unique, 0x10000ee3, 8), (unique, 0x10000ee3, 8) INT_ADD (unique, 0x3400, 8) , (const, 0x80, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x1, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x15c, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x159, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x156, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x154, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x151, 4), (ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0x13b, 4), (ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x15c, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x159, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x156, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x154, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x151, 4), (ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0x13b, 4), (ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x15c, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x159, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x156, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x154, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x151, 4), (ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0x13b, 4), (ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x15c, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x159, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x156, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x154, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x151, 4), (ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0x13b, 4), (ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x15c, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x159, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x156, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x154, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x151, 4), (ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0x13b, 4), (ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x90, 2), (register, 0x90, 2) INT_ADD (register, 0x90, 2) , (const, 0x1, 2)]
[(unique, 0x1000091f, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x4240a1, 1)]
[(ram, 0x4c7cb8, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[(ram, 0x4c7cb4, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5768, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(ram, 0x4c5760, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(ram, 0x4c5750, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(register, 0x80, 8) CAST (unique, 0x10000eeb, 8), (unique, 0x10000eeb, 8) PTRADD (register, 0x80, 8) , (const, 0x10, 8) , (const, 0x1, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0xa8, 8) COPY (const, 0x20, 8)]
[(ram, 0x4c5750, 8) INDIRECT (ram, 0x4c5750, 8) , (const, 0xf3a, 4)]
[(ram, 0x4c5760, 8) INDIRECT (ram, 0x4c5760, 8) , (const, 0xf3a, 4)]
[(ram, 0x4c5768, 8) INDIRECT (ram, 0x4c5768, 8) , (const, 0xf3a, 4)]
[(ram, 0x4c7cb4, 4) INDIRECT (ram, 0x4c7cb4, 4) , (const, 0xf3a, 4)]
[(ram, 0x4c7cb8, 8) INDIRECT (ram, 0x4c7cb8, 8) , (const, 0xf3a, 4)]
[ ---  CBRANCH (ram, 0x424958, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000ef3, 8), (unique, 0x10000ef3, 8) CALL (ram, 0x423750, 8) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0x0, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100007c9, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x100007d1, 8) MULTIEQUAL (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8) , (ram, 0x4c5750, 8)]
[(unique, 0x100007d9, 8) MULTIEQUAL (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8) , (ram, 0x4c5760, 8)]
[(unique, 0x100007e1, 8) MULTIEQUAL (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8) , (ram, 0x4c5768, 8)]
[(unique, 0x100007ed, 8) MULTIEQUAL (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8) , (ram, 0x4c7cb8, 8)]
[ ---  CBRANCH (ram, 0x424372, 1) , (unique, 0x100007c8, 1), (unique, 0x100007c8, 1) INT_NOTEQUAL (unique, 0x100007e9, 4) , (const, 0x0, 4), (unique, 0x100007e9, 4) MULTIEQUAL (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4) , (ram, 0x4c7cb4, 4)]
[(ram, 0x4c5750, 8) COPY (unique, 0x100007d1, 8)]
[(ram, 0x4c5760, 8) COPY (unique, 0x100007d9, 8)]
[(ram, 0x4c5768, 8) COPY (unique, 0x100007e1, 8)]
[(ram, 0x4c7cb4, 4) COPY (unique, 0x100007e9, 4)]
[(ram, 0x4c7cb8, 8) COPY (unique, 0x100007ed, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (unique, 0x100007c9, 8)]
[(ram, 0x4c5750, 8) COPY (ram, 0x4c5750, 8), (ram, 0x4c5750, 8) INDIRECT (unique, 0x100007d1, 8) , (const, 0x19a, 4)]
[(ram, 0x4c5760, 8) COPY (ram, 0x4c5760, 8), (ram, 0x4c5760, 8) INDIRECT (unique, 0x100007d9, 8) , (const, 0x19a, 4)]
[(ram, 0x4c5768, 8) COPY (ram, 0x4c5768, 8), (ram, 0x4c5768, 8) INDIRECT (unique, 0x100007e1, 8) , (const, 0x19a, 4)]
[(ram, 0x4c7cb4, 4) COPY (ram, 0x4c7cb4, 4), (ram, 0x4c7cb4, 4) INDIRECT (unique, 0x100007e9, 4) , (const, 0x19a, 4)]
[(ram, 0x4c7cb8, 8) COPY (ram, 0x4c7cb8, 8), (ram, 0x4c7cb8, 8) INDIRECT (unique, 0x100007ed, 8) , (const, 0x19a, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000efb, 8), (unique, 0x10000efb, 8) CALL (ram, 0x401120, 8) , (unique, 0x100007c9, 8) , (register, 0x30, 4) , (register, 0x30, 8), (register, 0x30, 4) INT_XOR (unique, 0x100007e9, 4) , (const, 0xff, 4)]
