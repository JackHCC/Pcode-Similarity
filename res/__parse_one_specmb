[(unique, 0x3100, 8) CAST (unique, 0x10000555, 8), (unique, 0x10000555, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000565, 8) , (unique, 0xbb80, 2), (unique, 0x10000565, 8) CAST (unique, 0x3100, 8), (unique, 0xbb80, 2) INT_AND (unique, 0xbb80, 2) , (const, 0xe207, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000055d, 8), (unique, 0x1000055d, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x30, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x21, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1b, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x30, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x21, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1b, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x30, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x21, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x20, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x417850, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 4) , (const, 0xa, 4), (register, 0x30, 4) INT_SUB (register, 0x30, 4) , (const, 0x30, 4), (register, 0x30, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000056d, 8), (unique, 0x1000056d, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000575, 8), (unique, 0x10000575, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000057d, 8), (unique, 0x1000057d, 8) INT_ADD (register, 0x38, 8) , (const, 0x2, 8)]
[(unique, 0x100003fc, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(unique, 0x10000400, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x4178c8, 1) , (unique, 0x1000040d, 1), (unique, 0x1000040d, 1) INT_LESS (unique, 0x10000409, 4) , (const, 0xa, 4), (unique, 0x10000409, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0x10000408, 1), (unique, 0x10000408, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x417896, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000585, 4), (unique, 0x10000585, 4) CAST (unique, 0x100003fc, 4)]
[ ---  CBRANCH (ram, 0x417880, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000589, 4) , (const, 0xccccccd, 4), (unique, 0x10000589, 4) CAST (unique, 0x100003fc, 4)]
[(register, 0x0, 4) INT_ADD (unique, 0x10000409, 4) , (unique, 0x10000212, 4), (unique, 0x10000212, 4) INT_MULT (unique, 0x100003fc, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x417894, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (unique, 0x1000058d, 4) , (unique, 0x10000212, 4), (unique, 0x1000058d, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_SUB (const, 0x7fffffff, 4) , (unique, 0x10000409, 4), (unique, 0x10000212, 4) INT_MULT (unique, 0x100003fc, 4) , (const, 0xa, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x30, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x417896, 1)]
[(register, 0x30, 4) MULTIEQUAL (unique, 0x100003fc, 4) , (register, 0x30, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (unique, 0x10000400, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000408, 1) , (const, 0x24, 1)]
[ ---  CBRANCH (ram, 0x417900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100003fc, 4) , (const, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) INT_ADD (register, 0x38, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4175b3, 1)]
[(unique, 0x3100, 8) PTRADD (unique, 0x10000400, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4178f2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100003fc, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x64f, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x64f, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x64f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8), (unique, 0x3100, 4) INT_SUB (unique, 0x100003fc, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x4178ef, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100003fc, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x664, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x664, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x664, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000400, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4175b3, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  BRANCHIND (register, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7fb, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7fb, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7fb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100005a1, 8), (unique, 0x100005a1, 8) INT_ADD (unique, 0x10000599, 8) , (const, 0xd, 8), (unique, 0x10000599, 8) CAST (register, 0x10, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x821, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x821, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x821, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4175e0, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x828, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x828, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x828, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005b1, 8) , (unique, 0xbb00, 1), (unique, 0x100005b1, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005a9, 8), (unique, 0x100005a9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4175e0, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x838, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x838, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x838, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005c1, 8) , (unique, 0xbb00, 1), (unique, 0x100005c1, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005b9, 8), (unique, 0x100005b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4175e0, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x848, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x848, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x848, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005d1, 8) , (unique, 0xbb00, 1), (unique, 0x100005d1, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x80, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005c9, 8), (unique, 0x100005c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4175e0, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x858, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x858, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x858, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e1, 8) , (unique, 0xbb00, 1), (unique, 0x100005e1, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x8, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4175e0, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x868, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x868, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x868, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005f1, 8) , (unique, 0xbb00, 1), (unique, 0x100005f1, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x10, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005e9, 8), (unique, 0x100005e9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x4175e0, 1)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4175c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (register, 0x10, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4175fd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x83, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x83, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x83, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x20, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x89, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x86, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x89, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x86, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x89, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x86, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x417810, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417af0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x1000040e, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x30, 8)]
[(register, 0x0, 4) SUBPIECE (unique, 0x1000041c, 8) , (const, 0x0, 4), (unique, 0x1000041c, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x417b58, 1) , (unique, 0x1000041b, 1), (unique, 0x1000041b, 1) INT_LESS (const, 0x9, 4) , (unique, 0x10000417, 4), (unique, 0x10000417, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000416, 1), (unique, 0x10000416, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x417b2d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x417b18, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0xccccccd, 4)]
[(register, 0x0, 8) INT_ZEXT (unique, 0x3400, 4), (unique, 0x3400, 4) INT_ADD (unique, 0x10000221, 4) , (unique, 0x10000417, 4), (unique, 0x10000221, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x417b2d, 1) , (unique, 0x27800, 1), (unique, 0x27800, 1) INT_SLESS (unique, 0x10000601, 4) , (unique, 0x10000221, 4), (unique, 0x10000601, 4) CAST (register, 0x88, 4), (register, 0x88, 4) INT_SUB (const, 0x7fffffff, 4) , (unique, 0x10000417, 4), (unique, 0x10000221, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x417b2d, 1)]
[(register, 0x0, 8) MULTIEQUAL (unique, 0x1000041c, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x1000040e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417829, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000416, 1) , (const, 0x24, 1)]
[ ---  CBRANCH (ram, 0x417829, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x417829, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4)]
[(register, 0x38, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) PTRADD (unique, 0x1000040e, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417b81, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x1000041c, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x38, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x589, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x584, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x589, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x584, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x589, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x584, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000041c, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x417a03, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000605, 4), (unique, 0x10000605, 4) CAST (register, 0x38, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x4d9, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x4d9, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x4d9, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xb, 8) , (const, 0x4, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x30, 4) , (const, 0x1, 4)]
[(register, 0xa0, 8) COPY (const, 0x1, 8)]
[(register, 0x80, 8) COPY (const, 0x2, 8)]
[(unique, 0x1000053d, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x41762b, 1)]
[(register, 0x80, 8) COPY (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000525, 8) COPY (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x417740, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000545, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000424, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000428, 8) MULTIEQUAL (unique, 0x10000545, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x4177c0, 1) , (unique, 0x10000434, 1), (unique, 0x10000434, 1) INT_LESS (unique, 0x10000430, 4) , (const, 0xa, 4), (unique, 0x10000430, 4) INT_SUB (register, 0x10, 4) , (const, 0x30, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x41777d, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000609, 4), (unique, 0x10000609, 4) CAST (unique, 0x10000424, 4)]
[ ---  CBRANCH (ram, 0x417768, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x1000060d, 4) , (const, 0xccccccd, 4), (unique, 0x1000060d, 4) CAST (unique, 0x10000424, 4)]
[(unique, 0x3400, 4) INT_ADD (unique, 0x10000430, 4) , (unique, 0x1000020e, 4), (unique, 0x1000020e, 4) INT_MULT (unique, 0x10000424, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x41777d, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (unique, 0x10000611, 4) , (unique, 0x1000020e, 4), (unique, 0x10000611, 4) CAST (register, 0x80, 4), (register, 0x80, 4) INT_SUB (const, 0x7fffffff, 4) , (unique, 0x10000430, 4), (unique, 0x1000020e, 4) INT_MULT (unique, 0x10000424, 4) , (const, 0xa, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x41777d, 1)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x10000424, 4) , (register, 0x0, 4) , (unique, 0x3400, 4) , (register, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000428, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417a00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000424, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0x80, 8) COPY (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000535, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x10000428, 8)]
[ ---  BRANCH (ram, 0x41762b, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x470, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x470, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x470, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000424, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(register, 0x80, 8) COPY (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000052d, 8) COPY (unique, 0x10000428, 8)]
[ ---  BRANCH (ram, 0x41762b, 1)]
[(register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x28, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xbb, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xb9, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xbb, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xb9, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xbb, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xb9, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0xffffffff, 4)]
[(unique, 0x100004b1, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(unique, 0x100004ed, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x10000525, 8) , (unique, 0x1000052d, 8) , (unique, 0x10000535, 8) , (unique, 0x1000053d, 8)]
[ ---  CBRANCH (ram, 0x4177e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x10000525, 8) , (unique, 0x1000052d, 8) , (unique, 0x10000535, 8) , (unique, 0x1000053d, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417ac0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417c72, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417cdf, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x38, 4) , (const, 0xa, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0x30, 4), (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0x10000449, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x417ccd, 1)]
[(register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x10, 8) COPY (unique, 0x10000459, 8), (unique, 0x10000459, 8) MULTIEQUAL (unique, 0x10000449, 8) , (unique, 0x10000451, 8)]
[ ---  CBRANCH (ram, 0x417cb4, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x417ca0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0xccccccd, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x38, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (unique, 0x10000225, 4), (unique, 0x10000225, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x417cb4, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x10000615, 4) , (unique, 0x10000225, 4), (unique, 0x10000615, 4) CAST (register, 0x0, 4), (register, 0x0, 4) INT_SUB (const, 0x7fffffff, 4) , (register, 0x38, 4), (unique, 0x10000225, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x417cb4, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000451, 8) COPY (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417cdf, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x38, 4) , (const, 0xa, 4), (register, 0x38, 4) INT_SUB (register, 0x38, 4) , (const, 0x30, 4), (register, 0x38, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x90, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x10, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x417ad9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x24, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x417ad9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x417ad9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4)]
[(register, 0x30, 4) INT_SUB (register, 0x0, 4) , (const, 0x1, 4)]
[(unique, 0x3100, 8) PTRADD (register, 0x90, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417d08, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x3c5, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x3c0, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x3c5, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x3c0, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x3c5, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x3c0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x417641, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000619, 4), (unique, 0x10000619, 4) CAST (register, 0x30, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x30c, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x30c, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x30c, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(register, 0x28, 4) INT_ADD (register, 0x28, 4) , (const, 0x1, 4)]
[(unique, 0x100004d1, 8) COPY (register, 0x80, 8)]
[(unique, 0x1000050d, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x417641, 1)]
[ ---  CBRANCH (ram, 0x417988, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0xa, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x30, 4), (register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1)]
[(unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417c28, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x30, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000499, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x4179e6, 1)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x30, 8) COPY (unique, 0x100004a9, 8), (unique, 0x100004a9, 8) MULTIEQUAL (unique, 0x10000499, 8) , (unique, 0x100004a1, 8)]
[(unique, 0x100004d9, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4179cb, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x1000061d, 4), (unique, 0x1000061d, 4) CAST (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x4179b8, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000621, 4) , (const, 0xccccccd, 4), (unique, 0x10000621, 4) CAST (register, 0x0, 4)]
[(unique, 0x100004e1, 4) COPY (unique, 0x3400, 4), (unique, 0x3400, 4) INT_ADD (unique, 0x1000021b, 4) , (register, 0x8, 4), (unique, 0x1000021b, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x4179cb, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_NOTEQUAL (register, 0x20b, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000625, 4) , (const, 0x0, 4), (unique, 0x10000625, 4) CAST (unique, 0x28600, 4), (unique, 0x28600, 4) INT_ADD (register, 0x38, 4) , (unique, 0x1000012e, 4), (unique, 0x1000012e, 4) INT_MULT (register, 0x0, 4) , (const, 0xfffffff6, 4), (register, 0x20b, 1) INT_SBORROW (register, 0x38, 4) , (unique, 0x1000021b, 4), (register, 0x38, 4) INT_SUB (const, 0x7fffffff, 4) , (register, 0x8, 4), (unique, 0x1000021b, 4) INT_MULT (register, 0x0, 4) , (const, 0xa, 4)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x100004dd, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x4179cb, 1)]
[(register, 0x0, 4) MULTIEQUAL (unique, 0x100004d9, 4) , (unique, 0x100004dd, 4) , (unique, 0x100004e1, 4) , (register, 0x0, 4)]
[(unique, 0x100004a1, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x417c30, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (const, 0xa, 4), (register, 0x8, 4) INT_SUB (register, 0x8, 4) , (const, 0x30, 4), (register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100004c1, 8) COPY (register, 0xa0, 8)]
[(unique, 0x100004fd, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x417641, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x2bb, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x2bb, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x2bb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4)]
[(unique, 0x100004c9, 8) COPY (register, 0xa0, 8)]
[ ---  BRANCH (ram, 0x417641, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x24b, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x24b, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x24b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[(unique, 0x100004b9, 8) COPY (register, 0xa0, 8)]
[(unique, 0x100004f5, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x417641, 1)]
[(register, 0xa0, 8) MULTIEQUAL (unique, 0x100004b1, 8) , (unique, 0x100004b9, 8) , (unique, 0x100004c1, 8) , (unique, 0x100004c9, 8) , (unique, 0x100004d1, 8) , (register, 0xa0, 8)]
[(register, 0x28, 4) MULTIEQUAL (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4) , (register, 0x28, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0xcf, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0xcf, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0xcf, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfdf8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x10000481, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x100004ed, 8) , (unique, 0x100004f5, 8) , (unique, 0x100004fd, 8) , (unique, 0x100004fd, 8) , (unique, 0x1000050d, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x417ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000439, 8) , (const, 0x0, 8), (unique, 0x10000439, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[ ---  CBRANCH (ram, 0x417658, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000629, 8), (unique, 0x10000629, 8) INT_ADD (unique, 0x10000439, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x20e, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x20e, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x20e, 4)]
[(unique, 0x10000491, 8) COPY (stack, 0xffffffffffffffd0, 8), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x20e, 4)]
[ ---  CBRANCH (ram, 0x417658, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x470980, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd0, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x10000441, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000481, 8) , (unique, 0x10000481, 8) , (unique, 0x10000491, 8)]
[(unique, 0x10000461, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000481, 8) , (unique, 0x10000481, 8) , (unique, 0x10000491, 8)]
[ ---  BRANCHIND (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000481, 8) , (unique, 0x10000481, 8) , (unique, 0x10000491, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x796, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x796, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x796, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000639, 8) , (unique, 0xbb00, 1), (unique, 0x10000639, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000631, 8), (unique, 0x10000631, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4177ac, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x6c, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x417682, 1)]
[ ---  CBRANCH (ram, 0x417c61, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x68, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7e2, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7e2, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7e2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbb00, 1), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000649, 8), (unique, 0x10000649, 8) INT_ADD (unique, 0x10000641, 8) , (const, 0xd, 8), (unique, 0x10000641, 8) CAST (register, 0x10, 8)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x417690, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x7ce, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x7ce, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x7ce, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000659, 8) , (unique, 0xbb00, 1), (unique, 0x10000659, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000651, 8), (unique, 0x10000651, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x10000479, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x417690, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x772, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x772, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x772, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000669, 8) , (unique, 0xbb00, 1), (unique, 0x10000669, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000661, 8), (unique, 0x10000661, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000471, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x417690, 1)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x10, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x787, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x787, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x787, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000679, 8) , (unique, 0xbb00, 1), (unique, 0x10000679, 8) CAST (unique, 0x3100, 8), (unique, 0xbb00, 1) INT_OR (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000671, 8), (unique, 0x10000671, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (stack, 0xffffffffffffffd0, 8)]
[(unique, 0x10000469, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (stack, 0xffffffffffffffd0, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000461, 8) , (unique, 0x10000469, 8) , (unique, 0x10000471, 8) , (unique, 0x10000479, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x127, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x124, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x127, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x124, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x127, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x124, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000461, 8) , (unique, 0x10000469, 8) , (unique, 0x10000471, 8) , (unique, 0x10000479, 8) , (register, 0x10, 8)]
[(unique, 0x10000515, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x10000441, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x417bd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8948, 8) , (const, 0x0, 8), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x4176b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x10000681, 8), (unique, 0x10000681, 8) INT_ADD (ram, 0x4c8968, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x10000515, 8) , (const, 0x1ba, 4)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1c2, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1ba, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1c2, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1ba, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1c2, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1ba, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000689, 8) , (register, 0x8, 8), (unique, 0x10000689, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x1, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x4176b0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x10, 8) , (const, 0x1, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41791d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x41791d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x10000515, 8) , (unique, 0x10000515, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x12f, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x12f, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x12f, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000691, 8) , (const, 0x1, 8), (unique, 0x10000691, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  BRANCHIND (unique, 0x1000006f, 4), (unique, 0x1000006f, 4) SUBPIECE (register, 0x10, 8) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x6f4, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x6f4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x3, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x417a4c, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x705, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x705, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x705, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x5, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x708, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x708, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x708, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x800, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x417a4c, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x749, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x749, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x749, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x417a4c, 1)]
[ ---  CBRANCH (ram, 0x417c40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000021a, 1) , (const, 0x0, 1), (unique, 0x1000021a, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000699, 8), (unique, 0x10000699, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x417c50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58800, 1) , (const, 0x0, 1), (unique, 0x58800, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x6f0, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x6f0, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x6f0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x2, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100006a9, 8), (unique, 0x100006a9, 8) INT_ADD (unique, 0x100006a1, 8) , (const, 0xd, 8), (unique, 0x100006a1, 8) CAST (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x417955, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x6d5, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x6d5, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x6d5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x400, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x417955, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x6b8, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x6b8, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x6b8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x200, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x417955, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x74d, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x74d, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x74d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x4, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x417a4c, 1)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x41795f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x751, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x751, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x751, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x417a5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x762, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x762, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x762, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x417a5a, 1)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x151, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x151, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x151, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006b1, 8) , (const, 0x0, 8), (unique, 0x100006b1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x746, 4)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x746, 4)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x746, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xd, 8) , (const, 0x4, 8), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0x107, 4), (register, 0x0, 4) INT_AND (unique, 0x100000fd, 4) , (const, 0xffffff00, 4), (unique, 0x100000fd, 4) INT_2COMP (unique, 0x12600, 4), (unique, 0x12600, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100006b9, 8), (unique, 0x100006b9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[ ---  CBRANCH (ram, 0x41791d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0x8, 8) COPY (const, 0x1, 8)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x1000006f, 4) , (unique, 0xbc80, 4)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x1ec, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x1ec, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x1ec, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 4), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  BRANCH (ram, 0x41791d, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[(ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x417a5a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (unique, 0x1000006f, 4) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (register, 0x10, 4) , (unique, 0x1000006f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c1, 8) , (register, 0x38, 8), (unique, 0x100006c1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0x38, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006c9, 8) , (register, 0x38, 8), (unique, 0x100006c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x4, 8), (register, 0x38, 8) PTRADD (stack, 0xffffffffffffffd0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(ram, 0x4c8948, 8) COPY (ram, 0x4c8948, 8), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x16f, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x16c, 4)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x16f, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x16c, 4)]
[(ram, 0x4c8968, 8) COPY (ram, 0x4c8968, 8), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x16f, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x16c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006d1, 8) , (stack, 0xffffffffffffffd0, 8), (unique, 0x100006d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x4, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x18a, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006d9, 8) , (register, 0x0, 8), (unique, 0x100006d9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x8, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x4010a0, 8) , (stack, 0xffffffffffffffd0, 8) , (const, 0x25, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4c8948, 8) COPY (ram, 0x4c8948, 8), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x18d, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x18a, 4), (ram, 0x4c8948, 8) INDIRECT (ram, 0x4c8948, 8) , (const, 0x186, 4), (ram, 0x4c8948, 8) MULTIEQUAL (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8) , (ram, 0x4c8948, 8)]
[(ram, 0x4c8950, 8) COPY (ram, 0x4c8950, 8), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x18d, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x18a, 4), (ram, 0x4c8950, 8) INDIRECT (ram, 0x4c8950, 8) , (const, 0x186, 4), (ram, 0x4c8950, 8) MULTIEQUAL (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8) , (ram, 0x4c8950, 8)]
[(ram, 0x4c8968, 8) COPY (ram, 0x4c8968, 8), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x18d, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x18a, 4), (ram, 0x4c8968, 8) INDIRECT (ram, 0x4c8968, 8) , (const, 0x186, 4), (ram, 0x4c8968, 8) MULTIEQUAL (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8) , (ram, 0x4c8968, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
