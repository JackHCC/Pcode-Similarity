[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(stack, 0xffffffffffffffe4, 4) COPY (const, 0x1, 4)]
[(unique, 0x10000051, 4) COPY (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x243558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000055, 4) COPY (register, 0x80, 4)]
[ ---  CBRANCH (ram, 0x243558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 4) INT_ADD (register, 0x8, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_MULT (register, 0x80, 4) , (const, 0x10, 4)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x243558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_MULT (unique, 0x3400, 4) , (const, 0x10, 4)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x243558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x10, 4)]
[(register, 0x8, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x243558, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x8, 4), (register, 0x0, 4) INT_MULT (register, 0x0, 4) , (const, 0x10, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(unique, 0x1000003b, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x80, 8)]
[(unique, 0x10000045, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x243553, 1) , (unique, 0x10000044, 1), (unique, 0x10000044, 1) INT_NOTEQUAL (unique, 0x10000043, 1) , (const, 0x0, 1), (unique, 0x10000043, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x0, 4) INT_XOR (register, 0x0, 4) , (unique, 0x10000019, 4), (unique, 0x10000019, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x18, 4), (register, 0x8, 4) INT_AND (register, 0x0, 4) , (const, 0xf0000000, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (register, 0x10, 4), (register, 0x0, 4) INT_MULT (unique, 0x10000045, 4) , (const, 0x10, 4), (register, 0x10, 4) INT_ZEXT (unique, 0x10000043, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (unique, 0x1000003b, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_AND (unique, 0x10000045, 4) , (const, 0xfffffff, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (unique, 0x10000049, 8) , (const, 0x1c0, 4), (unique, 0x10000049, 8) COPY (register, 0x10, 8)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (register, 0x0, 4) , (const, 0x1c0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x10000051, 4) , (unique, 0x10000055, 4) , (unique, 0x3400, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x1c0, 4)]
[(stack, 0xffffffffffffffe8, 8) INDIRECT (stack, 0xffffffffffffffe8, 8) , (const, 0x1c0, 4), (stack, 0xffffffffffffffe8, 8) COPY (const, 0x0, 8)]
[ ---  CALL (ram, 0x243060, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x8, 8) , (register, 0x20, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8)]
