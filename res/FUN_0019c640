[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000154, 8), (unique, 0x10000154, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x19c778, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x19c6c5, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x4d, 4)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x4d, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x4d, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x4d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4d, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x4d, 4)]
[ ---  CBRANCH (ram, 0x19c68d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x265fb0, 8) , (register, 0x30, 8) , (register, 0x20, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x19c6a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed9a8, 4) , (const, 0x0, 4)]
[(ram, 0x4ed9a8, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed9a8, 4) , (const, 0x0, 4)]
[(ram, 0x4ed9a8, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x19c6c5, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x119, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x119, 4)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x119, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x119, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x119, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x119, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x119, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x10000115, 8), (unique, 0x10000115, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed9a8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x10000140, 8) COPY (ram, 0x4ed998, 8), (ram, 0x4ed998, 8) MULTIEQUAL (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8)]
[(unique, 0x10000138, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x85, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x85, 4), (ram, 0x4ed998, 8) MULTIEQUAL (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x85, 4), (ram, 0x4ed9a8, 4) MULTIEQUAL (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x85, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x85, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015c, 8) , (ram, 0x4ed998, 8), (unique, 0x1000015c, 8) CAST (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8), (ram, 0x4ed998, 8) MULTIEQUAL (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8)]
[ ---  CBRANCH (ram, 0x19c780, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed998, 8) , (const, 0x0, 8), (ram, 0x4ed998, 8) MULTIEQUAL (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10a, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x10a, 4)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x10a, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x10a, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x10a, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x10a, 4)]
[(register, 0x0, 8) CALL (ram, 0x1212c0, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x19c6eb, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8b, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x8b, 4)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x8b, 4)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x8b, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x8b, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x8b, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x8b, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000164, 8), (unique, 0x10000164, 8) CALLIND (unique, 0x10000140, 8) , (register, 0x38, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016c, 8) , (unique, 0x100000fd, 8), (unique, 0x1000016c, 8) CAST (unique, 0x10000138, 8), (unique, 0x100000fd, 8) PTRSUB (const, 0x0, 8) , (const, 0x19c640, 8)]
[ ---  CALL (ram, 0x19c0b0, 8) , (register, 0x30, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0xa5, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x94, 4), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0x91, 4), (ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0xa5, 4), (ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x94, 4), (ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0x91, 4), (ram, 0x4ed998, 8) MULTIEQUAL (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8)]
[(ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xa5, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x94, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0x91, 4), (ram, 0x4ed9a8, 4) MULTIEQUAL (ram, 0x4ed9a8, 4) , (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xa5, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x94, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x91, 4), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xa5, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x94, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x164dc0, 8) , (ram, 0x4ed9b0, 8) , (unique, 0x10000105, 8) , (register, 0xb0, 8) , (register, 0x38, 8), (unique, 0x10000105, 8) COPY (const, 0x2b5018, 8), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x94, 4), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0x91, 4), (register, 0xb0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8), (ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[ ---  CBRANCH (ram, 0x19c730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xa5, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x94, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x91, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x1000014c, 4) COPY (unique, 0x1000012d, 4), (unique, 0x1000012d, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x19c752, 1) , (unique, 0x10000131, 1), (unique, 0x10000131, 1) INT_NOTEQUAL (unique, 0x1000012d, 4) , (const, 0x0, 4), (unique, 0x1000012d, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf4, 4)]
[(ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0xf4, 4)]
[(ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0xf4, 4)]
[(ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xf4, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xf4, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xf4, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x1000010d, 8), (unique, 0x1000010d, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed9a8, 8)]
[(unique, 0x10000148, 4) COPY (ram, 0x4ed9a8, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xf4, 4), (ram, 0x4ed9a8, 4) INT_ADD (ram, 0x4ed9a8, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed9b0, 8) MULTIEQUAL (ram, 0x4ed9b0, 8) , (ram, 0x4ed9b0, 8)]
[(ram, 0x4ed998, 8) MULTIEQUAL (ram, 0x4ed998, 8) , (ram, 0x4ed998, 8)]
[(ram, 0x4eaee0, 8) MULTIEQUAL (ram, 0x4eaee0, 8) , (ram, 0x4eaee0, 8)]
[(ram, 0x4ed9a8, 4) COPY (unique, 0x10000150, 4), (unique, 0x10000150, 4) MULTIEQUAL (unique, 0x10000148, 4) , (unique, 0x1000014c, 4)]
[(register, 0x0, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x19c790, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000174, 8), (unique, 0x10000174, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe5, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8), (ram, 0x4eaee0, 8) INDIRECT (ram, 0x4eaee0, 8) , (const, 0xe5, 4)]
[(ram, 0x4ed998, 8) COPY (ram, 0x4ed998, 8), (ram, 0x4ed998, 8) INDIRECT (ram, 0x4ed998, 8) , (const, 0xe5, 4)]
[(ram, 0x4ed9a8, 4) COPY (ram, 0x4ed9a8, 4), (ram, 0x4ed9a8, 4) INDIRECT (ram, 0x4ed9a8, 4) , (const, 0xe5, 4)]
[(ram, 0x4ed9b0, 8) COPY (ram, 0x4ed9b0, 8), (ram, 0x4ed9b0, 8) INDIRECT (ram, 0x4ed9b0, 8) , (const, 0xe5, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xe5, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eaee0, 8) COPY (ram, 0x4eaee0, 8)]
[(ram, 0x4ed998, 8) COPY (ram, 0x4ed998, 8)]
[(ram, 0x4ed9a8, 4) COPY (ram, 0x4ed9a8, 4)]
[(ram, 0x4ed9b0, 8) COPY (ram, 0x4ed9b0, 8)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
