[ ---  CBRANCH (ram, 0x130050, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0x100000b9, 8), (unique, 0x100000b9, 8) CAST (unique, 0x10000081, 8), (unique, 0x10000081, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea960, 8)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x12fff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x4a, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x4a, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x4a, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x10000091, 8), (unique, 0x10000091, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0880, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0880, 8) , (const, 0x11, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x12fffc, 1)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x12fff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x6, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x18, 4) SUBPIECE (register, 0x18, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x130014, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000d1, 8), (unique, 0x100000d1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x30, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (unique, 0x10000099, 8) , (register, 0x18, 8) , (const, 0x8, 8), (unique, 0x10000099, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x76, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x76, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x76, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x76, 4)]
[ ---  CALL (ram, 0x12e120, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x12fff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 4) , (const, 0xc, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x130040, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xb1, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xb1, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xb1, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x10000089, 8), (unique, 0x10000089, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x100000e1, 8), (unique, 0x100000e1, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000d9, 8), (unique, 0x100000d9, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0888, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0888, 8) , (const, 0x11, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x38, 8)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xc0, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xc0, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xc0, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8)]
