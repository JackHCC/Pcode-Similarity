[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000027c, 8), (unique, 0x1000027c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000284, 8), (unique, 0x10000284, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff34, 8)]
[ ---  BRANCH (ram, 0x253bc1, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3e, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x3e, 4), (ram, 0x14, 4) MULTIEQUAL (ram, 0x14, 4) , (ram, 0x14, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x3e, 4), (ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x3e, 4), (ram, 0x1c, 4) MULTIEQUAL (ram, 0x1c, 4) , (ram, 0x1c, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x3e, 4), (ram, 0x20, 4) MULTIEQUAL (ram, 0x20, 4) , (ram, 0x20, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3e, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x3e, 4), (stack, 0xffffffffffffff34, 4) COPY (const, 0x6e, 4)]
[(stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x3e, 4), (stack, 0xffffffffffffff38, 2) MULTIEQUAL (stack, 0xffffffffffffff38, 2) , (stack, 0xffffffffffffff38, 2)]
[(stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x3e, 4), (stack, 0xffffffffffffff3a, 6) MULTIEQUAL (stack, 0xffffffffffffff3a, 6) , (stack, 0xffffffffffffff3a, 6)]
[(stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x3e, 4), (stack, 0xffffffffffffff40, 2) MULTIEQUAL (stack, 0xffffffffffffff40, 2) , (stack, 0xffffffffffffff40, 2)]
[(stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x3e, 4), (stack, 0xffffffffffffff42, 4) MULTIEQUAL (stack, 0xffffffffffffff42, 4) , (stack, 0xffffffffffffff42, 4)]
[(stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x3e, 4), (stack, 0xffffffffffffff46, 2) MULTIEQUAL (stack, 0xffffffffffffff46, 2) , (stack, 0xffffffffffffff46, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x3e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x253bb0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2227d0, 8) , (unique, 0xbc80, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x253d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x4, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x143, 4)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x143, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x143, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x143, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x143, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x143, 4)]
[(stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x143, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x143, 4)]
[ ---  CALL (ram, 0x25a5d0, 8)]
[ ---  BRANCH (ram, 0x253ca0, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x71, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6c, 4)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x71, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x6c, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x71, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x6c, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x71, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x6c, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x71, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x6c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x71, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6c, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x71, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x6c, 4)]
[(stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x71, 4), (stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x6c, 4), (stack, 0xffffffffffffff38, 2) COPY (const, 0x1, 2)]
[(stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x71, 4), (stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x6c, 4), (stack, 0xffffffffffffff3a, 6) COPY (const, 0x0, 6)]
[(stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x71, 4), (stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x6c, 4), (stack, 0xffffffffffffff40, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x71, 4), (stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x6c, 4), (stack, 0xffffffffffffff42, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x71, 4), (stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x6c, 4), (stack, 0xffffffffffffff46, 2) COPY (const, 0x0, 2)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x71, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x6c, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) CALL (ram, 0x1212c0, 8) , (const, 0x1d0, 8)]
[ ---  CBRANCH (ram, 0x253cc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) CALL (ram, 0x1212c0, 8) , (const, 0x150, 8)]
[ ---  CBRANCH (ram, 0x253cc7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x10000178, 8) , (unique, 0x10000190, 8) , (register, 0x0, 8), (unique, 0x10000190, 8) COPY (const, 0x2b71f8, 8), (unique, 0x10000178, 8) COPY (const, 0x2b67f6, 8), (register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x10000168, 8) , (unique, 0x10000188, 8) , (const, 0x5, 8), (unique, 0x10000188, 8) COPY (const, 0x2b718a, 8), (unique, 0x10000168, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x12c, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x128, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x124, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x10a, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x12c, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x128, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x124, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x10a, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x12c, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x128, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x124, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x10a, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x12c, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x128, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x124, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x10a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12c, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x128, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x124, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x12c, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x128, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x124, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x12c, 4), (stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x128, 4), (stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x124, 4), (stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x12c, 4), (stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x128, 4), (stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x124, 4), (stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x12c, 4), (stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x128, 4), (stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x124, 4), (stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x12c, 4), (stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x128, 4), (stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x124, 4), (stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x12c, 4), (stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x128, 4), (stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x124, 4), (stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x12c, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x128, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x124, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x10a, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x253d15, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x24f650, 8) , (unique, 0x3100, 8) , (unique, 0xbc80, 4) , (unique, 0xbc80, 4) , (unique, 0x100002ac, 8) , (unique, 0x10000160, 8) , (unique, 0x10000158, 8), (unique, 0x100002ac, 8) CAST (register, 0x0, 8), (unique, 0x10000160, 8) PTRSUB (const, 0x0, 8) , (const, 0x253f70, 8), (unique, 0x10000158, 8) PTRSUB (const, 0x0, 8) , (const, 0x253e10, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a4, 8), (unique, 0x100002a4, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002b4, 8) , (register, 0x0, 8), (unique, 0x100002b4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0x100001d0, 8) , (const, 0x10, 8), (unique, 0x100001d0, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x48, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002bc, 8) , (register, 0xa0, 8), (unique, 0x100002bc, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x30, 8), (register, 0xa0, 8) PTRADD (register, 0x0, 8) , (const, 0x10, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) CAST (unique, 0x10000198, 8), (unique, 0x10000198, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ea420, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 2), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000210, 8) , (register, 0x0, 4), (unique, 0x10000210, 8) PTRSUB (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xc0, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xc0, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x94, 4)]
[ ---  CALL (ram, 0x259990, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002d8, 8) , (unique, 0x10000137, 8), (unique, 0x100002d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x14, 8), (unique, 0x10000137, 8) INT_ADD (unique, 0x10000258, 8) , (stack, 0xffffffffffffff38, 2), (unique, 0x10000258, 8) INT_LEFT (unique, 0x10000250, 8) , (const, 0x10, 8), (unique, 0x10000250, 8) INT_SEXT (unique, 0x100002cc, 6), (unique, 0x100002cc, 6) CAST (stack, 0xffffffffffffff3a, 6), (stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0xc0, 4), (stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0xc0, 4), (stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x94, 4), (stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x94, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002e0, 8) , (unique, 0x1000013f, 8), (unique, 0x100002e0, 8) CAST (unique, 0x1000012f, 8), (unique, 0x1000012f, 8) PTRSUB (unique, 0x10000228, 8) , (const, 0x8, 8), (unique, 0x10000228, 8) PTRSUB (register, 0x0, 8) , (const, 0x14, 8), (unique, 0x1000013f, 8) INT_ADD (unique, 0x10000274, 8) , (unique, 0x10000147, 6), (unique, 0x10000274, 8) INT_LEFT (unique, 0x1000026c, 8) , (const, 0x30, 8), (unique, 0x1000026c, 8) INT_SEXT (unique, 0x100002d6, 2), (unique, 0x100002d6, 2) CAST (stack, 0xffffffffffffff46, 2), (unique, 0x10000147, 6) INT_ADD (unique, 0x10000266, 6) , (stack, 0xffffffffffffff40, 2), (unique, 0x10000266, 6) INT_LEFT (unique, 0x10000260, 6) , (const, 0x10, 6), (unique, 0x10000260, 6) INT_SEXT (unique, 0x100002d2, 4), (unique, 0x100002d2, 4) CAST (stack, 0xffffffffffffff42, 4), (stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0xc0, 4), (stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0xc0, 4), (stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0xc0, 4), (stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x94, 4), (stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x94, 4), (stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x94, 4)]
[(ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xcd, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x2fe, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x2fd, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xc0, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xbd, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xbb, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xb8, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xab, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xa7, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0xa4, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x98, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x94, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x8c, 4)]
[(ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xcd, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2fe, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x2fd, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xc0, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xbd, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xbb, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xb8, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xab, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa7, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0xa4, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x98, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x94, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x8c, 4)]
[(ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xcd, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x2fe, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x2fd, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xc0, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xbd, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xbb, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xb8, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xab, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xa7, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0xa4, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x98, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x94, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x8c, 4)]
[(ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xcd, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x2fe, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x2fd, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xc0, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xbd, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xbb, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xb8, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xab, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xa7, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0xa4, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x98, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x94, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x8c, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xcd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fe, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x2fd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xc0, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbb, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb8, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xab, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa4, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x98, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x94, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x8c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff34, 4), (unique, 0x3100, 8) PTRSUB (register, 0x0, 8) , (const, 0x10, 8), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0xc0, 4), (stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x94, 4)]
[(stack, 0xffffffffffffff46, 2) MULTIEQUAL (stack, 0xffffffffffffff46, 2) , (stack, 0xffffffffffffff46, 2)]
[(stack, 0xffffffffffffff42, 4) MULTIEQUAL (stack, 0xffffffffffffff42, 4) , (stack, 0xffffffffffffff42, 4)]
[(stack, 0xffffffffffffff40, 2) MULTIEQUAL (stack, 0xffffffffffffff40, 2) , (stack, 0xffffffffffffff40, 2)]
[(stack, 0xffffffffffffff3a, 6) MULTIEQUAL (stack, 0xffffffffffffff3a, 6) , (stack, 0xffffffffffffff3a, 6)]
[(stack, 0xffffffffffffff38, 2) MULTIEQUAL (stack, 0xffffffffffffff38, 2) , (stack, 0xffffffffffffff38, 2)]
[(stack, 0xffffffffffffff34, 4) MULTIEQUAL (stack, 0xffffffffffffff34, 4) , (stack, 0xffffffffffffff34, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x20, 4) MULTIEQUAL (ram, 0x20, 4) , (ram, 0x20, 4)]
[(ram, 0x1c, 4) MULTIEQUAL (ram, 0x1c, 4) , (ram, 0x1c, 4)]
[(ram, 0x18, 4) MULTIEQUAL (ram, 0x18, 4) , (ram, 0x18, 4)]
[(ram, 0x14, 4) MULTIEQUAL (ram, 0x14, 4) , (ram, 0x14, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x253d2a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffff34, 4) INDIRECT (stack, 0xffffffffffffff34, 4) , (const, 0x102, 4)]
[(stack, 0xffffffffffffff38, 2) INDIRECT (stack, 0xffffffffffffff38, 2) , (const, 0x102, 4)]
[(stack, 0xffffffffffffff3a, 6) INDIRECT (stack, 0xffffffffffffff3a, 6) , (const, 0x102, 4)]
[(stack, 0xffffffffffffff40, 2) INDIRECT (stack, 0xffffffffffffff40, 2) , (const, 0x102, 4)]
[(stack, 0xffffffffffffff42, 4) INDIRECT (stack, 0xffffffffffffff42, 4) , (const, 0x102, 4)]
[(stack, 0xffffffffffffff46, 2) INDIRECT (stack, 0xffffffffffffff46, 2) , (const, 0x102, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x102, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x14, 4) COPY (ram, 0x14, 4), (ram, 0x14, 4) INDIRECT (ram, 0x14, 4) , (const, 0x102, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4), (ram, 0x18, 4) INDIRECT (ram, 0x18, 4) , (const, 0x102, 4)]
[(ram, 0x1c, 4) COPY (ram, 0x1c, 4), (ram, 0x1c, 4) INDIRECT (ram, 0x1c, 4) , (const, 0x102, 4)]
[(ram, 0x20, 4) COPY (ram, 0x20, 4), (ram, 0x20, 4) INDIRECT (ram, 0x20, 4) , (const, 0x102, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x102, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x14, 4) COPY (ram, 0x14, 4)]
[(ram, 0x18, 4) COPY (ram, 0x18, 4)]
[(ram, 0x1c, 4) COPY (ram, 0x1c, 4)]
[(ram, 0x20, 4) COPY (ram, 0x20, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
