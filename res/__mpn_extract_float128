[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x1f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x0, 4) , (const, 0x3fff, 4), (register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x7fff, 4), (register, 0x0, 4) INT_RIGHT (register, 0x120c, 4) , (const, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x1200, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000070, 8) , (register, 0x0, 8), (unique, 0x10000070, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x100000f2, 6), (unique, 0x100000f2, 6) INT_ADD (unique, 0x1000015c, 6) , (register, 0x1208, 4), (unique, 0x1000015c, 6) INT_LEFT (unique, 0x10000156, 6) , (const, 0x20, 6), (unique, 0x10000156, 6) INT_SEXT (unique, 0x99580, 2), (unique, 0x99580, 2) SUBPIECE (register, 0x120c, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x48b6e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000004c, 16) , (const, 0x0, 16), (unique, 0x1000004c, 16) INT_AND (unique, 0x100000a8, 16) , (const, 0x7fff000000000000, 16), (unique, 0x100000a8, 16) INT_ADD (unique, 0x10000146, 16) , (unique, 0x100000c0, 12), (unique, 0x10000146, 16) INT_LEFT (unique, 0x10000136, 16) , (const, 0x60, 16), (unique, 0x10000136, 16) INT_SEXT (unique, 0x10000186, 4), (unique, 0x10000186, 4) CAST (register, 0x120c, 4), (unique, 0x100000c0, 12) INT_ADD (unique, 0x1000012a, 12) , (register, 0x1200, 8), (unique, 0x1000012a, 12) INT_LEFT (unique, 0x1000011e, 12) , (const, 0x40, 12), (unique, 0x1000011e, 12) INT_SEXT (unique, 0x10000182, 4), (unique, 0x10000182, 4) CAST (register, 0x1208, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (const, 0x1000000000000, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x48b6f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x1200, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x48b730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x1200, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x1b500, 8) , (const, 0x0, 8), (unique, 0x1b500, 8) INT_RIGHT (register, 0x1200, 8) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[(unique, 0x1000005c, 1) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_XOR (unique, 0x1b380, 8) , (const, 0x3f, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  CBRANCH (ram, 0x48b770, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x80, 8) INT_XOR (unique, 0x1b380, 8) , (const, 0x3f, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[(stack, 0xffffffffffffffe8, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (register, 0x1200, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0xf, 1) , (unique, 0x1000005c, 1)]
[(stack, 0xffffffffffffffec, 4) SUBPIECE (unique, 0x1000017a, 8) , (const, 0x0, 4), (unique, 0x1000017a, 8) INT_RIGHT (register, 0x0, 8) , (const, 0x20, 4), (register, 0x0, 8) INT_RIGHT (register, 0x1200, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0xf, 1) , (unique, 0x1000005c, 1)]
[(register, 0x0, 8) INT_LEFT (register, 0x1200, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_ADD (unique, 0x1000005c, 1) , (const, 0x31, 1)]
[ ---  BRANCH (ram, 0x48b712, 1)]
[(stack, 0xffffffffffffffe8, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_LEFT (register, 0x1200, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x1000005c, 1) , (const, 0xf, 1)]
[(stack, 0xffffffffffffffec, 4) SUBPIECE (unique, 0x10000162, 8) , (const, 0x0, 4), (unique, 0x10000162, 8) INT_RIGHT (unique, 0x1000018a, 8) , (const, 0x20, 4), (unique, 0x1000018a, 8) CAST (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x1200, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (unique, 0x1000005c, 1) , (const, 0xf, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000078, 8) , (unique, 0x100000a0, 8), (unique, 0x10000078, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100000a0, 8) INT_ADD (unique, 0x10000172, 8) , (stack, 0xffffffffffffffe8, 4), (unique, 0x10000172, 8) INT_LEFT (unique, 0x1000016a, 8) , (const, 0x20, 8), (unique, 0x1000016a, 8) INT_SEXT (unique, 0x10000192, 4), (unique, 0x10000192, 4) CAST (stack, 0xffffffffffffffec, 4), (stack, 0xffffffffffffffe8, 4) MULTIEQUAL (stack, 0xffffffffffffffe8, 4) , (stack, 0xffffffffffffffe8, 4), (stack, 0xffffffffffffffec, 4) MULTIEQUAL (stack, 0xffffffffffffffec, 4) , (stack, 0xffffffffffffffec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (const, 0xffffbfd1, 4) , (register, 0x80, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
[(unique, 0x1b380, 8) INT_SUB (unique, 0x1b380, 8) , (const, 0x1, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  CBRANCH (ram, 0x48b730, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x1b380, 8) COPY (const, 0x3f, 8)]
[ ---  CBRANCH (const, 0x6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (const, 0x3, 1) , (unique, 0x1b580, 1), (unique, 0x1b580, 1) INT_EQUAL (unique, 0x100000f8, 6) , (const, 0x0, 6), (unique, 0x100000f8, 6) INT_RIGHT (unique, 0x100000f2, 6) , (unique, 0x1b380, 8), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_LEFT (register, 0x1200, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (unique, 0x10000068, 1) , (const, 0x3f, 1), (unique, 0x10000068, 1) SUBPIECE (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) INT_XOR (unique, 0x10000028, 4) , (const, 0x3f, 4), (unique, 0x10000028, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_OR (register, 0x0, 8) , (register, 0x88, 8), (register, 0x0, 8) INT_LEFT (register, 0x0, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (unique, 0x10000068, 1) , (const, 0x3f, 1), (register, 0x88, 8) INT_RIGHT (register, 0x1200, 8) , (unique, 0x57680, 1), (unique, 0x57680, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x8, 1) INT_SUB (const, 0x40, 1) , (unique, 0x10000068, 1), (unique, 0x10000068, 1) SUBPIECE (register, 0x80, 4) , (const, 0x0, 4), (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) INT_XOR (unique, 0x10000028, 4) , (const, 0x3f, 4), (unique, 0x10000028, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (const, 0xffffc002, 4) , (register, 0x80, 4), (register, 0x80, 4) INT_SUB (register, 0x80, 4) , (const, 0xf, 4), (register, 0x80, 4) INT_XOR (unique, 0x10000028, 4) , (const, 0x3f, 4), (unique, 0x10000028, 4) SUBPIECE (unique, 0x1b380, 8) , (const, 0x0, 4), (unique, 0x1b380, 8) MULTIEQUAL (unique, 0x1b380, 8) , (unique, 0x1b380, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
[(unique, 0x1b380, 8) INT_ADD (unique, 0x1b380, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (const, 0xfffffffc, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x2, 8)]
