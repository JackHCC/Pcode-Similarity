[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000e9, 8), (unique, 0x100000e9, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffc8, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x1000009a, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100000a4, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100000ac, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(unique, 0x100000b4, 8) MULTIEQUAL (stack, 0xffffffffffffffc8, 8) , (stack, 0xffffffffffffffc8, 8)]
[(unique, 0x100000bc, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CBRANCH (ram, 0x208dc0, 1) , (unique, 0x100000a3, 1), (unique, 0x100000a3, 1) INT_EQUAL (unique, 0x100000a2, 1) , (const, 0x0, 1), (unique, 0x100000a2, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100000f9, 8), (unique, 0x100000f9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100000ac, 8) , (unique, 0x100000a4, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100000a2, 1)]
[(unique, 0x100000d6, 8) MULTIEQUAL (unique, 0x1000009a, 8) , (register, 0x0, 8)]
[(unique, 0x100000de, 1) MULTIEQUAL (unique, 0x100000a2, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100000df, 8) MULTIEQUAL (unique, 0x100000ac, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x208d56, 1) , (unique, 0x100000d5, 1), (unique, 0x100000d5, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4eae00, 8) INDIRECT (unique, 0x100000df, 8) , (const, 0x129, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100000d6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x208d40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) PTRADD (unique, 0x100000d6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CALLOTHER (const, 0x49, 4)]
[ ---  BRANCH (ram, 0x208d6a, 1)]
[ ---  CBRANCH (ram, 0x208dc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000101, 8), (unique, 0x10000101, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x30, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x30, 8) INT_SEXT (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x208df0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000de, 1) , (const, 0x2a, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0x100000d6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100000a4, 8) , (const, 0x103, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x103, 4), (ram, 0x4eae00, 8) INDIRECT (unique, 0x100000df, 8) , (const, 0x100, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x100000b4, 8) , (const, 0x103, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x100000bc, 8) , (const, 0x103, 4)]
[ ---  CBRANCH (ram, 0x208de5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x208be0, 8) , (register, 0x38, 8) , (register, 0x20, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x11c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  BRANCH (ram, 0x208d0d, 1)]
[ ---  CBRANCH (ram, 0x208dc0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000de, 1) , (const, 0x2f, 1)]
[(ram, 0x4eae00, 8) MULTIEQUAL (unique, 0x100000ac, 8) , (unique, 0x100000df, 8) , (ram, 0x4eae00, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0x100000d6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x100000a4, 8) , (const, 0x73, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x73, 4), (ram, 0x4eae00, 8) INDIRECT (unique, 0x100000df, 8) , (const, 0x70, 4)]
[(stack, 0xffffffffffffffc8, 8) INDIRECT (unique, 0x100000b4, 8) , (const, 0x73, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0x100000bc, 8) , (const, 0x73, 4)]
[ ---  CBRANCH (ram, 0x208de5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x208be0, 8) , (register, 0x38, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x208de5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc8, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x208de0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc8, 8) , (const, 0xffffffffffffffff, 8)]
[ ---  CBRANCH (ram, 0x208da4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x8000000000000000, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x5, 8)]
[ ---  BRANCH (ram, 0x208dc2, 1)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x208e19, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000109, 8), (unique, 0x10000109, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (unique, 0x100000a4, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0x100000bc, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xe4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xe4, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0xa5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SDIV (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
