[(unique, 0x100000b9, 8) COPY (ram, 0x4eadc0, 8)]
[ ---  CBRANCH (ram, 0x1913c8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_SUB (register, 0x18, 8) , (const, 0x21, 8), (register, 0x18, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) INT_ADD (ram, 0x4ebca0, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1913c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_AND (register, 0x10, 8) , (register, 0x0, 8), (register, 0x10, 8) INT_2COMP (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x18, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x38, 8)]
[(ram, 0x4eadc0, 8) INDIRECT (ram, 0x4eadc0, 8) , (const, 0x5e, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x5e, 4)]
[(ram, 0x4eaea0, 8) INDIRECT (ram, 0x4eaea0, 8) , (const, 0x5e, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x5e, 4)]
[ ---  CBRANCH (ram, 0x1913c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (ram, 0x4ebca0, 8) , (register, 0x18, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (const, 0x0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x5e, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000d1, 8), (unique, 0x100000d1, 8) CAST (ram, 0x4eadc0, 8)]
[(ram, 0x4eadc0, 8) INDIRECT (ram, 0x4eadc0, 8) , (const, 0x82, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x82, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x82, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x82, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000d9, 8), (unique, 0x100000d9, 8) CAST (unique, 0x100000b9, 8), (register, 0x38, 8) INT_2COMP (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1913d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000e1, 8), (unique, 0x100000e1, 8) CAST (ram, 0x4eaea0, 8), (ram, 0x4eaea0, 8) INDIRECT (ram, 0x4eaea0, 8) , (const, 0x82, 4)]
[(ram, 0x4eadc0, 8) INDIRECT (ram, 0x4eadc0, 8) , (const, 0x107, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x107, 4)]
[(ram, 0x4eaea0, 8) INDIRECT (ram, 0x4eaea0, 8) , (const, 0x107, 4)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x107, 4)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x107, 4)]
[ ---  CALLIND (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x191387, 1)]
[(ram, 0x4eadc0, 8) INDIRECT (ram, 0x4eadc0, 8) , (const, 0x9e, 4), (ram, 0x4eadc0, 8) MULTIEQUAL (ram, 0x4eadc0, 8) , (ram, 0x4eadc0, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x9e, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eaea0, 8) INDIRECT (ram, 0x4eaea0, 8) , (const, 0x9e, 4), (ram, 0x4eaea0, 8) MULTIEQUAL (ram, 0x4eaea0, 8) , (ram, 0x4eaea0, 8)]
[(ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0x9e, 4), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0x9e, 4), (ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[ ---  CBRANCH (ram, 0x1913c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000e9, 8), (unique, 0x100000e9, 8) CAST (unique, 0x100000b9, 8)]
[ ---  CBRANCH (ram, 0x1913c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8), (register, 0xa0, 8) INT_SUB (register, 0x0, 8) , (register, 0x0, 8)]
[(ram, 0x4eadc0, 8) COPY (ram, 0x4eadc0, 8), (ram, 0x4eadc0, 8) MULTIEQUAL (ram, 0x4eadc0, 8) , (ram, 0x4eadc0, 8) , (ram, 0x4eadc0, 8) , (ram, 0x4eadc0, 8) , (ram, 0x4eadc0, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eaea0, 8) COPY (ram, 0x4eaea0, 8), (ram, 0x4eaea0, 8) MULTIEQUAL (ram, 0x4eaea0, 8) , (ram, 0x4eaea0, 8) , (ram, 0x4eaea0, 8) , (ram, 0x4eaea0, 8) , (ram, 0x4eaea0, 8)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) MULTIEQUAL (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8) , (ram, 0x4ebca0, 8)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) MULTIEQUAL (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8) , (ram, 0x4ec4c8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x18, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f1, 8), (unique, 0x100000f1, 8) INT_ADD (ram, 0x4ebca0, 8) , (const, 0x8, 8), (register, 0x18, 8) INT_OR (register, 0x18, 8) , (const, 0x1, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (register, 0xa0, 8)]
[(ram, 0x4eadc0, 8) COPY (ram, 0x4eadc0, 8), (ram, 0x4eadc0, 8) INDIRECT (ram, 0x4eadc0, 8) , (const, 0xd1, 4)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd1, 4)]
[(ram, 0x4eaea0, 8) COPY (ram, 0x4eaea0, 8), (ram, 0x4eaea0, 8) INDIRECT (ram, 0x4eaea0, 8) , (const, 0xd1, 4)]
[(ram, 0x4ebca0, 8) COPY (ram, 0x4ebca0, 8), (ram, 0x4ebca0, 8) INDIRECT (ram, 0x4ebca0, 8) , (const, 0xd1, 4)]
[(ram, 0x4ec4c8, 8) COPY (ram, 0x4ec4c8, 8), (ram, 0x4ec4c8, 8) INDIRECT (ram, 0x4ec4c8, 8) , (const, 0xd1, 4), (ram, 0x4ec4c8, 8) INT_SUB (ram, 0x4ec4c8, 8) , (register, 0xa0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
