[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1df5ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000016a, 8), (unique, 0x1000016a, 8) INT_ADD (register, 0x30, 8) , (const, 0x350, 8)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x1df4d7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x62, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x62, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x62, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x62, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x10000107, 8), (unique, 0x10000107, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000172, 8), (unique, 0x10000172, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0880, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0880, 8) , (const, 0x11, 4)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1df60a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000182, 8), (unique, 0x10000182, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b6, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1c3, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1b6, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1c3, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1b6, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1c3, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1b6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x1000018a, 8), (unique, 0x1000018a, 8) INT_ADD (register, 0x30, 8) , (const, 0x28, 8), (register, 0x0, 8) CALL (ram, 0x1211e0, 8) , (const, 0x30, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1df5bc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x1211e0, 8) , (const, 0x30, 8) , (const, 0x1, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1c8, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1c8, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1c8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) PTRSUB (const, 0x0, 8) , (const, 0x1df640, 8), (unique, 0x3100, 8) CAST (unique, 0x10000192, 8), (unique, 0x10000192, 8) INT_ADD (register, 0x30, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1df4e4, 1)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1df58f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) INT_ADD (unique, 0x1000019a, 8) , (const, 0x28, 8), (unique, 0x1000019a, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x165, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x165, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x165, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x1, 4), (unique, 0x3800, 8) CAST (unique, 0x100001ba, 8), (unique, 0x100001ba, 8) INT_ADD (unique, 0x100001b2, 8) , (const, 0x28, 8), (unique, 0x100001b2, 8) CAST (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1df4f1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100001aa, 8), (unique, 0x100001aa, 8) INT_ADD (register, 0x30, 8) , (const, 0x1b8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x173, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x17f, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x173, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x17f, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x173, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x17f, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x173, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x0, 8), (unique, 0x3800, 8) CAST (unique, 0x100001d2, 8), (unique, 0x100001d2, 8) INT_ADD (unique, 0x100001ca, 8) , (const, 0x18, 8), (unique, 0x100001ca, 8) CAST (register, 0xa0, 8), (register, 0x0, 8) CAST (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) CALL (ram, 0x1212c0, 8) , (const, 0x320, 8)]
[ ---  CBRANCH (ram, 0x1df5d6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001c2, 8), (unique, 0x100001c2, 8) CALL (ram, 0x1212c0, 8) , (const, 0x320, 8)]
[(unique, 0x3200, 8) PTRADD (register, 0x0, 8) , (const, 0x64, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x28, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3a00, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x193, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x193, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x186, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x193, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x186, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x193, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x186, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000011f, 8) , (const, 0x1, 8), (unique, 0x1000011f, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x1df5e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3200, 8) , (register, 0x28, 8), (register, 0x28, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100001e2, 8), (unique, 0x100001e2, 8) INT_ADD (unique, 0x100001da, 8) , (const, 0x18, 8), (unique, 0x100001da, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) INT_ADD (unique, 0x100001ea, 8) , (const, 0x18, 8), (unique, 0x100001ea, 8) CAST (register, 0xa0, 8)]
[(unique, 0x10000135, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x1000013d, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(unique, 0x10000145, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(unique, 0x1000014d, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  CBRANCH (ram, 0x1df4ff, 1) , (unique, 0x10000134, 1), (unique, 0x10000134, 1) INT_EQUAL (unique, 0x1000012c, 8) , (const, 0x0, 8), (unique, 0x1000012c, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4f0888, 8) MULTIEQUAL (unique, 0x10000145, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (unique, 0x1000013d, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000135, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0xffffffff, 8)]
[ ---  CBRANCH (ram, 0x1df552, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (unique, 0x1000014d, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0xffffffff, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xa7, 4), (register, 0x110, 8) MULTIEQUAL (unique, 0x10000135, 8) , (register, 0x110, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xa7, 4), (ram, 0x4f0880, 8) MULTIEQUAL (unique, 0x1000013d, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xa7, 4), (ram, 0x4f0888, 8) MULTIEQUAL (unique, 0x10000145, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xa7, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (unique, 0x1000014d, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x10000152, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1df53e, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x28, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) CAST (unique, 0x100001fa, 8), (unique, 0x100001fa, 8) INT_ADD (unique, 0x1000012c, 8) , (unique, 0x3a80, 8), (unique, 0x3a80, 8) INT_MULT (register, 0x18, 8) , (const, 0x8, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xba, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0xba, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0xba, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0xba, 4)]
[(unique, 0x1000015a, 8) COPY (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1df53a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121210, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0x0, 8)]
[(register, 0xa0, 8) INT_AND (register, 0x18, 8) , (const, 0xffffffff, 8)]
[(unique, 0x10000162, 8) COPY (register, 0x0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000152, 8) , (unique, 0x1000015a, 8) , (unique, 0x10000162, 8)]
[ ---  CBRANCH (ram, 0x1df510, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x64, 8), (register, 0x18, 8) INT_ADD (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1df56f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x10e, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x10e, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x10e, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x1000020a, 8), (unique, 0x1000020a, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000202, 8), (unique, 0x10000202, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0888, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0888, 8) , (const, 0x11, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1df57d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0xffffffff, 4), (register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x122, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x122, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x122, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x28, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
