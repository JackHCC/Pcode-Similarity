[(unique, 0x10000158, 8) COPY (ram, 0x4eae68, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000160, 8), (unique, 0x10000160, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x242520, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffffffffffff, 8) , (register, 0x30, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000168, 8), (unique, 0x10000168, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xbd, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xbd, 4)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0xbd, 4), (stack, 0xfffffffffffffe84, 4) COPY (const, 0x80, 4)]
[(stack, 0xfffffffffffffe88, 2) INDIRECT (stack, 0xfffffffffffffe88, 2) , (const, 0xbd, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xbd, 4)]
[ ---  CBRANCH (ram, 0x242613, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222970, 8) , (register, 0x38, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe84, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16a, 4)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x16a, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x16a, 4)]
[ ---  CALL (ram, 0x164f50, 8) , (unique, 0x3c80, 8) , (const, 0xc8, 8) , (unique, 0x100000f8, 8) , (register, 0x8, 8) , (register, 0x80, 8), (unique, 0x100000f8, 8) COPY (const, 0x2ba700, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[ ---  BRANCH (ram, 0x2425bf, 1)]
[ ---  CBRANCH (ram, 0x242599, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 4) , (const, 0x10, 4), (register, 0xa8, 4) INT_ZEXT (stack, 0xfffffffffffffe88, 2)]
[ ---  CBRANCH (ram, 0x242599, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x6b, 4), (register, 0x0, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xfffffffb, 4)]
[ ---  CBRANCH (ram, 0x242599, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x242599, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x58, 4)]
[ ---  CBRANCH (ram, 0x242580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xb, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x128, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x128, 4)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x128, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x128, 4)]
[ ---  CBRANCH (ram, 0x242599, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000170, 4) , (const, 0x0, 4), (unique, 0x10000170, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2105a0, 8) , (register, 0x38, 4) , (const, 0x3, 4) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x242570, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000b5, 4) , (const, 0x0, 4), (unique, 0x100000b5, 4) INT_AND (register, 0x0, 4) , (const, 0x800, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x154, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x154, 4), (stack, 0xfffffffffffffe84, 4) MULTIEQUAL (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x154, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x164f50, 8) , (unique, 0x3c80, 8) , (const, 0xc8, 8) , (unique, 0x10000100, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x10000100, 8) COPY (const, 0x2ba730, 8), (register, 0x8, 8) INT_ZEXT (unique, 0xbc80, 4), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4), (register, 0x88, 8) INT_ZEXT (register, 0xa8, 4), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffe84, 4) MULTIEQUAL (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x10d, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000174, 8) , (unique, 0xbc80, 4), (unique, 0x10000174, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x10000158, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCH (ram, 0x2424f4, 1)]
[ ---  CBRANCH (ram, 0x2425cc, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x30, 8) , (const, 0x10, 8)]
[(unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x72, 4)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x72, 4), (stack, 0xfffffffffffffe84, 4) COPY (const, 0x80, 4)]
[(stack, 0xfffffffffffffe88, 2) INDIRECT (stack, 0xfffffffffffffe88, 2) , (const, 0x72, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x72, 4)]
[ ---  CBRANCH (ram, 0x242638, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x222970, 8) , (register, 0x38, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe84, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffe88, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xad, 4)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0xad, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0xad, 4)]
[ ---  CALL (ram, 0x164f50, 8) , (unique, 0x3c80, 8) , (const, 0xc8, 8) , (unique, 0x10000108, 8) , (register, 0x30, 8) , (register, 0x80, 8), (unique, 0x10000108, 8) COPY (const, 0x2ba778, 8), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x2425bf, 1)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x93, 4)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x93, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x93, 4)]
[ ---  CALL (ram, 0x164f50, 8) , (unique, 0x3c80, 8) , (const, 0xc8, 8) , (unique, 0x10000110, 8) , (register, 0x30, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x10000110, 8) COPY (const, 0x2ba7b8, 8), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4), (register, 0x88, 8) INT_ZEXT (stack, 0xfffffffffffffe88, 2)]
[ ---  BRANCH (ram, 0x2425bf, 1)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x98, 4), (stack, 0xfffffffffffffe84, 4) MULTIEQUAL (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x98, 4), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[ ---  CALL (ram, 0x189910, 8) , (register, 0xa0, 8), (register, 0xa0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x98, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xfffffffffffffe84, 4) MULTIEQUAL (stack, 0xfffffffffffffe84, 4) , (stack, 0xfffffffffffffe84, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x2425c7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffd0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffd0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xfffffffffffffe84, 4) INDIRECT (stack, 0xfffffffffffffe84, 4) , (const, 0x64, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x64, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x64, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8)]
