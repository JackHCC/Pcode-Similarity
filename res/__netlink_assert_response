[(unique, 0x1000013f, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  CBRANCH (ram, 0x224788, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (unique, 0x10000167, 8) , (const, 0x0, 8), (unique, 0x10000167, 8) CAST (register, 0x30, 8)]
[(register, 0xa0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12d, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x12d, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x12d, 4), (stack, 0xffffffffffffff04, 4) COPY (const, 0x80, 4)]
[(stack, 0xffffffffffffff08, 2) INDIRECT (stack, 0xffffffffffffff08, 2) , (const, 0x12d, 4)]
[ ---  CBRANCH (ram, 0x224820, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2078f0, 8) , (register, 0x38, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff04, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(register, 0xb0, 8) INT_ZEXT (stack, 0xffffffffffffff08, 2)]
[ ---  CBRANCH (ram, 0x2247e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff08, 2) , (const, 0x10, 2)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x159, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x159, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x159, 4)]
[ ---  CALL (ram, 0x155860, 8) , (unique, 0x10000177, 8) , (const, 0xc8, 8) , (unique, 0x10000107, 8) , (register, 0xa0, 8) , (register, 0x80, 8), (unique, 0x10000177, 8) CAST (unique, 0x3800, 8), (unique, 0x10000107, 8) COPY (const, 0x292658, 8), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x2247dd, 1)]
[ ---  CBRANCH (ram, 0x224860, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0xf, 8) , (unique, 0x1000017f, 8), (unique, 0x1000017f, 8) CAST (register, 0x30, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x51, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x51, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x51, 4), (stack, 0xffffffffffffff04, 4) COPY (const, 0x80, 4)]
[(stack, 0xffffffffffffff08, 2) INDIRECT (stack, 0xffffffffffffff08, 2) , (const, 0x51, 4)]
[(unique, 0x1000015f, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x2248a5, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2078f0, 8) , (register, 0x38, 4) , (unique, 0x3800, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff04, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x11c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x11c, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x11c, 4)]
[ ---  CALL (ram, 0x155860, 8) , (unique, 0x10000187, 8) , (const, 0xc8, 8) , (unique, 0x1000010f, 8) , (register, 0x30, 8) , (register, 0x80, 8), (unique, 0x10000187, 8) CAST (unique, 0x3800, 8), (unique, 0x1000010f, 8) COPY (const, 0x292688, 8), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4)]
[ ---  BRANCH (ram, 0x2247dd, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x72, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x72, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x72, 4)]
[ ---  CALL (ram, 0x155860, 8) , (unique, 0x1000018f, 8) , (const, 0xc8, 8) , (unique, 0x100000ff, 8) , (register, 0x30, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x1000018f, 8) CAST (unique, 0x3800, 8), (unique, 0x100000ff, 8) COPY (const, 0x292608, 8), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4), (register, 0x88, 8) INT_ZEXT (stack, 0xffffffffffffff08, 2)]
[ ---  BRANCH (ram, 0x2247dd, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x1000015f, 8) , (unique, 0x1000014f, 8) , (unique, 0x1000015f, 8) , (unique, 0x1000013f, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x77, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x77, 4), (stack, 0xffffffffffffff04, 4) MULTIEQUAL (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4)]
[ ---  CALL (ram, 0x177730, 8)]
[(stack, 0xffffffffffffff04, 4) MULTIEQUAL (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x1000013f, 8)]
[ ---  CBRANCH (ram, 0x2247be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x6b, 4), (register, 0x0, 4) INT_AND (register, 0xa0, 4) , (const, 0xfffffffb, 4), (register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x2247be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x9, 4)]
[ ---  CBRANCH (ram, 0x2247be, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0x58, 4)]
[ ---  CBRANCH (ram, 0x22483e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 4) , (const, 0xb, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xde, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xde, 4)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0xde, 4)]
[ ---  CBRANCH (ram, 0x2247be, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000197, 4), (unique, 0x10000197, 4) CAST (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6df0, 8) , (register, 0x38, 4) , (const, 0x3, 4) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x224805, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000cc, 4) , (const, 0x0, 4), (unique, 0x100000cc, 4) INT_AND (register, 0x0, 4) , (const, 0x800, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000019b, 8) , (register, 0xa0, 4), (unique, 0x1000019b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (register, 0x28, 8) , (register, 0x110, 8) , (const, 0x1, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xae, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x109, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x109, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff04, 4) INDIRECT (stack, 0xffffffffffffff04, 4) , (const, 0x109, 4), (stack, 0xffffffffffffff04, 4) MULTIEQUAL (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4) , (stack, 0xffffffffffffff04, 4)]
[ ---  CALL (ram, 0x155860, 8) , (unique, 0x100001a3, 8) , (const, 0xc8, 8) , (unique, 0x100000f7, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x88, 8), (unique, 0x100001a3, 8) CAST (register, 0xa8, 8), (unique, 0x100000f7, 8) COPY (const, 0x2925c0, 8), (register, 0x8, 8) INT_AND (register, 0xa0, 8) , (const, 0xffffffff, 8), (register, 0x80, 8) INT_ZEXT (register, 0x38, 4), (register, 0x88, 8) INT_AND (register, 0xb0, 8) , (const, 0xffffffff, 8), (register, 0xa8, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff08, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x1000014f, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (unique, 0x1000013f, 8) , (register, 0x28, 8)]
