[ ---  CBRANCH (ram, 0x143375, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0628, 4) , (const, 0x0, 4)]
[(ram, 0x4f0628, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x143390, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x12c, 4)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x12c, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x12c, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100000cf, 8), (unique, 0x100000cf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0628, 8)]
[(unique, 0x100000fc, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x12c, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x4a, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x4a, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CBRANCH (ram, 0x1433f4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x1000011c, 8), (unique, 0x1000011c, 8) CALL (ram, 0x143220, 8) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x8, 8) , (unique, 0x100000fc, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x143404, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000114, 4) COPY (unique, 0x100000ef, 4), (unique, 0x100000ef, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x14341e, 1) , (unique, 0x100000f3, 1), (unique, 0x100000f3, 1) INT_NOTEQUAL (unique, 0x100000ef, 4) , (const, 0x0, 4), (unique, 0x100000ef, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x107, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000c7, 8), (unique, 0x100000c7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0628, 8)]
[(unique, 0x10000110, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x107, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) COPY (unique, 0x10000118, 4), (unique, 0x10000118, 4) MULTIEQUAL (unique, 0x10000110, 4) , (unique, 0x10000114, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1433e9, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x28, 8) INT_OR (unique, 0x4d100, 8) , (unique, 0x4d200, 8), (unique, 0x4d200, 8) INT_RIGHT (register, 0x28, 8) , (const, 0x2f, 4), (unique, 0x4d100, 8) INT_LEFT (register, 0x28, 8) , (const, 0x11, 4), (register, 0x28, 8) INT_XOR (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000124, 8), (unique, 0x10000124, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x7d, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x7b, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x78, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0x75, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x1433cd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7d, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x7b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x78, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x75, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000108, 4) COPY (unique, 0x100000f4, 4), (unique, 0x100000f4, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1433e7, 1) , (unique, 0x100000f8, 1), (unique, 0x100000f8, 1) INT_NOTEQUAL (unique, 0x100000f4, 4) , (const, 0x0, 4), (unique, 0x100000f4, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xc4, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100000bf, 8), (unique, 0x100000bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4f0628, 8)]
[(unique, 0x10000104, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) INDIRECT (ram, 0x4f0628, 4) , (const, 0xc4, 4), (ram, 0x4f0628, 4) INT_ADD (ram, 0x4f0628, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0628, 4) COPY (unique, 0x1000010c, 4), (unique, 0x1000010c, 4) MULTIEQUAL (unique, 0x10000104, 4) , (unique, 0x10000108, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4f0628, 4) COPY (ram, 0x4f0628, 4), (ram, 0x4f0628, 4) MULTIEQUAL (ram, 0x4f0628, 4) , (ram, 0x4f0628, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
