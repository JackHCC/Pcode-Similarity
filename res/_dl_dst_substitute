[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100000bc, 1) COPY (const, 0x0, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(unique, 0x100000fb, 8) COPY (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x47f378, 1)]
[(ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x100000fb, 8) , (register, 0x0, 8) , (register, 0xb8, 8)]
[(unique, 0x100000bb, 1) MULTIEQUAL (unique, 0x100000bc, 1) , (unique, 0x100000bd, 1) , (unique, 0x100000bb, 1)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x47f368, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x24, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x4b, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x4b, 4)]
[ ---  CBRANCH (ram, 0x47f400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x47c680, 8) , (register, 0xa8, 8) , (unique, 0x100000c1, 8), (unique, 0x100000c1, 8) COPY (const, 0x4af611, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x122, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x122, 4)]
[ ---  CBRANCH (ram, 0x47f440, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x47c680, 8) , (register, 0xa8, 8) , (unique, 0x100000c9, 8), (unique, 0x100000c9, 8) COPY (const, 0x4af618, 8)]
[(unique, 0x3100, 8) PTRADD (ram, 0x4c87e8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[(unique, 0x100000f3, 8) COPY (ram, 0x4c87e8, 8)]
[ ---  BRANCH (ram, 0x47f3b2, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x133, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x133, 4)]
[ ---  CBRANCH (ram, 0x47f450, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x47c680, 8) , (register, 0xa8, 8) , (unique, 0x100000d1, 8), (unique, 0x100000d1, 8) PTRSUB (const, 0x0, 8) , (const, 0x4af621, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x143, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x143, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (const, 0x24, 1)]
[ ---  BRANCH (ram, 0x47f36f, 1)]
[(register, 0x0, 8) COPY (const, 0x4af624, 8)]
[(unique, 0x100000eb, 8) COPY (register, 0x30, 8), (register, 0x30, 8) COPY (const, 0x4af625, 8)]
[ ---  BRANCH (ram, 0x47f3b2, 1)]
[ ---  CBRANCH (ram, 0x47f47d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c4aa0, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x47f473, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x47f492, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0xa8, 8) , (register, 0x0, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47f473, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1)]
[(register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x3, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000010b, 8), (unique, 0x1000010b, 8) INT_ADD (register, 0x38, 8) , (const, 0x31c, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000103, 8), (unique, 0x10000103, 8) INT_ADD (register, 0x38, 8) , (const, 0x348, 8)]
[(unique, 0x100000e3, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000103, 8), (unique, 0x10000103, 8) INT_ADD (register, 0x38, 8) , (const, 0x348, 8)]
[ ---  BRANCH (ram, 0x47f3b2, 1)]
[(unique, 0x100000be, 1) COPY (const, 0x0, 1)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000113, 8), (unique, 0x10000113, 8) INT_ADD (register, 0x38, 8) , (const, 0x348, 8)]
[(unique, 0x100000db, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000113, 8), (unique, 0x10000113, 8) INT_ADD (register, 0x38, 8) , (const, 0x348, 8)]
[(ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x100000db, 8) , (unique, 0x100000e3, 8) , (unique, 0x100000eb, 8) , (unique, 0x100000f3, 8)]
[(unique, 0x100000bd, 1) MULTIEQUAL (unique, 0x100000be, 1) , (register, 0x206, 1) , (unique, 0x100000bb, 1) , (unique, 0x100000bb, 1)]
[(register, 0x8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f473, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0xfffffffffffffffd, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (register, 0x0, 8) , (unique, 0x3100, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x84, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x84, 4)]
[(register, 0x0, 8) CAST (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) CALL (ram, 0x401090, 8) , (register, 0xb8, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x47f378, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (register, 0x8, 8) , (const, 0x1, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0x160, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0x160, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (register, 0x0, 1)]
[(ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x47f3e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[(ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x47f45d, 1) , (unique, 0x100000ba, 1), (unique, 0x100000ba, 1) MULTIEQUAL (unique, 0x100000bb, 1) , (unique, 0x100000bd, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xd4, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xd4, 4)]
[ ---  CBRANCH (ram, 0x47f3e5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x47c720, 8) , (register, 0x10, 8) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0xb8, 8) , (unique, 0x1000009e, 8) , (const, 0x1, 8), (unique, 0x1000009e, 8) INT_2COMP (unique, 0x10000123, 8), (unique, 0x10000123, 8) CAST (register, 0x10, 8)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xe1, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xe1, 4), (ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (const, 0x0, 1)]
[ ---  BRANCH (ram, 0x47f3e9, 1)]
[(ram, 0x4c4aa0, 4) INDIRECT (ram, 0x4c4aa0, 4) , (const, 0xad, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c87e8, 8) INDIRECT (ram, 0x4c87e8, 8) , (const, 0xad, 4), (ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (const, 0x0, 1)]
[(ram, 0x4c4aa0, 4) COPY (ram, 0x4c4aa0, 4), (ram, 0x4c4aa0, 4) MULTIEQUAL (ram, 0x4c4aa0, 4) , (ram, 0x4c4aa0, 4)]
[(ram, 0x4c87e8, 8) COPY (ram, 0x4c87e8, 8), (ram, 0x4c87e8, 8) MULTIEQUAL (ram, 0x4c87e8, 8) , (ram, 0x4c87e8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x10, 8)]
