[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000cd, 8), (unique, 0x100000cd, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x264ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0470, 4) , (const, 0x0, 4)]
[(register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd9, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xd9, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xd9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000d5, 8) , (const, 0x2, 4), (unique, 0x100000d5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x264e04, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x31, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x31, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x31, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x31, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x31, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x31, 4)]
[ ---  CBRANCH (ram, 0x264e90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x20fc40, 8) , (unique, 0x100000a5, 8) , (register, 0x38, 4), (unique, 0x100000a5, 8) COPY (const, 0x2b7467, 8)]
[ ---  CBRANCH (ram, 0x264ea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000dd, 8), (unique, 0x100000dd, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x264e04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x13, 4)]
[(ram, 0x4f0470, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x264e04, 1)]
[ ---  CBRANCH (ram, 0x264e28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f046c, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x77, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x77, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x77, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x77, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x77, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x77, 4)]
[ ---  CBRANCH (ram, 0x264e48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (unique, 0x1000009d, 8) , (register, 0x20, 8), (unique, 0x1000009d, 8) COPY (const, 0x2b5800, 8)]
[ ---  CBRANCH (ram, 0x264dfa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 8) , (const, 0x1cd1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x94, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x94, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x94, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x94, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x94, 4)]
[ ---  CBRANCH (ram, 0x264e65, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x20f970, 8) , (unique, 0x100000ad, 8) , (register, 0x20, 8), (unique, 0x100000ad, 8) COPY (const, 0x2b7471, 8)]
[ ---  CBRANCH (ram, 0x264dfa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff68, 8) , (const, 0x1373, 8)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xb2, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xb2, 4)]
[ ---  CALL (ram, 0x2108c0, 8) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb7, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb2, 4)]
[(ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xb7, 4), (ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0xb2, 4)]
[(ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0xb7, 4), (ram, 0x4f0470, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000e5, 8) , (const, 0x2, 4), (unique, 0x100000e5, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xb2, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb2, 4)]
[(unique, 0x100000c9, 4) COPY (register, 0x18, 4), (register, 0x18, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x264e04, 1)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f046c, 4) COPY (const, 0x1, 4)]
[(unique, 0x100000c5, 4) COPY (register, 0x0, 4)]
[(ram, 0x4f0470, 4) MULTIEQUAL (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4) , (ram, 0x4f0470, 4)]
[(ram, 0x4f046c, 4) MULTIEQUAL (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4) , (ram, 0x4f046c, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x18, 4) MULTIEQUAL (unique, 0x100000c5, 4) , (unique, 0x100000c9, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x18, 4)]
[ ---  CBRANCH (ram, 0x264ed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000ed, 8), (unique, 0x100000ed, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x6f, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6f, 4)]
[(ram, 0x4f046c, 4) COPY (ram, 0x4f046c, 4), (ram, 0x4f046c, 4) INDIRECT (ram, 0x4f046c, 4) , (const, 0x6f, 4)]
[(ram, 0x4f0470, 4) COPY (ram, 0x4f0470, 4), (ram, 0x4f0470, 4) INDIRECT (ram, 0x4f0470, 4) , (const, 0x6f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[(ram, 0x4f046c, 4) COPY (ram, 0x4f046c, 4)]
[(ram, 0x4f0470, 4) COPY (ram, 0x4f0470, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x18, 4)]
