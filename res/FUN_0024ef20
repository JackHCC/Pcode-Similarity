[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000148, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x210210, 8) , (unique, 0xbc80, 4) , (const, 0x0, 8) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a0, 8), (unique, 0x100001a0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x4, 8)]
[(unique, 0x10000055, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x24efa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(register, 0x30, 4) INT_SUB (register, 0x10, 4) , (register, 0x30, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000055, 4) , (unique, 0x100000af, 4), (unique, 0x100000af, 4) INT_SUB (unique, 0x100000b3, 4) , (unique, 0x100000bb, 4), (unique, 0x100000b3, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x100000bb, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(unique, 0x10000180, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) INT_ADD (unique, 0x10000055, 4) , (unique, 0x100000af, 4), (unique, 0x100000af, 4) INT_SUB (unique, 0x100000b3, 4) , (unique, 0x100000bb, 4), (unique, 0x100000b3, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x100000bb, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b0, 8), (unique, 0x100001b0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a8, 8), (unique, 0x100001a8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(unique, 0x10000188, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001b8, 8), (unique, 0x100001b8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xc, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000190, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (unique, 0x100000e5, 1), (unique, 0x100000e5, 1) BOOL_AND (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c8, 8), (unique, 0x100001c8, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001c0, 8), (unique, 0x100001c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d0, 8) , (register, 0x8, 8), (unique, 0x100001d0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x24ef97, 1)]
[(unique, 0x10000150, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4)]
[(register, 0x30, 4) INT_SUB (register, 0x10, 4) , (register, 0x30, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000055, 4) , (unique, 0x1000005d, 4), (unique, 0x1000005d, 4) INT_SUB (unique, 0x10000065, 4) , (unique, 0x1000006d, 4), (unique, 0x10000065, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x1000006d, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x16, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x10000158, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) INT_SUB (unique, 0x10000055, 4) , (unique, 0x1000005d, 4), (unique, 0x1000005d, 4) INT_SUB (unique, 0x10000065, 4) , (unique, 0x1000006d, 4), (unique, 0x10000065, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x1000006d, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e0, 8), (unique, 0x100001e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x16, 8) , (const, 0x4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d8, 8), (unique, 0x100001d8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x18, 8) , (const, 0x4, 8)]
[(unique, 0x10000160, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (register, 0x30, 4) , (register, 0x10, 4), (register, 0x10, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e8, 8), (unique, 0x100001e8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1a, 8) , (const, 0x4, 8)]
[(unique, 0x10000168, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x8, 8) , (unique, 0xbd80, 8), (register, 0x8, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SEXT (register, 0x30, 4)]
[(unique, 0x10000170, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x24ef97, 1) , (unique, 0x100000e0, 1), (unique, 0x100000e0, 1) BOOL_OR (register, 0x200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f8, 8), (unique, 0x100001f8, 8) CAST (unique, 0x3100, 8), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001f0, 8), (unique, 0x100001f0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x14, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000200, 8) , (register, 0x8, 8), (unique, 0x10000200, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x16, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000208, 8) , (register, 0x10, 8), (unique, 0x10000208, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1a, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x30, 8)]
[(unique, 0x10000178, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000148, 8) , (unique, 0x10000150, 8) , (unique, 0x10000158, 8) , (unique, 0x10000160, 8) , (unique, 0x10000168, 8) , (unique, 0x10000170, 8) , (unique, 0x10000178, 8) , (unique, 0x10000180, 8) , (unique, 0x10000188, 8) , (unique, 0x10000190, 8) , (register, 0x0, 8)]
