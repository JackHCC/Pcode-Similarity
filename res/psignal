[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000107, 8), (unique, 0x10000107, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x17b3f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x2b3ed0, 8)]
[ ---  CBRANCH (ram, 0x17b3f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0xa0, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x18, 8) COPY (const, 0x2b3c79, 8)]
[ ---  BRANCH (ram, 0x17b382, 1)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x17b39f, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x40, 4) , (unique, 0x1000010f, 4), (unique, 0x1000010f, 4) CAST (register, 0x38, 4)]
[ ---  CBRANCH (ram, 0x17b40c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000113, 8), (unique, 0x10000113, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100000f7, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100000f7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e99a0, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0x38, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x73, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x60, 4)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x73, 4), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x60, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x73, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x60, 4)]
[ ---  CBRANCH (ram, 0x17b400, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1650c0, 8) , (register, 0x20, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0xa0, 8) , (register, 0x38, 4), (register, 0x0, 8) CAST (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100000bf, 8) , (unique, 0x100000cf, 8) , (const, 0x5, 8), (unique, 0x100000cf, 8) COPY (const, 0x2b3fa2, 8), (unique, 0x100000bf, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8)]
[(register, 0x30, 8) COPY (const, 0x2b3fb9, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xe5, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xca, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xca, 4), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100000ef, 8) , (register, 0x18, 8) , (register, 0xa0, 8) , (register, 0x0, 8), (unique, 0x100000ef, 8) COPY (const, 0x2b7276, 8), (register, 0x0, 8) CALL (ram, 0x130d70, 8) , (unique, 0x100000b7, 8) , (register, 0x30, 8) , (const, 0x5, 8), (unique, 0x100000b7, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b3d14, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x17ddd0, 8) , (const, 0x0, 8) , (unique, 0x100000df, 8) , (stack, 0xffffffffffffffd8, 8), (unique, 0x100000df, 8) COPY (const, 0x2b6796, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x9c, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x97, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x9c, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x97, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (stack, 0xffffffffffffffd8, 8), (stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x97, 4)]
[ ---  BRANCH (ram, 0x17b431, 1)]
[ ---  CBRANCH (ram, 0x17b44a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000123, 8), (unique, 0x10000123, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0xc2, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8)]
