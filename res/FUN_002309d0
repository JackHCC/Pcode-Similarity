[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffe0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000290, 8), (unique, 0x10000290, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000200, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[ ---  CBRANCH (ram, 0x230a11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f0900, 8) , (const, 0x0, 8)]
[(unique, 0x10000268, 8) COPY (ram, 0x4f0900, 8)]
[ ---  CBRANCH (ram, 0x230a09, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4f0900, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0x10000210, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x230a00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000298, 8), (unique, 0x10000298, 8) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) COPY (unique, 0x10000278, 8), (unique, 0x10000278, 8) MULTIEQUAL (unique, 0x10000268, 8) , (unique, 0x10000270, 8)]
[(unique, 0x10000270, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x230a30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x10000268, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x230a4c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ee940, 4) , (const, 0x0, 4)]
[(ram, 0x4ee940, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ee940, 4) , (const, 0x0, 4)]
[(ram, 0x4ee940, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x230a6f, 1)]
[(register, 0x88, 8) INDIRECT (register, 0x88, 8) , (const, 0x220, 4)]
[(register, 0x90, 8) INDIRECT (register, 0x38, 8) , (const, 0x220, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x220, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x220, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x220, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x220, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x220, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x220, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x1000011f, 8), (unique, 0x1000011f, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee940, 8)]
[(unique, 0x100001f0, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INDIRECT (const, 0x0, 8) , (const, 0x220, 4)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x90, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x90, 8) , (register, 0x38, 8)]
[(unique, 0x100001d8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0x100001f0, 8) , (register, 0x10, 8)]
[(unique, 0x10000218, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(unique, 0x10000238, 8) COPY (register, 0x80, 8), (register, 0x80, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000250, 8) COPY (register, 0x88, 8), (register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x230a8b, 1)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x10000250, 8) , (unique, 0x10000258, 8) , (unique, 0x10000260, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000238, 8) , (unique, 0x10000240, 8) , (register, 0x80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000218, 8) , (unique, 0x10000220, 8) , (register, 0x20, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100002a0, 8), (unique, 0x100002a0, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001d8, 8) , (unique, 0x100001e0, 8) , (unique, 0x100001e8, 8)]
[(unique, 0x100001b8, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001d8, 8) , (unique, 0x100001e0, 8) , (unique, 0x100001e8, 8)]
[ ---  CBRANCH (ram, 0x230a80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x90, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001d8, 8) , (unique, 0x100001e0, 8) , (unique, 0x100001e8, 8)]
[(unique, 0x100001c8, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x230b8e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0x100001c8, 8) , (unique, 0x100001d0, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x230b9d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100002a8, 8), (unique, 0x100002a8, 8) INT_ADD (register, 0x110, 8) , (const, 0x18, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (ram, 0x230aa0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) INT_XOR (unique, 0x100002e0, 8) , (unique, 0x2a200, 8), (unique, 0x100002e0, 8) CAST (register, 0x10, 8), (unique, 0x2a200, 8) INT_MULT (unique, 0x2a180, 8) , (unique, 0x29e80, 8), (unique, 0x2a180, 8) INT_ZEXT (unique, 0x2a100, 1), (unique, 0x2a100, 1) BOOL_NEGATE (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100002d0, 8) , (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) CAST (ram, 0x4f0900, 8), (unique, 0x100002d0, 8) CAST (register, 0x10, 8), (ram, 0x4f0900, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) INT_XOR (unique, 0x100002c0, 8) , (unique, 0x29f80, 8), (unique, 0x100002c0, 8) CAST (ram, 0x4f0900, 8), (unique, 0x29f80, 8) INT_MULT (unique, 0x29f00, 8) , (unique, 0x29e80, 8), (unique, 0x29f00, 8) INT_ZEXT (register, 0x206, 1), (unique, 0x29e80, 8) INT_XOR (unique, 0x100002b0, 8) , (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) CAST (register, 0x8, 8), (unique, 0x100002b0, 8) CAST (ram, 0x4f0900, 8), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (ram, 0x4f0900, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4f0900, 8)]
[(unique, 0x100001c0, 8) COPY (ram, 0x4f0900, 8)]
[(unique, 0x100001d0, 8) COPY (ram, 0x4f0900, 8)]
[ ---  CBRANCH (ram, 0x230a80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x90, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4f0900, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(unique, 0x100001e8, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000230, 8) COPY (register, 0x20, 8)]
[(unique, 0x10000260, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100001b8, 8) , (unique, 0x100001c0, 8)]
[ ---  CBRANCH (ram, 0x230ace, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x97, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x97, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x88, 8) , (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) CAST (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffd0, 8) COPY (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x10000310, 8), (unique, 0x10000310, 8) CAST (register, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_AND (unique, 0x10000300, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000300, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x55f, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x55e, 4), (ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x55f, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x55e, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x55f, 4), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x55e, 4), (ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000100, 8) , (unique, 0x10000318, 8), (unique, 0x10000318, 8) CAST (register, 0x80, 8), (unique, 0x10000100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_AND (unique, 0x10000300, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000300, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x1, 8)]
[(unique, 0x100001e0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000220, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8) , (const, 0x1, 8)]
[(unique, 0x10000228, 8) COPY (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8) , (const, 0x1, 8)]
[(unique, 0x10000240, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) INT_AND (unique, 0x10000300, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000300, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffffef, 8) , (const, 0x1, 8)]
[(unique, 0x10000258, 8) COPY (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x230a8b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (ram, 0x4ee940, 4)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000240, 8) , (register, 0x80, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000228, 8) , (unique, 0x10000230, 8)]
[ ---  CBRANCH (ram, 0x230ae2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4), (ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x10000288, 4) COPY (unique, 0x10000187, 4), (unique, 0x10000187, 4) INT_ADD (ram, 0x4ee940, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x230b04, 1) , (unique, 0x1000018b, 1), (unique, 0x1000018b, 1) INT_NOTEQUAL (unique, 0x10000187, 4) , (const, 0x0, 4), (unique, 0x10000187, 4) INT_ADD (ram, 0x4ee940, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000328, 8) , (const, 0x230afd, 8), (unique, 0x10000328, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xffffffffffffff78, 8) , (const, 0x1, 8)]
[(register, 0x80, 8) INDIRECT (register, 0x80, 8) , (const, 0x1b6, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1b6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b6, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1b6, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1b6, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x10000127, 8), (unique, 0x10000127, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ee940, 8)]
[(unique, 0x10000284, 4) COPY (ram, 0x4ee940, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x1b6, 4), (ram, 0x4ee940, 4) INT_ADD (ram, 0x4ee940, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[(unique, 0x10000199, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x1000019d, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8) , (ram, 0x4f0900, 8)]
[(unique, 0x10000195, 4) COPY (unique, 0x1000028c, 4), (unique, 0x1000028c, 4) MULTIEQUAL (unique, 0x10000280, 4) , (unique, 0x10000284, 4) , (unique, 0x10000288, 4)]
[(unique, 0x10000208, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x230a11, 1) , (unique, 0x1000018c, 1), (unique, 0x1000018c, 1) INT_NOTEQUAL (unique, 0x1000018d, 8) , (const, 0x0, 8), (unique, 0x1000018d, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x1, 4), (unique, 0x3100, 8) CAST (unique, 0x10000338, 8), (unique, 0x10000338, 8) INT_ADD (unique, 0x10000330, 8) , (const, 0x2c, 8), (unique, 0x10000330, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0xfa, 4), (ram, 0x4ee940, 4) INDIRECT (unique, 0x10000195, 4) , (const, 0xf1, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0xfa, 4), (ram, 0x4f08f8, 4) INDIRECT (unique, 0x10000199, 4) , (const, 0xf1, 4)]
[(ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0xfa, 4), (ram, 0x4f0900, 8) INDIRECT (unique, 0x1000019d, 8) , (const, 0xf1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000348, 8) , (unique, 0xbd00, 4), (unique, 0x10000348, 8) CAST (unique, 0x3100, 8), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000340, 8), (unique, 0x10000340, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8)]
[ ---  BRANCH (ram, 0x230b3b, 1)]
[ ---  CBRANCH (ram, 0x230b80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000350, 8), (unique, 0x10000350, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018d, 8)]
[(unique, 0x10000280, 4) COPY (ram, 0x4ee940, 4)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000358, 8), (unique, 0x10000358, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000018d, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffd0, 8) MULTIEQUAL (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8) , (stack, 0xffffffffffffffd0, 8)]
[(ram, 0x4f0900, 8) MULTIEQUAL (ram, 0x4f0900, 8) , (unique, 0x1000019d, 8) , (ram, 0x4f0900, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (unique, 0x10000199, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ee940, 4) MULTIEQUAL (ram, 0x4ee940, 4) , (unique, 0x10000195, 4) , (ram, 0x4ee940, 4)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000200, 8) , (unique, 0x10000208, 8) , (unique, 0x10000210, 8)]
[ ---  CBRANCH (ram, 0x230bc4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffe0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000360, 8), (unique, 0x10000360, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffe0, 8) MULTIEQUAL (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8) , (stack, 0xffffffffffffffe0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000368, 8) , (unique, 0x10000117, 8), (unique, 0x10000368, 8) CAST (register, 0x20, 8), (unique, 0x10000117, 8) PTRSUB (const, 0x0, 8) , (const, 0x230bc9, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1a7, 4), (stack, 0xffffffffffffffd0, 8) INDIRECT (stack, 0xffffffffffffffd0, 8) , (const, 0x1a6, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1a7, 4), (stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x1a6, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ee940, 4) COPY (ram, 0x4ee940, 4), (ram, 0x4ee940, 4) INDIRECT (ram, 0x4ee940, 4) , (const, 0x1a7, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1a7, 4)]
[(ram, 0x4f0900, 8) COPY (ram, 0x4f0900, 8), (ram, 0x4f0900, 8) INDIRECT (ram, 0x4f0900, 8) , (const, 0x1a7, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4ee940, 4) COPY (ram, 0x4ee940, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[(ram, 0x4f0900, 8) COPY (ram, 0x4f0900, 8)]
[ ---  RETURN (const, 0x0, 8)]
