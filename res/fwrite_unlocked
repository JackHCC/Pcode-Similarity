[(unique, 0x100000b2, 8) COPY (register, 0x18, 8), (register, 0x18, 8) INT_MULT (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18a533, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_MULT (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18a548, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x8, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x18a4ea, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3200, 8) , (const, 0xffffffff, 4), (unique, 0x3200, 8) PTRSUB (register, 0x8, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x18a568, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0xd67, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x4e7760, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000d2, 8), (unique, 0x100000d2, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (register, 0x8, 8) , (const, 0x1, 8) , (const, 0xd8, 8)]
[ ---  CALL (ram, 0x18a150, 8)]
[ ---  BRANCH (ram, 0x18a516, 1)]
[(unique, 0x100000c2, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x18a560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x28700, 8) , (const, 0x0, 8), (unique, 0x28700, 8) INT_SUB (register, 0x18, 8) , (register, 0x0, 8), (register, 0x0, 8) CALLIND (unique, 0xbd80, 8) , (register, 0x8, 8) , (register, 0x38, 8) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000da, 8), (unique, 0x100000da, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x38, 8)]
[ ---  CBRANCH (ram, 0x18a560, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(unique, 0x100000ba, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_DIV (register, 0x0, 8) , (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0x100000b2, 8) , (unique, 0x100000ba, 8) , (unique, 0x100000c2, 8) , (unique, 0x100000c2, 8)]
