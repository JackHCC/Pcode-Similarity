[(register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x230cd0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x40, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x32, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x32, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x32, 4)]
[ ---  CBRANCH (ram, 0x230ea8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100005db, 8), (unique, 0x100005db, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x90, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x90, 8) INT_MULT (register, 0x18, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100005d3, 8), (unique, 0x100005d3, 8) INT_ADD (register, 0x0, 8) , (const, 0xd0, 8), (register, 0x0, 8) CALL (ram, 0x237a60, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x5e0, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x5e0, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x5e0, 4)]
[ ---  CBRANCH (ram, 0x230cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2373b0, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x100005e3, 8) , (register, 0x80, 8), (unique, 0x100005e3, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000054f, 8), (unique, 0x1000054f, 8) PTRSUB (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230ce8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x230cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x10, 4) COPY (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x230baf, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (unique, 0x100005eb, 4) , (const, 0x8000, 4), (unique, 0x100005eb, 4) CAST (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 2), (register, 0x10, 2) SUBPIECE (register, 0x10, 4) , (const, 0x0, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x230cb9, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x230e78, 1) , (unique, 0x1000008c, 1), (unique, 0x1000008c, 1) BOOL_AND (unique, 0xc780, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x80, 8), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3400, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x1000028f, 8) , (const, 0x4, 8), (unique, 0x1000028f, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000277, 8) , (const, 0x4, 8), (unique, 0x10000277, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (unique, 0x100005ef, 4), (unique, 0x100005ef, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x230e78, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0xd, 4)]
[(unique, 0x100005ab, 8) COPY (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x230e8b, 1)]
[(register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ab, 8) , (unique, 0x100005b3, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000052f, 8) , (const, 0x4, 8), (unique, 0x1000052f, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100005ab, 8) , (unique, 0x100005b3, 8)]
[ ---  CBRANCH (ram, 0x230e88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x8, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x100005b3, 8) COPY (register, 0x10, 8)]
[(unique, 0x100005bb, 4) COPY (unique, 0x10000097, 4), (unique, 0x10000097, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000181, 4) , (unique, 0x10000185, 4), (unique, 0x10000181, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x10000185, 4) INT_MULT (register, 0x10, 4) , (const, 0x4, 4)]
[ ---  CBRANCH (ram, 0x230c01, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (unique, 0x10000097, 4), (unique, 0x10000097, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000181, 4) , (unique, 0x10000185, 4), (unique, 0x10000181, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0x10000185, 4) INT_MULT (register, 0x10, 4) , (const, 0x4, 4)]
[(unique, 0x100005bf, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x230c36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100005bb, 4) , (unique, 0x100005bf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002a7, 8) , (const, 0x4, 8), (unique, 0x100002a7, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x230c36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002c7, 8) , (const, 0x4, 8), (unique, 0x100002c7, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x230c36, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002e7, 8) , (const, 0x4, 8), (unique, 0x100002e7, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ZEXT (register, 0x8, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0x1000023f, 8) , (unique, 0x100002ff, 8) , (const, 0x1, 8), (unique, 0x100002ff, 8) INT_ADD (unique, 0x3900, 8) , (register, 0x30, 8), (unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8), (unique, 0x1000023f, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (register, 0x38, 8) INT_NEGATE (register, 0x38, 8), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_ZEXT (register, 0x8, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x3680, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x3100, 4) , (const, 0x2, 4), (unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4), (register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100001a5, 4), (unique, 0x3400, 8) CAST (unique, 0x10000613, 8), (unique, 0x10000613, 8) INT_ADD (unique, 0x1000060b, 8) , (unique, 0x1000030f, 8), (unique, 0x1000060b, 8) CAST (register, 0x80, 8), (unique, 0x1000030f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000603, 8), (unique, 0x10000603, 8) CAST (unique, 0x3a00, 8), (unique, 0x100001a5, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100005fb, 8), (unique, 0x100005fb, 8) INT_ADD (unique, 0x100005f3, 8) , (unique, 0x10000307, 8), (unique, 0x100005f3, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000307, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001cd, 8) , (unique, 0x100001a9, 4), (unique, 0x100001cd, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000613, 8), (unique, 0x10000613, 8) INT_ADD (unique, 0x1000060b, 8) , (unique, 0x1000030f, 8), (unique, 0x1000060b, 8) CAST (register, 0x80, 8), (unique, 0x1000030f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000603, 8), (unique, 0x10000603, 8) CAST (unique, 0x3a00, 8), (unique, 0x100001a9, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100005fb, 8), (unique, 0x100005fb, 8) INT_ADD (unique, 0x100005f3, 8) , (unique, 0x10000307, 8), (unique, 0x100005f3, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000307, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001d5, 8) , (unique, 0x100001b5, 4), (unique, 0x100001d5, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000613, 8), (unique, 0x10000613, 8) INT_ADD (unique, 0x1000060b, 8) , (unique, 0x1000030f, 8), (unique, 0x1000060b, 8) CAST (register, 0x80, 8), (unique, 0x1000030f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000603, 8), (unique, 0x10000603, 8) CAST (unique, 0x3a00, 8), (unique, 0x100001b5, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001b9, 8), (unique, 0x100001b9, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100005fb, 8), (unique, 0x100005fb, 8) INT_ADD (unique, 0x100005f3, 8) , (unique, 0x10000307, 8), (unique, 0x100005f3, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000307, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001dd, 8) , (unique, 0x100001c1, 4), (unique, 0x100001dd, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x10000613, 8), (unique, 0x10000613, 8) INT_ADD (unique, 0x1000060b, 8) , (unique, 0x1000030f, 8), (unique, 0x1000060b, 8) CAST (register, 0x80, 8), (unique, 0x1000030f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x10000603, 8), (unique, 0x10000603, 8) CAST (unique, 0x3a00, 8), (unique, 0x100001c1, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001c5, 8), (unique, 0x100001c5, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100005fb, 8), (unique, 0x100005fb, 8) INT_ADD (unique, 0x100005f3, 8) , (unique, 0x10000307, 8), (unique, 0x100005f3, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000307, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x230c6b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (register, 0x8, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x100000bf, 4), (unique, 0x100000bf, 4) INT_MULT (register, 0x8, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x230cb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (unique, 0x3680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000034f, 8) , (const, 0x4, 8), (unique, 0x1000034f, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230cb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000036f, 8) , (const, 0x4, 8), (unique, 0x1000036f, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x230cb9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0xbc80, 4), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000038f, 8) , (const, 0x4, 8), (unique, 0x1000038f, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x308, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x308, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x308, 4)]
[ ---  CBRANCH (ram, 0x230d20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x2373b0, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x1000061b, 8) , (register, 0x80, 8), (unique, 0x1000061b, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003af, 8), (unique, 0x100003af, 8) PTRSUB (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xfffffffe, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230f40, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESSEQUAL (unique, 0x10000623, 4) , (unique, 0x10000627, 4), (unique, 0x10000627, 4) CAST (unique, 0xbc80, 4), (unique, 0x10000623, 4) CAST (stack, 0xffffffffffffffc4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x57c, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x57c, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x57c, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000633, 8), (unique, 0x10000633, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x90, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000062b, 8), (unique, 0x1000062b, 8) INT_ADD (register, 0x0, 8) , (const, 0xd0, 8)]
[ ---  BRANCH (ram, 0x230ede, 1)]
[(stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[(stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x100005cb, 4) COPY (register, 0xa0, 4), (register, 0xa0, 4) COPY (const, 0x10000, 4)]
[ ---  CBRANCH (ram, 0x230ef7, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (const, 0xffff, 4) , (unique, 0x1000063b, 4), (unique, 0x1000063b, 4) CAST (stack, 0xffffffffffffffc4, 4), (stack, 0xffffffffffffffc4, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[(unique, 0x100005cf, 4) COPY (stack, 0xffffffffffffffc4, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x5ab, 4)]
[(stack, 0xffffffffffffffc0, 4) INDIRECT (stack, 0xffffffffffffffc0, 4) , (const, 0x5ab, 4)]
[(stack, 0xffffffffffffffc4, 4) INDIRECT (stack, 0xffffffffffffffc4, 4) , (const, 0x5ab, 4)]
[ ---  CBRANCH (ram, 0x230cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000643, 8), (unique, 0x10000643, 8) CALL (ram, 0x11f8a0, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x1000063f, 4), (unique, 0x1000063f, 4) CAST (register, 0xa0, 4), (register, 0xa0, 4) MULTIEQUAL (unique, 0x100005cb, 4) , (unique, 0x100005cf, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000653, 8), (unique, 0x10000653, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x90, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000064b, 8), (unique, 0x1000064b, 8) INT_ADD (register, 0x0, 8) , (const, 0xd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xa0, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x230d36, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (stack, 0xffffffffffffffbc, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (stack, 0xffffffffffffffbc, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffc0, 4), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (stack, 0xffffffffffffffc0, 4), (stack, 0xffffffffffffffc0, 4) MULTIEQUAL (stack, 0xffffffffffffffc0, 4) , (stack, 0xffffffffffffffc0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 4), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x230e58, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_SUB (register, 0x10, 4) , (const, 0x1, 4), (register, 0x10, 4) MULTIEQUAL (stack, 0xffffffffffffffc4, 4) , (stack, 0xffffffffffffffc4, 4)]
[ ---  CBRANCH (ram, 0x230f70, 1) , (unique, 0x100000ec, 1), (unique, 0x100000ec, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x80, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000407, 8) , (const, 0x4, 8), (unique, 0x10000407, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x100003f7, 8) , (const, 0x4, 8), (unique, 0x100003f7, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x30, 8) INT_SEXT (unique, 0x1000065b, 4), (unique, 0x1000065b, 4) CAST (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x230f70, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0xd, 4)]
[(unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x30, 8) , (const, 0x4, 8), (register, 0x30, 8) INT_SEXT (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x230f83, 1)]
[(register, 0x8, 8) PTRADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3b80, 8) , (register, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000597, 8) , (const, 0x4, 8), (unique, 0x10000597, 8) INT_ADD (register, 0x30, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (unique, 0x3b80, 8) , (register, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x230f80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x30, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x100005c3, 4) COPY (unique, 0x100000f7, 4), (unique, 0x100000f7, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000191, 4) , (unique, 0x10000195, 4), (unique, 0x10000195, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x10000191, 4) INT_ADD (unique, 0x10000199, 4) , (const, 0xfffffff0, 4), (unique, 0x10000199, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x230d9f, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x10, 4) , (unique, 0x100000f7, 4), (unique, 0x100000f7, 4) INT_RIGHT (register, 0x8, 4) , (const, 0x2, 4), (register, 0x8, 4) INT_AND (register, 0x8, 4) , (const, 0xf, 4), (register, 0x8, 4) INT_ADD (unique, 0x10000191, 4) , (unique, 0x10000195, 4), (unique, 0x10000195, 4) SUBPIECE (register, 0x30, 8) , (const, 0x0, 4), (unique, 0x10000191, 4) INT_ADD (unique, 0x10000199, 4) , (const, 0xfffffff0, 4), (unique, 0x10000199, 4) SUBPIECE (register, 0x80, 8) , (const, 0x0, 4), (register, 0x30, 8) INT_MULT (register, 0x30, 8) , (const, 0x4, 8)]
[(unique, 0x100005c7, 4) COPY (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x230dd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (unique, 0x100005c3, 4) , (unique, 0x100005c7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000427, 8) , (const, 0x4, 8), (unique, 0x10000427, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x230dd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000447, 8) , (const, 0x4, 8), (unique, 0x10000447, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x230dd4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000467, 8) , (const, 0x4, 8), (unique, 0x10000467, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x4, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0x10000247, 8) , (unique, 0x10000477, 8) , (const, 0x1, 8), (unique, 0x10000477, 8) INT_ADD (unique, 0x3900, 8) , (register, 0x30, 8), (unique, 0x3900, 8) INT_MULT (register, 0x80, 8) , (const, 0x4, 8), (unique, 0x10000247, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (register, 0x80, 8) INT_NEGATE (register, 0x38, 8), (register, 0x38, 8) INT_ZEXT (register, 0x8, 4)]
[(unique, 0x3400, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3300, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x38, 8) INT_ZEXT (register, 0x8, 4)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 4) COPY (const, 0x0, 4)]
[(unique, 0x3680, 4) INT_MULT (register, 0x8, 4) , (const, 0x4, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) INT_RIGHT (unique, 0x3100, 4) , (const, 0x2, 4), (unique, 0x3100, 4) INT_SUB (register, 0x88, 4) , (const, 0x4, 4), (register, 0x88, 4) INT_SUB (register, 0x10, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100001e5, 4), (unique, 0x3400, 8) CAST (unique, 0x1000067f, 8), (unique, 0x1000067f, 8) INT_ADD (unique, 0x10000677, 8) , (unique, 0x10000487, 8), (unique, 0x10000677, 8) CAST (register, 0x18, 8), (unique, 0x10000487, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x100001e5, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000066f, 8), (unique, 0x1000066f, 8) INT_ADD (unique, 0x10000667, 8) , (unique, 0x1000047f, 8), (unique, 0x10000667, 8) CAST (register, 0x80, 8), (unique, 0x1000047f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000065f, 8), (unique, 0x1000065f, 8) CAST (unique, 0x3a00, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020d, 8) , (unique, 0x100001e9, 4), (unique, 0x1000020d, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000067f, 8), (unique, 0x1000067f, 8) INT_ADD (unique, 0x10000677, 8) , (unique, 0x10000487, 8), (unique, 0x10000677, 8) CAST (register, 0x18, 8), (unique, 0x10000487, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x100001e9, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001ed, 8), (unique, 0x100001ed, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000066f, 8), (unique, 0x1000066f, 8) INT_ADD (unique, 0x10000667, 8) , (unique, 0x1000047f, 8), (unique, 0x10000667, 8) CAST (register, 0x80, 8), (unique, 0x1000047f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000065f, 8), (unique, 0x1000065f, 8) CAST (unique, 0x3a00, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000215, 8) , (unique, 0x100001f5, 4), (unique, 0x10000215, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000067f, 8), (unique, 0x1000067f, 8) INT_ADD (unique, 0x10000677, 8) , (unique, 0x10000487, 8), (unique, 0x10000677, 8) CAST (register, 0x18, 8), (unique, 0x10000487, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x100001f5, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f9, 8), (unique, 0x100001f9, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000066f, 8), (unique, 0x1000066f, 8) INT_ADD (unique, 0x10000667, 8) , (unique, 0x1000047f, 8), (unique, 0x10000667, 8) CAST (register, 0x80, 8), (unique, 0x1000047f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000065f, 8), (unique, 0x1000065f, 8) CAST (unique, 0x3a00, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000021d, 8) , (unique, 0x10000201, 4), (unique, 0x1000021d, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000067f, 8), (unique, 0x1000067f, 8) INT_ADD (unique, 0x10000677, 8) , (unique, 0x10000487, 8), (unique, 0x10000677, 8) CAST (register, 0x18, 8), (unique, 0x10000487, 8) INT_ADD (register, 0x30, 8) , (unique, 0x3400, 8), (unique, 0x10000201, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000205, 8), (unique, 0x10000205, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000066f, 8), (unique, 0x1000066f, 8) INT_ADD (unique, 0x10000667, 8) , (unique, 0x1000047f, 8), (unique, 0x10000667, 8) CAST (register, 0x80, 8), (unique, 0x1000047f, 8) INT_ADD (register, 0x30, 8) , (unique, 0x1000065f, 8), (unique, 0x1000065f, 8) CAST (unique, 0x3a00, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x230e0a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x38, 4) , (register, 0x8, 4), (register, 0x38, 4) INT_ADD (register, 0x38, 4) , (const, 0x1, 4), (register, 0x38, 4) MULTIEQUAL (register, 0x38, 4) , (register, 0x38, 4)]
[(register, 0x0, 4) INT_ADD (register, 0x0, 4) , (unique, 0x1000011f, 4), (unique, 0x1000011f, 4) INT_MULT (register, 0x8, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x230e58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (unique, 0x3680, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100004cf, 8) , (const, 0x4, 8), (unique, 0x100004cf, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230e58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x0, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100004ef, 8) , (const, 0x4, 8), (unique, 0x100004ef, 8) INT_ADD (register, 0x8, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x230e58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) INT_ADD (register, 0x0, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000050f, 8) , (const, 0x4, 8), (unique, 0x1000050f, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x230e66, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (const, 0x7fff, 4) , (unique, 0x10000687, 4), (unique, 0x10000687, 4) CAST (register, 0x10, 4)]
[(register, 0x0, 4) COPY (const, 0x7fff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x10, 2), (register, 0x10, 2) SUBPIECE (unique, 0x10000139, 4) , (const, 0x0, 4), (unique, 0x10000139, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
