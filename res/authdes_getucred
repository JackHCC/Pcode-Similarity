[(register, 0x18, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100006df, 8), (unique, 0x100006df, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x251ef0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbc80, 4) , (const, 0x40, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x42, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x42, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x42, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x42, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x42, 4)]
[ ---  CBRANCH (ram, 0x251e80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100006ef, 8), (unique, 0x100006ef, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x90, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (register, 0x90, 8) INT_MULT (register, 0x18, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x100006e7, 8), (unique, 0x100006e7, 8) INT_ADD (register, 0x0, 8) , (const, 0xd0, 8), (register, 0x0, 8) CALL (ram, 0x259600, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x64e, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x64e, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x64e, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x64e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x64e, 4)]
[ ---  CBRANCH (ram, 0x251ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258ed0, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x100006f7, 8) , (register, 0x80, 8), (unique, 0x100006f7, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000043e, 8), (unique, 0x1000043e, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x251f18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xffffffff, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x34e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x34e, 4)]
[ ---  CBRANCH (ram, 0x251f58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x258ed0, 8) , (unique, 0xbd80, 8) , (unique, 0x3800, 8) , (unique, 0x3800, 8) , (unique, 0x100006ff, 8) , (register, 0x80, 8), (unique, 0x100006ff, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb4, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffbc, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000466, 8), (unique, 0x10000466, 8) PTRSUB (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xfffffffe, 4), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x251ef2, 1)]
[ ---  CBRANCH (ram, 0x252138, 1) , (unique, 0xcc00, 1), (unique, 0xcc00, 1) INT_SLESS (unique, 0x10000707, 4) , (unique, 0x1000070b, 4), (unique, 0x1000070b, 4) CAST (stack, 0xffffffffffffffbc, 4), (unique, 0x10000707, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5e7, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x5e7, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x5e7, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x5e7, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5e7, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (const, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000717, 8), (unique, 0x10000717, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x90, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000070f, 8), (unique, 0x1000070f, 8) INT_ADD (register, 0x0, 8) , (const, 0xd0, 8)]
[ ---  BRANCH (ram, 0x251eb1, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[(stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x100006d7, 4) COPY (register, 0xb8, 4), (register, 0xb8, 4) COPY (const, 0x10000, 4)]
[ ---  CBRANCH (ram, 0x251eca, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESS (const, 0xffff, 4) , (unique, 0x1000071f, 4), (unique, 0x1000071f, 4) CAST (stack, 0xffffffffffffffbc, 4), (stack, 0xffffffffffffffbc, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x100006db, 4) COPY (stack, 0xffffffffffffffbc, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x616, 4)]
[(stack, 0xffffffffffffffb4, 4) INDIRECT (stack, 0xffffffffffffffb4, 4) , (const, 0x616, 4)]
[(stack, 0xffffffffffffffb8, 4) INDIRECT (stack, 0xffffffffffffffb8, 4) , (const, 0x616, 4)]
[(stack, 0xffffffffffffffbc, 4) INDIRECT (stack, 0xffffffffffffffbc, 4) , (const, 0x616, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x616, 4)]
[ ---  CBRANCH (ram, 0x2520d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000727, 8), (unique, 0x10000727, 8) CALL (ram, 0x1212c0, 8) , (unique, 0x3580, 8), (unique, 0x3580, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x10, 8), (unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000723, 4), (unique, 0x10000723, 4) CAST (register, 0xb8, 4), (register, 0xb8, 4) MULTIEQUAL (unique, 0x100006d7, 4) , (unique, 0x100006db, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (register, 0x0, 8), (unique, 0x3a00, 8) CAST (unique, 0x10000737, 8), (unique, 0x10000737, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x90, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000072f, 8), (unique, 0x1000072f, 8) INT_ADD (register, 0x0, 8) , (const, 0xd0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0xffffffff, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb8, 4), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x251f65, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x10, 8) INT_SEXT (unique, 0x1000073f, 4), (unique, 0x1000073f, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (stack, 0xffffffffffffffb4, 4), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (stack, 0xffffffffffffffb4, 4), (stack, 0xffffffffffffffb4, 4) MULTIEQUAL (stack, 0xffffffffffffffb4, 4) , (stack, 0xffffffffffffffb4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffb8, 4), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (stack, 0xffffffffffffffb8, 4), (stack, 0xffffffffffffffb8, 4) MULTIEQUAL (stack, 0xffffffffffffffb8, 4) , (stack, 0xffffffffffffffb8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 4), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x30, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000743, 4), (unique, 0x10000743, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x1, 4), (register, 0x30, 4) MULTIEQUAL (stack, 0xffffffffffffffbc, 4) , (stack, 0xffffffffffffffbc, 4)]
[(unique, 0x3480, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000747, 4), (unique, 0x10000747, 4) CAST (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x252170, 1) , (unique, 0x10000117, 1), (unique, 0x10000117, 1) BOOL_AND (register, 0x200, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x18, 8) , (register, 0x80, 8), (register, 0x200, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3400, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x100004be, 8) , (const, 0x4, 8), (unique, 0x100004be, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (unique, 0x100004a6, 8) , (const, 0x4, 8), (unique, 0x100004a6, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x10000747, 4), (unique, 0x10000747, 4) CAST (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x252170, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 4) , (const, 0xd, 4)]
[(register, 0x8, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x38, 8) INT_ZEXT (unique, 0x3100, 4), (register, 0x10, 8) INT_SEXT (unique, 0x1000074b, 4), (unique, 0x1000074b, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x1000069f, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000074b, 4), (unique, 0x1000074b, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x100006c7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000074b, 4), (unique, 0x1000074b, 4) CAST (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x25218c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000676, 8) , (const, 0x4, 8), (unique, 0x10000676, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100006c7, 8) , (unique, 0x100006cf, 8)]
[ ---  CBRANCH (ram, 0x252188, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) COPY (unique, 0x100006af, 8), (unique, 0x100006af, 8) MULTIEQUAL (unique, 0x1000069f, 8) , (unique, 0x100006a7, 8)]
[(unique, 0x100006cf, 8) COPY (register, 0x0, 8)]
[(unique, 0x100006a7, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x1000074f, 8) , (const, 0x2, 4), (unique, 0x1000074f, 8) CAST (unique, 0x3a00, 8)]
[ ---  CBRANCH (ram, 0x251ff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001ca, 8) , (const, 0x0, 8), (unique, 0x100001ca, 8) INT_AND (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x1000074f, 8) , (const, 0x2, 4), (unique, 0x1000074f, 8) CAST (unique, 0x3a00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100004de, 8) , (const, 0x4, 8), (unique, 0x100004de, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x251ff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100004fe, 8) , (const, 0x4, 8), (unique, 0x100004fe, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x10000757, 4), (unique, 0x10000757, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x251ff8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000051e, 8) , (const, 0x4, 8), (unique, 0x1000051e, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000075b, 4), (unique, 0x1000075b, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x30, 4) , (const, 0x4, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x80, 4) INT_RIGHT (register, 0x88, 4) , (const, 0x2, 4), (register, 0x88, 4) INT_SUB (register, 0x30, 4) , (register, 0x0, 4)]
[(unique, 0x3a00, 8) PTRADD (unique, 0x1000026e, 8) , (unique, 0x1000052e, 8) , (const, 0x1, 8), (unique, 0x1000052e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3480, 8), (unique, 0x1000026e, 8) PTRSUB (const, 0x0, 8) , (const, 0xfffffffffffffff4, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3480, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10000212, 4), (unique, 0x3400, 8) CAST (unique, 0x1000077f, 8), (unique, 0x1000077f, 8) INT_ADD (unique, 0x10000777, 8) , (unique, 0x1000053e, 8), (unique, 0x10000777, 8) CAST (register, 0x18, 8), (unique, 0x1000053e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x10000212, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) INT_ADD (unique, 0x10000767, 8) , (unique, 0x10000536, 8), (unique, 0x10000767, 8) CAST (register, 0x80, 8), (unique, 0x10000536, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000075f, 8), (unique, 0x1000075f, 8) CAST (unique, 0x3a00, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000023a, 8) , (unique, 0x10000216, 4), (unique, 0x1000023a, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000077f, 8), (unique, 0x1000077f, 8) INT_ADD (unique, 0x10000777, 8) , (unique, 0x1000053e, 8), (unique, 0x10000777, 8) CAST (register, 0x18, 8), (unique, 0x1000053e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x10000216, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) INT_ADD (unique, 0x10000767, 8) , (unique, 0x10000536, 8), (unique, 0x10000767, 8) CAST (register, 0x80, 8), (unique, 0x10000536, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000075f, 8), (unique, 0x1000075f, 8) CAST (unique, 0x3a00, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000242, 8) , (unique, 0x10000222, 4), (unique, 0x10000242, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000077f, 8), (unique, 0x1000077f, 8) INT_ADD (unique, 0x10000777, 8) , (unique, 0x1000053e, 8), (unique, 0x10000777, 8) CAST (register, 0x18, 8), (unique, 0x1000053e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x10000222, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000226, 8), (unique, 0x10000226, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) INT_ADD (unique, 0x10000767, 8) , (unique, 0x10000536, 8), (unique, 0x10000767, 8) CAST (register, 0x80, 8), (unique, 0x10000536, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000075f, 8), (unique, 0x1000075f, 8) CAST (unique, 0x3a00, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000024a, 8) , (unique, 0x1000022e, 4), (unique, 0x1000024a, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000077f, 8), (unique, 0x1000077f, 8) INT_ADD (unique, 0x10000777, 8) , (unique, 0x1000053e, 8), (unique, 0x10000777, 8) CAST (register, 0x18, 8), (unique, 0x1000053e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x1000022e, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000232, 8), (unique, 0x10000232, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000076f, 8), (unique, 0x1000076f, 8) INT_ADD (unique, 0x10000767, 8) , (unique, 0x10000536, 8), (unique, 0x10000767, 8) CAST (register, 0x80, 8), (unique, 0x10000536, 8) INT_ADD (register, 0x0, 8) , (unique, 0x1000075f, 8), (unique, 0x1000075f, 8) CAST (unique, 0x3a00, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x252028, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (register, 0x80, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x88, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x88, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000586, 8) , (const, 0x4, 8), (unique, 0x10000586, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100005a6, 8) , (const, 0x4, 8), (unique, 0x100005a6, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100005c6, 8) , (const, 0x4, 8), (unique, 0x100005c6, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x100005e6, 8) , (const, 0x4, 8), (unique, 0x100005e6, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000606, 8) , (const, 0x4, 8), (unique, 0x10000606, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x2520b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3a00, 8) , (unique, 0xbc80, 4), (unique, 0x3a00, 8) PTRADD (register, 0x18, 8) , (unique, 0x10000626, 8) , (const, 0x4, 8), (unique, 0x10000626, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x2520bf, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (const, 0x7fff, 4) , (unique, 0x10000787, 4), (unique, 0x10000787, 4) CAST (register, 0x30, 4)]
[(register, 0x0, 4) COPY (const, 0x7fff, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x30, 2), (register, 0x30, 2) SUBPIECE (unique, 0x10000172, 4) , (const, 0x0, 4), (unique, 0x10000172, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x0, 4)]
[ ---  BRANCH (ram, 0x251ef2, 1)]
[ ---  CBRANCH (ram, 0x251ef0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(register, 0x8, 4) COPY (const, 0x7fff, 4)]
[ ---  CBRANCH (ram, 0x251d2f, 1) , (unique, 0x27780, 1), (unique, 0x27780, 1) INT_SLESS (unique, 0x1000078b, 4) , (const, 0x8000, 4), (unique, 0x1000078b, 4) CAST (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (register, 0x8, 2), (register, 0x8, 2) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[(register, 0x10, 8) INT_SEXT (unique, 0x1000078f, 4), (unique, 0x1000078f, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (const, 0xffffffff, 4) , (unique, 0x10000793, 4), (unique, 0x10000793, 4) CAST (unique, 0x3100, 4), (unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (unique, 0xbc80, 4)]
[ ---  CBRANCH (ram, 0x252100, 1) , (unique, 0x10000099, 1), (unique, 0x10000099, 1) BOOL_AND (unique, 0xc780, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x80, 8), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x3400, 8), (unique, 0x3a00, 8) PTRADD (register, 0x80, 8) , (unique, 0x100002b6, 8) , (const, 0x4, 8), (unique, 0x100002b6, 8) INT_ADD (register, 0x38, 8) , (const, 0xfffffffffffffffc, 8), (unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000029e, 8) , (const, 0x4, 8), (unique, 0x1000029e, 8) INT_ADD (register, 0x38, 8) , (const, 0x4, 8), (register, 0x38, 8) INT_SEXT (unique, 0x10000797, 4), (unique, 0x10000797, 4) CAST (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x252100, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x8, 4) , (const, 0xd, 4)]
[(register, 0x38, 8) INT_SUB (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x3100, 4), (register, 0x10, 8) INT_SEXT (unique, 0x1000079b, 4), (unique, 0x1000079b, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x10000687, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000079b, 4), (unique, 0x1000079b, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x100006b7, 8) COPY (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (unique, 0x1000079b, 4), (unique, 0x1000079b, 4) CAST (unique, 0x3100, 4)]
[ ---  BRANCH (ram, 0x25211c, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000064e, 8) , (const, 0x4, 8), (unique, 0x1000064e, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x100006b7, 8) , (unique, 0x100006bf, 8)]
[ ---  CBRANCH (ram, 0x252118, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x38, 8), (register, 0x0, 8) COPY (unique, 0x10000697, 8), (unique, 0x10000697, 8) MULTIEQUAL (unique, 0x10000687, 8) , (unique, 0x1000068f, 8)]
[(unique, 0x100006bf, 8) COPY (register, 0x0, 8)]
[(unique, 0x1000068f, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x0, 4) INT_AND (register, 0x0, 4) , (const, 0x3, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) INT_RIGHT (unique, 0x1000079f, 8) , (const, 0x2, 4), (unique, 0x1000079f, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x251db5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001c0, 8) , (const, 0x0, 8), (unique, 0x100001c0, 8) INT_AND (register, 0x0, 8) , (const, 0x3, 8), (register, 0x0, 8) INT_RIGHT (unique, 0x1000079f, 8) , (const, 0x2, 4), (unique, 0x1000079f, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002de, 8) , (const, 0x4, 8), (unique, 0x100002de, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8)]
[(unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x251db5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100002fe, 8) , (const, 0x4, 8), (unique, 0x100002fe, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100007a7, 4), (unique, 0x100007a7, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x3, 4)]
[ ---  CBRANCH (ram, 0x251db5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000031e, 8) , (const, 0x4, 8), (unique, 0x1000031e, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (unique, 0x100007ab, 4), (unique, 0x100007ab, 4) CAST (unique, 0x3100, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x8, 4) , (const, 0x4, 4)]
[(register, 0x10, 4) MULTIEQUAL (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4) , (unique, 0x3100, 4)]
[(register, 0x88, 4) INT_RIGHT (register, 0x30, 4) , (const, 0x2, 4), (register, 0x30, 4) INT_SUB (register, 0x8, 4) , (register, 0x0, 4)]
[(unique, 0x3400, 8) INT_ADD (unique, 0x3680, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (register, 0x0, 8), (unique, 0x3880, 8) INT_ADD (unique, 0x3680, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x3680, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x8, 4) COPY (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x100001d2, 4), (unique, 0x3400, 8) CAST (unique, 0x100007c7, 8), (unique, 0x100007c7, 8) INT_ADD (unique, 0x100007bf, 8) , (unique, 0x1000033e, 8), (unique, 0x100007bf, 8) CAST (register, 0x80, 8), (unique, 0x1000033e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x100001d2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x100007b7, 8), (unique, 0x100007b7, 8) INT_ADD (unique, 0x100007af, 8) , (unique, 0x10000336, 8), (unique, 0x100007af, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000336, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fa, 8) , (unique, 0x100001d6, 4), (unique, 0x100001fa, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100007c7, 8), (unique, 0x100007c7, 8) INT_ADD (unique, 0x100007bf, 8) , (unique, 0x1000033e, 8), (unique, 0x100007bf, 8) CAST (register, 0x80, 8), (unique, 0x1000033e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x100001d6, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001da, 8), (unique, 0x100001da, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100007b7, 8), (unique, 0x100007b7, 8) INT_ADD (unique, 0x100007af, 8) , (unique, 0x10000336, 8), (unique, 0x100007af, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000336, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000202, 8) , (unique, 0x100001e2, 4), (unique, 0x10000202, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100007c7, 8), (unique, 0x100007c7, 8) INT_ADD (unique, 0x100007bf, 8) , (unique, 0x1000033e, 8), (unique, 0x100007bf, 8) CAST (register, 0x80, 8), (unique, 0x1000033e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x100001e2, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e6, 8), (unique, 0x100001e6, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100007b7, 8), (unique, 0x100007b7, 8) INT_ADD (unique, 0x100007af, 8) , (unique, 0x10000336, 8), (unique, 0x100007af, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000336, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020a, 8) , (unique, 0x100001ee, 4), (unique, 0x1000020a, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100007c7, 8), (unique, 0x100007c7, 8) INT_ADD (unique, 0x100007bf, 8) , (unique, 0x1000033e, 8), (unique, 0x100007bf, 8) CAST (register, 0x80, 8), (unique, 0x1000033e, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3a00, 8), (unique, 0x100001ee, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f2, 8), (unique, 0x100001f2, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x100007b7, 8), (unique, 0x100007b7, 8) INT_ADD (unique, 0x100007af, 8) , (unique, 0x10000336, 8), (unique, 0x100007af, 8) CAST (unique, 0xbd80, 8), (unique, 0x10000336, 8) INT_ADD (register, 0x0, 8) , (unique, 0x3400, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0xfffffffffffffff0, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x251de8, 1) , (unique, 0xc900, 1), (unique, 0xc900, 1) INT_LESS (register, 0x8, 4) , (register, 0x88, 4), (register, 0x8, 4) INT_ADD (register, 0x8, 4) , (const, 0x1, 4), (register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[(register, 0x10, 4) INT_SUB (register, 0x10, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xfffffffc, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 4) , (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000037e, 8) , (const, 0x4, 8), (unique, 0x1000037e, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xffffffff, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000039e, 8) , (const, 0x4, 8), (unique, 0x1000039e, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffe, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100003be, 8) , (const, 0x4, 8), (unique, 0x100003be, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100003de, 8) , (const, 0x4, 8), (unique, 0x100003de, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x3100, 4) , (const, 0xffffffff, 4), (unique, 0x3100, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffc, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x0, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100003fe, 8) , (const, 0x4, 8), (unique, 0x100003fe, 8) INT_ADD (register, 0x0, 8) , (const, 0x4, 8), (register, 0x0, 8) INT_SEXT (unique, 0x3100, 4)]
[ ---  CBRANCH (ram, 0x251e6f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xffffffff, 4), (register, 0x10, 4) INT_ADD (register, 0x10, 4) , (const, 0xfffffffb, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbc80, 4), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x10, 8) , (const, 0x4, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x1000041e, 8) , (const, 0x4, 8), (unique, 0x1000041e, 8) INT_ADD (register, 0x10, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_SEXT (register, 0x10, 4)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x251ef2, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2521a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100007cf, 8), (unique, 0x100007cf, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ff, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
