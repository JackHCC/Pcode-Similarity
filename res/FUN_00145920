[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000021e, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x145c10, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100002a6, 1) , (const, 0x7e, 1), (unique, 0x100002a6, 1) CAST (register, 0x0, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000029e, 8), (unique, 0x1000029e, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x50, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000296, 8), (unique, 0x10000296, 8) INT_ADD (register, 0x80, 8) , (const, 0x8, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000236, 8) COPY (register, 0x28, 8)]
[ ---  BRANCH (ram, 0x145941, 1)]
[(unique, 0x10000226, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[ ---  CBRANCH (ram, 0x145941, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a7, 8), (unique, 0x100002a7, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x48, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000022e, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x145941, 1)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (unique, 0xbd80, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x1000021e, 8) , (unique, 0x10000226, 8) , (unique, 0x1000022e, 8) , (unique, 0x10000236, 8)]
[ ---  CBRANCH (ram, 0x14594b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 4) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x145970, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x24, 4) , (register, 0x10, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002af, 8) , (const, 0x16, 4), (unique, 0x100002af, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x54, 4)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x54, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x54, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) INT_ADD (register, 0x80, 8) , (const, 0x68, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100002b7, 1), (unique, 0x100002b7, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0x10000276, 8) COPY (register, 0x38, 8)]
[(unique, 0x100001f4, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100001f6, 8) MULTIEQUAL (unique, 0x10000276, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1459a2, 1) , (unique, 0x100001f5, 1), (unique, 0x100001f5, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002c9, 8), (unique, 0x100002c9, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0x100002c8, 1), (unique, 0x100002c8, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (unique, 0x100001f6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000024e, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x145b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001f4, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x145ab0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001f4, 1) , (const, 0x2d, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001f6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100001d2, 1) COPY (const, 0x1, 1)]
[(register, 0x18, 8) PTRADD (unique, 0x100001f6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1459cb, 1)]
[(unique, 0x100001d3, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1459cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001f4, 1) , (const, 0x2b, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001f6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) PTRADD (unique, 0x100001f6, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100001d1, 1) MULTIEQUAL (unique, 0x100001d3, 1) , (unique, 0x100001d3, 1) , (unique, 0x100001d2, 1)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001f6, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x145bd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 1) , (const, 0x30, 1), (register, 0x30, 1) MULTIEQUAL (unique, 0x100001f4, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1459dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58e00, 4) , (const, 0x0, 4), (unique, 0x58e00, 4) INT_AND (register, 0x10, 4) , (const, 0xffffffef, 4)]
[ ---  CBRANCH (ram, 0x145c8d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x58, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002d2, 8), (unique, 0x100002d2, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4ea9d8, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x100002d1, 1), (unique, 0x100002d1, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) COPY (const, 0xe, 4)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(register, 0x10, 4) COPY (const, 0x10, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1459ef, 1)]
[ ---  CBRANCH (ram, 0x1459dd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x6, 4)]
[(register, 0x10, 4) COPY (const, 0x8, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1459ef, 1)]
[ ---  CBRANCH (ram, 0x145b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x145b40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 4) , (const, 0xa, 4)]
[(unique, 0x3100, 4) INT_SUB (register, 0x10, 4) , (const, 0x2, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145c30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb8, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) COPY (const, 0x8, 4)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x1459ef, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x30b, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x30b, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x30b, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x30b, 4)]
[(unique, 0x10000266, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x145c6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x100002da, 8), (unique, 0x100002da, 8) CAST (register, 0x28, 8)]
[(unique, 0x10000286, 8) COPY (unique, 0x10000266, 8)]
[ ---  CBRANCH (ram, 0x145caa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (register, 0x30, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x145c62, 1)]
[ ---  CBRANCH (ram, 0x145c58, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x145caa, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x28, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x18, 8) , (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0x10000202, 8) MULTIEQUAL (unique, 0x1000027e, 8) , (unique, 0x10000286, 8) , (unique, 0x10000286, 8)]
[ ---  CBRANCH (ram, 0x145d3b, 1) , (unique, 0x10000201, 1), (unique, 0x10000201, 1) INT_NOTEQUAL (unique, 0x1000020a, 1) , (const, 0x0, 1), (unique, 0x1000020a, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x30, 1) , (register, 0x30, 1)]
[(register, 0x38, 8) INT_ZEXT (unique, 0x1000020a, 1)]
[ ---  CBRANCH (ram, 0x145cd0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x9, 1) , (unique, 0x100002e2, 1), (unique, 0x100002e2, 1) CAST (register, 0x10, 1), (register, 0x10, 1) INT_SUB (unique, 0x1000020a, 1) , (const, 0x30, 1)]
[(register, 0x10, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x145cf9, 1)]
[ ---  CBRANCH (ram, 0x145cf0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x28, 8) , (register, 0x10, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000202, 8) , (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x145cd0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145d18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (ram, 0x4ea9c8, 8) , (unique, 0x100001ec, 8) , (const, 0x1, 8), (unique, 0x100001ec, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8)]
[ ---  CBRANCH (ram, 0x145cd0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x40, 4) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002e3, 8), (unique, 0x100002e3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4ea9d8, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x145cd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000202, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000027e, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (unique, 0x10000202, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x3c9, 4)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x3c9, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x3c9, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x3c9, 4)]
[(register, 0x0, 8) CAST (unique, 0x100002eb, 8), (unique, 0x100002eb, 8) CALL (ram, 0x1582e0, 8) , (register, 0x18, 8) , (unique, 0x10000202, 8) , (register, 0x28, 8) , (register, 0xb8, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8)]
[(register, 0x10, 4) COPY (const, 0xa, 4)]
[(register, 0x0, 4) COPY (const, 0x8, 4)]
[ ---  BRANCH (ram, 0x1459ef, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x30, 1) MULTIEQUAL (register, 0x30, 1) , (register, 0x30, 1) , (unique, 0xbb00, 1) , (register, 0x30, 1) , (unique, 0xbb00, 1)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0x0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4) , (register, 0x10, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002f3, 8), (unique, 0x100002f3, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001dc, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x100001dc, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9a40, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001d4, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001d4, 8) PTRSUB (const, 0x0, 8) , (const, 0x2a9a00, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (unique, 0x3100, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(unique, 0x10000256, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x145c6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb8, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0x0, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x145c6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 1) , (const, 0x0, 1)]
[(unique, 0x3100, 8) INT_SUB (register, 0xb0, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(unique, 0x100001c0, 1) COPY (const, 0x0, 1)]
[(register, 0x98, 8) INT_SEXT (unique, 0x100002fb, 4), (unique, 0x100002fb, 4) CAST (register, 0x10, 4)]
[ ---  BRANCH (ram, 0x145a71, 1)]
[(unique, 0x100001bf, 1) MULTIEQUAL (unique, 0x100001c0, 1) , (unique, 0x100001bd, 1)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000256, 8) , (unique, 0x3100, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145a94, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 1) , (const, 0xa, 1), (register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) INT_SUB (unique, 0x100000b1, 4) , (const, 0x30, 4), (unique, 0x100000b1, 4) INT_ZEXT (unique, 0x100001ac, 1), (unique, 0x100001ac, 1) MULTIEQUAL (register, 0x30, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x145ac8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[(register, 0x30, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145b30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (unique, 0xbb00, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) PTRADD (register, 0x28, 8) , (register, 0x30, 8) , (const, 0x1, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x145a7f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x145ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (register, 0xb0, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (const, 0x1, 8)]
[(unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (unique, 0x3100, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x145a57, 1)]
[ ---  CBRANCH (ram, 0x145af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x4, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (ram, 0x4ea9c8, 8) , (unique, 0x100001e4, 8) , (const, 0x1, 8), (unique, 0x100001e4, 8) INT_ADD (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x3900, 8) INT_MULT (register, 0x38, 8) , (const, 0x2, 8), (register, 0x38, 8) INT_ZEXT (unique, 0x100001ac, 1)]
[(register, 0x30, 4) INT_SUB (unique, 0xbc80, 4) , (const, 0x37, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100002ff, 8), (unique, 0x100002ff, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4ea9d8, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x38, 8) , (const, 0x4, 8)]
[(register, 0x30, 8) INT_ZEXT (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x30, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x145af8, 1) , (unique, 0xcd00, 1), (unique, 0xcd00, 1) INT_SLESSEQUAL (unique, 0x10000307, 4) , (unique, 0x1000030b, 4), (unique, 0x1000030b, 4) CAST (register, 0x38, 4), (unique, 0x10000307, 4) CAST (register, 0x10, 4), (register, 0x38, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4)]
[(register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145a40, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145a49, 1) , (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x145aa1, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x1000030f, 1) , (register, 0x30, 1), (unique, 0x1000030f, 1) CAST (unique, 0xbb00, 1)]
[(unique, 0x100001be, 1) COPY (const, 0x1, 1)]
[ ---  BRANCH (ram, 0x145a57, 1)]
[(register, 0x0, 8) INT_ADD (register, 0x0, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_AND (register, 0x30, 8) , (const, 0xff, 8), (register, 0x0, 8) INT_MULT (register, 0x0, 8) , (register, 0x98, 8)]
[(unique, 0x100001bd, 1) MULTIEQUAL (unique, 0x100001be, 1) , (unique, 0x100001bf, 1) , (unique, 0x100001bf, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x145af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x145af8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x3100, 8) , (register, 0xb8, 8)]
[(unique, 0x100001bc, 1) MULTIEQUAL (unique, 0x100001bf, 1) , (unique, 0x100001bf, 1) , (unique, 0x100001bd, 1) , (unique, 0x100001bd, 1)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000246, 8) COPY (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x145b63, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x145b06, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x1d0, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1d0, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1d0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x80, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[ ---  CBRANCH (ram, 0x145c73, 1) , (unique, 0x100001bc, 1)]
[(register, 0x10, 8) INT_2COMP (register, 0x0, 8)]
[(unique, 0x1000020e, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145b1f, 1) , (unique, 0x100001d1, 1)]
[(unique, 0x10000216, 8) COPY (register, 0x10, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000020e, 8) , (unique, 0x10000216, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000310, 8) , (const, 0x22, 4), (unique, 0x10000310, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x212, 4)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x212, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x212, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(register, 0x80, 8) MULTIEQUAL (unique, 0x10000246, 8) , (unique, 0x1000024e, 8) , (unique, 0x10000256, 8) , (unique, 0x10000256, 8) , (unique, 0x10000266, 8) , (unique, 0x10000266, 8)]
[ ---  CBRANCH (ram, 0x14595b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x145b90, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x10000320, 8) , (const, 0x2, 8), (unique, 0x10000320, 8) CAST (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x80, 8) , (unique, 0x100000fb, 8) , (const, 0x1, 8), (unique, 0x100000fb, 8) INT_2COMP (unique, 0x10000318, 8), (unique, 0x10000318, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x145c18, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x58, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000329, 8), (unique, 0x10000329, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (ram, 0x4ea9d8, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000328, 1), (unique, 0x10000328, 1) CAST (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x145b90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x30, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x80, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x1, 8)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x253, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x253, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x253, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x14595b, 1)]
[(ram, 0x4ea9c8, 8) INDIRECT (ram, 0x4ea9c8, 8) , (const, 0x278, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x278, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x278, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x14595b, 1)]
[(ram, 0x4ea9c8, 8) COPY (ram, 0x4ea9c8, 8), (ram, 0x4ea9c8, 8) MULTIEQUAL (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8) , (ram, 0x4ea9c8, 8)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
