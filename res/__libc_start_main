[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x121ae5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4eaf38, 8) , (const, 0x0, 8)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000144, 8), (unique, 0x10000144, 8) CAST (ram, 0x4eaf38, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x121afc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6d, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x6d, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x6d, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x6d, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x6d, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (register, 0x0, 4) , (const, 0x6d, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x6d, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x6d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6d, 4)]
[ ---  CALL (ram, 0x143430, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4eb1a0, 4) MULTIEQUAL (register, 0x0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x121be8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000014c, 8), (unique, 0x1000014c, 8) CAST (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f6, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x1f6, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x1f6, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x1f6, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x1f6, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0x1f6, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x1f6, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x1f6, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f6, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f6, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x10000124, 8) , (unique, 0xbd80, 8), (unique, 0x10000124, 8) COPY (const, 0x2b3795, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000154, 8), (unique, 0x10000154, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x168, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x121b0e, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x121b28, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x94, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x94, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x94, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x94, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x94, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0x94, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x94, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x94, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x94, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x94, 4)]
[ ---  CALLIND (register, 0x8, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000015c, 8), (unique, 0x1000015c, 8) CAST (ram, 0x4eaea8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x121c08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000164, 8), (unique, 0x10000164, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x1b0, 8) , (const, 0x1, 8), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000016c, 8), (unique, 0x1000016c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x1a8, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_ADD (register, 0x28, 8) , (register, 0xa0, 8), (register, 0xa0, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x470, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000174, 8), (unique, 0x10000174, 8) CAST (ram, 0x4eade8, 8), (register, 0x28, 8) INT_MULT (register, 0x28, 8) , (const, 0x10, 8), (register, 0x28, 8) INT_ZEXT (unique, 0xbc80, 4)]
[ ---  BRANCH (ram, 0x121c41, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x121c2b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (register, 0x28, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x121c39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000017c, 8), (unique, 0x1000017c, 8) INT_ADD (register, 0xa8, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x1d5, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0x1d5, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x1d5, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1d5, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1d5, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0xa0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000184, 8), (unique, 0x10000184, 8) INT_ADD (register, 0xa8, 8) , (const, 0x40, 8)]
[(register, 0xa0, 8) INT_ADD (register, 0xa0, 8) , (const, 0x10, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x121c4b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x177, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x177, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x177, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x177, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x177, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0x177, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x177, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x177, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x177, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x1000012c, 8) , (unique, 0xbd80, 8), (unique, 0x1000012c, 8) COPY (const, 0x2b37af, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018c, 8), (unique, 0x1000018c, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4eae58, 8) , (const, 0x168, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x121b45, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xb4, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0xb4, 4), (ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xb4, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0xb4, 4), (ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0xb4, 4), (ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0xb4, 4), (ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0xb4, 4), (ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0xb4, 4), (ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xb4, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xb4, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x121b9e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x13ec10, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000194, 8), (unique, 0x10000194, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x10a, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x10a, 4)]
[ ---  CALLIND (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001a4, 8), (unique, 0x100001a4, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000019c, 8), (unique, 0x1000019c, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08c8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08c8, 8) , (const, 0x11, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x130, 4), (ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0x10a, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x130, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0x10a, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x130, 4), (ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0x10a, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x130, 4), (ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0x10a, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0x130, 4), (ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0x10a, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x130, 4), (ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x10a, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x130, 4), (ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0x10a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ac, 8), (unique, 0x100001ac, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b8, 8) , (const, 0x11, 4), (ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x10a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10a, 4)]
[ ---  CBRANCH (ram, 0x121c04, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b4, 8), (unique, 0x100001b4, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001ac, 8), (unique, 0x100001ac, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f08b8, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f08b8, 8) , (const, 0x11, 4), (ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0x10a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x10a, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x121be0, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x121b97, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0x3800, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001cc, 8), (unique, 0x100001cc, 8) INT_ADD (register, 0x110, 8) , (const, 0x300, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0xe0, 4), (ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0xd0, 4)]
[(ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xe0, 4), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xd0, 4)]
[(ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0xe0, 4), (ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0xd0, 4)]
[(ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0xe0, 4), (ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0xd0, 4)]
[(ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0xe0, 4), (ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0xd0, 4)]
[(ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0xe0, 4), (ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0xd0, 4)]
[(ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0xe0, 4), (ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0xd0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001bc, 8), (unique, 0x100001bc, 8) INT_ADD (register, 0x110, 8) , (const, 0x300, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xe0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001c4, 8), (unique, 0x100001c4, 8) INT_ADD (register, 0x110, 8) , (const, 0x2f8, 8)]
[(register, 0x0, 4) CALLIND (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d4, 8), (unique, 0x100001d4, 8) CAST (ram, 0x4eaea8, 8), (ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0xd0, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe5, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x143120, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eade8, 8) COPY (ram, 0x4eade8, 8), (ram, 0x4eade8, 8) INDIRECT (ram, 0x4eade8, 8) , (const, 0xe5, 4), (ram, 0x4eade8, 8) MULTIEQUAL (ram, 0x4eade8, 8) , (ram, 0x4eade8, 8)]
[(ram, 0x4eae58, 8) COPY (ram, 0x4eae58, 8), (ram, 0x4eae58, 8) INDIRECT (ram, 0x4eae58, 8) , (const, 0xe5, 4), (ram, 0x4eae58, 8) MULTIEQUAL (ram, 0x4eae58, 8) , (ram, 0x4eae58, 8)]
[(ram, 0x4eaea8, 8) COPY (ram, 0x4eaea8, 8), (ram, 0x4eaea8, 8) INDIRECT (ram, 0x4eaea8, 8) , (const, 0xe5, 4), (ram, 0x4eaea8, 8) MULTIEQUAL (ram, 0x4eaea8, 8) , (ram, 0x4eaea8, 8)]
[(ram, 0x4eaf38, 8) COPY (ram, 0x4eaf38, 8), (ram, 0x4eaf38, 8) INDIRECT (ram, 0x4eaf38, 8) , (const, 0xe5, 4), (ram, 0x4eaf38, 8) MULTIEQUAL (ram, 0x4eaf38, 8) , (ram, 0x4eaf38, 8)]
[(ram, 0x4eb1a0, 4) COPY (ram, 0x4eb1a0, 4), (ram, 0x4eb1a0, 4) INDIRECT (ram, 0x4eb1a0, 4) , (const, 0xe5, 4), (ram, 0x4eb1a0, 4) MULTIEQUAL (ram, 0x4eb1a0, 4) , (ram, 0x4eb1a0, 4)]
[(ram, 0x4f08b8, 8) COPY (ram, 0x4f08b8, 8), (ram, 0x4f08b8, 8) INDIRECT (ram, 0x4f08b8, 8) , (const, 0xe5, 4), (ram, 0x4f08b8, 8) MULTIEQUAL (ram, 0x4f08b8, 8) , (ram, 0x4f08b8, 8)]
[(ram, 0x4f08c8, 8) COPY (ram, 0x4f08c8, 8), (ram, 0x4f08c8, 8) INDIRECT (ram, 0x4f08c8, 8) , (const, 0xe5, 4), (ram, 0x4f08c8, 8) MULTIEQUAL (ram, 0x4f08c8, 8) , (ram, 0x4f08c8, 8)]
[ ---  RETURN (const, 0x1, 4)]
