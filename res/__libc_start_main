[ ---  CBRANCH (ram, 0x120837, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c2f48, 8) , (const, 0x0, 8)]
[(register, 0x10, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x120779, 1)]
[(register, 0x10, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000147, 8), (unique, 0x10000147, 8) CAST (ram, 0x4c2f48, 8)]
[(register, 0x10, 4) MULTIEQUAL (register, 0x10, 4) , (register, 0x10, 4)]
[ ---  CBRANCH (ram, 0x120793, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x68, 4)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x68, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x68, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x68, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x68, 4)]
[(ram, 0x4c3080, 4) INDIRECT (register, 0x10, 4) , (const, 0x68, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x68, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x68, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x68, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x68, 4)]
[ ---  CALL (ram, 0x13a270, 8) , (register, 0x88, 8) , (const, 0x0, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c3080, 4) MULTIEQUAL (register, 0x10, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x120876, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000014f, 8), (unique, 0x1000014f, 8) CAST (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0x1f9, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x1f9, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x1f9, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f9, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f9, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x10000127, 8) , (unique, 0xbd80, 8), (unique, 0x10000127, 8) COPY (const, 0x28be75, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000157, 8), (unique, 0x10000157, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x110, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1207a5, 1)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1207bf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8f, 4)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x8f, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x8f, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x8f, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x8f, 4)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0x8f, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x8f, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x8f, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x8f, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x8f, 4)]
[ ---  CALLIND (register, 0x8, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000015f, 8), (unique, 0x1000015f, 8) CAST (ram, 0x4c2eb8, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1208cb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000167, 8), (unique, 0x10000167, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x168, 8) , (const, 0x1, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000016f, 8), (unique, 0x1000016f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x160, 8) , (const, 0x1, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000177, 8), (unique, 0x10000177, 8) CAST (ram, 0x4c2e00, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 4) SUBPIECE (register, 0xa0, 8) , (const, 0x0, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8)]
[ ---  CBRANCH (ram, 0x1208f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x1000017f, 8), (unique, 0x1000017f, 8) INT_ADD (register, 0xa8, 8) , (const, 0x18, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1cb, 4)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x1cb, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1cb, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x1cb, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x1cb, 4)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0x1cb, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x1cb, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x1cb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1cb, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1cb, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8), (register, 0x38, 8) INT_ADD (register, 0x38, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INT_ADD (register, 0xa0, 8) , (const, 0x47, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xa0, 8) INT_ZEXT (register, 0xa0, 4), (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000187, 8), (unique, 0x10000187, 8) INT_ADD (register, 0xa8, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x1208df, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (register, 0xa0, 4), (register, 0xa0, 4) INT_ADD (register, 0xa0, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1208a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x171, 4)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x171, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x171, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x171, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x171, 4)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0x171, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x171, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x171, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x171, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x1000012f, 8) , (unique, 0xbd80, 8), (unique, 0x1000012f, 8) COPY (const, 0x28be8f, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000018f, 8), (unique, 0x1000018f, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x110, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1207de, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xaf, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0xaf, 4), (ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xaf, 4), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0xaf, 4), (ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0xaf, 4), (ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0xaf, 4), (ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0xaf, 4), (ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0xaf, 4), (ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xaf, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xaf, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x12083e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x135240, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000197, 8), (unique, 0x10000197, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x105, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x105, 4)]
[ ---  CALLIND (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001a7, 8), (unique, 0x100001a7, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000019f, 8), (unique, 0x1000019f, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8770, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8770, 8) , (const, 0x11, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x12b, 4), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x105, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x12b, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x105, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x12b, 4), (ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0x105, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x12b, 4), (ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0x105, 4)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0x12b, 4), (ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0x105, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x12b, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x105, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x12b, 4), (ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0x105, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0xbd00, 4), (unique, 0xbd00, 4) INT_ADD (unique, 0xbd00, 4) , (const, 0xffffffff, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001af, 8), (unique, 0x100001af, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8760, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8760, 8) , (const, 0x11, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x105, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4)]
[ ---  CBRANCH (ram, 0x120892, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001b7, 8), (unique, 0x100001b7, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001af, 8), (unique, 0x100001af, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4c8760, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4c8760, 8) , (const, 0x11, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0x105, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x105, 4)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x1208a0, 1)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  BRANCH (ram, 0x120830, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x4f00, 8) , (unique, 0x3800, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) INT_ADD (register, 0x110, 8) , (const, 0x300, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff68, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0xdb, 4), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0xcb, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xdb, 4), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xcb, 4)]
[(ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0xdb, 4), (ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0xcb, 4)]
[(ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0xdb, 4), (ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0xcb, 4)]
[(ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0xdb, 4), (ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0xcb, 4)]
[(ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0xdb, 4), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0xcb, 4)]
[(ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0xdb, 4), (ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xdb, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) INT_ADD (register, 0x110, 8) , (const, 0x300, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xdb, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) INT_ADD (register, 0x110, 8) , (const, 0x2f8, 8)]
[(register, 0x0, 4) CALLIND (register, 0x38, 8) , (register, 0x30, 4) , (register, 0x10, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) CAST (ram, 0x4c2eb8, 8), (ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0xcb, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0xe0, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0xe0, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CALL (ram, 0x13a020, 8) , (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4c2e00, 8) COPY (ram, 0x4c2e00, 8), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0xe0, 4), (ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xe0, 4), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2eb8, 8) COPY (ram, 0x4c2eb8, 8), (ram, 0x4c2eb8, 8) INDIRECT (ram, 0x4c2eb8, 8) , (const, 0xe0, 4), (ram, 0x4c2eb8, 8) MULTIEQUAL (ram, 0x4c2eb8, 8) , (ram, 0x4c2eb8, 8)]
[(ram, 0x4c2f48, 8) COPY (ram, 0x4c2f48, 8), (ram, 0x4c2f48, 8) INDIRECT (ram, 0x4c2f48, 8) , (const, 0xe0, 4), (ram, 0x4c2f48, 8) MULTIEQUAL (ram, 0x4c2f48, 8) , (ram, 0x4c2f48, 8)]
[(ram, 0x4c3080, 4) COPY (ram, 0x4c3080, 4), (ram, 0x4c3080, 4) INDIRECT (ram, 0x4c3080, 4) , (const, 0xe0, 4), (ram, 0x4c3080, 4) MULTIEQUAL (ram, 0x4c3080, 4) , (ram, 0x4c3080, 4)]
[(ram, 0x4c8760, 8) COPY (ram, 0x4c8760, 8), (ram, 0x4c8760, 8) INDIRECT (ram, 0x4c8760, 8) , (const, 0xe0, 4), (ram, 0x4c8760, 8) MULTIEQUAL (ram, 0x4c8760, 8) , (ram, 0x4c8760, 8)]
[(ram, 0x4c8770, 8) COPY (ram, 0x4c8770, 8), (ram, 0x4c8770, 8) INDIRECT (ram, 0x4c8770, 8) , (const, 0xe0, 4), (ram, 0x4c8770, 8) MULTIEQUAL (ram, 0x4c8770, 8) , (ram, 0x4c8770, 8)]
[ ---  RETURN (const, 0x1, 4)]
