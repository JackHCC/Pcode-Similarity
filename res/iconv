[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000133, 8), (unique, 0x10000133, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1224c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x122500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x122500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000123, 8) COPY (ram, 0x0, 8)]
[ ---  BRANCH (ram, 0x1223ce, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1224e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x1000012b, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1224e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x122500, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x131, 4)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x131, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x131, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x131, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x131, 4)]
[(register, 0x0, 4) CALL (ram, 0x122a90, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x20, 8)]
[ ---  BRANCH (ram, 0x1223f9, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x104, 4)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x104, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x104, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x104, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x104, 4)]
[(register, 0x0, 4) CALL (ram, 0x122a90, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x20, 8), (register, 0x80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x1223f2, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x6e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x6e, 4)]
[(register, 0x0, 4) CALL (ram, 0x122a90, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (register, 0x20, 8), (register, 0x10, 8) PTRADD (register, 0x18, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x10000123, 8) , (unique, 0x1000012b, 8)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x81, 4), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x6e, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x81, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x6e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000143, 8), (unique, 0x10000143, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (register, 0x18, 8) , (unique, 0x1000010d, 8) , (const, 0x1, 8), (unique, 0x1000010d, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x1000013b, 8), (unique, 0x1000013b, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x18, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1223f9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0xa7, 4), (ram, 0x0, 8) MULTIEQUAL (ram, 0x0, 8) , (ram, 0x0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xa7, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0x10000153, 8), (unique, 0x10000153, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (register, 0x28, 8) , (unique, 0x10000115, 8) , (const, 0x1, 8), (unique, 0x10000115, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x1000014b, 8), (unique, 0x1000014b, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x0, 8) MULTIEQUAL (ram, 0x0, 8) , (ram, 0x0, 8) , (ram, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x158, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x158, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000015b, 8) , (const, 0x9, 4), (unique, 0x1000015b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x18a, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x18a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000163, 8) , (const, 0x16, 4), (unique, 0x10000163, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x12242d, 1)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x190, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x190, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000016b, 8) , (const, 0x54, 4), (unique, 0x1000016b, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x12242d, 1)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x196, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x196, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000173, 8) , (const, 0x7, 4), (unique, 0x10000173, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae68, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  BRANCH (ram, 0x12242d, 1)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd4, 4)]
[ ---  CALL (ram, 0x1303d0, 8) , (unique, 0x100000ed, 8) , (unique, 0x100000dd, 8) , (const, 0x5b, 4) , (unique, 0x100000e5, 8), (unique, 0x100000ed, 8) COPY (const, 0x2b7550, 8), (unique, 0x100000e5, 8) COPY (const, 0x2b3820, 8), (unique, 0x100000dd, 8) COPY (const, 0x2b3818, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0xd4, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0xd4, 4)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x12242d, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(ram, 0x0, 8) MULTIEQUAL (ram, 0x0, 8) , (ram, 0x0, 8) , (ram, 0x0, 8) , (ram, 0x0, 8) , (ram, 0x0, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x122535, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000017b, 8), (unique, 0x1000017b, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x184, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x184, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x184, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
