[ ---  CBRANCH (ram, 0x1211c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x8, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1211e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1211e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000114, 8) COPY (ram, 0x0, 8)]
[ ---  BRANCH (ram, 0x121076, 1)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1210c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[(unique, 0x1000010c, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1210c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x61, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x61, 4)]
[(register, 0x0, 4) CALL (ram, 0x121760, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x10, 8) PTRADD (register, 0xa0, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x80, 8) PTRADD (register, 0x80, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x1000010c, 8) , (unique, 0x10000114, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x74, 4), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x61, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x74, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x61, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (unique, 0x10000124, 8), (unique, 0x10000124, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (register, 0xa0, 8) , (unique, 0x100000ec, 8) , (const, 0x1, 8), (unique, 0x100000ec, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x1000011c, 8), (unique, 0x1000011c, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1211e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x127, 4)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x127, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x127, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x127, 4)]
[(register, 0x0, 4) CALL (ram, 0x121760, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8)]
[ ---  BRANCH (ram, 0x1210a1, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0xf9, 4)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0xf9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xf9, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xf9, 4)]
[(register, 0x0, 4) CALL (ram, 0x121760, 8) , (register, 0x38, 8) , (const, 0x0, 8) , (const, 0x0, 8) , (register, 0x8, 8) , (register, 0x80, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc0, 8), (register, 0x80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8)]
[ ---  BRANCH (ram, 0x121096, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x0, 8) MULTIEQUAL (ram, 0x0, 8) , (ram, 0x0, 8)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1210a1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0xbd80, 8)]
[(ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x9a, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x9a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (unique, 0x10000134, 8), (unique, 0x10000134, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) PTRADD (register, 0x28, 8) , (unique, 0x100000f4, 8) , (const, 0x1, 8), (unique, 0x100000f4, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0x1000012c, 8), (unique, 0x1000012c, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(ram, 0x0, 8) MULTIEQUAL (ram, 0x0, 8) , (ram, 0x0, 8) , (ram, 0x0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  BRANCHIND (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000013c, 8) , (const, 0x9, 4), (unique, 0x1000013c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x14e, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14e, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000144, 8) , (const, 0x16, 4), (unique, 0x10000144, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x16b, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16b, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000014c, 8) , (const, 0x54, 4), (unique, 0x1000014c, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x188, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x188, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000154, 8) , (const, 0x7, 4), (unique, 0x10000154, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0x1a5, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a5, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffffffffffff, 8)]
[ ---  CALL (ram, 0x12dc40, 8) , (unique, 0x100000dc, 8) , (unique, 0x100000cc, 8) , (const, 0x5b, 4) , (unique, 0x100000d4, 8), (unique, 0x100000dc, 8) COPY (const, 0x28f760, 8), (unique, 0x100000d4, 8) COPY (const, 0x28bf00, 8), (unique, 0x100000cc, 8) COPY (const, 0x28bef8, 8)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8), (ram, 0x0, 8) INDIRECT (ram, 0x0, 8) , (const, 0xc7, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc7, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x0, 8) COPY (ram, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (stack, 0xffffffffffffffc0, 8)]
