[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004c1, 8), (unique, 0x100004c1, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1cc110, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1cbe99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004c9, 8), (unique, 0x100004c9, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5c, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x5c, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x5c, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x5c, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x5c, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x1cbe8e, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x5c, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5c, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x1000022a, 8), (unique, 0x1000022a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x100004d9, 8), (unique, 0x100004d9, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100004d1, 8), (unique, 0x100004d1, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0880, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0880, 8) , (const, 0x11, 4)]
[(unique, 0x10000491, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1cc010, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004e1, 8), (unique, 0x100004e1, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x70, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x70, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x70, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x70, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffa0, 8) COPY (const, 0x1cbea8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x70, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(unique, 0x10000481, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x70, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x100004a1, 8) COPY (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1cc0e9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100004e9, 8), (unique, 0x100004e9, 8) CALL (ram, 0x1211e0, 8) , (const, 0x1, 8) , (const, 0x20, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000501, 8), (unique, 0x10000501, 8) INT_ADD (register, 0x38, 8) , (const, 0xb0, 8)]
[(register, 0x30, 8) COPY (const, 0x2b51af, 8)]
[(register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_AND (register, 0x10, 4) , (const, 0x8, 4), (register, 0x10, 4) INT_NEGATE (unique, 0x100000cf, 4), (unique, 0x100000cf, 4) INT_2COMP (unique, 0x100000d3, 4), (unique, 0x100000d3, 4) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f1, 8), (unique, 0x100004f1, 8) INT_ADD (register, 0x38, 8) , (const, 0x34, 8)]
[(register, 0x38, 8) INT_AND (unique, 0x100000e3, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100000e3, 8) INT_2COMP (unique, 0x12600, 8), (unique, 0x12600, 8) INT_ZEXT (register, 0x200, 1), (register, 0x200, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x0, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000509, 8), (unique, 0x10000509, 8) INT_ADD (register, 0x38, 8) , (const, 0x34, 8)]
[ ---  CBRANCH (ram, 0x1cbeee, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100004f9, 8), (unique, 0x100004f9, 8) INT_ADD (register, 0x38, 8) , (const, 0x34, 8)]
[(register, 0x30, 8) COPY (const, 0x2b3c79, 8)]
[(register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8)]
[(register, 0x88, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000489, 8) COPY (unique, 0xbd80, 8)]
[ ---  BRANCH (ram, 0x1cbf10, 1)]
[(register, 0x88, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x1cbf00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000489, 8) , (register, 0x0, 8)]
[(register, 0x88, 8) INT_ADD (register, 0x88, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2f, 1)]
[(register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x10000272, 8) , (unique, 0x100000fc, 8) , (const, 0x1, 8), (unique, 0x10000272, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000fc, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000519, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000519, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000262, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) INT_SUB (unique, 0x3880, 8) , (unique, 0x10000511, 8), (unique, 0x10000511, 8) CAST (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x29, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x1000028a, 8) , (unique, 0x100000fc, 8) , (const, 0x1, 8), (unique, 0x1000028a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000fc, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000519, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000519, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000262, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) INT_SUB (unique, 0x3880, 8) , (unique, 0x10000511, 8), (unique, 0x10000511, 8) CAST (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x29, 8)]
[(register, 0x20, 8) PTRADD (unique, 0x100002a2, 8) , (unique, 0x100000fc, 8) , (const, 0x1, 8), (unique, 0x100002a2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100000fc, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000519, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000519, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000262, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) INT_SUB (unique, 0x3880, 8) , (unique, 0x10000511, 8), (unique, 0x10000511, 8) CAST (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x29, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100004b1, 8) COPY (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x10000529, 8), (unique, 0x10000529, 8) INT_ADD (unique, 0x10000521, 8) , (unique, 0x100000fc, 8), (unique, 0x10000521, 8) CAST (unique, 0x10000342, 8), (unique, 0x10000342, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x100000fc, 8) INT_2COMP (register, 0x0, 8), (register, 0x0, 8) INT_AND (unique, 0x10000519, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x10000519, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000262, 8) , (const, 0x1, 8), (unique, 0x10000262, 8) INT_SUB (unique, 0x3880, 8) , (unique, 0x10000511, 8), (unique, 0x10000511, 8) CAST (unique, 0xbd80, 8), (unique, 0x3880, 8) INT_ADD (register, 0x38, 8) , (const, 0x29, 8)]
[(unique, 0x10000449, 8) MULTIEQUAL (unique, 0xbd80, 8) , (register, 0x80, 8)]
[(unique, 0x10000452, 8) MULTIEQUAL (unique, 0x100004b1, 8) , (unique, 0x100004b9, 8)]
[(unique, 0x1000045b, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x10000463, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(unique, 0x1000046b, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(unique, 0x10000473, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  CBRANCH (ram, 0x1cc120, 1) , (unique, 0x1000045a, 1), (unique, 0x1000045a, 1) INT_NOTEQUAL (unique, 0x10000451, 1) , (const, 0x0, 1), (unique, 0x10000451, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(ram, 0x4ea9d8, 8) INDIRECT (unique, 0x1000045b, 8) , (const, 0x151, 4)]
[(ram, 0x4f0880, 8) INDIRECT (unique, 0x10000463, 8) , (const, 0x151, 4)]
[(ram, 0x4f0888, 8) INDIRECT (unique, 0x1000046b, 8) , (const, 0x151, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x10000473, 4) , (const, 0x151, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000549, 8) , (register, 0x8, 1), (unique, 0x10000549, 8) CAST (unique, 0x10000452, 8), (register, 0x8, 1) SUBPIECE (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000531, 8), (unique, 0x10000531, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000481, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x3300, 8) INT_MULT (register, 0x8, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_SEXT (unique, 0x10000451, 1)]
[(unique, 0x100004b9, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000541, 8), (unique, 0x10000541, 8) INT_ADD (unique, 0x10000539, 8) , (const, 0x1, 8), (unique, 0x10000539, 8) CAST (unique, 0x10000452, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x80, 8), (register, 0x80, 8) PTRADD (unique, 0x10000449, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1cc090, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x88, 8) , (const, 0x2, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (unique, 0x1000045b, 8) , (const, 0x2a2, 4)]
[(ram, 0x4f0880, 8) INDIRECT (unique, 0x10000463, 8) , (const, 0x2a2, 4)]
[(ram, 0x4f0888, 8) INDIRECT (unique, 0x1000046b, 8) , (const, 0x2a2, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (unique, 0x10000473, 4) , (const, 0x2a2, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000551, 8) , (const, 0x2f, 1), (unique, 0x10000551, 8) CAST (unique, 0x10000452, 8)]
[ ---  CBRANCH (ram, 0x1cc100, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x88, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000561, 8), (unique, 0x10000561, 8) INT_ADD (unique, 0x10000559, 8) , (const, 0x1, 8), (unique, 0x10000559, 8) CAST (unique, 0x10000452, 8)]
[ ---  BRANCH (ram, 0x1cbf68, 1)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x2a7, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x2a7, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x2a7, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2a7, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x2f, 1), (unique, 0x3100, 8) CAST (unique, 0x10000571, 8), (unique, 0x10000571, 8) INT_ADD (unique, 0x10000569, 8) , (const, 0x1, 8), (unique, 0x10000569, 8) CAST (unique, 0x10000452, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000581, 8), (unique, 0x10000581, 8) INT_ADD (unique, 0x10000579, 8) , (const, 0x2, 8), (unique, 0x10000579, 8) CAST (unique, 0x10000452, 8)]
[ ---  CBRANCH (ram, 0x1cbf68, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000589, 8) , (const, 0x1cc0b1, 8), (unique, 0x10000589, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100003a2, 8) , (unique, 0x1000039a, 8) , (const, 0x1, 8), (unique, 0x100003a2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000039a, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2be, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x2be, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x2be, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x2be, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x2be, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2be, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x2bd, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2be, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x2bd, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2be, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2bd, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2be, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2bd, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000591, 8), (unique, 0x10000591, 8) CALL (ram, 0x121230, 8) , (register, 0x0, 8) , (register, 0x30, 8) , (register, 0x10, 8)]
[ ---  BRANCH (ram, 0x1cbf68, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000599, 8) , (const, 0x0, 1), (unique, 0x10000599, 8) CAST (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000452, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005a1, 8) , (const, 0x1cbf8b, 8), (unique, 0x100005a1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000035a, 8) , (unique, 0x10000352, 8) , (const, 0x1, 8), (unique, 0x1000035a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000352, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x180, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x180, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x17a, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (unique, 0x1000045b, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x180, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x17a, 4), (ram, 0x4f0880, 8) MULTIEQUAL (unique, 0x10000463, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x180, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x17a, 4), (ram, 0x4f0888, 8) MULTIEQUAL (unique, 0x1000046b, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x180, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x17a, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (unique, 0x10000473, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x180, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x17f, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x180, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x17f, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x180, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x17f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x180, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x17f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1cc130, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x123a40, 8) , (unique, 0x1000020a, 8) , (unique, 0x3800, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x1000020a, 8) COPY (const, 0x2b3949, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000439, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x10000439, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8), (unique, 0x3100, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb0, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x297, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x297, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x297, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x297, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1cc060, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005a9, 8) , (const, 0x1cc065, 8), (unique, 0x100005a9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x1000038a, 8) , (unique, 0x10000382, 8) , (const, 0x1, 8), (unique, 0x1000038a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x10000382, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x285, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x285, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x284, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x285, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x284, 4)]
[ ---  CALL (ram, 0x123d60, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x294, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x285, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x294, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x285, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x294, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x285, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x294, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x285, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1ab, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1a9, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1ab, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1a9, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1ab, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1a9, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1ab, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1a9, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x1cc138, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0xbe00, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0x100003fb, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000403, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(unique, 0x1000040b, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(unique, 0x10000413, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(unique, 0x1000041b, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(unique, 0x1000041f, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(unique, 0x10000427, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x1cc0e1, 1) , (unique, 0x100003fa, 1), (unique, 0x100003fa, 1) INT_NOTEQUAL (unique, 0xbe00, 8) , (const, 0x0, 8), (unique, 0xbe00, 8) MULTIEQUAL (unique, 0xbe00, 8) , (unique, 0xbe00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005b1, 8), (unique, 0x100005b1, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x281, 4), (ram, 0x4ea9d8, 8) INDIRECT (unique, 0x10000403, 8) , (const, 0x27e, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x281, 4), (ram, 0x4f0880, 8) INDIRECT (unique, 0x1000040b, 8) , (const, 0x27e, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x281, 4), (ram, 0x4f0888, 8) INDIRECT (unique, 0x10000413, 8) , (const, 0x27e, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x281, 4), (ram, 0x4f08e8, 4) INDIRECT (unique, 0x1000041b, 4) , (const, 0x27e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001e2, 8), (unique, 0x100001e2, 8) PTRSUB (const, 0x0, 8) , (const, 0x1cbd70, 8), (unique, 0x3100, 8) CAST (unique, 0x100005b9, 8), (unique, 0x100005b9, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  BRANCH (ram, 0x1cc010, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005c1, 8) , (const, 0x1cbfcf, 8), (unique, 0x100005c1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x10000372, 8) , (unique, 0x1000036a, 8) , (const, 0x1, 8), (unique, 0x10000372, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x1000036a, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x1bd, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1bd, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1bd, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1bd, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1bd, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1bd, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1bd, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1bd, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1bc, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bd, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x1bc, 4)]
[ ---  CBRANCH (ram, 0x1cc0c5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x123a40, 8) , (unique, 0x3800, 8) , (unique, 0x100001fa, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x100001fa, 8) COPY (const, 0x2b3949, 8)]
[ ---  CBRANCH (ram, 0x1cc0c0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x1, 8) , (stack, 0xffffffffffffffb0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005c9, 8) , (const, 0x1cc0c5, 8), (unique, 0x100005c9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100003ba, 8) , (unique, 0x100003b2, 8) , (const, 0x1, 8), (unique, 0x100003ba, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100003b2, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x267, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x267, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x267, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x267, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x267, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x267, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x266, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x267, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x266, 4)]
[ ---  CALL (ram, 0x123d60, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x26a, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x26a, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x26a, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x26a, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (stack, 0xffffffffffffffb0, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1e9, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1e6, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1e9, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1e6, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1e9, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1e6, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1e9, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1e6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (stack, 0xffffffffffffffb8, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1cc0ce, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005d1, 8), (unique, 0x100005d1, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1f1, 4), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x1ee, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1f1, 4), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x1ee, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1f1, 4), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x1ee, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1f1, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x1ee, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100001da, 8), (unique, 0x100001da, 8) PTRSUB (const, 0x0, 8) , (const, 0x1cbd70, 8), (unique, 0x3100, 8) CAST (unique, 0x100005d9, 8), (unique, 0x100005d9, 8) INT_ADD (register, 0x38, 8) , (const, 0x20, 8)]
[(unique, 0x10000499, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1cc0e1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e1, 8) , (const, 0x1cc0e1, 8), (unique, 0x100005e1, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100003d2, 8) , (unique, 0x100003ca, 8) , (const, 0x1, 8), (unique, 0x100003d2, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100003ca, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25b, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x25b, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x25b, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x25b, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x25b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25b, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25b, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25a, 4)]
[ ---  CALL (ram, 0x123d60, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005e9, 8) , (const, 0x1cc0e9, 8), (unique, 0x100005e9, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (unique, 0x100003ea, 8) , (unique, 0x100003e2, 8) , (const, 0x1, 8), (unique, 0x100003ea, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffa8, 8), (unique, 0x100003e2, 8) INT_ADD (unique, 0x100000fc, 8) , (const, 0xfffffffffffffff8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x25f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x100003fb, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x25f, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (unique, 0x10000403, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x25f, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (unique, 0x1000040b, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x25f, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (unique, 0x10000413, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x25f, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (unique, 0x1000041b, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25f, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x1000041f, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x25e, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000427, 8)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[(unique, 0x100004a9, 8) COPY (register, 0x20, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x100004a1, 8) , (unique, 0x100004a9, 8)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x263, 4), (ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x263, 4), (ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x263, 4), (ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x263, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000021a, 8), (unique, 0x1000021a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e9ea0, 8), (unique, 0x3100, 8) CAST (unique, 0x100005f1, 8), (unique, 0x100005f1, 8) INT_ADD (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x1cc010, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000427, 8)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (unique, 0x1000041f, 8)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x100003fb, 8)]
[(register, 0x20, 8) MULTIEQUAL (unique, 0x10000491, 8) , (unique, 0x10000499, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1cc037, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4f08e8, 4) , (const, 0x0, 4), (ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000609, 8) , (const, 0x1cc037, 8), (unique, 0x10000609, 8) CAST (register, 0x20, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x223, 4)]
[(ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x223, 4)]
[(ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x223, 4)]
[(ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x223, 4)]
[(ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x223, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x222, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x223, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x222, 4)]
[ ---  CALLIND (register, 0x0, 8) , (unique, 0x10000222, 8), (unique, 0x10000222, 8) PTRSUB (const, 0x0, 8) , (const, 0x4eca60, 8), (register, 0x0, 8) CAST (unique, 0x10000601, 8), (unique, 0x10000601, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100005f9, 8), (unique, 0x100005f9, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4f0888, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4f0888, 8) , (const, 0x11, 4)]
[(stack, 0xffffffffffffffa0, 8) MULTIEQUAL (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8) , (stack, 0xffffffffffffffa0, 8)]
[(ram, 0x4f08e8, 4) MULTIEQUAL (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4) , (ram, 0x4f08e8, 4)]
[(ram, 0x4f0888, 8) MULTIEQUAL (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8) , (ram, 0x4f0888, 8)]
[(ram, 0x4f0880, 8) MULTIEQUAL (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8) , (ram, 0x4f0880, 8)]
[(ram, 0x4ea9d8, 8) MULTIEQUAL (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8) , (ram, 0x4ea9d8, 8)]
[(register, 0x20, 8) MULTIEQUAL (register, 0x20, 8) , (register, 0x20, 8) , (register, 0x20, 8)]
[ ---  CBRANCH (ram, 0x1cc146, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000611, 8), (unique, 0x10000611, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000619, 8) , (unique, 0x100001ea, 8), (unique, 0x10000619, 8) CAST (register, 0x20, 8), (unique, 0x100001ea, 8) PTRSUB (const, 0x0, 8) , (const, 0x1cc14b, 8), (register, 0x20, 8) PTRADD (register, 0x20, 8) , (const, 0xfffffffffffffff8, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x247, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x246, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x247, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x246, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4ea9d8, 8) COPY (ram, 0x4ea9d8, 8), (ram, 0x4ea9d8, 8) INDIRECT (ram, 0x4ea9d8, 8) , (const, 0x247, 4)]
[(ram, 0x4f0880, 8) COPY (ram, 0x4f0880, 8), (ram, 0x4f0880, 8) INDIRECT (ram, 0x4f0880, 8) , (const, 0x247, 4)]
[(ram, 0x4f0888, 8) COPY (ram, 0x4f0888, 8), (ram, 0x4f0888, 8) INDIRECT (ram, 0x4f0888, 8) , (const, 0x247, 4)]
[(ram, 0x4f08e8, 4) COPY (ram, 0x4f08e8, 4), (ram, 0x4f08e8, 4) INDIRECT (ram, 0x4f08e8, 4) , (const, 0x247, 4)]
[ ---  RETURN (const, 0x1, 4)]
