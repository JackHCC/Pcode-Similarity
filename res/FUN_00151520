[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x33, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2e, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x33, 4), (ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x2e, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x33, 4), (ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x2e, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x33, 4), (ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x2e, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x33, 4), (ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x2e, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x33, 4), (ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x2e, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x33, 4), (ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x2e, 4)]
[(ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x33, 4), (ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x2e, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x33, 4), (ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x2e, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x33, 4), (ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x2e, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x33, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x33, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2e, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x33, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x2e, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000318, 8), (unique, 0x10000318, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) CALL (ram, 0x1426e0, 8) , (unique, 0x100001c7, 8), (unique, 0x100001c7, 8) COPY (const, 0x2b3ec0, 8)]
[ ---  CBRANCH (ram, 0x1515e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000320, 8), (unique, 0x10000320, 8) CALL (ram, 0x1426e0, 8) , (unique, 0x100001bf, 8), (unique, 0x100001bf, 8) COPY (const, 0x2b3eb8, 8)]
[ ---  CBRANCH (ram, 0x1515e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000328, 8), (unique, 0x10000328, 8) CAST (register, 0x0, 8)]
[(ram, 0x4ed80c, 4) MULTIEQUAL (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4)]
[ ---  CBRANCH (ram, 0x1517a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (ram, 0x2a9cc4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000330, 8), (unique, 0x10000330, 8) CAST (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x28, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x15158b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xba80, 1) , (ram, 0x2a9cc8, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000340, 8), (unique, 0x10000340, 8) INT_ADD (unique, 0x10000338, 8) , (const, 0x4, 8), (unique, 0x10000338, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1517c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000350, 8), (unique, 0x10000350, 8) INT_ADD (unique, 0x10000348, 8) , (const, 0x5, 8), (unique, 0x10000348, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x15158b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1515a5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x7974697265766573, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x151866, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000358, 8), (unique, 0x10000358, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x151866, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1515c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd00, 4) , (const, 0x74786574, 4), (unique, 0xbd00, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000360, 8), (unique, 0x10000360, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x151875, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000370, 8), (unique, 0x10000370, 8) INT_ADD (unique, 0x10000368, 8) , (const, 0x4, 8), (unique, 0x10000368, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x151875, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1517f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (ram, 0x2a9cf4, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000378, 8), (unique, 0x10000378, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1515d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb80, 2) , (ram, 0x2a9cf8, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000388, 8), (unique, 0x10000388, 8) INT_ADD (unique, 0x10000380, 8) , (const, 0x4, 8), (unique, 0x10000380, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x151811, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000398, 8), (unique, 0x10000398, 8) INT_ADD (unique, 0x10000390, 8) , (const, 0x6, 8), (unique, 0x10000390, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1515d1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x151820, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb80, 2) , (ram, 0x2a9d04, 2), (unique, 0xbb80, 2) LOAD (const, 0x1b1, 4) , (unique, 0x100003a0, 8), (unique, 0x100003a0, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1515e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xba80, 1) , (ram, 0x2a9d06, 1), (unique, 0xba80, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003b0, 8), (unique, 0x100003b0, 8) INT_ADD (unique, 0x100003a8, 8) , (const, 0x2, 8), (unique, 0x100003a8, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x151840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003c0, 8), (unique, 0x100003c0, 8) INT_ADD (unique, 0x100003b8, 8) , (const, 0x3, 8), (unique, 0x100003b8, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1515e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(ram, 0x4ed80c, 4) COPY (const, 0x1f, 4)]
[(register, 0x0, 8) COPY (const, 0x3, 8)]
[(register, 0x30, 4) COPY (const, 0x10, 4)]
[ ---  BRANCH (ram, 0x1517d2, 1)]
[(register, 0x0, 8) COPY (const, 0x6, 8)]
[(register, 0x30, 4) COPY (const, 0x8, 4)]
[ ---  BRANCH (ram, 0x1517d2, 1)]
[(register, 0x0, 8) COPY (const, 0x4, 8)]
[(register, 0x30, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x1517d2, 1)]
[(register, 0x0, 8) COPY (const, 0x8, 8)]
[(register, 0x30, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x1517d2, 1)]
[(register, 0x0, 8) COPY (const, 0x5, 8)]
[(register, 0x30, 4) COPY (const, 0x1, 4)]
[(ram, 0x4ed80c, 4) INT_OR (ram, 0x4ed80c, 4) , (register, 0x30, 4), (register, 0x30, 4) MULTIEQUAL (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4) , (register, 0x30, 4)]
[ ---  CBRANCH (ram, 0x151850, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003d8, 8), (unique, 0x100003d8, 8) CAST (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x100003d0, 8), (unique, 0x100003d0, 8) INT_ADD (unique, 0x100003c8, 8) , (register, 0x0, 8), (unique, 0x100003c8, 8) CAST (register, 0x28, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x151580, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(unique, 0x3100, 8) CAST (unique, 0x100003f8, 8), (unique, 0x100003f8, 8) INT_ADD (unique, 0x100003f0, 8) , (const, 0x1, 8), (unique, 0x100003f0, 8) CAST (register, 0x28, 8)]
[ ---  CBRANCH (ram, 0x1515ec, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100003e8, 8), (unique, 0x100003e8, 8) INT_ADD (unique, 0x100003e0, 8) , (const, 0x1, 8), (unique, 0x100003e0, 8) CAST (register, 0x28, 8)]
[(ram, 0x4ed80c, 4) MULTIEQUAL (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4)]
[(unique, 0x100002c8, 4) COPY (ram, 0x4ed810, 4)]
[ ---  CBRANCH (ram, 0x1516c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x151611, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4f08f8, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4ed810, 4) , (const, 0x0, 4)]
[(ram, 0x4ed810, 4) COPY (const, 0x1, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CBRANCH (const, 0x4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4ed810, 4) , (const, 0x0, 4)]
[(ram, 0x4ed810, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x151634, 1)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x2ae, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x2ae, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x2ae, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x2ae, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x2ae, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x2ae, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x2ae, 4)]
[(ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x2ae, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x2ae, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x2ae, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x2ae, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x2ae, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x2ae, 4)]
[ ---  CALL (ram, 0x230690, 8) , (unique, 0x100001d7, 8), (unique, 0x100001d7, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed810, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed810, 4) MULTIEQUAL (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4)]
[(ram, 0x4ed80c, 4) MULTIEQUAL (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4)]
[(ram, 0x4eb770, 8) MULTIEQUAL (ram, 0x4eb770, 8) , (ram, 0x4eb770, 8) , (ram, 0x4eb770, 8)]
[(ram, 0x2a9d06, 1) MULTIEQUAL (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1)]
[(ram, 0x2a9d04, 2) MULTIEQUAL (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2)]
[(ram, 0x2a9cf8, 2) MULTIEQUAL (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2)]
[(ram, 0x2a9cf4, 4) MULTIEQUAL (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4)]
[(ram, 0x2a9cc8, 1) MULTIEQUAL (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1)]
[(ram, 0x2a9cc4, 4) MULTIEQUAL (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(unique, 0x10000211, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x18, 8)]
[(unique, 0x10000219, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000221, 4) MULTIEQUAL (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4)]
[(unique, 0x10000225, 1) MULTIEQUAL (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1)]
[(unique, 0x10000226, 4) MULTIEQUAL (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4)]
[(unique, 0x1000022a, 2) MULTIEQUAL (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2)]
[(unique, 0x1000022c, 2) MULTIEQUAL (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2)]
[(unique, 0x1000022e, 1) MULTIEQUAL (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1)]
[(unique, 0x1000022f, 8) MULTIEQUAL (ram, 0x4eb770, 8) , (ram, 0x4eb770, 8)]
[(unique, 0x10000237, 4) MULTIEQUAL (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4)]
[(unique, 0x1000023b, 4) MULTIEQUAL (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4)]
[(unique, 0x1000023f, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(unique, 0x10000243, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x1000024b, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x15168c, 1) , (unique, 0x10000210, 1), (unique, 0x10000210, 1) INT_NOTEQUAL (unique, 0x1000020f, 1) , (const, 0x0, 1), (unique, 0x1000020f, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000219, 8) , (const, 0x10d, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (unique, 0x10000221, 4) , (const, 0x10d, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (unique, 0x10000225, 1) , (const, 0x10d, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (unique, 0x10000226, 4) , (const, 0x10d, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (unique, 0x1000022a, 2) , (const, 0x10d, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (unique, 0x1000022c, 2) , (const, 0x10d, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (unique, 0x1000022e, 1) , (const, 0x10d, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (unique, 0x10000237, 4) , (const, 0x10d, 4)]
[(ram, 0x4ed810, 4) INDIRECT (unique, 0x1000023b, 4) , (const, 0x10d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000023f, 4) , (const, 0x10d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000024b, 8) , (const, 0x10d, 4)]
[(unique, 0x10000280, 8) COPY (ram, 0x4eb770, 8), (ram, 0x4eb770, 8) INDIRECT (unique, 0x1000022f, 8) , (const, 0x10d, 4)]
[(unique, 0x100002e0, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000243, 8) , (const, 0x10d, 4)]
[ ---  CBRANCH (ram, 0x151677, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000211, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121040, 8) , (unique, 0x10000211, 8) , (const, 0x3a, 4)]
[(unique, 0x10000253, 8) PTRADD (unique, 0x1000026a, 8) , (const, 0x1, 8) , (const, 0x1, 8), (unique, 0x1000026a, 8) MULTIEQUAL (unique, 0x10000253, 8) , (unique, 0x10000211, 8)]
[ ---  CBRANCH (ram, 0x151672, 1) , (unique, 0x1000025b, 1), (unique, 0x1000025b, 1) INT_NOTEQUAL (unique, 0x10000272, 1) , (const, 0x2c, 1), (unique, 0x10000272, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0x1000020f, 1)]
[ ---  CBRANCH (ram, 0x151668, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000253, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000253, 8)]
[(unique, 0x10000288, 8) COPY (ram, 0x4eb770, 8)]
[(unique, 0x100002e8, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x151677, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x10000253, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x148, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x148, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x148, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x148, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x148, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x148, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x148, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x148, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x148, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x148, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x148, 4)]
[(register, 0x0, 8) CALL (ram, 0x145110, 8) , (unique, 0x10000253, 8) , (register, 0x20, 8) , (const, 0x0, 4)]
[(unique, 0x10000290, 8) COPY (ram, 0x4eb770, 8), (ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x148, 4)]
[(unique, 0x100002f0, 8) COPY (stack, 0xffffffffffffffb8, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x148, 4)]
[ ---  CBRANCH (ram, 0x151677, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0xffffffffffffffb8, 8) , (register, 0x0, 8), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x148, 4)]
[(unique, 0x10000298, 8) COPY (ram, 0x4eb770, 8)]
[(unique, 0x100002f8, 8) COPY (stack, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x151677, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000253, 8)]
[(register, 0xa0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(unique, 0x100002a0, 8) COPY (ram, 0x4eb770, 8)]
[(unique, 0x10000300, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffffb8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x151677, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100002a8, 8) COPY (ram, 0x4eb770, 8)]
[ ---  CBRANCH (ram, 0x151677, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x4, 4) , (register, 0xa0, 4)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x18d, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x18d, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x18d, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x18d, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x18d, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x18d, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x18d, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x18d, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x18d, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x18d, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000300, 8) , (const, 0x18d, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18d, 4)]
[(unique, 0x10000278, 8) COPY (ram, 0x4eb770, 8), (ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x18d, 4)]
[(unique, 0x100002b0, 8) COPY (ram, 0x4eb770, 8), (ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x18d, 4)]
[ ---  CBRANCH (ram, 0x151677, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x19d9f0, 8) , (unique, 0x3100, 8) , (unique, 0x10000408, 8), (unique, 0x10000408, 8) CAST (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000153, 8) , (const, 0x1, 8), (unique, 0x10000153, 8) INT_2COMP (unique, 0x10000400, 8), (unique, 0x10000400, 8) CAST (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x151779, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eb770, 8) , (const, 0x0, 8)]
[(unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000410, 8), (unique, 0x10000410, 8) CAST (ram, 0x4eb770, 8)]
[(unique, 0x10000310, 8) COPY (unique, 0x10000418, 8), (unique, 0x10000418, 8) CAST (ram, 0x4eb770, 8)]
[(unique, 0x1000025d, 8) MULTIEQUAL (unique, 0x10000310, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x151770, 1) , (unique, 0x1000025c, 1), (unique, 0x1000025c, 1) INT_NOTEQUAL (register, 0xa0, 4) , (unique, 0x5200, 4), (unique, 0x5200, 4) MULTIEQUAL (unique, 0x5200, 4) , (unique, 0x5200, 4)]
[ ---  CBRANCH (ram, 0x151768, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000420, 8), (unique, 0x10000420, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000025d, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x259, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x259, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x259, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x259, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x259, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x259, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x259, 4)]
[(ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x259, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x259, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x259, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x259, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x259, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x259, 4)]
[ ---  CBRANCH (ram, 0x15188d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000428, 8), (unique, 0x10000428, 8) CALL (ram, 0x1212c0, 8) , (const, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x271, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x271, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x271, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x271, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x271, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x271, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x271, 4)]
[(ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x271, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x271, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x271, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x271, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x271, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x271, 4)]
[ ---  CALL (ram, 0x1212c8, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x151677, 1)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0xa0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000430, 8) , (unique, 0x10000278, 8), (unique, 0x10000430, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x26b, 4), (ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x268, 4), (ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x265, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x26b, 4), (ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x268, 4), (ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x265, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x26b, 4), (ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x268, 4), (ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x265, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x26b, 4), (ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x268, 4), (ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x265, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x26b, 4), (ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x268, 4), (ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x265, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x26b, 4), (ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x268, 4), (ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x265, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x26b, 4), (ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x268, 4), (ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x265, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x26b, 4), (ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x268, 4), (ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x265, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x26b, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x268, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x265, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000438, 8) , (register, 0x0, 8), (unique, 0x10000438, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100002c0, 8) COPY (unique, 0x10000440, 8), (unique, 0x10000440, 8) CAST (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x151677, 1)]
[(unique, 0x5200, 4) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x1b6, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x1b6, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x1b6, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x1b6, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x1b6, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x1b6, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x1b6, 4)]
[(ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x1b6, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x1b6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000448, 8) , (register, 0x0, 8), (unique, 0x10000448, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000025d, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(unique, 0x100002b8, 8) COPY (ram, 0x4eb770, 8), (ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x1b6, 4)]
[ ---  BRANCH (ram, 0x151677, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100002e0, 8) , (unique, 0x100002e8, 8) , (unique, 0x100002f0, 8) , (unique, 0x100002f8, 8) , (unique, 0x10000300, 8) , (unique, 0x10000300, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4)]
[(ram, 0x4ed810, 4) MULTIEQUAL (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4) , (ram, 0x4ed810, 4)]
[(ram, 0x4ed80c, 4) MULTIEQUAL (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4)]
[(ram, 0x4eb770, 8) MULTIEQUAL (unique, 0x10000280, 8) , (unique, 0x10000288, 8) , (unique, 0x10000290, 8) , (unique, 0x10000298, 8) , (unique, 0x100002a0, 8) , (unique, 0x100002a8, 8) , (unique, 0x100002b0, 8) , (unique, 0x100002b8, 8) , (unique, 0x100002c0, 8) , (ram, 0x4eb770, 8) , (ram, 0x4eb770, 8)]
[(ram, 0x2a9d06, 1) MULTIEQUAL (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1)]
[(ram, 0x2a9d04, 2) MULTIEQUAL (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2)]
[(ram, 0x2a9cf8, 2) MULTIEQUAL (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2)]
[(ram, 0x2a9cf4, 4) MULTIEQUAL (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4)]
[(ram, 0x2a9cc8, 1) MULTIEQUAL (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1)]
[(ram, 0x2a9cc4, 4) MULTIEQUAL (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000010a, 8) , (const, 0x1, 8), (unique, 0x1000010a, 8) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1516a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000023f, 4) , (const, 0x0, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[(unique, 0x100002d0, 4) COPY (unique, 0x10000265, 4), (unique, 0x10000265, 4) INT_ADD (unique, 0x1000023b, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x1516c2, 1) , (unique, 0x10000269, 1), (unique, 0x10000269, 1) INT_NOTEQUAL (unique, 0x10000265, 4) , (const, 0x0, 4), (unique, 0x10000265, 4) INT_ADD (unique, 0x1000023b, 4) , (const, 0xffffffff, 4)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000219, 8) , (const, 0x235, 4)]
[(ram, 0x2a9cc4, 4) INDIRECT (unique, 0x10000221, 4) , (const, 0x235, 4)]
[(ram, 0x2a9cc8, 1) INDIRECT (unique, 0x10000225, 1) , (const, 0x235, 4)]
[(ram, 0x2a9cf4, 4) INDIRECT (unique, 0x10000226, 4) , (const, 0x235, 4)]
[(ram, 0x2a9cf8, 2) INDIRECT (unique, 0x1000022a, 2) , (const, 0x235, 4)]
[(ram, 0x2a9d04, 2) INDIRECT (unique, 0x1000022c, 2) , (const, 0x235, 4)]
[(ram, 0x2a9d06, 1) INDIRECT (unique, 0x1000022e, 1) , (const, 0x235, 4)]
[(ram, 0x4eb770, 8) INDIRECT (unique, 0x1000022f, 8) , (const, 0x235, 4)]
[(ram, 0x4ed80c, 4) INDIRECT (unique, 0x10000237, 4) , (const, 0x235, 4)]
[(ram, 0x4f08f8, 4) INDIRECT (unique, 0x1000023f, 4) , (const, 0x235, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x10000243, 8) , (const, 0x235, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x1000024b, 8) , (const, 0x235, 4)]
[ ---  CALL (ram, 0x2306c0, 8) , (unique, 0x100001cf, 8), (unique, 0x100001cf, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ed810, 8)]
[(unique, 0x100002cc, 4) COPY (ram, 0x4ed810, 4), (ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x235, 4), (ram, 0x4ed810, 4) INT_ADD (unique, 0x1000023b, 4) , (const, 0xffffffff, 4)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x10000243, 8)]
[(ram, 0x4f08f8, 4) MULTIEQUAL (ram, 0x4f08f8, 4) , (ram, 0x4f08f8, 4) , (unique, 0x1000023f, 4)]
[(ram, 0x4ed80c, 4) MULTIEQUAL (ram, 0x4ed80c, 4) , (ram, 0x4ed80c, 4) , (unique, 0x10000237, 4)]
[(ram, 0x4eb770, 8) MULTIEQUAL (ram, 0x4eb770, 8) , (ram, 0x4eb770, 8) , (unique, 0x1000022f, 8)]
[(ram, 0x2a9d06, 1) MULTIEQUAL (ram, 0x2a9d06, 1) , (ram, 0x2a9d06, 1) , (unique, 0x1000022e, 1)]
[(ram, 0x2a9d04, 2) MULTIEQUAL (ram, 0x2a9d04, 2) , (ram, 0x2a9d04, 2) , (unique, 0x1000022c, 2)]
[(ram, 0x2a9cf8, 2) MULTIEQUAL (ram, 0x2a9cf8, 2) , (ram, 0x2a9cf8, 2) , (unique, 0x1000022a, 2)]
[(ram, 0x2a9cf4, 4) MULTIEQUAL (ram, 0x2a9cf4, 4) , (ram, 0x2a9cf4, 4) , (unique, 0x10000226, 4)]
[(ram, 0x2a9cc8, 1) MULTIEQUAL (ram, 0x2a9cc8, 1) , (ram, 0x2a9cc8, 1) , (unique, 0x10000225, 1)]
[(ram, 0x2a9cc4, 4) MULTIEQUAL (ram, 0x2a9cc4, 4) , (ram, 0x2a9cc4, 4) , (unique, 0x10000221, 4)]
[(ram, 0x4ed810, 4) COPY (unique, 0x100002d4, 4), (unique, 0x100002d4, 4) MULTIEQUAL (unique, 0x100002c8, 4) , (unique, 0x100002cc, 4) , (unique, 0x100002d0, 4)]
[ ---  CBRANCH (ram, 0x15189a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000450, 8), (unique, 0x10000450, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000219, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x1000024b, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x226, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x226, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x2a9cc4, 4) COPY (ram, 0x2a9cc4, 4), (ram, 0x2a9cc4, 4) INDIRECT (ram, 0x2a9cc4, 4) , (const, 0x226, 4)]
[(ram, 0x2a9cc8, 1) COPY (ram, 0x2a9cc8, 1), (ram, 0x2a9cc8, 1) INDIRECT (ram, 0x2a9cc8, 1) , (const, 0x226, 4)]
[(ram, 0x2a9cf4, 4) COPY (ram, 0x2a9cf4, 4), (ram, 0x2a9cf4, 4) INDIRECT (ram, 0x2a9cf4, 4) , (const, 0x226, 4)]
[(ram, 0x2a9cf8, 2) COPY (ram, 0x2a9cf8, 2), (ram, 0x2a9cf8, 2) INDIRECT (ram, 0x2a9cf8, 2) , (const, 0x226, 4)]
[(ram, 0x2a9d04, 2) COPY (ram, 0x2a9d04, 2), (ram, 0x2a9d04, 2) INDIRECT (ram, 0x2a9d04, 2) , (const, 0x226, 4)]
[(ram, 0x2a9d06, 1) COPY (ram, 0x2a9d06, 1), (ram, 0x2a9d06, 1) INDIRECT (ram, 0x2a9d06, 1) , (const, 0x226, 4)]
[(ram, 0x4eb770, 8) COPY (ram, 0x4eb770, 8), (ram, 0x4eb770, 8) INDIRECT (ram, 0x4eb770, 8) , (const, 0x226, 4)]
[(ram, 0x4ed80c, 4) COPY (ram, 0x4ed80c, 4), (ram, 0x4ed80c, 4) INDIRECT (ram, 0x4ed80c, 4) , (const, 0x226, 4)]
[(ram, 0x4ed810, 4) COPY (ram, 0x4ed810, 4), (ram, 0x4ed810, 4) INDIRECT (ram, 0x4ed810, 4) , (const, 0x226, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4), (ram, 0x4f08f8, 4) INDIRECT (ram, 0x4f08f8, 4) , (const, 0x226, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x2a9cc4, 4) COPY (ram, 0x2a9cc4, 4)]
[(ram, 0x2a9cc8, 1) COPY (ram, 0x2a9cc8, 1)]
[(ram, 0x2a9cf4, 4) COPY (ram, 0x2a9cf4, 4)]
[(ram, 0x2a9cf8, 2) COPY (ram, 0x2a9cf8, 2)]
[(ram, 0x2a9d04, 2) COPY (ram, 0x2a9d04, 2)]
[(ram, 0x2a9d06, 1) COPY (ram, 0x2a9d06, 1)]
[(ram, 0x4eb770, 8) COPY (ram, 0x4eb770, 8)]
[(ram, 0x4ed80c, 4) COPY (ram, 0x4ed80c, 4)]
[(ram, 0x4ed810, 4) COPY (ram, 0x4ed810, 4)]
[(ram, 0x4f08f8, 4) COPY (ram, 0x4f08f8, 4)]
[ ---  RETURN (const, 0x0, 8)]
