[(unique, 0x1000018d, 4) COPY (ram, 0x4c3150, 4)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[ ---  CBRANCH (ram, 0x183b60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001a1, 8), (unique, 0x100001a1, 8) CAST (ram, 0x4c2ef8, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (stack, 0x0, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1e7, 4)]
[(ram, 0x4c2ef8, 8) COPY (ram, 0x4c2ef8, 8), (ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x1e7, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1e7, 4)]
[(ram, 0x4c3160, 8) COPY (ram, 0x4c3160, 8), (ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x1e7, 4)]
[(ram, 0x4c3170, 8) COPY (ram, 0x4c3170, 8), (ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x1e7, 4)]
[(ram, 0x4c3188, 4) COPY (ram, 0x4c3188, 4), (ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x1e7, 4)]
[(ram, 0x4c3194, 4) COPY (ram, 0x4c3194, 4), (ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x1e7, 4)]
[(ram, 0x4c3198, 8) COPY (ram, 0x4c3198, 8), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1e7, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1e7, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183abc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x3100, 8) INT_SUB (unique, 0x100001b9, 8) , (const, 0x10, 8), (unique, 0x100001b9, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x183ad0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000070, 8) , (const, 0x0, 8), (unique, 0x10000070, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001b1, 8), (unique, 0x100001b1, 8) INT_ADD (unique, 0x100001a9, 8) , (const, 0xfffffffffffffff8, 8), (unique, 0x100001a9, 8) CAST (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x183b08, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c3194, 4) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x183b08, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (ram, 0x4c3170, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x183b08, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x2000001, 8)]
[(unique, 0x1000011c, 8) INT_MULT (register, 0x0, 8) , (const, 0x2, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  BRANCH (ram, 0x183b0c, 1)]
[(ram, 0x4c3170, 8) MULTIEQUAL (register, 0x0, 8) , (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8)]
[(ram, 0x4c3160, 8) MULTIEQUAL (unique, 0x1000011c, 8) , (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8)]
[ ---  CBRANCH (ram, 0x183b78, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x59300, 8) , (const, 0x0, 8), (unique, 0x59300, 8) INT_AND (register, 0x0, 8) , (register, 0x8, 8), (register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100001e1, 8), (unique, 0x100001e1, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (ram, 0x4c2e70, 8) , (const, 0x18, 8) , (const, 0x1, 8), (register, 0x8, 8) INT_OR (unique, 0x100001d9, 8) , (unique, 0x3400, 8), (unique, 0x100001d9, 8) CAST (register, 0x10, 8), (register, 0x10, 8) CAST (unique, 0x100001d1, 8), (unique, 0x100001d1, 8) INT_SUB (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3400, 8) INT_ADD (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100001c9, 8), (unique, 0x100001c9, 8) INT_ADD (unique, 0x100001c1, 8) , (const, 0xfffffffffffffff0, 8), (unique, 0x100001c1, 8) CAST (register, 0x38, 8), (register, 0x0, 8) INT_AND (unique, 0xbd80, 8) , (const, 0xfffffffffffffff8, 8)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CALLOTHER (const, 0x11, 4)]
[ ---  CALL (ram, 0x200e80, 8) , (register, 0x10, 8) , (unique, 0x3400, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0xfa, 4)]
[(ram, 0x4c2ef8, 8) COPY (ram, 0x4c2ef8, 8), (ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0xfa, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0xfa, 4)]
[(ram, 0x4c3160, 8) COPY (ram, 0x4c3160, 8), (ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0xfa, 4)]
[(ram, 0x4c3170, 8) COPY (ram, 0x4c3170, 8), (ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0xfa, 4)]
[(ram, 0x4c3188, 4) COPY (ram, 0x4c3188, 4), (ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0xfa, 4), (ram, 0x4c3188, 4) INT_ADD (ram, 0x4c3188, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4c3194, 4) COPY (ram, 0x4c3194, 4), (ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0xfa, 4)]
[(ram, 0x4c3198, 8) COPY (ram, 0x4c3198, 8), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0xfa, 4), (ram, 0x4c3198, 8) INT_SUB (ram, 0x4c3198, 8) , (unique, 0x3400, 8)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0xfa, 4)]
[ ---  RETURN (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x183c1d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5, 4), (register, 0x0, 4) INT_AND (ram, 0x4c3150, 4) , (const, 0x5, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1d7, 4)]
[(ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x1d7, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1d7, 4)]
[(ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x1d7, 4)]
[(ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x1d7, 4)]
[(ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x1d7, 4)]
[(ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x1d7, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1d7, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1d7, 4)]
[ ---  CALL (ram, 0x177450, 8) , (register, 0x18, 4) , (unique, 0x1000014a, 8) , (unique, 0x10000162, 8), (unique, 0x10000162, 8) COPY (const, 0x2906d8, 8), (unique, 0x1000014a, 8) COPY (const, 0x28eed2, 8), (register, 0x18, 4) INT_AND (ram, 0x4c3150, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x183abc, 1)]
[ ---  CBRANCH (ram, 0x183ba0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100000c8, 4) , (const, 0x0, 4), (unique, 0x100000c8, 4) INT_AND (ram, 0x4c3150, 4) , (const, 0x1, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x154, 4)]
[(ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x154, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x154, 4)]
[(ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x154, 4)]
[(ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x154, 4)]
[(ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x154, 4)]
[(ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x154, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x154, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x154, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x154, 4), (stack, 0xffffffffffffffc8, 1) COPY (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x183be3, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x20, 8) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001e9, 8), (unique, 0x100001e9, 8) CALL (ram, 0x14a670, 8) , (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x10, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x17a, 4)]
[(ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x17a, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x17a, 4)]
[(ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x17a, 4)]
[(ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x17a, 4)]
[(ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x17a, 4)]
[(ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x17a, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x17a, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x17a, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x17a, 4)]
[ ---  CALL (ram, 0x18e810, 8) , (register, 0x20, 8) , (const, 0x30, 8)]
[(register, 0x0, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc8, 1) MULTIEQUAL (stack, 0xffffffffffffffc8, 1) , (stack, 0xffffffffffffffc8, 1)]
[(ram, 0x4c3198, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8)]
[(ram, 0x4c3194, 4) MULTIEQUAL (ram, 0x4c3194, 4) , (ram, 0x4c3194, 4)]
[(ram, 0x4c3188, 4) MULTIEQUAL (ram, 0x4c3188, 4) , (ram, 0x4c3188, 4)]
[(ram, 0x4c3170, 8) MULTIEQUAL (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8)]
[(ram, 0x4c3160, 8) MULTIEQUAL (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8)]
[(ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(ram, 0x4c2ef8, 8) MULTIEQUAL (ram, 0x4c2ef8, 8) , (ram, 0x4c2ef8, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000191, 8) COPY (register, 0x10, 8), (register, 0x10, 8) COPY (const, 0x28d44b, 8)]
[ ---  CBRANCH (ram, 0x183c0c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[(unique, 0x10000199, 8) COPY (unique, 0xbd80, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x1bb, 4)]
[(ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x1bb, 4)]
[(ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x1bb, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x1bb, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x1bb, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (stack, 0xffffffffffffffc8, 1) , (const, 0x1bb, 4)]
[ ---  CALL (ram, 0x177450, 8) , (register, 0x18, 4) , (unique, 0x10000152, 8) , (register, 0x10, 8) , (unique, 0x1000015a, 8) , (register, 0x28, 8), (unique, 0x1000015a, 8) COPY (const, 0x2906d8, 8), (unique, 0x10000152, 8) COPY (const, 0x2906b0, 8), (register, 0x18, 4) INT_AND (unique, 0x1000018d, 4) , (const, 0x2, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000191, 8) , (unique, 0x10000199, 8)]
[ ---  BRANCH (ram, 0x183abc, 1)]
[ ---  CBRANCH (ram, 0x183abc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x0, 4), (register, 0x18, 4) INT_AND (ram, 0x4c3150, 4) , (const, 0x2, 4)]
[ ---  CALL (ram, 0x136eb0, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x13f, 4)]
[(ram, 0x4c2ef8, 8) COPY (ram, 0x4c2ef8, 8), (ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x13f, 4)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x13f, 4)]
[(ram, 0x4c3160, 8) COPY (ram, 0x4c3160, 8), (ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x13f, 4)]
[(ram, 0x4c3170, 8) COPY (ram, 0x4c3170, 8), (ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x13f, 4)]
[(ram, 0x4c3188, 4) COPY (ram, 0x4c3188, 4), (ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x13f, 4)]
[(ram, 0x4c3194, 4) COPY (ram, 0x4c3194, 4), (ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x13f, 4)]
[(ram, 0x4c3198, 8) COPY (ram, 0x4c3198, 8), (ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x13f, 4)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x13f, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(register, 0x38, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c3b20, 8)]
[ ---  CBRANCH (ram, 0x183ab5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000078, 8) , (const, 0x0, 8), (unique, 0x10000078, 8) INT_AND (unique, 0xbd80, 8) , (const, 0x4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100001f1, 8), (unique, 0x100001f1, 8) INT_AND (unique, 0x3100, 8) , (const, 0xfffffffffc000000, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x60, 4)]
[(ram, 0x4c2ef8, 8) INDIRECT (ram, 0x4c2ef8, 8) , (const, 0x60, 4)]
[(ram, 0x4c3150, 4) INDIRECT (ram, 0x4c3150, 4) , (const, 0x60, 4)]
[(ram, 0x4c3160, 8) INDIRECT (ram, 0x4c3160, 8) , (const, 0x60, 4)]
[(ram, 0x4c3170, 8) INDIRECT (ram, 0x4c3170, 8) , (const, 0x60, 4)]
[(ram, 0x4c3188, 4) INDIRECT (ram, 0x4c3188, 4) , (const, 0x60, 4)]
[(ram, 0x4c3194, 4) INDIRECT (ram, 0x4c3194, 4) , (const, 0x60, 4)]
[(ram, 0x4c3198, 8) INDIRECT (ram, 0x4c3198, 8) , (const, 0x60, 4)]
[(ram, 0x4c8358, 8) INDIRECT (ram, 0x4c8358, 8) , (const, 0x60, 4)]
[ ---  CALL (ram, 0x17f960, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (const, 0x0, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2ef8, 8) COPY (ram, 0x4c2ef8, 8), (ram, 0x4c2ef8, 8) MULTIEQUAL (ram, 0x4c2ef8, 8) , (ram, 0x4c2ef8, 8) , (ram, 0x4c2ef8, 8) , (ram, 0x4c2ef8, 8) , (ram, 0x4c2ef8, 8)]
[(ram, 0x4c3150, 4) COPY (ram, 0x4c3150, 4), (ram, 0x4c3150, 4) MULTIEQUAL (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4) , (ram, 0x4c3150, 4)]
[(ram, 0x4c3160, 8) COPY (ram, 0x4c3160, 8), (ram, 0x4c3160, 8) MULTIEQUAL (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8) , (ram, 0x4c3160, 8)]
[(ram, 0x4c3170, 8) COPY (ram, 0x4c3170, 8), (ram, 0x4c3170, 8) MULTIEQUAL (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8) , (ram, 0x4c3170, 8)]
[(ram, 0x4c3188, 4) COPY (ram, 0x4c3188, 4), (ram, 0x4c3188, 4) MULTIEQUAL (ram, 0x4c3188, 4) , (ram, 0x4c3188, 4) , (ram, 0x4c3188, 4) , (ram, 0x4c3188, 4) , (ram, 0x4c3188, 4)]
[(ram, 0x4c3194, 4) COPY (ram, 0x4c3194, 4), (ram, 0x4c3194, 4) MULTIEQUAL (ram, 0x4c3194, 4) , (ram, 0x4c3194, 4) , (ram, 0x4c3194, 4) , (ram, 0x4c3194, 4) , (ram, 0x4c3194, 4)]
[(ram, 0x4c3198, 8) COPY (ram, 0x4c3198, 8), (ram, 0x4c3198, 8) MULTIEQUAL (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8) , (ram, 0x4c3198, 8)]
[(ram, 0x4c8358, 8) COPY (ram, 0x4c8358, 8), (ram, 0x4c8358, 8) MULTIEQUAL (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8) , (ram, 0x4c8358, 8)]
[ ---  RETURN (const, 0x0, 8)]
