[(unique, 0x1000045c, 8) COPY (unique, 0x1000056c, 8), (unique, 0x1000056c, 8) CAST (ram, 0x4c8130, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x495c5d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000574, 8), (unique, 0x10000574, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x495d98, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x30, 8) , (const, 0x30, 8)]
[ ---  CBRANCH (ram, 0x495d80, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (const, 0x1a, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x495e48, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (ram, 0x4c6b08, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x495dad, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (ram, 0x4c8128, 8) , (unique, 0xbd80, 8)]
[(register, 0x10, 8) COPY (const, 0x4c8170, 8)]
[(unique, 0x100004a4, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100004ac, 8) COPY (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000058c, 8) , (const, 0x0, 8), (unique, 0x1000058c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000240, 8) , (unique, 0x10000584, 8) , (const, 0x1, 8), (unique, 0x10000584, 8) CAST (register, 0x10, 8), (unique, 0x10000240, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd0, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000059c, 8) , (const, 0x0, 8), (unique, 0x1000059c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000248, 8) , (unique, 0x10000594, 8) , (const, 0x1, 8), (unique, 0x10000594, 8) CAST (register, 0x10, 8), (unique, 0x10000248, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffffd8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x3b7, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x3b4, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x3b1, 4), (ram, 0x4c6b08, 8) MULTIEQUAL (unique, 0x100004a4, 8) , (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x3b7, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x3b4, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x3b1, 4), (ram, 0x4c8128, 8) MULTIEQUAL (unique, 0x100004ac, 8) , (ram, 0x4c8128, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x495dd0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x10, 8) , (unique, 0x10000238, 8), (unique, 0x10000238, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c82f0, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x6, 8) , (const, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x3db, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x3db, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x3db, 4), (ram, 0x4c8130, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8140, 8)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x3db, 4), (ram, 0x4c82b8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005a4, 8) , (const, 0x0, 4), (unique, 0x100005a4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x495c73, 1)]
[ ---  CBRANCH (ram, 0x495c67, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100005ac, 8) , (const, 0x0, 8), (unique, 0x100005ac, 8) CAST (ram, 0x4c8130, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100005b4, 8), (unique, 0x100005b4, 8) CAST (ram, 0x4c8130, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) CAST (unique, 0x100005c4, 8), (unique, 0x100005c4, 8) INT_ADD (unique, 0x100005bc, 8) , (const, 0x8, 8), (unique, 0x100005bc, 8) CAST (ram, 0x4c8130, 8)]
[(unique, 0x100004c4, 8) COPY (register, 0x98, 8), (register, 0x98, 8) COPY (const, 0x0, 8)]
[(unique, 0x100004d4, 8) COPY (unique, 0x100005cc, 8), (unique, 0x100005cc, 8) CAST (ram, 0x4c8130, 8)]
[(unique, 0x100003e0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x100003e9, 8) MULTIEQUAL (unique, 0x100004c4, 8) , (unique, 0x100004cc, 8)]
[(unique, 0x100003f1, 8) MULTIEQUAL (unique, 0x100004d4, 8) , (unique, 0x100004dc, 8)]
[ ---  CBRANCH (ram, 0x495e89, 1) , (unique, 0x100003e8, 1), (unique, 0x100003e8, 1) INT_LESSEQUAL (unique, 0x100003d8, 8) , (unique, 0xbd80, 8), (unique, 0x100003d8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x49608e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0x100003e0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100003f1, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100005d4, 8), (unique, 0x100005d4, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100003f1, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x495d50, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100003f1, 8) , (unique, 0x100005dc, 8), (unique, 0x100005dc, 8) CAST (ram, 0x4c8130, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003e9, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100003f1, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x462, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x45f, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x462, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x45f, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x462, 4), (ram, 0x4c8130, 8) INDIRECT (unique, 0x100004bc, 8) , (const, 0x45f, 4), (unique, 0x100004bc, 8) COPY (unique, 0x100005e4, 8), (unique, 0x100005e4, 8) CAST (unique, 0x100003f1, 8)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x462, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x45f, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x100005ec, 8), (unique, 0x100005ec, 8) CAST (unique, 0x1000045c, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100003f1, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x495d50, 1)]
[ ---  CBRANCH (ram, 0x495f88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x10, 8) INT_OR (unique, 0x100005f4, 8) , (unique, 0x100005fc, 8), (unique, 0x100005fc, 8) CAST (unique, 0x100003e0, 8), (unique, 0x100005f4, 8) CAST (unique, 0x100003d8, 8)]
[ ---  CBRANCH (ram, 0x495f88, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000604, 8), (unique, 0x10000604, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100003f1, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100004cc, 8) COPY (unique, 0x100003f1, 8)]
[(unique, 0x100004dc, 8) COPY (unique, 0xbd80, 8)]
[(stack, 0xffffffffffffff80, 8) COPY (const, 0x0, 8)]
[(register, 0xa0, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff80, 8) MULTIEQUAL (stack, 0xffffffffffffff80, 8) , (stack, 0xffffffffffffff80, 8) , (unique, 0x100003e9, 8) , (unique, 0x100003e9, 8)]
[(ram, 0x4c82b8, 8) MULTIEQUAL (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8)]
[(ram, 0x4c8128, 8) MULTIEQUAL (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8)]
[(ram, 0x4c6b08, 8) MULTIEQUAL (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (unique, 0x100003f1, 8) , (unique, 0x100003f1, 8)]
[(unique, 0x10000464, 8) COPY (unique, 0x1000060c, 8), (unique, 0x1000060c, 8) CAST (ram, 0x4c8130, 8), (ram, 0x4c8130, 8) MULTIEQUAL (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8)]
[(register, 0x10, 8) INT_ZEXT (unique, 0xbc00, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000614, 8), (unique, 0x10000614, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x495e30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc00, 2) , (const, 0x0, 2), (unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x10000614, 8), (unique, 0x10000614, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0xa8, 8) COPY (const, 0x0, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) COPY (const, 0x0, 8)]
[(unique, 0x10000224, 1) COPY (const, 0x0, 1)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x3400, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000268, 8) , (const, 0x4, 8), (unique, 0x10000268, 8) INT_MULT (register, 0x10, 8) , (const, 0xe, 8)]
[ ---  BRANCH (ram, 0x495cc4, 1)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000450, 8)]
[(register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (unique, 0x10000448, 8)]
[(unique, 0x10000223, 1) MULTIEQUAL (unique, 0x10000224, 1) , (unique, 0x10000458, 1)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (unique, 0x10000440, 8)]
[(unique, 0x10000564, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x10000438, 8)]
[ ---  CBRANCH (ram, 0x495ca8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0x1000042f, 8)]
[(unique, 0x1000050c, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x495e20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x6474e550, 4)]
[(unique, 0x100004fc, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000534, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x495cbb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4)]
[(unique, 0x10000504, 8) COPY (register, 0x28, 8)]
[(unique, 0x1000053c, 8) COPY (register, 0x0, 8)]
[(unique, 0x1000052c, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x495cbb, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x80, 8) , (unique, 0xbd80, 8), (register, 0x80, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000061c, 8), (unique, 0x1000061c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(unique, 0x1000051c, 8) COPY (register, 0x38, 8)]
[(unique, 0x10000544, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000554, 8) COPY (register, 0xb0, 8)]
[ ---  CBRANCH (ram, 0x495ce8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x90, 8), (register, 0x90, 8) PTRADD (register, 0x80, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000624, 8), (unique, 0x10000624, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[(unique, 0x10000226, 1) COPY (const, 0x1, 1)]
[(unique, 0x10000524, 8) COPY (register, 0x38, 8)]
[(unique, 0x1000054c, 8) COPY (register, 0x90, 8)]
[(unique, 0x1000055c, 8) COPY (register, 0x80, 8)]
[(unique, 0x10000440, 8) MULTIEQUAL (unique, 0x1000051c, 8) , (unique, 0x10000524, 8) , (unique, 0x1000052c, 8) , (unique, 0x10000534, 8) , (unique, 0x1000053c, 8) , (register, 0x38, 8)]
[(unique, 0x10000448, 8) MULTIEQUAL (unique, 0x10000544, 8) , (unique, 0x1000054c, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8) , (register, 0xa8, 8)]
[(unique, 0x10000450, 8) MULTIEQUAL (unique, 0x10000554, 8) , (unique, 0x1000055c, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000458, 1) MULTIEQUAL (unique, 0x10000223, 1) , (unique, 0x10000226, 1) , (unique, 0x10000223, 1) , (unique, 0x10000223, 1) , (unique, 0x10000223, 1) , (unique, 0x10000223, 1)]
[(unique, 0x10000438, 8) COPY (unique, 0x10000514, 8), (unique, 0x10000514, 8) MULTIEQUAL (unique, 0x10000564, 8) , (unique, 0x10000564, 8) , (unique, 0x10000564, 8) , (unique, 0x100004fc, 8) , (unique, 0x10000504, 8) , (unique, 0x1000050c, 8)]
[ ---  CBRANCH (ram, 0x495d00, 1) , (unique, 0x10000437, 1), (unique, 0x10000437, 1) INT_NOTEQUAL (unique, 0x3400, 8) , (unique, 0x1000042f, 8), (unique, 0x1000042f, 8) PTRADD (register, 0x0, 8) , (const, 0xe, 8) , (const, 0x4, 8)]
[ ---  CBRANCH (ram, 0x495e30, 1) , (unique, 0x10000222, 1), (unique, 0x10000222, 1) BOOL_NEGATE (unique, 0x10000458, 1)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x495d50, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2f, 8) , (register, 0x30, 8)]
[(unique, 0x1000046c, 8) COPY (unique, 0x10000464, 8)]
[ ---  CBRANCH (ram, 0x495d3d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x495d3d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffff80, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (stack, 0xffffffffffffff80, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x131, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x12e, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x131, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x12e, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x131, 4), (ram, 0x4c8130, 8) INDIRECT (unique, 0x100004b4, 8) , (const, 0x12e, 4), (unique, 0x100004b4, 8) COPY (unique, 0x1000062c, 8), (unique, 0x1000062c, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x131, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x12e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (unique, 0x10000634, 8), (unique, 0x10000634, 8) CAST (unique, 0x10000464, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x5, 8) , (const, 0x8, 8)]
[(unique, 0x1000047c, 8) COPY (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (unique, 0x1000046c, 8) , (unique, 0x1000047c, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x1000063c, 8), (unique, 0x1000063c, 8) CAST (unique, 0x10000438, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (unique, 0x1000046c, 8) , (unique, 0x1000047c, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000644, 8), (unique, 0x10000644, 8) CAST (unique, 0x10000440, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (unique, 0x1000046c, 8) , (unique, 0x1000047c, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (unique, 0x10000450, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (unique, 0x1000046c, 8) , (unique, 0x1000047c, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x140, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x13d, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x13b, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x138, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x135, 4), (ram, 0x4c6b08, 8) MULTIEQUAL (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x140, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x13d, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x13b, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x138, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x135, 4), (ram, 0x4c8128, 8) MULTIEQUAL (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x140, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x13d, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x13b, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x138, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x135, 4), (ram, 0x4c8130, 8) MULTIEQUAL (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x140, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x13d, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x13b, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x138, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x135, 4), (ram, 0x4c82b8, 8) MULTIEQUAL (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000448, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (unique, 0x1000046c, 8) , (unique, 0x1000047c, 8)]
[(ram, 0x4c82b8, 8) MULTIEQUAL (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8)]
[(ram, 0x4c8130, 8) MULTIEQUAL (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8)]
[(ram, 0x4c8128, 8) MULTIEQUAL (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8)]
[(ram, 0x4c6b08, 8) MULTIEQUAL (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x495e30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000438, 8) , (unique, 0x10000438, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x495ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x1, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x88, 8), (register, 0x88, 8) PTRADD (register, 0x88, 8) , (unique, 0xbd80, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000064c, 8), (unique, 0x1000064c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x28, 8) , (const, 0x4, 8) , (const, 0x4, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x192, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x188, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x192, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x188, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x192, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x188, 4)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x192, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x188, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x192, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x188, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x192, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x188, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x192, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x188, 4)]
[(register, 0x0, 8) CALL (ram, 0x4957a0, 8) , (unique, 0xbb00, 1) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x4, 8) , (const, 0x1, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8), (register, 0x0, 8) CALL (ram, 0x495740, 8) , (unique, 0xbb00, 1) , (register, 0x10, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x495ef9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0xff, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x495f92, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x88, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x219, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x210, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x219, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x210, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x219, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x210, 4)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x219, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x210, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x219, 4), (stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x210, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x219, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x210, 4)]
[(register, 0x0, 8) CAST (unique, 0x10000654, 8), (unique, 0x10000654, 8) CALL (ram, 0x4957a0, 8) , (unique, 0xbb00, 1) , (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8), (register, 0x0, 8) CALL (ram, 0x495740, 8) , (unique, 0xbb00, 1) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x495d6a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffff90, 8) , (const, 0x0, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x219, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x210, 4)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8)]
[(register, 0x80, 8) CAST (unique, 0x10000664, 8), (unique, 0x10000664, 8) INT_ZEXT (register, 0x80, 4), (register, 0x80, 4) INT_AND (register, 0x80, 4) , (const, 0x3, 4), (register, 0x80, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x495efc, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001fb, 8) , (const, 0x0, 8), (unique, 0x100001fb, 8) INT_AND (unique, 0x1000065c, 8) , (const, 0x3, 8), (unique, 0x1000065c, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x495d6a, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x88, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000484, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (stack, 0xffffffffffffff90, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x496029, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x88, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000350, 8) , (const, 0x4, 8), (unique, 0x10000350, 8) INT_MULT (unique, 0x1000066c, 8) , (const, 0x2, 8), (unique, 0x1000066c, 8) CAST (register, 0x30, 8), (register, 0x30, 8) PTRADD (stack, 0xffffffffffffff90, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x4960bb, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x30, 8) , (register, 0x80, 8), (register, 0x30, 8) COPY (unique, 0x1000049c, 8), (unique, 0x1000049c, 8) MULTIEQUAL (unique, 0x10000484, 8) , (unique, 0x1000048c, 8) , (unique, 0x10000494, 8), (register, 0x80, 8) MULTIEQUAL (register, 0x80, 8) , (unique, 0x3100, 8) , (register, 0x80, 8)]
[ ---  CALL (ram, 0x4017d5, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x331, 4)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x331, 4)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x331, 4)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x331, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(unique, 0x10000494, 8) COPY (register, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x10000684, 8), (unique, 0x10000684, 8) INT_RIGHT (unique, 0x1000067c, 8) , (const, 0x1, 4), (unique, 0x1000067c, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000674, 8) , (const, 0x1, 8), (unique, 0x10000674, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x496086, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x88, 8) , (register, 0x38, 8) , (const, 0x1, 8), (register, 0x38, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000360, 8) , (const, 0x4, 8), (unique, 0x10000360, 8) INT_AND (unique, 0x1000068c, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x1000068c, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (register, 0x80, 8) , (unique, 0x10000674, 8) , (const, 0x1, 8), (unique, 0x10000674, 8) CAST (register, 0x30, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000048c, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x495ff8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x0, 8) , (unique, 0xbd80, 8), (register, 0x0, 8) PTRADD (register, 0x88, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x10000380, 8) , (const, 0x4, 8), (unique, 0x10000380, 8) INT_ADD (unique, 0x10000378, 8) , (const, 0x2, 8), (unique, 0x10000378, 8) INT_AND (unique, 0x10000694, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0x10000694, 8) CAST (unique, 0x3400, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x302, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x2e1, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x2da, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x302, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x2e1, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x2da, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x302, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x2e1, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x2da, 4)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x302, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x2e1, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x2da, 4)]
[ ---  CALL (ram, 0x4957a0, 8) , (register, 0x38, 1) , (const, 0x0, 8) , (unique, 0x3a00, 8) , (unique, 0x3800, 8), (unique, 0x3a00, 8) PTRADD (register, 0xb0, 8) , (unique, 0x1000041e, 8) , (const, 0x1, 8), (unique, 0x1000041e, 8) INT_ADD (register, 0x0, 8) , (const, 0x8, 8), (register, 0x38, 1) INT_AND (register, 0x0, 1) , (const, 0xf, 1), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (register, 0x0, 4) CALL (ram, 0x495670, 8) , (register, 0x0, 1), (register, 0x0, 1) CALL (ram, 0x495980, 8) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0xb0, 8) , (unique, 0x10000416, 8) , (const, 0x1, 8), (unique, 0x10000416, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000069c, 8), (unique, 0x1000069c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xb0, 8) , (const, 0x4, 8) , (const, 0x1, 8), (register, 0xb0, 8) PTRADD (register, 0x88, 8) , (register, 0xb0, 8) , (const, 0x1, 8), (register, 0xb0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x4, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[ ---  CBRANCH (ram, 0x49607d, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x0, 8) PTRADD (register, 0x88, 8) , (stack, 0xffffffffffffff98, 8) , (const, 0x1, 8), (register, 0x88, 8) PTRADD (register, 0x88, 8) , (register, 0x88, 8) , (const, 0x1, 8), (register, 0x88, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x302, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2e1, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x2da, 4), (register, 0xa0, 8) MULTIEQUAL (unique, 0x3400, 8) , (unique, 0x3400, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x32a, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x32a, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x32a, 4)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x32a, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0xb0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x88, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x32d, 4), (ram, 0x4c6b08, 8) MULTIEQUAL (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x32d, 4), (ram, 0x4c8128, 8) MULTIEQUAL (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x32d, 4), (ram, 0x4c8130, 8) MULTIEQUAL (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x32d, 4), (ram, 0x4c82b8, 8) MULTIEQUAL (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffff98, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1ce, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x1ce, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffffb0, 8) COPY (stack, 0xffffffffffffff88, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ce, 4), (stack, 0xffffffffffffffb8, 8) COPY (const, 0x4, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x1d1, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x1ce, 4), (ram, 0x4c6b08, 8) MULTIEQUAL (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x1d1, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x1ce, 4), (ram, 0x4c8128, 8) MULTIEQUAL (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x1d1, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x1ce, 4), (ram, 0x4c8130, 8) MULTIEQUAL (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x1d1, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x1ce, 4), (ram, 0x4c82b8, 8) MULTIEQUAL (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x0, 8) CAST (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) CALL (ram, 0x495ab0, 8) , (unique, 0x3800, 8) , (stack, 0xffffffffffffff88, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[ ---  CBRANCH (ram, 0x495d6a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CAST (unique, 0x100006a4, 8), (unique, 0x100006a4, 8) CALL (ram, 0x495ab0, 8) , (unique, 0x3800, 8) , (stack, 0xffffffffffffff88, 8) , (register, 0x10, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff98, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1f4, 4), (stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1f4, 4), (stack, 0xffffffffffffffa0, 8) INDIRECT (stack, 0xffffffffffffffa0, 8) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1f4, 4), (stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1f4, 4), (stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x1ec, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x201, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1f4, 4), (stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x1ec, 4)]
[ ---  CALL (ram, 0x4957a0, 8) , (register, 0x0, 1) , (register, 0x0, 8) , (unique, 0x3100, 8) , (unique, 0x3800, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff90, 8), (register, 0x0, 8) CALL (ram, 0x495740, 8) , (register, 0x0, 1) , (register, 0x10, 8), (register, 0x0, 1) CALL (ram, 0x495980, 8) , (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x0, 8) , (unique, 0x1000040e, 8) , (const, 0x1, 8), (unique, 0x1000040e, 8) INT_SUB (const, 0x4, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100006ac, 8), (unique, 0x100006ac, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x207, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x201, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x1f4, 4), (ram, 0x4c6b08, 8) INDIRECT (ram, 0x4c6b08, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x207, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x201, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x1f4, 4), (ram, 0x4c8128, 8) INDIRECT (ram, 0x4c8128, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x207, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x201, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x1f4, 4), (ram, 0x4c8130, 8) INDIRECT (ram, 0x4c8130, 8) , (const, 0x1ec, 4)]
[(ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x207, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x201, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x1f4, 4), (ram, 0x4c82b8, 8) INDIRECT (ram, 0x4c82b8, 8) , (const, 0x1ec, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x3, 8) , (const, 0x8, 8), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x201, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1f4, 4), (stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x1ec, 4)]
[ ---  BRANCH (ram, 0x495d6a, 1)]
[(ram, 0x4c6b08, 8) COPY (ram, 0x4c6b08, 8), (ram, 0x4c6b08, 8) MULTIEQUAL (ram, 0x4c6b08, 8) , (ram, 0x4c6b08, 8)]
[(ram, 0x4c8128, 8) COPY (ram, 0x4c8128, 8), (ram, 0x4c8128, 8) MULTIEQUAL (ram, 0x4c8128, 8) , (ram, 0x4c8128, 8)]
[(ram, 0x4c8130, 8) COPY (ram, 0x4c8130, 8), (ram, 0x4c8130, 8) MULTIEQUAL (ram, 0x4c8130, 8) , (ram, 0x4c8130, 8)]
[(ram, 0x4c82b8, 8) COPY (ram, 0x4c82b8, 8), (ram, 0x4c82b8, 8) MULTIEQUAL (ram, 0x4c82b8, 8) , (ram, 0x4c82b8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x1, 8)]
