[(register, 0x20a, 1) COPY (const, 0x0, 1)]
[(register, 0x0, 8) INT_SUB (register, 0x10, 8) , (register, 0x28, 8), (register, 0x28, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)]
[(unique, 0x3400, 8) CAST (unique, 0x100004f4, 8), (unique, 0x100004f4, 8) INT_ADD (unique, 0x100004ec, 8) , (register, 0x8, 8), (unique, 0x100004ec, 8) CAST (register, 0x30, 8), (register, 0x8, 8) INT_MULT (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8), (register, 0x28, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x40f745, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x55, 4)]
[ ---  CALL (ram, 0x40f700, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x28, 8)]
[(register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1)]
[(unique, 0x100004dc, 8) COPY (register, 0x30, 8)]
[(unique, 0x100004e4, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x40f868, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 8) , (const, 0x2, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x100004fc, 8), (unique, 0x100004fc, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000504, 8), (unique, 0x10000504, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x40f965, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100004a4, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x100004d4, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x40f8a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40f8b0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x40f912, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x3, 8)]
[(unique, 0x1000049c, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x40f8a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(unique, 0x10000494, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x40f8a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x40f822, 1)]
[ ---  CBRANCH (ram, 0x40f8c8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0x1000048c, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x40f8a3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x18, 8) COPY (const, 0x1, 8)]
[(unique, 0x10000484, 8) COPY (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x40f79a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x69, 4)]
[ ---  CALL (ram, 0x40f700, 8) , (register, 0x38, 8) , (unique, 0x3400, 8) , (register, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(unique, 0xbd80, 8) CAST (unique, 0x10000514, 8), (unique, 0x10000514, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(unique, 0x100004cc, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) CAST (unique, 0x1000050c, 8), (unique, 0x1000050c, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x40f96e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x2, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xb8, 8) CAST (unique, 0x10000524, 8), (unique, 0x10000524, 8) INT_ADD (unique, 0x1000051c, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x1000051c, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100004c4, 8) , (unique, 0x100004cc, 8) , (unique, 0x100004d4, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x20a, 1) INDIRECT (register, 0x20a, 1) , (const, 0x29b, 4), (register, 0x20a, 1) MULTIEQUAL (register, 0x20a, 1) , (register, 0x20a, 1) , (register, 0x20a, 1)]
[ ---  CBRANCH (ram, 0x40fa70, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (register, 0x0, 4) , (const, 0x1, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (register, 0x88, 8) , (register, 0x28, 8) , (register, 0xb0, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000344, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8), (register, 0x88, 8) MULTIEQUAL (unique, 0x10000374, 8) , (unique, 0x100004e4, 8) , (unique, 0x100004e4, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbe00, 8) INT_SUB (stack, 0xffffffffffffffb0, 8) , (const, 0x1, 8)]
[(register, 0x88, 8) CAST (unique, 0x10000534, 8), (unique, 0x10000534, 8) INT_ADD (unique, 0x1000052c, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x1000052c, 8) CAST (register, 0x88, 8)]
[(unique, 0x1000033c, 8) COPY (register, 0x28, 8)]
[(unique, 0x1000035c, 8) COPY (register, 0x88, 8)]
[ ---  BRANCH (ram, 0x40f9c3, 1)]
[(register, 0xb0, 8) INT_SUB (register, 0xb0, 8) , (const, 0x1, 8)]
[(unique, 0x10000334, 8) COPY (register, 0x28, 8), (register, 0x28, 8) CAST (unique, 0x10000544, 8), (unique, 0x10000544, 8) INT_ADD (unique, 0x1000053c, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x1000053c, 8) CAST (register, 0x28, 8)]
[(unique, 0x10000354, 8) COPY (register, 0x28, 8)]
[(unique, 0x1000036c, 8) COPY (register, 0x88, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0xbe00, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x88, 8) MULTIEQUAL (unique, 0x1000036c, 8) , (register, 0x88, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000354, 8) , (unique, 0x1000035c, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x10000334, 8) , (unique, 0x1000033c, 8)]
[ ---  CBRANCH (ram, 0x40fa35, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (register, 0xb8, 8)]
[(register, 0x10, 8) INT_ADD (register, 0x10, 8) , (unique, 0x10000564, 8), (unique, 0x10000564, 8) CAST (register, 0xb8, 8), (register, 0x10, 8) INT_NEGATE (unique, 0x1000054c, 8), (unique, 0x1000054c, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x40fb20, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x1000056c, 8) , (const, 0x1f, 8), (unique, 0x1000056c, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x1000055c, 8) , (unique, 0x10000288, 8), (unique, 0x1000055c, 8) CAST (register, 0x30, 8), (unique, 0x10000288, 8) INT_SUB (const, 0xf, 8) , (unique, 0x10000554, 8), (unique, 0x10000554, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x40fb20, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 8) , (const, 0x20, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (unique, 0xae00, 8), (unique, 0xae00, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000034c, 8) , (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000364, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(unique, 0x1000034c, 8) COPY (register, 0x30, 8), (register, 0x30, 8) PTRADD (register, 0x30, 8) , (unique, 0x10000320, 8) , (const, 0x8, 8), (unique, 0x10000320, 8) INT_ADD (unique, 0x10000318, 8) , (const, 0x1, 8), (unique, 0x10000318, 8) INT_MULT (unique, 0xac80, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xac80, 8) INT_ZEXT (register, 0x20a, 1), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000034c, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[(unique, 0x10000364, 8) COPY (register, 0x38, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000300, 8) , (const, 0x8, 8), (unique, 0x10000300, 8) INT_ADD (unique, 0x100002f8, 8) , (const, 0x1, 8), (unique, 0x100002f8, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000364, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x40fb28, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (register, 0xb8, 8), (register, 0x38, 8) PTRADD (register, 0x38, 8) , (unique, 0x10000300, 8) , (const, 0x8, 8), (unique, 0x10000300, 8) INT_ADD (unique, 0x100002f8, 8) , (const, 0x1, 8), (unique, 0x100002f8, 8) INT_MULT (unique, 0xb880, 8) , (const, 0xfffffffffffffffe, 8), (unique, 0xb880, 8) INT_ZEXT (register, 0x20a, 1), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000364, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x38, 8) INT_MULT (register, 0x38, 8) , (const, 0x10, 8), (register, 0x38, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x1, 4), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_RIGHT (register, 0x10, 8) , (const, 0x3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3b80, 8) , (unique, 0x100001d3, 4), (unique, 0x3b80, 8) CAST (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) INT_ADD (unique, 0x10000584, 8) , (register, 0x0, 8), (unique, 0x10000584, 8) CAST (register, 0xb8, 8), (unique, 0x100001d3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) INT_ADD (unique, 0x10000574, 8) , (register, 0x0, 8), (unique, 0x10000574, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001fb, 8) , (unique, 0x100001d7, 4), (unique, 0x100001fb, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) INT_ADD (unique, 0x10000584, 8) , (register, 0x0, 8), (unique, 0x10000584, 8) CAST (register, 0xb8, 8), (unique, 0x100001d7, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001db, 8), (unique, 0x100001db, 8) PTRADD (unique, 0x3400, 8) , (const, 0x1, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) INT_ADD (unique, 0x10000574, 8) , (register, 0x0, 8), (unique, 0x10000574, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000203, 8) , (unique, 0x100001e3, 4), (unique, 0x10000203, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) INT_ADD (unique, 0x10000584, 8) , (register, 0x0, 8), (unique, 0x10000584, 8) CAST (register, 0xb8, 8), (unique, 0x100001e3, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001e7, 8), (unique, 0x100001e7, 8) PTRADD (unique, 0x3400, 8) , (const, 0x2, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) INT_ADD (unique, 0x10000574, 8) , (register, 0x0, 8), (unique, 0x10000574, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000020b, 8) , (unique, 0x100001ef, 4), (unique, 0x1000020b, 8) PTRADD (unique, 0x3b80, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3b80, 8) CAST (unique, 0x1000058c, 8), (unique, 0x1000058c, 8) INT_ADD (unique, 0x10000584, 8) , (register, 0x0, 8), (unique, 0x10000584, 8) CAST (register, 0xb8, 8), (unique, 0x100001ef, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001f3, 8), (unique, 0x100001f3, 8) PTRADD (unique, 0x3400, 8) , (const, 0x3, 8) , (const, 0x4, 8), (unique, 0x3400, 8) CAST (unique, 0x1000057c, 8), (unique, 0x1000057c, 8) INT_ADD (unique, 0x10000574, 8) , (register, 0x0, 8), (unique, 0x10000574, 8) CAST (register, 0x30, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40fa00, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (register, 0x0, 8) , (const, 0x10, 8), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xb8, 8) , (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  CBRANCH (ram, 0x40fa35, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x38, 8) , (register, 0x10, 8), (register, 0x38, 8) INT_AND (register, 0x10, 8) , (const, 0xfffffffffffffffe, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xa8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x18, 8) CAST (unique, 0x1000059c, 8), (unique, 0x1000059c, 8) INT_ADD (unique, 0x10000594, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x10000594, 8) CAST (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x40fb34, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb0, 8) , (const, 0x0, 8)]
[(unique, 0x10000344, 8) COPY (register, 0x28, 8)]
[(unique, 0x10000374, 8) COPY (register, 0x88, 8)]
[(unique, 0x1000044c, 8) COPY (register, 0xb8, 8)]
[(unique, 0x100004c4, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x40f990, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xb0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40f818, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0xbd80, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x40f8d8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000046c, 8) , (unique, 0x10000474, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x40fa88, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (register, 0xa0, 8) , (register, 0xa8, 8) , (register, 0xb0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100003fc, 8) , (unique, 0x10000404, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005cc, 8) , (unique, 0xbc80, 4), (unique, 0x100005cc, 8) CAST (register, 0xb8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005a4, 8), (unique, 0x100005a4, 8) CAST (register, 0xa0, 8)]
[(unique, 0x10000404, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x100005c4, 8), (unique, 0x100005c4, 8) INT_ADD (unique, 0x100005bc, 8) , (const, 0x4, 8), (unique, 0x100005bc, 8) CAST (register, 0xa0, 8)]
[(unique, 0x10000474, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x100005b4, 8), (unique, 0x100005b4, 8) INT_ADD (unique, 0x100005ac, 8) , (const, 0x4, 8), (unique, 0x100005ac, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x40f8e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) CAST (unique, 0x100005f4, 8), (unique, 0x100005f4, 8) INT_ADD (unique, 0x100005ec, 8) , (const, 0x4, 8), (unique, 0x100005ec, 8) CAST (register, 0xa8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100005fc, 8) , (unique, 0xbc80, 4), (unique, 0x100005fc, 8) CAST (register, 0xb8, 8), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100005d4, 8), (unique, 0x100005d4, 8) CAST (register, 0xa8, 8)]
[(unique, 0x100003fc, 8) COPY (register, 0xa0, 8)]
[(unique, 0x1000046c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) CAST (unique, 0x100005e4, 8), (unique, 0x100005e4, 8) INT_ADD (unique, 0x100005dc, 8) , (const, 0x4, 8), (unique, 0x100005dc, 8) CAST (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x40f8e0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000045c, 8) , (unique, 0x10000464, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40fab0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (register, 0xa0, 8) , (register, 0xa8, 8) , (register, 0xb0, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100003dc, 8) , (unique, 0x100003e4, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0x100003e4, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000464, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x40f7a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0x1000038c, 8) COPY (register, 0xa0, 8)]
[(unique, 0x100003dc, 8) COPY (register, 0xa0, 8)]
[(unique, 0x1000045c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x40f7a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x40f917, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x3, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xb8, 8) MULTIEQUAL (unique, 0x1000043c, 8) , (unique, 0x10000444, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x40fb00, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (register, 0xb0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x100003bc, 8) , (unique, 0x100003c4, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8), (register, 0xa8, 8) MULTIEQUAL (register, 0xa8, 8) , (register, 0xa8, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa0, 8)]
[(unique, 0x100003c4, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) PTRADD (register, 0xa0, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x10000444, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x40f830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0xb8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8)]
[(unique, 0x100003bc, 8) COPY (register, 0xa0, 8)]
[(unique, 0x1000043c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) PTRADD (register, 0xb8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x40f830, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40fad0, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x0, 4), (register, 0x0, 4) CALLIND (stack, 0xffffffffffffff88, 8) , (register, 0xa8, 8) , (register, 0xa0, 8) , (register, 0xb0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0xa0, 8) , (unique, 0x3400, 8) , (unique, 0x3400, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000041c, 8) , (unique, 0x10000424, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x0, 8) CAST (unique, 0x10000604, 8), (unique, 0x10000604, 8) CALL (ram, 0x401160, 8) , (register, 0xb8, 8) , (register, 0xa8, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0xa8, 8) CAST (unique, 0x10000614, 8), (unique, 0x10000614, 8) INT_ADD (unique, 0x1000060c, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x1000060c, 8) CAST (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x40f7e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) INT_SUB (register, 0x28, 8) , (const, 0x1, 8)]
[(unique, 0x10000424, 8) COPY (register, 0xa8, 8)]
[(unique, 0x10000454, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x40f928, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 8) , (const, 0x0, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x88, 8) , (register, 0xa8, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0x18, 8)]
[(unique, 0x100004bc, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000044c, 8) , (unique, 0x10000454, 8)]
[ ---  CBRANCH (ram, 0x40f7e4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x28, 8) , (const, 0x0, 8), (register, 0x28, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (register, 0x28, 8)]
[(register, 0x0, 8) CAST (unique, 0x1000061c, 8), (unique, 0x1000061c, 8) CALL (ram, 0x401160, 8) , (register, 0xb8, 8) , (register, 0xa0, 8) , (stack, 0xffffffffffffff90, 8)]
[(register, 0xa0, 8) CAST (unique, 0x1000062c, 8), (unique, 0x1000062c, 8) INT_ADD (unique, 0x10000624, 8) , (stack, 0xffffffffffffff90, 8), (unique, 0x10000624, 8) CAST (register, 0xa0, 8)]
[(unique, 0x1000041c, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x40f928, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x18, 8) , (const, 0x0, 8), (register, 0x18, 8) INT_SUB (register, 0x18, 8) , (const, 0x1, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0xb8, 8) , (register, 0xa0, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_MULT (stack, 0xffffffffffffff90, 8) , (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8), (register, 0xa0, 8) MULTIEQUAL (unique, 0x1000038c, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8) , (unique, 0x100004dc, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa0, 8) , (register, 0xa8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000045c, 8) , (unique, 0x10000484, 8) , (unique, 0x1000048c, 8) , (unique, 0x10000494, 8) , (unique, 0x1000049c, 8) , (unique, 0x100004a4, 8) , (unique, 0x1000046c, 8) , (unique, 0x1000043c, 8) , (unique, 0x100004bc, 8) , (register, 0x0, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  CALL (ram, 0x401060, 8) , (register, 0x30, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (stack, 0xffffffffffffff90, 8), (register, 0x10, 8) INT_SUB (register, 0x10, 8) , (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0xb0, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[ ---  RETURN (const, 0x0, 8)]
