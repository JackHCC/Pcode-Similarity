[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffd8, 8)]
[(register, 0x200, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000097, 8), (unique, 0x10000097, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22df20, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000097, 8), (unique, 0x10000097, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x22df40, 1) , (register, 0x200, 1)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (register, 0x0, 8) , (const, 0x52, 4), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f7, 8), (unique, 0x100000f7, 8) INT_ADD (unique, 0x100000ef, 8) , (const, 0x4, 8), (unique, 0x100000ef, 8) CAST (register, 0x30, 8)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (register, 0x0, 8) , (const, 0x52, 4), (register, 0x0, 8) INT_SEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100000ff, 8), (unique, 0x100000ff, 8) CAST (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x22df10, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffd8, 8) INDIRECT (stack, 0xffffffffffffffd8, 8) , (const, 0x67, 4)]
[(stack, 0xffffffffffffffe0, 8) INDIRECT (stack, 0xffffffffffffffe0, 8) , (const, 0x67, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x22df10, 1)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000107, 4), (unique, 0x10000107, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0x7e, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x7e, 4)]
[ ---  CBRANCH (ram, 0x22df80, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000af, 8), (unique, 0x100000af, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffd8, 4) INDIRECT (stack, 0xffffffffffffffd8, 4) , (const, 0xae, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xae, 4)]
[ ---  CBRANCH (ram, 0x22df2f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (register, 0x20, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000e7, 8), (unique, 0x100000e7, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000010b, 8) , (stack, 0xffffffffffffffd8, 4), (unique, 0x1000010b, 8) CAST (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (stack, 0xffffffffffffffe0, 4), (unique, 0x3100, 8) CAST (unique, 0x1000011b, 8), (unique, 0x1000011b, 8) INT_ADD (unique, 0x10000113, 8) , (const, 0x4, 8), (unique, 0x10000113, 8) CAST (register, 0x30, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
