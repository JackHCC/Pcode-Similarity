[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffc88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x100000e2, 8), (unique, 0x100000e2, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[ ---  CBRANCH (ram, 0x2337a0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0xdb, 4)]
[ ---  CALL (ram, 0x232a00, 8)]
[ ---  RETURN (const, 0x1, 4)]
[(stack, 0xfffffffffffffe50, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2337a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x18eb50, 8) , (unique, 0x3c80, 8) , (const, 0x8000, 8) , (const, 0x0, 8) , (register, 0x20, 8) , (unique, 0x100000c2, 8), (unique, 0x100000c2, 8) PTRSUB (const, 0x0, 8) , (const, 0x4e7a60, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5f, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5a, 4)]
[(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x5f, 4), (stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x5a, 4)]
[(stack, 0xfffffffffffffe50, 8) INDIRECT (stack, 0xfffffffffffffe50, 8) , (const, 0x5f, 4), (stack, 0xfffffffffffffe50, 8) INDIRECT (stack, 0xfffffffffffffe50, 8) , (const, 0x5a, 4)]
[(stack, 0xfffffffffffffe68, 8) INDIRECT (stack, 0xfffffffffffffe68, 8) , (const, 0x5f, 4), (stack, 0xfffffffffffffe68, 8) INDIRECT (stack, 0xfffffffffffffe68, 8) , (const, 0x5a, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x5f, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x5a, 4)]
[ ---  CALL (ram, 0x186f70, 8) , (unique, 0x3c80, 8) , (const, 0x1, 8), (unique, 0x3c80, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffdc8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x38, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x233734, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x0, 4) , (register, 0x10, 4)]
[(unique, 0xbd00, 4) INT_OR (stack, 0xfffffffffffffe3c, 4) , (const, 0x4, 4)]
[ ---  CALL (ram, 0x184cd0, 8) , (unique, 0x3c80, 8) , (register, 0x38, 8) , (unique, 0x3100, 8) , (register, 0x38, 8), (unique, 0x3100, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x8a, 4), (register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x84, 4)]
[(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x8a, 4), (stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0x84, 4), (stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (stack, 0xfffffffffffffe3c, 4) , (unique, 0xbd00, 4)]
[(stack, 0xfffffffffffffe50, 8) INDIRECT (stack, 0xfffffffffffffe50, 8) , (const, 0x8a, 4), (stack, 0xfffffffffffffe50, 8) INDIRECT (stack, 0xfffffffffffffe50, 8) , (const, 0x84, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x8a, 4), (stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x84, 4)]
[(register, 0x0, 4) CALL (ram, 0x167d60, 8) , (unique, 0x3c80, 8) , (register, 0x80, 8) , (register, 0x88, 8)]
[ ---  CBRANCH (ram, 0x2337a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (register, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100000f2, 8), (unique, 0x100000f2, 8) INT_ADD (unique, 0x100000ea, 8) , (const, 0x30, 8), (unique, 0x100000ea, 8) CAST (stack, 0xfffffffffffffe68, 8), (register, 0x18, 8) PTRSUB (register, 0x20, 8) , (const, 0xfffffffffffffeb8, 8), (stack, 0xfffffffffffffe68, 8) INDIRECT (stack, 0xfffffffffffffe68, 8) , (const, 0x8a, 4), (stack, 0xfffffffffffffe68, 8) INDIRECT (stack, 0xfffffffffffffe68, 8) , (const, 0x84, 4)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffe50, 8) MULTIEQUAL (stack, 0xfffffffffffffe50, 8) , (stack, 0xfffffffffffffe50, 8)]
[(stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (stack, 0xfffffffffffffe3c, 4) , (stack, 0xfffffffffffffe3c, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x233773, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000102, 8), (unique, 0x10000102, 8) INT_ADD (unique, 0x100000fa, 8) , (const, 0x20, 8), (unique, 0x100000fa, 8) CAST (stack, 0xfffffffffffffe68, 8)]
[(stack, 0xfffffffffffffe50, 8) MULTIEQUAL (stack, 0xfffffffffffffe50, 8) , (stack, 0xfffffffffffffe50, 8)]
[(stack, 0xfffffffffffffe3c, 4) MULTIEQUAL (stack, 0xfffffffffffffe3c, 4) , (stack, 0xfffffffffffffe3c, 4)]
[(register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x2337af, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x1000010a, 8), (unique, 0x1000010a, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xfffffffffffffe3c, 4) INDIRECT (stack, 0xfffffffffffffe3c, 4) , (const, 0xd4, 4)]
[(stack, 0xfffffffffffffe50, 8) INDIRECT (stack, 0xfffffffffffffe50, 8) , (const, 0xd4, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0xd4, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[ ---  RETURN (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
