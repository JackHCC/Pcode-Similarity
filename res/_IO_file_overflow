[(unique, 0x100002a2, 8) COPY (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x18d4f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000138, 4) , (const, 0x0, 4), (unique, 0x10000138, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x8, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000017a, 8), (unique, 0x1000017a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000292, 8) , (register, 0x8, 4), (unique, 0x10000292, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x20, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002ea, 8) , (const, 0x9, 4), (unique, 0x100002ea, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (unique, 0x100002a2, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x21b, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x218, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[ ---  CBRANCH (ram, 0x18d370, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x1000013c, 4) , (const, 0x0, 4), (unique, 0x1000013c, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x800, 4)]
[ ---  CBRANCH (ram, 0x18d490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x18d490, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8)]
[ ---  CALL (ram, 0x18e300, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000242, 8), (unique, 0x10000242, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13d, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x13a, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x137, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x12e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x18d37d, 1)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[(register, 0x10, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18d4b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000155, 4) , (const, 0x0, 4), (unique, 0x10000155, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x100, 4), (unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1b8, 4)]
[ ---  CALL (ram, 0x18de50, 8) , (register, 0x38, 8)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000027a, 8), (unique, 0x1000027a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[(unique, 0x100002ba, 8) COPY (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000128, 8) , (const, 0x1, 8), (unique, 0x10000128, 8) INT_2COMP (unique, 0x100002fa, 8), (unique, 0x100002fa, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8)]
[ ---  CBRANCH (ram, 0x18d4df, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0xa0, 8) , (register, 0x8, 8), (register, 0x8, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000128, 8) , (const, 0x1, 8), (unique, 0x10000128, 8) INT_2COMP (unique, 0x100002fa, 8), (unique, 0x100002fa, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (register, 0xa0, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x10000118, 8) , (const, 0x1, 8), (unique, 0x10000118, 8) INT_2COMP (unique, 0x100002f2, 8), (unique, 0x100002f2, 8) CAST (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[(unique, 0x100002c2, 8) COPY (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_2COMP (unique, 0x10000302, 8), (unique, 0x10000302, 8) CAST (unique, 0x10000140, 8), (unique, 0x10000140, 8) MULTIEQUAL (unique, 0x100002ba, 8) , (unique, 0x100002c2, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fd, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1fa, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_2COMP (unique, 0x10000302, 8), (unique, 0x10000302, 8) CAST (unique, 0x10000140, 8), (unique, 0x10000140, 8) MULTIEQUAL (unique, 0x100002ba, 8) , (unique, 0x100002c2, 8)]
[ ---  BRANCH (ram, 0x18d386, 1)]
[(unique, 0xbc80, 4) MULTIEQUAL (unique, 0xbc80, 4) , (unique, 0xbc80, 4)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x18d478, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x1a6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[(unique, 0x100002b2, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x38, 8)]
[ ---  BRANCH (ram, 0x18d397, 1)]
[(unique, 0x100002aa, 8) COPY (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0xbd80, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100002aa, 8) , (unique, 0x100002b2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x30, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x18, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100002aa, 8) , (unique, 0x100002b2, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x183, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x177, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x174, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x171, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x16e, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x160, 4), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100001f2, 8) , (register, 0x0, 4), (unique, 0x100001f2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 4) INT_OR (unique, 0xbc80, 4) , (const, 0x800, 4)]
[(unique, 0x100002da, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18d32a, 1) , (unique, 0xd080, 1), (unique, 0xd080, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[ ---  CBRANCH (ram, 0x18d32a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000159, 4) , (const, 0x0, 4), (unique, 0x10000159, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x202, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x19e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x10, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[(unique, 0x100002d2, 8) COPY (unique, 0xbd80, 8)]
[(unique, 0x1000015e, 8) MULTIEQUAL (register, 0x10, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x10000166, 8) MULTIEQUAL (unique, 0x100002da, 8) , (unique, 0x100002d2, 8) , (unique, 0x100002da, 8) , (unique, 0x100002da, 8)]
[(unique, 0x1000016e, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x18d333, 1) , (unique, 0x1000015d, 1), (unique, 0x1000015d, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xffffffff, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) INDIRECT (unique, 0x1000016e, 8) , (const, 0x129, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18cea0, 8) , (register, 0x38, 8) , (unique, 0x10000166, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x1000015e, 8) , (unique, 0x100000cc, 8) , (const, 0x1, 8), (unique, 0x100000cc, 8) INT_2COMP (unique, 0x1000030a, 8), (unique, 0x1000030a, 8) CAST (unique, 0x10000166, 8)]
[ ---  CBRANCH (ram, 0x18d420, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbd80, 8) , (unique, 0x1000015e, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x40, 8)]
[ ---  CBRANCH (ram, 0x18d460, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xc0, 8)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000016e, 8) , (const, 0x10d, 4)]
[(register, 0x0, 4) CALL (ram, 0x18cea0, 8) , (register, 0x38, 8) , (unique, 0x10000166, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x1000015e, 8) , (unique, 0x100000fc, 8) , (const, 0x1, 8), (unique, 0x100000fc, 8) INT_2COMP (unique, 0x10000312, 8), (unique, 0x10000312, 8) CAST (unique, 0x10000166, 8)]
[ ---  BRANCH (ram, 0x18d44e, 1)]
[(ram, 0x4eae68, 8) INDIRECT (unique, 0x1000016e, 8) , (const, 0xe7, 4)]
[(register, 0x0, 4) CALL (ram, 0x186270, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) INT_SRIGHT (register, 0x10, 8) , (const, 0x2, 4), (register, 0x10, 8) INT_SUB (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000332, 8), (unique, 0x10000332, 8) INT_ADD (unique, 0x1000032a, 8) , (const, 0x20, 8), (unique, 0x1000032a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000322, 8), (unique, 0x10000322, 8) INT_ADD (unique, 0x1000031a, 8) , (const, 0x18, 8), (unique, 0x1000031a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRSUB (register, 0x38, 8) , (const, 0xa0, 8)]
[(ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  CBRANCH (ram, 0x18d40c, 1) , (register, 0x0, 1), (register, 0x0, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8)]
[ ---  BRANCH (ram, 0x18d33d, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (unique, 0xbd80, 8)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x52, 4), (ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x50, 4), (ram, 0x4eae68, 8) MULTIEQUAL (unique, 0x1000016e, 8) , (ram, 0x4eae68, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x10, 8) , (register, 0x28, 1), (register, 0x28, 1) SUBPIECE (register, 0x30, 4) , (const, 0x0, 4), (register, 0x10, 8) MULTIEQUAL (unique, 0x1000015e, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x18d3f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000072, 4) , (const, 0x0, 4), (unique, 0x10000072, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x2, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x100001a2, 8), (unique, 0x100001a2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x18d360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000076, 4) , (const, 0x0, 4), (unique, 0x10000076, 4) INT_AND (unique, 0xbc80, 4) , (const, 0x200, 4)]
[ ---  CBRANCH (ram, 0x18d3f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0xa, 4)]
[(ram, 0x4eae68, 8) INDIRECT (ram, 0x4eae68, 8) , (const, 0x92, 4)]
[ ---  CBRANCH (ram, 0x18d360, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x18cea0, 8) , (register, 0x38, 8) , (unique, 0xbd80, 8) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0xbd80, 8) , (unique, 0x100000d4, 8) , (const, 0x1, 8), (unique, 0x100000d4, 8) INT_2COMP (unique, 0x1000033a, 8), (unique, 0x1000033a, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x20, 8)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8), (ram, 0x4eae68, 8) MULTIEQUAL (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8) , (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) INT_AND (register, 0x30, 4) , (const, 0xff, 4)]
[(ram, 0x4eae68, 8) COPY (ram, 0x4eae68, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
