[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x28, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x28, 4)]
[(stack, 0x0, 8) INDIRECT (stack, 0x0, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffa0, 2) INDIRECT (stack, 0xffffffffffffffa0, 2) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x28, 4)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000022d, 8), (unique, 0x1000022d, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (ram, 0x4c2e00, 8) , (const, 0xf08, 8) , (const, 0x1, 8), (unique, 0x3c80, 8) PTRADD (ram, 0x4c2e00, 8) , (const, 0x930, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000023d, 8), (unique, 0x1000023d, 8) CAST (unique, 0x3800, 8), (unique, 0x3800, 8) PTRADD (unique, 0x100001ed, 8) , (const, 0x8, 8) , (const, 0x1, 8), (unique, 0x100001ed, 8) COPY (ram, 0x4c2e00, 8)]
[ ---  CBRANCH (ram, 0x2429e9, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (unique, 0x3100, 8) , (const, 0x1, 8), (unique, 0x3100, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0xffffffffffffffff, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000235, 8), (unique, 0x10000235, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100001ed, 8) , (const, 0x900, 8) , (const, 0x1, 8), (unique, 0x100001ed, 8) COPY (ram, 0x4c2e00, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x2428de, 1)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x3e80, 8) CAST (unique, 0x1000024d, 8), (unique, 0x1000024d, 8) PTRADD (unique, 0x100001ed, 8) , (unique, 0x10000245, 8) , (const, 0x1, 8), (unique, 0x10000245, 8) CAST (unique, 0x10000152, 8), (unique, 0x10000152, 8) PTRADD (unique, 0x100001e5, 8) , (register, 0x0, 8) , (const, 0x1, 8), (unique, 0x100001e5, 8) PTRSUB (const, 0x0, 8) , (const, 0xffffffffffffff70, 8), (register, 0x0, 8) INT_MULT (unique, 0xbd80, 8) , (const, 0x90, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000146, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000013e, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000136, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000012e, 8)]
[(stack, 0xffffffffffffffa0, 2) MULTIEQUAL (stack, 0xffffffffffffffa0, 2) , (unique, 0x1000012c, 2)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (unique, 0x10000124, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (unique, 0x1000011c, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (unique, 0x10000114, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (unique, 0x10000104, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (unique, 0x100000fc, 8)]
[(register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (unique, 0x100000ec, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x8, 8)]
[(unique, 0x1000021d, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x100000f4, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x3e80, 8) , (register, 0xa8, 8)]
[(unique, 0x100000ec, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8)]
[(unique, 0x100000f4, 8) MULTIEQUAL (unique, 0x1000021d, 8) , (unique, 0x10000225, 8)]
[(unique, 0x100000fc, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(unique, 0x10000104, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0x10000114, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x1000011c, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x10000124, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x1000012c, 2) MULTIEQUAL (stack, 0xffffffffffffffa0, 2) , (stack, 0xffffffffffffffa0, 2)]
[(unique, 0x1000012e, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x10000136, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x1000013e, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x10000146, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x2428d1, 1) , (unique, 0x100000eb, 1), (unique, 0x100000eb, 1) INT_NOTEQUAL (unique, 0x100000e3, 8) , (const, 0x0, 8), (unique, 0x100000e3, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(register, 0x28, 8) INT_ADD (unique, 0x100000ec, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ZEXT (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000255, 8), (unique, 0x10000255, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x100001f5, 8) COPY (unique, 0x100000f4, 8)]
[ ---  CBRANCH (ram, 0x2428c8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (stack, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000025d, 8), (unique, 0x1000025d, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0x340, 8)]
[ ---  CBRANCH (ram, 0x2428c8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (stack, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x10000265, 8), (unique, 0x10000265, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0x348, 8)]
[(unique, 0x10000215, 8) COPY (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x2429a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x40, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) CAST (unique, 0x1000026d, 8), (unique, 0x1000026d, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0x315, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (unique, 0x100000fc, 8) , (const, 0x1ba, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (unique, 0x10000104, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0x10000114, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0x1000011c, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0x10000124, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffffa0, 2) INDIRECT (unique, 0x1000012c, 2) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0x1000012e, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (unique, 0x10000136, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0x1000013e, 8) , (const, 0x1ba, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0x10000146, 8) , (const, 0x1ba, 4)]
[(unique, 0x10000205, 8) COPY (unique, 0x100000f4, 8)]
[ ---  CBRANCH (ram, 0x2429bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x242ce0, 8) , (unique, 0x100000e3, 8) , (stack, 0x0, 8)]
[(unique, 0x1000020d, 8) COPY (register, 0x8, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000146, 8) , (unique, 0x10000146, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (unique, 0x10000146, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x1000013e, 8) , (unique, 0x1000013e, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (unique, 0x1000013e, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000136, 8) , (unique, 0x10000136, 8) , (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8) , (unique, 0x10000136, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (unique, 0x1000012e, 8) , (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8) , (unique, 0x1000012e, 8)]
[(stack, 0xffffffffffffffa0, 2) MULTIEQUAL (unique, 0x1000012c, 2) , (unique, 0x1000012c, 2) , (stack, 0xffffffffffffffa0, 2) , (stack, 0xffffffffffffffa0, 2) , (unique, 0x1000012c, 2)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10000124, 8) , (unique, 0x10000124, 8) , (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8) , (unique, 0x10000124, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x1000011c, 8) , (unique, 0x1000011c, 8) , (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8) , (unique, 0x1000011c, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000114, 8) , (unique, 0x10000114, 8) , (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8) , (unique, 0x10000114, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (unique, 0x10000104, 8) , (unique, 0x10000104, 8) , (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8) , (unique, 0x10000104, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (unique, 0x100000fc, 8) , (unique, 0x100000fc, 8) , (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8) , (unique, 0x100000fc, 8)]
[(unique, 0x10000225, 8) COPY (register, 0xb0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100001f5, 8) , (unique, 0x100001f5, 8) , (unique, 0x10000205, 8) , (unique, 0x1000020d, 8) , (unique, 0x10000215, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000275, 8), (unique, 0x10000275, 8) INT_ADD (unique, 0x100000e3, 8) , (const, 0x18, 8)]
[(register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0xffffffffffffffee, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x242888, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x8, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_ADD (register, 0x8, 8) , (const, 0xffffffffffffffff, 8)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x10000146, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x1000013e, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x10000136, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x1000012e, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffa0, 2) MULTIEQUAL (unique, 0x1000012c, 2) , (stack, 0xffffffffffffffa0, 2)]
[(stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x10000124, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x1000011c, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x10000114, 8) , (stack, 0xffffffffffffff88, 8)]
[(ram, 0x4c2e70, 8) MULTIEQUAL (unique, 0x10000104, 8) , (ram, 0x4c2e70, 8)]
[(ram, 0x4c2e00, 8) MULTIEQUAL (unique, 0x100000fc, 8) , (ram, 0x4c2e00, 8)]
[(register, 0x28, 8) MULTIEQUAL (unique, 0x100000ec, 8) , (register, 0x28, 8)]
[(unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff88, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000027d, 8), (unique, 0x1000027d, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001ed, 8) , (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) INT_MULT (register, 0xb0, 8) , (const, 0x90, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x100000f4, 8) , (register, 0xb0, 8)]
[(unique, 0x1000019b, 8) MULTIEQUAL (ram, 0x4c2e00, 8) , (ram, 0x4c2e00, 8)]
[(unique, 0x100001a3, 8) MULTIEQUAL (ram, 0x4c2e70, 8) , (ram, 0x4c2e70, 8)]
[(unique, 0x100001ab, 8) MULTIEQUAL (stack, 0xffffffffffffff88, 8) , (stack, 0xffffffffffffff88, 8)]
[(unique, 0x100001b3, 8) MULTIEQUAL (stack, 0xffffffffffffff90, 8) , (stack, 0xffffffffffffff90, 8)]
[(unique, 0x100001bb, 8) MULTIEQUAL (stack, 0xffffffffffffff98, 8) , (stack, 0xffffffffffffff98, 8)]
[(unique, 0x100001c3, 2) MULTIEQUAL (stack, 0xffffffffffffffa0, 2) , (stack, 0xffffffffffffffa0, 2)]
[(unique, 0x100001c5, 8) MULTIEQUAL (stack, 0xffffffffffffffa8, 8) , (stack, 0xffffffffffffffa8, 8)]
[(unique, 0x100001cd, 8) MULTIEQUAL (stack, 0xffffffffffffffb0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(unique, 0x100001d5, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(unique, 0x100001dd, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CBRANCH (ram, 0x242929, 1) , (unique, 0x1000019a, 1), (unique, 0x1000019a, 1) INT_NOTEQUAL (unique, 0x10000192, 8) , (const, 0x0, 8), (unique, 0x10000192, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x10000192, 8) , (const, 0x28, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x10000192, 8) , (const, 0x28, 8)]
[(stack, 0xffffffffffffffc0, 8) COPY (const, 0x0, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x54, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x10000192, 8) , (const, 0x28, 8)]
[(unique, 0xbc00, 2) LOAD (const, 0x1b1, 4) , (unique, 0x1000028d, 8), (unique, 0x1000028d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x56, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x10000192, 8) , (const, 0x28, 8)]
[(register, 0x0, 8) INT_SUB (unique, 0xbd80, 8) , (register, 0x28, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000295, 8), (unique, 0x10000295, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100001ed, 8) , (const, 0x958, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x242900, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbd80, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x89, 8) , (const, 0x8, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000285, 8), (unique, 0x10000285, 8) INT_ADD (unique, 0x10000192, 8) , (const, 0x28, 8)]
[(ram, 0x4c2e00, 8) INDIRECT (unique, 0x1000019b, 8) , (const, 0x18b, 4)]
[(ram, 0x4c2e70, 8) INDIRECT (unique, 0x100001a3, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffa0, 2) INDIRECT (unique, 0xbc00, 2) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (register, 0x0, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x18b, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x18b, 4)]
[(register, 0x0, 8) CALLIND (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x1000029d, 8), (unique, 0x1000029d, 8) CAST (unique, 0x3200, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100001a3, 8) , (const, 0x150, 8) , (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x242900, 1)]
[(ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x19a, 4), (ram, 0x4c2e00, 8) MULTIEQUAL (unique, 0x1000019b, 8) , (ram, 0x4c2e00, 8)]
[(ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x19a, 4), (ram, 0x4c2e70, 8) MULTIEQUAL (unique, 0x100001a3, 8) , (ram, 0x4c2e70, 8)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 2) INDIRECT (stack, 0xffffffffffffffa0, 2) , (const, 0x19a, 4), (stack, 0xffffffffffffffa0, 2) MULTIEQUAL (unique, 0xbc00, 2) , (stack, 0xffffffffffffffa0, 2)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (register, 0x0, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0xbd80, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x19a, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x2429c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (register, 0x38, 8) , (unique, 0x3800, 8) , (const, 0x40, 8) , (register, 0x30, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002a5, 8), (unique, 0x100002a5, 8) INT_ADD (unique, 0x10000192, 8) , (const, 0x18, 8)]
[(register, 0x0, 4) COPY (const, 0x0, 4)]
[(stack, 0xffffffffffffff88, 8) INDIRECT (stack, 0xffffffffffffff88, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff88, 8) MULTIEQUAL (unique, 0x100001ab, 8) , (stack, 0xffffffffffffff88, 8)]
[(stack, 0xffffffffffffff90, 8) INDIRECT (stack, 0xffffffffffffff90, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff90, 8) MULTIEQUAL (unique, 0x100001b3, 8) , (stack, 0xffffffffffffff90, 8)]
[(stack, 0xffffffffffffff98, 8) INDIRECT (stack, 0xffffffffffffff98, 8) , (const, 0x129, 4), (stack, 0xffffffffffffff98, 8) MULTIEQUAL (unique, 0x100001bb, 8) , (stack, 0xffffffffffffff98, 8)]
[(stack, 0xffffffffffffffa0, 2) INDIRECT (stack, 0xffffffffffffffa0, 2) , (const, 0x129, 4), (stack, 0xffffffffffffffa0, 2) MULTIEQUAL (unique, 0x100001c3, 2) , (stack, 0xffffffffffffffa0, 2)]
[(stack, 0xffffffffffffffa8, 8) INDIRECT (stack, 0xffffffffffffffa8, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffa8, 8) MULTIEQUAL (unique, 0x100001c5, 8) , (stack, 0xffffffffffffffa8, 8)]
[(stack, 0xffffffffffffffb0, 8) INDIRECT (stack, 0xffffffffffffffb0, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffb0, 8) MULTIEQUAL (unique, 0x100001cd, 8) , (stack, 0xffffffffffffffb0, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (unique, 0x100001d5, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x129, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (unique, 0x100001dd, 8) , (stack, 0xffffffffffffffc0, 8)]
[ ---  CALLIND (unique, 0xbd80, 8) , (unique, 0x3c80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100002ad, 8), (unique, 0x100002ad, 8) CAST (unique, 0x3c80, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100001ed, 8) , (const, 0xf10, 8) , (const, 0x1, 8), (unique, 0x3c80, 8) PTRADD (unique, 0x100001ed, 8) , (const, 0x930, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e00, 8) COPY (ram, 0x4c2e00, 8), (ram, 0x4c2e00, 8) INDIRECT (ram, 0x4c2e00, 8) , (const, 0x129, 4), (ram, 0x4c2e00, 8) MULTIEQUAL (unique, 0x1000019b, 8) , (ram, 0x4c2e00, 8)]
[(ram, 0x4c2e70, 8) COPY (ram, 0x4c2e70, 8), (ram, 0x4c2e70, 8) INDIRECT (ram, 0x4c2e70, 8) , (const, 0x129, 4), (ram, 0x4c2e70, 8) MULTIEQUAL (unique, 0x100001a3, 8) , (ram, 0x4c2e70, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
