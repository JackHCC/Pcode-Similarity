[ ---  CBRANCH (ram, 0x136840, 1) , (unique, 0x10000003, 1), (unique, 0x10000003, 1) BOOL_OR (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x10, 8) , (const, 0x0, 8), (register, 0x206, 1) INT_EQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x136840, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100006aa, 8) , (const, 0x16, 4), (unique, 0x100006aa, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x289, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[(unique, 0x3100, 8) PTRADD (unique, 0x100000aa, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x100000aa, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x136780, 1) , (unique, 0x10000072, 1), (unique, 0x10000072, 1) BOOL_OR (unique, 0xc780, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000ba, 8) , (const, 0x10, 8) , (const, 0x8, 8), (unique, 0x100000ba, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000009a, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x1000009a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x3200, 8) PTRADD (unique, 0x1000008a, 8) , (const, 0x10, 8) , (const, 0x8, 8), (unique, 0x1000008a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000007a, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x1000007a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x136780, 1) , (unique, 0x10000075, 1), (unique, 0x10000075, 1) BOOL_OR (register, 0x200, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x3200, 8) , (unique, 0x3100, 8), (register, 0x200, 1) INT_LESSEQUAL (unique, 0x3200, 8) , (unique, 0x3100, 8), (unique, 0x3200, 8) PTRADD (unique, 0x100000ca, 8) , (const, 0x10, 8) , (const, 0x8, 8), (unique, 0x100000ca, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000021a, 8) , (const, 0xf, 8) , (const, 0x8, 8), (unique, 0x1000021a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000020a, 8) , (const, 0xf, 8) , (const, 0x8, 8), (unique, 0x1000020a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100001fa, 8) , (const, 0xf, 8) , (const, 0x8, 8), (unique, 0x100001fa, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000024a, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x1000024a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000023a, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x1000023a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000022a, 8) , (const, 0xe, 8) , (const, 0x8, 8), (unique, 0x1000022a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000027a, 8) , (const, 0xd, 8) , (const, 0x8, 8), (unique, 0x1000027a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000026a, 8) , (const, 0xd, 8) , (const, 0x8, 8), (unique, 0x1000026a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000025a, 8) , (const, 0xd, 8) , (const, 0x8, 8), (unique, 0x1000025a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002aa, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0x100002aa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000029a, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0x1000029a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000028a, 8) , (const, 0xc, 8) , (const, 0x8, 8), (unique, 0x1000028a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002da, 8) , (const, 0xb, 8) , (const, 0x8, 8), (unique, 0x100002da, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002ca, 8) , (const, 0xb, 8) , (const, 0x8, 8), (unique, 0x100002ca, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002ba, 8) , (const, 0xb, 8) , (const, 0x8, 8), (unique, 0x100002ba, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000030a, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0x1000030a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002fa, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0x100002fa, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100002ea, 8) , (const, 0xa, 8) , (const, 0x8, 8), (unique, 0x100002ea, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000033a, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0x1000033a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000032a, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0x1000032a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000031a, 8) , (const, 0x9, 8) , (const, 0x8, 8), (unique, 0x1000031a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000036a, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x1000036a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000035a, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x1000035a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000034a, 8) , (const, 0x8, 8) , (const, 0x8, 8), (unique, 0x1000034a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000039a, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x1000039a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000038a, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x1000038a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000037a, 8) , (const, 0x7, 8) , (const, 0x8, 8), (unique, 0x1000037a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003ca, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x100003ca, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003ba, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x100003ba, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003aa, 8) , (const, 0x6, 8) , (const, 0x8, 8), (unique, 0x100003aa, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003fa, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x100003fa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003ea, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x100003ea, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100003da, 8) , (const, 0x5, 8) , (const, 0x8, 8), (unique, 0x100003da, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000042a, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x1000042a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000041a, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x1000041a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000040a, 8) , (const, 0x4, 8) , (const, 0x8, 8), (unique, 0x1000040a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000045a, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x1000045a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000044a, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x1000044a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000043a, 8) , (const, 0x3, 8) , (const, 0x8, 8), (unique, 0x1000043a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000048a, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x1000048a, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000047a, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x1000047a, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000046a, 8) , (const, 0x2, 8) , (const, 0x8, 8), (unique, 0x1000046a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100004ba, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100004ba, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100004aa, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x100004aa, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x1000049a, 8) , (const, 0x1, 8) , (const, 0x8, 8), (unique, 0x1000049a, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100004da, 8) , (register, 0x0, 8), (unique, 0x100004da, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004d2, 8), (unique, 0x100004d2, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100004ca, 8), (unique, 0x100004ca, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x278, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x26a, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x259, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x248, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x237, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x226, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x215, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x204, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1f3, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1d1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1c0, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1af, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x19e, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x18d, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x17c, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x136760, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000067, 8) , (const, 0x0, 8), (unique, 0x10000067, 8) INT_AND (unique, 0x100006b2, 8) , (const, 0x8, 8), (unique, 0x100006b2, 8) CAST (unique, 0x3100, 8)]
[(register, 0x90, 4) COPY (const, 0x10, 4)]
[(register, 0x98, 4) COPY (const, 0x8, 4)]
[(register, 0x18, 4) COPY (const, 0x10, 4)]
[(register, 0x8, 4) COPY (const, 0xf, 4)]
[ ---  BRANCH (ram, 0x13660b, 1)]
[(register, 0x90, 4) COPY (const, 0xe, 4)]
[(register, 0x98, 4) COPY (const, 0x7, 4)]
[(register, 0x18, 4) COPY (const, 0xf, 4)]
[(register, 0x8, 4) COPY (const, 0xe, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x97, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x0, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000fa, 8) , (const, 0xf, 8) , (const, 0x8, 8), (unique, 0x100000fa, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000ea, 8) , (const, 0xf, 8) , (const, 0x8, 8), (unique, 0x100000ea, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x100000da, 8) , (const, 0xf, 8) , (const, 0x8, 8), (unique, 0x100000da, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8)]
[(register, 0x18, 4) MULTIEQUAL (register, 0x18, 4) , (register, 0x18, 4)]
[(register, 0x90, 4) MULTIEQUAL (register, 0x90, 4) , (register, 0x90, 4)]
[(register, 0x8, 4) MULTIEQUAL (register, 0x8, 4) , (register, 0x8, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (register, 0x1200, 16), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xffffffffffffffff, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffe, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffd, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffc, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffb, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffb, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffb, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x115, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x108, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xfb, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xee, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xe1, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd4, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xc7, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffffa, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffa, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffffa, 8) , (const, 0x10, 8), (register, 0x0, 8) CAST (unique, 0x100006e2, 8), (unique, 0x100006e2, 8) INT_ADD (unique, 0x3400, 8) , (unique, 0x100006da, 8), (unique, 0x100006da, 8) CAST (register, 0x38, 8), (unique, 0x3400, 8) CAST (unique, 0x100006d2, 8), (unique, 0x100006d2, 8) INT_ADD (unique, 0x100006ca, 8) , (unique, 0x3400, 8), (unique, 0x100006ca, 8) CAST (register, 0x10, 8), (unique, 0x3400, 8) CAST (unique, 0x100006c2, 8), (unique, 0x100006c2, 8) INT_ADD (unique, 0x100006ba, 8) , (unique, 0x3400, 8), (unique, 0x100006ba, 8) CAST (register, 0x30, 8), (unique, 0x3400, 8) INT_ADD (unique, 0x3300, 8) , (const, 0x70, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0xfffffffffffffff8, 8), (register, 0x0, 8) INT_ZEXT (unique, 0x10000071, 1), (unique, 0x10000071, 1) BOOL_NEGATE (register, 0x206, 1)]
[ ---  CBRANCH (ram, 0x13673e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x98, 4) , (const, 0x8, 4), (register, 0x98, 4) MULTIEQUAL (register, 0x98, 4) , (register, 0x98, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x124, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (register, 0x1200, 16), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0xfffffffffffffff9, 8) , (const, 0x10, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (register, 0x1200, 16) , (register, 0x1200, 16) , (const, 0x1, 8), (register, 0x1200, 16) INT_OR (register, 0x1200, 16) , (register, 0x1220, 16), (register, 0x1220, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (register, 0x1200, 16) CALLOTHER (const, 0xa5, 4) , (unique, 0x5300, 16) , (unique, 0x5300, 16) , (const, 0x1, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffff9, 8) , (const, 0x10, 8), (unique, 0x5300, 16) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x3400, 8) , (const, 0xfffffffffffffff9, 8) , (const, 0x10, 8)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x8, 4) INT_SUB (register, 0x8, 4) , (register, 0x90, 4)]
[ ---  CBRANCH (ram, 0x136755, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (register, 0x90, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x14d, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (register, 0x8, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001e2, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100001e2, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8), (register, 0x8, 8) INT_OR (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001ca, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100001ca, 8) PTRSUB (register, 0x10, 8) , (const, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x100001b2, 8) , (register, 0x0, 8) , (const, 0x8, 8), (unique, 0x100001b2, 8) PTRSUB (register, 0x30, 8) , (const, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x8, 4)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
