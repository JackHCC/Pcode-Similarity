[ ---  CBRANCH (ram, 0x121ed8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4eca00, 8) , (const, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4d, 4)]
[(ram, 0x4eca00, 8) INDIRECT (ram, 0x4eca00, 8) , (const, 0x4d, 4)]
[ ---  CALL (ram, 0x1212d0, 8)]
[(register, 0x30, 8) INT_AND (register, 0x30, 8) , (const, 0xffffffff, 8)]
[(register, 0x38, 8) INT_AND (register, 0x38, 8) , (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x121ec0, 1)]
[ ---  CALLIND (register, 0x0, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8) , (register, 0x8, 8) , (register, 0x80, 8), (register, 0x0, 8) CAST (unique, 0x1000002e, 8), (unique, 0x1000002e, 8) INT_XOR (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000026, 8), (unique, 0x10000026, 8) INT_ADD (register, 0x110, 8) , (const, 0x30, 8), (register, 0x0, 8) INT_OR (unique, 0x4ff00, 8) , (unique, 0x50000, 8), (unique, 0x50000, 8) INT_LEFT (ram, 0x4eca00, 8) , (const, 0x2f, 4), (unique, 0x4ff00, 8) INT_RIGHT (ram, 0x4eca00, 8) , (const, 0x11, 4), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8), (ram, 0x4eca00, 8) MULTIEQUAL (ram, 0x4eca00, 8) , (ram, 0x4eca00, 8)]
[(ram, 0x4eca00, 8) COPY (ram, 0x4eca00, 8), (ram, 0x4eca00, 8) INDIRECT (ram, 0x4eca00, 8) , (const, 0x3c, 4), (ram, 0x4eca00, 8) MULTIEQUAL (ram, 0x4eca00, 8) , (ram, 0x4eca00, 8)]
[ ---  RETURN (const, 0x1, 4)]
