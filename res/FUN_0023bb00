[(unique, 0x100002b0, 8) COPY (ram, 0x4ef7a8, 8)]
[(ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[(ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[ ---  CBRANCH (ram, 0x23bd48, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002b8, 8), (unique, 0x100002b8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x100002b0, 8) , (register, 0x38, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x21e, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8)]
[(unique, 0x100002a8, 8) COPY (ram, 0x4ef7a8, 8), (ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x21e, 4)]
[ ---  CBRANCH (ram, 0x23bd90, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8)]
[(ram, 0x4ef740, 1) COPY (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) COPY (ram, 0x4ef7a8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x27, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x27, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002c0, 8), (unique, 0x100002c0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x100002a0, 8) COPY (register, 0x38, 8)]
[(ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[(ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(register, 0x38, 8) MULTIEQUAL (unique, 0x100002a0, 8) , (unique, 0x100002a8, 8)]
[ ---  CBRANCH (ram, 0x23bcb0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2c, 4) , (register, 0x0, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23bb17, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0x100100000600, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8)]
[(register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8)]
[ ---  CBRANCH (ram, 0x23bb39, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x22, 4)]
[(register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4)]
[(unique, 0x10000258, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef741, 8)]
[ ---  CBRANCH (ram, 0x23bbaa, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002c8, 8), (unique, 0x100002c8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x51, 4), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (register, 0x0, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x51, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002d0, 8), (unique, 0x100002d0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000268, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000268, 8) , (register, 0x18, 8)]
[(unique, 0x10000238, 8) COPY (ram, 0x4ef7a8, 8), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  CBRANCH (ram, 0x23bc98, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x0, 4) , (const, 0x2d, 4), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23bbb8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_NOTEQUAL (unique, 0x1d680, 8) , (const, 0x0, 8), (unique, 0x1d680, 8) INT_AND (unique, 0x1d600, 8) , (const, 0x1, 8), (unique, 0x1d600, 8) INT_RIGHT (const, 0x100100000600, 8) , (unique, 0x1d580, 8), (unique, 0x1d580, 8) INT_AND (register, 0x0, 8) , (const, 0x3f, 8)]
[(unique, 0x10000288, 8) COPY (unique, 0x10000238, 8)]
[ ---  CBRANCH (ram, 0x23bb99, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5c, 4)]
[ ---  CBRANCH (ram, 0x23bd78, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ef7a8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002d8, 8), (unique, 0x100002d8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ef7a8, 8) , (const, 0x8, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x178, 4)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (ram, 0x4ef7a8, 8)]
[(unique, 0x10000298, 8) COPY (ram, 0x4ef7a8, 8), (ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x178, 4)]
[ ---  BRANCH (ram, 0x23bb99, 1)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x82, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x82, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100002e0, 8), (unique, 0x100002e0, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ef7a8, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 8) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000290, 8) COPY (unique, 0x10000238, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x91, 4), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x91, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000260, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x23bb60, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002e8, 8), (unique, 0x100002e8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000288, 8) , (unique, 0x10000290, 8) , (unique, 0x10000298, 8) , (unique, 0x10000238, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000258, 8) , (unique, 0x10000260, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0xa5, 4), (ram, 0x4ef740, 1) MULTIEQUAL (register, 0x0, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0xa5, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[(register, 0x0, 8) INT_ZEXT (register, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x23bb6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x23bd22, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002f0, 8), (unique, 0x100002f0, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x1a6, 4), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x1a6, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[(unique, 0x10000248, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x23bd2d, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0xffffffff, 4), (register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000248, 8) , (unique, 0x10000250, 8)]
[(unique, 0x10000240, 8) COPY (ram, 0x4ef7a8, 8), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  CBRANCH (ram, 0x23bbb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x22, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0xb2, 4), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0xb2, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x0, 1), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000270, 8) COPY (unique, 0x10000240, 8)]
[ ---  CBRANCH (ram, 0x23bd11, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x5c, 4)]
[ ---  CBRANCH (ram, 0x23bda0, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ef7a8, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x100002f8, 8), (unique, 0x100002f8, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ef7a8, 8) , (const, 0x8, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x219, 4)]
[(register, 0x0, 4) CALL (ram, 0x18e0d0, 8) , (ram, 0x4ef7a8, 8)]
[(unique, 0x10000280, 8) COPY (ram, 0x4ef7a8, 8), (ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x219, 4)]
[ ---  BRANCH (ram, 0x23bd11, 1)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x1ed, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x1ed, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000300, 8), (unique, 0x10000300, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (ram, 0x4ef7a8, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (unique, 0xbd80, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8)]
[(unique, 0x10000278, 8) COPY (unique, 0x10000240, 8)]
[(register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x1fc, 4), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x1fc, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (register, 0x0, 1), (register, 0x0, 1) SUBPIECE (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[ ---  CBRANCH (ram, 0x23bcd8, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x10, 8), (unique, 0xbd80, 8) CAST (unique, 0x10000308, 8), (unique, 0x10000308, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x10000270, 8) , (unique, 0x10000278, 8) , (unique, 0x10000280, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x213, 4), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x213, 4), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000310, 8), (unique, 0x10000310, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x0, 4) INT_ZEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[(unique, 0x10000250, 8) COPY (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x1b3, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x1b3, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x18, 8) , (const, 0x0, 1)]
[(unique, 0x1000022d, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  CBRANCH (ram, 0x23bbc8, 1) , (unique, 0x1000022b, 1), (unique, 0x1000022b, 1) INT_EQUAL (unique, 0x1000022c, 1) , (const, 0x0, 1), (unique, 0x1000022c, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef740, 1) INDIRECT (unique, 0x1000022c, 1) , (const, 0xc1, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (unique, 0x1000022d, 8) , (const, 0xc1, 4)]
[ ---  CBRANCH (ram, 0x23bd60, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x10000123, 8) , (unique, 0x1000015b, 8), (unique, 0x1000015b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x10000123, 8) COPY (const, 0x2b2060, 8)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0xd0, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0xd0, 4)]
[ ---  CBRANCH (ram, 0x23bdb1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x1000012b, 8) , (unique, 0x10000163, 8), (unique, 0x10000163, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x1000012b, 8) COPY (const, 0x2b2068, 8)]
[(register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  BRANCH (ram, 0x23bd60, 1)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0xdf, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0xdf, 4)]
[ ---  CBRANCH (ram, 0x23bdb8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x10000133, 8) , (unique, 0x1000016b, 8), (unique, 0x1000016b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x10000133, 8) COPY (const, 0x2b206e, 8)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x23bd60, 1)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0xee, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0xee, 4)]
[ ---  CBRANCH (ram, 0x23bdbf, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x1000013b, 8) , (unique, 0x10000173, 8), (unique, 0x10000173, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x1000013b, 8) COPY (const, 0x2b2077, 8)]
[(register, 0x0, 4) COPY (const, 0x3, 4)]
[ ---  BRANCH (ram, 0x23bd60, 1)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0xfd, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0xfd, 4)]
[ ---  CBRANCH (ram, 0x23bdc6, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x10000143, 8) , (unique, 0x1000017b, 8), (unique, 0x1000017b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x10000143, 8) COPY (const, 0x2b207e, 8)]
[(register, 0x0, 4) COPY (const, 0x4, 4)]
[ ---  BRANCH (ram, 0x23bd60, 1)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x10c, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x10c, 4)]
[ ---  CBRANCH (ram, 0x23bd5b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x1000014b, 8) , (unique, 0x10000183, 8), (unique, 0x10000183, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x1000014b, 8) COPY (const, 0x2b2086, 8)]
[(register, 0x0, 4) COPY (const, 0x5, 4)]
[(ram, 0x4ef740, 1) INDIRECT (ram, 0x4ef740, 1) , (const, 0x11b, 4)]
[(ram, 0x4ef7a8, 8) INDIRECT (ram, 0x4ef7a8, 8) , (const, 0x11b, 4)]
[(register, 0x0, 4) COPY (const, 0xa, 4)]
[ ---  CBRANCH (ram, 0x23bdcd, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x121200, 8) , (unique, 0x10000153, 8) , (unique, 0x1000018b, 8), (unique, 0x1000018b, 8) PTRSUB (const, 0x0, 8) , (const, 0x4ef740, 8), (unique, 0x10000153, 8) COPY (const, 0x2b208e, 8)]
[(ram, 0x4ef740, 1) COPY (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) COPY (ram, 0x4ef7a8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4)]
[(register, 0x0, 4) COPY (const, 0x6, 4)]
[ ---  BRANCH (ram, 0x23bd60, 1)]
[(ram, 0x4ef740, 1) COPY (ram, 0x4ef740, 1), (ram, 0x4ef740, 1) MULTIEQUAL (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1) , (ram, 0x4ef740, 1)]
[(ram, 0x4ef7a8, 8) COPY (ram, 0x4ef7a8, 8), (ram, 0x4ef7a8, 8) MULTIEQUAL (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8) , (ram, 0x4ef7a8, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x10000318, 8), (unique, 0x10000318, 8) CAST (unique, 0x3a00, 8), (unique, 0x3a00, 8) PTRADD (unique, 0x1000011b, 8) , (unique, 0x3900, 8) , (const, 0x1, 8), (unique, 0x1000011b, 8) PTRSUB (const, 0x0, 8) , (const, 0x2b2024, 8), (unique, 0x3900, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_SEXT (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(ram, 0x4ef740, 1) COPY (unique, 0x1000022c, 1)]
[(ram, 0x4ef7a8, 8) COPY (unique, 0x1000022d, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
