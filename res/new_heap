[ ---  CBRANCH (ram, 0x4219c0, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x30, 8) , (const, 0x8000, 8), (register, 0x30, 8) INT_ADD (register, 0x30, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) COPY (const, 0x8000, 8)]
[ ---  BRANCH (ram, 0x4218ce, 1)]
[ ---  CBRANCH (ram, 0x4219d0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (const, 0x4000000, 8) , (register, 0x30, 8)]
[(register, 0x30, 8) COPY (const, 0x4000000, 8)]
[ ---  CBRANCH (ram, 0x4218ce, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x4000000, 8) , (register, 0x38, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[(register, 0x18, 8) INT_AND (register, 0x18, 8) , (unique, 0x3a00, 8), (register, 0x18, 8) INT_2COMP (ram, 0x4c6118, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (ram, 0x4c6118, 8), (unique, 0x3880, 8) INT_SUB (register, 0x30, 8) , (const, 0x1, 8), (register, 0x30, 8) MULTIEQUAL (register, 0x30, 8) , (register, 0x30, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x421927, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (ram, 0x4c7c98, 8) , (const, 0x0, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x70, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x70, 4)]
[(ram, 0x4c7c98, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421927, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4561f0, 8) , (ram, 0x4c7c98, 8) , (const, 0x4000000, 8) , (const, 0x0, 4) , (const, 0x4022, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421986, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a0, 8) , (const, 0x0, 8), (unique, 0x100000a0, 8) INT_AND (unique, 0x1000016d, 8) , (const, 0x3ffffff, 8), (unique, 0x1000016d, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x8b, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x8b, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0x0, 8) , (const, 0x4000000, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xaf, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0xaf, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[ ---  CBRANCH (ram, 0x4219f8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (const, 0x8000000, 8) , (const, 0x0, 4) , (const, 0x4022, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[(unique, 0x1000015d, 8) COPY (unique, 0x3c80, 8), (unique, 0x3c80, 8) CAST (unique, 0x1000018d, 8), (unique, 0x1000018d, 8) INT_ADD (unique, 0x10000185, 8) , (const, 0x4000000, 8), (unique, 0x10000185, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000175, 8) , (const, 0x3ffffff, 8), (unique, 0x10000175, 8) CAST (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421a40, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0xa8, 8) , (const, 0x0, 8), (register, 0xa8, 8) CAST (unique, 0x100001a5, 8), (unique, 0x100001a5, 8) INT_SUB (unique, 0x10000195, 8) , (unique, 0x1000019d, 8), (unique, 0x1000019d, 8) CAST (register, 0x0, 8), (unique, 0x10000195, 8) CAST (register, 0xa0, 8), (register, 0xa0, 8) CAST (unique, 0x1000017d, 8), (unique, 0x1000017d, 8) INT_AND (unique, 0x3200, 8) , (const, 0xfffffffffc000000, 8), (unique, 0x3200, 8) INT_ADD (unique, 0x10000175, 8) , (const, 0x3ffffff, 8), (unique, 0x10000175, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x136, 4)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0x0, 8) , (unique, 0x100001ad, 8), (unique, 0x100001ad, 8) CAST (register, 0xa8, 8)]
[(unique, 0x10000155, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x136, 4)]
[ ---  BRANCH (ram, 0x421976, 1)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xe1, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0xe1, 4), (ram, 0x4c7c98, 8) COPY (unique, 0x10000165, 8), (unique, 0x10000165, 8) MULTIEQUAL (unique, 0x10000155, 8) , (unique, 0x1000015d, 8)]
[ ---  CALL (ram, 0x4562a0, 8) , (unique, 0x3c80, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_SUB (const, 0x4000000, 8) , (unique, 0x100001b5, 8), (unique, 0x100001b5, 8) CAST (register, 0xa8, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x15b, 4)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x15b, 4)]
[ ---  CBRANCH (ram, 0x4219e2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CALL (ram, 0x4561f0, 8) , (const, 0x0, 8) , (const, 0x4000000, 8) , (const, 0x0, 4) , (const, 0x4022, 4) , (const, 0xffffffff, 4) , (const, 0x0, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x421986, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x10000130, 8) , (const, 0x0, 8), (unique, 0x10000130, 8) INT_AND (unique, 0x100001bd, 8) , (const, 0x3ffffff, 8), (unique, 0x100001bd, 8) CAST (register, 0x0, 8)]
[(ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0xe7, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0xe7, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[ ---  CBRANCH (ram, 0x421a30, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x4562d0, 8) , (register, 0xa0, 8) , (register, 0x18, 8) , (const, 0x3, 4), (register, 0xa0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0xa0, 8) , (register, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3800, 8) , (register, 0x18, 8), (unique, 0x3800, 8) CAST (unique, 0x100001cd, 8), (unique, 0x100001cd, 8) INT_ADD (unique, 0x100001c5, 8) , (const, 0x10, 8), (unique, 0x100001c5, 8) CAST (register, 0xa0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000148, 8) , (register, 0x18, 8), (unique, 0x10000148, 8) CAST (unique, 0x100001dd, 8), (unique, 0x100001dd, 8) INT_ADD (unique, 0x100001d5, 8) , (const, 0x18, 8), (unique, 0x100001d5, 8) CAST (register, 0xa0, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x351, 4), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x350, 4)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x351, 4), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x350, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0xa0, 8)]
[ ---  CALL (ram, 0x4562a0, 8) , (register, 0xa0, 8) , (const, 0x4000000, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (register, 0x0, 8)]
[(ram, 0x4c6118, 8) COPY (ram, 0x4c6118, 8), (ram, 0x4c6118, 8) INDIRECT (ram, 0x4c6118, 8) , (const, 0x111, 4), (ram, 0x4c6118, 8) MULTIEQUAL (ram, 0x4c6118, 8) , (ram, 0x4c6118, 8)]
[(ram, 0x4c7c98, 8) COPY (ram, 0x4c7c98, 8), (ram, 0x4c7c98, 8) INDIRECT (ram, 0x4c7c98, 8) , (const, 0x111, 4), (ram, 0x4c7c98, 8) MULTIEQUAL (ram, 0x4c7c98, 8) , (ram, 0x4c7c98, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x0, 8)]
