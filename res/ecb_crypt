[(register, 0x20, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffc8, 8)]
[(stack, 0xffffffffffffffd4, 4) COPY (const, 0x1, 4)]
[ ---  CBRANCH (ram, 0x22f02a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000039, 4) , (const, 0x0, 4), (unique, 0x10000039, 4) INT_AND (register, 0x10, 4) , (const, 0x7, 4)]
[ ---  CBRANCH (ram, 0x22f038, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x10, 4) , (const, 0x2001, 4)]
[(stack, 0xffffffffffffffc8, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x38, 8)]
[(stack, 0xffffffffffffffc9, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffca, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffcb, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x3, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffcc, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x4, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffcd, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x5, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffce, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x6, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffcf, 1) INDIRECT (unique, 0xbb00, 1) , (const, 0x84, 4), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x38, 8) , (const, 0x7, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffffd0, 4) INDIRECT (register, 0x30, 4) , (const, 0x84, 4), (register, 0x30, 4) INT_AND (register, 0x8, 4) , (const, 0x1, 4)]
[(stack, 0xffffffffffffffd4, 4) INDIRECT (stack, 0xffffffffffffffd4, 4) , (const, 0x84, 4)]
[(register, 0x0, 4) COPY (const, 0x2, 4)]
[ ---  CBRANCH (ram, 0x22f02f, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x22f0c0, 8) , (register, 0x30, 8) , (register, 0x10, 4) , (register, 0x20, 8)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 4) , (const, 0x2, 4), (register, 0x18, 4) INT_AND (register, 0x8, 4) , (const, 0x2, 4)]
[ ---  BRANCH (ram, 0x22f02f, 1)]
[(register, 0x0, 4) COPY (const, 0x3, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x10000047, 4), (unique, 0x10000047, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
