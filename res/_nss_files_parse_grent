[(unique, 0x3400, 8) CAST (unique, 0x1000028c, 8), (unique, 0x1000028c, 8) INT_ADD (unique, 0x10000284, 8) , (register, 0x8, 8), (unique, 0x10000284, 8) CAST (register, 0x10, 8)]
[(unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000294, 8), (unique, 0x10000294, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8)]
[(unique, 0x10000254, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e21ec, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x1e23e0, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x38, 8) , (unique, 0x3400, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x340, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x340, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x340, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (unique, 0xbd80, 8) , (const, 0x340, 4)]
[(unique, 0x1000024c, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100002ac, 8), (unique, 0x100002ac, 8) INT_ADD (unique, 0x100002a4, 8) , (unique, 0x10000183, 8), (unique, 0x100002a4, 8) CAST (register, 0x38, 8), (unique, 0x10000183, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000029c, 8), (unique, 0x1000029c, 8) CAST (register, 0x38, 8)]
[ ---  BRANCH (ram, 0x1e21ef, 1)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x1000024c, 8) , (unique, 0x10000254, 8) , (unique, 0x10000254, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4f, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x4f, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffb8, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x4f, 4), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8) , (unique, 0xbd80, 8)]
[ ---  CBRANCH (ram, 0x1e2204, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x121110, 8) , (unique, 0x100002b4, 8) , (const, 0xa, 4), (unique, 0x100002b4, 8) CAST (register, 0x38, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x5b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x0, 8) , (const, 0x0, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x5d, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (unique, 0x100002bc, 8), (unique, 0x100002bc, 8) CAST (register, 0x38, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100002c4, 8), (unique, 0x100002c4, 8) CAST (register, 0x38, 8)]
[(unique, 0x100001b5, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e221b, 1) , (unique, 0x100001b4, 1), (unique, 0x100001b4, 1) INT_NOTEQUAL (unique, 0x100001b3, 1) , (const, 0x0, 1), (unique, 0x100001b3, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1e2210, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001b3, 1) , (const, 0x3a, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100002dc, 8), (unique, 0x100002dc, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100002d4, 8), (unique, 0x100002d4, 8) INT_ADD (unique, 0x100002cc, 8) , (const, 0x1, 8), (unique, 0x100002cc, 8) CAST (unique, 0x100001b5, 8)]
[ ---  CBRANCH (ram, 0x1e22a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001b3, 1) , (const, 0x0, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x85, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100002f4, 8) , (const, 0x0, 1), (unique, 0x100002f4, 8) CAST (unique, 0x100001b5, 8)]
[(unique, 0x3100, 8) CAST (unique, 0x10000304, 8), (unique, 0x10000304, 8) INT_ADD (unique, 0x100002fc, 8) , (const, 0x1, 8), (unique, 0x100002fc, 8) CAST (unique, 0x100001b5, 8)]
[ ---  CBRANCH (ram, 0x1e2298, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x100002ec, 8), (unique, 0x100002ec, 8) INT_ADD (unique, 0x100002e4, 8) , (const, 0x1, 8), (unique, 0x100002e4, 8) CAST (unique, 0x100001b5, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001b5, 8) , (unique, 0x3100, 8)]
[ ---  CBRANCH (ram, 0x1e23f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100000a2, 1) , (const, 0x0, 1), (unique, 0x100000a2, 1) INT_AND (register, 0x0, 1) , (const, 0xfd, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (const, 0x0, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x31a, 4), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x317, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000030c, 8) , (const, 0x0, 4), (unique, 0x1000030c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x8b, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x10000314, 8), (unique, 0x10000314, 8) CAST (register, 0x80, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000031c, 8), (unique, 0x1000031c, 8) CAST (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x18, 8)]
[(unique, 0x100001bf, 8) MULTIEQUAL (register, 0x80, 8) , (register, 0x80, 8)]
[ ---  CBRANCH (ram, 0x1e224c, 1) , (unique, 0x100001be, 1), (unique, 0x100001be, 1) INT_NOTEQUAL (unique, 0x100001bd, 1) , (const, 0x0, 1), (unique, 0x100001bd, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1e2240, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x100001bd, 1) , (const, 0x3a, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000334, 8), (unique, 0x10000334, 8) CAST (register, 0x80, 8), (register, 0x80, 8) CAST (unique, 0x1000032c, 8), (unique, 0x1000032c, 8) INT_ADD (unique, 0x10000324, 8) , (const, 0x1, 8), (unique, 0x10000324, 8) CAST (unique, 0x100001bf, 8)]
[ ---  CBRANCH (ram, 0x1e2380, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x100001bd, 1) , (const, 0x0, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2b4, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000033c, 8) , (const, 0x0, 1), (unique, 0x1000033c, 8) CAST (unique, 0x100001bf, 8)]
[(register, 0x80, 8) CAST (unique, 0x1000034c, 8), (unique, 0x1000034c, 8) INT_ADD (unique, 0x10000344, 8) , (const, 0x1, 8), (unique, 0x10000344, 8) CAST (unique, 0x100001bf, 8)]
[ ---  CBRANCH (ram, 0x1e2269, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x1000012a, 1) , (const, 0x0, 1), (unique, 0x1000012a, 1) INT_AND (register, 0x0, 1) , (const, 0xfd, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1e2399, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000126, 1) , (const, 0x0, 1), (unique, 0x10000126, 1) INT_AND (register, 0x0, 1) , (const, 0xfd, 1), (register, 0x0, 1) INT_SUB (unique, 0xbb00, 1) , (const, 0x2b, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x290, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x290, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x290, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x290, 4)]
[ ---  CBRANCH (ram, 0x1e2273, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x145130, 8) , (register, 0x80, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100001bf, 8) , (register, 0x80, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x2a6, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000354, 8) , (register, 0x0, 4), (unique, 0x10000354, 8) CAST (unique, 0x3100, 8), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e244a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x80, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  CBRANCH (ram, 0x1e2410, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x1000035c, 8), (unique, 0x1000035c, 8) CAST (register, 0x80, 8), (register, 0x80, 8) MULTIEQUAL (unique, 0x100001bf, 8) , (register, 0x80, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x118, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffb8, 8) INDIRECT (stack, 0xffffffffffffffb8, 8) , (const, 0x118, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x118, 4)]
[ ---  CBRANCH (ram, 0x1e2273, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x0, 8) , (const, 0x100000000, 8), (register, 0x0, 8) CALL (ram, 0x145130, 8) , (register, 0x80, 8) , (unique, 0x3800, 8) , (const, 0xa, 8) , (const, 0x0, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffb8, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x12e, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000364, 8) , (register, 0x0, 4), (unique, 0x10000364, 8) CAST (unique, 0x3100, 8), (register, 0x0, 4) SUBPIECE (register, 0x0, 8) , (const, 0x0, 4), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1e24a7, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffb8, 8) , (register, 0x80, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x27b, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000036c, 8) , (const, 0x0, 4), (unique, 0x1000036c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x2, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x1e244a, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[ ---  CBRANCH (ram, 0x1e248c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000374, 8), (unique, 0x10000374, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8) , (stack, 0xffffffffffffffb8, 8)]
[(register, 0x18, 8) CAST (unique, 0x10000384, 8), (unique, 0x10000384, 8) INT_ADD (unique, 0x1000037c, 8) , (const, 0x1, 8), (unique, 0x1000037c, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x1e22c1, 1)]
[(unique, 0x100001f4, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e22c1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x100001f4, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x1000022c, 8) COPY (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x1e247a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[(unique, 0x1000023c, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e2484, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (unique, 0x3400, 8)]
[(unique, 0x10000244, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1e2495, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0x10, 8) , (register, 0x18, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x269, 4)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x269, 4)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x269, 4)]
[(unique, 0x10000234, 8) COPY (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x1000039c, 8), (unique, 0x1000039c, 8) INT_ADD (unique, 0x10000394, 8) , (unique, 0x100001a3, 8), (unique, 0x10000394, 8) CAST (register, 0x18, 8), (unique, 0x100001a3, 8) INT_ADD (register, 0x0, 8) , (const, 0x1, 8), (register, 0x0, 8) CALL (ram, 0x121100, 8) , (unique, 0x1000038c, 8), (unique, 0x1000038c, 8) CAST (register, 0x18, 8)]
[ ---  BRANCH (ram, 0x1e22ca, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x2, 8) , (const, 0x8, 8), (register, 0xa8, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_AND (register, 0xa8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0xa8, 8) INT_ADD (unique, 0x100003a4, 8) , (const, 0x7, 8), (unique, 0x100003a4, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8) , (unique, 0x10000244, 8)]
[(unique, 0x10000214, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) CAST (unique, 0x100003ac, 8), (unique, 0x100003ac, 8) INT_AND (register, 0xa8, 8) , (const, 0xfffffffffffffff8, 8), (register, 0xa8, 8) INT_ADD (unique, 0x100003a4, 8) , (const, 0x7, 8), (unique, 0x100003a4, 8) CAST (register, 0xa8, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x1000022c, 8) , (unique, 0x10000234, 8) , (unique, 0x1000023c, 8) , (unique, 0x10000244, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x10000224, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x10000214, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1e236e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0x38, 8) , (unique, 0x3400, 8), (register, 0x38, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0x38, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x10000224, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1e2460, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003b4, 8), (unique, 0x100003b4, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x245, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e24b1, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0xa8, 8) , (const, 0x0, 8)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1e2275, 1)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x249, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3100, 8) , (unique, 0x100003bc, 8), (unique, 0x100003bc, 8) CAST (register, 0xa8, 8), (unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(register, 0x0, 8) COPY (const, 0x1, 8)]
[ ---  BRANCH (ram, 0x1e2275, 1)]
[(unique, 0x1000027c, 8) COPY (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1e2400, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003cc, 8), (unique, 0x100003cc, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100003c4, 8), (unique, 0x100003c4, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4eae00, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[(unique, 0x100001e4, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000274, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e232b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1)]
[ ---  CBRANCH (ram, 0x1e2310, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0x58c00, 1) , (const, 0x0, 1), (unique, 0x58c00, 1) INT_AND (unique, 0xbb00, 1) , (const, 0x20, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3a00, 8), (unique, 0x3a00, 8) CAST (unique, 0x100003ec, 8), (unique, 0x100003ec, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x3900, 8), (unique, 0x3900, 8) INT_MULT (register, 0x10, 8) , (const, 0x2, 8), (unique, 0x3880, 8) INT_ADD (unique, 0xbd80, 8) , (const, 0x1, 8), (register, 0x10, 8) INT_SEXT (unique, 0xbb00, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x100003e4, 8), (unique, 0x100003e4, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100003dc, 8), (unique, 0x100003dc, 8) INT_ADD (unique, 0x100003d4, 8) , (const, 0x1, 8), (unique, 0x100003d4, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e2356, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1)]
[(unique, 0x100001dc, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000026c, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e2356, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000264, 8) , (unique, 0x1000026c, 8) , (unique, 0x10000274, 8)]
[ ---  CBRANCH (ram, 0x1e2330, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x10000404, 8), (unique, 0x10000404, 8) CAST (register, 0x18, 8), (register, 0x18, 8) CAST (unique, 0x100003fc, 8), (unique, 0x100003fc, 8) INT_ADD (unique, 0x100003f4, 8) , (const, 0x1, 8), (unique, 0x100003f4, 8) CAST (register, 0x18, 8), (register, 0x18, 8) COPY (unique, 0x100001ec, 8), (unique, 0x100001ec, 8) MULTIEQUAL (unique, 0x100001d4, 8) , (unique, 0x100001dc, 8) , (unique, 0x100001e4, 8)]
[(unique, 0x100001d4, 8) COPY (register, 0x18, 8)]
[(unique, 0x10000264, 8) COPY (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e2342, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2c, 1)]
[ ---  CBRANCH (ram, 0x1e2356, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (register, 0x18, 8) , (register, 0x18, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x1f1, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x18, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) CAST (unique, 0x10000414, 8), (unique, 0x10000414, 8) INT_ADD (unique, 0x1000040c, 8) , (const, 0x1, 8), (unique, 0x1000040c, 8) CAST (register, 0x18, 8)]
[(register, 0x30, 8) PTRADD (register, 0x30, 8) , (const, 0x1, 8) , (const, 0x8, 8)]
[(unique, 0x3100, 8) PTRADD (register, 0x30, 8) , (const, 0x3, 8) , (const, 0x8, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8) , (register, 0x38, 8) , (unique, 0x3100, 8)]
[(register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8) , (register, 0x18, 8)]
[(unique, 0x1000021c, 8) COPY (register, 0x30, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x1000027c, 8) , (unique, 0x1000027c, 8) , (unique, 0x1000027c, 8) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x1e22d9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 1) , (const, 0x0, 1), (register, 0x0, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(register, 0x30, 8) MULTIEQUAL (unique, 0x1000021c, 8) , (register, 0x30, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x20c, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000041c, 8) , (const, 0x0, 1), (unique, 0x1000041c, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[(register, 0x18, 8) CAST (unique, 0x1000042c, 8), (unique, 0x1000042c, 8) INT_ADD (unique, 0x10000424, 8) , (const, 0x1, 8), (unique, 0x10000424, 8) CAST (register, 0x18, 8), (register, 0x18, 8) MULTIEQUAL (register, 0x18, 8) , (register, 0x18, 8)]
[ ---  CBRANCH (ram, 0x1e22e2, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3400, 8) , (register, 0x38, 8), (register, 0x38, 8) MULTIEQUAL (register, 0x38, 8) , (register, 0x38, 8)]
[(ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x222, 4), (ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x80, 8) , (const, 0x22, 4)]
[(register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x1e2275, 1)]
[(stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0x0, 8) COPY (const, 0x0, 8)]
[(ram, 0x4eae00, 8) MULTIEQUAL (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8) , (ram, 0x4eae00, 8)]
[(register, 0x0, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1e24bb, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (stack, 0xffffffffffffffc0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x4f00, 8), (unique, 0x4f00, 8) CAST (unique, 0x10000434, 8), (unique, 0x10000434, 8) INT_ADD (register, 0x110, 8) , (const, 0x28, 8), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8), (stack, 0xffffffffffffffc0, 8) MULTIEQUAL (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8) , (stack, 0xffffffffffffffc0, 8)]
[(stack, 0xffffffffffffffc0, 8) INDIRECT (stack, 0xffffffffffffffc0, 8) , (const, 0x102, 4)]
[ ---  CALL (ram, 0x234c80, 8)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8), (ram, 0x4eae00, 8) INDIRECT (ram, 0x4eae00, 8) , (const, 0x102, 4)]
[ ---  RETURN (const, 0x1, 4)]
[(ram, 0x4eae00, 8) COPY (ram, 0x4eae00, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8)]
