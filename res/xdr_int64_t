[(register, 0x200, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x0, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000006f, 8), (unique, 0x1000006f, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23b088, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbc80, 4) , (const, 0x1, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x1000006f, 8), (unique, 0x1000006f, 8) PTRSUB (register, 0x38, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x23b0a8, 1) , (register, 0x200, 1)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (register, 0x10, 4) , (const, 0x6f, 4), (register, 0x10, 4) SUBPIECE (unique, 0x100000d7, 8) , (const, 0x0, 4), (unique, 0x100000d7, 8) INT_RIGHT (unique, 0x100000ef, 8) , (const, 0x20, 4), (unique, 0x100000ef, 8) CAST (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (register, 0x0, 4) , (const, 0x6f, 4), (register, 0x0, 4) SUBPIECE (unique, 0xbd80, 8) , (const, 0x0, 4), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CBRANCH (ram, 0x23b07e, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x48, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x84, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x84, 4)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x48, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  BRANCH (ram, 0x23b07e, 1)]
[(register, 0x0, 4) INT_ZEXT (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x2, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) CAST (unique, 0x100000f7, 4), (unique, 0x100000f7, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4) , (register, 0x0, 4)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0x9c, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0x9c, 4)]
[ ---  CBRANCH (ram, 0x23b0e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[(stack, 0xffffffffffffffe0, 4) INDIRECT (stack, 0xffffffffffffffe0, 4) , (const, 0xcc, 4)]
[(stack, 0xffffffffffffffe4, 4) INDIRECT (stack, 0xffffffffffffffe4, 4) , (const, 0xcc, 4)]
[ ---  CBRANCH (ram, 0x23b098, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALLIND (unique, 0xbd80, 8) , (register, 0x38, 8) , (unique, 0x3800, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (unique, 0xbd80, 8) , (const, 0x40, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffffe4, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRSUB (register, 0x38, 8) , (const, 0x8, 8)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x30, 8) , (register, 0x0, 8), (register, 0x0, 8) INT_ADD (unique, 0x100000e7, 8) , (stack, 0xffffffffffffffe4, 4), (unique, 0x100000e7, 8) INT_LEFT (unique, 0x100000df, 8) , (const, 0x20, 8), (unique, 0x100000df, 8) INT_SEXT (stack, 0xffffffffffffffe0, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x1, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (const, 0x0, 4)]
