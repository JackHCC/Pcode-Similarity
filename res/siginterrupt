[(register, 0x20, 8) CAST (unique, 0x10000082, 8), (unique, 0x10000082, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(stack, 0xffffffffffffffd0, 4) INDIRECT (stack, 0xffffffffffffffd0, 4) , (const, 0x23, 4)]
[ ---  CBRANCH (ram, 0x135ef0, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (register, 0x38, 4) , (const, 0x0, 8) , (register, 0x20, 8), (register, 0x20, 8) CAST (unique, 0x1000007a, 8), (unique, 0x1000007a, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff48, 8)]
[(register, 0x0, 4) COPY (const, 0xffffffff, 4)]
[ ---  BRANCH (ram, 0x135eac, 1)]
[(register, 0x8, 1) SUBPIECE (register, 0x8, 4) , (const, 0x0, 4), (register, 0x8, 4) INT_ADD (register, 0x38, 4) , (const, 0xffffffff, 4)]
[ ---  CBRANCH (ram, 0x135ec0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x30, 4) , (const, 0x0, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000009a, 8) , (unique, 0xbd80, 8), (unique, 0x1000009a, 8) CAST (unique, 0x3400, 8), (unique, 0xbd80, 8) INT_OR (unique, 0xbd80, 8) , (register, 0x10, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000092, 8), (unique, 0x10000092, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x10000062, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x10000062, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8420, 8), (unique, 0x3300, 8) INT_MULT (register, 0x0, 8) , (const, 0x8, 8), (register, 0x10, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x0, 8) INT_RIGHT (unique, 0x1000008a, 8) , (const, 0x6, 4), (unique, 0x1000008a, 8) CAST (register, 0x0, 8), (register, 0x0, 8) INT_SEXT (register, 0x8, 4)]
[(register, 0x0, 4) INT_AND (stack, 0xffffffffffffffd0, 4) , (const, 0xefffffff, 4)]
[ ---  BRANCH (ram, 0x135e96, 1)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100000b2, 8) , (unique, 0xbd80, 8), (unique, 0x100000b2, 8) CAST (unique, 0x3400, 8), (unique, 0xbd80, 8) INT_AND (unique, 0xbd80, 8) , (register, 0x0, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x100000aa, 8), (unique, 0x100000aa, 8) CAST (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x1000005a, 8) , (unique, 0x3300, 8) , (const, 0x1, 8), (unique, 0x1000005a, 8) PTRSUB (const, 0x0, 8) , (const, 0x4c8420, 8), (unique, 0x3300, 8) INT_MULT (register, 0x10, 8) , (const, 0x8, 8), (register, 0x0, 8) INT_NEGATE (register, 0x0, 8), (register, 0x0, 8) INT_LEFT (const, 0x1, 8) , (unique, 0x53700, 1), (unique, 0x53700, 1) INT_AND (register, 0x8, 1) , (const, 0x3f, 1), (register, 0x10, 8) INT_RIGHT (unique, 0x100000a2, 8) , (const, 0x6, 4), (unique, 0x100000a2, 8) CAST (register, 0x10, 8), (register, 0x10, 8) INT_SEXT (register, 0x8, 4)]
[(register, 0x0, 4) INT_OR (stack, 0xffffffffffffffd0, 4) , (const, 0x10000000, 4)]
[(stack, 0xffffffffffffffd0, 4) INDIRECT (register, 0x0, 4) , (const, 0xbb, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
[(register, 0x0, 4) INT_SRIGHT (register, 0x0, 4) , (const, 0x1f, 4), (register, 0x0, 4) CALL (ram, 0x1356e0, 8) , (register, 0x38, 4) , (register, 0x20, 8) , (const, 0x0, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 4), (register, 0x0, 4) COPY (register, 0x0, 4), (register, 0x0, 4) MULTIEQUAL (register, 0x0, 4) , (register, 0x0, 4)]
