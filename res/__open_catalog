[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x28, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x28, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x28, 4)]
[(register, 0x0, 8) CALL (ram, 0x189080, 8)]
[ ---  CBRANCH (ram, 0x134008, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x30, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x134008, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13451c, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x30, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x765, 4)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[(register, 0xb0, 8) COPY (const, 0x0, 8)]
[(unique, 0x1000068c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) COPY (const, 0x0, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0xa0, 8) MULTIEQUAL (register, 0x30, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000684, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000068c, 8) , (unique, 0x100005f4, 8)]
[ ---  CBRANCH (ram, 0x1343c0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x18, 1) , (const, 0x3a, 1), (register, 0x18, 1) MULTIEQUAL (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0x1000036d, 8) , (unique, 0x1000036d, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (unique, 0x10000369, 4) , (unique, 0x10000369, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x10000361, 8) , (unique, 0x10000361, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000358, 8) , (unique, 0x10000358, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000348, 8) , (unique, 0x10000348, 8)]
[(register, 0x18, 1) MULTIEQUAL (register, 0x18, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[(unique, 0x100006a4, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x100006dc, 8) COPY (register, 0xa0, 8), (register, 0xa0, 8) MULTIEQUAL (register, 0xa0, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x10000714, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000684, 8) , (unique, 0x10000350, 8) , (unique, 0x10000350, 8)]
[(unique, 0x10000338, 8) MULTIEQUAL (unique, 0x1000069c, 8) , (unique, 0x100006a4, 8) , (unique, 0x100006ac, 8) , (unique, 0x100006b4, 8) , (unique, 0x100006bc, 8) , (unique, 0x100006c4, 8) , (unique, 0x100006cc, 8)]
[(unique, 0x10000348, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (unique, 0x10000348, 8) , (register, 0xb0, 8) , (unique, 0x10000348, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000350, 8) MULTIEQUAL (unique, 0x1000070c, 8) , (unique, 0x10000714, 8) , (unique, 0x1000071c, 8) , (unique, 0x10000724, 8) , (unique, 0x1000072c, 8) , (unique, 0x10000734, 8) , (register, 0xb8, 8)]
[(unique, 0x10000358, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (unique, 0x10000358, 8) , (register, 0x110, 8) , (unique, 0x10000358, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000361, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8) , (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000369, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4) , (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(unique, 0x1000036d, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8) , (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(unique, 0x100005c4, 8) COPY (unique, 0x10000340, 8), (unique, 0x10000340, 8) MULTIEQUAL (unique, 0x100006d4, 8) , (unique, 0x100006dc, 8) , (unique, 0x100006e4, 8) , (unique, 0x100006ec, 8) , (unique, 0x100006f4, 8) , (unique, 0x100006fc, 8) , (unique, 0x10000704, 8)]
[ ---  CBRANCH (ram, 0x133fa4, 1) , (unique, 0x10000337, 1), (unique, 0x10000337, 1) INT_EQUAL (unique, 0x10000360, 1) , (const, 0x3a, 1), (unique, 0x10000360, 1) MULTIEQUAL (unique, 0xbb00, 1) , (register, 0x18, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x133fa4, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000360, 1) , (const, 0x0, 1)]
[(unique, 0x1000074c, 8) COPY (unique, 0x10000350, 8)]
[ ---  CBRANCH (ram, 0x1340a8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0x10000360, 1) , (const, 0x25, 1)]
[(unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1341d0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x4e, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x134110, 1) , (unique, 0xce80, 1), (unique, 0xce80, 1) INT_SLESS (const, 0x4e, 1) , (unique, 0xbb00, 1)]
[ ---  CBRANCH (ram, 0x1342b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x25, 1)]
[(unique, 0x1000064c, 8) COPY (unique, 0x10000350, 8)]
[ ---  CBRANCH (ram, 0x1345c2, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x10000348, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000338, 8) , (const, 0x1, 8)]
[(unique, 0x100004e4, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x1345d5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (unique, 0x10000348, 8)]
[(unique, 0x100004ec, 8) COPY (unique, 0x10000348, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000358, 8) , (const, 0x6ab, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000361, 8) , (const, 0x6ab, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (unique, 0x10000369, 4) , (const, 0x6ab, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000036d, 8) , (const, 0x6ab, 4)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0x10000350, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000348, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004e4, 8) , (unique, 0x100004ec, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000358, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x68c, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x25, 1), (unique, 0x3400, 8) CAST (unique, 0x10000764, 8), (unique, 0x10000764, 8) INT_ADD (unique, 0x1000075c, 8) , (unique, 0x10000338, 8), (unique, 0x1000075c, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000064c, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1340d3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x4c, 1)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000358, 8) , (const, 0x622, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000361, 8) , (const, 0x622, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (unique, 0x10000369, 4) , (const, 0x622, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000036d, 8) , (const, 0x622, 4)]
[(unique, 0x100005ac, 8) COPY (register, 0x10, 8)]
[(unique, 0x1000065c, 8) COPY (unique, 0x10000350, 8)]
[ ---  CBRANCH (ram, 0x134581, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x10000348, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000338, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x10, 8)]
[(unique, 0x100004ac, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x13459c, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3200, 8) , (unique, 0x10000348, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[(unique, 0x100004b4, 8) COPY (unique, 0x10000348, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x669, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x669, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x669, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x669, 4)]
[(register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0x10000350, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000348, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004ac, 8) , (unique, 0x100004b4, 8)]
[(unique, 0x1000057c, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x134230, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x6c, 1)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0x1000036d, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (unique, 0x10000369, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x10000361, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000358, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000574, 8) , (unique, 0x1000057c, 8)]
[(unique, 0x10000644, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000654, 8) , (unique, 0x10000350, 8)]
[ ---  CBRANCH (ram, 0x134240, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x100005a4, 8) , (unique, 0x10000338, 8), (register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (unique, 0x10000348, 8)]
[(unique, 0x100004bc, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x134283, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x100004c4, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x5b9, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5b9, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x5b9, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x5b9, 4)]
[(unique, 0x1000061c, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004bc, 8) , (unique, 0x100004c4, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x5d9, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10000774, 8), (unique, 0x10000774, 8) INT_ADD (unique, 0x1000076c, 8) , (register, 0x28, 8), (unique, 0x1000076c, 8) CAST (register, 0xb8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000644, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1342c2, 1) , (unique, 0x1000031f, 1), (unique, 0x1000031f, 1) BOOL_AND (register, 0x206, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x10000574, 8) COPY (register, 0x18, 8)]
[(unique, 0x100005a4, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000654, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1342c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x1000054c, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x134200, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x74, 1)]
[ ---  CBRANCH (ram, 0x134470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (register, 0x10, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x10000544, 8) , (unique, 0x1000054c, 8)]
[ ---  CBRANCH (ram, 0x134470, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1)]
[(unique, 0x10000564, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x10, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000594, 8) COPY (unique, 0x10000338, 8)]
[(unique, 0x10000634, 8) COPY (unique, 0x10000350, 8)]
[ ---  CBRANCH (ram, 0x1344a2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x5f, 1)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000358, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000564, 8) , (unique, 0x1000056c, 8)]
[(unique, 0x100005ec, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000634, 8) , (unique, 0x1000063c, 8)]
[ ---  CBRANCH (ram, 0x134480, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000594, 8) , (unique, 0x1000059c, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (register, 0xb0, 8)]
[(unique, 0x1000049c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x1344be, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x100004a4, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x549, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x549, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x549, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x549, 4)]
[(unique, 0x10000614, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000049c, 8) , (unique, 0x100004a4, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x569, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10000784, 8), (unique, 0x10000784, 8) INT_ADD (unique, 0x1000077c, 8) , (register, 0x28, 8), (unique, 0x1000077c, 8) CAST (register, 0xb8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100005ec, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1342c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000056c, 8) COPY (register, 0x18, 8)]
[(unique, 0x1000059c, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000063c, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1342c2, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x100006c4, 8) COPY (register, 0x10, 8), (register, 0x10, 8) MULTIEQUAL (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8) , (unique, 0x3100, 8)]
[(unique, 0x100006fc, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000734, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8) , (register, 0xb8, 8)]
[ ---  BRANCH (ram, 0x133f70, 1)]
[(unique, 0x10000544, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x134208, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x100006bc, 8) COPY (unique, 0x10000338, 8)]
[(unique, 0x100006f4, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x1000072c, 8) COPY (unique, 0x10000350, 8)]
[ ---  BRANCH (ram, 0x133f70, 1)]
[(unique, 0x100004d4, 8) COPY (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x134190, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x63, 1)]
[ ---  CBRANCH (ram, 0x133f6b, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[ ---  CBRANCH (ram, 0x1340f5, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1)]
[ ---  CBRANCH (ram, 0x1340f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0xa8, 8) MULTIEQUAL (unique, 0x3100, 8) , (register, 0xa8, 8)]
[ ---  CBRANCH (ram, 0x134102, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x3a, 1)]
[(unique, 0x100006ac, 8) COPY (register, 0x28, 8), (register, 0x28, 8) COPY (const, 0x0, 8)]
[(unique, 0x100006e4, 8) COPY (register, 0xa8, 8)]
[(unique, 0x1000071c, 8) COPY (unique, 0x10000350, 8)]
[ ---  BRANCH (ram, 0x133f70, 1)]
[ ---  CBRANCH (ram, 0x1341a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x0, 8), (register, 0x0, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x1, 8), (register, 0x0, 8) COPY (unique, 0x100004dc, 8), (unique, 0x100004dc, 8) MULTIEQUAL (unique, 0x100004cc, 8) , (unique, 0x100004d4, 8)]
[(unique, 0x100004cc, 8) COPY (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1341b0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[ ---  CBRANCH (ram, 0x1343f0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x2e, 1)]
[(unique, 0x10000554, 8) COPY (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x10000584, 8) COPY (unique, 0x10000338, 8)]
[ ---  BRANCH (ram, 0x134418, 1)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000358, 8) , (register, 0x110, 8)]
[(register, 0x18, 8) MULTIEQUAL (unique, 0x10000554, 8) , (unique, 0x1000055c, 8)]
[(unique, 0x100005d4, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000074c, 8) , (unique, 0x100005e4, 8)]
[ ---  CBRANCH (ram, 0x134400, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000584, 8) , (unique, 0x1000058c, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (register, 0xb0, 8)]
[(unique, 0x1000048c, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x134434, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x10000494, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x4a3, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4a3, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x4a3, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x4a3, 4)]
[(unique, 0x1000060c, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x1000048c, 8) , (unique, 0x10000494, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x4cf, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0xbb00, 1), (unique, 0x3400, 8) CAST (unique, 0x10000794, 8), (unique, 0x10000794, 8) INT_ADD (unique, 0x1000078c, 8) , (register, 0x28, 8), (unique, 0x1000078c, 8) CAST (register, 0xb8, 8), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100005d4, 8) , (register, 0x0, 8)]
[(unique, 0x1000055c, 8) COPY (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000058c, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100005e4, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100005d4, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1341b9, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x18, 8), (register, 0x18, 8) PTRADD (register, 0x18, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8) , (unique, 0x1000036d, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4) , (unique, 0x10000369, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8) , (unique, 0x10000361, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000358, 8) , (register, 0x110, 8) , (unique, 0x10000358, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (register, 0xb0, 8) , (unique, 0x10000348, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x100006b4, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000338, 8) , (unique, 0x3100, 8) , (unique, 0x10000338, 8)]
[(unique, 0x100006ec, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x10000724, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000350, 8) , (register, 0xb8, 8) , (unique, 0x10000350, 8)]
[ ---  BRANCH (ram, 0x133f70, 1)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000358, 8) , (const, 0x6c0, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000361, 8) , (const, 0x6c0, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (unique, 0x10000369, 4) , (const, 0x6c0, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000036d, 8) , (const, 0x6c0, 4)]
[(unique, 0x100005bc, 8) COPY (register, 0x38, 8)]
[ ---  CBRANCH (ram, 0x134540, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x10000348, 8) , (unique, 0x3b80, 8), (unique, 0x3b80, 8) INT_ADD (unique, 0x10000338, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(unique, 0x100004f4, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x13455b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3200, 8) , (unique, 0x10000348, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[(unique, 0x100004fc, 8) COPY (unique, 0x10000348, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x6fb, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x6fb, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x6fb, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x6fb, 4)]
[(register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0x10000350, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000348, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x100004f4, 8) , (unique, 0x100004fc, 8)]
[(unique, 0x10000427, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x3b80, 8)]
[(unique, 0x1000042f, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(unique, 0x10000438, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(unique, 0x10000448, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(unique, 0x10000458, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(unique, 0x10000460, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(unique, 0x10000464, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(unique, 0x100005b4, 8) COPY (unique, 0x10000450, 8), (unique, 0x10000450, 8) MULTIEQUAL (unique, 0x100005ac, 8) , (unique, 0x100005bc, 8)]
[(unique, 0x10000664, 8) COPY (unique, 0x10000440, 8), (unique, 0x10000440, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (unique, 0x10000437, 1), (unique, 0x10000437, 1) INT_EQUAL (unique, 0x10000440, 8) , (const, 0x0, 8), (unique, 0x10000440, 8) MULTIEQUAL (register, 0x0, 8) , (register, 0x0, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (unique, 0x1000042f, 8) , (unique, 0x10000348, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x63d, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (unique, 0x10000448, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x63d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (unique, 0x10000458, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x63d, 4), (stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (unique, 0x10000460, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x63d, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (unique, 0x10000464, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0x38, 8) , (register, 0x30, 8) , (register, 0x10, 8), (register, 0x38, 8) INT_ADD (unique, 0x1000079c, 8) , (unique, 0x10000338, 8), (unique, 0x1000079c, 8) CAST (register, 0xb8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x0, 8) , (unique, 0x10000438, 8) , (register, 0x0, 8), (register, 0x30, 8) MULTIEQUAL (unique, 0x100005ac, 8) , (unique, 0x100005b4, 8) , (unique, 0x100005bc, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000065c, 8) , (unique, 0x10000664, 8) , (unique, 0x10000350, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x2, 8) , (const, 0x1, 8)]
[(unique, 0x100006cc, 8) COPY (stack, 0xffffffffffffff28, 8), (stack, 0xffffffffffffff28, 8) MULTIEQUAL (unique, 0x3b80, 8) , (unique, 0x10000427, 8) , (unique, 0x3b80, 8)]
[(unique, 0x10000704, 8) COPY (unique, 0x3100, 8)]
[ ---  BRANCH (ram, 0x133f70, 1)]
[(unique, 0x1000066c, 8) COPY (unique, 0x10000350, 8)]
[ ---  CBRANCH (ram, 0x134160, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (unique, 0x10000348, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (unique, 0x10000338, 8) , (const, 0x1, 8)]
[(unique, 0x10000504, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x134173, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (unique, 0x10000348, 8)]
[(unique, 0x1000050c, 8) COPY (unique, 0x10000348, 8)]
[(register, 0x110, 8) INDIRECT (unique, 0x10000358, 8) , (const, 0x3c4, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (unique, 0x10000361, 8) , (const, 0x3c4, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (unique, 0x10000369, 4) , (const, 0x3c4, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (unique, 0x1000036d, 8) , (const, 0x3c4, 4)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (unique, 0x10000350, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (unique, 0x10000348, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000504, 8) , (unique, 0x1000050c, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000358, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xa2, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (unique, 0x10000360, 1), (unique, 0x3400, 8) CAST (unique, 0x100007ac, 8), (unique, 0x100007ac, 8) INT_ADD (unique, 0x100007a4, 8) , (unique, 0x10000338, 8), (unique, 0x100007a4, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000066c, 8) , (register, 0x0, 8)]
[(unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000069c, 8) COPY (unique, 0x3100, 8)]
[(unique, 0x100006d4, 8) COPY (register, 0xa8, 8), (register, 0xa8, 8) PTRADD (unique, 0x10000340, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x1000070c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000066c, 8) , (register, 0x0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x713, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x713, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x713, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x713, 4)]
[ ---  CBRANCH (ram, 0x1346f5, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESSEQUAL (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x18acf0, 8) , (register, 0x38, 8)]
[(unique, 0x10000514, 8) COPY (unique, 0x3200, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[ ---  CBRANCH (ram, 0x13470b, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (unique, 0x3200, 8) , (register, 0xb0, 8), (unique, 0x3200, 8) INT_ADD (register, 0x0, 8) , (const, 0x100, 8)]
[(unique, 0x1000051c, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x748, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x748, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x748, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x748, 4)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000514, 8) , (unique, 0x1000051c, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x728, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x728, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x728, 4), (stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x728, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CALL (ram, 0x193a40, 8) , (register, 0xb8, 8) , (register, 0x38, 8) , (register, 0x0, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000684, 8) , (register, 0x0, 8)]
[ ---  BRANCH (ram, 0x133fa4, 1)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (unique, 0x1000036d, 8) , (unique, 0x1000036d, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (unique, 0x10000369, 4) , (unique, 0x10000369, 4) , (stack, 0xffffffffffffff50, 4)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (unique, 0x10000361, 8) , (unique, 0x10000361, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x110, 8) MULTIEQUAL (unique, 0x10000358, 8) , (unique, 0x10000358, 8) , (register, 0x110, 8)]
[(register, 0xa8, 8) MULTIEQUAL (unique, 0x100005c4, 8) , (unique, 0x100005c4, 8) , (register, 0xa0, 8)]
[(unique, 0x1000067c, 8) COPY (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x10000350, 8) , (unique, 0x10000350, 8) , (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x1345fb, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESSEQUAL (register, 0xb0, 8) , (unique, 0x3100, 8), (unique, 0x3100, 8) INT_ADD (register, 0x28, 8) , (const, 0x1, 8), (register, 0x28, 8) MULTIEQUAL (unique, 0x10000338, 8) , (unique, 0x10000338, 8) , (register, 0x0, 8), (register, 0xb0, 8) MULTIEQUAL (unique, 0x10000348, 8) , (unique, 0x10000348, 8) , (register, 0xb0, 8)]
[(unique, 0x10000524, 8) COPY (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0x101, 8)]
[ ---  CBRANCH (ram, 0x13460e, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (const, 0x100, 8) , (register, 0xb0, 8)]
[(unique, 0x1000052c, 8) COPY (register, 0xb0, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x39c, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x39c, 4)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x39c, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x39c, 4)]
[(unique, 0x100005fc, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x133ff0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f7f0, 8) , (register, 0xb8, 8) , (register, 0xb0, 8), (register, 0xb0, 8) INT_ADD (register, 0xb0, 8) , (register, 0x0, 8), (register, 0x0, 8) MULTIEQUAL (unique, 0x10000524, 8) , (unique, 0x1000052c, 8)]
[(stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[(stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(register, 0xb0, 8) MULTIEQUAL (register, 0xb0, 8) , (register, 0xb0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0xd5, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x3400, 8) , (const, 0x0, 1), (unique, 0x3400, 8) CAST (unique, 0x100007bc, 8), (unique, 0x100007bc, 8) INT_ADD (unique, 0x100007b4, 8) , (register, 0x28, 8), (unique, 0x100007b4, 8) CAST (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x1000067c, 8) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x133fde, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x28, 8) , (const, 0x0, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  BRANCH (ram, 0x134030, 1)]
[(unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(unique, 0x100005f4, 8) COPY (register, 0xb8, 8)]
[ ---  CBRANCH (ram, 0x133f62, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0xa8, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xb8, 8), (register, 0xb8, 8) MULTIEQUAL (unique, 0x100005f4, 8) , (unique, 0x100005fc, 8) , (unique, 0x1000074c, 8) , (unique, 0x1000060c, 8) , (unique, 0x10000614, 8) , (unique, 0x1000061c, 8) , (unique, 0x1000074c, 8) , (unique, 0x1000074c, 8) , (register, 0xb8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x111, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (unique, 0x10000458, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (const, 0xffffffff, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(register, 0xb8, 8) COPY (const, 0x0, 8)]
[(register, 0xb8, 8) MULTIEQUAL (register, 0xb8, 8) , (register, 0xb8, 8)]
[(register, 0x110, 8) INDIRECT (register, 0x110, 8) , (const, 0x135, 4), (register, 0x110, 8) MULTIEQUAL (register, 0x110, 8) , (register, 0x110, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x135, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(stack, 0xffffffffffffff50, 4) INDIRECT (stack, 0xffffffffffffff50, 4) , (const, 0x135, 4), (stack, 0xffffffffffffff50, 4) MULTIEQUAL (stack, 0xffffffffffffff50, 4) , (stack, 0xffffffffffffff50, 4)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x135, 4), (stack, 0xffffffffffffff68, 8) MULTIEQUAL (stack, 0xffffffffffffff68, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CBRANCH (ram, 0x134465, 1) , (register, 0x207, 1), (register, 0x207, 1) INT_SLESS (register, 0x0, 4) , (const, 0x0, 4), (register, 0x0, 4) CALL (ram, 0x1f6370, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (unique, 0x3800, 8), (unique, 0x3800, 8) PTRSUB (register, 0x20, 8) , (const, 0xffffffffffffff38, 8)]
[ ---  CBRANCH (ram, 0x134069, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 4) , (const, 0x8000, 4), (register, 0x0, 4) INT_AND (stack, 0xffffffffffffff50, 4) , (const, 0xf000, 4)]
[ ---  CBRANCH (ram, 0x1342d8, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (unique, 0x100007c4, 8) , (const, 0xc, 8), (unique, 0x100007c4, 8) CAST (stack, 0xffffffffffffff68, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x16c, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007cc, 8) , (const, 0x16, 4), (unique, 0x100007cc, 8) CAST (unique, 0x4f00, 8), (unique, 0x4f00, 8) PTRADD (ram, 0x4c2e78, 8) , (register, 0x110, 8) , (const, 0x1, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007d4, 8) , (stack, 0xffffffffffffff68, 8), (unique, 0x100007d4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[(stack, 0xffffffffffffff68, 8) INDIRECT (stack, 0xffffffffffffff68, 8) , (const, 0x196, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a2, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x196, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x193, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007e4, 8) , (register, 0x0, 8), (unique, 0x100007e4, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) CAST (unique, 0x100007dc, 8), (unique, 0x100007dc, 8) CALL (ram, 0x200dc0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff68, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (const, 0x2, 4) , (const, 0x0, 8)]
[ ---  CBRANCH (ram, 0x13462a, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (register, 0x0, 8) , (const, 0xffffffffffffffff, 8), (register, 0x0, 8) CAST (unique, 0x100007dc, 8), (unique, 0x100007dc, 8) CALL (ram, 0x200dc0, 8) , (const, 0x0, 8) , (stack, 0xffffffffffffff68, 8) , (const, 0x1, 4) , (const, 0x2, 4) , (const, 0x2, 4) , (const, 0x0, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1a5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (register, 0x8, 8) , (const, 0x0, 4)]
[ ---  CBRANCH (ram, 0x1346ba, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0x960408de, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (register, 0x0, 8)]
[ ---  CBRANCH (ram, 0x1344e8, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbc80, 4) , (const, 0xde080496, 4)]
[(register, 0x8, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2d5, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007ec, 8) , (register, 0x10, 8), (unique, 0x100007ec, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (register, 0x10, 4), (register, 0x10, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1bb80, 4), (unique, 0x1bb80, 4) INT_LEFT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1ba00, 4), (unique, 0x1ba00, 4) INT_LEFT (unique, 0x1b980, 4) , (const, 0x8, 4), (unique, 0x1b980, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff00, 4), (unique, 0x1b780, 4) INT_OR (unique, 0x1b780, 4) , (unique, 0x1b880, 4), (unique, 0x1b880, 4) INT_RIGHT (unique, 0x1b800, 4) , (const, 0x8, 4), (unique, 0x1b800, 4) INT_AND (unique, 0xbc80, 4) , (const, 0xff0000, 4), (unique, 0x1b780, 4) INT_RIGHT (unique, 0xbc80, 4) , (const, 0x18, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x134332, 1)]
[(unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x2, 8) , (const, 0x4, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1cd, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x100007f8, 8) , (register, 0x10, 8), (unique, 0x100007f8, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x2, 8) , (const, 0x4, 8), (register, 0x10, 8) INT_ZEXT (unique, 0x100007f4, 4), (unique, 0x100007f4, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x1, 8) , (const, 0x4, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000800, 8) , (register, 0x8, 8), (unique, 0x10000800, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x4, 8) , (const, 0x4, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000302, 4), (unique, 0x10000302, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(register, 0x8, 8) COPY (const, 0x0, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000808, 8) , (unique, 0x3100, 8), (unique, 0x10000808, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x6, 8) , (const, 0x4, 8), (unique, 0x3100, 8) PTRADD (register, 0x0, 8) , (const, 0x3, 8) , (const, 0x4, 8)]
[(unique, 0x10000306, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000302, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (unique, 0x10000302, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1fd, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1e7, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x1da, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x10000810, 8) , (unique, 0x3a00, 8), (unique, 0x10000810, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0x8, 8) , (const, 0x4, 8), (unique, 0x3a00, 8) PTRADD (register, 0x0, 8) , (unique, 0x100003d7, 8) , (const, 0x4, 8), (unique, 0x100003d7, 8) INT_ADD (unique, 0x100003cf, 8) , (const, 0x3, 8), (unique, 0x100003cf, 8) INT_MULT (register, 0x10, 8) , (const, 0x6, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000302, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (unique, 0x10000302, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[ ---  CBRANCH (ram, 0x134373, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (const, 0x2, 8) , (unique, 0x10000818, 8), (unique, 0x10000818, 8) CAST (unique, 0x10000216, 8), (unique, 0x10000216, 8) INT_MULT (register, 0x10, 8) , (const, 0x3, 8), (register, 0x10, 8) INT_MULT (register, 0x10, 8) , (register, 0x8, 8), (register, 0x8, 8) INT_ZEXT (unique, 0x10000302, 4), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8), (unique, 0x10000302, 4) MULTIEQUAL (unique, 0xbc80, 4) , (register, 0x8, 4)]
[(register, 0x10, 8) COPY (const, 0x2, 8)]
[(unique, 0x10000534, 8) COPY (register, 0x8, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x13436a, 1) , (register, 0x200, 1), (register, 0x200, 1) INT_LESS (register, 0x8, 8) , (register, 0x30, 8), (register, 0x30, 8) INT_ZEXT (unique, 0x10000820, 4), (unique, 0x10000820, 4) CAST (unique, 0xbc80, 4), (unique, 0xbc80, 4) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) PTRADD (unique, 0x3100, 8) , (register, 0x10, 8) , (const, 0x4, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8), (register, 0x10, 8) MULTIEQUAL (register, 0x10, 8) , (register, 0x10, 8)]
[(unique, 0x1000053c, 8) COPY (register, 0x30, 8)]
[(register, 0x8, 8) MULTIEQUAL (unique, 0x10000534, 8) , (unique, 0x1000053c, 8)]
[ ---  CBRANCH (ram, 0x134360, 1) , (unique, 0xc800, 1), (unique, 0xc800, 1) INT_LESS (register, 0x10, 8) , (unique, 0x10000824, 8), (unique, 0x10000824, 8) CAST (unique, 0x10000216, 8), (register, 0x10, 8) INT_ADD (register, 0x10, 8) , (const, 0x3, 8)]
[ ---  CBRANCH (ram, 0x1344e8, 1) , (unique, 0xc780, 1), (unique, 0xc780, 1) INT_LESS (unique, 0x3a00, 8) , (unique, 0x1000082c, 8), (unique, 0x1000082c, 8) CAST (stack, 0xffffffffffffff68, 8), (unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000306, 8), (unique, 0x3880, 8) INT_ADD (register, 0x8, 8) , (const, 0xc, 8), (register, 0x8, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[(unique, 0x3a00, 8) INT_ADD (unique, 0x3880, 8) , (unique, 0x10000306, 8), (unique, 0x3880, 8) INT_SUB (stack, 0xffffffffffffff68, 8) , (const, 0xd, 8)]
[ ---  CBRANCH (ram, 0x1343b3, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (unique, 0x3400, 8), (unique, 0x3400, 8) CAST (unique, 0x1000083c, 8), (unique, 0x1000083c, 8) INT_ADD (unique, 0x10000834, 8) , (register, 0x8, 8), (unique, 0x10000834, 8) CAST (unique, 0x3a00, 8)]
[(register, 0x8, 8) INT_ADD (register, 0x8, 8) , (unique, 0x3a00, 8)]
[(unique, 0x1000046c, 8) MULTIEQUAL (unique, 0x3400, 8) , (register, 0x10, 8)]
[ ---  CBRANCH (ram, 0x1343aa, 1) , (unique, 0x1000047c, 1), (unique, 0x1000047c, 1) INT_NOTEQUAL (unique, 0x10000474, 8) , (const, 0x0, 8), (unique, 0x10000474, 8) MULTIEQUAL (register, 0x8, 8) , (register, 0x8, 8)]
[ ---  CBRANCH (ram, 0x1343a0, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_EQUAL (unique, 0xbb00, 1) , (const, 0x0, 1), (unique, 0xbb00, 1) LOAD (const, 0x1b1, 4) , (register, 0x10, 8), (register, 0x10, 8) PTRADD (unique, 0x1000046c, 8) , (const, 0x1, 8) , (const, 0x1, 8)]
[(register, 0x28, 8) COPY (const, 0x0, 8)]
[ ---  BRANCH (ram, 0x13407c, 1)]
[(register, 0x8, 8) INT_ADD (unique, 0x10000474, 8) , (const, 0xffffffffffffffff, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x26d, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  CALL (ram, 0x200e80, 8) , (register, 0x0, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000844, 8), (unique, 0x10000844, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xc, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x13407c, 1)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2ed, 4), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x2de, 4)]
[ ---  STORE (const, 0x1b1, 4) , (unique, 0x1000084c, 8) , (register, 0x0, 8), (unique, 0x1000084c, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CBRANCH (ram, 0x134465, 1) , (register, 0x206, 1), (register, 0x206, 1) INT_NOTEQUAL (register, 0x0, 8) , (const, 0x0, 8), (register, 0x0, 8) CALL (ram, 0x11f8a0, 8) , (stack, 0xffffffffffffff68, 8)]
[ ---  CALLOTHER (const, 0x5, 4)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[(ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x358, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (unique, 0xbd80, 8), (unique, 0xbd80, 8) LOAD (const, 0x1b1, 4) , (unique, 0x10000854, 8), (unique, 0x10000854, 8) CAST (unique, 0x3100, 8), (unique, 0x3100, 8) PTRADD (register, 0x8, 8) , (const, 0xa, 8) , (const, 0x4, 8)]
[ ---  BRANCH (ram, 0x13407c, 1)]
[(ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[(register, 0x28, 8) COPY (const, 0xffffffff, 8)]
[ ---  BRANCH (ram, 0x13407c, 1)]
[ ---  CALLOTHER (const, 0x5, 4)]
[ ---  CALL (ram, 0x11f8a8, 8) , (register, 0xb8, 8)]
[(ram, 0x4c2e78, 8) COPY (ram, 0x4c2e78, 8), (ram, 0x4c2e78, 8) INDIRECT (ram, 0x4c2e78, 8) , (const, 0x173, 4), (ram, 0x4c2e78, 8) MULTIEQUAL (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8) , (ram, 0x4c2e78, 8)]
[ ---  RETURN (const, 0x0, 8) , (register, 0x0, 8), (register, 0x0, 8) COPY (register, 0x28, 8), (register, 0x28, 8) MULTIEQUAL (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8) , (register, 0x28, 8)]
